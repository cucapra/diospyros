#include <float.h>
#include <math.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <xtensa/sim.h>
#include <xtensa/tie/xt_pdxn.h>
#include <xtensa/tie/xt_timer.h>
#include <xtensa/xt_profiling.h>

int __attribute__((section(".dram0.data"))) Z[4] = {0, 0, 0, 0};
float __attribute__((section(".dram0.data"))) v_0[4] = {0.0, 0, 0, 0};
int __attribute__((section(".dram0.data"))) v_1[4] = {0, 0, 4, 0};
int __attribute__((section(".dram0.data"))) v_1_0[4] = {0, 0, 4, 0};
int __attribute__((section(".dram0.data"))) v_3[4] = {0, 0, 8, 0};
int __attribute__((section(".dram0.data"))) v_3_0[4] = {0, 0, 4, 0};
int __attribute__((section(".dram0.data"))) v_6[4] = {0, 0, 6, 0};
int __attribute__((section(".dram0.data"))) v_6_0[4] = {0, 0, 6, 0};
int __attribute__((section(".dram0.data"))) v_8[4] = {0, 0, 10, 0};
int __attribute__((section(".dram0.data"))) v_8_0[4] = {0, 0, 6, 0};
int __attribute__((section(".dram0.data"))) v_13[4] = {4, 4, 0, 0};
int __attribute__((section(".dram0.data"))) v_13_0[4] = {0, 0, 4, 4};
int __attribute__((section(".dram0.data"))) v_15[4] = {8, 8, 0, 0};
int __attribute__((section(".dram0.data"))) v_15_0[4] = {0, 0, 4, 4};
int __attribute__((section(".dram0.data"))) v_18[4] = {6, 6, 0, 0};
int __attribute__((section(".dram0.data"))) v_18_0[4] = {2, 2, 4, 4};
int __attribute__((section(".dram0.data"))) v_20[4] = {10, 10, 0, 0};
int __attribute__((section(".dram0.data"))) v_20_0[4] = {2, 2, 4, 4};
int __attribute__((section(".dram0.data"))) v_27[4] = {0, 0, 5, 4};
int __attribute__((section(".dram0.data"))) v_27_0[4] = {0, 0, 5, 4};
int __attribute__((section(".dram0.data"))) v_29[4] = {0, 0, 9, 8};
int __attribute__((section(".dram0.data"))) v_29_0[4] = {0, 0, 5, 4};
int __attribute__((section(".dram0.data"))) v_32[4] = {0, 0, 7, 6};
int __attribute__((section(".dram0.data"))) v_32_0[4] = {0, 0, 7, 6};
int __attribute__((section(".dram0.data"))) v_34[4] = {0, 0, 11, 10};
int __attribute__((section(".dram0.data"))) v_34_0[4] = {0, 0, 7, 6};
int __attribute__((section(".dram0.data"))) v_41[4] = {0, 0, 0, 5};
int __attribute__((section(".dram0.data"))) v_41_0[4] = {0, 0, 0, 5};
int __attribute__((section(".dram0.data"))) v_43[4] = {0, 0, 0, 9};
int __attribute__((section(".dram0.data"))) v_43_0[4] = {0, 0, 0, 5};
int __attribute__((section(".dram0.data"))) v_46[4] = {0, 0, 0, 7};
int __attribute__((section(".dram0.data"))) v_46_0[4] = {0, 0, 0, 7};
int __attribute__((section(".dram0.data"))) v_48[4] = {0, 0, 0, 11};
int __attribute__((section(".dram0.data"))) v_48_0[4] = {0, 0, 0, 7};
int __attribute__((section(".dram0.data"))) v_56[4] = {0, 5, 5, 0};
int __attribute__((section(".dram0.data"))) v_56_0[4] = {0, 5, 5, 0};
int __attribute__((section(".dram0.data"))) v_58[4] = {0, 9, 9, 0};
int __attribute__((section(".dram0.data"))) v_58_0[4] = {0, 5, 5, 0};
int __attribute__((section(".dram0.data"))) v_61[4] = {5, 0, 0, 0};
int __attribute__((section(".dram0.data"))) v_61_0[4] = {1, 4, 4, 4};
int __attribute__((section(".dram0.data"))) v_63[4] = {9, 0, 0, 0};
int __attribute__((section(".dram0.data"))) v_63_0[4] = {1, 4, 4, 4};
int __attribute__((section(".dram0.data"))) v_41_1[4] = {0, 0, 0, 5};
int __attribute__((section(".dram0.data"))) v_69[4] = {7, 0, 7, 9};
int __attribute__((section(".dram0.data"))) v_69_0[4] = {0, 1, 2, 5};
int __attribute__((section(".dram0.data"))) v_69_0_0[4] = {3, 4, 3, 0};
int __attribute__((section(".dram0.data"))) v_90[4] = {0, 0, 4, 4};
int __attribute__((section(".dram0.data"))) v_90_0[4] = {0, 0, 4, 4};
int __attribute__((section(".dram0.data"))) v_92[4] = {0, 0, 8, 8};
int __attribute__((section(".dram0.data"))) v_92_0[4] = {0, 0, 4, 4};
int __attribute__((section(".dram0.data"))) v_97[4] = {0, 0, 6, 6};
int __attribute__((section(".dram0.data"))) v_97_0[4] = {0, 0, 6, 6};
int __attribute__((section(".dram0.data"))) v_99[4] = {0, 0, 10, 10};
int __attribute__((section(".dram0.data"))) v_99_0[4] = {0, 0, 6, 6};
int __attribute__((section(".dram0.data"))) v_97_1[4] = {0, 0, 6, 6};
int __attribute__((section(".dram0.data"))) v_99_1[4] = {0, 0, 6, 6};
int __attribute__((section(".dram0.data"))) v_18_1[4] = {2, 2, 4, 4};
int __attribute__((section(".dram0.data"))) v_20_1[4] = {2, 2, 4, 4};
int __attribute__((section(".dram0.data"))) v_144[4] = {0, 0, 5, 0};
int __attribute__((section(".dram0.data"))) v_144_0[4] = {0, 0, 5, 0};
int __attribute__((section(".dram0.data"))) v_146[4] = {0, 0, 9, 0};
int __attribute__((section(".dram0.data"))) v_146_0[4] = {0, 0, 5, 0};
int __attribute__((section(".dram0.data"))) v_144_1[4] = {0, 0, 5, 0};
int __attribute__((section(".dram0.data"))) v_146_1[4] = {0, 0, 5, 0};
int __attribute__((section(".dram0.data"))) v_164[4] = {0, 0, 7, 0};
int __attribute__((section(".dram0.data"))) v_164_0[4] = {0, 0, 7, 0};
int __attribute__((section(".dram0.data"))) v_166[4] = {0, 0, 11, 0};
int __attribute__((section(".dram0.data"))) v_166_0[4] = {0, 0, 7, 0};
int __attribute__((section(".dram0.data"))) v_164_1[4] = {0, 0, 7, 0};
int __attribute__((section(".dram0.data"))) v_166_1[4] = {0, 0, 7, 0};
int __attribute__((section(".dram0.data"))) v_186[4] = {0, 5, 0, 0};
int __attribute__((section(".dram0.data"))) v_186_0[4] = {0, 5, 0, 0};
int __attribute__((section(".dram0.data"))) v_188[4] = {0, 9, 0, 0};
int __attribute__((section(".dram0.data"))) v_188_0[4] = {0, 5, 0, 0};
int __attribute__((section(".dram0.data"))) v_186_1[4] = {0, 5, 0, 0};
int __attribute__((section(".dram0.data"))) v_188_1[4] = {0, 5, 0, 0};
int __attribute__((section(".dram0.data"))) v_43_1[4] = {0, 0, 0, 5};
int __attribute__((section(".dram0.data"))) v_239[4] = {0, 7, 5, 0};
int __attribute__((section(".dram0.data"))) v_239_0[4] = {0, 7, 5, 0};
int __attribute__((section(".dram0.data"))) v_46_1[4] = {0, 0, 0, 7};
int __attribute__((section(".dram0.data"))) v_244[4] = {0, 11, 9, 11};
int __attribute__((section(".dram0.data"))) v_244_0[4] = {0, 7, 5, 7};
int __attribute__((section(".dram0.data"))) v_61_1[4] = {1, 4, 4, 4};
int __attribute__((section(".dram0.data"))) v_63_1[4] = {1, 4, 4, 4};
int __attribute__((section(".dram0.data"))) v_282[4] = {7, 0, 7, 5};
int __attribute__((section(".dram0.data"))) v_282_0[4] = {3, 4, 3, 1};
int __attribute__((section(".dram0.data"))) v_284[4] = {11, 0, 11, 9};
int __attribute__((section(".dram0.data"))) v_284_0[4] = {3, 4, 3, 1};
int __attribute__((section(".dram0.data"))) v_290[4] = {0, 7, 7, 0};
int __attribute__((section(".dram0.data"))) v_290_0[4] = {0, 7, 7, 0};
int __attribute__((section(".dram0.data"))) v_48_1[4] = {0, 0, 0, 7};
int __attribute__((section(".dram0.data"))) v_301[4] = {7, 0, 0, 7};
int __attribute__((section(".dram0.data"))) v_301_0[4] = {3, 4, 4, 3};
int __attribute__((section(".dram0.data"))) v_1_1[4] = {0, 0, 4, 0};
int __attribute__((section(".dram0.data"))) v_3_1[4] = {0, 0, 4, 0};
int __attribute__((section(".dram0.data"))) v_6_1[4] = {0, 0, 6, 0};
int __attribute__((section(".dram0.data"))) v_8_1[4] = {0, 0, 6, 0};
int __attribute__((section(".dram0.data"))) v_27_1[4] = {0, 0, 5, 4};
int __attribute__((section(".dram0.data"))) v_29_1[4] = {0, 0, 5, 4};
int __attribute__((section(".dram0.data"))) v_32_1[4] = {0, 0, 7, 6};
int __attribute__((section(".dram0.data"))) v_34_1[4] = {0, 0, 7, 6};
int __attribute__((section(".dram0.data"))) v_13_1[4] = {0, 0, 4, 4};
int __attribute__((section(".dram0.data"))) v_348[4] = {8, 8, 5, 0};
int __attribute__((section(".dram0.data"))) v_348_0[4] = {0, 1, 2, 4};
int __attribute__((section(".dram0.data"))) v_348_0_0[4] = {0, 0, 5, 0};
int __attribute__((section(".dram0.data"))) v_353[4] = {10, 10, 9, 0};
int __attribute__((section(".dram0.data"))) v_353_0[4] = {2, 2, 1, 4};
int __attribute__((section(".dram0.data"))) v_372[4] = {0, 5, 0, 5};
int __attribute__((section(".dram0.data"))) v_372_0[4] = {0, 5, 0, 5};
int __attribute__((section(".dram0.data"))) v_374[4] = {0, 9, 7, 9};
int __attribute__((section(".dram0.data"))) v_374_0[4] = {0, 1, 7, 3};
int __attribute__((section(".dram0.data"))) v_374_0_0[4] = {0, 5, 0, 5};
int __attribute__((section(".dram0.data"))) v_90_1[4] = {0, 0, 4, 4};
int __attribute__((section(".dram0.data"))) v_92_1[4] = {0, 0, 4, 4};
int __attribute__((section(".dram0.data"))) v_15_1[4] = {0, 0, 4, 4};
int __attribute__((section(".dram0.data"))) v_540[4] = {0, 5, 7, 0};
int __attribute__((section(".dram0.data"))) v_540_0[4] = {0, 5, 7, 0};
int __attribute__((section(".dram0.data"))) v_542[4] = {0, 9, 11, 0};
int __attribute__((section(".dram0.data"))) v_542_0[4] = {0, 5, 7, 0};
int __attribute__((section(".dram0.data"))) v_575[4] = {5, 0, 0, 7};
int __attribute__((section(".dram0.data"))) v_575_0[4] = {1, 4, 4, 3};
int __attribute__((section(".dram0.data"))) v_577[4] = {9, 0, 0, 11};
int __attribute__((section(".dram0.data"))) v_577_0[4] = {1, 4, 4, 3};
int __attribute__((section(".dram0.data"))) v_583[4] = {7, 0, 0, 0};
int __attribute__((section(".dram0.data"))) v_583_0[4] = {3, 4, 4, 4};
int __attribute__((section(".dram0.data"))) v_585[4] = {11, 0, 0, 0};
int __attribute__((section(".dram0.data"))) v_585_0[4] = {3, 4, 4, 4};
int __attribute__((section(".dram0.data"))) v_591[4] = {7, 0, 7, 0};
int __attribute__((section(".dram0.data"))) v_591_0[4] = {3, 4, 3, 4};
int __attribute__((section(".dram0.data"))) v_594[4] = {0, 7, 0, 0};
int __attribute__((section(".dram0.data"))) v_594_0[4] = {0, 7, 0, 0};
int __attribute__((section(".dram0.data"))) v_596[4] = {0, 11, 0, 0};
int __attribute__((section(".dram0.data"))) v_596_0[4] = {0, 7, 0, 0};
int __attribute__((section(".dram0.data"))) v_602[4] = {0, 7, 0, 7};
int __attribute__((section(".dram0.data"))) v_602_0[4] = {0, 7, 0, 7};
void kernel(float *real_in, float *img_in, float *real_twid_in,
            float *img_twid_in, float *real_out, float *img_out) {
  float *__restrict real_in_mut = real_in;
  valign align_real_in;
  align_real_in = PDX_LA_MXF32_PP((xb_vecMxf32 *)real_in);
  float *__restrict img_in_mut = img_in;
  valign align_img_in;
  align_img_in = PDX_LA_MXF32_PP((xb_vecMxf32 *)img_in);
  float *__restrict real_twid_in_mut = real_twid_in;
  valign align_real_twid_in;
  align_real_twid_in = PDX_LA_MXF32_PP((xb_vecMxf32 *)real_twid_in);
  float *__restrict img_twid_in_mut = img_twid_in;
  valign align_img_twid_in;
  align_img_twid_in = PDX_LA_MXF32_PP((xb_vecMxf32 *)img_twid_in);
  float *__restrict real_out_mut = real_out;
  valign align_real_out = PDX_Z_ALIGN();
  float *__restrict img_out_mut = img_out;
  valign align_img_out = PDX_Z_ALIGN();
  xb_vecMxf32 real_in_0_4;
  PDX_LAV_MXF32_XP(real_in_0_4, align_real_in, (xb_vecMxf32 *)real_in_mut, 16);
  xb_vecMxf32 real_in_4_8;
  PDX_LAV_MXF32_XP(real_in_4_8, align_real_in, (xb_vecMxf32 *)real_in_mut, 16);
  xb_vecMxf32 img_in_0_4;
  PDX_LAV_MXF32_XP(img_in_0_4, align_img_in, (xb_vecMxf32 *)img_in_mut, 16);
  xb_vecMxf32 img_in_4_8;
  PDX_LAV_MXF32_XP(img_in_4_8, align_img_in, (xb_vecMxf32 *)img_in_mut, 16);
  xb_vecMxf32 v_2;
  v_2 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_1_0)));
  xb_vecMxf32 v_4;
  v_4 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_3_0)));
  xb_vecMxf32 v_5 = PDX_ADD_MXF32(v_2, v_4);
  xb_vecMxf32 v_7;
  v_7 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_6_0)));
  xb_vecMxf32 v_9;
  v_9 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_8_0)));
  xb_vecMxf32 v_10 = PDX_ADD_MXF32(v_7, v_9);
  xb_vecMxf32 v_11 = PDX_NEG_MXF32(v_10);
  xb_vecMxf32 v_12 = PDX_ADD_MXF32(v_5, v_11);
  xb_vecMxf32 v_14;
  v_14 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_0_4),
                   *((xb_vecMx32 *)v_13_0)));
  xb_vecMxf32 v_16;
  v_16 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_4_8),
                   *((xb_vecMx32 *)v_15_0)));
  xb_vecMxf32 v_17 = PDX_ADD_MXF32(v_14, v_16);
  xb_vecMxf32 v_19;
  v_19 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_0_4),
                   *((xb_vecMx32 *)v_18_0)));
  xb_vecMxf32 v_21;
  v_21 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_4_8),
                   *((xb_vecMx32 *)v_20_0)));
  xb_vecMxf32 v_22 = PDX_ADD_MXF32(v_19, v_21);
  xb_vecMxf32 v_23 = PDX_ADD_MXF32(v_17, v_22);
  float v_24 = 1;
  float v_25 = real_twid_in[2];
  float v_26_tmp[4] = {v_24, v_24, v_25, v_24};
  xb_vecMxf32 v_26 = *((xb_vecMxf32 *)v_26_tmp);
  xb_vecMxf32 v_28;
  v_28 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_27_0)));
  xb_vecMxf32 v_30;
  v_30 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_29_0)));
  xb_vecMxf32 v_31 = PDX_ADD_MXF32(v_28, v_30);
  xb_vecMxf32 v_33;
  v_33 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_32_0)));
  xb_vecMxf32 v_35;
  v_35 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_34_0)));
  xb_vecMxf32 v_36 = PDX_ADD_MXF32(v_33, v_35);
  xb_vecMxf32 v_37 = PDX_NEG_MXF32(v_36);
  xb_vecMxf32 v_38 = PDX_ADD_MXF32(v_31, v_37);
  xb_vecMxf32 v_39 = PDX_MUL_MXF32(v_26, v_38);
  float v_40_tmp[4] = {v_24, v_24, v_24, v_25};
  xb_vecMxf32 v_40 = *((xb_vecMxf32 *)v_40_tmp);
  xb_vecMxf32 v_42;
  v_42 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_41_0)));
  xb_vecMxf32 v_44;
  v_44 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_43_0)));
  xb_vecMxf32 v_45 = PDX_ADD_MXF32(v_42, v_44);
  xb_vecMxf32 v_47;
  v_47 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_46_0)));
  xb_vecMxf32 v_49;
  v_49 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_48_0)));
  xb_vecMxf32 v_50 = PDX_ADD_MXF32(v_47, v_49);
  xb_vecMxf32 v_51 = PDX_NEG_MXF32(v_50);
  xb_vecMxf32 v_52 = PDX_ADD_MXF32(v_45, v_51);
  xb_vecMxf32 v_53 = PDX_MUL_MXF32(v_40, v_52);
  float v_54 = img_twid_in[2];
  float v_55_tmp[4] = {v_24, v_24, v_54, v_24};
  xb_vecMxf32 v_55 = *((xb_vecMxf32 *)v_55_tmp);
  xb_vecMxf32 v_57;
  v_57 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_56_0)));
  xb_vecMxf32 v_59;
  v_59 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_58_0)));
  xb_vecMxf32 v_60 = PDX_ADD_MXF32(v_57, v_59);
  xb_vecMxf32 v_62;
  v_62 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_0_4),
                   *((xb_vecMx32 *)v_61_0)));
  xb_vecMxf32 v_64;
  v_64 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_4_8),
                   *((xb_vecMx32 *)v_63_0)));
  xb_vecMxf32 v_65 = PDX_ADD_MXF32(v_62, v_64);
  float v_66_tmp[4] = {v_24, v_24, v_24, v_54};
  xb_vecMxf32 v_66 = *((xb_vecMxf32 *)v_66_tmp);
  xb_vecMxf32 v_68;
  v_68 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_41_1)));
  xb_vecMxf32 v_70_tmp_0;
  v_70_tmp_0 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_0_4),
                   *((xb_vecMx32 *)v_69_0_0)));
  xb_vecMxf32 v_70;
  v_70 = PDX_MOV_MXF32_FROM_MX32(PDX_SEL_MX32(
      PDX_MOV_MX32_FROM_MXF32(real_in_4_8), PDX_MOV_MX32_FROM_MXF32(v_70_tmp_0),
      *((xb_vecMx32 *)v_69_0)));
  xb_vecMxf32 v_71 = PDX_ADD_MXF32(v_68, v_70);
  float v_72 = real_in[7];
  float v_73 = real_in[3];
  float v_74 = v_73 + v_72;
  float v_75 = (-(v_74));
  float v_76 = img_in[7];
  float v_77 = img_in[3];
  float v_78 = v_77 + v_76;
  float v_79 = (-(v_78));
  float v_80_tmp[4] = {v_72, v_75, v_76, v_79};
  xb_vecMxf32 v_80 = *((xb_vecMxf32 *)v_80_tmp);
  xb_vecMxf32 v_81 = PDX_ADD_MXF32(v_71, v_80);
  xb_vecMxf32 v_82 = v_65;
  PDX_MULA_MXF32(v_82, v_66, v_81);
  xb_vecMxf32 v_83 = PDX_NEG_MXF32(v_82);
  xb_vecMxf32 v_84 = PDX_ADD_MXF32(v_60, v_83);
  xb_vecMxf32 v_85 = v_53;
  PDX_MULA_MXF32(v_85, v_55, v_84);
  xb_vecMxf32 v_86 = PDX_NEG_MXF32(v_85);
  xb_vecMxf32 v_87 = PDX_ADD_MXF32(v_39, v_86);
  xb_vecMxf32 v_88 = PDX_ADD_MXF32(v_23, v_87);
  xb_vecMxf32 v_89 = PDX_ADD_MXF32(v_12, v_88);
  xb_vecMxf32 v_91;
  v_91 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_90_0)));
  xb_vecMxf32 v_93;
  v_93 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_92_0)));
  xb_vecMxf32 v_94 = PDX_NEG_MXF32(v_93);
  xb_vecMxf32 v_95 = PDX_ADD_MXF32(v_91, v_94);
  float v_96_tmp[4] = {v_24, v_24, v_25, v_25};
  xb_vecMxf32 v_96 = *((xb_vecMxf32 *)v_96_tmp);
  xb_vecMxf32 v_98;
  v_98 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_97_0)));
  xb_vecMxf32 v_100;
  v_100 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_99_0)));
  xb_vecMxf32 v_101 = PDX_NEG_MXF32(v_100);
  xb_vecMxf32 v_102 = PDX_ADD_MXF32(v_98, v_101);
  xb_vecMxf32 v_103 = PDX_MUL_MXF32(v_96, v_102);
  float v_104_tmp[4] = {v_24, v_24, v_54, v_54};
  xb_vecMxf32 v_104 = *((xb_vecMxf32 *)v_104_tmp);
  xb_vecMxf32 v_106;
  v_106 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_97_1)));
  xb_vecMxf32 v_108;
  v_108 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_99_1)));
  xb_vecMxf32 v_109 = PDX_NEG_MXF32(v_108);
  xb_vecMxf32 v_110 = PDX_ADD_MXF32(v_106, v_109);
  xb_vecMxf32 v_111 = PDX_MUL_MXF32(v_104, v_110);
  xb_vecMxf32 v_112 = PDX_NEG_MXF32(v_111);
  xb_vecMxf32 v_113 = PDX_ADD_MXF32(v_103, v_112);
  xb_vecMxf32 v_114 = PDX_NEG_MXF32(v_113);
  xb_vecMxf32 v_115 = PDX_ADD_MXF32(v_95, v_114);
  xb_vecMxf32 v_120 = PDX_NEG_MXF32(v_16);
  xb_vecMxf32 v_121 = PDX_ADD_MXF32(v_14, v_120);
  float v_122_tmp[4] = {v_25, v_25, v_24, v_24};
  xb_vecMxf32 v_122 = *((xb_vecMxf32 *)v_122_tmp);
  xb_vecMxf32 v_127 = PDX_NEG_MXF32(v_21);
  xb_vecMxf32 v_128 = PDX_ADD_MXF32(v_19, v_127);
  xb_vecMxf32 v_129 = PDX_MUL_MXF32(v_122, v_128);
  float v_130_tmp[4] = {v_54, v_54, v_24, v_24};
  xb_vecMxf32 v_130 = *((xb_vecMxf32 *)v_130_tmp);
  xb_vecMxf32 v_132;
  v_132 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_0_4),
                   *((xb_vecMx32 *)v_18_1)));
  xb_vecMxf32 v_134;
  v_134 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_4_8),
                   *((xb_vecMx32 *)v_20_1)));
  xb_vecMxf32 v_135 = PDX_NEG_MXF32(v_134);
  xb_vecMxf32 v_136 = PDX_ADD_MXF32(v_132, v_135);
  xb_vecMxf32 v_137 = PDX_MUL_MXF32(v_130, v_136);
  xb_vecMxf32 v_138 = PDX_NEG_MXF32(v_137);
  xb_vecMxf32 v_139 = PDX_ADD_MXF32(v_129, v_138);
  xb_vecMxf32 v_140 = PDX_ADD_MXF32(v_121, v_139);
  float v_142 = real_twid_in[1];
  float v_143_tmp[4] = {v_24, v_24, v_142, v_24};
  xb_vecMxf32 v_143 = *((xb_vecMxf32 *)v_143_tmp);
  xb_vecMxf32 v_145;
  v_145 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_144_0)));
  xb_vecMxf32 v_147;
  v_147 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_146_0)));
  xb_vecMxf32 v_148 = PDX_NEG_MXF32(v_147);
  xb_vecMxf32 v_149 = PDX_ADD_MXF32(v_145, v_148);
  xb_vecMxf32 v_150 = PDX_MUL_MXF32(v_143, v_149);
  float v_151 = img_twid_in[1];
  float v_152_tmp[4] = {v_24, v_24, v_151, v_24};
  xb_vecMxf32 v_152 = *((xb_vecMxf32 *)v_152_tmp);
  xb_vecMxf32 v_154;
  v_154 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_144_1)));
  xb_vecMxf32 v_156;
  v_156 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_146_1)));
  xb_vecMxf32 v_157 = PDX_NEG_MXF32(v_156);
  xb_vecMxf32 v_158 = PDX_ADD_MXF32(v_154, v_157);
  xb_vecMxf32 v_159 = PDX_MUL_MXF32(v_152, v_158);
  xb_vecMxf32 v_160 = PDX_NEG_MXF32(v_159);
  xb_vecMxf32 v_161 = PDX_ADD_MXF32(v_150, v_160);
  float v_162 = real_twid_in[3];
  float v_163_tmp[4] = {v_24, v_24, v_162, v_24};
  xb_vecMxf32 v_163 = *((xb_vecMxf32 *)v_163_tmp);
  xb_vecMxf32 v_165;
  v_165 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_164_0)));
  xb_vecMxf32 v_167;
  v_167 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_166_0)));
  xb_vecMxf32 v_168 = PDX_NEG_MXF32(v_167);
  xb_vecMxf32 v_169 = PDX_ADD_MXF32(v_165, v_168);
  xb_vecMxf32 v_170 = PDX_MUL_MXF32(v_163, v_169);
  float v_171 = img_twid_in[3];
  float v_172_tmp[4] = {v_24, v_24, v_171, v_24};
  xb_vecMxf32 v_172 = *((xb_vecMxf32 *)v_172_tmp);
  xb_vecMxf32 v_174;
  v_174 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_164_1)));
  xb_vecMxf32 v_176;
  v_176 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_166_1)));
  xb_vecMxf32 v_177 = PDX_NEG_MXF32(v_176);
  xb_vecMxf32 v_178 = PDX_ADD_MXF32(v_174, v_177);
  xb_vecMxf32 v_179 = PDX_MUL_MXF32(v_172, v_178);
  xb_vecMxf32 v_180 = PDX_NEG_MXF32(v_179);
  xb_vecMxf32 v_181 = PDX_ADD_MXF32(v_170, v_180);
  xb_vecMxf32 v_182 = PDX_NEG_MXF32(v_181);
  xb_vecMxf32 v_183 = PDX_ADD_MXF32(v_161, v_182);
  xb_vecMxf32 v_184 = PDX_MUL_MXF32(v_26, v_183);
  float v_185_tmp[4] = {v_24, v_142, v_24, v_24};
  xb_vecMxf32 v_185 = *((xb_vecMxf32 *)v_185_tmp);
  xb_vecMxf32 v_187;
  v_187 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_186_0)));
  xb_vecMxf32 v_189;
  v_189 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_188_0)));
  xb_vecMxf32 v_190 = PDX_NEG_MXF32(v_189);
  xb_vecMxf32 v_191 = PDX_ADD_MXF32(v_187, v_190);
  xb_vecMxf32 v_192 = PDX_MUL_MXF32(v_185, v_191);
  float v_193_tmp[4] = {v_24, v_151, v_24, v_24};
  xb_vecMxf32 v_193 = *((xb_vecMxf32 *)v_193_tmp);
  xb_vecMxf32 v_195;
  v_195 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_186_1)));
  xb_vecMxf32 v_197;
  v_197 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_188_1)));
  xb_vecMxf32 v_198 = PDX_NEG_MXF32(v_197);
  xb_vecMxf32 v_199 = PDX_ADD_MXF32(v_195, v_198);
  xb_vecMxf32 v_200 = PDX_MUL_MXF32(v_193, v_199);
  xb_vecMxf32 v_201 = PDX_NEG_MXF32(v_200);
  xb_vecMxf32 v_202 = PDX_ADD_MXF32(v_192, v_201);
  xb_vecMxf32 v_211 = PDX_MUL_MXF32(v_143, v_158);
  float v_212_tmp[4] = {v_24, v_162, v_151, v_25};
  xb_vecMxf32 v_212 = *((xb_vecMxf32 *)v_212_tmp);
  float v_213_tmp[4] = {v_24, v_24, v_24, v_142};
  xb_vecMxf32 v_213 = *((xb_vecMxf32 *)v_213_tmp);
  xb_vecMxf32 v_218 = PDX_NEG_MXF32(v_44);
  xb_vecMxf32 v_219 = PDX_ADD_MXF32(v_42, v_218);
  xb_vecMxf32 v_220 = PDX_MUL_MXF32(v_213, v_219);
  float v_221_tmp[4] = {v_24, v_24, v_24, v_151};
  xb_vecMxf32 v_221 = *((xb_vecMxf32 *)v_221_tmp);
  xb_vecMxf32 v_225;
  v_225 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_43_1)));
  xb_vecMxf32 v_226 = PDX_NEG_MXF32(v_225);
  xb_vecMxf32 v_227 = PDX_ADD_MXF32(v_68, v_226);
  xb_vecMxf32 v_228 = PDX_MUL_MXF32(v_221, v_227);
  xb_vecMxf32 v_229 = PDX_NEG_MXF32(v_228);
  xb_vecMxf32 v_230 = PDX_ADD_MXF32(v_220, v_229);
  float v_231_tmp[4] = {v_24, v_24, v_24, v_162};
  xb_vecMxf32 v_231 = *((xb_vecMxf32 *)v_231_tmp);
  xb_vecMxf32 v_236 = PDX_NEG_MXF32(v_49);
  xb_vecMxf32 v_237 = PDX_ADD_MXF32(v_47, v_236);
  xb_vecMxf32 v_238 = PDX_MUL_MXF32(v_231, v_237);
  xb_vecMxf32 v_240;
  v_240 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_239_0)));
  float v_241_tmp[4] = {v_24, v_24, v_24, v_171};
  xb_vecMxf32 v_241 = *((xb_vecMxf32 *)v_241_tmp);
  xb_vecMxf32 v_243;
  v_243 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_46_1)));
  xb_vecMxf32 v_245;
  v_245 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_244_0)));
  xb_vecMxf32 v_246 = PDX_NEG_MXF32(v_245);
  xb_vecMxf32 v_247 = PDX_ADD_MXF32(v_243, v_246);
  xb_vecMxf32 v_248 = v_240;
  PDX_MULA_MXF32(v_248, v_241, v_247);
  xb_vecMxf32 v_249 = PDX_NEG_MXF32(v_248);
  xb_vecMxf32 v_250 = PDX_ADD_MXF32(v_238, v_249);
  xb_vecMxf32 v_251 = PDX_NEG_MXF32(v_250);
  xb_vecMxf32 v_252 = PDX_ADD_MXF32(v_230, v_251);
  xb_vecMxf32 v_253 = v_211;
  PDX_MULA_MXF32(v_253, v_212, v_252);
  float v_254_tmp[4] = {v_142, v_24, v_24, v_24};
  xb_vecMxf32 v_254 = *((xb_vecMxf32 *)v_254_tmp);
  xb_vecMxf32 v_259 = PDX_NEG_MXF32(v_64);
  xb_vecMxf32 v_260 = PDX_ADD_MXF32(v_62, v_259);
  xb_vecMxf32 v_261 = PDX_MUL_MXF32(v_254, v_260);
  float v_262_tmp[4] = {v_151, v_24, v_24, v_24};
  xb_vecMxf32 v_262 = *((xb_vecMxf32 *)v_262_tmp);
  xb_vecMxf32 v_264;
  v_264 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_0_4),
                   *((xb_vecMx32 *)v_61_1)));
  xb_vecMxf32 v_266;
  v_266 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_4_8),
                   *((xb_vecMx32 *)v_63_1)));
  xb_vecMxf32 v_267 = PDX_NEG_MXF32(v_266);
  xb_vecMxf32 v_268 = PDX_ADD_MXF32(v_264, v_267);
  xb_vecMxf32 v_269 = PDX_MUL_MXF32(v_262, v_268);
  xb_vecMxf32 v_270 = PDX_NEG_MXF32(v_269);
  xb_vecMxf32 v_271 = PDX_ADD_MXF32(v_261, v_270);
  float v_272_tmp[4] = {v_24, v_171, v_24, v_54};
  xb_vecMxf32 v_272 = *((xb_vecMxf32 *)v_272_tmp);
  xb_vecMxf32 v_280 = PDX_MUL_MXF32(v_213, v_227);
  float v_281_tmp[4] = {v_162, v_24, v_162, v_151};
  xb_vecMxf32 v_281 = *((xb_vecMxf32 *)v_281_tmp);
  xb_vecMxf32 v_283;
  v_283 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_0_4),
                   *((xb_vecMx32 *)v_282_0)));
  xb_vecMxf32 v_285;
  v_285 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_4_8),
                   *((xb_vecMx32 *)v_284_0)));
  xb_vecMxf32 v_286 = PDX_NEG_MXF32(v_285);
  xb_vecMxf32 v_287 = PDX_ADD_MXF32(v_283, v_286);
  xb_vecMxf32 v_288 = v_280;
  PDX_MULA_MXF32(v_288, v_281, v_287);
  xb_vecMxf32 v_291;
  v_291 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_290_0)));
  xb_vecMxf32 v_296;
  v_296 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_48_1)));
  xb_vecMxf32 v_297 = PDX_NEG_MXF32(v_296);
  xb_vecMxf32 v_298 = PDX_ADD_MXF32(v_243, v_297);
  xb_vecMxf32 v_299 = PDX_MUL_MXF32(v_231, v_298);
  float v_300_tmp[4] = {v_171, v_24, v_24, v_171};
  xb_vecMxf32 v_300 = *((xb_vecMxf32 *)v_300_tmp);
  xb_vecMxf32 v_302;
  v_302 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_0_4),
                   *((xb_vecMx32 *)v_301_0)));
  float v_303 = (-(v_76));
  float v_304 = (-(v_72));
  float v_305_tmp[4] = {v_303, v_76, v_72, v_304};
  xb_vecMxf32 v_305 = *((xb_vecMxf32 *)v_305_tmp);
  xb_vecMxf32 v_306 = PDX_ADD_MXF32(v_302, v_305);
  xb_vecMxf32 v_307 = v_299;
  PDX_MULA_MXF32(v_307, v_300, v_306);
  xb_vecMxf32 v_308 = PDX_NEG_MXF32(v_307);
  xb_vecMxf32 v_309 = PDX_ADD_MXF32(v_291, v_308);
  xb_vecMxf32 v_310 = v_288;
  PDX_MULA_MXF32(v_310, v_172, v_309);
  xb_vecMxf32 v_311 = v_271;
  PDX_MULA_MXF32(v_311, v_272, v_310);
  xb_vecMxf32 v_312 = PDX_NEG_MXF32(v_311);
  xb_vecMxf32 v_313 = PDX_ADD_MXF32(v_253, v_312);
  xb_vecMxf32 v_314 = v_202;
  PDX_MULA_MXF32(v_314, v_55, v_313);
  xb_vecMxf32 v_315 = PDX_NEG_MXF32(v_314);
  xb_vecMxf32 v_316 = PDX_ADD_MXF32(v_184, v_315);
  xb_vecMxf32 v_317 = PDX_ADD_MXF32(v_140, v_316);
  xb_vecMxf32 v_318 = PDX_ADD_MXF32(v_115, v_317);
  xb_vecMxf32 v_320;
  v_320 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_1_1)));
  xb_vecMxf32 v_322;
  v_322 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_3_1)));
  xb_vecMxf32 v_323 = PDX_ADD_MXF32(v_320, v_322);
  xb_vecMxf32 v_325;
  v_325 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_6_1)));
  xb_vecMxf32 v_327;
  v_327 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_8_1)));
  xb_vecMxf32 v_328 = PDX_ADD_MXF32(v_325, v_327);
  xb_vecMxf32 v_329 = PDX_NEG_MXF32(v_328);
  xb_vecMxf32 v_330 = PDX_ADD_MXF32(v_323, v_329);
  xb_vecMxf32 v_333;
  v_333 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_27_1)));
  xb_vecMxf32 v_335;
  v_335 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_29_1)));
  xb_vecMxf32 v_336 = PDX_ADD_MXF32(v_333, v_335);
  xb_vecMxf32 v_338;
  v_338 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_32_1)));
  xb_vecMxf32 v_340;
  v_340 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_34_1)));
  xb_vecMxf32 v_341 = PDX_ADD_MXF32(v_338, v_340);
  xb_vecMxf32 v_342 = PDX_NEG_MXF32(v_341);
  xb_vecMxf32 v_343 = PDX_ADD_MXF32(v_336, v_342);
  xb_vecMxf32 v_344 = PDX_MUL_MXF32(v_26, v_343);
  xb_vecMxf32 v_347;
  v_347 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_0_4),
                   *((xb_vecMx32 *)v_13_1)));
  xb_vecMxf32 v_349_tmp_0;
  v_349_tmp_0 = PDX_MOV_MXF32_FROM_MX32(PDX_SEL_MX32(
      PDX_MOV_MX32_FROM_MXF32(img_in_0_4), PDX_MOV_MX32_FROM_MXF32(img_in_4_8),
      *((xb_vecMx32 *)v_348_0_0)));
  xb_vecMxf32 v_349;
  v_349 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(v_349_tmp_0),
                   *((xb_vecMx32 *)v_348_0)));
  xb_vecMxf32 v_350 = PDX_ADD_MXF32(v_347, v_349);
  xb_vecMxf32 v_354;
  v_354 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_4_8),
                   *((xb_vecMx32 *)v_353_0)));
  xb_vecMxf32 v_355 = PDX_ADD_MXF32(v_132, v_354);
  xb_vecMxf32 v_356 = PDX_ADD_MXF32(v_350, v_355);
  xb_vecMxf32 v_362 = PDX_ADD_MXF32(v_68, v_225);
  xb_vecMxf32 v_367 = PDX_ADD_MXF32(v_243, v_296);
  xb_vecMxf32 v_368 = PDX_NEG_MXF32(v_367);
  xb_vecMxf32 v_369 = PDX_ADD_MXF32(v_362, v_368);
  xb_vecMxf32 v_370 = PDX_MUL_MXF32(v_40, v_369);
  xb_vecMxf32 v_373;
  v_373 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_372_0)));
  xb_vecMxf32 v_375_tmp_0;
  v_375_tmp_0 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_374_0_0)));
  xb_vecMxf32 v_375;
  v_375 = PDX_MOV_MXF32_FROM_MX32(PDX_SEL_MX32(
      PDX_MOV_MX32_FROM_MXF32(img_in_0_4), PDX_MOV_MX32_FROM_MXF32(v_375_tmp_0),
      *((xb_vecMx32 *)v_374_0)));
  xb_vecMxf32 v_376 = PDX_ADD_MXF32(v_373, v_375);
  float v_377 = img_in[1];
  float v_378 = img_in[5];
  float v_379 = v_377 + v_378;
  float v_381 = v_379 + v_78;
  float v_382 = (-(v_381));
  float v_386_tmp[4] = {v_382, v_78, v_72, v_75};
  xb_vecMxf32 v_386 = *((xb_vecMxf32 *)v_386_tmp);
  xb_vecMxf32 v_387 = PDX_ADD_MXF32(v_376, v_386);
  xb_vecMxf32 v_388 = v_370;
  PDX_MULA_MXF32(v_388, v_66, v_387);
  xb_vecMxf32 v_389 = PDX_NEG_MXF32(v_388);
  xb_vecMxf32 v_390 = PDX_ADD_MXF32(v_356, v_389);
  xb_vecMxf32 v_391 = v_344;
  PDX_MULA_MXF32(v_391, v_55, v_390);
  xb_vecMxf32 v_392 = PDX_ADD_MXF32(v_330, v_391);
  xb_vecMxf32 v_394;
  v_394 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_90_1)));
  xb_vecMxf32 v_396;
  v_396 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_92_1)));
  xb_vecMxf32 v_397 = PDX_NEG_MXF32(v_396);
  xb_vecMxf32 v_398 = PDX_ADD_MXF32(v_394, v_397);
  xb_vecMxf32 v_406 = PDX_MUL_MXF32(v_96, v_110);
  xb_vecMxf32 v_414 = v_406;
  PDX_MULA_MXF32(v_414, v_104, v_102);
  xb_vecMxf32 v_415 = PDX_NEG_MXF32(v_414);
  xb_vecMxf32 v_416 = PDX_ADD_MXF32(v_398, v_415);
  xb_vecMxf32 v_433 = v_211;
  PDX_MULA_MXF32(v_433, v_152, v_149);
  xb_vecMxf32 v_441 = PDX_MUL_MXF32(v_163, v_178);
  xb_vecMxf32 v_449 = v_441;
  PDX_MULA_MXF32(v_449, v_172, v_169);
  xb_vecMxf32 v_450 = PDX_NEG_MXF32(v_449);
  xb_vecMxf32 v_451 = PDX_ADD_MXF32(v_433, v_450);
  xb_vecMxf32 v_452 = PDX_MUL_MXF32(v_26, v_451);
  xb_vecMxf32 v_456;
  v_456 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_4_8),
                   *((xb_vecMx32 *)v_15_1)));
  xb_vecMxf32 v_457 = PDX_NEG_MXF32(v_456);
  xb_vecMxf32 v_458 = PDX_ADD_MXF32(v_347, v_457);
  xb_vecMxf32 v_466 = PDX_MUL_MXF32(v_122, v_136);
  xb_vecMxf32 v_474 = v_466;
  PDX_MULA_MXF32(v_474, v_130, v_128);
  xb_vecMxf32 v_475 = PDX_ADD_MXF32(v_458, v_474);
  xb_vecMxf32 v_511 = v_280;
  PDX_MULA_MXF32(v_511, v_221, v_219);
  xb_vecMxf32 v_527 = v_299;
  PDX_MULA_MXF32(v_527, v_241, v_237);
  xb_vecMxf32 v_528 = PDX_NEG_MXF32(v_527);
  xb_vecMxf32 v_529 = PDX_ADD_MXF32(v_511, v_528);
  xb_vecMxf32 v_530 = PDX_MUL_MXF32(v_40, v_529);
  xb_vecMxf32 v_538 = PDX_MUL_MXF32(v_185, v_199);
  float v_539_tmp[4] = {v_24, v_151, v_162, v_24};
  xb_vecMxf32 v_539 = *((xb_vecMxf32 *)v_539_tmp);
  xb_vecMxf32 v_541;
  v_541 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_540_0)));
  xb_vecMxf32 v_543;
  v_543 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_542_0)));
  xb_vecMxf32 v_544 = PDX_NEG_MXF32(v_543);
  xb_vecMxf32 v_545 = PDX_ADD_MXF32(v_541, v_544);
  xb_vecMxf32 v_546 = v_538;
  PDX_MULA_MXF32(v_546, v_539, v_545);
  xb_vecMxf32 v_573 = PDX_MUL_MXF32(v_254, v_268);
  float v_574_tmp[4] = {v_151, v_24, v_24, v_162};
  xb_vecMxf32 v_574 = *((xb_vecMxf32 *)v_574_tmp);
  xb_vecMxf32 v_576;
  v_576 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_0_4),
                   *((xb_vecMx32 *)v_575_0)));
  xb_vecMxf32 v_578;
  v_578 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_4_8),
                   *((xb_vecMx32 *)v_577_0)));
  xb_vecMxf32 v_579 = PDX_NEG_MXF32(v_578);
  xb_vecMxf32 v_580 = PDX_ADD_MXF32(v_576, v_579);
  xb_vecMxf32 v_581 = v_573;
  PDX_MULA_MXF32(v_581, v_574, v_580);
  float v_582_tmp[4] = {v_162, v_24, v_24, v_24};
  xb_vecMxf32 v_582 = *((xb_vecMxf32 *)v_582_tmp);
  xb_vecMxf32 v_584;
  v_584 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_0_4),
                   *((xb_vecMx32 *)v_583_0)));
  xb_vecMxf32 v_586;
  v_586 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(img_in_4_8),
                   *((xb_vecMx32 *)v_585_0)));
  xb_vecMxf32 v_587 = PDX_NEG_MXF32(v_586);
  xb_vecMxf32 v_588 = PDX_ADD_MXF32(v_584, v_587);
  xb_vecMxf32 v_589 = PDX_MUL_MXF32(v_582, v_588);
  float v_590_tmp[4] = {v_171, v_24, v_171, v_24};
  xb_vecMxf32 v_590 = *((xb_vecMxf32 *)v_590_tmp);
  xb_vecMxf32 v_592;
  v_592 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(*((xb_vecMxf32 *)v_0), PDX_MOV_MX32_FROM_MXF32(real_in_0_4),
                   *((xb_vecMx32 *)v_591_0)));
  float v_593_tmp[4] = {v_24, v_162, v_24, v_24};
  xb_vecMxf32 v_593 = *((xb_vecMxf32 *)v_593_tmp);
  xb_vecMxf32 v_595;
  v_595 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_594_0)));
  xb_vecMxf32 v_597;
  v_597 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(img_in_4_8), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_596_0)));
  xb_vecMxf32 v_598 = PDX_NEG_MXF32(v_597);
  xb_vecMxf32 v_599 = PDX_ADD_MXF32(v_595, v_598);
  xb_vecMxf32 v_600 = PDX_MUL_MXF32(v_593, v_599);
  float v_601_tmp[4] = {v_24, v_171, v_24, v_171};
  xb_vecMxf32 v_601 = *((xb_vecMxf32 *)v_601_tmp);
  xb_vecMxf32 v_603;
  v_603 = PDX_MOV_MXF32_FROM_MX32(
      PDX_SEL_MX32(PDX_MOV_MX32_FROM_MXF32(real_in_0_4), *((xb_vecMxf32 *)v_0),
                   *((xb_vecMx32 *)v_602_0)));
  float v_606_tmp[4] = {v_72, v_304, v_76, v_303};
  xb_vecMxf32 v_606 = *((xb_vecMxf32 *)v_606_tmp);
  xb_vecMxf32 v_607 = PDX_ADD_MXF32(v_603, v_606);
  xb_vecMxf32 v_608 = v_600;
  PDX_MULA_MXF32(v_608, v_601, v_607);
  xb_vecMxf32 v_609 = PDX_NEG_MXF32(v_608);
  xb_vecMxf32 v_610 = PDX_ADD_MXF32(v_592, v_609);
  xb_vecMxf32 v_611 = v_589;
  PDX_MULA_MXF32(v_611, v_590, v_610);
  xb_vecMxf32 v_612 = PDX_ADD_MXF32(v_581, v_611);
  xb_vecMxf32 v_613 = PDX_NEG_MXF32(v_612);
  xb_vecMxf32 v_614 = PDX_ADD_MXF32(v_230, v_613);
  xb_vecMxf32 v_615 = v_546;
  PDX_MULA_MXF32(v_615, v_66, v_614);
  xb_vecMxf32 v_616 = PDX_ADD_MXF32(v_530, v_615);
  xb_vecMxf32 v_617 = PDX_NEG_MXF32(v_616);
  xb_vecMxf32 v_618 = PDX_ADD_MXF32(v_161, v_617);
  xb_vecMxf32 v_619 = v_475;
  PDX_MULA_MXF32(v_619, v_55, v_618);
  xb_vecMxf32 v_620 = PDX_ADD_MXF32(v_452, v_619);
  xb_vecMxf32 v_621 = PDX_ADD_MXF32(v_416, v_620);
  PDX_SAV_MXF32_XP(v_89, align_real_out, (xb_vecMxf32 *)real_out, 16);
  PDX_SAV_MXF32_XP(v_318, align_real_out, (xb_vecMxf32 *)real_out, 16);
  PDX_SAV_MXF32_XP(v_392, align_img_out, (xb_vecMxf32 *)img_out, 16);
  PDX_SAV_MXF32_XP(v_621, align_img_out, (xb_vecMxf32 *)img_out, 16);
  PDX_SAPOS_MXF32_FP(align_real_out, (xb_vecMxf32 *)real_out);
  PDX_SAPOS_MXF32_FP(align_img_out, (xb_vecMxf32 *)img_out);
}
---STDERR---
/Users/avh/research/diospyros/cdios-tests/fft.c:45:2: warning: no newline at end of file [-Wnewline-eof]
}
 ^
1 warning generated.
Standard C compilation successful
Writing intermediate files to: build/fft-out
