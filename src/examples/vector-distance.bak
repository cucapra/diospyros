#lang rosette

(require "../ast.rkt"
         "../dsp-insts.rkt"
         "../interp.rkt"
         "../utils.rkt"
         "../prog-sketch.rkt"
         "../synth.rkt"
         "../configuration.rkt"
         racket/trace
         racket/generator
         rosette/lib/angelic)

(define/prog desviacion-estandar-p
  ('x = vec-extern-decl 2 int-type)
  ('y = vec-extern-decl 2 int-type)
  ('distance = vec-app 'vec-distance (list 'x 'y)))

;(define action (make-hash))
;(hash-set! action 'x (make-symbolic-bv-list (bitvector (value-fin)) 2))
;(hash-set! action 'y (make-symbolic-bv-list (bitvector (value-fin)) 2))

(define action (make-hash))
(hash-set! action 'x (value-bv-list 1 2))
(hash-set! action 'y (value-bv-list 3 4))

(define function-map (hash 'vec-distance vector-distance))

(interp sort-largest action #:fn-map function-map)

(define vector-distance (hash-ref action 'distance))

(map bitvector->integer (map unbox vector-distance))

;(define model (solve (assert (equal? sorted (value-bv-list 6 5)))))

;model

;(evaluate (map bitvector->integer (map unbox vector-distance)) model)

(define (vector-distance v1 v2)
  (define (reduce-sum b acc) (bvadd acc b))
  (bv-sqrt (reduce-sum (vector-sqr (bvsub (car v2) (car v1)))
              (vector-sqr (bvsub (cdr v2) (cdr v1))))))

(map bitvector->integer (vector-distance (bv-value 0) (bv-value 25)))