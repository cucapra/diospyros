  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [4 x float], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 0), align 16
  %8 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 0), align 16
  %9 = fadd float %7, %8
  %10 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 0), align 16
  %11 = fadd float %9, %10
  %12 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @d_in, i64 0, i64 0), align 16
  %13 = fadd float %11, %12
  %14 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @e_in, i64 0, i64 0), align 16
  %15 = fadd float %13, %14
  %16 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  store float %15, float* %16, align 16
  %17 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 1), align 4
  %18 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 1), align 4
  %19 = fadd float %17, %18
  %20 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 1), align 4
  %21 = fadd float %19, %20
  %22 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @d_in, i64 0, i64 1), align 4
  %23 = fadd float %21, %22
  %24 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @e_in, i64 0, i64 1), align 4
  %25 = fadd float %23, %24
  %26 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  store float %25, float* %26, align 4
  %27 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 2), align 8
  %28 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 2), align 8
  %29 = fadd float %27, %28
  %30 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 2), align 8
  %31 = fadd float %29, %30
  %32 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @d_in, i64 0, i64 2), align 8
  %33 = fadd float %31, %32
  %34 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @e_in, i64 0, i64 2), align 8
  %35 = fadd float %33, %34
  %36 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  store float %35, float* %36, align 8
  %37 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 3), align 4
  %38 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 3), align 4
  %39 = fadd float %37, %38
  %40 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 3), align 4
  %41 = fadd float %39, %40
  %42 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @d_in, i64 0, i64 3), align 4
  %43 = fadd float %41, %42
  %44 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @e_in, i64 0, i64 3), align 4
  %45 = fadd float %43, %44
  %46 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 0), align 4
  %47 = insertelement <4 x float> zeroinitializer, float %46, i32 0
  %48 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 1), align 4
  %49 = insertelement <4 x float> %47, float %48, i32 1
  %50 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 2), align 4
  %51 = insertelement <4 x float> %49, float %50, i32 2
  %52 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 3), align 4
  %53 = insertelement <4 x float> %51, float %52, i32 3
  %54 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 0), align 4
  %55 = insertelement <4 x float> zeroinitializer, float %54, i32 0
  %56 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 1), align 4
  %57 = insertelement <4 x float> %55, float %56, i32 1
  %58 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 2), align 4
  %59 = insertelement <4 x float> %57, float %58, i32 2
  %60 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 3), align 4
  %61 = insertelement <4 x float> %59, float %60, i32 3
  %62 = fadd <4 x float> %53, %61
  %63 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 0), align 4
  %64 = insertelement <4 x float> zeroinitializer, float %63, i32 0
  %65 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 1), align 4
  %66 = insertelement <4 x float> %64, float %65, i32 1
  %67 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 2), align 4
  %68 = insertelement <4 x float> %66, float %67, i32 2
  %69 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 3), align 4
  %70 = insertelement <4 x float> %68, float %69, i32 3
  %71 = fadd <4 x float> %62, %70
  %72 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @d_in, i64 0, i64 0), align 4
  %73 = insertelement <4 x float> zeroinitializer, float %72, i32 0
  %74 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @d_in, i64 0, i64 1), align 4
  %75 = insertelement <4 x float> %73, float %74, i32 1
  %76 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @d_in, i64 0, i64 2), align 4
  %77 = insertelement <4 x float> %75, float %76, i32 2
  %78 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @d_in, i64 0, i64 3), align 4
  %79 = insertelement <4 x float> %77, float %78, i32 3
  %80 = fadd <4 x float> %71, %79
  %81 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @e_in, i64 0, i64 0), align 4
  %82 = insertelement <4 x float> zeroinitializer, float %81, i32 0
  %83 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @e_in, i64 0, i64 1), align 4
  %84 = insertelement <4 x float> %82, float %83, i32 1
  %85 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @e_in, i64 0, i64 2), align 4
  %86 = insertelement <4 x float> %84, float %85, i32 2
  %87 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @e_in, i64 0, i64 3), align 4
  %88 = insertelement <4 x float> %86, float %87, i32 3
  %89 = fadd <4 x float> %80, %88
  %90 = extractelement <4 x float> %89, i32 0
  store float %90, float* %16, align 16
  %91 = extractelement <4 x float> %89, i32 1
  store float %91, float* %26, align 4
  %92 = extractelement <4 x float> %89, i32 2
  store float %92, float* %36, align 8
  %93 = extractelement <4 x float> %89, i32 3
  %94 = insertelement float %93, float %46, i32 0
  %95 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  store float %45, float* %95, align 4
  %96 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  %97 = load float, float* %96, align 16
  %98 = fpext float %97 to double
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), double %98)
  %100 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  %101 = load float, float* %100, align 4
  %102 = fpext float %101 to double
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), double %102)
  %104 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  %105 = load float, float* %104, align 8
  %106 = fpext float %105 to double
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), double %106)
  %108 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  %109 = load float, float* %108, align 4
  %110 = fpext float %109 to double
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), double %110)
  ret i32 0
---STDERR---
RecExpr { nodes: [Symbol("a_in"), Symbol("0,0,"), Get([0, 1]), Symbol("b_in"), Symbol("0,0,"), Get([3, 4]), Add([2, 5]), Symbol("c_in"), Symbol("0,0,"), Get([7, 8]), Add([6, 9]), Symbol("d_in"), Symbol("0,0,"), Get([11, 12]), Add([10, 13]), Symbol("e_in"), Symbol("0,0,"), Get([15, 16]), Add([14, 17]), Symbol("a_in"), Symbol("0,1,"), Get([19, 20]), Symbol("b_in"), Symbol("0,1,"), Get([22, 23]), Add([21, 24]), Symbol("c_in"), Symbol("0,1,"), Get([26, 27]), Add([25, 28]), Symbol("d_in"), Symbol("0,1,"), Get([30, 31]), Add([29, 32]), Symbol("e_in"), Symbol("0,1,"), Get([34, 35]), Add([33, 36]), Symbol("a_in"), Symbol("0,2,"), Get([38, 39]), Symbol("b_in"), Symbol("0,2,"), Get([41, 42]), Add([40, 43]), Symbol("c_in"), Symbol("0,2,"), Get([45, 46]), Add([44, 47]), Symbol("d_in"), Symbol("0,2,"), Get([49, 50]), Add([48, 51]), Symbol("e_in"), Symbol("0,2,"), Get([53, 54]), Add([52, 55]), Symbol("a_in"), Symbol("0,3,"), Get([57, 58]), Symbol("b_in"), Symbol("0,3,"), Get([60, 61]), Add([59, 62]), Symbol("c_in"), Symbol("0,3,"), Get([64, 65]), Add([63, 66]), Symbol("d_in"), Symbol("0,3,"), Get([68, 69]), Add([67, 70]), Symbol("e_in"), Symbol("0,3,"), Get([72, 73]), Add([71, 74]), Vec([18, 37, 56, 75])] }
Dropping inapplicable rules: div-1 div-1-inv neg-neg neg-neg-rev neg-sgn neg-sgn-rev neg-zero-inv neg-zero-inv-rev neg-minus neg-minus-rev neg-minus-zero neg-minus-zero-rev sqrt-1-inv sqrt-1-inv-rev neg_unop sqrt_unop /_binop
Stopped after 7 iterations, reason: Some(Saturated)
[Symbol("a_in"), Symbol("0,0,"), Get([0, 1]), Symbol("a_in"), Symbol("0,1,"), Get([3, 4]), Symbol("a_in"), Symbol("0,2,"), Get([6, 7]), Symbol("a_in"), Symbol("0,3,"), Get([9, 10]), LitVec([2, 5, 8, 11]), Symbol("b_in"), Symbol("0,0,"), Get([13, 14]), Symbol("b_in"), Symbol("0,1,"), Get([16, 17]), Symbol("b_in"), Symbol("0,2,"), Get([19, 20]), Symbol("b_in"), Symbol("0,3,"), Get([22, 23]), LitVec([15, 18, 21, 24]), VecAdd([12, 25]), Symbol("c_in"), Symbol("0,0,"), Get([27, 28]), Symbol("c_in"), Symbol("0,1,"), Get([30, 31]), Symbol("c_in"), Symbol("0,2,"), Get([33, 34]), Symbol("c_in"), Symbol("0,3,"), Get([36, 37]), LitVec([29, 32, 35, 38]), VecAdd([26, 39]), Symbol("d_in"), Symbol("0,0,"), Get([41, 42]), Symbol("d_in"), Symbol("0,1,"), Get([44, 45]), Symbol("d_in"), Symbol("0,2,"), Get([47, 48]), Symbol("d_in"), Symbol("0,3,"), Get([50, 51]), LitVec([43, 46, 49, 52]), VecAdd([40, 53]), Symbol("e_in"), Symbol("0,0,"), Get([55, 56]), Symbol("e_in"), Symbol("0,1,"), Get([58, 59]), Symbol("e_in"), Symbol("0,2,"), Get([61, 62]), Symbol("e_in"), Symbol("0,3,"), Get([64, 65]), LitVec([57, 60, 63, 66]), VecAdd([54, 67])]
