  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [9 x float], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 0), align 16
  %8 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 0), align 16
  %9 = fadd float %7, %8
  %10 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 0
  store float %9, float* %10, align 16
  %11 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 1), align 4
  %12 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 1), align 4
  %13 = fadd float %11, %12
  %14 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 1
  store float %13, float* %14, align 4
  %15 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 2), align 8
  %16 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 2), align 8
  %17 = fadd float %15, %16
  %18 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 2
  store float %17, float* %18, align 8
  %19 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 3), align 4
  %20 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 3), align 4
  %21 = fadd float %19, %20
  %22 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 3
  store float %21, float* %22, align 4
  %23 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 4), align 16
  %24 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 4), align 16
  %25 = fadd float %23, %24
  %26 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 4
  store float %25, float* %26, align 16
  %27 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 5), align 4
  %28 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 5), align 4
  %29 = fadd float %27, %28
  %30 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 5
  store float %29, float* %30, align 4
  %31 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 6), align 8
  %32 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 6), align 8
  %33 = fadd float %31, %32
  %34 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 6
  store float %33, float* %34, align 8
  %35 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 7), align 4
  %36 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 7), align 4
  %37 = fadd float %35, %36
  %38 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 7
  store float %37, float* %38, align 4
  %39 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 8), align 16
  %40 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 8), align 16
  %41 = fadd float %39, %40
  %42 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 0), align 4
  %43 = insertelement <4 x float> zeroinitializer, float %42, i32 0
  %44 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 1), align 4
  %45 = insertelement <4 x float> %43, float %44, i32 1
  %46 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 2), align 4
  %47 = insertelement <4 x float> %45, float %46, i32 2
  %48 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 3), align 4
  %49 = insertelement <4 x float> %47, float %48, i32 3
  %50 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 0), align 4
  %51 = insertelement <4 x float> zeroinitializer, float %50, i32 0
  %52 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 1), align 4
  %53 = insertelement <4 x float> %51, float %52, i32 1
  %54 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 2), align 4
  %55 = insertelement <4 x float> %53, float %54, i32 2
  %56 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 3), align 4
  %57 = insertelement <4 x float> %55, float %56, i32 3
  %58 = fadd <4 x float> %49, %57
  %59 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 4), align 4
  %60 = insertelement <4 x float> zeroinitializer, float %59, i32 0
  %61 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 5), align 4
  %62 = insertelement <4 x float> %60, float %61, i32 1
  %63 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 6), align 4
  %64 = insertelement <4 x float> %62, float %63, i32 2
  %65 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 7), align 4
  %66 = insertelement <4 x float> %64, float %65, i32 3
  %67 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 4), align 4
  %68 = insertelement <4 x float> zeroinitializer, float %67, i32 0
  %69 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 5), align 4
  %70 = insertelement <4 x float> %68, float %69, i32 1
  %71 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 6), align 4
  %72 = insertelement <4 x float> %70, float %71, i32 2
  %73 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 7), align 4
  %74 = insertelement <4 x float> %72, float %73, i32 3
  %75 = fadd <4 x float> %66, %74
  %76 = shufflevector <4 x float> %58, <4 x float> %75, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %77 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 8), align 4
  %78 = insertelement <4 x float> zeroinitializer, float %77, i32 0
  %79 = insertelement <4 x float> %78, float 0.000000e+00, i32 1
  %80 = insertelement <4 x float> %79, float 0.000000e+00, i32 2
  %81 = insertelement <4 x float> %80, float 0.000000e+00, i32 3
  %82 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 8), align 4
  %83 = insertelement <4 x float> zeroinitializer, float %82, i32 0
  %84 = insertelement <4 x float> %83, float 0.000000e+00, i32 1
  %85 = insertelement <4 x float> %84, float 0.000000e+00, i32 2
  %86 = insertelement <4 x float> %85, float 0.000000e+00, i32 3
  %87 = fadd <4 x float> %81, %86
  %88 = shufflevector <8 x float> %76, <4 x float> %87, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %89 = extractelement <12 x float> %88, i32 0
  store float %89, float* %10, align 16
  %90 = extractelement <12 x float> %88, i32 1
  store float %90, float* %14, align 4
  %91 = extractelement <12 x float> %88, i32 2
  store float %91, float* %18, align 8
  %92 = extractelement <12 x float> %88, i32 3
  store float %92, float* %22, align 4
  %93 = extractelement <12 x float> %88, i32 4
  store float %93, float* %26, align 16
  %94 = extractelement <12 x float> %88, i32 5
  store float %94, float* %30, align 4
  %95 = extractelement <12 x float> %88, i32 6
  store float %95, float* %34, align 8
  %96 = extractelement <12 x float> %88, i32 7
  store float %96, float* %38, align 4
  %97 = extractelement <12 x float> %88, i32 8
  %98 = insertelement float %97, float %42, i32 0
  %99 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 8
  store float %41, float* %99, align 16
  %100 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 0
  %101 = load float, float* %100, align 16
  %102 = fpext float %101 to double
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), double %102)
  %104 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 1
  %105 = load float, float* %104, align 4
  %106 = fpext float %105 to double
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), double %106)
  %108 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 2
  %109 = load float, float* %108, align 8
  %110 = fpext float %109 to double
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), double %110)
  %112 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 3
  %113 = load float, float* %112, align 4
  %114 = fpext float %113 to double
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), double %114)
  %116 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 4
  %117 = load float, float* %116, align 16
  %118 = fpext float %117 to double
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), double %118)
  %120 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 5
  %121 = load float, float* %120, align 4
  %122 = fpext float %121 to double
  %123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), double %122)
  %124 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 6
  %125 = load float, float* %124, align 8
  %126 = fpext float %125 to double
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), double %126)
  %128 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 7
  %129 = load float, float* %128, align 4
  %130 = fpext float %129 to double
  %131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), double %130)
  %132 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 8
  %133 = load float, float* %132, align 16
  %134 = fpext float %133 to double
  %135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), double %134)
  ret i32 0
---STDERR---
RecExpr { nodes: [Symbol("a_in"), Symbol("0,"), Get([0, 1]), Symbol("b_in"), Symbol("0,"), Get([3, 4]), Add([2, 5]), Symbol("a_in"), Symbol("1,"), Get([7, 8]), Symbol("b_in"), Symbol("1,"), Get([10, 11]), Add([9, 12]), Symbol("a_in"), Symbol("2,"), Get([14, 15]), Symbol("b_in"), Symbol("2,"), Get([17, 18]), Add([16, 19]), Symbol("a_in"), Symbol("3,"), Get([21, 22]), Symbol("b_in"), Symbol("3,"), Get([24, 25]), Add([23, 26]), Symbol("a_in"), Symbol("4,"), Get([28, 29]), Symbol("b_in"), Symbol("4,"), Get([31, 32]), Add([30, 33]), Symbol("a_in"), Symbol("5,"), Get([35, 36]), Symbol("b_in"), Symbol("5,"), Get([38, 39]), Add([37, 40]), Symbol("a_in"), Symbol("6,"), Get([42, 43]), Symbol("b_in"), Symbol("6,"), Get([45, 46]), Add([44, 47]), Symbol("a_in"), Symbol("7,"), Get([49, 50]), Symbol("b_in"), Symbol("7,"), Get([52, 53]), Add([51, 54]), Symbol("a_in"), Symbol("8,"), Get([56, 57]), Symbol("b_in"), Symbol("8,"), Get([59, 60]), Add([58, 61]), Vec([6, 13, 20, 27]), Vec([34, 41, 48, 55]), Num(0), Num(0), Num(0), Vec([62, 65, 66, 67]), Concat([63, 64]), Concat([69, 68])] }
Dropping inapplicable rules: div-1 div-1-inv neg-neg neg-neg-rev neg-sgn neg-sgn-rev neg-zero-inv neg-zero-inv-rev neg-minus neg-minus-rev neg-minus-zero neg-minus-zero-rev sqrt-1-inv sqrt-1-inv-rev neg_unop sqrt_unop /_binop
Stopped after 5 iterations, reason: Some(Saturated)
[Symbol("a_in"), Symbol("0,"), Get([0, 1]), Symbol("a_in"), Symbol("1,"), Get([3, 4]), Symbol("a_in"), Symbol("2,"), Get([6, 7]), Symbol("a_in"), Symbol("3,"), Get([9, 10]), LitVec([2, 5, 8, 11]), Symbol("b_in"), Symbol("0,"), Get([13, 14]), Symbol("b_in"), Symbol("1,"), Get([16, 17]), Symbol("b_in"), Symbol("2,"), Get([19, 20]), Symbol("b_in"), Symbol("3,"), Get([22, 23]), LitVec([15, 18, 21, 24]), VecAdd([12, 25]), Symbol("a_in"), Symbol("4,"), Get([27, 28]), Symbol("a_in"), Symbol("5,"), Get([30, 31]), Symbol("a_in"), Symbol("6,"), Get([33, 34]), Symbol("a_in"), Symbol("7,"), Get([36, 37]), LitVec([29, 32, 35, 38]), Symbol("b_in"), Symbol("4,"), Get([40, 41]), Symbol("b_in"), Symbol("5,"), Get([43, 44]), Symbol("b_in"), Symbol("6,"), Get([46, 47]), Symbol("b_in"), Symbol("7,"), Get([49, 50]), LitVec([42, 45, 48, 51]), VecAdd([39, 52]), Concat([26, 53]), Symbol("a_in"), Symbol("8,"), Get([55, 56]), Num(0), Num(0), Num(0), LitVec([57, 58, 59, 60]), Symbol("b_in"), Symbol("8,"), Get([62, 63]), Num(0), Num(0), Num(0), LitVec([64, 65, 66, 67]), VecAdd([61, 68]), Concat([54, 69])]
