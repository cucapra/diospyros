  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [9 x float], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 0), align 16
  %8 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 0), align 16
  %9 = fadd float %7, %8
  %10 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 0
  %11 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 1), align 4
  %12 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 1), align 4
  %13 = fadd float %11, %12
  %14 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 1
  %15 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 2), align 8
  %16 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 2), align 8
  %17 = fadd float %15, %16
  %18 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 2
  %19 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 3), align 4
  %20 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 3), align 4
  %21 = fadd float %19, %20
  %22 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 3
  %23 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 4), align 16
  %24 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 4), align 16
  %25 = fadd float %23, %24
  %26 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 4
  %27 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 5), align 4
  %28 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 5), align 4
  %29 = fadd float %27, %28
  %30 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 5
  %31 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 6), align 8
  %32 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 6), align 8
  %33 = fadd float %31, %32
  %34 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 6
  %35 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 7), align 4
  %36 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 7), align 4
  %37 = fadd float %35, %36
  %38 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 7
  %39 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 8), align 16
  %40 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 8), align 16
  %41 = fadd float %39, %40
  %42 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 8
  %43 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 0), align 4
  %44 = insertelement <4 x float> zeroinitializer, float %43, i32 0
  %45 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 1), align 4
  %46 = insertelement <4 x float> %44, float %45, i32 1
  %47 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 2), align 4
  %48 = insertelement <4 x float> %46, float %47, i32 2
  %49 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 3), align 4
  %50 = insertelement <4 x float> %48, float %49, i32 3
  %51 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 0), align 4
  %52 = insertelement <4 x float> zeroinitializer, float %51, i32 0
  %53 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 1), align 4
  %54 = insertelement <4 x float> %52, float %53, i32 1
  %55 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 2), align 4
  %56 = insertelement <4 x float> %54, float %55, i32 2
  %57 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 3), align 4
  %58 = insertelement <4 x float> %56, float %57, i32 3
  %59 = fadd <4 x float> %50, %58
  %60 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 4), align 4
  %61 = insertelement <4 x float> zeroinitializer, float %60, i32 0
  %62 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 5), align 4
  %63 = insertelement <4 x float> %61, float %62, i32 1
  %64 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 6), align 4
  %65 = insertelement <4 x float> %63, float %64, i32 2
  %66 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 7), align 4
  %67 = insertelement <4 x float> %65, float %66, i32 3
  %68 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 4), align 4
  %69 = insertelement <4 x float> zeroinitializer, float %68, i32 0
  %70 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 5), align 4
  %71 = insertelement <4 x float> %69, float %70, i32 1
  %72 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 6), align 4
  %73 = insertelement <4 x float> %71, float %72, i32 2
  %74 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 7), align 4
  %75 = insertelement <4 x float> %73, float %74, i32 3
  %76 = fadd <4 x float> %67, %75
  %77 = shufflevector <4 x float> %59, <4 x float> %76, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %78 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @a_in, i64 0, i64 8), align 4
  %79 = insertelement <4 x float> zeroinitializer, float %78, i32 0
  %80 = insertelement <4 x float> %79, float 0.000000e+00, i32 1
  %81 = insertelement <4 x float> %80, float 0.000000e+00, i32 2
  %82 = insertelement <4 x float> %81, float 0.000000e+00, i32 3
  %83 = load float, float* getelementptr inbounds ([9 x float], [9 x float]* @b_in, i64 0, i64 8), align 4
  %84 = insertelement <4 x float> zeroinitializer, float %83, i32 0
  %85 = insertelement <4 x float> %84, float 0.000000e+00, i32 1
  %86 = insertelement <4 x float> %85, float 0.000000e+00, i32 2
  %87 = insertelement <4 x float> %86, float 0.000000e+00, i32 3
  %88 = fadd <4 x float> %82, %87
  %89 = shufflevector <8 x float> %77, <4 x float> %88, <12 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11>
  %90 = extractelement <12 x float> %89, i32 0
  store float %90, float* %10, align 16
  %91 = extractelement <12 x float> %89, i32 1
  store float %91, float* %14, align 4
  %92 = extractelement <12 x float> %89, i32 2
  store float %92, float* %18, align 8
  %93 = extractelement <12 x float> %89, i32 3
  store float %93, float* %22, align 4
  %94 = extractelement <12 x float> %89, i32 4
  store float %94, float* %26, align 16
  %95 = extractelement <12 x float> %89, i32 5
  store float %95, float* %30, align 4
  %96 = extractelement <12 x float> %89, i32 6
  store float %96, float* %34, align 8
  %97 = extractelement <12 x float> %89, i32 7
  store float %97, float* %38, align 4
  %98 = extractelement <12 x float> %89, i32 8
  store float %98, float* %42, align 16
  %99 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 0
  %100 = load float, float* %99, align 16
  %101 = fpext float %100 to double
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), double %101)
  %103 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 1
  %104 = load float, float* %103, align 4
  %105 = fpext float %104 to double
  %106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), double %105)
  %107 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 2
  %108 = load float, float* %107, align 8
  %109 = fpext float %108 to double
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), double %109)
  %111 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 3
  %112 = load float, float* %111, align 4
  %113 = fpext float %112 to double
  %114 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), double %113)
  %115 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 4
  %116 = load float, float* %115, align 16
  %117 = fpext float %116 to double
  %118 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), double %117)
  %119 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 5
  %120 = load float, float* %119, align 4
  %121 = fpext float %120 to double
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), double %121)
  %123 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 6
  %124 = load float, float* %123, align 8
  %125 = fpext float %124 to double
  %126 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), double %125)
  %127 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 7
  %128 = load float, float* %127, align 4
  %129 = fpext float %128 to double
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), double %129)
  %131 = getelementptr inbounds [9 x float], [9 x float]* %6, i64 0, i64 8
  %132 = load float, float* %131, align 16
  %133 = fpext float %132 to double
  %134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), double %133)
  ret i32 0
---STDERR---
RecExpr { nodes: [Symbol("a_in"), Symbol("0,0,"), Get([0, 1]), Symbol("b_in"), Symbol("0,0,"), Get([3, 4]), Add([2, 5]), Symbol("a_in"), Symbol("0,1,"), Get([7, 8]), Symbol("b_in"), Symbol("0,1,"), Get([10, 11]), Add([9, 12]), Symbol("a_in"), Symbol("0,2,"), Get([14, 15]), Symbol("b_in"), Symbol("0,2,"), Get([17, 18]), Add([16, 19]), Symbol("a_in"), Symbol("0,3,"), Get([21, 22]), Symbol("b_in"), Symbol("0,3,"), Get([24, 25]), Add([23, 26]), Symbol("a_in"), Symbol("0,4,"), Get([28, 29]), Symbol("b_in"), Symbol("0,4,"), Get([31, 32]), Add([30, 33]), Symbol("a_in"), Symbol("0,5,"), Get([35, 36]), Symbol("b_in"), Symbol("0,5,"), Get([38, 39]), Add([37, 40]), Symbol("a_in"), Symbol("0,6,"), Get([42, 43]), Symbol("b_in"), Symbol("0,6,"), Get([45, 46]), Add([44, 47]), Symbol("a_in"), Symbol("0,7,"), Get([49, 50]), Symbol("b_in"), Symbol("0,7,"), Get([52, 53]), Add([51, 54]), Symbol("a_in"), Symbol("0,8,"), Get([56, 57]), Symbol("b_in"), Symbol("0,8,"), Get([59, 60]), Add([58, 61]), Vec([6, 13, 20, 27]), Vec([34, 41, 48, 55]), Num(0), Num(0), Num(0), Vec([62, 65, 66, 67]), Concat([63, 64]), Concat([69, 68])] }
Dropping inapplicable rules: div-1 div-1-inv neg-neg neg-neg-rev neg-sgn neg-sgn-rev neg-zero-inv neg-zero-inv-rev neg-minus neg-minus-rev neg-minus-zero neg-minus-zero-rev sqrt-1-inv sqrt-1-inv-rev neg_unop sqrt_unop /_binop
Stopped after 5 iterations, reason: Some(Saturated)
[Symbol("a_in"), Symbol("0,0,"), Get([0, 1]), Symbol("a_in"), Symbol("0,1,"), Get([3, 4]), Symbol("a_in"), Symbol("0,2,"), Get([6, 7]), Symbol("a_in"), Symbol("0,3,"), Get([9, 10]), LitVec([2, 5, 8, 11]), Symbol("b_in"), Symbol("0,0,"), Get([13, 14]), Symbol("b_in"), Symbol("0,1,"), Get([16, 17]), Symbol("b_in"), Symbol("0,2,"), Get([19, 20]), Symbol("b_in"), Symbol("0,3,"), Get([22, 23]), LitVec([15, 18, 21, 24]), VecAdd([12, 25]), Symbol("a_in"), Symbol("0,4,"), Get([27, 28]), Symbol("a_in"), Symbol("0,5,"), Get([30, 31]), Symbol("a_in"), Symbol("0,6,"), Get([33, 34]), Symbol("a_in"), Symbol("0,7,"), Get([36, 37]), LitVec([29, 32, 35, 38]), Symbol("b_in"), Symbol("0,4,"), Get([40, 41]), Symbol("b_in"), Symbol("0,5,"), Get([43, 44]), Symbol("b_in"), Symbol("0,6,"), Get([46, 47]), Symbol("b_in"), Symbol("0,7,"), Get([49, 50]), LitVec([42, 45, 48, 51]), VecAdd([39, 52]), Concat([26, 53]), Symbol("a_in"), Symbol("0,8,"), Get([55, 56]), Num(0), Num(0), Num(0), LitVec([57, 58, 59, 60]), Symbol("b_in"), Symbol("0,8,"), Get([62, 63]), Num(0), Num(0), Num(0), LitVec([64, 65, 66, 67]), VecAdd([61, 68]), Concat([54, 69])]
