  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [4 x float], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 0), align 16
  %8 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 0), align 16
  %9 = fadd float %7, %8
  %10 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 0), align 16
  %11 = fadd float %9, %10
  %12 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  store float %11, float* %12, align 16
  %13 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 1), align 4
  %14 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 1), align 4
  %15 = fadd float %13, %14
  %16 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 1), align 4
  %17 = fadd float %15, %16
  %18 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  store float %17, float* %18, align 4
  %19 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 2), align 8
  %20 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 2), align 8
  %21 = fadd float %19, %20
  %22 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 2), align 8
  %23 = fadd float %21, %22
  %24 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  store float %23, float* %24, align 8
  %25 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 3), align 4
  %26 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 3), align 4
  %27 = fadd float %25, %26
  %28 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 3), align 4
  %29 = fadd float %27, %28
  %30 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  store float %29, float* %30, align 4
  %31 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 0), align 4
  %32 = insertelement <4 x float> zeroinitializer, float %31, i32 0
  %33 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 1), align 4
  %34 = insertelement <4 x float> %32, float %33, i32 1
  %35 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 2), align 4
  %36 = insertelement <4 x float> %34, float %35, i32 2
  %37 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 3), align 4
  %38 = insertelement <4 x float> %36, float %37, i32 3
  %39 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 0), align 4
  %40 = insertelement <4 x float> zeroinitializer, float %39, i32 0
  %41 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 1), align 4
  %42 = insertelement <4 x float> %40, float %41, i32 1
  %43 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 2), align 4
  %44 = insertelement <4 x float> %42, float %43, i32 2
  %45 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 3), align 4
  %46 = insertelement <4 x float> %44, float %45, i32 3
  %47 = fadd <4 x float> %38, %46
  %48 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 0), align 4
  %49 = insertelement <4 x float> zeroinitializer, float %48, i32 0
  %50 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 1), align 4
  %51 = insertelement <4 x float> %49, float %50, i32 1
  %52 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 2), align 4
  %53 = insertelement <4 x float> %51, float %52, i32 2
  %54 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 3), align 4
  %55 = insertelement <4 x float> %53, float %54, i32 3
  %56 = fadd <4 x float> %47, %55
  %57 = extractelement <4 x float> %56, i32 0
  store float %57, float* %12, align 16
  %58 = extractelement <4 x float> %56, i32 1
  store float %58, float* %18, align 4
  %59 = extractelement <4 x float> %56, i32 2
  store float %59, float* %24, align 8
  %60 = extractelement <4 x float> %56, i32 3
  store float %60, float* %30, align 4
  %61 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  %62 = load float, float* %61, align 16
  %63 = fpext float %62 to double
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), double %63)
  %65 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  %66 = load float, float* %65, align 4
  %67 = fpext float %66 to double
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), double %67)
  %69 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  %70 = load float, float* %69, align 8
  %71 = fpext float %70 to double
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), double %71)
  %73 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  %74 = load float, float* %73, align 4
  %75 = fpext float %74 to double
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), double %75)
  ret i32 0
---STDERR---
RecExpr { nodes: [Symbol("a_in"), Num(0), Get([0, 1]), Symbol("b_in"), Num(0), Get([3, 4]), Add([2, 5]), Symbol("c_in"), Num(0), Get([7, 8]), Add([6, 9]), Symbol("a_in"), Num(1), Get([11, 12]), Symbol("b_in"), Num(1), Get([14, 15]), Add([13, 16]), Symbol("c_in"), Num(1), Get([18, 19]), Add([17, 20]), Symbol("a_in"), Num(2), Get([22, 23]), Symbol("b_in"), Num(2), Get([25, 26]), Add([24, 27]), Symbol("c_in"), Num(2), Get([29, 30]), Add([28, 31]), Symbol("a_in"), Num(3), Get([33, 34]), Symbol("b_in"), Num(3), Get([36, 37]), Add([35, 38]), Symbol("c_in"), Num(3), Get([40, 41]), Add([39, 42]), Vec([10, 21, 32, 43])] }
Dropping inapplicable rules: div-1 div-1-inv neg-neg neg-neg-rev neg-sgn neg-sgn-rev neg-zero-inv neg-zero-inv-rev neg-minus neg-minus-rev neg-minus-zero neg-minus-zero-rev sqrt-1-inv sqrt-1-inv-rev neg_unop sqrt_unop /_binop
Stopped after 6 iterations, reason: Some(Saturated)
[Symbol("a_in"), Num(0), Get([0, 1]), Symbol("a_in"), Num(1), Get([3, 4]), Symbol("a_in"), Num(2), Get([6, 7]), Symbol("a_in"), Num(3), Get([9, 10]), LitVec([2, 5, 8, 11]), Symbol("b_in"), Num(0), Get([13, 14]), Symbol("b_in"), Num(1), Get([16, 17]), Symbol("b_in"), Num(2), Get([19, 20]), Symbol("b_in"), Num(3), Get([22, 23]), LitVec([15, 18, 21, 24]), VecAdd([12, 25]), Symbol("c_in"), Num(0), Get([27, 28]), Symbol("c_in"), Num(1), Get([30, 31]), Symbol("c_in"), Num(2), Get([33, 34]), Symbol("c_in"), Num(3), Get([36, 37]), LitVec([29, 32, 35, 38]), VecAdd([26, 39])]

  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [4 x float], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 0), align 16
  %8 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 0), align 16
  %9 = fadd float %7, %8
  %10 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 0), align 16
  %11 = fadd float %9, %10
  %12 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  store float %11, float* %12, align 16
  %13 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 1), align 4
  %14 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 1), align 4
  %15 = fadd float %13, %14
  %16 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 1), align 4
  %17 = fadd float %15, %16
  %18 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  store float %17, float* %18, align 4
  %19 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 2), align 8
  %20 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 2), align 8
  %21 = fadd float %19, %20
  %22 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 2), align 8
  %23 = fadd float %21, %22
  %24 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  store float %23, float* %24, align 8
  %25 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 3), align 4
  %26 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 3), align 4
  %27 = fadd float %25, %26
  %28 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 3), align 4
  %29 = fadd float %27, %28
  %30 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  store float %29, float* %30, align 4
  %31 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 0), align 4
  %32 = insertelement <4 x float> zeroinitializer, float %31, i32 0
  %33 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 1), align 4
  %34 = insertelement <4 x float> %32, float %33, i32 1
  %35 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 2), align 4
  %36 = insertelement <4 x float> %34, float %35, i32 2
  %37 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @a_in, i64 0, i64 3), align 4
  %38 = insertelement <4 x float> %36, float %37, i32 3
  %39 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 0), align 4
  %40 = insertelement <4 x float> zeroinitializer, float %39, i32 0
  %41 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 1), align 4
  %42 = insertelement <4 x float> %40, float %41, i32 1
  %43 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 2), align 4
  %44 = insertelement <4 x float> %42, float %43, i32 2
  %45 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @b_in, i64 0, i64 3), align 4
  %46 = insertelement <4 x float> %44, float %45, i32 3
  %47 = fadd <4 x float> %38, %46
  %48 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 0), align 4
  %49 = insertelement <4 x float> zeroinitializer, float %48, i32 0
  %50 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 1), align 4
  %51 = insertelement <4 x float> %49, float %50, i32 1
  %52 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 2), align 4
  %53 = insertelement <4 x float> %51, float %52, i32 2
  %54 = load float, float* getelementptr inbounds ([4 x float], [4 x float]* @c_in, i64 0, i64 3), align 4
  %55 = insertelement <4 x float> %53, float %54, i32 3
  %56 = fadd <4 x float> %47, %55
  %57 = extractelement <4 x float> %56, i32 0
  store float %57, float* %12, align 16
  %58 = extractelement <4 x float> %56, i32 1
  store float %58, float* %18, align 4
  %59 = extractelement <4 x float> %56, i32 2
  store float %59, float* %24, align 8
  %60 = extractelement <4 x float> %56, i32 3
  store float %60, float* %30, align 4
  %61 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  %62 = load float, float* %61, align 16
  %63 = fpext float %62 to double
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), double %63)
  %65 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 1
  %66 = load float, float* %65, align 4
  %67 = fpext float %66 to double
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), double %67)
  %69 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 2
  %70 = load float, float* %69, align 8
  %71 = fpext float %70 to double
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), double %71)
  %73 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  %74 = load float, float* %73, align 4
  %75 = fpext float %74 to double
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), double %75)
  ret i32 0

