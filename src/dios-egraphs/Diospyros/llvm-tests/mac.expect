  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [4 x i32], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @a_in, i64 0, i64 0), align 16
  %8 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @b_in, i64 0, i64 0), align 16
  %9 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @c_in, i64 0, i64 0), align 16
  %10 = mul nsw i32 %8, %9
  %11 = add nsw i32 %7, %10
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 0
  store i32 %11, i32* %12, align 16
  %13 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @a_in, i64 0, i64 1), align 4
  %14 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @b_in, i64 0, i64 1), align 4
  %15 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @c_in, i64 0, i64 1), align 4
  %16 = mul nsw i32 %14, %15
  %17 = add nsw i32 %13, %16
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 1
  store i32 %17, i32* %18, align 4
  %19 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @a_in, i64 0, i64 2), align 8
  %20 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @b_in, i64 0, i64 2), align 8
  %21 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @c_in, i64 0, i64 2), align 8
  %22 = mul nsw i32 %20, %21
  %23 = add nsw i32 %19, %22
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 2
  store i32 %23, i32* %24, align 8
  %25 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @a_in, i64 0, i64 3), align 4
  %26 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @b_in, i64 0, i64 3), align 4
  %27 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @c_in, i64 0, i64 3), align 4
  %28 = mul nsw i32 %26, %27
  %29 = add nsw i32 %25, %28
  %30 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 3
  store i32 %29, i32* %30, align 4
  %31 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @a_in, i64 0, i64 0), align 4
  %32 = insertelement <4 x i32> zeroinitializer, i32 %31, i32 0
  %33 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @a_in, i64 0, i64 1), align 4
  %34 = insertelement <4 x i32> %32, i32 %33, i32 1
  %35 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @a_in, i64 0, i64 2), align 4
  %36 = insertelement <4 x i32> %34, i32 %35, i32 2
  %37 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @a_in, i64 0, i64 3), align 4
  %38 = insertelement <4 x i32> %36, i32 %37, i32 3
  %39 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @b_in, i64 0, i64 0), align 4
  %40 = insertelement <4 x i32> zeroinitializer, i32 %39, i32 0
  %41 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @b_in, i64 0, i64 1), align 4
  %42 = insertelement <4 x i32> %40, i32 %41, i32 1
  %43 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @b_in, i64 0, i64 2), align 4
  %44 = insertelement <4 x i32> %42, i32 %43, i32 2
  %45 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @b_in, i64 0, i64 3), align 4
  %46 = insertelement <4 x i32> %44, i32 %45, i32 3
  %47 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @c_in, i64 0, i64 0), align 4
  %48 = insertelement <4 x i32> zeroinitializer, i32 %47, i32 0
  %49 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @c_in, i64 0, i64 1), align 4
  %50 = insertelement <4 x i32> %48, i32 %49, i32 1
  %51 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @c_in, i64 0, i64 2), align 4
  %52 = insertelement <4 x i32> %50, i32 %51, i32 2
  %53 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @c_in, i64 0, i64 3), align 4
  %54 = insertelement <4 x i32> %52, i32 %53, i32 3
  %55 = mul <4 x i32> %46, %54
  %56 = add <4 x i32> %38, %55
  %57 = extractelement <4 x i32> %56, i32 0
  store i32 %57, i32* %12, align 16
  %58 = extractelement <4 x i32> %56, i32 1
  store i32 %58, i32* %18, align 4
  %59 = extractelement <4 x i32> %56, i32 2
  store i32 %59, i32* %24, align 8
  %60 = extractelement <4 x i32> %56, i32 3
  store i32 %60, i32* %30, align 4
  %61 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 0
  %62 = load i32, i32* %61, align 16
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 %62)
  %64 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 1
  %65 = load i32, i32* %64, align 4
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 %65)
  %67 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 2
  %68 = load i32, i32* %67, align 8
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 %68)
  %70 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 3
  %71 = load i32, i32* %70, align 4
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i32 %71)
  ret i32 0
---STDERR---
RecExpr { nodes: [Symbol("b_in"), Num(0), Get([0, 1]), Symbol("c_in"), Num(0), Get([3, 4]), Mul([2, 5]), Symbol("a_in"), Num(0), Get([7, 8]), Add([9, 6]), Symbol("b_in"), Num(1), Get([11, 12]), Symbol("c_in"), Num(1), Get([14, 15]), Mul([13, 16]), Symbol("a_in"), Num(1), Get([18, 19]), Add([20, 17]), Symbol("b_in"), Num(2), Get([22, 23]), Symbol("c_in"), Num(2), Get([25, 26]), Mul([24, 27]), Symbol("a_in"), Num(2), Get([29, 30]), Add([31, 28]), Symbol("b_in"), Num(3), Get([33, 34]), Symbol("c_in"), Num(3), Get([36, 37]), Mul([35, 38]), Symbol("a_in"), Num(3), Get([40, 41]), Add([42, 39]), Vec([10, 21, 32, 43])] }
Dropping inapplicable rules: div-1 div-1-inv neg-neg neg-neg-rev neg-sgn neg-sgn-rev neg-zero-inv neg-zero-inv-rev neg-minus neg-minus-rev neg-minus-zero neg-minus-zero-rev sqrt-1-inv sqrt-1-inv-rev neg_unop sqrt_unop /_binop
Stopped after 39 iterations, reason: Some(TimeLimit(212.431801394))
[Symbol("a_in"), Num(0), Get([0, 1]), Symbol("a_in"), Num(1), Get([3, 4]), Symbol("a_in"), Num(2), Get([6, 7]), Symbol("a_in"), Num(3), Get([9, 10]), LitVec([2, 5, 8, 11]), Symbol("b_in"), Num(0), Get([13, 14]), Symbol("b_in"), Num(1), Get([16, 17]), Symbol("b_in"), Num(2), Get([19, 20]), Symbol("b_in"), Num(3), Get([22, 23]), LitVec([15, 18, 21, 24]), Symbol("c_in"), Num(0), Get([26, 27]), Symbol("c_in"), Num(1), Get([29, 30]), Symbol("c_in"), Num(2), Get([32, 33]), Symbol("c_in"), Num(3), Get([35, 36]), LitVec([28, 31, 34, 37]), VecMAC([12, 25, 38])]
