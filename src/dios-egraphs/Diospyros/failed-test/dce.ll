; ModuleID = 'build/diospyros.ll'
source_filename = "fail-tests/qr-decomp-local-arrays.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.14.0"

@.str = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"Q Output: %f\0A\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"Expected Q Output: %f\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"R Output: %f\0A\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"Expected R Output: %f\0A\00", align 1

; Function Attrs: alwaysinline nounwind ssp uwtable
define float @sgn(float %0) #0 {
  %2 = fcmp ogt float %0, 0.000000e+00
  %3 = zext i1 %2 to i32
  %4 = fcmp olt float %0, 0.000000e+00
  %.neg = sext i1 %4 to i32
  %5 = add nsw i32 %.neg, %3
  %6 = sitofp i32 %5 to float
  ret float %6
}

; Function Attrs: noinline nounwind ssp uwtable
define float @no_opt_sgn(float %0) #1 {
  %2 = fcmp ogt float %0, 0.000000e+00
  %3 = zext i1 %2 to i32
  %4 = fcmp olt float %0, 0.000000e+00
  %.neg = sext i1 %4 to i32
  %5 = add nsw i32 %.neg, %3
  %6 = sitofp i32 %5 to float
  ret float %6
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define float @naive_norm(float* %0, i32 %1) #0 {
  %3 = icmp sgt i32 %1, 0
  %smax = select i1 %3, i32 %1, i32 0
  %wide.trip.count = zext i32 %smax to i64
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %2
  %4 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 3
  %5 = icmp ult i64 %4, 3
  br i1 %5, label %._crit_edge.unr-lcssa, label %.lr.ph.new

.lr.ph.new:                                       ; preds = %.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 2147483644
  br label %6

6:                                                ; preds = %6, %.lr.ph.new
  %.013 = phi float [ 0.000000e+00, %.lr.ph.new ], [ %22, %6 ]
  %indvars.iv2 = phi i64 [ 0, %.lr.ph.new ], [ %indvars.iv.next.3, %6 ]
  %niter = phi i64 [ %unroll_iter, %.lr.ph.new ], [ %niter.nsub.3, %6 ]
  %7 = getelementptr inbounds float, float* %0, i64 %indvars.iv2
  %8 = load float, float* %7, align 4
  %9 = fmul float %8, %8
  %10 = fadd float %.013, %9
  %indvars.iv.next = or i64 %indvars.iv2, 1
  %11 = getelementptr inbounds float, float* %0, i64 %indvars.iv.next
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %12
  %14 = fadd float %10, %13
  %indvars.iv.next.1 = or i64 %indvars.iv2, 2
  %15 = getelementptr inbounds float, float* %0, i64 %indvars.iv.next.1
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, %16
  %18 = fadd float %14, %17
  %indvars.iv.next.2 = or i64 %indvars.iv2, 3
  %19 = getelementptr inbounds float, float* %0, i64 %indvars.iv.next.2
  %20 = load float, float* %19, align 4
  %21 = fmul float %20, %20
  %22 = fadd float %18, %21
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv2, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3.not = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3.not, label %._crit_edge.unr-lcssa, label %6

._crit_edge.unr-lcssa:                            ; preds = %6, %.lr.ph
  %split.ph = phi float [ undef, %.lr.ph ], [ %22, %6 ]
  %.013.unr = phi float [ 0.000000e+00, %.lr.ph ], [ %22, %6 ]
  %indvars.iv2.unr = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next.3, %6 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %._crit_edge, label %.epil.preheader

.epil.preheader:                                  ; preds = %.epil.preheader, %._crit_edge.unr-lcssa
  %.013.epil = phi float [ %26, %.epil.preheader ], [ %.013.unr, %._crit_edge.unr-lcssa ]
  %indvars.iv2.epil = phi i64 [ %indvars.iv.next.epil, %.epil.preheader ], [ %indvars.iv2.unr, %._crit_edge.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %.epil.preheader ], [ %xtraiter, %._crit_edge.unr-lcssa ]
  %23 = getelementptr inbounds float, float* %0, i64 %indvars.iv2.epil
  %24 = load float, float* %23, align 4
  %25 = fmul float %24, %24
  %26 = fadd float %.013.epil, %25
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv2.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %._crit_edge, label %.epil.preheader, !llvm.loop !3

._crit_edge:                                      ; preds = %.epil.preheader, %._crit_edge.unr-lcssa, %2
  %.01.lcssa = phi float [ 0.000000e+00, %2 ], [ %split.ph, %._crit_edge.unr-lcssa ], [ %26, %.epil.preheader ]
  %27 = call float @llvm.sqrt.f32(float %.01.lcssa)
  ret float %27
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32(float) #2

; Function Attrs: noinline nounwind ssp uwtable
define float @no_opt_naive_norm(float* %0, i32 %1) #1 {
  %3 = icmp sgt i32 %1, 0
  %smax = select i1 %3, i32 %1, i32 0
  %wide.trip.count = zext i32 %smax to i64
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %2
  %4 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 3
  %5 = icmp ult i64 %4, 3
  br i1 %5, label %._crit_edge.unr-lcssa, label %.lr.ph.new

.lr.ph.new:                                       ; preds = %.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 2147483644
  br label %6

6:                                                ; preds = %6, %.lr.ph.new
  %.013 = phi float [ 0.000000e+00, %.lr.ph.new ], [ %22, %6 ]
  %indvars.iv2 = phi i64 [ 0, %.lr.ph.new ], [ %indvars.iv.next.3, %6 ]
  %niter = phi i64 [ %unroll_iter, %.lr.ph.new ], [ %niter.nsub.3, %6 ]
  %7 = getelementptr inbounds float, float* %0, i64 %indvars.iv2
  %8 = load float, float* %7, align 4
  %9 = fmul float %8, %8
  %10 = fadd float %.013, %9
  %indvars.iv.next = or i64 %indvars.iv2, 1
  %11 = getelementptr inbounds float, float* %0, i64 %indvars.iv.next
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, %12
  %14 = fadd float %10, %13
  %indvars.iv.next.1 = or i64 %indvars.iv2, 2
  %15 = getelementptr inbounds float, float* %0, i64 %indvars.iv.next.1
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, %16
  %18 = fadd float %14, %17
  %indvars.iv.next.2 = or i64 %indvars.iv2, 3
  %19 = getelementptr inbounds float, float* %0, i64 %indvars.iv.next.2
  %20 = load float, float* %19, align 4
  %21 = fmul float %20, %20
  %22 = fadd float %18, %21
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv2, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3.not = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3.not, label %._crit_edge.unr-lcssa, label %6

._crit_edge.unr-lcssa:                            ; preds = %6, %.lr.ph
  %split.ph = phi float [ undef, %.lr.ph ], [ %22, %6 ]
  %.013.unr = phi float [ 0.000000e+00, %.lr.ph ], [ %22, %6 ]
  %indvars.iv2.unr = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next.3, %6 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %._crit_edge, label %.epil.preheader

.epil.preheader:                                  ; preds = %.epil.preheader, %._crit_edge.unr-lcssa
  %.013.epil = phi float [ %26, %.epil.preheader ], [ %.013.unr, %._crit_edge.unr-lcssa ]
  %indvars.iv2.epil = phi i64 [ %indvars.iv.next.epil, %.epil.preheader ], [ %indvars.iv2.unr, %._crit_edge.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %.epil.preheader ], [ %xtraiter, %._crit_edge.unr-lcssa ]
  %23 = getelementptr inbounds float, float* %0, i64 %indvars.iv2.epil
  %24 = load float, float* %23, align 4
  %25 = fmul float %24, %24
  %26 = fadd float %.013.epil, %25
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv2.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp.not, label %._crit_edge, label %.epil.preheader, !llvm.loop !5

._crit_edge:                                      ; preds = %.epil.preheader, %._crit_edge.unr-lcssa, %2
  %.01.lcssa = phi float [ 0.000000e+00, %2 ], [ %split.ph, %._crit_edge.unr-lcssa ], [ %26, %.epil.preheader ]
  %27 = call float @llvm.sqrt.f32(float %.01.lcssa)
  ret float %27
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @naive_fixed_transpose(float* %0) #0 {
.lr.ph:
  %1 = getelementptr inbounds float, float* %0, i64 1
  %2 = bitcast float* %1 to i32*
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds float, float* %0, i64 2
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %2, align 4
  store i32 %3, i32* %5, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @no_opt_naive_fixed_transpose(float* %0) #1 {
.lr.ph:
  %1 = getelementptr inbounds float, float* %0, i64 1
  %2 = bitcast float* %1 to i32*
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds float, float* %0, i64 2
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %2, align 4
  store i32 %3, i32* %5, align 4
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @naive_fixed_matrix_multiply(float* %0, float* %1, float* %2) #0 {
.preheader:
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr float, float* %0, i32 0
  %4 = load float, float* %3, align 4
  %5 = insertelement <4 x float> zeroinitializer, float %4, i32 0
  %6 = insertelement <4 x float> %5, float 0.000000e+00, i32 1
  %7 = insertelement <4 x float> %6, float 0.000000e+00, i32 2
  %8 = insertelement <4 x float> %7, float 0.000000e+00, i32 3
  %9 = getelementptr float, float* %1, i32 0
  %10 = load float, float* %9, align 4
  %11 = insertelement <4 x float> zeroinitializer, float %10, i32 0
  %12 = insertelement <4 x float> %11, float 0.000000e+00, i32 1
  %13 = insertelement <4 x float> %12, float 0.000000e+00, i32 2
  %14 = insertelement <4 x float> %13, float 0.000000e+00, i32 3
  %15 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8, <4 x float> %14, <4 x float> zeroinitializer)
  %16 = extractelement <4 x float> %15, i32 0
  store float %16, float* %2, align 4
  %17 = getelementptr float, float* %0, i32 0
  %18 = load float, float* %17, align 4
  %19 = insertelement <4 x float> zeroinitializer, float %18, i32 0
  %20 = insertelement <4 x float> %19, float 1.000000e+00, i32 1
  %21 = insertelement <4 x float> %20, float 1.000000e+00, i32 2
  %22 = insertelement <4 x float> %21, float 1.000000e+00, i32 3
  %23 = insertelement <4 x float> zeroinitializer, float %10, i32 0
  %24 = insertelement <4 x float> %23, float 0.000000e+00, i32 1
  %25 = insertelement <4 x float> %24, float 0.000000e+00, i32 2
  %26 = insertelement <4 x float> %25, float 0.000000e+00, i32 3
  %27 = fmul <4 x float> %22, %26
  %28 = fadd <4 x float> %27, zeroinitializer
  %29 = getelementptr float, float* %0, i32 0
  %30 = getelementptr inbounds float, float* %29, i64 1
  %31 = load float, float* %30, align 4
  %32 = insertelement <4 x float> zeroinitializer, float %31, i32 0
  %33 = insertelement <4 x float> %32, float 0.000000e+00, i32 1
  %34 = insertelement <4 x float> %33, float 0.000000e+00, i32 2
  %35 = insertelement <4 x float> %34, float 0.000000e+00, i32 3
  %36 = getelementptr float, float* %1, i32 0
  %37 = getelementptr inbounds float, float* %36, i64 2
  %38 = load float, float* %37, align 4
  %39 = insertelement <4 x float> zeroinitializer, float %38, i32 0
  %40 = insertelement <4 x float> %39, float 0.000000e+00, i32 1
  %41 = insertelement <4 x float> %40, float 0.000000e+00, i32 2
  %42 = insertelement <4 x float> %41, float 0.000000e+00, i32 3
  %43 = call <4 x float> @llvm.fma.v4f32(<4 x float> %35, <4 x float> %42, <4 x float> %28)
  %44 = extractelement <4 x float> %43, i32 0
  store float %44, float* %2, align 4
  %45 = extractelement <4 x float> %43, i32 1
  %46 = getelementptr float, float* %2, i32 0
  %47 = getelementptr inbounds float, float* %46, i64 1
  store float %45, float* %47, align 4
  %48 = getelementptr float, float* %0, i32 0
  %49 = load float, float* %48, align 4
  %50 = insertelement <4 x float> zeroinitializer, float %49, i32 0
  %51 = insertelement <4 x float> %50, float 0.000000e+00, i32 1
  %52 = insertelement <4 x float> %51, float 0.000000e+00, i32 2
  %53 = insertelement <4 x float> %52, float 0.000000e+00, i32 3
  %54 = getelementptr float, float* %1, i32 0
  %55 = getelementptr inbounds float, float* %54, i64 1
  %56 = load float, float* %55, align 4
  %57 = insertelement <4 x float> zeroinitializer, float %56, i32 0
  %58 = insertelement <4 x float> %57, float 0.000000e+00, i32 1
  %59 = insertelement <4 x float> %58, float 0.000000e+00, i32 2
  %60 = insertelement <4 x float> %59, float 0.000000e+00, i32 3
  %61 = call <4 x float> @llvm.fma.v4f32(<4 x float> %53, <4 x float> %60, <4 x float> zeroinitializer)
  %62 = extractelement <4 x float> %61, i32 0
  %63 = getelementptr float, float* %2, i32 0
  %64 = getelementptr inbounds float, float* %63, i64 1
  store float %62, float* %64, align 4
  %65 = insertelement <4 x float> zeroinitializer, float %49, i32 0
  %66 = insertelement <4 x float> %65, float 1.000000e+00, i32 1
  %67 = insertelement <4 x float> %66, float 1.000000e+00, i32 2
  %68 = insertelement <4 x float> %67, float 1.000000e+00, i32 3
  %69 = insertelement <4 x float> zeroinitializer, float %56, i32 0
  %70 = insertelement <4 x float> %69, float 0.000000e+00, i32 1
  %71 = insertelement <4 x float> %70, float 0.000000e+00, i32 2
  %72 = insertelement <4 x float> %71, float 0.000000e+00, i32 3
  %73 = fmul <4 x float> %68, %72
  %74 = fadd <4 x float> %73, zeroinitializer
  %75 = getelementptr float, float* %0, i32 0
  %76 = getelementptr inbounds float, float* %75, i64 1
  %77 = load float, float* %76, align 4
  %78 = insertelement <4 x float> zeroinitializer, float %77, i32 0
  %79 = insertelement <4 x float> %78, float 0.000000e+00, i32 1
  %80 = insertelement <4 x float> %79, float 0.000000e+00, i32 2
  %81 = insertelement <4 x float> %80, float 0.000000e+00, i32 3
  %82 = getelementptr float, float* %1, i32 0
  %83 = getelementptr inbounds float, float* %82, i64 3
  %84 = load float, float* %83, align 4
  %85 = insertelement <4 x float> zeroinitializer, float %84, i32 0
  %86 = insertelement <4 x float> %85, float 0.000000e+00, i32 1
  %87 = insertelement <4 x float> %86, float 0.000000e+00, i32 2
  %88 = insertelement <4 x float> %87, float 0.000000e+00, i32 3
  %89 = call <4 x float> @llvm.fma.v4f32(<4 x float> %81, <4 x float> %88, <4 x float> %74)
  %90 = extractelement <4 x float> %89, i32 0
  %91 = getelementptr float, float* %2, i32 0
  %92 = getelementptr inbounds float, float* %91, i64 1
  store float %90, float* %92, align 4
  %93 = extractelement <4 x float> %89, i32 1
  %94 = getelementptr float, float* %2, i32 0
  %95 = getelementptr inbounds float, float* %94, i64 2
  store float %93, float* %95, align 4
  %96 = getelementptr float, float* %0, i32 0
  %97 = getelementptr inbounds float, float* %96, i64 2
  %98 = load float, float* %97, align 4
  %99 = insertelement <4 x float> zeroinitializer, float %98, i32 0
  %100 = insertelement <4 x float> %99, float 0.000000e+00, i32 1
  %101 = insertelement <4 x float> %100, float 0.000000e+00, i32 2
  %102 = insertelement <4 x float> %101, float 0.000000e+00, i32 3
  %103 = getelementptr float, float* %1, i32 0
  %104 = load float, float* %103, align 4
  %105 = insertelement <4 x float> zeroinitializer, float %104, i32 0
  %106 = insertelement <4 x float> %105, float 0.000000e+00, i32 1
  %107 = insertelement <4 x float> %106, float 0.000000e+00, i32 2
  %108 = insertelement <4 x float> %107, float 0.000000e+00, i32 3
  %109 = call <4 x float> @llvm.fma.v4f32(<4 x float> %102, <4 x float> %108, <4 x float> zeroinitializer)
  %110 = extractelement <4 x float> %109, i32 0
  %111 = getelementptr float, float* %2, i32 0
  %112 = getelementptr inbounds float, float* %111, i64 2
  store float %110, float* %112, align 4
  %113 = insertelement <4 x float> zeroinitializer, float %98, i32 0
  %114 = insertelement <4 x float> %113, float 1.000000e+00, i32 1
  %115 = insertelement <4 x float> %114, float 1.000000e+00, i32 2
  %116 = insertelement <4 x float> %115, float 1.000000e+00, i32 3
  %117 = insertelement <4 x float> zeroinitializer, float %104, i32 0
  %118 = insertelement <4 x float> %117, float 0.000000e+00, i32 1
  %119 = insertelement <4 x float> %118, float 0.000000e+00, i32 2
  %120 = insertelement <4 x float> %119, float 0.000000e+00, i32 3
  %121 = fmul <4 x float> %116, %120
  %122 = fadd <4 x float> %121, zeroinitializer
  %123 = getelementptr float, float* %0, i32 0
  %124 = getelementptr inbounds float, float* %123, i64 3
  %125 = load float, float* %124, align 4
  %126 = insertelement <4 x float> zeroinitializer, float %125, i32 0
  %127 = insertelement <4 x float> %126, float 0.000000e+00, i32 1
  %128 = insertelement <4 x float> %127, float 0.000000e+00, i32 2
  %129 = insertelement <4 x float> %128, float 0.000000e+00, i32 3
  %130 = getelementptr float, float* %1, i32 0
  %131 = getelementptr inbounds float, float* %130, i64 2
  %132 = load float, float* %131, align 4
  %133 = insertelement <4 x float> zeroinitializer, float %132, i32 0
  %134 = insertelement <4 x float> %133, float 0.000000e+00, i32 1
  %135 = insertelement <4 x float> %134, float 0.000000e+00, i32 2
  %136 = insertelement <4 x float> %135, float 0.000000e+00, i32 3
  %137 = call <4 x float> @llvm.fma.v4f32(<4 x float> %129, <4 x float> %136, <4 x float> %122)
  %138 = extractelement <4 x float> %137, i32 0
  %139 = getelementptr float, float* %2, i32 0
  %140 = getelementptr inbounds float, float* %139, i64 2
  store float %138, float* %140, align 4
  %141 = extractelement <4 x float> %137, i32 1
  %142 = getelementptr float, float* %2, i32 0
  %143 = getelementptr inbounds float, float* %142, i64 3
  store float %141, float* %143, align 4
  %144 = getelementptr float, float* %0, i32 0
  %145 = getelementptr inbounds float, float* %144, i64 2
  %146 = load float, float* %145, align 4
  %147 = insertelement <4 x float> zeroinitializer, float %146, i32 0
  %148 = insertelement <4 x float> %147, float 0.000000e+00, i32 1
  %149 = insertelement <4 x float> %148, float 0.000000e+00, i32 2
  %150 = insertelement <4 x float> %149, float 0.000000e+00, i32 3
  %151 = getelementptr float, float* %1, i32 0
  %152 = getelementptr inbounds float, float* %151, i64 1
  %153 = load float, float* %152, align 4
  %154 = insertelement <4 x float> zeroinitializer, float %153, i32 0
  %155 = insertelement <4 x float> %154, float 0.000000e+00, i32 1
  %156 = insertelement <4 x float> %155, float 0.000000e+00, i32 2
  %157 = insertelement <4 x float> %156, float 0.000000e+00, i32 3
  %158 = call <4 x float> @llvm.fma.v4f32(<4 x float> %150, <4 x float> %157, <4 x float> zeroinitializer)
  %159 = extractelement <4 x float> %158, i32 0
  %160 = getelementptr float, float* %2, i32 0
  %161 = getelementptr inbounds float, float* %160, i64 3
  store float %159, float* %161, align 4
  %162 = insertelement <4 x float> zeroinitializer, float %146, i32 0
  %163 = insertelement <4 x float> %162, float 1.000000e+00, i32 1
  %164 = insertelement <4 x float> %163, float 1.000000e+00, i32 2
  %165 = insertelement <4 x float> %164, float 1.000000e+00, i32 3
  %166 = insertelement <4 x float> zeroinitializer, float %153, i32 0
  %167 = insertelement <4 x float> %166, float 0.000000e+00, i32 1
  %168 = insertelement <4 x float> %167, float 0.000000e+00, i32 2
  %169 = insertelement <4 x float> %168, float 0.000000e+00, i32 3
  %170 = fmul <4 x float> %165, %169
  %171 = fadd <4 x float> %170, zeroinitializer
  %172 = getelementptr float, float* %0, i32 0
  %173 = getelementptr inbounds float, float* %172, i64 3
  %174 = load float, float* %173, align 4
  %175 = insertelement <4 x float> zeroinitializer, float %174, i32 0
  %176 = insertelement <4 x float> %175, float 0.000000e+00, i32 1
  %177 = insertelement <4 x float> %176, float 0.000000e+00, i32 2
  %178 = insertelement <4 x float> %177, float 0.000000e+00, i32 3
  %179 = getelementptr float, float* %1, i32 0
  %180 = getelementptr inbounds float, float* %179, i64 3
  %181 = load float, float* %180, align 4
  %182 = insertelement <4 x float> zeroinitializer, float %181, i32 0
  %183 = insertelement <4 x float> %182, float 0.000000e+00, i32 1
  %184 = insertelement <4 x float> %183, float 0.000000e+00, i32 2
  %185 = insertelement <4 x float> %184, float 0.000000e+00, i32 3
  %186 = call <4 x float> @llvm.fma.v4f32(<4 x float> %178, <4 x float> %185, <4 x float> %171)
  %187 = extractelement <4 x float> %186, i32 0
  %188 = getelementptr float, float* %2, i32 0
  %189 = getelementptr inbounds float, float* %188, i64 3
  store float %187, float* %189, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @no_opt_naive_fixed_matrix_multiply(float* %0, float* %1, float* %2) #1 {
.preheader:
  store float 0.000000e+00, float* %2, align 4
  %3 = load float, float* %0, align 4
  %4 = load float, float* %1, align 4
  %5 = fmul float %3, %4
  %6 = fadd float %5, 0.000000e+00
  store float %6, float* %2, align 4
  %7 = getelementptr inbounds float, float* %0, i64 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds float, float* %1, i64 2
  %10 = load float, float* %9, align 4
  %11 = fmul float %8, %10
  %12 = fadd float %6, %11
  store float %12, float* %2, align 4
  %13 = getelementptr inbounds float, float* %2, i64 1
  store float 0.000000e+00, float* %13, align 4
  %14 = load float, float* %0, align 4
  %15 = getelementptr inbounds float, float* %1, i64 1
  %16 = load float, float* %15, align 4
  %17 = fmul float %14, %16
  %18 = fadd float %17, 0.000000e+00
  store float %18, float* %13, align 4
  %19 = load float, float* %7, align 4
  %20 = getelementptr inbounds float, float* %1, i64 3
  %21 = load float, float* %20, align 4
  %22 = fmul float %19, %21
  %23 = fadd float %18, %22
  store float %23, float* %13, align 4
  %24 = getelementptr inbounds float, float* %0, i64 2
  %25 = getelementptr inbounds float, float* %2, i64 2
  store float 0.000000e+00, float* %25, align 4
  %26 = load float, float* %24, align 4
  %27 = load float, float* %1, align 4
  %28 = fmul float %26, %27
  %29 = fadd float %28, 0.000000e+00
  store float %29, float* %25, align 4
  %30 = getelementptr inbounds float, float* %0, i64 3
  %31 = load float, float* %30, align 4
  %32 = load float, float* %9, align 4
  %33 = fmul float %31, %32
  %34 = fadd float %29, %33
  store float %34, float* %25, align 4
  %35 = getelementptr inbounds float, float* %2, i64 3
  store float 0.000000e+00, float* %35, align 4
  %36 = load float, float* %24, align 4
  %37 = load float, float* %15, align 4
  %38 = fmul float %36, %37
  %39 = fadd float %38, 0.000000e+00
  store float %39, float* %35, align 4
  %40 = load float, float* %30, align 4
  %41 = load float, float* %20, align 4
  %42 = fmul float %40, %41
  %43 = fadd float %39, %42
  store float %43, float* %35, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @naive_fixed_qr_decomp(float* %0, float* %1, float* %2) #1 {
.preheader49:
  %3 = getelementptr float, float* %0, i32 0
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = bitcast i32 %5 to float
  %7 = insertelement <4 x float> zeroinitializer, float %6, i32 0
  %8 = insertelement <4 x float> %7, float 0.000000e+00, i32 1
  %9 = insertelement <4 x float> %8, float 0.000000e+00, i32 2
  %10 = insertelement <4 x float> %9, float 0.000000e+00, i32 3
  %11 = extractelement <4 x float> %10, i32 0
  %12 = getelementptr float, float* %2, i32 0
  %13 = bitcast float* %12 to i32*
  %14 = bitcast i32* %13 to float*
  store float %11, float* %14, align 4
  %15 = getelementptr float, float* %0, i32 0
  %16 = getelementptr inbounds float, float* %15, i64 1
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = bitcast i32 %18 to float
  %20 = insertelement <4 x float> zeroinitializer, float %19, i32 0
  %21 = insertelement <4 x float> %20, float 0.000000e+00, i32 1
  %22 = insertelement <4 x float> %21, float 0.000000e+00, i32 2
  %23 = insertelement <4 x float> %22, float 0.000000e+00, i32 3
  %24 = extractelement <4 x float> %23, i32 0
  %25 = getelementptr float, float* %2, i32 0
  %26 = getelementptr inbounds float, float* %25, i64 1
  %27 = bitcast float* %26 to i32*
  %28 = bitcast i32* %27 to float*
  store float %24, float* %28, align 4
  %29 = getelementptr float, float* %0, i32 0
  %30 = getelementptr inbounds float, float* %29, i64 2
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = bitcast i32 %32 to float
  %34 = insertelement <4 x float> zeroinitializer, float %33, i32 0
  %35 = insertelement <4 x float> %34, float 0.000000e+00, i32 1
  %36 = insertelement <4 x float> %35, float 0.000000e+00, i32 2
  %37 = insertelement <4 x float> %36, float 0.000000e+00, i32 3
  %38 = extractelement <4 x float> %37, i32 0
  %39 = getelementptr float, float* %2, i32 0
  %40 = getelementptr inbounds float, float* %39, i64 2
  %41 = bitcast float* %40 to i32*
  %42 = bitcast i32* %41 to float*
  store float %38, float* %42, align 4
  %43 = getelementptr float, float* %0, i32 0
  %44 = getelementptr inbounds float, float* %43, i64 3
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = bitcast i32 %46 to float
  %48 = fneg float %47
  %49 = insertelement <4 x float> zeroinitializer, float %48, i32 0
  %50 = bitcast i32 %5 to float
  %51 = bitcast i32 %5 to float
  %52 = fmul float %50, %51
  %53 = fadd float %52, 0.000000e+00
  %54 = bitcast i32 %32 to float
  %55 = bitcast i32 %32 to float
  %56 = fmul float %54, %55
  %57 = fadd float %53, %56
  %58 = call float @llvm.sqrt.f32(float %57)
  %59 = bitcast i32 %5 to float
  %60 = fcmp olt float %59, 0.000000e+00
  %61 = sext i1 %60 to i32
  %62 = bitcast i32 %5 to float
  %63 = fcmp ogt float %62, 0.000000e+00
  %64 = zext i1 %63 to i32
  %65 = add nsw i32 %61, %64
  %66 = sitofp i32 %65 to float
  %67 = fneg float %66
  %68 = fmul float %58, %67
  %69 = bitcast i32 %5 to float
  %70 = fadd float %69, %68
  %71 = bitcast i32 %5 to float
  %72 = bitcast i32 %5 to float
  %73 = fmul float %71, %72
  %74 = fadd float %73, 0.000000e+00
  %75 = bitcast i32 %32 to float
  %76 = bitcast i32 %32 to float
  %77 = fmul float %75, %76
  %78 = fadd float %74, %77
  %79 = call float @llvm.sqrt.f32(float %78)
  %80 = bitcast i32 %5 to float
  %81 = fcmp olt float %80, 0.000000e+00
  %82 = sext i1 %81 to i32
  %83 = bitcast i32 %5 to float
  %84 = fcmp ogt float %83, 0.000000e+00
  %85 = zext i1 %84 to i32
  %86 = add nsw i32 %82, %85
  %87 = sitofp i32 %86 to float
  %88 = fneg float %87
  %89 = fmul float %79, %88
  %90 = bitcast i32 %5 to float
  %91 = fadd float %90, %89
  %92 = bitcast i32 %5 to float
  %93 = bitcast i32 %5 to float
  %94 = fmul float %92, %93
  %95 = fadd float %94, 0.000000e+00
  %96 = bitcast i32 %32 to float
  %97 = bitcast i32 %32 to float
  %98 = fmul float %96, %97
  %99 = fadd float %95, %98
  %100 = call float @llvm.sqrt.f32(float %99)
  %101 = bitcast i32 %5 to float
  %102 = fcmp olt float %101, 0.000000e+00
  %103 = sext i1 %102 to i32
  %104 = bitcast i32 %5 to float
  %105 = fcmp ogt float %104, 0.000000e+00
  %106 = zext i1 %105 to i32
  %107 = add nsw i32 %103, %106
  %108 = sitofp i32 %107 to float
  %109 = fneg float %108
  %110 = fmul float %100, %109
  %111 = bitcast i32 %5 to float
  %112 = fadd float %111, %110
  %113 = fmul float %91, %112
  %114 = fadd float %113, 0.000000e+00
  %115 = bitcast i32 %5 to float
  %116 = bitcast i32 %5 to float
  %117 = fmul float %115, %116
  %118 = fadd float %117, 0.000000e+00
  %119 = bitcast i32 %32 to float
  %120 = bitcast i32 %32 to float
  %121 = fmul float %119, %120
  %122 = fadd float %118, %121
  %123 = call float @llvm.sqrt.f32(float %122)
  %124 = bitcast i32 %5 to float
  %125 = fcmp olt float %124, 0.000000e+00
  %126 = sext i1 %125 to i32
  %127 = bitcast i32 %5 to float
  %128 = fcmp ogt float %127, 0.000000e+00
  %129 = zext i1 %128 to i32
  %130 = add nsw i32 %126, %129
  %131 = sitofp i32 %130 to float
  %132 = fneg float %131
  %133 = fmul float %123, %132
  %134 = fmul float %133, 0.000000e+00
  %135 = bitcast i32 %32 to float
  %136 = fadd float %135, %134
  %137 = bitcast i32 %5 to float
  %138 = bitcast i32 %5 to float
  %139 = fmul float %137, %138
  %140 = fadd float %139, 0.000000e+00
  %141 = bitcast i32 %32 to float
  %142 = bitcast i32 %32 to float
  %143 = fmul float %141, %142
  %144 = fadd float %140, %143
  %145 = call float @llvm.sqrt.f32(float %144)
  %146 = bitcast i32 %5 to float
  %147 = fcmp olt float %146, 0.000000e+00
  %148 = sext i1 %147 to i32
  %149 = bitcast i32 %5 to float
  %150 = fcmp ogt float %149, 0.000000e+00
  %151 = zext i1 %150 to i32
  %152 = add nsw i32 %148, %151
  %153 = sitofp i32 %152 to float
  %154 = fneg float %153
  %155 = fmul float %145, %154
  %156 = fmul float %155, 0.000000e+00
  %157 = bitcast i32 %32 to float
  %158 = fadd float %157, %156
  %159 = fmul float %136, %158
  %160 = fadd float %114, %159
  %161 = call float @llvm.sqrt.f32(float %160)
  %162 = fadd float %161, 0.000000e+00
  %163 = fdiv float %70, %162
  %164 = fmul float %163, 2.000000e+00
  %165 = bitcast i32 %5 to float
  %166 = bitcast i32 %5 to float
  %167 = fmul float %165, %166
  %168 = fadd float %167, 0.000000e+00
  %169 = bitcast i32 %32 to float
  %170 = bitcast i32 %32 to float
  %171 = fmul float %169, %170
  %172 = fadd float %168, %171
  %173 = call float @llvm.sqrt.f32(float %172)
  %174 = bitcast i32 %5 to float
  %175 = fcmp olt float %174, 0.000000e+00
  %176 = sext i1 %175 to i32
  %177 = bitcast i32 %5 to float
  %178 = fcmp ogt float %177, 0.000000e+00
  %179 = zext i1 %178 to i32
  %180 = add nsw i32 %176, %179
  %181 = sitofp i32 %180 to float
  %182 = fneg float %181
  %183 = fmul float %173, %182
  %184 = bitcast i32 %5 to float
  %185 = fadd float %184, %183
  %186 = bitcast i32 %5 to float
  %187 = bitcast i32 %5 to float
  %188 = fmul float %186, %187
  %189 = fadd float %188, 0.000000e+00
  %190 = bitcast i32 %32 to float
  %191 = bitcast i32 %32 to float
  %192 = fmul float %190, %191
  %193 = fadd float %189, %192
  %194 = call float @llvm.sqrt.f32(float %193)
  %195 = bitcast i32 %5 to float
  %196 = fcmp olt float %195, 0.000000e+00
  %197 = sext i1 %196 to i32
  %198 = bitcast i32 %5 to float
  %199 = fcmp ogt float %198, 0.000000e+00
  %200 = zext i1 %199 to i32
  %201 = add nsw i32 %197, %200
  %202 = sitofp i32 %201 to float
  %203 = fneg float %202
  %204 = fmul float %194, %203
  %205 = bitcast i32 %5 to float
  %206 = fadd float %205, %204
  %207 = bitcast i32 %5 to float
  %208 = bitcast i32 %5 to float
  %209 = fmul float %207, %208
  %210 = fadd float %209, 0.000000e+00
  %211 = bitcast i32 %32 to float
  %212 = bitcast i32 %32 to float
  %213 = fmul float %211, %212
  %214 = fadd float %210, %213
  %215 = call float @llvm.sqrt.f32(float %214)
  %216 = bitcast i32 %5 to float
  %217 = fcmp olt float %216, 0.000000e+00
  %218 = sext i1 %217 to i32
  %219 = bitcast i32 %5 to float
  %220 = fcmp ogt float %219, 0.000000e+00
  %221 = zext i1 %220 to i32
  %222 = add nsw i32 %218, %221
  %223 = sitofp i32 %222 to float
  %224 = fneg float %223
  %225 = fmul float %215, %224
  %226 = bitcast i32 %5 to float
  %227 = fadd float %226, %225
  %228 = fmul float %206, %227
  %229 = fadd float %228, 0.000000e+00
  %230 = bitcast i32 %5 to float
  %231 = bitcast i32 %5 to float
  %232 = fmul float %230, %231
  %233 = fadd float %232, 0.000000e+00
  %234 = bitcast i32 %32 to float
  %235 = bitcast i32 %32 to float
  %236 = fmul float %234, %235
  %237 = fadd float %233, %236
  %238 = call float @llvm.sqrt.f32(float %237)
  %239 = bitcast i32 %5 to float
  %240 = fcmp olt float %239, 0.000000e+00
  %241 = sext i1 %240 to i32
  %242 = bitcast i32 %5 to float
  %243 = fcmp ogt float %242, 0.000000e+00
  %244 = zext i1 %243 to i32
  %245 = add nsw i32 %241, %244
  %246 = sitofp i32 %245 to float
  %247 = fneg float %246
  %248 = fmul float %238, %247
  %249 = fmul float %248, 0.000000e+00
  %250 = bitcast i32 %32 to float
  %251 = fadd float %250, %249
  %252 = bitcast i32 %5 to float
  %253 = bitcast i32 %5 to float
  %254 = fmul float %252, %253
  %255 = fadd float %254, 0.000000e+00
  %256 = bitcast i32 %32 to float
  %257 = bitcast i32 %32 to float
  %258 = fmul float %256, %257
  %259 = fadd float %255, %258
  %260 = call float @llvm.sqrt.f32(float %259)
  %261 = bitcast i32 %5 to float
  %262 = fcmp olt float %261, 0.000000e+00
  %263 = sext i1 %262 to i32
  %264 = bitcast i32 %5 to float
  %265 = fcmp ogt float %264, 0.000000e+00
  %266 = zext i1 %265 to i32
  %267 = add nsw i32 %263, %266
  %268 = sitofp i32 %267 to float
  %269 = fneg float %268
  %270 = fmul float %260, %269
  %271 = fmul float %270, 0.000000e+00
  %272 = bitcast i32 %32 to float
  %273 = fadd float %272, %271
  %274 = fmul float %251, %273
  %275 = fadd float %229, %274
  %276 = call float @llvm.sqrt.f32(float %275)
  %277 = fadd float %276, 0.000000e+00
  %278 = fdiv float %185, %277
  %279 = fmul float %164, %278
  %280 = insertelement <4 x float> %49, float %279, i32 1
  %281 = bitcast i32 %5 to float
  %282 = bitcast i32 %5 to float
  %283 = fmul float %281, %282
  %284 = fadd float %283, 0.000000e+00
  %285 = bitcast i32 %32 to float
  %286 = bitcast i32 %32 to float
  %287 = fmul float %285, %286
  %288 = fadd float %284, %287
  %289 = call float @llvm.sqrt.f32(float %288)
  %290 = bitcast i32 %5 to float
  %291 = fcmp olt float %290, 0.000000e+00
  %292 = sext i1 %291 to i32
  %293 = bitcast i32 %5 to float
  %294 = fcmp ogt float %293, 0.000000e+00
  %295 = zext i1 %294 to i32
  %296 = add nsw i32 %292, %295
  %297 = sitofp i32 %296 to float
  %298 = fneg float %297
  %299 = fmul float %289, %298
  %300 = bitcast i32 %5 to float
  %301 = fadd float %300, %299
  %302 = bitcast i32 %5 to float
  %303 = bitcast i32 %5 to float
  %304 = fmul float %302, %303
  %305 = fadd float %304, 0.000000e+00
  %306 = bitcast i32 %32 to float
  %307 = bitcast i32 %32 to float
  %308 = fmul float %306, %307
  %309 = fadd float %305, %308
  %310 = call float @llvm.sqrt.f32(float %309)
  %311 = bitcast i32 %5 to float
  %312 = fcmp olt float %311, 0.000000e+00
  %313 = sext i1 %312 to i32
  %314 = bitcast i32 %5 to float
  %315 = fcmp ogt float %314, 0.000000e+00
  %316 = zext i1 %315 to i32
  %317 = add nsw i32 %313, %316
  %318 = sitofp i32 %317 to float
  %319 = fneg float %318
  %320 = fmul float %310, %319
  %321 = bitcast i32 %5 to float
  %322 = fadd float %321, %320
  %323 = bitcast i32 %5 to float
  %324 = bitcast i32 %5 to float
  %325 = fmul float %323, %324
  %326 = fadd float %325, 0.000000e+00
  %327 = bitcast i32 %32 to float
  %328 = bitcast i32 %32 to float
  %329 = fmul float %327, %328
  %330 = fadd float %326, %329
  %331 = call float @llvm.sqrt.f32(float %330)
  %332 = bitcast i32 %5 to float
  %333 = fcmp olt float %332, 0.000000e+00
  %334 = sext i1 %333 to i32
  %335 = bitcast i32 %5 to float
  %336 = fcmp ogt float %335, 0.000000e+00
  %337 = zext i1 %336 to i32
  %338 = add nsw i32 %334, %337
  %339 = sitofp i32 %338 to float
  %340 = fneg float %339
  %341 = fmul float %331, %340
  %342 = bitcast i32 %5 to float
  %343 = fadd float %342, %341
  %344 = fmul float %322, %343
  %345 = fadd float %344, 0.000000e+00
  %346 = bitcast i32 %5 to float
  %347 = bitcast i32 %5 to float
  %348 = fmul float %346, %347
  %349 = fadd float %348, 0.000000e+00
  %350 = bitcast i32 %32 to float
  %351 = bitcast i32 %32 to float
  %352 = fmul float %350, %351
  %353 = fadd float %349, %352
  %354 = call float @llvm.sqrt.f32(float %353)
  %355 = bitcast i32 %5 to float
  %356 = fcmp olt float %355, 0.000000e+00
  %357 = sext i1 %356 to i32
  %358 = bitcast i32 %5 to float
  %359 = fcmp ogt float %358, 0.000000e+00
  %360 = zext i1 %359 to i32
  %361 = add nsw i32 %357, %360
  %362 = sitofp i32 %361 to float
  %363 = fneg float %362
  %364 = fmul float %354, %363
  %365 = fmul float %364, 0.000000e+00
  %366 = bitcast i32 %32 to float
  %367 = fadd float %366, %365
  %368 = bitcast i32 %5 to float
  %369 = bitcast i32 %5 to float
  %370 = fmul float %368, %369
  %371 = fadd float %370, 0.000000e+00
  %372 = bitcast i32 %32 to float
  %373 = bitcast i32 %32 to float
  %374 = fmul float %372, %373
  %375 = fadd float %371, %374
  %376 = call float @llvm.sqrt.f32(float %375)
  %377 = bitcast i32 %5 to float
  %378 = fcmp olt float %377, 0.000000e+00
  %379 = sext i1 %378 to i32
  %380 = bitcast i32 %5 to float
  %381 = fcmp ogt float %380, 0.000000e+00
  %382 = zext i1 %381 to i32
  %383 = add nsw i32 %379, %382
  %384 = sitofp i32 %383 to float
  %385 = fneg float %384
  %386 = fmul float %376, %385
  %387 = fmul float %386, 0.000000e+00
  %388 = bitcast i32 %32 to float
  %389 = fadd float %388, %387
  %390 = fmul float %367, %389
  %391 = fadd float %345, %390
  %392 = call float @llvm.sqrt.f32(float %391)
  %393 = fadd float %392, 0.000000e+00
  %394 = fdiv float %301, %393
  %395 = fmul float %394, 2.000000e+00
  %396 = bitcast i32 %5 to float
  %397 = bitcast i32 %5 to float
  %398 = fmul float %396, %397
  %399 = fadd float %398, 0.000000e+00
  %400 = bitcast i32 %32 to float
  %401 = bitcast i32 %32 to float
  %402 = fmul float %400, %401
  %403 = fadd float %399, %402
  %404 = call float @llvm.sqrt.f32(float %403)
  %405 = bitcast i32 %5 to float
  %406 = fcmp olt float %405, 0.000000e+00
  %407 = sext i1 %406 to i32
  %408 = bitcast i32 %5 to float
  %409 = fcmp ogt float %408, 0.000000e+00
  %410 = zext i1 %409 to i32
  %411 = add nsw i32 %407, %410
  %412 = sitofp i32 %411 to float
  %413 = fneg float %412
  %414 = fmul float %404, %413
  %415 = fmul float %414, 0.000000e+00
  %416 = bitcast i32 %32 to float
  %417 = fadd float %416, %415
  %418 = bitcast i32 %5 to float
  %419 = bitcast i32 %5 to float
  %420 = fmul float %418, %419
  %421 = fadd float %420, 0.000000e+00
  %422 = bitcast i32 %32 to float
  %423 = bitcast i32 %32 to float
  %424 = fmul float %422, %423
  %425 = fadd float %421, %424
  %426 = call float @llvm.sqrt.f32(float %425)
  %427 = bitcast i32 %5 to float
  %428 = fcmp olt float %427, 0.000000e+00
  %429 = sext i1 %428 to i32
  %430 = bitcast i32 %5 to float
  %431 = fcmp ogt float %430, 0.000000e+00
  %432 = zext i1 %431 to i32
  %433 = add nsw i32 %429, %432
  %434 = sitofp i32 %433 to float
  %435 = fneg float %434
  %436 = fmul float %426, %435
  %437 = bitcast i32 %5 to float
  %438 = fadd float %437, %436
  %439 = bitcast i32 %5 to float
  %440 = bitcast i32 %5 to float
  %441 = fmul float %439, %440
  %442 = fadd float %441, 0.000000e+00
  %443 = bitcast i32 %32 to float
  %444 = bitcast i32 %32 to float
  %445 = fmul float %443, %444
  %446 = fadd float %442, %445
  %447 = call float @llvm.sqrt.f32(float %446)
  %448 = bitcast i32 %5 to float
  %449 = fcmp olt float %448, 0.000000e+00
  %450 = sext i1 %449 to i32
  %451 = bitcast i32 %5 to float
  %452 = fcmp ogt float %451, 0.000000e+00
  %453 = zext i1 %452 to i32
  %454 = add nsw i32 %450, %453
  %455 = sitofp i32 %454 to float
  %456 = fneg float %455
  %457 = fmul float %447, %456
  %458 = bitcast i32 %5 to float
  %459 = fadd float %458, %457
  %460 = fmul float %438, %459
  %461 = fadd float %460, 0.000000e+00
  %462 = bitcast i32 %5 to float
  %463 = bitcast i32 %5 to float
  %464 = fmul float %462, %463
  %465 = fadd float %464, 0.000000e+00
  %466 = bitcast i32 %32 to float
  %467 = bitcast i32 %32 to float
  %468 = fmul float %466, %467
  %469 = fadd float %465, %468
  %470 = call float @llvm.sqrt.f32(float %469)
  %471 = bitcast i32 %5 to float
  %472 = fcmp olt float %471, 0.000000e+00
  %473 = sext i1 %472 to i32
  %474 = bitcast i32 %5 to float
  %475 = fcmp ogt float %474, 0.000000e+00
  %476 = zext i1 %475 to i32
  %477 = add nsw i32 %473, %476
  %478 = sitofp i32 %477 to float
  %479 = fneg float %478
  %480 = fmul float %470, %479
  %481 = fmul float %480, 0.000000e+00
  %482 = bitcast i32 %32 to float
  %483 = fadd float %482, %481
  %484 = bitcast i32 %5 to float
  %485 = bitcast i32 %5 to float
  %486 = fmul float %484, %485
  %487 = fadd float %486, 0.000000e+00
  %488 = bitcast i32 %32 to float
  %489 = bitcast i32 %32 to float
  %490 = fmul float %488, %489
  %491 = fadd float %487, %490
  %492 = call float @llvm.sqrt.f32(float %491)
  %493 = bitcast i32 %5 to float
  %494 = fcmp olt float %493, 0.000000e+00
  %495 = sext i1 %494 to i32
  %496 = bitcast i32 %5 to float
  %497 = fcmp ogt float %496, 0.000000e+00
  %498 = zext i1 %497 to i32
  %499 = add nsw i32 %495, %498
  %500 = sitofp i32 %499 to float
  %501 = fneg float %500
  %502 = fmul float %492, %501
  %503 = fmul float %502, 0.000000e+00
  %504 = bitcast i32 %32 to float
  %505 = fadd float %504, %503
  %506 = fmul float %483, %505
  %507 = fadd float %461, %506
  %508 = call float @llvm.sqrt.f32(float %507)
  %509 = fadd float %508, 0.000000e+00
  %510 = fdiv float %417, %509
  %511 = fmul float %395, %510
  %512 = insertelement <4 x float> %280, float %511, i32 2
  %513 = bitcast i32 %5 to float
  %514 = bitcast i32 %5 to float
  %515 = fmul float %513, %514
  %516 = fadd float %515, 0.000000e+00
  %517 = bitcast i32 %32 to float
  %518 = bitcast i32 %32 to float
  %519 = fmul float %517, %518
  %520 = fadd float %516, %519
  %521 = call float @llvm.sqrt.f32(float %520)
  %522 = bitcast i32 %5 to float
  %523 = fcmp olt float %522, 0.000000e+00
  %524 = sext i1 %523 to i32
  %525 = bitcast i32 %5 to float
  %526 = fcmp ogt float %525, 0.000000e+00
  %527 = zext i1 %526 to i32
  %528 = add nsw i32 %524, %527
  %529 = sitofp i32 %528 to float
  %530 = fneg float %529
  %531 = fmul float %521, %530
  %532 = fmul float %531, 0.000000e+00
  %533 = bitcast i32 %32 to float
  %534 = fadd float %533, %532
  %535 = bitcast i32 %5 to float
  %536 = bitcast i32 %5 to float
  %537 = fmul float %535, %536
  %538 = fadd float %537, 0.000000e+00
  %539 = bitcast i32 %32 to float
  %540 = bitcast i32 %32 to float
  %541 = fmul float %539, %540
  %542 = fadd float %538, %541
  %543 = call float @llvm.sqrt.f32(float %542)
  %544 = bitcast i32 %5 to float
  %545 = fcmp olt float %544, 0.000000e+00
  %546 = sext i1 %545 to i32
  %547 = bitcast i32 %5 to float
  %548 = fcmp ogt float %547, 0.000000e+00
  %549 = zext i1 %548 to i32
  %550 = add nsw i32 %546, %549
  %551 = sitofp i32 %550 to float
  %552 = fneg float %551
  %553 = fmul float %543, %552
  %554 = bitcast i32 %5 to float
  %555 = fadd float %554, %553
  %556 = bitcast i32 %5 to float
  %557 = bitcast i32 %5 to float
  %558 = fmul float %556, %557
  %559 = fadd float %558, 0.000000e+00
  %560 = bitcast i32 %32 to float
  %561 = bitcast i32 %32 to float
  %562 = fmul float %560, %561
  %563 = fadd float %559, %562
  %564 = call float @llvm.sqrt.f32(float %563)
  %565 = bitcast i32 %5 to float
  %566 = fcmp olt float %565, 0.000000e+00
  %567 = sext i1 %566 to i32
  %568 = bitcast i32 %5 to float
  %569 = fcmp ogt float %568, 0.000000e+00
  %570 = zext i1 %569 to i32
  %571 = add nsw i32 %567, %570
  %572 = sitofp i32 %571 to float
  %573 = fneg float %572
  %574 = fmul float %564, %573
  %575 = bitcast i32 %5 to float
  %576 = fadd float %575, %574
  %577 = fmul float %555, %576
  %578 = fadd float %577, 0.000000e+00
  %579 = bitcast i32 %5 to float
  %580 = bitcast i32 %5 to float
  %581 = fmul float %579, %580
  %582 = fadd float %581, 0.000000e+00
  %583 = bitcast i32 %32 to float
  %584 = bitcast i32 %32 to float
  %585 = fmul float %583, %584
  %586 = fadd float %582, %585
  %587 = call float @llvm.sqrt.f32(float %586)
  %588 = bitcast i32 %5 to float
  %589 = fcmp olt float %588, 0.000000e+00
  %590 = sext i1 %589 to i32
  %591 = bitcast i32 %5 to float
  %592 = fcmp ogt float %591, 0.000000e+00
  %593 = zext i1 %592 to i32
  %594 = add nsw i32 %590, %593
  %595 = sitofp i32 %594 to float
  %596 = fneg float %595
  %597 = fmul float %587, %596
  %598 = fmul float %597, 0.000000e+00
  %599 = bitcast i32 %32 to float
  %600 = fadd float %599, %598
  %601 = bitcast i32 %5 to float
  %602 = bitcast i32 %5 to float
  %603 = fmul float %601, %602
  %604 = fadd float %603, 0.000000e+00
  %605 = bitcast i32 %32 to float
  %606 = bitcast i32 %32 to float
  %607 = fmul float %605, %606
  %608 = fadd float %604, %607
  %609 = call float @llvm.sqrt.f32(float %608)
  %610 = bitcast i32 %5 to float
  %611 = fcmp olt float %610, 0.000000e+00
  %612 = sext i1 %611 to i32
  %613 = bitcast i32 %5 to float
  %614 = fcmp ogt float %613, 0.000000e+00
  %615 = zext i1 %614 to i32
  %616 = add nsw i32 %612, %615
  %617 = sitofp i32 %616 to float
  %618 = fneg float %617
  %619 = fmul float %609, %618
  %620 = fmul float %619, 0.000000e+00
  %621 = bitcast i32 %32 to float
  %622 = fadd float %621, %620
  %623 = fmul float %600, %622
  %624 = fadd float %578, %623
  %625 = call float @llvm.sqrt.f32(float %624)
  %626 = fadd float %625, 0.000000e+00
  %627 = fdiv float %534, %626
  %628 = fmul float %627, 2.000000e+00
  %629 = bitcast i32 %5 to float
  %630 = bitcast i32 %5 to float
  %631 = fmul float %629, %630
  %632 = fadd float %631, 0.000000e+00
  %633 = bitcast i32 %32 to float
  %634 = bitcast i32 %32 to float
  %635 = fmul float %633, %634
  %636 = fadd float %632, %635
  %637 = call float @llvm.sqrt.f32(float %636)
  %638 = bitcast i32 %5 to float
  %639 = fcmp olt float %638, 0.000000e+00
  %640 = sext i1 %639 to i32
  %641 = bitcast i32 %5 to float
  %642 = fcmp ogt float %641, 0.000000e+00
  %643 = zext i1 %642 to i32
  %644 = add nsw i32 %640, %643
  %645 = sitofp i32 %644 to float
  %646 = fneg float %645
  %647 = fmul float %637, %646
  %648 = bitcast i32 %5 to float
  %649 = fadd float %648, %647
  %650 = bitcast i32 %5 to float
  %651 = bitcast i32 %5 to float
  %652 = fmul float %650, %651
  %653 = fadd float %652, 0.000000e+00
  %654 = bitcast i32 %32 to float
  %655 = bitcast i32 %32 to float
  %656 = fmul float %654, %655
  %657 = fadd float %653, %656
  %658 = call float @llvm.sqrt.f32(float %657)
  %659 = bitcast i32 %5 to float
  %660 = fcmp olt float %659, 0.000000e+00
  %661 = sext i1 %660 to i32
  %662 = bitcast i32 %5 to float
  %663 = fcmp ogt float %662, 0.000000e+00
  %664 = zext i1 %663 to i32
  %665 = add nsw i32 %661, %664
  %666 = sitofp i32 %665 to float
  %667 = fneg float %666
  %668 = fmul float %658, %667
  %669 = bitcast i32 %5 to float
  %670 = fadd float %669, %668
  %671 = bitcast i32 %5 to float
  %672 = bitcast i32 %5 to float
  %673 = fmul float %671, %672
  %674 = fadd float %673, 0.000000e+00
  %675 = bitcast i32 %32 to float
  %676 = bitcast i32 %32 to float
  %677 = fmul float %675, %676
  %678 = fadd float %674, %677
  %679 = call float @llvm.sqrt.f32(float %678)
  %680 = bitcast i32 %5 to float
  %681 = fcmp olt float %680, 0.000000e+00
  %682 = sext i1 %681 to i32
  %683 = bitcast i32 %5 to float
  %684 = fcmp ogt float %683, 0.000000e+00
  %685 = zext i1 %684 to i32
  %686 = add nsw i32 %682, %685
  %687 = sitofp i32 %686 to float
  %688 = fneg float %687
  %689 = fmul float %679, %688
  %690 = bitcast i32 %5 to float
  %691 = fadd float %690, %689
  %692 = fmul float %670, %691
  %693 = fadd float %692, 0.000000e+00
  %694 = bitcast i32 %5 to float
  %695 = bitcast i32 %5 to float
  %696 = fmul float %694, %695
  %697 = fadd float %696, 0.000000e+00
  %698 = bitcast i32 %32 to float
  %699 = bitcast i32 %32 to float
  %700 = fmul float %698, %699
  %701 = fadd float %697, %700
  %702 = call float @llvm.sqrt.f32(float %701)
  %703 = bitcast i32 %5 to float
  %704 = fcmp olt float %703, 0.000000e+00
  %705 = sext i1 %704 to i32
  %706 = bitcast i32 %5 to float
  %707 = fcmp ogt float %706, 0.000000e+00
  %708 = zext i1 %707 to i32
  %709 = add nsw i32 %705, %708
  %710 = sitofp i32 %709 to float
  %711 = fneg float %710
  %712 = fmul float %702, %711
  %713 = fmul float %712, 0.000000e+00
  %714 = bitcast i32 %32 to float
  %715 = fadd float %714, %713
  %716 = bitcast i32 %5 to float
  %717 = bitcast i32 %5 to float
  %718 = fmul float %716, %717
  %719 = fadd float %718, 0.000000e+00
  %720 = bitcast i32 %32 to float
  %721 = bitcast i32 %32 to float
  %722 = fmul float %720, %721
  %723 = fadd float %719, %722
  %724 = call float @llvm.sqrt.f32(float %723)
  %725 = bitcast i32 %5 to float
  %726 = fcmp olt float %725, 0.000000e+00
  %727 = sext i1 %726 to i32
  %728 = bitcast i32 %5 to float
  %729 = fcmp ogt float %728, 0.000000e+00
  %730 = zext i1 %729 to i32
  %731 = add nsw i32 %727, %730
  %732 = sitofp i32 %731 to float
  %733 = fneg float %732
  %734 = fmul float %724, %733
  %735 = fmul float %734, 0.000000e+00
  %736 = bitcast i32 %32 to float
  %737 = fadd float %736, %735
  %738 = fmul float %715, %737
  %739 = fadd float %693, %738
  %740 = call float @llvm.sqrt.f32(float %739)
  %741 = fadd float %740, 0.000000e+00
  %742 = fdiv float %649, %741
  %743 = fmul float %628, %742
  %744 = insertelement <4 x float> %512, float %743, i32 3
  %745 = fsub <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, %744
  %746 = bitcast i32 %5 to float
  %747 = bitcast i32 %5 to float
  %748 = fmul float %746, %747
  %749 = fadd float %748, 0.000000e+00
  %750 = bitcast i32 %32 to float
  %751 = bitcast i32 %32 to float
  %752 = fmul float %750, %751
  %753 = fadd float %749, %752
  %754 = call float @llvm.sqrt.f32(float %753)
  %755 = bitcast i32 %5 to float
  %756 = fcmp olt float %755, 0.000000e+00
  %757 = sext i1 %756 to i32
  %758 = bitcast i32 %5 to float
  %759 = fcmp ogt float %758, 0.000000e+00
  %760 = zext i1 %759 to i32
  %761 = add nsw i32 %757, %760
  %762 = sitofp i32 %761 to float
  %763 = fneg float %762
  %764 = fmul float %754, %763
  %765 = fmul float %764, 0.000000e+00
  %766 = bitcast i32 %32 to float
  %767 = fadd float %766, %765
  %768 = bitcast i32 %5 to float
  %769 = bitcast i32 %5 to float
  %770 = fmul float %768, %769
  %771 = fadd float %770, 0.000000e+00
  %772 = bitcast i32 %32 to float
  %773 = bitcast i32 %32 to float
  %774 = fmul float %772, %773
  %775 = fadd float %771, %774
  %776 = call float @llvm.sqrt.f32(float %775)
  %777 = bitcast i32 %5 to float
  %778 = fcmp olt float %777, 0.000000e+00
  %779 = sext i1 %778 to i32
  %780 = bitcast i32 %5 to float
  %781 = fcmp ogt float %780, 0.000000e+00
  %782 = zext i1 %781 to i32
  %783 = add nsw i32 %779, %782
  %784 = sitofp i32 %783 to float
  %785 = fneg float %784
  %786 = fmul float %776, %785
  %787 = bitcast i32 %5 to float
  %788 = fadd float %787, %786
  %789 = bitcast i32 %5 to float
  %790 = bitcast i32 %5 to float
  %791 = fmul float %789, %790
  %792 = fadd float %791, 0.000000e+00
  %793 = bitcast i32 %32 to float
  %794 = bitcast i32 %32 to float
  %795 = fmul float %793, %794
  %796 = fadd float %792, %795
  %797 = call float @llvm.sqrt.f32(float %796)
  %798 = bitcast i32 %5 to float
  %799 = fcmp olt float %798, 0.000000e+00
  %800 = sext i1 %799 to i32
  %801 = bitcast i32 %5 to float
  %802 = fcmp ogt float %801, 0.000000e+00
  %803 = zext i1 %802 to i32
  %804 = add nsw i32 %800, %803
  %805 = sitofp i32 %804 to float
  %806 = fneg float %805
  %807 = fmul float %797, %806
  %808 = bitcast i32 %5 to float
  %809 = fadd float %808, %807
  %810 = fmul float %788, %809
  %811 = fadd float %810, 0.000000e+00
  %812 = bitcast i32 %5 to float
  %813 = bitcast i32 %5 to float
  %814 = fmul float %812, %813
  %815 = fadd float %814, 0.000000e+00
  %816 = bitcast i32 %32 to float
  %817 = bitcast i32 %32 to float
  %818 = fmul float %816, %817
  %819 = fadd float %815, %818
  %820 = call float @llvm.sqrt.f32(float %819)
  %821 = bitcast i32 %5 to float
  %822 = fcmp olt float %821, 0.000000e+00
  %823 = sext i1 %822 to i32
  %824 = bitcast i32 %5 to float
  %825 = fcmp ogt float %824, 0.000000e+00
  %826 = zext i1 %825 to i32
  %827 = add nsw i32 %823, %826
  %828 = sitofp i32 %827 to float
  %829 = fneg float %828
  %830 = fmul float %820, %829
  %831 = fmul float %830, 0.000000e+00
  %832 = bitcast i32 %32 to float
  %833 = fadd float %832, %831
  %834 = bitcast i32 %5 to float
  %835 = bitcast i32 %5 to float
  %836 = fmul float %834, %835
  %837 = fadd float %836, 0.000000e+00
  %838 = bitcast i32 %32 to float
  %839 = bitcast i32 %32 to float
  %840 = fmul float %838, %839
  %841 = fadd float %837, %840
  %842 = call float @llvm.sqrt.f32(float %841)
  %843 = bitcast i32 %5 to float
  %844 = fcmp olt float %843, 0.000000e+00
  %845 = sext i1 %844 to i32
  %846 = bitcast i32 %5 to float
  %847 = fcmp ogt float %846, 0.000000e+00
  %848 = zext i1 %847 to i32
  %849 = add nsw i32 %845, %848
  %850 = sitofp i32 %849 to float
  %851 = fneg float %850
  %852 = fmul float %842, %851
  %853 = fmul float %852, 0.000000e+00
  %854 = bitcast i32 %32 to float
  %855 = fadd float %854, %853
  %856 = fmul float %833, %855
  %857 = fadd float %811, %856
  %858 = call float @llvm.sqrt.f32(float %857)
  %859 = fadd float %858, 0.000000e+00
  %860 = fdiv float %767, %859
  %861 = fmul float %860, 2.000000e+00
  %862 = bitcast i32 %5 to float
  %863 = bitcast i32 %5 to float
  %864 = fmul float %862, %863
  %865 = fadd float %864, 0.000000e+00
  %866 = bitcast i32 %32 to float
  %867 = bitcast i32 %32 to float
  %868 = fmul float %866, %867
  %869 = fadd float %865, %868
  %870 = call float @llvm.sqrt.f32(float %869)
  %871 = bitcast i32 %5 to float
  %872 = fcmp olt float %871, 0.000000e+00
  %873 = sext i1 %872 to i32
  %874 = bitcast i32 %5 to float
  %875 = fcmp ogt float %874, 0.000000e+00
  %876 = zext i1 %875 to i32
  %877 = add nsw i32 %873, %876
  %878 = sitofp i32 %877 to float
  %879 = fneg float %878
  %880 = fmul float %870, %879
  %881 = fmul float %880, 0.000000e+00
  %882 = bitcast i32 %32 to float
  %883 = fadd float %882, %881
  %884 = bitcast i32 %5 to float
  %885 = bitcast i32 %5 to float
  %886 = fmul float %884, %885
  %887 = fadd float %886, 0.000000e+00
  %888 = bitcast i32 %32 to float
  %889 = bitcast i32 %32 to float
  %890 = fmul float %888, %889
  %891 = fadd float %887, %890
  %892 = call float @llvm.sqrt.f32(float %891)
  %893 = bitcast i32 %5 to float
  %894 = fcmp olt float %893, 0.000000e+00
  %895 = sext i1 %894 to i32
  %896 = bitcast i32 %5 to float
  %897 = fcmp ogt float %896, 0.000000e+00
  %898 = zext i1 %897 to i32
  %899 = add nsw i32 %895, %898
  %900 = sitofp i32 %899 to float
  %901 = fneg float %900
  %902 = fmul float %892, %901
  %903 = bitcast i32 %5 to float
  %904 = fadd float %903, %902
  %905 = bitcast i32 %5 to float
  %906 = bitcast i32 %5 to float
  %907 = fmul float %905, %906
  %908 = fadd float %907, 0.000000e+00
  %909 = bitcast i32 %32 to float
  %910 = bitcast i32 %32 to float
  %911 = fmul float %909, %910
  %912 = fadd float %908, %911
  %913 = call float @llvm.sqrt.f32(float %912)
  %914 = bitcast i32 %5 to float
  %915 = fcmp olt float %914, 0.000000e+00
  %916 = sext i1 %915 to i32
  %917 = bitcast i32 %5 to float
  %918 = fcmp ogt float %917, 0.000000e+00
  %919 = zext i1 %918 to i32
  %920 = add nsw i32 %916, %919
  %921 = sitofp i32 %920 to float
  %922 = fneg float %921
  %923 = fmul float %913, %922
  %924 = bitcast i32 %5 to float
  %925 = fadd float %924, %923
  %926 = fmul float %904, %925
  %927 = fadd float %926, 0.000000e+00
  %928 = bitcast i32 %5 to float
  %929 = bitcast i32 %5 to float
  %930 = fmul float %928, %929
  %931 = fadd float %930, 0.000000e+00
  %932 = bitcast i32 %32 to float
  %933 = bitcast i32 %32 to float
  %934 = fmul float %932, %933
  %935 = fadd float %931, %934
  %936 = call float @llvm.sqrt.f32(float %935)
  %937 = bitcast i32 %5 to float
  %938 = fcmp olt float %937, 0.000000e+00
  %939 = sext i1 %938 to i32
  %940 = bitcast i32 %5 to float
  %941 = fcmp ogt float %940, 0.000000e+00
  %942 = zext i1 %941 to i32
  %943 = add nsw i32 %939, %942
  %944 = sitofp i32 %943 to float
  %945 = fneg float %944
  %946 = fmul float %936, %945
  %947 = fmul float %946, 0.000000e+00
  %948 = bitcast i32 %32 to float
  %949 = fadd float %948, %947
  %950 = bitcast i32 %5 to float
  %951 = bitcast i32 %5 to float
  %952 = fmul float %950, %951
  %953 = fadd float %952, 0.000000e+00
  %954 = bitcast i32 %32 to float
  %955 = bitcast i32 %32 to float
  %956 = fmul float %954, %955
  %957 = fadd float %953, %956
  %958 = call float @llvm.sqrt.f32(float %957)
  %959 = bitcast i32 %5 to float
  %960 = fcmp olt float %959, 0.000000e+00
  %961 = sext i1 %960 to i32
  %962 = bitcast i32 %5 to float
  %963 = fcmp ogt float %962, 0.000000e+00
  %964 = zext i1 %963 to i32
  %965 = add nsw i32 %961, %964
  %966 = sitofp i32 %965 to float
  %967 = fneg float %966
  %968 = fmul float %958, %967
  %969 = fmul float %968, 0.000000e+00
  %970 = bitcast i32 %32 to float
  %971 = fadd float %970, %969
  %972 = fmul float %949, %971
  %973 = fadd float %927, %972
  %974 = call float @llvm.sqrt.f32(float %973)
  %975 = fadd float %974, 0.000000e+00
  %976 = fdiv float %883, %975
  %977 = fmul float %861, %976
  %978 = fsub float 1.000000e+00, %977
  %979 = insertelement <4 x float> zeroinitializer, float %978, i32 0
  %980 = insertelement <4 x float> %979, float 0.000000e+00, i32 1
  %981 = insertelement <4 x float> %980, float 0.000000e+00, i32 2
  %982 = insertelement <4 x float> %981, float 0.000000e+00, i32 3
  %983 = shufflevector <4 x float> %745, <4 x float> %982, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %984 = extractelement <8 x float> %983, i32 0
  %985 = getelementptr float, float* %2, i32 0
  %986 = getelementptr inbounds float, float* %985, i64 3
  %987 = bitcast float* %986 to i32*
  %988 = bitcast i32* %987 to float*
  store float %984, float* %988, align 4
  %989 = bitcast float* %1 to i8*
  %990 = alloca [4 x float], align 16
  %991 = bitcast [4 x float]* %990 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 dereferenceable(16) %989, i8* nonnull align 16 dereferenceable(16) %991, i64 16, i1 false)
  store float 0.000000e+00, float* %2, align 4
  %992 = bitcast i32 %5 to float
  %993 = bitcast i32 %5 to float
  %994 = fmul float %992, %993
  %995 = fadd float %994, 0.000000e+00
  %996 = bitcast i32 %32 to float
  %997 = bitcast i32 %32 to float
  %998 = fmul float %996, %997
  %999 = fadd float %995, %998
  %1000 = call float @llvm.sqrt.f32(float %999)
  %1001 = bitcast i32 %5 to float
  %1002 = fcmp olt float %1001, 0.000000e+00
  %1003 = sext i1 %1002 to i32
  %1004 = bitcast i32 %5 to float
  %1005 = fcmp ogt float %1004, 0.000000e+00
  %1006 = zext i1 %1005 to i32
  %1007 = add nsw i32 %1003, %1006
  %1008 = sitofp i32 %1007 to float
  %1009 = fneg float %1008
  %1010 = fmul float %1000, %1009
  %1011 = bitcast i32 %5 to float
  %1012 = fadd float %1011, %1010
  %1013 = bitcast i32 %5 to float
  %1014 = bitcast i32 %5 to float
  %1015 = fmul float %1013, %1014
  %1016 = fadd float %1015, 0.000000e+00
  %1017 = bitcast i32 %32 to float
  %1018 = bitcast i32 %32 to float
  %1019 = fmul float %1017, %1018
  %1020 = fadd float %1016, %1019
  %1021 = call float @llvm.sqrt.f32(float %1020)
  %1022 = bitcast i32 %5 to float
  %1023 = fcmp olt float %1022, 0.000000e+00
  %1024 = sext i1 %1023 to i32
  %1025 = bitcast i32 %5 to float
  %1026 = fcmp ogt float %1025, 0.000000e+00
  %1027 = zext i1 %1026 to i32
  %1028 = add nsw i32 %1024, %1027
  %1029 = sitofp i32 %1028 to float
  %1030 = fneg float %1029
  %1031 = fmul float %1021, %1030
  %1032 = bitcast i32 %5 to float
  %1033 = fadd float %1032, %1031
  %1034 = bitcast i32 %5 to float
  %1035 = bitcast i32 %5 to float
  %1036 = fmul float %1034, %1035
  %1037 = fadd float %1036, 0.000000e+00
  %1038 = bitcast i32 %32 to float
  %1039 = bitcast i32 %32 to float
  %1040 = fmul float %1038, %1039
  %1041 = fadd float %1037, %1040
  %1042 = call float @llvm.sqrt.f32(float %1041)
  %1043 = bitcast i32 %5 to float
  %1044 = fcmp olt float %1043, 0.000000e+00
  %1045 = sext i1 %1044 to i32
  %1046 = bitcast i32 %5 to float
  %1047 = fcmp ogt float %1046, 0.000000e+00
  %1048 = zext i1 %1047 to i32
  %1049 = add nsw i32 %1045, %1048
  %1050 = sitofp i32 %1049 to float
  %1051 = fneg float %1050
  %1052 = fmul float %1042, %1051
  %1053 = bitcast i32 %5 to float
  %1054 = fadd float %1053, %1052
  %1055 = fmul float %1033, %1054
  %1056 = fadd float %1055, 0.000000e+00
  %1057 = bitcast i32 %5 to float
  %1058 = bitcast i32 %5 to float
  %1059 = fmul float %1057, %1058
  %1060 = fadd float %1059, 0.000000e+00
  %1061 = bitcast i32 %32 to float
  %1062 = bitcast i32 %32 to float
  %1063 = fmul float %1061, %1062
  %1064 = fadd float %1060, %1063
  %1065 = call float @llvm.sqrt.f32(float %1064)
  %1066 = bitcast i32 %5 to float
  %1067 = fcmp olt float %1066, 0.000000e+00
  %1068 = sext i1 %1067 to i32
  %1069 = bitcast i32 %5 to float
  %1070 = fcmp ogt float %1069, 0.000000e+00
  %1071 = zext i1 %1070 to i32
  %1072 = add nsw i32 %1068, %1071
  %1073 = sitofp i32 %1072 to float
  %1074 = fneg float %1073
  %1075 = fmul float %1065, %1074
  %1076 = fmul float %1075, 0.000000e+00
  %1077 = bitcast i32 %32 to float
  %1078 = fadd float %1077, %1076
  %1079 = bitcast i32 %5 to float
  %1080 = bitcast i32 %5 to float
  %1081 = fmul float %1079, %1080
  %1082 = fadd float %1081, 0.000000e+00
  %1083 = bitcast i32 %32 to float
  %1084 = bitcast i32 %32 to float
  %1085 = fmul float %1083, %1084
  %1086 = fadd float %1082, %1085
  %1087 = call float @llvm.sqrt.f32(float %1086)
  %1088 = bitcast i32 %5 to float
  %1089 = fcmp olt float %1088, 0.000000e+00
  %1090 = sext i1 %1089 to i32
  %1091 = bitcast i32 %5 to float
  %1092 = fcmp ogt float %1091, 0.000000e+00
  %1093 = zext i1 %1092 to i32
  %1094 = add nsw i32 %1090, %1093
  %1095 = sitofp i32 %1094 to float
  %1096 = fneg float %1095
  %1097 = fmul float %1087, %1096
  %1098 = fmul float %1097, 0.000000e+00
  %1099 = bitcast i32 %32 to float
  %1100 = fadd float %1099, %1098
  %1101 = fmul float %1078, %1100
  %1102 = fadd float %1056, %1101
  %1103 = call float @llvm.sqrt.f32(float %1102)
  %1104 = fadd float %1103, 0.000000e+00
  %1105 = fdiv float %1012, %1104
  %1106 = fmul float %1105, 2.000000e+00
  %1107 = bitcast i32 %5 to float
  %1108 = bitcast i32 %5 to float
  %1109 = fmul float %1107, %1108
  %1110 = fadd float %1109, 0.000000e+00
  %1111 = bitcast i32 %32 to float
  %1112 = bitcast i32 %32 to float
  %1113 = fmul float %1111, %1112
  %1114 = fadd float %1110, %1113
  %1115 = call float @llvm.sqrt.f32(float %1114)
  %1116 = bitcast i32 %5 to float
  %1117 = fcmp olt float %1116, 0.000000e+00
  %1118 = sext i1 %1117 to i32
  %1119 = bitcast i32 %5 to float
  %1120 = fcmp ogt float %1119, 0.000000e+00
  %1121 = zext i1 %1120 to i32
  %1122 = add nsw i32 %1118, %1121
  %1123 = sitofp i32 %1122 to float
  %1124 = fneg float %1123
  %1125 = fmul float %1115, %1124
  %1126 = bitcast i32 %5 to float
  %1127 = fadd float %1126, %1125
  %1128 = bitcast i32 %5 to float
  %1129 = bitcast i32 %5 to float
  %1130 = fmul float %1128, %1129
  %1131 = fadd float %1130, 0.000000e+00
  %1132 = bitcast i32 %32 to float
  %1133 = bitcast i32 %32 to float
  %1134 = fmul float %1132, %1133
  %1135 = fadd float %1131, %1134
  %1136 = call float @llvm.sqrt.f32(float %1135)
  %1137 = bitcast i32 %5 to float
  %1138 = fcmp olt float %1137, 0.000000e+00
  %1139 = sext i1 %1138 to i32
  %1140 = bitcast i32 %5 to float
  %1141 = fcmp ogt float %1140, 0.000000e+00
  %1142 = zext i1 %1141 to i32
  %1143 = add nsw i32 %1139, %1142
  %1144 = sitofp i32 %1143 to float
  %1145 = fneg float %1144
  %1146 = fmul float %1136, %1145
  %1147 = bitcast i32 %5 to float
  %1148 = fadd float %1147, %1146
  %1149 = bitcast i32 %5 to float
  %1150 = bitcast i32 %5 to float
  %1151 = fmul float %1149, %1150
  %1152 = fadd float %1151, 0.000000e+00
  %1153 = bitcast i32 %32 to float
  %1154 = bitcast i32 %32 to float
  %1155 = fmul float %1153, %1154
  %1156 = fadd float %1152, %1155
  %1157 = call float @llvm.sqrt.f32(float %1156)
  %1158 = bitcast i32 %5 to float
  %1159 = fcmp olt float %1158, 0.000000e+00
  %1160 = sext i1 %1159 to i32
  %1161 = bitcast i32 %5 to float
  %1162 = fcmp ogt float %1161, 0.000000e+00
  %1163 = zext i1 %1162 to i32
  %1164 = add nsw i32 %1160, %1163
  %1165 = sitofp i32 %1164 to float
  %1166 = fneg float %1165
  %1167 = fmul float %1157, %1166
  %1168 = bitcast i32 %5 to float
  %1169 = fadd float %1168, %1167
  %1170 = fmul float %1148, %1169
  %1171 = fadd float %1170, 0.000000e+00
  %1172 = bitcast i32 %5 to float
  %1173 = bitcast i32 %5 to float
  %1174 = fmul float %1172, %1173
  %1175 = fadd float %1174, 0.000000e+00
  %1176 = bitcast i32 %32 to float
  %1177 = bitcast i32 %32 to float
  %1178 = fmul float %1176, %1177
  %1179 = fadd float %1175, %1178
  %1180 = call float @llvm.sqrt.f32(float %1179)
  %1181 = bitcast i32 %5 to float
  %1182 = fcmp olt float %1181, 0.000000e+00
  %1183 = sext i1 %1182 to i32
  %1184 = bitcast i32 %5 to float
  %1185 = fcmp ogt float %1184, 0.000000e+00
  %1186 = zext i1 %1185 to i32
  %1187 = add nsw i32 %1183, %1186
  %1188 = sitofp i32 %1187 to float
  %1189 = fneg float %1188
  %1190 = fmul float %1180, %1189
  %1191 = fmul float %1190, 0.000000e+00
  %1192 = bitcast i32 %32 to float
  %1193 = fadd float %1192, %1191
  %1194 = bitcast i32 %5 to float
  %1195 = bitcast i32 %5 to float
  %1196 = fmul float %1194, %1195
  %1197 = fadd float %1196, 0.000000e+00
  %1198 = bitcast i32 %32 to float
  %1199 = bitcast i32 %32 to float
  %1200 = fmul float %1198, %1199
  %1201 = fadd float %1197, %1200
  %1202 = call float @llvm.sqrt.f32(float %1201)
  %1203 = bitcast i32 %5 to float
  %1204 = fcmp olt float %1203, 0.000000e+00
  %1205 = sext i1 %1204 to i32
  %1206 = bitcast i32 %5 to float
  %1207 = fcmp ogt float %1206, 0.000000e+00
  %1208 = zext i1 %1207 to i32
  %1209 = add nsw i32 %1205, %1208
  %1210 = sitofp i32 %1209 to float
  %1211 = fneg float %1210
  %1212 = fmul float %1202, %1211
  %1213 = fmul float %1212, 0.000000e+00
  %1214 = bitcast i32 %32 to float
  %1215 = fadd float %1214, %1213
  %1216 = fmul float %1193, %1215
  %1217 = fadd float %1171, %1216
  %1218 = call float @llvm.sqrt.f32(float %1217)
  %1219 = fadd float %1218, 0.000000e+00
  %1220 = fdiv float %1127, %1219
  %1221 = fmul float %1106, %1220
  %1222 = fsub float 1.000000e+00, %1221
  %1223 = insertelement <4 x float> zeroinitializer, float %1222, i32 0
  %1224 = insertelement <4 x float> %1223, float 0.000000e+00, i32 1
  %1225 = insertelement <4 x float> %1224, float 0.000000e+00, i32 2
  %1226 = insertelement <4 x float> %1225, float 0.000000e+00, i32 3
  %1227 = getelementptr float, float* %0, i32 0
  %1228 = load float, float* %1227, align 4
  %1229 = insertelement <4 x float> zeroinitializer, float %1228, i32 0
  %1230 = insertelement <4 x float> %1229, float 0.000000e+00, i32 1
  %1231 = insertelement <4 x float> %1230, float 0.000000e+00, i32 2
  %1232 = insertelement <4 x float> %1231, float 0.000000e+00, i32 3
  %1233 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1226, <4 x float> %1232, <4 x float> zeroinitializer)
  %1234 = extractelement <4 x float> %1233, i32 0
  store float %1234, float* %2, align 4
  %1235 = bitcast i32 %5 to float
  %1236 = bitcast i32 %5 to float
  %1237 = fmul float %1235, %1236
  %1238 = fadd float %1237, 0.000000e+00
  %1239 = bitcast i32 %32 to float
  %1240 = bitcast i32 %32 to float
  %1241 = fmul float %1239, %1240
  %1242 = fadd float %1238, %1241
  %1243 = call float @llvm.sqrt.f32(float %1242)
  %1244 = bitcast i32 %5 to float
  %1245 = fcmp olt float %1244, 0.000000e+00
  %1246 = sext i1 %1245 to i32
  %1247 = bitcast i32 %5 to float
  %1248 = fcmp ogt float %1247, 0.000000e+00
  %1249 = zext i1 %1248 to i32
  %1250 = add nsw i32 %1246, %1249
  %1251 = sitofp i32 %1250 to float
  %1252 = fneg float %1251
  %1253 = fmul float %1243, %1252
  %1254 = bitcast i32 %5 to float
  %1255 = fadd float %1254, %1253
  %1256 = bitcast i32 %5 to float
  %1257 = bitcast i32 %5 to float
  %1258 = fmul float %1256, %1257
  %1259 = fadd float %1258, 0.000000e+00
  %1260 = bitcast i32 %32 to float
  %1261 = bitcast i32 %32 to float
  %1262 = fmul float %1260, %1261
  %1263 = fadd float %1259, %1262
  %1264 = call float @llvm.sqrt.f32(float %1263)
  %1265 = bitcast i32 %5 to float
  %1266 = fcmp olt float %1265, 0.000000e+00
  %1267 = sext i1 %1266 to i32
  %1268 = bitcast i32 %5 to float
  %1269 = fcmp ogt float %1268, 0.000000e+00
  %1270 = zext i1 %1269 to i32
  %1271 = add nsw i32 %1267, %1270
  %1272 = sitofp i32 %1271 to float
  %1273 = fneg float %1272
  %1274 = fmul float %1264, %1273
  %1275 = bitcast i32 %5 to float
  %1276 = fadd float %1275, %1274
  %1277 = bitcast i32 %5 to float
  %1278 = bitcast i32 %5 to float
  %1279 = fmul float %1277, %1278
  %1280 = fadd float %1279, 0.000000e+00
  %1281 = bitcast i32 %32 to float
  %1282 = bitcast i32 %32 to float
  %1283 = fmul float %1281, %1282
  %1284 = fadd float %1280, %1283
  %1285 = call float @llvm.sqrt.f32(float %1284)
  %1286 = bitcast i32 %5 to float
  %1287 = fcmp olt float %1286, 0.000000e+00
  %1288 = sext i1 %1287 to i32
  %1289 = bitcast i32 %5 to float
  %1290 = fcmp ogt float %1289, 0.000000e+00
  %1291 = zext i1 %1290 to i32
  %1292 = add nsw i32 %1288, %1291
  %1293 = sitofp i32 %1292 to float
  %1294 = fneg float %1293
  %1295 = fmul float %1285, %1294
  %1296 = bitcast i32 %5 to float
  %1297 = fadd float %1296, %1295
  %1298 = fmul float %1276, %1297
  %1299 = fadd float %1298, 0.000000e+00
  %1300 = bitcast i32 %5 to float
  %1301 = bitcast i32 %5 to float
  %1302 = fmul float %1300, %1301
  %1303 = fadd float %1302, 0.000000e+00
  %1304 = bitcast i32 %32 to float
  %1305 = bitcast i32 %32 to float
  %1306 = fmul float %1304, %1305
  %1307 = fadd float %1303, %1306
  %1308 = call float @llvm.sqrt.f32(float %1307)
  %1309 = bitcast i32 %5 to float
  %1310 = fcmp olt float %1309, 0.000000e+00
  %1311 = sext i1 %1310 to i32
  %1312 = bitcast i32 %5 to float
  %1313 = fcmp ogt float %1312, 0.000000e+00
  %1314 = zext i1 %1313 to i32
  %1315 = add nsw i32 %1311, %1314
  %1316 = sitofp i32 %1315 to float
  %1317 = fneg float %1316
  %1318 = fmul float %1308, %1317
  %1319 = fmul float %1318, 0.000000e+00
  %1320 = bitcast i32 %32 to float
  %1321 = fadd float %1320, %1319
  %1322 = bitcast i32 %5 to float
  %1323 = bitcast i32 %5 to float
  %1324 = fmul float %1322, %1323
  %1325 = fadd float %1324, 0.000000e+00
  %1326 = bitcast i32 %32 to float
  %1327 = bitcast i32 %32 to float
  %1328 = fmul float %1326, %1327
  %1329 = fadd float %1325, %1328
  %1330 = call float @llvm.sqrt.f32(float %1329)
  %1331 = bitcast i32 %5 to float
  %1332 = fcmp olt float %1331, 0.000000e+00
  %1333 = sext i1 %1332 to i32
  %1334 = bitcast i32 %5 to float
  %1335 = fcmp ogt float %1334, 0.000000e+00
  %1336 = zext i1 %1335 to i32
  %1337 = add nsw i32 %1333, %1336
  %1338 = sitofp i32 %1337 to float
  %1339 = fneg float %1338
  %1340 = fmul float %1330, %1339
  %1341 = fmul float %1340, 0.000000e+00
  %1342 = bitcast i32 %32 to float
  %1343 = fadd float %1342, %1341
  %1344 = fmul float %1321, %1343
  %1345 = fadd float %1299, %1344
  %1346 = call float @llvm.sqrt.f32(float %1345)
  %1347 = fadd float %1346, 0.000000e+00
  %1348 = fdiv float %1255, %1347
  %1349 = fmul float %1348, 2.000000e+00
  %1350 = bitcast i32 %5 to float
  %1351 = bitcast i32 %5 to float
  %1352 = fmul float %1350, %1351
  %1353 = fadd float %1352, 0.000000e+00
  %1354 = bitcast i32 %32 to float
  %1355 = bitcast i32 %32 to float
  %1356 = fmul float %1354, %1355
  %1357 = fadd float %1353, %1356
  %1358 = call float @llvm.sqrt.f32(float %1357)
  %1359 = bitcast i32 %5 to float
  %1360 = fcmp olt float %1359, 0.000000e+00
  %1361 = sext i1 %1360 to i32
  %1362 = bitcast i32 %5 to float
  %1363 = fcmp ogt float %1362, 0.000000e+00
  %1364 = zext i1 %1363 to i32
  %1365 = add nsw i32 %1361, %1364
  %1366 = sitofp i32 %1365 to float
  %1367 = fneg float %1366
  %1368 = fmul float %1358, %1367
  %1369 = bitcast i32 %5 to float
  %1370 = fadd float %1369, %1368
  %1371 = bitcast i32 %5 to float
  %1372 = bitcast i32 %5 to float
  %1373 = fmul float %1371, %1372
  %1374 = fadd float %1373, 0.000000e+00
  %1375 = bitcast i32 %32 to float
  %1376 = bitcast i32 %32 to float
  %1377 = fmul float %1375, %1376
  %1378 = fadd float %1374, %1377
  %1379 = call float @llvm.sqrt.f32(float %1378)
  %1380 = bitcast i32 %5 to float
  %1381 = fcmp olt float %1380, 0.000000e+00
  %1382 = sext i1 %1381 to i32
  %1383 = bitcast i32 %5 to float
  %1384 = fcmp ogt float %1383, 0.000000e+00
  %1385 = zext i1 %1384 to i32
  %1386 = add nsw i32 %1382, %1385
  %1387 = sitofp i32 %1386 to float
  %1388 = fneg float %1387
  %1389 = fmul float %1379, %1388
  %1390 = bitcast i32 %5 to float
  %1391 = fadd float %1390, %1389
  %1392 = bitcast i32 %5 to float
  %1393 = bitcast i32 %5 to float
  %1394 = fmul float %1392, %1393
  %1395 = fadd float %1394, 0.000000e+00
  %1396 = bitcast i32 %32 to float
  %1397 = bitcast i32 %32 to float
  %1398 = fmul float %1396, %1397
  %1399 = fadd float %1395, %1398
  %1400 = call float @llvm.sqrt.f32(float %1399)
  %1401 = bitcast i32 %5 to float
  %1402 = fcmp olt float %1401, 0.000000e+00
  %1403 = sext i1 %1402 to i32
  %1404 = bitcast i32 %5 to float
  %1405 = fcmp ogt float %1404, 0.000000e+00
  %1406 = zext i1 %1405 to i32
  %1407 = add nsw i32 %1403, %1406
  %1408 = sitofp i32 %1407 to float
  %1409 = fneg float %1408
  %1410 = fmul float %1400, %1409
  %1411 = bitcast i32 %5 to float
  %1412 = fadd float %1411, %1410
  %1413 = fmul float %1391, %1412
  %1414 = fadd float %1413, 0.000000e+00
  %1415 = bitcast i32 %5 to float
  %1416 = bitcast i32 %5 to float
  %1417 = fmul float %1415, %1416
  %1418 = fadd float %1417, 0.000000e+00
  %1419 = bitcast i32 %32 to float
  %1420 = bitcast i32 %32 to float
  %1421 = fmul float %1419, %1420
  %1422 = fadd float %1418, %1421
  %1423 = call float @llvm.sqrt.f32(float %1422)
  %1424 = bitcast i32 %5 to float
  %1425 = fcmp olt float %1424, 0.000000e+00
  %1426 = sext i1 %1425 to i32
  %1427 = bitcast i32 %5 to float
  %1428 = fcmp ogt float %1427, 0.000000e+00
  %1429 = zext i1 %1428 to i32
  %1430 = add nsw i32 %1426, %1429
  %1431 = sitofp i32 %1430 to float
  %1432 = fneg float %1431
  %1433 = fmul float %1423, %1432
  %1434 = fmul float %1433, 0.000000e+00
  %1435 = bitcast i32 %32 to float
  %1436 = fadd float %1435, %1434
  %1437 = bitcast i32 %5 to float
  %1438 = bitcast i32 %5 to float
  %1439 = fmul float %1437, %1438
  %1440 = fadd float %1439, 0.000000e+00
  %1441 = bitcast i32 %32 to float
  %1442 = bitcast i32 %32 to float
  %1443 = fmul float %1441, %1442
  %1444 = fadd float %1440, %1443
  %1445 = call float @llvm.sqrt.f32(float %1444)
  %1446 = bitcast i32 %5 to float
  %1447 = fcmp olt float %1446, 0.000000e+00
  %1448 = sext i1 %1447 to i32
  %1449 = bitcast i32 %5 to float
  %1450 = fcmp ogt float %1449, 0.000000e+00
  %1451 = zext i1 %1450 to i32
  %1452 = add nsw i32 %1448, %1451
  %1453 = sitofp i32 %1452 to float
  %1454 = fneg float %1453
  %1455 = fmul float %1445, %1454
  %1456 = fmul float %1455, 0.000000e+00
  %1457 = bitcast i32 %32 to float
  %1458 = fadd float %1457, %1456
  %1459 = fmul float %1436, %1458
  %1460 = fadd float %1414, %1459
  %1461 = call float @llvm.sqrt.f32(float %1460)
  %1462 = fadd float %1461, 0.000000e+00
  %1463 = fdiv float %1370, %1462
  %1464 = fmul float %1349, %1463
  %1465 = fsub float 1.000000e+00, %1464
  %1466 = fmul float %1465, %1228
  %1467 = fadd float %1466, 0.000000e+00
  %1468 = bitcast i32 %5 to float
  %1469 = bitcast i32 %5 to float
  %1470 = fmul float %1468, %1469
  %1471 = fadd float %1470, 0.000000e+00
  %1472 = bitcast i32 %32 to float
  %1473 = bitcast i32 %32 to float
  %1474 = fmul float %1472, %1473
  %1475 = fadd float %1471, %1474
  %1476 = call float @llvm.sqrt.f32(float %1475)
  %1477 = bitcast i32 %5 to float
  %1478 = fcmp olt float %1477, 0.000000e+00
  %1479 = sext i1 %1478 to i32
  %1480 = bitcast i32 %5 to float
  %1481 = fcmp ogt float %1480, 0.000000e+00
  %1482 = zext i1 %1481 to i32
  %1483 = add nsw i32 %1479, %1482
  %1484 = sitofp i32 %1483 to float
  %1485 = fneg float %1484
  %1486 = fmul float %1476, %1485
  %1487 = bitcast i32 %5 to float
  %1488 = fadd float %1487, %1486
  %1489 = bitcast i32 %5 to float
  %1490 = bitcast i32 %5 to float
  %1491 = fmul float %1489, %1490
  %1492 = fadd float %1491, 0.000000e+00
  %1493 = bitcast i32 %32 to float
  %1494 = bitcast i32 %32 to float
  %1495 = fmul float %1493, %1494
  %1496 = fadd float %1492, %1495
  %1497 = call float @llvm.sqrt.f32(float %1496)
  %1498 = bitcast i32 %5 to float
  %1499 = fcmp olt float %1498, 0.000000e+00
  %1500 = sext i1 %1499 to i32
  %1501 = bitcast i32 %5 to float
  %1502 = fcmp ogt float %1501, 0.000000e+00
  %1503 = zext i1 %1502 to i32
  %1504 = add nsw i32 %1500, %1503
  %1505 = sitofp i32 %1504 to float
  %1506 = fneg float %1505
  %1507 = fmul float %1497, %1506
  %1508 = bitcast i32 %5 to float
  %1509 = fadd float %1508, %1507
  %1510 = bitcast i32 %5 to float
  %1511 = bitcast i32 %5 to float
  %1512 = fmul float %1510, %1511
  %1513 = fadd float %1512, 0.000000e+00
  %1514 = bitcast i32 %32 to float
  %1515 = bitcast i32 %32 to float
  %1516 = fmul float %1514, %1515
  %1517 = fadd float %1513, %1516
  %1518 = call float @llvm.sqrt.f32(float %1517)
  %1519 = bitcast i32 %5 to float
  %1520 = fcmp olt float %1519, 0.000000e+00
  %1521 = sext i1 %1520 to i32
  %1522 = bitcast i32 %5 to float
  %1523 = fcmp ogt float %1522, 0.000000e+00
  %1524 = zext i1 %1523 to i32
  %1525 = add nsw i32 %1521, %1524
  %1526 = sitofp i32 %1525 to float
  %1527 = fneg float %1526
  %1528 = fmul float %1518, %1527
  %1529 = bitcast i32 %5 to float
  %1530 = fadd float %1529, %1528
  %1531 = fmul float %1509, %1530
  %1532 = fadd float %1531, 0.000000e+00
  %1533 = bitcast i32 %5 to float
  %1534 = bitcast i32 %5 to float
  %1535 = fmul float %1533, %1534
  %1536 = fadd float %1535, 0.000000e+00
  %1537 = bitcast i32 %32 to float
  %1538 = bitcast i32 %32 to float
  %1539 = fmul float %1537, %1538
  %1540 = fadd float %1536, %1539
  %1541 = call float @llvm.sqrt.f32(float %1540)
  %1542 = bitcast i32 %5 to float
  %1543 = fcmp olt float %1542, 0.000000e+00
  %1544 = sext i1 %1543 to i32
  %1545 = bitcast i32 %5 to float
  %1546 = fcmp ogt float %1545, 0.000000e+00
  %1547 = zext i1 %1546 to i32
  %1548 = add nsw i32 %1544, %1547
  %1549 = sitofp i32 %1548 to float
  %1550 = fneg float %1549
  %1551 = fmul float %1541, %1550
  %1552 = fmul float %1551, 0.000000e+00
  %1553 = bitcast i32 %32 to float
  %1554 = fadd float %1553, %1552
  %1555 = bitcast i32 %5 to float
  %1556 = bitcast i32 %5 to float
  %1557 = fmul float %1555, %1556
  %1558 = fadd float %1557, 0.000000e+00
  %1559 = bitcast i32 %32 to float
  %1560 = bitcast i32 %32 to float
  %1561 = fmul float %1559, %1560
  %1562 = fadd float %1558, %1561
  %1563 = call float @llvm.sqrt.f32(float %1562)
  %1564 = bitcast i32 %5 to float
  %1565 = fcmp olt float %1564, 0.000000e+00
  %1566 = sext i1 %1565 to i32
  %1567 = bitcast i32 %5 to float
  %1568 = fcmp ogt float %1567, 0.000000e+00
  %1569 = zext i1 %1568 to i32
  %1570 = add nsw i32 %1566, %1569
  %1571 = sitofp i32 %1570 to float
  %1572 = fneg float %1571
  %1573 = fmul float %1563, %1572
  %1574 = fmul float %1573, 0.000000e+00
  %1575 = bitcast i32 %32 to float
  %1576 = fadd float %1575, %1574
  %1577 = fmul float %1554, %1576
  %1578 = fadd float %1532, %1577
  %1579 = call float @llvm.sqrt.f32(float %1578)
  %1580 = fadd float %1579, 0.000000e+00
  %1581 = fdiv float %1488, %1580
  %1582 = fmul float %1581, 2.000000e+00
  %1583 = bitcast i32 %5 to float
  %1584 = bitcast i32 %5 to float
  %1585 = fmul float %1583, %1584
  %1586 = fadd float %1585, 0.000000e+00
  %1587 = bitcast i32 %32 to float
  %1588 = bitcast i32 %32 to float
  %1589 = fmul float %1587, %1588
  %1590 = fadd float %1586, %1589
  %1591 = call float @llvm.sqrt.f32(float %1590)
  %1592 = bitcast i32 %5 to float
  %1593 = fcmp olt float %1592, 0.000000e+00
  %1594 = sext i1 %1593 to i32
  %1595 = bitcast i32 %5 to float
  %1596 = fcmp ogt float %1595, 0.000000e+00
  %1597 = zext i1 %1596 to i32
  %1598 = add nsw i32 %1594, %1597
  %1599 = sitofp i32 %1598 to float
  %1600 = fneg float %1599
  %1601 = fmul float %1591, %1600
  %1602 = fmul float %1601, 0.000000e+00
  %1603 = bitcast i32 %32 to float
  %1604 = fadd float %1603, %1602
  %1605 = bitcast i32 %5 to float
  %1606 = bitcast i32 %5 to float
  %1607 = fmul float %1605, %1606
  %1608 = fadd float %1607, 0.000000e+00
  %1609 = bitcast i32 %32 to float
  %1610 = bitcast i32 %32 to float
  %1611 = fmul float %1609, %1610
  %1612 = fadd float %1608, %1611
  %1613 = call float @llvm.sqrt.f32(float %1612)
  %1614 = bitcast i32 %5 to float
  %1615 = fcmp olt float %1614, 0.000000e+00
  %1616 = sext i1 %1615 to i32
  %1617 = bitcast i32 %5 to float
  %1618 = fcmp ogt float %1617, 0.000000e+00
  %1619 = zext i1 %1618 to i32
  %1620 = add nsw i32 %1616, %1619
  %1621 = sitofp i32 %1620 to float
  %1622 = fneg float %1621
  %1623 = fmul float %1613, %1622
  %1624 = bitcast i32 %5 to float
  %1625 = fadd float %1624, %1623
  %1626 = bitcast i32 %5 to float
  %1627 = bitcast i32 %5 to float
  %1628 = fmul float %1626, %1627
  %1629 = fadd float %1628, 0.000000e+00
  %1630 = bitcast i32 %32 to float
  %1631 = bitcast i32 %32 to float
  %1632 = fmul float %1630, %1631
  %1633 = fadd float %1629, %1632
  %1634 = call float @llvm.sqrt.f32(float %1633)
  %1635 = bitcast i32 %5 to float
  %1636 = fcmp olt float %1635, 0.000000e+00
  %1637 = sext i1 %1636 to i32
  %1638 = bitcast i32 %5 to float
  %1639 = fcmp ogt float %1638, 0.000000e+00
  %1640 = zext i1 %1639 to i32
  %1641 = add nsw i32 %1637, %1640
  %1642 = sitofp i32 %1641 to float
  %1643 = fneg float %1642
  %1644 = fmul float %1634, %1643
  %1645 = bitcast i32 %5 to float
  %1646 = fadd float %1645, %1644
  %1647 = fmul float %1625, %1646
  %1648 = fadd float %1647, 0.000000e+00
  %1649 = bitcast i32 %5 to float
  %1650 = bitcast i32 %5 to float
  %1651 = fmul float %1649, %1650
  %1652 = fadd float %1651, 0.000000e+00
  %1653 = bitcast i32 %32 to float
  %1654 = bitcast i32 %32 to float
  %1655 = fmul float %1653, %1654
  %1656 = fadd float %1652, %1655
  %1657 = call float @llvm.sqrt.f32(float %1656)
  %1658 = bitcast i32 %5 to float
  %1659 = fcmp olt float %1658, 0.000000e+00
  %1660 = sext i1 %1659 to i32
  %1661 = bitcast i32 %5 to float
  %1662 = fcmp ogt float %1661, 0.000000e+00
  %1663 = zext i1 %1662 to i32
  %1664 = add nsw i32 %1660, %1663
  %1665 = sitofp i32 %1664 to float
  %1666 = fneg float %1665
  %1667 = fmul float %1657, %1666
  %1668 = fmul float %1667, 0.000000e+00
  %1669 = bitcast i32 %32 to float
  %1670 = fadd float %1669, %1668
  %1671 = bitcast i32 %5 to float
  %1672 = bitcast i32 %5 to float
  %1673 = fmul float %1671, %1672
  %1674 = fadd float %1673, 0.000000e+00
  %1675 = bitcast i32 %32 to float
  %1676 = bitcast i32 %32 to float
  %1677 = fmul float %1675, %1676
  %1678 = fadd float %1674, %1677
  %1679 = call float @llvm.sqrt.f32(float %1678)
  %1680 = bitcast i32 %5 to float
  %1681 = fcmp olt float %1680, 0.000000e+00
  %1682 = sext i1 %1681 to i32
  %1683 = bitcast i32 %5 to float
  %1684 = fcmp ogt float %1683, 0.000000e+00
  %1685 = zext i1 %1684 to i32
  %1686 = add nsw i32 %1682, %1685
  %1687 = sitofp i32 %1686 to float
  %1688 = fneg float %1687
  %1689 = fmul float %1679, %1688
  %1690 = fmul float %1689, 0.000000e+00
  %1691 = bitcast i32 %32 to float
  %1692 = fadd float %1691, %1690
  %1693 = fmul float %1670, %1692
  %1694 = fadd float %1648, %1693
  %1695 = call float @llvm.sqrt.f32(float %1694)
  %1696 = fadd float %1695, 0.000000e+00
  %1697 = fdiv float %1604, %1696
  %1698 = fmul float %1582, %1697
  %1699 = fneg float %1698
  %1700 = getelementptr float, float* %0, i32 0
  %1701 = getelementptr inbounds float, float* %1700, i64 2
  %1702 = load float, float* %1701, align 4
  %1703 = fmul float %1699, %1702
  %1704 = fadd float %1467, %1703
  %1705 = insertelement <4 x float> zeroinitializer, float %1704, i32 0
  %1706 = insertelement <4 x float> %1705, float 0.000000e+00, i32 1
  %1707 = insertelement <4 x float> %1706, float 0.000000e+00, i32 2
  %1708 = insertelement <4 x float> %1707, float 0.000000e+00, i32 3
  %1709 = extractelement <4 x float> %1708, i32 0
  store float %1709, float* %2, align 4
  %1710 = extractelement <4 x float> %1708, i32 1
  %1711 = getelementptr float, float* %2, i32 0
  %1712 = getelementptr inbounds float, float* %1711, i64 1
  store float %1710, float* %1712, align 4
  %1713 = bitcast i32 %5 to float
  %1714 = bitcast i32 %5 to float
  %1715 = fmul float %1713, %1714
  %1716 = fadd float %1715, 0.000000e+00
  %1717 = bitcast i32 %32 to float
  %1718 = bitcast i32 %32 to float
  %1719 = fmul float %1717, %1718
  %1720 = fadd float %1716, %1719
  %1721 = call float @llvm.sqrt.f32(float %1720)
  %1722 = bitcast i32 %5 to float
  %1723 = fcmp olt float %1722, 0.000000e+00
  %1724 = sext i1 %1723 to i32
  %1725 = bitcast i32 %5 to float
  %1726 = fcmp ogt float %1725, 0.000000e+00
  %1727 = zext i1 %1726 to i32
  %1728 = add nsw i32 %1724, %1727
  %1729 = sitofp i32 %1728 to float
  %1730 = fneg float %1729
  %1731 = fmul float %1721, %1730
  %1732 = bitcast i32 %5 to float
  %1733 = fadd float %1732, %1731
  %1734 = bitcast i32 %5 to float
  %1735 = bitcast i32 %5 to float
  %1736 = fmul float %1734, %1735
  %1737 = fadd float %1736, 0.000000e+00
  %1738 = bitcast i32 %32 to float
  %1739 = bitcast i32 %32 to float
  %1740 = fmul float %1738, %1739
  %1741 = fadd float %1737, %1740
  %1742 = call float @llvm.sqrt.f32(float %1741)
  %1743 = bitcast i32 %5 to float
  %1744 = fcmp olt float %1743, 0.000000e+00
  %1745 = sext i1 %1744 to i32
  %1746 = bitcast i32 %5 to float
  %1747 = fcmp ogt float %1746, 0.000000e+00
  %1748 = zext i1 %1747 to i32
  %1749 = add nsw i32 %1745, %1748
  %1750 = sitofp i32 %1749 to float
  %1751 = fneg float %1750
  %1752 = fmul float %1742, %1751
  %1753 = bitcast i32 %5 to float
  %1754 = fadd float %1753, %1752
  %1755 = bitcast i32 %5 to float
  %1756 = bitcast i32 %5 to float
  %1757 = fmul float %1755, %1756
  %1758 = fadd float %1757, 0.000000e+00
  %1759 = bitcast i32 %32 to float
  %1760 = bitcast i32 %32 to float
  %1761 = fmul float %1759, %1760
  %1762 = fadd float %1758, %1761
  %1763 = call float @llvm.sqrt.f32(float %1762)
  %1764 = bitcast i32 %5 to float
  %1765 = fcmp olt float %1764, 0.000000e+00
  %1766 = sext i1 %1765 to i32
  %1767 = bitcast i32 %5 to float
  %1768 = fcmp ogt float %1767, 0.000000e+00
  %1769 = zext i1 %1768 to i32
  %1770 = add nsw i32 %1766, %1769
  %1771 = sitofp i32 %1770 to float
  %1772 = fneg float %1771
  %1773 = fmul float %1763, %1772
  %1774 = bitcast i32 %5 to float
  %1775 = fadd float %1774, %1773
  %1776 = fmul float %1754, %1775
  %1777 = fadd float %1776, 0.000000e+00
  %1778 = bitcast i32 %5 to float
  %1779 = bitcast i32 %5 to float
  %1780 = fmul float %1778, %1779
  %1781 = fadd float %1780, 0.000000e+00
  %1782 = bitcast i32 %32 to float
  %1783 = bitcast i32 %32 to float
  %1784 = fmul float %1782, %1783
  %1785 = fadd float %1781, %1784
  %1786 = call float @llvm.sqrt.f32(float %1785)
  %1787 = bitcast i32 %5 to float
  %1788 = fcmp olt float %1787, 0.000000e+00
  %1789 = sext i1 %1788 to i32
  %1790 = bitcast i32 %5 to float
  %1791 = fcmp ogt float %1790, 0.000000e+00
  %1792 = zext i1 %1791 to i32
  %1793 = add nsw i32 %1789, %1792
  %1794 = sitofp i32 %1793 to float
  %1795 = fneg float %1794
  %1796 = fmul float %1786, %1795
  %1797 = fmul float %1796, 0.000000e+00
  %1798 = bitcast i32 %32 to float
  %1799 = fadd float %1798, %1797
  %1800 = bitcast i32 %5 to float
  %1801 = bitcast i32 %5 to float
  %1802 = fmul float %1800, %1801
  %1803 = fadd float %1802, 0.000000e+00
  %1804 = bitcast i32 %32 to float
  %1805 = bitcast i32 %32 to float
  %1806 = fmul float %1804, %1805
  %1807 = fadd float %1803, %1806
  %1808 = call float @llvm.sqrt.f32(float %1807)
  %1809 = bitcast i32 %5 to float
  %1810 = fcmp olt float %1809, 0.000000e+00
  %1811 = sext i1 %1810 to i32
  %1812 = bitcast i32 %5 to float
  %1813 = fcmp ogt float %1812, 0.000000e+00
  %1814 = zext i1 %1813 to i32
  %1815 = add nsw i32 %1811, %1814
  %1816 = sitofp i32 %1815 to float
  %1817 = fneg float %1816
  %1818 = fmul float %1808, %1817
  %1819 = fmul float %1818, 0.000000e+00
  %1820 = bitcast i32 %32 to float
  %1821 = fadd float %1820, %1819
  %1822 = fmul float %1799, %1821
  %1823 = fadd float %1777, %1822
  %1824 = call float @llvm.sqrt.f32(float %1823)
  %1825 = fadd float %1824, 0.000000e+00
  %1826 = fdiv float %1733, %1825
  %1827 = fmul float %1826, 2.000000e+00
  %1828 = bitcast i32 %5 to float
  %1829 = bitcast i32 %5 to float
  %1830 = fmul float %1828, %1829
  %1831 = fadd float %1830, 0.000000e+00
  %1832 = bitcast i32 %32 to float
  %1833 = bitcast i32 %32 to float
  %1834 = fmul float %1832, %1833
  %1835 = fadd float %1831, %1834
  %1836 = call float @llvm.sqrt.f32(float %1835)
  %1837 = bitcast i32 %5 to float
  %1838 = fcmp olt float %1837, 0.000000e+00
  %1839 = sext i1 %1838 to i32
  %1840 = bitcast i32 %5 to float
  %1841 = fcmp ogt float %1840, 0.000000e+00
  %1842 = zext i1 %1841 to i32
  %1843 = add nsw i32 %1839, %1842
  %1844 = sitofp i32 %1843 to float
  %1845 = fneg float %1844
  %1846 = fmul float %1836, %1845
  %1847 = bitcast i32 %5 to float
  %1848 = fadd float %1847, %1846
  %1849 = bitcast i32 %5 to float
  %1850 = bitcast i32 %5 to float
  %1851 = fmul float %1849, %1850
  %1852 = fadd float %1851, 0.000000e+00
  %1853 = bitcast i32 %32 to float
  %1854 = bitcast i32 %32 to float
  %1855 = fmul float %1853, %1854
  %1856 = fadd float %1852, %1855
  %1857 = call float @llvm.sqrt.f32(float %1856)
  %1858 = bitcast i32 %5 to float
  %1859 = fcmp olt float %1858, 0.000000e+00
  %1860 = sext i1 %1859 to i32
  %1861 = bitcast i32 %5 to float
  %1862 = fcmp ogt float %1861, 0.000000e+00
  %1863 = zext i1 %1862 to i32
  %1864 = add nsw i32 %1860, %1863
  %1865 = sitofp i32 %1864 to float
  %1866 = fneg float %1865
  %1867 = fmul float %1857, %1866
  %1868 = bitcast i32 %5 to float
  %1869 = fadd float %1868, %1867
  %1870 = bitcast i32 %5 to float
  %1871 = bitcast i32 %5 to float
  %1872 = fmul float %1870, %1871
  %1873 = fadd float %1872, 0.000000e+00
  %1874 = bitcast i32 %32 to float
  %1875 = bitcast i32 %32 to float
  %1876 = fmul float %1874, %1875
  %1877 = fadd float %1873, %1876
  %1878 = call float @llvm.sqrt.f32(float %1877)
  %1879 = bitcast i32 %5 to float
  %1880 = fcmp olt float %1879, 0.000000e+00
  %1881 = sext i1 %1880 to i32
  %1882 = bitcast i32 %5 to float
  %1883 = fcmp ogt float %1882, 0.000000e+00
  %1884 = zext i1 %1883 to i32
  %1885 = add nsw i32 %1881, %1884
  %1886 = sitofp i32 %1885 to float
  %1887 = fneg float %1886
  %1888 = fmul float %1878, %1887
  %1889 = bitcast i32 %5 to float
  %1890 = fadd float %1889, %1888
  %1891 = fmul float %1869, %1890
  %1892 = fadd float %1891, 0.000000e+00
  %1893 = bitcast i32 %5 to float
  %1894 = bitcast i32 %5 to float
  %1895 = fmul float %1893, %1894
  %1896 = fadd float %1895, 0.000000e+00
  %1897 = bitcast i32 %32 to float
  %1898 = bitcast i32 %32 to float
  %1899 = fmul float %1897, %1898
  %1900 = fadd float %1896, %1899
  %1901 = call float @llvm.sqrt.f32(float %1900)
  %1902 = bitcast i32 %5 to float
  %1903 = fcmp olt float %1902, 0.000000e+00
  %1904 = sext i1 %1903 to i32
  %1905 = bitcast i32 %5 to float
  %1906 = fcmp ogt float %1905, 0.000000e+00
  %1907 = zext i1 %1906 to i32
  %1908 = add nsw i32 %1904, %1907
  %1909 = sitofp i32 %1908 to float
  %1910 = fneg float %1909
  %1911 = fmul float %1901, %1910
  %1912 = fmul float %1911, 0.000000e+00
  %1913 = bitcast i32 %32 to float
  %1914 = fadd float %1913, %1912
  %1915 = bitcast i32 %5 to float
  %1916 = bitcast i32 %5 to float
  %1917 = fmul float %1915, %1916
  %1918 = fadd float %1917, 0.000000e+00
  %1919 = bitcast i32 %32 to float
  %1920 = bitcast i32 %32 to float
  %1921 = fmul float %1919, %1920
  %1922 = fadd float %1918, %1921
  %1923 = call float @llvm.sqrt.f32(float %1922)
  %1924 = bitcast i32 %5 to float
  %1925 = fcmp olt float %1924, 0.000000e+00
  %1926 = sext i1 %1925 to i32
  %1927 = bitcast i32 %5 to float
  %1928 = fcmp ogt float %1927, 0.000000e+00
  %1929 = zext i1 %1928 to i32
  %1930 = add nsw i32 %1926, %1929
  %1931 = sitofp i32 %1930 to float
  %1932 = fneg float %1931
  %1933 = fmul float %1923, %1932
  %1934 = fmul float %1933, 0.000000e+00
  %1935 = bitcast i32 %32 to float
  %1936 = fadd float %1935, %1934
  %1937 = fmul float %1914, %1936
  %1938 = fadd float %1892, %1937
  %1939 = call float @llvm.sqrt.f32(float %1938)
  %1940 = fadd float %1939, 0.000000e+00
  %1941 = fdiv float %1848, %1940
  %1942 = fmul float %1827, %1941
  %1943 = fsub float 1.000000e+00, %1942
  %1944 = insertelement <4 x float> zeroinitializer, float %1943, i32 0
  %1945 = insertelement <4 x float> %1944, float 0.000000e+00, i32 1
  %1946 = insertelement <4 x float> %1945, float 0.000000e+00, i32 2
  %1947 = insertelement <4 x float> %1946, float 0.000000e+00, i32 3
  %1948 = getelementptr float, float* %0, i32 0
  %1949 = getelementptr inbounds float, float* %1948, i64 1
  %1950 = load float, float* %1949, align 4
  %1951 = insertelement <4 x float> zeroinitializer, float %1950, i32 0
  %1952 = insertelement <4 x float> %1951, float 0.000000e+00, i32 1
  %1953 = insertelement <4 x float> %1952, float 0.000000e+00, i32 2
  %1954 = insertelement <4 x float> %1953, float 0.000000e+00, i32 3
  %1955 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1947, <4 x float> %1954, <4 x float> zeroinitializer)
  %1956 = extractelement <4 x float> %1955, i32 0
  %1957 = getelementptr float, float* %2, i32 0
  %1958 = getelementptr inbounds float, float* %1957, i64 1
  store float %1956, float* %1958, align 4
  %1959 = bitcast i32 %5 to float
  %1960 = bitcast i32 %5 to float
  %1961 = fmul float %1959, %1960
  %1962 = fadd float %1961, 0.000000e+00
  %1963 = bitcast i32 %32 to float
  %1964 = bitcast i32 %32 to float
  %1965 = fmul float %1963, %1964
  %1966 = fadd float %1962, %1965
  %1967 = call float @llvm.sqrt.f32(float %1966)
  %1968 = bitcast i32 %5 to float
  %1969 = fcmp olt float %1968, 0.000000e+00
  %1970 = sext i1 %1969 to i32
  %1971 = bitcast i32 %5 to float
  %1972 = fcmp ogt float %1971, 0.000000e+00
  %1973 = zext i1 %1972 to i32
  %1974 = add nsw i32 %1970, %1973
  %1975 = sitofp i32 %1974 to float
  %1976 = fneg float %1975
  %1977 = fmul float %1967, %1976
  %1978 = bitcast i32 %5 to float
  %1979 = fadd float %1978, %1977
  %1980 = bitcast i32 %5 to float
  %1981 = bitcast i32 %5 to float
  %1982 = fmul float %1980, %1981
  %1983 = fadd float %1982, 0.000000e+00
  %1984 = bitcast i32 %32 to float
  %1985 = bitcast i32 %32 to float
  %1986 = fmul float %1984, %1985
  %1987 = fadd float %1983, %1986
  %1988 = call float @llvm.sqrt.f32(float %1987)
  %1989 = bitcast i32 %5 to float
  %1990 = fcmp olt float %1989, 0.000000e+00
  %1991 = sext i1 %1990 to i32
  %1992 = bitcast i32 %5 to float
  %1993 = fcmp ogt float %1992, 0.000000e+00
  %1994 = zext i1 %1993 to i32
  %1995 = add nsw i32 %1991, %1994
  %1996 = sitofp i32 %1995 to float
  %1997 = fneg float %1996
  %1998 = fmul float %1988, %1997
  %1999 = bitcast i32 %5 to float
  %2000 = fadd float %1999, %1998
  %2001 = bitcast i32 %5 to float
  %2002 = bitcast i32 %5 to float
  %2003 = fmul float %2001, %2002
  %2004 = fadd float %2003, 0.000000e+00
  %2005 = bitcast i32 %32 to float
  %2006 = bitcast i32 %32 to float
  %2007 = fmul float %2005, %2006
  %2008 = fadd float %2004, %2007
  %2009 = call float @llvm.sqrt.f32(float %2008)
  %2010 = bitcast i32 %5 to float
  %2011 = fcmp olt float %2010, 0.000000e+00
  %2012 = sext i1 %2011 to i32
  %2013 = bitcast i32 %5 to float
  %2014 = fcmp ogt float %2013, 0.000000e+00
  %2015 = zext i1 %2014 to i32
  %2016 = add nsw i32 %2012, %2015
  %2017 = sitofp i32 %2016 to float
  %2018 = fneg float %2017
  %2019 = fmul float %2009, %2018
  %2020 = bitcast i32 %5 to float
  %2021 = fadd float %2020, %2019
  %2022 = fmul float %2000, %2021
  %2023 = fadd float %2022, 0.000000e+00
  %2024 = bitcast i32 %5 to float
  %2025 = bitcast i32 %5 to float
  %2026 = fmul float %2024, %2025
  %2027 = fadd float %2026, 0.000000e+00
  %2028 = bitcast i32 %32 to float
  %2029 = bitcast i32 %32 to float
  %2030 = fmul float %2028, %2029
  %2031 = fadd float %2027, %2030
  %2032 = call float @llvm.sqrt.f32(float %2031)
  %2033 = bitcast i32 %5 to float
  %2034 = fcmp olt float %2033, 0.000000e+00
  %2035 = sext i1 %2034 to i32
  %2036 = bitcast i32 %5 to float
  %2037 = fcmp ogt float %2036, 0.000000e+00
  %2038 = zext i1 %2037 to i32
  %2039 = add nsw i32 %2035, %2038
  %2040 = sitofp i32 %2039 to float
  %2041 = fneg float %2040
  %2042 = fmul float %2032, %2041
  %2043 = fmul float %2042, 0.000000e+00
  %2044 = bitcast i32 %32 to float
  %2045 = fadd float %2044, %2043
  %2046 = bitcast i32 %5 to float
  %2047 = bitcast i32 %5 to float
  %2048 = fmul float %2046, %2047
  %2049 = fadd float %2048, 0.000000e+00
  %2050 = bitcast i32 %32 to float
  %2051 = bitcast i32 %32 to float
  %2052 = fmul float %2050, %2051
  %2053 = fadd float %2049, %2052
  %2054 = call float @llvm.sqrt.f32(float %2053)
  %2055 = bitcast i32 %5 to float
  %2056 = fcmp olt float %2055, 0.000000e+00
  %2057 = sext i1 %2056 to i32
  %2058 = bitcast i32 %5 to float
  %2059 = fcmp ogt float %2058, 0.000000e+00
  %2060 = zext i1 %2059 to i32
  %2061 = add nsw i32 %2057, %2060
  %2062 = sitofp i32 %2061 to float
  %2063 = fneg float %2062
  %2064 = fmul float %2054, %2063
  %2065 = fmul float %2064, 0.000000e+00
  %2066 = bitcast i32 %32 to float
  %2067 = fadd float %2066, %2065
  %2068 = fmul float %2045, %2067
  %2069 = fadd float %2023, %2068
  %2070 = call float @llvm.sqrt.f32(float %2069)
  %2071 = fadd float %2070, 0.000000e+00
  %2072 = fdiv float %1979, %2071
  %2073 = fmul float %2072, 2.000000e+00
  %2074 = bitcast i32 %5 to float
  %2075 = bitcast i32 %5 to float
  %2076 = fmul float %2074, %2075
  %2077 = fadd float %2076, 0.000000e+00
  %2078 = bitcast i32 %32 to float
  %2079 = bitcast i32 %32 to float
  %2080 = fmul float %2078, %2079
  %2081 = fadd float %2077, %2080
  %2082 = call float @llvm.sqrt.f32(float %2081)
  %2083 = bitcast i32 %5 to float
  %2084 = fcmp olt float %2083, 0.000000e+00
  %2085 = sext i1 %2084 to i32
  %2086 = bitcast i32 %5 to float
  %2087 = fcmp ogt float %2086, 0.000000e+00
  %2088 = zext i1 %2087 to i32
  %2089 = add nsw i32 %2085, %2088
  %2090 = sitofp i32 %2089 to float
  %2091 = fneg float %2090
  %2092 = fmul float %2082, %2091
  %2093 = bitcast i32 %5 to float
  %2094 = fadd float %2093, %2092
  %2095 = bitcast i32 %5 to float
  %2096 = bitcast i32 %5 to float
  %2097 = fmul float %2095, %2096
  %2098 = fadd float %2097, 0.000000e+00
  %2099 = bitcast i32 %32 to float
  %2100 = bitcast i32 %32 to float
  %2101 = fmul float %2099, %2100
  %2102 = fadd float %2098, %2101
  %2103 = call float @llvm.sqrt.f32(float %2102)
  %2104 = bitcast i32 %5 to float
  %2105 = fcmp olt float %2104, 0.000000e+00
  %2106 = sext i1 %2105 to i32
  %2107 = bitcast i32 %5 to float
  %2108 = fcmp ogt float %2107, 0.000000e+00
  %2109 = zext i1 %2108 to i32
  %2110 = add nsw i32 %2106, %2109
  %2111 = sitofp i32 %2110 to float
  %2112 = fneg float %2111
  %2113 = fmul float %2103, %2112
  %2114 = bitcast i32 %5 to float
  %2115 = fadd float %2114, %2113
  %2116 = bitcast i32 %5 to float
  %2117 = bitcast i32 %5 to float
  %2118 = fmul float %2116, %2117
  %2119 = fadd float %2118, 0.000000e+00
  %2120 = bitcast i32 %32 to float
  %2121 = bitcast i32 %32 to float
  %2122 = fmul float %2120, %2121
  %2123 = fadd float %2119, %2122
  %2124 = call float @llvm.sqrt.f32(float %2123)
  %2125 = bitcast i32 %5 to float
  %2126 = fcmp olt float %2125, 0.000000e+00
  %2127 = sext i1 %2126 to i32
  %2128 = bitcast i32 %5 to float
  %2129 = fcmp ogt float %2128, 0.000000e+00
  %2130 = zext i1 %2129 to i32
  %2131 = add nsw i32 %2127, %2130
  %2132 = sitofp i32 %2131 to float
  %2133 = fneg float %2132
  %2134 = fmul float %2124, %2133
  %2135 = bitcast i32 %5 to float
  %2136 = fadd float %2135, %2134
  %2137 = fmul float %2115, %2136
  %2138 = fadd float %2137, 0.000000e+00
  %2139 = bitcast i32 %5 to float
  %2140 = bitcast i32 %5 to float
  %2141 = fmul float %2139, %2140
  %2142 = fadd float %2141, 0.000000e+00
  %2143 = bitcast i32 %32 to float
  %2144 = bitcast i32 %32 to float
  %2145 = fmul float %2143, %2144
  %2146 = fadd float %2142, %2145
  %2147 = call float @llvm.sqrt.f32(float %2146)
  %2148 = bitcast i32 %5 to float
  %2149 = fcmp olt float %2148, 0.000000e+00
  %2150 = sext i1 %2149 to i32
  %2151 = bitcast i32 %5 to float
  %2152 = fcmp ogt float %2151, 0.000000e+00
  %2153 = zext i1 %2152 to i32
  %2154 = add nsw i32 %2150, %2153
  %2155 = sitofp i32 %2154 to float
  %2156 = fneg float %2155
  %2157 = fmul float %2147, %2156
  %2158 = fmul float %2157, 0.000000e+00
  %2159 = bitcast i32 %32 to float
  %2160 = fadd float %2159, %2158
  %2161 = bitcast i32 %5 to float
  %2162 = bitcast i32 %5 to float
  %2163 = fmul float %2161, %2162
  %2164 = fadd float %2163, 0.000000e+00
  %2165 = bitcast i32 %32 to float
  %2166 = bitcast i32 %32 to float
  %2167 = fmul float %2165, %2166
  %2168 = fadd float %2164, %2167
  %2169 = call float @llvm.sqrt.f32(float %2168)
  %2170 = bitcast i32 %5 to float
  %2171 = fcmp olt float %2170, 0.000000e+00
  %2172 = sext i1 %2171 to i32
  %2173 = bitcast i32 %5 to float
  %2174 = fcmp ogt float %2173, 0.000000e+00
  %2175 = zext i1 %2174 to i32
  %2176 = add nsw i32 %2172, %2175
  %2177 = sitofp i32 %2176 to float
  %2178 = fneg float %2177
  %2179 = fmul float %2169, %2178
  %2180 = fmul float %2179, 0.000000e+00
  %2181 = bitcast i32 %32 to float
  %2182 = fadd float %2181, %2180
  %2183 = fmul float %2160, %2182
  %2184 = fadd float %2138, %2183
  %2185 = call float @llvm.sqrt.f32(float %2184)
  %2186 = fadd float %2185, 0.000000e+00
  %2187 = fdiv float %2094, %2186
  %2188 = fmul float %2073, %2187
  %2189 = fsub float 1.000000e+00, %2188
  %2190 = fmul float %2189, %1950
  %2191 = fadd float %2190, 0.000000e+00
  %2192 = bitcast i32 %5 to float
  %2193 = bitcast i32 %5 to float
  %2194 = fmul float %2192, %2193
  %2195 = fadd float %2194, 0.000000e+00
  %2196 = bitcast i32 %32 to float
  %2197 = bitcast i32 %32 to float
  %2198 = fmul float %2196, %2197
  %2199 = fadd float %2195, %2198
  %2200 = call float @llvm.sqrt.f32(float %2199)
  %2201 = bitcast i32 %5 to float
  %2202 = fcmp olt float %2201, 0.000000e+00
  %2203 = sext i1 %2202 to i32
  %2204 = bitcast i32 %5 to float
  %2205 = fcmp ogt float %2204, 0.000000e+00
  %2206 = zext i1 %2205 to i32
  %2207 = add nsw i32 %2203, %2206
  %2208 = sitofp i32 %2207 to float
  %2209 = fneg float %2208
  %2210 = fmul float %2200, %2209
  %2211 = bitcast i32 %5 to float
  %2212 = fadd float %2211, %2210
  %2213 = bitcast i32 %5 to float
  %2214 = bitcast i32 %5 to float
  %2215 = fmul float %2213, %2214
  %2216 = fadd float %2215, 0.000000e+00
  %2217 = bitcast i32 %32 to float
  %2218 = bitcast i32 %32 to float
  %2219 = fmul float %2217, %2218
  %2220 = fadd float %2216, %2219
  %2221 = call float @llvm.sqrt.f32(float %2220)
  %2222 = bitcast i32 %5 to float
  %2223 = fcmp olt float %2222, 0.000000e+00
  %2224 = sext i1 %2223 to i32
  %2225 = bitcast i32 %5 to float
  %2226 = fcmp ogt float %2225, 0.000000e+00
  %2227 = zext i1 %2226 to i32
  %2228 = add nsw i32 %2224, %2227
  %2229 = sitofp i32 %2228 to float
  %2230 = fneg float %2229
  %2231 = fmul float %2221, %2230
  %2232 = bitcast i32 %5 to float
  %2233 = fadd float %2232, %2231
  %2234 = bitcast i32 %5 to float
  %2235 = bitcast i32 %5 to float
  %2236 = fmul float %2234, %2235
  %2237 = fadd float %2236, 0.000000e+00
  %2238 = bitcast i32 %32 to float
  %2239 = bitcast i32 %32 to float
  %2240 = fmul float %2238, %2239
  %2241 = fadd float %2237, %2240
  %2242 = call float @llvm.sqrt.f32(float %2241)
  %2243 = bitcast i32 %5 to float
  %2244 = fcmp olt float %2243, 0.000000e+00
  %2245 = sext i1 %2244 to i32
  %2246 = bitcast i32 %5 to float
  %2247 = fcmp ogt float %2246, 0.000000e+00
  %2248 = zext i1 %2247 to i32
  %2249 = add nsw i32 %2245, %2248
  %2250 = sitofp i32 %2249 to float
  %2251 = fneg float %2250
  %2252 = fmul float %2242, %2251
  %2253 = bitcast i32 %5 to float
  %2254 = fadd float %2253, %2252
  %2255 = fmul float %2233, %2254
  %2256 = fadd float %2255, 0.000000e+00
  %2257 = bitcast i32 %5 to float
  %2258 = bitcast i32 %5 to float
  %2259 = fmul float %2257, %2258
  %2260 = fadd float %2259, 0.000000e+00
  %2261 = bitcast i32 %32 to float
  %2262 = bitcast i32 %32 to float
  %2263 = fmul float %2261, %2262
  %2264 = fadd float %2260, %2263
  %2265 = call float @llvm.sqrt.f32(float %2264)
  %2266 = bitcast i32 %5 to float
  %2267 = fcmp olt float %2266, 0.000000e+00
  %2268 = sext i1 %2267 to i32
  %2269 = bitcast i32 %5 to float
  %2270 = fcmp ogt float %2269, 0.000000e+00
  %2271 = zext i1 %2270 to i32
  %2272 = add nsw i32 %2268, %2271
  %2273 = sitofp i32 %2272 to float
  %2274 = fneg float %2273
  %2275 = fmul float %2265, %2274
  %2276 = fmul float %2275, 0.000000e+00
  %2277 = bitcast i32 %32 to float
  %2278 = fadd float %2277, %2276
  %2279 = bitcast i32 %5 to float
  %2280 = bitcast i32 %5 to float
  %2281 = fmul float %2279, %2280
  %2282 = fadd float %2281, 0.000000e+00
  %2283 = bitcast i32 %32 to float
  %2284 = bitcast i32 %32 to float
  %2285 = fmul float %2283, %2284
  %2286 = fadd float %2282, %2285
  %2287 = call float @llvm.sqrt.f32(float %2286)
  %2288 = bitcast i32 %5 to float
  %2289 = fcmp olt float %2288, 0.000000e+00
  %2290 = sext i1 %2289 to i32
  %2291 = bitcast i32 %5 to float
  %2292 = fcmp ogt float %2291, 0.000000e+00
  %2293 = zext i1 %2292 to i32
  %2294 = add nsw i32 %2290, %2293
  %2295 = sitofp i32 %2294 to float
  %2296 = fneg float %2295
  %2297 = fmul float %2287, %2296
  %2298 = fmul float %2297, 0.000000e+00
  %2299 = bitcast i32 %32 to float
  %2300 = fadd float %2299, %2298
  %2301 = fmul float %2278, %2300
  %2302 = fadd float %2256, %2301
  %2303 = call float @llvm.sqrt.f32(float %2302)
  %2304 = fadd float %2303, 0.000000e+00
  %2305 = fdiv float %2212, %2304
  %2306 = fmul float %2305, 2.000000e+00
  %2307 = bitcast i32 %5 to float
  %2308 = bitcast i32 %5 to float
  %2309 = fmul float %2307, %2308
  %2310 = fadd float %2309, 0.000000e+00
  %2311 = bitcast i32 %32 to float
  %2312 = bitcast i32 %32 to float
  %2313 = fmul float %2311, %2312
  %2314 = fadd float %2310, %2313
  %2315 = call float @llvm.sqrt.f32(float %2314)
  %2316 = bitcast i32 %5 to float
  %2317 = fcmp olt float %2316, 0.000000e+00
  %2318 = sext i1 %2317 to i32
  %2319 = bitcast i32 %5 to float
  %2320 = fcmp ogt float %2319, 0.000000e+00
  %2321 = zext i1 %2320 to i32
  %2322 = add nsw i32 %2318, %2321
  %2323 = sitofp i32 %2322 to float
  %2324 = fneg float %2323
  %2325 = fmul float %2315, %2324
  %2326 = fmul float %2325, 0.000000e+00
  %2327 = bitcast i32 %32 to float
  %2328 = fadd float %2327, %2326
  %2329 = bitcast i32 %5 to float
  %2330 = bitcast i32 %5 to float
  %2331 = fmul float %2329, %2330
  %2332 = fadd float %2331, 0.000000e+00
  %2333 = bitcast i32 %32 to float
  %2334 = bitcast i32 %32 to float
  %2335 = fmul float %2333, %2334
  %2336 = fadd float %2332, %2335
  %2337 = call float @llvm.sqrt.f32(float %2336)
  %2338 = bitcast i32 %5 to float
  %2339 = fcmp olt float %2338, 0.000000e+00
  %2340 = sext i1 %2339 to i32
  %2341 = bitcast i32 %5 to float
  %2342 = fcmp ogt float %2341, 0.000000e+00
  %2343 = zext i1 %2342 to i32
  %2344 = add nsw i32 %2340, %2343
  %2345 = sitofp i32 %2344 to float
  %2346 = fneg float %2345
  %2347 = fmul float %2337, %2346
  %2348 = bitcast i32 %5 to float
  %2349 = fadd float %2348, %2347
  %2350 = bitcast i32 %5 to float
  %2351 = bitcast i32 %5 to float
  %2352 = fmul float %2350, %2351
  %2353 = fadd float %2352, 0.000000e+00
  %2354 = bitcast i32 %32 to float
  %2355 = bitcast i32 %32 to float
  %2356 = fmul float %2354, %2355
  %2357 = fadd float %2353, %2356
  %2358 = call float @llvm.sqrt.f32(float %2357)
  %2359 = bitcast i32 %5 to float
  %2360 = fcmp olt float %2359, 0.000000e+00
  %2361 = sext i1 %2360 to i32
  %2362 = bitcast i32 %5 to float
  %2363 = fcmp ogt float %2362, 0.000000e+00
  %2364 = zext i1 %2363 to i32
  %2365 = add nsw i32 %2361, %2364
  %2366 = sitofp i32 %2365 to float
  %2367 = fneg float %2366
  %2368 = fmul float %2358, %2367
  %2369 = bitcast i32 %5 to float
  %2370 = fadd float %2369, %2368
  %2371 = fmul float %2349, %2370
  %2372 = fadd float %2371, 0.000000e+00
  %2373 = bitcast i32 %5 to float
  %2374 = bitcast i32 %5 to float
  %2375 = fmul float %2373, %2374
  %2376 = fadd float %2375, 0.000000e+00
  %2377 = bitcast i32 %32 to float
  %2378 = bitcast i32 %32 to float
  %2379 = fmul float %2377, %2378
  %2380 = fadd float %2376, %2379
  %2381 = call float @llvm.sqrt.f32(float %2380)
  %2382 = bitcast i32 %5 to float
  %2383 = fcmp olt float %2382, 0.000000e+00
  %2384 = sext i1 %2383 to i32
  %2385 = bitcast i32 %5 to float
  %2386 = fcmp ogt float %2385, 0.000000e+00
  %2387 = zext i1 %2386 to i32
  %2388 = add nsw i32 %2384, %2387
  %2389 = sitofp i32 %2388 to float
  %2390 = fneg float %2389
  %2391 = fmul float %2381, %2390
  %2392 = fmul float %2391, 0.000000e+00
  %2393 = bitcast i32 %32 to float
  %2394 = fadd float %2393, %2392
  %2395 = bitcast i32 %5 to float
  %2396 = bitcast i32 %5 to float
  %2397 = fmul float %2395, %2396
  %2398 = fadd float %2397, 0.000000e+00
  %2399 = bitcast i32 %32 to float
  %2400 = bitcast i32 %32 to float
  %2401 = fmul float %2399, %2400
  %2402 = fadd float %2398, %2401
  %2403 = call float @llvm.sqrt.f32(float %2402)
  %2404 = bitcast i32 %5 to float
  %2405 = fcmp olt float %2404, 0.000000e+00
  %2406 = sext i1 %2405 to i32
  %2407 = bitcast i32 %5 to float
  %2408 = fcmp ogt float %2407, 0.000000e+00
  %2409 = zext i1 %2408 to i32
  %2410 = add nsw i32 %2406, %2409
  %2411 = sitofp i32 %2410 to float
  %2412 = fneg float %2411
  %2413 = fmul float %2403, %2412
  %2414 = fmul float %2413, 0.000000e+00
  %2415 = bitcast i32 %32 to float
  %2416 = fadd float %2415, %2414
  %2417 = fmul float %2394, %2416
  %2418 = fadd float %2372, %2417
  %2419 = call float @llvm.sqrt.f32(float %2418)
  %2420 = fadd float %2419, 0.000000e+00
  %2421 = fdiv float %2328, %2420
  %2422 = fmul float %2306, %2421
  %2423 = fneg float %2422
  %2424 = getelementptr float, float* %0, i32 0
  %2425 = getelementptr inbounds float, float* %2424, i64 3
  %2426 = load float, float* %2425, align 4
  %2427 = fmul float %2423, %2426
  %2428 = fadd float %2191, %2427
  %2429 = insertelement <4 x float> zeroinitializer, float %2428, i32 0
  %2430 = insertelement <4 x float> %2429, float 0.000000e+00, i32 1
  %2431 = insertelement <4 x float> %2430, float 0.000000e+00, i32 2
  %2432 = insertelement <4 x float> %2431, float 0.000000e+00, i32 3
  %2433 = extractelement <4 x float> %2432, i32 0
  %2434 = getelementptr float, float* %2, i32 0
  %2435 = getelementptr inbounds float, float* %2434, i64 1
  store float %2433, float* %2435, align 4
  %2436 = extractelement <4 x float> %2432, i32 1
  %2437 = getelementptr float, float* %2, i32 0
  %2438 = getelementptr inbounds float, float* %2437, i64 2
  store float %2436, float* %2438, align 4
  %2439 = bitcast i32 %5 to float
  %2440 = bitcast i32 %5 to float
  %2441 = fmul float %2439, %2440
  %2442 = fadd float %2441, 0.000000e+00
  %2443 = bitcast i32 %32 to float
  %2444 = bitcast i32 %32 to float
  %2445 = fmul float %2443, %2444
  %2446 = fadd float %2442, %2445
  %2447 = call float @llvm.sqrt.f32(float %2446)
  %2448 = bitcast i32 %5 to float
  %2449 = fcmp olt float %2448, 0.000000e+00
  %2450 = sext i1 %2449 to i32
  %2451 = bitcast i32 %5 to float
  %2452 = fcmp ogt float %2451, 0.000000e+00
  %2453 = zext i1 %2452 to i32
  %2454 = add nsw i32 %2450, %2453
  %2455 = sitofp i32 %2454 to float
  %2456 = fneg float %2455
  %2457 = fmul float %2447, %2456
  %2458 = fmul float %2457, 0.000000e+00
  %2459 = bitcast i32 %32 to float
  %2460 = fadd float %2459, %2458
  %2461 = bitcast i32 %5 to float
  %2462 = bitcast i32 %5 to float
  %2463 = fmul float %2461, %2462
  %2464 = fadd float %2463, 0.000000e+00
  %2465 = bitcast i32 %32 to float
  %2466 = bitcast i32 %32 to float
  %2467 = fmul float %2465, %2466
  %2468 = fadd float %2464, %2467
  %2469 = call float @llvm.sqrt.f32(float %2468)
  %2470 = bitcast i32 %5 to float
  %2471 = fcmp olt float %2470, 0.000000e+00
  %2472 = sext i1 %2471 to i32
  %2473 = bitcast i32 %5 to float
  %2474 = fcmp ogt float %2473, 0.000000e+00
  %2475 = zext i1 %2474 to i32
  %2476 = add nsw i32 %2472, %2475
  %2477 = sitofp i32 %2476 to float
  %2478 = fneg float %2477
  %2479 = fmul float %2469, %2478
  %2480 = bitcast i32 %5 to float
  %2481 = fadd float %2480, %2479
  %2482 = bitcast i32 %5 to float
  %2483 = bitcast i32 %5 to float
  %2484 = fmul float %2482, %2483
  %2485 = fadd float %2484, 0.000000e+00
  %2486 = bitcast i32 %32 to float
  %2487 = bitcast i32 %32 to float
  %2488 = fmul float %2486, %2487
  %2489 = fadd float %2485, %2488
  %2490 = call float @llvm.sqrt.f32(float %2489)
  %2491 = bitcast i32 %5 to float
  %2492 = fcmp olt float %2491, 0.000000e+00
  %2493 = sext i1 %2492 to i32
  %2494 = bitcast i32 %5 to float
  %2495 = fcmp ogt float %2494, 0.000000e+00
  %2496 = zext i1 %2495 to i32
  %2497 = add nsw i32 %2493, %2496
  %2498 = sitofp i32 %2497 to float
  %2499 = fneg float %2498
  %2500 = fmul float %2490, %2499
  %2501 = bitcast i32 %5 to float
  %2502 = fadd float %2501, %2500
  %2503 = fmul float %2481, %2502
  %2504 = fadd float %2503, 0.000000e+00
  %2505 = bitcast i32 %5 to float
  %2506 = bitcast i32 %5 to float
  %2507 = fmul float %2505, %2506
  %2508 = fadd float %2507, 0.000000e+00
  %2509 = bitcast i32 %32 to float
  %2510 = bitcast i32 %32 to float
  %2511 = fmul float %2509, %2510
  %2512 = fadd float %2508, %2511
  %2513 = call float @llvm.sqrt.f32(float %2512)
  %2514 = bitcast i32 %5 to float
  %2515 = fcmp olt float %2514, 0.000000e+00
  %2516 = sext i1 %2515 to i32
  %2517 = bitcast i32 %5 to float
  %2518 = fcmp ogt float %2517, 0.000000e+00
  %2519 = zext i1 %2518 to i32
  %2520 = add nsw i32 %2516, %2519
  %2521 = sitofp i32 %2520 to float
  %2522 = fneg float %2521
  %2523 = fmul float %2513, %2522
  %2524 = fmul float %2523, 0.000000e+00
  %2525 = bitcast i32 %32 to float
  %2526 = fadd float %2525, %2524
  %2527 = bitcast i32 %5 to float
  %2528 = bitcast i32 %5 to float
  %2529 = fmul float %2527, %2528
  %2530 = fadd float %2529, 0.000000e+00
  %2531 = bitcast i32 %32 to float
  %2532 = bitcast i32 %32 to float
  %2533 = fmul float %2531, %2532
  %2534 = fadd float %2530, %2533
  %2535 = call float @llvm.sqrt.f32(float %2534)
  %2536 = bitcast i32 %5 to float
  %2537 = fcmp olt float %2536, 0.000000e+00
  %2538 = sext i1 %2537 to i32
  %2539 = bitcast i32 %5 to float
  %2540 = fcmp ogt float %2539, 0.000000e+00
  %2541 = zext i1 %2540 to i32
  %2542 = add nsw i32 %2538, %2541
  %2543 = sitofp i32 %2542 to float
  %2544 = fneg float %2543
  %2545 = fmul float %2535, %2544
  %2546 = fmul float %2545, 0.000000e+00
  %2547 = bitcast i32 %32 to float
  %2548 = fadd float %2547, %2546
  %2549 = fmul float %2526, %2548
  %2550 = fadd float %2504, %2549
  %2551 = call float @llvm.sqrt.f32(float %2550)
  %2552 = fadd float %2551, 0.000000e+00
  %2553 = fdiv float %2460, %2552
  %2554 = fmul float %2553, 2.000000e+00
  %2555 = bitcast i32 %5 to float
  %2556 = bitcast i32 %5 to float
  %2557 = fmul float %2555, %2556
  %2558 = fadd float %2557, 0.000000e+00
  %2559 = bitcast i32 %32 to float
  %2560 = bitcast i32 %32 to float
  %2561 = fmul float %2559, %2560
  %2562 = fadd float %2558, %2561
  %2563 = call float @llvm.sqrt.f32(float %2562)
  %2564 = bitcast i32 %5 to float
  %2565 = fcmp olt float %2564, 0.000000e+00
  %2566 = sext i1 %2565 to i32
  %2567 = bitcast i32 %5 to float
  %2568 = fcmp ogt float %2567, 0.000000e+00
  %2569 = zext i1 %2568 to i32
  %2570 = add nsw i32 %2566, %2569
  %2571 = sitofp i32 %2570 to float
  %2572 = fneg float %2571
  %2573 = fmul float %2563, %2572
  %2574 = bitcast i32 %5 to float
  %2575 = fadd float %2574, %2573
  %2576 = bitcast i32 %5 to float
  %2577 = bitcast i32 %5 to float
  %2578 = fmul float %2576, %2577
  %2579 = fadd float %2578, 0.000000e+00
  %2580 = bitcast i32 %32 to float
  %2581 = bitcast i32 %32 to float
  %2582 = fmul float %2580, %2581
  %2583 = fadd float %2579, %2582
  %2584 = call float @llvm.sqrt.f32(float %2583)
  %2585 = bitcast i32 %5 to float
  %2586 = fcmp olt float %2585, 0.000000e+00
  %2587 = sext i1 %2586 to i32
  %2588 = bitcast i32 %5 to float
  %2589 = fcmp ogt float %2588, 0.000000e+00
  %2590 = zext i1 %2589 to i32
  %2591 = add nsw i32 %2587, %2590
  %2592 = sitofp i32 %2591 to float
  %2593 = fneg float %2592
  %2594 = fmul float %2584, %2593
  %2595 = bitcast i32 %5 to float
  %2596 = fadd float %2595, %2594
  %2597 = bitcast i32 %5 to float
  %2598 = bitcast i32 %5 to float
  %2599 = fmul float %2597, %2598
  %2600 = fadd float %2599, 0.000000e+00
  %2601 = bitcast i32 %32 to float
  %2602 = bitcast i32 %32 to float
  %2603 = fmul float %2601, %2602
  %2604 = fadd float %2600, %2603
  %2605 = call float @llvm.sqrt.f32(float %2604)
  %2606 = bitcast i32 %5 to float
  %2607 = fcmp olt float %2606, 0.000000e+00
  %2608 = sext i1 %2607 to i32
  %2609 = bitcast i32 %5 to float
  %2610 = fcmp ogt float %2609, 0.000000e+00
  %2611 = zext i1 %2610 to i32
  %2612 = add nsw i32 %2608, %2611
  %2613 = sitofp i32 %2612 to float
  %2614 = fneg float %2613
  %2615 = fmul float %2605, %2614
  %2616 = bitcast i32 %5 to float
  %2617 = fadd float %2616, %2615
  %2618 = fmul float %2596, %2617
  %2619 = fadd float %2618, 0.000000e+00
  %2620 = bitcast i32 %5 to float
  %2621 = bitcast i32 %5 to float
  %2622 = fmul float %2620, %2621
  %2623 = fadd float %2622, 0.000000e+00
  %2624 = bitcast i32 %32 to float
  %2625 = bitcast i32 %32 to float
  %2626 = fmul float %2624, %2625
  %2627 = fadd float %2623, %2626
  %2628 = call float @llvm.sqrt.f32(float %2627)
  %2629 = bitcast i32 %5 to float
  %2630 = fcmp olt float %2629, 0.000000e+00
  %2631 = sext i1 %2630 to i32
  %2632 = bitcast i32 %5 to float
  %2633 = fcmp ogt float %2632, 0.000000e+00
  %2634 = zext i1 %2633 to i32
  %2635 = add nsw i32 %2631, %2634
  %2636 = sitofp i32 %2635 to float
  %2637 = fneg float %2636
  %2638 = fmul float %2628, %2637
  %2639 = fmul float %2638, 0.000000e+00
  %2640 = bitcast i32 %32 to float
  %2641 = fadd float %2640, %2639
  %2642 = bitcast i32 %5 to float
  %2643 = bitcast i32 %5 to float
  %2644 = fmul float %2642, %2643
  %2645 = fadd float %2644, 0.000000e+00
  %2646 = bitcast i32 %32 to float
  %2647 = bitcast i32 %32 to float
  %2648 = fmul float %2646, %2647
  %2649 = fadd float %2645, %2648
  %2650 = call float @llvm.sqrt.f32(float %2649)
  %2651 = bitcast i32 %5 to float
  %2652 = fcmp olt float %2651, 0.000000e+00
  %2653 = sext i1 %2652 to i32
  %2654 = bitcast i32 %5 to float
  %2655 = fcmp ogt float %2654, 0.000000e+00
  %2656 = zext i1 %2655 to i32
  %2657 = add nsw i32 %2653, %2656
  %2658 = sitofp i32 %2657 to float
  %2659 = fneg float %2658
  %2660 = fmul float %2650, %2659
  %2661 = fmul float %2660, 0.000000e+00
  %2662 = bitcast i32 %32 to float
  %2663 = fadd float %2662, %2661
  %2664 = fmul float %2641, %2663
  %2665 = fadd float %2619, %2664
  %2666 = call float @llvm.sqrt.f32(float %2665)
  %2667 = fadd float %2666, 0.000000e+00
  %2668 = fdiv float %2575, %2667
  %2669 = fmul float %2554, %2668
  %2670 = fneg float %2669
  %2671 = insertelement <4 x float> zeroinitializer, float %2670, i32 0
  %2672 = insertelement <4 x float> %2671, float 0.000000e+00, i32 1
  %2673 = insertelement <4 x float> %2672, float 0.000000e+00, i32 2
  %2674 = insertelement <4 x float> %2673, float 0.000000e+00, i32 3
  %2675 = getelementptr float, float* %0, i32 0
  %2676 = load float, float* %2675, align 4
  %2677 = insertelement <4 x float> zeroinitializer, float %2676, i32 0
  %2678 = insertelement <4 x float> %2677, float 0.000000e+00, i32 1
  %2679 = insertelement <4 x float> %2678, float 0.000000e+00, i32 2
  %2680 = insertelement <4 x float> %2679, float 0.000000e+00, i32 3
  %2681 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2674, <4 x float> %2680, <4 x float> zeroinitializer)
  %2682 = extractelement <4 x float> %2681, i32 0
  %2683 = getelementptr float, float* %2, i32 0
  %2684 = getelementptr inbounds float, float* %2683, i64 2
  store float %2682, float* %2684, align 4
  %2685 = bitcast i32 %5 to float
  %2686 = bitcast i32 %5 to float
  %2687 = fmul float %2685, %2686
  %2688 = fadd float %2687, 0.000000e+00
  %2689 = bitcast i32 %32 to float
  %2690 = bitcast i32 %32 to float
  %2691 = fmul float %2689, %2690
  %2692 = fadd float %2688, %2691
  %2693 = call float @llvm.sqrt.f32(float %2692)
  %2694 = bitcast i32 %5 to float
  %2695 = fcmp olt float %2694, 0.000000e+00
  %2696 = sext i1 %2695 to i32
  %2697 = bitcast i32 %5 to float
  %2698 = fcmp ogt float %2697, 0.000000e+00
  %2699 = zext i1 %2698 to i32
  %2700 = add nsw i32 %2696, %2699
  %2701 = sitofp i32 %2700 to float
  %2702 = fneg float %2701
  %2703 = fmul float %2693, %2702
  %2704 = fmul float %2703, 0.000000e+00
  %2705 = bitcast i32 %32 to float
  %2706 = fadd float %2705, %2704
  %2707 = bitcast i32 %5 to float
  %2708 = bitcast i32 %5 to float
  %2709 = fmul float %2707, %2708
  %2710 = fadd float %2709, 0.000000e+00
  %2711 = bitcast i32 %32 to float
  %2712 = bitcast i32 %32 to float
  %2713 = fmul float %2711, %2712
  %2714 = fadd float %2710, %2713
  %2715 = call float @llvm.sqrt.f32(float %2714)
  %2716 = bitcast i32 %5 to float
  %2717 = fcmp olt float %2716, 0.000000e+00
  %2718 = sext i1 %2717 to i32
  %2719 = bitcast i32 %5 to float
  %2720 = fcmp ogt float %2719, 0.000000e+00
  %2721 = zext i1 %2720 to i32
  %2722 = add nsw i32 %2718, %2721
  %2723 = sitofp i32 %2722 to float
  %2724 = fneg float %2723
  %2725 = fmul float %2715, %2724
  %2726 = bitcast i32 %5 to float
  %2727 = fadd float %2726, %2725
  %2728 = bitcast i32 %5 to float
  %2729 = bitcast i32 %5 to float
  %2730 = fmul float %2728, %2729
  %2731 = fadd float %2730, 0.000000e+00
  %2732 = bitcast i32 %32 to float
  %2733 = bitcast i32 %32 to float
  %2734 = fmul float %2732, %2733
  %2735 = fadd float %2731, %2734
  %2736 = call float @llvm.sqrt.f32(float %2735)
  %2737 = bitcast i32 %5 to float
  %2738 = fcmp olt float %2737, 0.000000e+00
  %2739 = sext i1 %2738 to i32
  %2740 = bitcast i32 %5 to float
  %2741 = fcmp ogt float %2740, 0.000000e+00
  %2742 = zext i1 %2741 to i32
  %2743 = add nsw i32 %2739, %2742
  %2744 = sitofp i32 %2743 to float
  %2745 = fneg float %2744
  %2746 = fmul float %2736, %2745
  %2747 = bitcast i32 %5 to float
  %2748 = fadd float %2747, %2746
  %2749 = fmul float %2727, %2748
  %2750 = fadd float %2749, 0.000000e+00
  %2751 = bitcast i32 %5 to float
  %2752 = bitcast i32 %5 to float
  %2753 = fmul float %2751, %2752
  %2754 = fadd float %2753, 0.000000e+00
  %2755 = bitcast i32 %32 to float
  %2756 = bitcast i32 %32 to float
  %2757 = fmul float %2755, %2756
  %2758 = fadd float %2754, %2757
  %2759 = call float @llvm.sqrt.f32(float %2758)
  %2760 = bitcast i32 %5 to float
  %2761 = fcmp olt float %2760, 0.000000e+00
  %2762 = sext i1 %2761 to i32
  %2763 = bitcast i32 %5 to float
  %2764 = fcmp ogt float %2763, 0.000000e+00
  %2765 = zext i1 %2764 to i32
  %2766 = add nsw i32 %2762, %2765
  %2767 = sitofp i32 %2766 to float
  %2768 = fneg float %2767
  %2769 = fmul float %2759, %2768
  %2770 = fmul float %2769, 0.000000e+00
  %2771 = bitcast i32 %32 to float
  %2772 = fadd float %2771, %2770
  %2773 = bitcast i32 %5 to float
  %2774 = bitcast i32 %5 to float
  %2775 = fmul float %2773, %2774
  %2776 = fadd float %2775, 0.000000e+00
  %2777 = bitcast i32 %32 to float
  %2778 = bitcast i32 %32 to float
  %2779 = fmul float %2777, %2778
  %2780 = fadd float %2776, %2779
  %2781 = call float @llvm.sqrt.f32(float %2780)
  %2782 = bitcast i32 %5 to float
  %2783 = fcmp olt float %2782, 0.000000e+00
  %2784 = sext i1 %2783 to i32
  %2785 = bitcast i32 %5 to float
  %2786 = fcmp ogt float %2785, 0.000000e+00
  %2787 = zext i1 %2786 to i32
  %2788 = add nsw i32 %2784, %2787
  %2789 = sitofp i32 %2788 to float
  %2790 = fneg float %2789
  %2791 = fmul float %2781, %2790
  %2792 = fmul float %2791, 0.000000e+00
  %2793 = bitcast i32 %32 to float
  %2794 = fadd float %2793, %2792
  %2795 = fmul float %2772, %2794
  %2796 = fadd float %2750, %2795
  %2797 = call float @llvm.sqrt.f32(float %2796)
  %2798 = fadd float %2797, 0.000000e+00
  %2799 = fdiv float %2706, %2798
  %2800 = fmul float %2799, 2.000000e+00
  %2801 = bitcast i32 %5 to float
  %2802 = bitcast i32 %5 to float
  %2803 = fmul float %2801, %2802
  %2804 = fadd float %2803, 0.000000e+00
  %2805 = bitcast i32 %32 to float
  %2806 = bitcast i32 %32 to float
  %2807 = fmul float %2805, %2806
  %2808 = fadd float %2804, %2807
  %2809 = call float @llvm.sqrt.f32(float %2808)
  %2810 = bitcast i32 %5 to float
  %2811 = fcmp olt float %2810, 0.000000e+00
  %2812 = sext i1 %2811 to i32
  %2813 = bitcast i32 %5 to float
  %2814 = fcmp ogt float %2813, 0.000000e+00
  %2815 = zext i1 %2814 to i32
  %2816 = add nsw i32 %2812, %2815
  %2817 = sitofp i32 %2816 to float
  %2818 = fneg float %2817
  %2819 = fmul float %2809, %2818
  %2820 = bitcast i32 %5 to float
  %2821 = fadd float %2820, %2819
  %2822 = bitcast i32 %5 to float
  %2823 = bitcast i32 %5 to float
  %2824 = fmul float %2822, %2823
  %2825 = fadd float %2824, 0.000000e+00
  %2826 = bitcast i32 %32 to float
  %2827 = bitcast i32 %32 to float
  %2828 = fmul float %2826, %2827
  %2829 = fadd float %2825, %2828
  %2830 = call float @llvm.sqrt.f32(float %2829)
  %2831 = bitcast i32 %5 to float
  %2832 = fcmp olt float %2831, 0.000000e+00
  %2833 = sext i1 %2832 to i32
  %2834 = bitcast i32 %5 to float
  %2835 = fcmp ogt float %2834, 0.000000e+00
  %2836 = zext i1 %2835 to i32
  %2837 = add nsw i32 %2833, %2836
  %2838 = sitofp i32 %2837 to float
  %2839 = fneg float %2838
  %2840 = fmul float %2830, %2839
  %2841 = bitcast i32 %5 to float
  %2842 = fadd float %2841, %2840
  %2843 = bitcast i32 %5 to float
  %2844 = bitcast i32 %5 to float
  %2845 = fmul float %2843, %2844
  %2846 = fadd float %2845, 0.000000e+00
  %2847 = bitcast i32 %32 to float
  %2848 = bitcast i32 %32 to float
  %2849 = fmul float %2847, %2848
  %2850 = fadd float %2846, %2849
  %2851 = call float @llvm.sqrt.f32(float %2850)
  %2852 = bitcast i32 %5 to float
  %2853 = fcmp olt float %2852, 0.000000e+00
  %2854 = sext i1 %2853 to i32
  %2855 = bitcast i32 %5 to float
  %2856 = fcmp ogt float %2855, 0.000000e+00
  %2857 = zext i1 %2856 to i32
  %2858 = add nsw i32 %2854, %2857
  %2859 = sitofp i32 %2858 to float
  %2860 = fneg float %2859
  %2861 = fmul float %2851, %2860
  %2862 = bitcast i32 %5 to float
  %2863 = fadd float %2862, %2861
  %2864 = fmul float %2842, %2863
  %2865 = fadd float %2864, 0.000000e+00
  %2866 = bitcast i32 %5 to float
  %2867 = bitcast i32 %5 to float
  %2868 = fmul float %2866, %2867
  %2869 = fadd float %2868, 0.000000e+00
  %2870 = bitcast i32 %32 to float
  %2871 = bitcast i32 %32 to float
  %2872 = fmul float %2870, %2871
  %2873 = fadd float %2869, %2872
  %2874 = call float @llvm.sqrt.f32(float %2873)
  %2875 = bitcast i32 %5 to float
  %2876 = fcmp olt float %2875, 0.000000e+00
  %2877 = sext i1 %2876 to i32
  %2878 = bitcast i32 %5 to float
  %2879 = fcmp ogt float %2878, 0.000000e+00
  %2880 = zext i1 %2879 to i32
  %2881 = add nsw i32 %2877, %2880
  %2882 = sitofp i32 %2881 to float
  %2883 = fneg float %2882
  %2884 = fmul float %2874, %2883
  %2885 = fmul float %2884, 0.000000e+00
  %2886 = bitcast i32 %32 to float
  %2887 = fadd float %2886, %2885
  %2888 = bitcast i32 %5 to float
  %2889 = bitcast i32 %5 to float
  %2890 = fmul float %2888, %2889
  %2891 = fadd float %2890, 0.000000e+00
  %2892 = bitcast i32 %32 to float
  %2893 = bitcast i32 %32 to float
  %2894 = fmul float %2892, %2893
  %2895 = fadd float %2891, %2894
  %2896 = call float @llvm.sqrt.f32(float %2895)
  %2897 = bitcast i32 %5 to float
  %2898 = fcmp olt float %2897, 0.000000e+00
  %2899 = sext i1 %2898 to i32
  %2900 = bitcast i32 %5 to float
  %2901 = fcmp ogt float %2900, 0.000000e+00
  %2902 = zext i1 %2901 to i32
  %2903 = add nsw i32 %2899, %2902
  %2904 = sitofp i32 %2903 to float
  %2905 = fneg float %2904
  %2906 = fmul float %2896, %2905
  %2907 = fmul float %2906, 0.000000e+00
  %2908 = bitcast i32 %32 to float
  %2909 = fadd float %2908, %2907
  %2910 = fmul float %2887, %2909
  %2911 = fadd float %2865, %2910
  %2912 = call float @llvm.sqrt.f32(float %2911)
  %2913 = fadd float %2912, 0.000000e+00
  %2914 = fdiv float %2821, %2913
  %2915 = fmul float %2800, %2914
  %2916 = fneg float %2915
  %2917 = fmul float %2916, %2676
  %2918 = fadd float %2917, 0.000000e+00
  %2919 = bitcast i32 %5 to float
  %2920 = bitcast i32 %5 to float
  %2921 = fmul float %2919, %2920
  %2922 = fadd float %2921, 0.000000e+00
  %2923 = bitcast i32 %32 to float
  %2924 = bitcast i32 %32 to float
  %2925 = fmul float %2923, %2924
  %2926 = fadd float %2922, %2925
  %2927 = call float @llvm.sqrt.f32(float %2926)
  %2928 = bitcast i32 %5 to float
  %2929 = fcmp olt float %2928, 0.000000e+00
  %2930 = sext i1 %2929 to i32
  %2931 = bitcast i32 %5 to float
  %2932 = fcmp ogt float %2931, 0.000000e+00
  %2933 = zext i1 %2932 to i32
  %2934 = add nsw i32 %2930, %2933
  %2935 = sitofp i32 %2934 to float
  %2936 = fneg float %2935
  %2937 = fmul float %2927, %2936
  %2938 = fmul float %2937, 0.000000e+00
  %2939 = bitcast i32 %32 to float
  %2940 = fadd float %2939, %2938
  %2941 = bitcast i32 %5 to float
  %2942 = bitcast i32 %5 to float
  %2943 = fmul float %2941, %2942
  %2944 = fadd float %2943, 0.000000e+00
  %2945 = bitcast i32 %32 to float
  %2946 = bitcast i32 %32 to float
  %2947 = fmul float %2945, %2946
  %2948 = fadd float %2944, %2947
  %2949 = call float @llvm.sqrt.f32(float %2948)
  %2950 = bitcast i32 %5 to float
  %2951 = fcmp olt float %2950, 0.000000e+00
  %2952 = sext i1 %2951 to i32
  %2953 = bitcast i32 %5 to float
  %2954 = fcmp ogt float %2953, 0.000000e+00
  %2955 = zext i1 %2954 to i32
  %2956 = add nsw i32 %2952, %2955
  %2957 = sitofp i32 %2956 to float
  %2958 = fneg float %2957
  %2959 = fmul float %2949, %2958
  %2960 = bitcast i32 %5 to float
  %2961 = fadd float %2960, %2959
  %2962 = bitcast i32 %5 to float
  %2963 = bitcast i32 %5 to float
  %2964 = fmul float %2962, %2963
  %2965 = fadd float %2964, 0.000000e+00
  %2966 = bitcast i32 %32 to float
  %2967 = bitcast i32 %32 to float
  %2968 = fmul float %2966, %2967
  %2969 = fadd float %2965, %2968
  %2970 = call float @llvm.sqrt.f32(float %2969)
  %2971 = bitcast i32 %5 to float
  %2972 = fcmp olt float %2971, 0.000000e+00
  %2973 = sext i1 %2972 to i32
  %2974 = bitcast i32 %5 to float
  %2975 = fcmp ogt float %2974, 0.000000e+00
  %2976 = zext i1 %2975 to i32
  %2977 = add nsw i32 %2973, %2976
  %2978 = sitofp i32 %2977 to float
  %2979 = fneg float %2978
  %2980 = fmul float %2970, %2979
  %2981 = bitcast i32 %5 to float
  %2982 = fadd float %2981, %2980
  %2983 = fmul float %2961, %2982
  %2984 = fadd float %2983, 0.000000e+00
  %2985 = bitcast i32 %5 to float
  %2986 = bitcast i32 %5 to float
  %2987 = fmul float %2985, %2986
  %2988 = fadd float %2987, 0.000000e+00
  %2989 = bitcast i32 %32 to float
  %2990 = bitcast i32 %32 to float
  %2991 = fmul float %2989, %2990
  %2992 = fadd float %2988, %2991
  %2993 = call float @llvm.sqrt.f32(float %2992)
  %2994 = bitcast i32 %5 to float
  %2995 = fcmp olt float %2994, 0.000000e+00
  %2996 = sext i1 %2995 to i32
  %2997 = bitcast i32 %5 to float
  %2998 = fcmp ogt float %2997, 0.000000e+00
  %2999 = zext i1 %2998 to i32
  %3000 = add nsw i32 %2996, %2999
  %3001 = sitofp i32 %3000 to float
  %3002 = fneg float %3001
  %3003 = fmul float %2993, %3002
  %3004 = fmul float %3003, 0.000000e+00
  %3005 = bitcast i32 %32 to float
  %3006 = fadd float %3005, %3004
  %3007 = bitcast i32 %5 to float
  %3008 = bitcast i32 %5 to float
  %3009 = fmul float %3007, %3008
  %3010 = fadd float %3009, 0.000000e+00
  %3011 = bitcast i32 %32 to float
  %3012 = bitcast i32 %32 to float
  %3013 = fmul float %3011, %3012
  %3014 = fadd float %3010, %3013
  %3015 = call float @llvm.sqrt.f32(float %3014)
  %3016 = bitcast i32 %5 to float
  %3017 = fcmp olt float %3016, 0.000000e+00
  %3018 = sext i1 %3017 to i32
  %3019 = bitcast i32 %5 to float
  %3020 = fcmp ogt float %3019, 0.000000e+00
  %3021 = zext i1 %3020 to i32
  %3022 = add nsw i32 %3018, %3021
  %3023 = sitofp i32 %3022 to float
  %3024 = fneg float %3023
  %3025 = fmul float %3015, %3024
  %3026 = fmul float %3025, 0.000000e+00
  %3027 = bitcast i32 %32 to float
  %3028 = fadd float %3027, %3026
  %3029 = fmul float %3006, %3028
  %3030 = fadd float %2984, %3029
  %3031 = call float @llvm.sqrt.f32(float %3030)
  %3032 = fadd float %3031, 0.000000e+00
  %3033 = fdiv float %2940, %3032
  %3034 = fmul float %3033, 2.000000e+00
  %3035 = bitcast i32 %5 to float
  %3036 = bitcast i32 %5 to float
  %3037 = fmul float %3035, %3036
  %3038 = fadd float %3037, 0.000000e+00
  %3039 = bitcast i32 %32 to float
  %3040 = bitcast i32 %32 to float
  %3041 = fmul float %3039, %3040
  %3042 = fadd float %3038, %3041
  %3043 = call float @llvm.sqrt.f32(float %3042)
  %3044 = bitcast i32 %5 to float
  %3045 = fcmp olt float %3044, 0.000000e+00
  %3046 = sext i1 %3045 to i32
  %3047 = bitcast i32 %5 to float
  %3048 = fcmp ogt float %3047, 0.000000e+00
  %3049 = zext i1 %3048 to i32
  %3050 = add nsw i32 %3046, %3049
  %3051 = sitofp i32 %3050 to float
  %3052 = fneg float %3051
  %3053 = fmul float %3043, %3052
  %3054 = fmul float %3053, 0.000000e+00
  %3055 = bitcast i32 %32 to float
  %3056 = fadd float %3055, %3054
  %3057 = bitcast i32 %5 to float
  %3058 = bitcast i32 %5 to float
  %3059 = fmul float %3057, %3058
  %3060 = fadd float %3059, 0.000000e+00
  %3061 = bitcast i32 %32 to float
  %3062 = bitcast i32 %32 to float
  %3063 = fmul float %3061, %3062
  %3064 = fadd float %3060, %3063
  %3065 = call float @llvm.sqrt.f32(float %3064)
  %3066 = bitcast i32 %5 to float
  %3067 = fcmp olt float %3066, 0.000000e+00
  %3068 = sext i1 %3067 to i32
  %3069 = bitcast i32 %5 to float
  %3070 = fcmp ogt float %3069, 0.000000e+00
  %3071 = zext i1 %3070 to i32
  %3072 = add nsw i32 %3068, %3071
  %3073 = sitofp i32 %3072 to float
  %3074 = fneg float %3073
  %3075 = fmul float %3065, %3074
  %3076 = bitcast i32 %5 to float
  %3077 = fadd float %3076, %3075
  %3078 = bitcast i32 %5 to float
  %3079 = bitcast i32 %5 to float
  %3080 = fmul float %3078, %3079
  %3081 = fadd float %3080, 0.000000e+00
  %3082 = bitcast i32 %32 to float
  %3083 = bitcast i32 %32 to float
  %3084 = fmul float %3082, %3083
  %3085 = fadd float %3081, %3084
  %3086 = call float @llvm.sqrt.f32(float %3085)
  %3087 = bitcast i32 %5 to float
  %3088 = fcmp olt float %3087, 0.000000e+00
  %3089 = sext i1 %3088 to i32
  %3090 = bitcast i32 %5 to float
  %3091 = fcmp ogt float %3090, 0.000000e+00
  %3092 = zext i1 %3091 to i32
  %3093 = add nsw i32 %3089, %3092
  %3094 = sitofp i32 %3093 to float
  %3095 = fneg float %3094
  %3096 = fmul float %3086, %3095
  %3097 = bitcast i32 %5 to float
  %3098 = fadd float %3097, %3096
  %3099 = fmul float %3077, %3098
  %3100 = fadd float %3099, 0.000000e+00
  %3101 = bitcast i32 %5 to float
  %3102 = bitcast i32 %5 to float
  %3103 = fmul float %3101, %3102
  %3104 = fadd float %3103, 0.000000e+00
  %3105 = bitcast i32 %32 to float
  %3106 = bitcast i32 %32 to float
  %3107 = fmul float %3105, %3106
  %3108 = fadd float %3104, %3107
  %3109 = call float @llvm.sqrt.f32(float %3108)
  %3110 = bitcast i32 %5 to float
  %3111 = fcmp olt float %3110, 0.000000e+00
  %3112 = sext i1 %3111 to i32
  %3113 = bitcast i32 %5 to float
  %3114 = fcmp ogt float %3113, 0.000000e+00
  %3115 = zext i1 %3114 to i32
  %3116 = add nsw i32 %3112, %3115
  %3117 = sitofp i32 %3116 to float
  %3118 = fneg float %3117
  %3119 = fmul float %3109, %3118
  %3120 = fmul float %3119, 0.000000e+00
  %3121 = bitcast i32 %32 to float
  %3122 = fadd float %3121, %3120
  %3123 = bitcast i32 %5 to float
  %3124 = bitcast i32 %5 to float
  %3125 = fmul float %3123, %3124
  %3126 = fadd float %3125, 0.000000e+00
  %3127 = bitcast i32 %32 to float
  %3128 = bitcast i32 %32 to float
  %3129 = fmul float %3127, %3128
  %3130 = fadd float %3126, %3129
  %3131 = call float @llvm.sqrt.f32(float %3130)
  %3132 = bitcast i32 %5 to float
  %3133 = fcmp olt float %3132, 0.000000e+00
  %3134 = sext i1 %3133 to i32
  %3135 = bitcast i32 %5 to float
  %3136 = fcmp ogt float %3135, 0.000000e+00
  %3137 = zext i1 %3136 to i32
  %3138 = add nsw i32 %3134, %3137
  %3139 = sitofp i32 %3138 to float
  %3140 = fneg float %3139
  %3141 = fmul float %3131, %3140
  %3142 = fmul float %3141, 0.000000e+00
  %3143 = bitcast i32 %32 to float
  %3144 = fadd float %3143, %3142
  %3145 = fmul float %3122, %3144
  %3146 = fadd float %3100, %3145
  %3147 = call float @llvm.sqrt.f32(float %3146)
  %3148 = fadd float %3147, 0.000000e+00
  %3149 = fdiv float %3056, %3148
  %3150 = fmul float %3034, %3149
  %3151 = fsub float 1.000000e+00, %3150
  %3152 = getelementptr float, float* %0, i32 0
  %3153 = getelementptr inbounds float, float* %3152, i64 2
  %3154 = load float, float* %3153, align 4
  %3155 = fmul float %3151, %3154
  %3156 = fadd float %2918, %3155
  %3157 = insertelement <4 x float> zeroinitializer, float %3156, i32 0
  %3158 = insertelement <4 x float> %3157, float 0.000000e+00, i32 1
  %3159 = insertelement <4 x float> %3158, float 0.000000e+00, i32 2
  %3160 = insertelement <4 x float> %3159, float 0.000000e+00, i32 3
  %3161 = extractelement <4 x float> %3160, i32 0
  %3162 = getelementptr float, float* %2, i32 0
  %3163 = getelementptr inbounds float, float* %3162, i64 2
  store float %3161, float* %3163, align 4
  %3164 = extractelement <4 x float> %3160, i32 1
  %3165 = getelementptr float, float* %2, i32 0
  %3166 = getelementptr inbounds float, float* %3165, i64 3
  store float %3164, float* %3166, align 4
  %3167 = bitcast i32 %5 to float
  %3168 = bitcast i32 %5 to float
  %3169 = fmul float %3167, %3168
  %3170 = fadd float %3169, 0.000000e+00
  %3171 = bitcast i32 %32 to float
  %3172 = bitcast i32 %32 to float
  %3173 = fmul float %3171, %3172
  %3174 = fadd float %3170, %3173
  %3175 = call float @llvm.sqrt.f32(float %3174)
  %3176 = bitcast i32 %5 to float
  %3177 = fcmp olt float %3176, 0.000000e+00
  %3178 = sext i1 %3177 to i32
  %3179 = bitcast i32 %5 to float
  %3180 = fcmp ogt float %3179, 0.000000e+00
  %3181 = zext i1 %3180 to i32
  %3182 = add nsw i32 %3178, %3181
  %3183 = sitofp i32 %3182 to float
  %3184 = fneg float %3183
  %3185 = fmul float %3175, %3184
  %3186 = fmul float %3185, 0.000000e+00
  %3187 = bitcast i32 %32 to float
  %3188 = fadd float %3187, %3186
  %3189 = bitcast i32 %5 to float
  %3190 = bitcast i32 %5 to float
  %3191 = fmul float %3189, %3190
  %3192 = fadd float %3191, 0.000000e+00
  %3193 = bitcast i32 %32 to float
  %3194 = bitcast i32 %32 to float
  %3195 = fmul float %3193, %3194
  %3196 = fadd float %3192, %3195
  %3197 = call float @llvm.sqrt.f32(float %3196)
  %3198 = bitcast i32 %5 to float
  %3199 = fcmp olt float %3198, 0.000000e+00
  %3200 = sext i1 %3199 to i32
  %3201 = bitcast i32 %5 to float
  %3202 = fcmp ogt float %3201, 0.000000e+00
  %3203 = zext i1 %3202 to i32
  %3204 = add nsw i32 %3200, %3203
  %3205 = sitofp i32 %3204 to float
  %3206 = fneg float %3205
  %3207 = fmul float %3197, %3206
  %3208 = bitcast i32 %5 to float
  %3209 = fadd float %3208, %3207
  %3210 = bitcast i32 %5 to float
  %3211 = bitcast i32 %5 to float
  %3212 = fmul float %3210, %3211
  %3213 = fadd float %3212, 0.000000e+00
  %3214 = bitcast i32 %32 to float
  %3215 = bitcast i32 %32 to float
  %3216 = fmul float %3214, %3215
  %3217 = fadd float %3213, %3216
  %3218 = call float @llvm.sqrt.f32(float %3217)
  %3219 = bitcast i32 %5 to float
  %3220 = fcmp olt float %3219, 0.000000e+00
  %3221 = sext i1 %3220 to i32
  %3222 = bitcast i32 %5 to float
  %3223 = fcmp ogt float %3222, 0.000000e+00
  %3224 = zext i1 %3223 to i32
  %3225 = add nsw i32 %3221, %3224
  %3226 = sitofp i32 %3225 to float
  %3227 = fneg float %3226
  %3228 = fmul float %3218, %3227
  %3229 = bitcast i32 %5 to float
  %3230 = fadd float %3229, %3228
  %3231 = fmul float %3209, %3230
  %3232 = fadd float %3231, 0.000000e+00
  %3233 = bitcast i32 %5 to float
  %3234 = bitcast i32 %5 to float
  %3235 = fmul float %3233, %3234
  %3236 = fadd float %3235, 0.000000e+00
  %3237 = bitcast i32 %32 to float
  %3238 = bitcast i32 %32 to float
  %3239 = fmul float %3237, %3238
  %3240 = fadd float %3236, %3239
  %3241 = call float @llvm.sqrt.f32(float %3240)
  %3242 = bitcast i32 %5 to float
  %3243 = fcmp olt float %3242, 0.000000e+00
  %3244 = sext i1 %3243 to i32
  %3245 = bitcast i32 %5 to float
  %3246 = fcmp ogt float %3245, 0.000000e+00
  %3247 = zext i1 %3246 to i32
  %3248 = add nsw i32 %3244, %3247
  %3249 = sitofp i32 %3248 to float
  %3250 = fneg float %3249
  %3251 = fmul float %3241, %3250
  %3252 = fmul float %3251, 0.000000e+00
  %3253 = bitcast i32 %32 to float
  %3254 = fadd float %3253, %3252
  %3255 = bitcast i32 %5 to float
  %3256 = bitcast i32 %5 to float
  %3257 = fmul float %3255, %3256
  %3258 = fadd float %3257, 0.000000e+00
  %3259 = bitcast i32 %32 to float
  %3260 = bitcast i32 %32 to float
  %3261 = fmul float %3259, %3260
  %3262 = fadd float %3258, %3261
  %3263 = call float @llvm.sqrt.f32(float %3262)
  %3264 = bitcast i32 %5 to float
  %3265 = fcmp olt float %3264, 0.000000e+00
  %3266 = sext i1 %3265 to i32
  %3267 = bitcast i32 %5 to float
  %3268 = fcmp ogt float %3267, 0.000000e+00
  %3269 = zext i1 %3268 to i32
  %3270 = add nsw i32 %3266, %3269
  %3271 = sitofp i32 %3270 to float
  %3272 = fneg float %3271
  %3273 = fmul float %3263, %3272
  %3274 = fmul float %3273, 0.000000e+00
  %3275 = bitcast i32 %32 to float
  %3276 = fadd float %3275, %3274
  %3277 = fmul float %3254, %3276
  %3278 = fadd float %3232, %3277
  %3279 = call float @llvm.sqrt.f32(float %3278)
  %3280 = fadd float %3279, 0.000000e+00
  %3281 = fdiv float %3188, %3280
  %3282 = fmul float %3281, 2.000000e+00
  %3283 = bitcast i32 %5 to float
  %3284 = bitcast i32 %5 to float
  %3285 = fmul float %3283, %3284
  %3286 = fadd float %3285, 0.000000e+00
  %3287 = bitcast i32 %32 to float
  %3288 = bitcast i32 %32 to float
  %3289 = fmul float %3287, %3288
  %3290 = fadd float %3286, %3289
  %3291 = call float @llvm.sqrt.f32(float %3290)
  %3292 = bitcast i32 %5 to float
  %3293 = fcmp olt float %3292, 0.000000e+00
  %3294 = sext i1 %3293 to i32
  %3295 = bitcast i32 %5 to float
  %3296 = fcmp ogt float %3295, 0.000000e+00
  %3297 = zext i1 %3296 to i32
  %3298 = add nsw i32 %3294, %3297
  %3299 = sitofp i32 %3298 to float
  %3300 = fneg float %3299
  %3301 = fmul float %3291, %3300
  %3302 = bitcast i32 %5 to float
  %3303 = fadd float %3302, %3301
  %3304 = bitcast i32 %5 to float
  %3305 = bitcast i32 %5 to float
  %3306 = fmul float %3304, %3305
  %3307 = fadd float %3306, 0.000000e+00
  %3308 = bitcast i32 %32 to float
  %3309 = bitcast i32 %32 to float
  %3310 = fmul float %3308, %3309
  %3311 = fadd float %3307, %3310
  %3312 = call float @llvm.sqrt.f32(float %3311)
  %3313 = bitcast i32 %5 to float
  %3314 = fcmp olt float %3313, 0.000000e+00
  %3315 = sext i1 %3314 to i32
  %3316 = bitcast i32 %5 to float
  %3317 = fcmp ogt float %3316, 0.000000e+00
  %3318 = zext i1 %3317 to i32
  %3319 = add nsw i32 %3315, %3318
  %3320 = sitofp i32 %3319 to float
  %3321 = fneg float %3320
  %3322 = fmul float %3312, %3321
  %3323 = bitcast i32 %5 to float
  %3324 = fadd float %3323, %3322
  %3325 = bitcast i32 %5 to float
  %3326 = bitcast i32 %5 to float
  %3327 = fmul float %3325, %3326
  %3328 = fadd float %3327, 0.000000e+00
  %3329 = bitcast i32 %32 to float
  %3330 = bitcast i32 %32 to float
  %3331 = fmul float %3329, %3330
  %3332 = fadd float %3328, %3331
  %3333 = call float @llvm.sqrt.f32(float %3332)
  %3334 = bitcast i32 %5 to float
  %3335 = fcmp olt float %3334, 0.000000e+00
  %3336 = sext i1 %3335 to i32
  %3337 = bitcast i32 %5 to float
  %3338 = fcmp ogt float %3337, 0.000000e+00
  %3339 = zext i1 %3338 to i32
  %3340 = add nsw i32 %3336, %3339
  %3341 = sitofp i32 %3340 to float
  %3342 = fneg float %3341
  %3343 = fmul float %3333, %3342
  %3344 = bitcast i32 %5 to float
  %3345 = fadd float %3344, %3343
  %3346 = fmul float %3324, %3345
  %3347 = fadd float %3346, 0.000000e+00
  %3348 = bitcast i32 %5 to float
  %3349 = bitcast i32 %5 to float
  %3350 = fmul float %3348, %3349
  %3351 = fadd float %3350, 0.000000e+00
  %3352 = bitcast i32 %32 to float
  %3353 = bitcast i32 %32 to float
  %3354 = fmul float %3352, %3353
  %3355 = fadd float %3351, %3354
  %3356 = call float @llvm.sqrt.f32(float %3355)
  %3357 = bitcast i32 %5 to float
  %3358 = fcmp olt float %3357, 0.000000e+00
  %3359 = sext i1 %3358 to i32
  %3360 = bitcast i32 %5 to float
  %3361 = fcmp ogt float %3360, 0.000000e+00
  %3362 = zext i1 %3361 to i32
  %3363 = add nsw i32 %3359, %3362
  %3364 = sitofp i32 %3363 to float
  %3365 = fneg float %3364
  %3366 = fmul float %3356, %3365
  %3367 = fmul float %3366, 0.000000e+00
  %3368 = bitcast i32 %32 to float
  %3369 = fadd float %3368, %3367
  %3370 = bitcast i32 %5 to float
  %3371 = bitcast i32 %5 to float
  %3372 = fmul float %3370, %3371
  %3373 = fadd float %3372, 0.000000e+00
  %3374 = bitcast i32 %32 to float
  %3375 = bitcast i32 %32 to float
  %3376 = fmul float %3374, %3375
  %3377 = fadd float %3373, %3376
  %3378 = call float @llvm.sqrt.f32(float %3377)
  %3379 = bitcast i32 %5 to float
  %3380 = fcmp olt float %3379, 0.000000e+00
  %3381 = sext i1 %3380 to i32
  %3382 = bitcast i32 %5 to float
  %3383 = fcmp ogt float %3382, 0.000000e+00
  %3384 = zext i1 %3383 to i32
  %3385 = add nsw i32 %3381, %3384
  %3386 = sitofp i32 %3385 to float
  %3387 = fneg float %3386
  %3388 = fmul float %3378, %3387
  %3389 = fmul float %3388, 0.000000e+00
  %3390 = bitcast i32 %32 to float
  %3391 = fadd float %3390, %3389
  %3392 = fmul float %3369, %3391
  %3393 = fadd float %3347, %3392
  %3394 = call float @llvm.sqrt.f32(float %3393)
  %3395 = fadd float %3394, 0.000000e+00
  %3396 = fdiv float %3303, %3395
  %3397 = fmul float %3282, %3396
  %3398 = fneg float %3397
  %3399 = insertelement <4 x float> zeroinitializer, float %3398, i32 0
  %3400 = insertelement <4 x float> %3399, float 0.000000e+00, i32 1
  %3401 = insertelement <4 x float> %3400, float 0.000000e+00, i32 2
  %3402 = insertelement <4 x float> %3401, float 0.000000e+00, i32 3
  %3403 = getelementptr float, float* %0, i32 0
  %3404 = getelementptr inbounds float, float* %3403, i64 1
  %3405 = load float, float* %3404, align 4
  %3406 = insertelement <4 x float> zeroinitializer, float %3405, i32 0
  %3407 = insertelement <4 x float> %3406, float 0.000000e+00, i32 1
  %3408 = insertelement <4 x float> %3407, float 0.000000e+00, i32 2
  %3409 = insertelement <4 x float> %3408, float 0.000000e+00, i32 3
  %3410 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3402, <4 x float> %3409, <4 x float> zeroinitializer)
  %3411 = extractelement <4 x float> %3410, i32 0
  %3412 = getelementptr float, float* %2, i32 0
  %3413 = getelementptr inbounds float, float* %3412, i64 3
  store float %3411, float* %3413, align 4
  %3414 = bitcast i32 %5 to float
  %3415 = bitcast i32 %5 to float
  %3416 = fmul float %3414, %3415
  %3417 = fadd float %3416, 0.000000e+00
  %3418 = bitcast i32 %32 to float
  %3419 = bitcast i32 %32 to float
  %3420 = fmul float %3418, %3419
  %3421 = fadd float %3417, %3420
  %3422 = call float @llvm.sqrt.f32(float %3421)
  %3423 = bitcast i32 %5 to float
  %3424 = fcmp olt float %3423, 0.000000e+00
  %3425 = sext i1 %3424 to i32
  %3426 = bitcast i32 %5 to float
  %3427 = fcmp ogt float %3426, 0.000000e+00
  %3428 = zext i1 %3427 to i32
  %3429 = add nsw i32 %3425, %3428
  %3430 = sitofp i32 %3429 to float
  %3431 = fneg float %3430
  %3432 = fmul float %3422, %3431
  %3433 = fmul float %3432, 0.000000e+00
  %3434 = bitcast i32 %32 to float
  %3435 = fadd float %3434, %3433
  %3436 = bitcast i32 %5 to float
  %3437 = bitcast i32 %5 to float
  %3438 = fmul float %3436, %3437
  %3439 = fadd float %3438, 0.000000e+00
  %3440 = bitcast i32 %32 to float
  %3441 = bitcast i32 %32 to float
  %3442 = fmul float %3440, %3441
  %3443 = fadd float %3439, %3442
  %3444 = call float @llvm.sqrt.f32(float %3443)
  %3445 = bitcast i32 %5 to float
  %3446 = fcmp olt float %3445, 0.000000e+00
  %3447 = sext i1 %3446 to i32
  %3448 = bitcast i32 %5 to float
  %3449 = fcmp ogt float %3448, 0.000000e+00
  %3450 = zext i1 %3449 to i32
  %3451 = add nsw i32 %3447, %3450
  %3452 = sitofp i32 %3451 to float
  %3453 = fneg float %3452
  %3454 = fmul float %3444, %3453
  %3455 = bitcast i32 %5 to float
  %3456 = fadd float %3455, %3454
  %3457 = bitcast i32 %5 to float
  %3458 = bitcast i32 %5 to float
  %3459 = fmul float %3457, %3458
  %3460 = fadd float %3459, 0.000000e+00
  %3461 = bitcast i32 %32 to float
  %3462 = bitcast i32 %32 to float
  %3463 = fmul float %3461, %3462
  %3464 = fadd float %3460, %3463
  %3465 = call float @llvm.sqrt.f32(float %3464)
  %3466 = bitcast i32 %5 to float
  %3467 = fcmp olt float %3466, 0.000000e+00
  %3468 = sext i1 %3467 to i32
  %3469 = bitcast i32 %5 to float
  %3470 = fcmp ogt float %3469, 0.000000e+00
  %3471 = zext i1 %3470 to i32
  %3472 = add nsw i32 %3468, %3471
  %3473 = sitofp i32 %3472 to float
  %3474 = fneg float %3473
  %3475 = fmul float %3465, %3474
  %3476 = bitcast i32 %5 to float
  %3477 = fadd float %3476, %3475
  %3478 = fmul float %3456, %3477
  %3479 = fadd float %3478, 0.000000e+00
  %3480 = bitcast i32 %5 to float
  %3481 = bitcast i32 %5 to float
  %3482 = fmul float %3480, %3481
  %3483 = fadd float %3482, 0.000000e+00
  %3484 = bitcast i32 %32 to float
  %3485 = bitcast i32 %32 to float
  %3486 = fmul float %3484, %3485
  %3487 = fadd float %3483, %3486
  %3488 = call float @llvm.sqrt.f32(float %3487)
  %3489 = bitcast i32 %5 to float
  %3490 = fcmp olt float %3489, 0.000000e+00
  %3491 = sext i1 %3490 to i32
  %3492 = bitcast i32 %5 to float
  %3493 = fcmp ogt float %3492, 0.000000e+00
  %3494 = zext i1 %3493 to i32
  %3495 = add nsw i32 %3491, %3494
  %3496 = sitofp i32 %3495 to float
  %3497 = fneg float %3496
  %3498 = fmul float %3488, %3497
  %3499 = fmul float %3498, 0.000000e+00
  %3500 = bitcast i32 %32 to float
  %3501 = fadd float %3500, %3499
  %3502 = bitcast i32 %5 to float
  %3503 = bitcast i32 %5 to float
  %3504 = fmul float %3502, %3503
  %3505 = fadd float %3504, 0.000000e+00
  %3506 = bitcast i32 %32 to float
  %3507 = bitcast i32 %32 to float
  %3508 = fmul float %3506, %3507
  %3509 = fadd float %3505, %3508
  %3510 = call float @llvm.sqrt.f32(float %3509)
  %3511 = bitcast i32 %5 to float
  %3512 = fcmp olt float %3511, 0.000000e+00
  %3513 = sext i1 %3512 to i32
  %3514 = bitcast i32 %5 to float
  %3515 = fcmp ogt float %3514, 0.000000e+00
  %3516 = zext i1 %3515 to i32
  %3517 = add nsw i32 %3513, %3516
  %3518 = sitofp i32 %3517 to float
  %3519 = fneg float %3518
  %3520 = fmul float %3510, %3519
  %3521 = fmul float %3520, 0.000000e+00
  %3522 = bitcast i32 %32 to float
  %3523 = fadd float %3522, %3521
  %3524 = fmul float %3501, %3523
  %3525 = fadd float %3479, %3524
  %3526 = call float @llvm.sqrt.f32(float %3525)
  %3527 = fadd float %3526, 0.000000e+00
  %3528 = fdiv float %3435, %3527
  %3529 = fmul float %3528, 2.000000e+00
  %3530 = bitcast i32 %5 to float
  %3531 = bitcast i32 %5 to float
  %3532 = fmul float %3530, %3531
  %3533 = fadd float %3532, 0.000000e+00
  %3534 = bitcast i32 %32 to float
  %3535 = bitcast i32 %32 to float
  %3536 = fmul float %3534, %3535
  %3537 = fadd float %3533, %3536
  %3538 = call float @llvm.sqrt.f32(float %3537)
  %3539 = bitcast i32 %5 to float
  %3540 = fcmp olt float %3539, 0.000000e+00
  %3541 = sext i1 %3540 to i32
  %3542 = bitcast i32 %5 to float
  %3543 = fcmp ogt float %3542, 0.000000e+00
  %3544 = zext i1 %3543 to i32
  %3545 = add nsw i32 %3541, %3544
  %3546 = sitofp i32 %3545 to float
  %3547 = fneg float %3546
  %3548 = fmul float %3538, %3547
  %3549 = bitcast i32 %5 to float
  %3550 = fadd float %3549, %3548
  %3551 = bitcast i32 %5 to float
  %3552 = bitcast i32 %5 to float
  %3553 = fmul float %3551, %3552
  %3554 = fadd float %3553, 0.000000e+00
  %3555 = bitcast i32 %32 to float
  %3556 = bitcast i32 %32 to float
  %3557 = fmul float %3555, %3556
  %3558 = fadd float %3554, %3557
  %3559 = call float @llvm.sqrt.f32(float %3558)
  %3560 = bitcast i32 %5 to float
  %3561 = fcmp olt float %3560, 0.000000e+00
  %3562 = sext i1 %3561 to i32
  %3563 = bitcast i32 %5 to float
  %3564 = fcmp ogt float %3563, 0.000000e+00
  %3565 = zext i1 %3564 to i32
  %3566 = add nsw i32 %3562, %3565
  %3567 = sitofp i32 %3566 to float
  %3568 = fneg float %3567
  %3569 = fmul float %3559, %3568
  %3570 = bitcast i32 %5 to float
  %3571 = fadd float %3570, %3569
  %3572 = bitcast i32 %5 to float
  %3573 = bitcast i32 %5 to float
  %3574 = fmul float %3572, %3573
  %3575 = fadd float %3574, 0.000000e+00
  %3576 = bitcast i32 %32 to float
  %3577 = bitcast i32 %32 to float
  %3578 = fmul float %3576, %3577
  %3579 = fadd float %3575, %3578
  %3580 = call float @llvm.sqrt.f32(float %3579)
  %3581 = bitcast i32 %5 to float
  %3582 = fcmp olt float %3581, 0.000000e+00
  %3583 = sext i1 %3582 to i32
  %3584 = bitcast i32 %5 to float
  %3585 = fcmp ogt float %3584, 0.000000e+00
  %3586 = zext i1 %3585 to i32
  %3587 = add nsw i32 %3583, %3586
  %3588 = sitofp i32 %3587 to float
  %3589 = fneg float %3588
  %3590 = fmul float %3580, %3589
  %3591 = bitcast i32 %5 to float
  %3592 = fadd float %3591, %3590
  %3593 = fmul float %3571, %3592
  %3594 = fadd float %3593, 0.000000e+00
  %3595 = bitcast i32 %5 to float
  %3596 = bitcast i32 %5 to float
  %3597 = fmul float %3595, %3596
  %3598 = fadd float %3597, 0.000000e+00
  %3599 = bitcast i32 %32 to float
  %3600 = bitcast i32 %32 to float
  %3601 = fmul float %3599, %3600
  %3602 = fadd float %3598, %3601
  %3603 = call float @llvm.sqrt.f32(float %3602)
  %3604 = bitcast i32 %5 to float
  %3605 = fcmp olt float %3604, 0.000000e+00
  %3606 = sext i1 %3605 to i32
  %3607 = bitcast i32 %5 to float
  %3608 = fcmp ogt float %3607, 0.000000e+00
  %3609 = zext i1 %3608 to i32
  %3610 = add nsw i32 %3606, %3609
  %3611 = sitofp i32 %3610 to float
  %3612 = fneg float %3611
  %3613 = fmul float %3603, %3612
  %3614 = fmul float %3613, 0.000000e+00
  %3615 = bitcast i32 %32 to float
  %3616 = fadd float %3615, %3614
  %3617 = bitcast i32 %5 to float
  %3618 = bitcast i32 %5 to float
  %3619 = fmul float %3617, %3618
  %3620 = fadd float %3619, 0.000000e+00
  %3621 = bitcast i32 %32 to float
  %3622 = bitcast i32 %32 to float
  %3623 = fmul float %3621, %3622
  %3624 = fadd float %3620, %3623
  %3625 = call float @llvm.sqrt.f32(float %3624)
  %3626 = bitcast i32 %5 to float
  %3627 = fcmp olt float %3626, 0.000000e+00
  %3628 = sext i1 %3627 to i32
  %3629 = bitcast i32 %5 to float
  %3630 = fcmp ogt float %3629, 0.000000e+00
  %3631 = zext i1 %3630 to i32
  %3632 = add nsw i32 %3628, %3631
  %3633 = sitofp i32 %3632 to float
  %3634 = fneg float %3633
  %3635 = fmul float %3625, %3634
  %3636 = fmul float %3635, 0.000000e+00
  %3637 = bitcast i32 %32 to float
  %3638 = fadd float %3637, %3636
  %3639 = fmul float %3616, %3638
  %3640 = fadd float %3594, %3639
  %3641 = call float @llvm.sqrt.f32(float %3640)
  %3642 = fadd float %3641, 0.000000e+00
  %3643 = fdiv float %3550, %3642
  %3644 = fmul float %3529, %3643
  %3645 = fneg float %3644
  %3646 = fmul float %3645, %3405
  %3647 = fadd float %3646, 0.000000e+00
  %3648 = bitcast i32 %5 to float
  %3649 = bitcast i32 %5 to float
  %3650 = fmul float %3648, %3649
  %3651 = fadd float %3650, 0.000000e+00
  %3652 = bitcast i32 %32 to float
  %3653 = bitcast i32 %32 to float
  %3654 = fmul float %3652, %3653
  %3655 = fadd float %3651, %3654
  %3656 = call float @llvm.sqrt.f32(float %3655)
  %3657 = bitcast i32 %5 to float
  %3658 = fcmp olt float %3657, 0.000000e+00
  %3659 = sext i1 %3658 to i32
  %3660 = bitcast i32 %5 to float
  %3661 = fcmp ogt float %3660, 0.000000e+00
  %3662 = zext i1 %3661 to i32
  %3663 = add nsw i32 %3659, %3662
  %3664 = sitofp i32 %3663 to float
  %3665 = fneg float %3664
  %3666 = fmul float %3656, %3665
  %3667 = fmul float %3666, 0.000000e+00
  %3668 = bitcast i32 %32 to float
  %3669 = fadd float %3668, %3667
  %3670 = bitcast i32 %5 to float
  %3671 = bitcast i32 %5 to float
  %3672 = fmul float %3670, %3671
  %3673 = fadd float %3672, 0.000000e+00
  %3674 = bitcast i32 %32 to float
  %3675 = bitcast i32 %32 to float
  %3676 = fmul float %3674, %3675
  %3677 = fadd float %3673, %3676
  %3678 = call float @llvm.sqrt.f32(float %3677)
  %3679 = bitcast i32 %5 to float
  %3680 = fcmp olt float %3679, 0.000000e+00
  %3681 = sext i1 %3680 to i32
  %3682 = bitcast i32 %5 to float
  %3683 = fcmp ogt float %3682, 0.000000e+00
  %3684 = zext i1 %3683 to i32
  %3685 = add nsw i32 %3681, %3684
  %3686 = sitofp i32 %3685 to float
  %3687 = fneg float %3686
  %3688 = fmul float %3678, %3687
  %3689 = bitcast i32 %5 to float
  %3690 = fadd float %3689, %3688
  %3691 = bitcast i32 %5 to float
  %3692 = bitcast i32 %5 to float
  %3693 = fmul float %3691, %3692
  %3694 = fadd float %3693, 0.000000e+00
  %3695 = bitcast i32 %32 to float
  %3696 = bitcast i32 %32 to float
  %3697 = fmul float %3695, %3696
  %3698 = fadd float %3694, %3697
  %3699 = call float @llvm.sqrt.f32(float %3698)
  %3700 = bitcast i32 %5 to float
  %3701 = fcmp olt float %3700, 0.000000e+00
  %3702 = sext i1 %3701 to i32
  %3703 = bitcast i32 %5 to float
  %3704 = fcmp ogt float %3703, 0.000000e+00
  %3705 = zext i1 %3704 to i32
  %3706 = add nsw i32 %3702, %3705
  %3707 = sitofp i32 %3706 to float
  %3708 = fneg float %3707
  %3709 = fmul float %3699, %3708
  %3710 = bitcast i32 %5 to float
  %3711 = fadd float %3710, %3709
  %3712 = fmul float %3690, %3711
  %3713 = fadd float %3712, 0.000000e+00
  %3714 = bitcast i32 %5 to float
  %3715 = bitcast i32 %5 to float
  %3716 = fmul float %3714, %3715
  %3717 = fadd float %3716, 0.000000e+00
  %3718 = bitcast i32 %32 to float
  %3719 = bitcast i32 %32 to float
  %3720 = fmul float %3718, %3719
  %3721 = fadd float %3717, %3720
  %3722 = call float @llvm.sqrt.f32(float %3721)
  %3723 = bitcast i32 %5 to float
  %3724 = fcmp olt float %3723, 0.000000e+00
  %3725 = sext i1 %3724 to i32
  %3726 = bitcast i32 %5 to float
  %3727 = fcmp ogt float %3726, 0.000000e+00
  %3728 = zext i1 %3727 to i32
  %3729 = add nsw i32 %3725, %3728
  %3730 = sitofp i32 %3729 to float
  %3731 = fneg float %3730
  %3732 = fmul float %3722, %3731
  %3733 = fmul float %3732, 0.000000e+00
  %3734 = bitcast i32 %32 to float
  %3735 = fadd float %3734, %3733
  %3736 = bitcast i32 %5 to float
  %3737 = bitcast i32 %5 to float
  %3738 = fmul float %3736, %3737
  %3739 = fadd float %3738, 0.000000e+00
  %3740 = bitcast i32 %32 to float
  %3741 = bitcast i32 %32 to float
  %3742 = fmul float %3740, %3741
  %3743 = fadd float %3739, %3742
  %3744 = call float @llvm.sqrt.f32(float %3743)
  %3745 = bitcast i32 %5 to float
  %3746 = fcmp olt float %3745, 0.000000e+00
  %3747 = sext i1 %3746 to i32
  %3748 = bitcast i32 %5 to float
  %3749 = fcmp ogt float %3748, 0.000000e+00
  %3750 = zext i1 %3749 to i32
  %3751 = add nsw i32 %3747, %3750
  %3752 = sitofp i32 %3751 to float
  %3753 = fneg float %3752
  %3754 = fmul float %3744, %3753
  %3755 = fmul float %3754, 0.000000e+00
  %3756 = bitcast i32 %32 to float
  %3757 = fadd float %3756, %3755
  %3758 = fmul float %3735, %3757
  %3759 = fadd float %3713, %3758
  %3760 = call float @llvm.sqrt.f32(float %3759)
  %3761 = fadd float %3760, 0.000000e+00
  %3762 = fdiv float %3669, %3761
  %3763 = fmul float %3762, 2.000000e+00
  %3764 = bitcast i32 %5 to float
  %3765 = bitcast i32 %5 to float
  %3766 = fmul float %3764, %3765
  %3767 = fadd float %3766, 0.000000e+00
  %3768 = bitcast i32 %32 to float
  %3769 = bitcast i32 %32 to float
  %3770 = fmul float %3768, %3769
  %3771 = fadd float %3767, %3770
  %3772 = call float @llvm.sqrt.f32(float %3771)
  %3773 = bitcast i32 %5 to float
  %3774 = fcmp olt float %3773, 0.000000e+00
  %3775 = sext i1 %3774 to i32
  %3776 = bitcast i32 %5 to float
  %3777 = fcmp ogt float %3776, 0.000000e+00
  %3778 = zext i1 %3777 to i32
  %3779 = add nsw i32 %3775, %3778
  %3780 = sitofp i32 %3779 to float
  %3781 = fneg float %3780
  %3782 = fmul float %3772, %3781
  %3783 = fmul float %3782, 0.000000e+00
  %3784 = bitcast i32 %32 to float
  %3785 = fadd float %3784, %3783
  %3786 = bitcast i32 %5 to float
  %3787 = bitcast i32 %5 to float
  %3788 = fmul float %3786, %3787
  %3789 = fadd float %3788, 0.000000e+00
  %3790 = bitcast i32 %32 to float
  %3791 = bitcast i32 %32 to float
  %3792 = fmul float %3790, %3791
  %3793 = fadd float %3789, %3792
  %3794 = call float @llvm.sqrt.f32(float %3793)
  %3795 = bitcast i32 %5 to float
  %3796 = fcmp olt float %3795, 0.000000e+00
  %3797 = sext i1 %3796 to i32
  %3798 = bitcast i32 %5 to float
  %3799 = fcmp ogt float %3798, 0.000000e+00
  %3800 = zext i1 %3799 to i32
  %3801 = add nsw i32 %3797, %3800
  %3802 = sitofp i32 %3801 to float
  %3803 = fneg float %3802
  %3804 = fmul float %3794, %3803
  %3805 = bitcast i32 %5 to float
  %3806 = fadd float %3805, %3804
  %3807 = bitcast i32 %5 to float
  %3808 = bitcast i32 %5 to float
  %3809 = fmul float %3807, %3808
  %3810 = fadd float %3809, 0.000000e+00
  %3811 = bitcast i32 %32 to float
  %3812 = bitcast i32 %32 to float
  %3813 = fmul float %3811, %3812
  %3814 = fadd float %3810, %3813
  %3815 = call float @llvm.sqrt.f32(float %3814)
  %3816 = bitcast i32 %5 to float
  %3817 = fcmp olt float %3816, 0.000000e+00
  %3818 = sext i1 %3817 to i32
  %3819 = bitcast i32 %5 to float
  %3820 = fcmp ogt float %3819, 0.000000e+00
  %3821 = zext i1 %3820 to i32
  %3822 = add nsw i32 %3818, %3821
  %3823 = sitofp i32 %3822 to float
  %3824 = fneg float %3823
  %3825 = fmul float %3815, %3824
  %3826 = bitcast i32 %5 to float
  %3827 = fadd float %3826, %3825
  %3828 = fmul float %3806, %3827
  %3829 = fadd float %3828, 0.000000e+00
  %3830 = bitcast i32 %5 to float
  %3831 = bitcast i32 %5 to float
  %3832 = fmul float %3830, %3831
  %3833 = fadd float %3832, 0.000000e+00
  %3834 = bitcast i32 %32 to float
  %3835 = bitcast i32 %32 to float
  %3836 = fmul float %3834, %3835
  %3837 = fadd float %3833, %3836
  %3838 = call float @llvm.sqrt.f32(float %3837)
  %3839 = bitcast i32 %5 to float
  %3840 = fcmp olt float %3839, 0.000000e+00
  %3841 = sext i1 %3840 to i32
  %3842 = bitcast i32 %5 to float
  %3843 = fcmp ogt float %3842, 0.000000e+00
  %3844 = zext i1 %3843 to i32
  %3845 = add nsw i32 %3841, %3844
  %3846 = sitofp i32 %3845 to float
  %3847 = fneg float %3846
  %3848 = fmul float %3838, %3847
  %3849 = fmul float %3848, 0.000000e+00
  %3850 = bitcast i32 %32 to float
  %3851 = fadd float %3850, %3849
  %3852 = bitcast i32 %5 to float
  %3853 = bitcast i32 %5 to float
  %3854 = fmul float %3852, %3853
  %3855 = fadd float %3854, 0.000000e+00
  %3856 = bitcast i32 %32 to float
  %3857 = bitcast i32 %32 to float
  %3858 = fmul float %3856, %3857
  %3859 = fadd float %3855, %3858
  %3860 = call float @llvm.sqrt.f32(float %3859)
  %3861 = bitcast i32 %5 to float
  %3862 = fcmp olt float %3861, 0.000000e+00
  %3863 = sext i1 %3862 to i32
  %3864 = bitcast i32 %5 to float
  %3865 = fcmp ogt float %3864, 0.000000e+00
  %3866 = zext i1 %3865 to i32
  %3867 = add nsw i32 %3863, %3866
  %3868 = sitofp i32 %3867 to float
  %3869 = fneg float %3868
  %3870 = fmul float %3860, %3869
  %3871 = fmul float %3870, 0.000000e+00
  %3872 = bitcast i32 %32 to float
  %3873 = fadd float %3872, %3871
  %3874 = fmul float %3851, %3873
  %3875 = fadd float %3829, %3874
  %3876 = call float @llvm.sqrt.f32(float %3875)
  %3877 = fadd float %3876, 0.000000e+00
  %3878 = fdiv float %3785, %3877
  %3879 = fmul float %3763, %3878
  %3880 = fsub float 1.000000e+00, %3879
  %3881 = getelementptr float, float* %0, i32 0
  %3882 = getelementptr inbounds float, float* %3881, i64 3
  %3883 = load float, float* %3882, align 4
  %3884 = fmul float %3880, %3883
  %3885 = fadd float %3647, %3884
  %3886 = insertelement <4 x float> zeroinitializer, float %3885, i32 0
  %3887 = insertelement <4 x float> %3886, float 0.000000e+00, i32 1
  %3888 = insertelement <4 x float> %3887, float 0.000000e+00, i32 2
  %3889 = insertelement <4 x float> %3888, float 0.000000e+00, i32 3
  %3890 = extractelement <4 x float> %3889, i32 0
  %3891 = getelementptr float, float* %2, i32 0
  %3892 = getelementptr inbounds float, float* %3891, i64 3
  store float %3890, float* %3892, align 4
  %3893 = getelementptr float, float* %1, i32 0
  %3894 = getelementptr inbounds float, float* %3893, i64 2
  %3895 = bitcast float* %3894 to i32*
  %3896 = load i32, i32* %3895, align 4
  %3897 = bitcast i32 %3896 to float
  %3898 = insertelement <4 x float> zeroinitializer, float %3897, i32 0
  %3899 = getelementptr float, float* %1, i32 0
  %3900 = getelementptr inbounds float, float* %3899, i64 1
  %3901 = bitcast float* %3900 to i32*
  %3902 = load i32, i32* %3901, align 4
  %3903 = bitcast i32 %3902 to float
  %3904 = insertelement <4 x float> %3898, float %3903, i32 1
  %3905 = insertelement <4 x float> %3904, float 0.000000e+00, i32 2
  %3906 = insertelement <4 x float> %3905, float 0.000000e+00, i32 3
  %3907 = extractelement <4 x float> %3906, i32 0
  %3908 = getelementptr float, float* %1, i32 0
  %3909 = getelementptr inbounds float, float* %3908, i64 1
  %3910 = bitcast float* %3909 to i32*
  %3911 = bitcast i32* %3910 to float*
  store float %3907, float* %3911, align 4
  %3912 = extractelement <4 x float> %3906, i32 1
  %3913 = getelementptr float, float* %1, i32 0
  %3914 = getelementptr inbounds float, float* %3913, i64 2
  %3915 = bitcast float* %3914 to i32*
  %3916 = bitcast i32* %3915 to float*
  store float %3912, float* %3916, align 4
  ret void
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind ssp uwtable
define void @no_opt_naive_fixed_qr_decomp(float* %0, float* %1, float* %2) #1 {
.preheader13:
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %0 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %3, i1 false, i1 true, i1 false)
  %6 = call i8* @__memcpy_chk(i8* %3, i8* %4, i64 16, i64 %5) #8
  %7 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %8 = bitcast i8* %7 to float*
  store float 1.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = getelementptr inbounds i8, i8* %7, i64 12
  %11 = bitcast i8* %10 to float*
  store float 1.000000e+00, float* %11, align 4
  %12 = bitcast float* %1 to i8*
  %13 = call i64 @llvm.objectsize.i64.p0i8(i8* %12, i1 false, i1 true, i1 false)
  %14 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15 = bitcast i8* %14 to float*
  %16 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %17 = bitcast i8* %16 to float*
  %18 = bitcast float* %2 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast i8* %14 to i32*
  store i32 %19, i32* %20, align 4
  %21 = bitcast i8* %7 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast i8* %16 to i32*
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds float, float* %2, i64 2
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds i8, i8* %14, i64 4
  %28 = bitcast i8* %27 to i32*
  store i32 %26, i32* %28, align 4
  %29 = bitcast i8* %9 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds i8, i8* %16, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 4
  %33 = load float, float* %15, align 4
  %34 = call float @no_opt_sgn(float %33)
  %35 = fneg float %34
  %36 = call float @no_opt_naive_norm(float* nonnull %15, i32 2)
  %37 = fmul float %36, %35
  %38 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %39 = bitcast i8* %38 to float*
  %40 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %41 = load float, float* %15, align 4
  %42 = load float, float* %17, align 4
  %43 = fmul float %37, %42
  %44 = fadd float %41, %43
  store float %44, float* %39, align 4
  %45 = bitcast i8* %27 to float*
  %46 = load float, float* %45, align 4
  %47 = bitcast i8* %31 to float*
  %48 = load float, float* %47, align 4
  %49 = fmul float %37, %48
  %50 = fadd float %46, %49
  %51 = getelementptr inbounds i8, i8* %38, i64 4
  %52 = bitcast i8* %51 to float*
  store float %50, float* %52, align 4
  %53 = bitcast i8* %40 to float*
  %54 = call float @no_opt_naive_norm(float* nonnull %39, i32 2)
  %55 = fadd float %54, 0x3EE4F8B580000000
  %56 = load float, float* %39, align 4
  %57 = fdiv float %56, %55
  store float %57, float* %53, align 4
  %58 = load float, float* %52, align 4
  %59 = fdiv float %58, %55
  %60 = getelementptr inbounds i8, i8* %40, i64 4
  %61 = bitcast i8* %60 to float*
  store float %59, float* %61, align 4
  %62 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %63 = bitcast i8* %62 to float*
  %64 = load float, float* %53, align 4
  %65 = fmul float %64, 2.000000e+00
  %66 = fmul float %65, %64
  %67 = fsub float 1.000000e+00, %66
  store float %67, float* %63, align 4
  %68 = load float, float* %53, align 4
  %69 = fmul float %68, 2.000000e+00
  %70 = load float, float* %61, align 4
  %71 = fmul float %69, %70
  %72 = fsub float 0.000000e+00, %71
  %73 = getelementptr inbounds i8, i8* %62, i64 4
  %74 = bitcast i8* %73 to float*
  store float %72, float* %74, align 4
  %75 = load float, float* %61, align 4
  %76 = fmul float %75, 2.000000e+00
  %77 = load float, float* %53, align 4
  %78 = fmul float %76, %77
  %79 = fsub float 0.000000e+00, %78
  %80 = getelementptr inbounds i8, i8* %62, i64 8
  %81 = bitcast i8* %80 to float*
  store float %79, float* %81, align 4
  %82 = load float, float* %61, align 4
  %83 = fmul float %82, 2.000000e+00
  %84 = fmul float %83, %82
  %85 = fsub float 1.000000e+00, %84
  %86 = getelementptr inbounds i8, i8* %62, i64 12
  %87 = bitcast i8* %86 to float*
  store float %85, float* %87, align 4
  %88 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %89 = bitcast i8* %88 to float*
  %90 = bitcast i8* %62 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = bitcast i8* %88 to i32*
  store i32 %91, i32* %92, align 4
  %93 = bitcast i8* %73 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds i8, i8* %88, i64 4
  %96 = bitcast i8* %95 to i32*
  store i32 %94, i32* %96, align 4
  %97 = bitcast i8* %80 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds i8, i8* %88, i64 8
  %100 = bitcast i8* %99 to i32*
  store i32 %98, i32* %100, align 4
  %101 = bitcast i8* %86 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds i8, i8* %88, i64 12
  %104 = bitcast i8* %103 to i32*
  store i32 %102, i32* %104, align 4
  %105 = call i8* @__memcpy_chk(i8* %12, i8* %88, i64 16, i64 %13) #8
  call void @no_opt_naive_fixed_matrix_multiply(float* %89, float* %0, float* %2)
  call void @free(i8* %14)
  call void @free(i8* %16)
  call void @free(i8* %38)
  call void @free(i8* %40)
  call void @free(i8* %62)
  call void @free(i8* %88)
  call void @no_opt_naive_fixed_transpose(float* %1)
  ret void
}

; Function Attrs: nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #2

; Function Attrs: allocsize(0,1)
declare i8* @calloc(i64, i64) #5

declare void @free(i8*) #6

; Function Attrs: noinline nounwind ssp uwtable
define i32 @main() #1 {
.preheader6:
  %0 = alloca i64, align 8
  %1 = alloca [4 x float], align 16
  %2 = alloca [4 x float], align 16
  %3 = alloca [4 x float], align 16
  %4 = alloca [4 x float], align 16
  %5 = alloca [4 x float], align 16
  %6 = call i64 @time(i64* null) #8
  store i64 %6, i64* %0, align 8
  %7 = call i64 @time(i64* nonnull %0) #8
  %8 = trunc i64 %7 to i32
  call void @srand(i32 %8) #8
  %9 = call i32 @rand() #8
  %10 = sitofp i32 %9 to float
  %11 = fdiv float %10, 0x41747AE140000000
  %12 = getelementptr inbounds [4 x float], [4 x float]* %1, i64 0, i64 0
  store float %11, float* %12, align 16
  %13 = fpext float %11 to double
  %14 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %13) #8
  %15 = call i32 @rand() #8
  %16 = sitofp i32 %15 to float
  %17 = fdiv float %16, 0x41747AE140000000
  %18 = getelementptr inbounds [4 x float], [4 x float]* %1, i64 0, i64 1
  store float %17, float* %18, align 4
  %19 = fpext float %17 to double
  %20 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %19) #8
  %21 = call i32 @rand() #8
  %22 = sitofp i32 %21 to float
  %23 = fdiv float %22, 0x41747AE140000000
  %24 = getelementptr inbounds [4 x float], [4 x float]* %1, i64 0, i64 2
  store float %23, float* %24, align 8
  %25 = fpext float %23 to double
  %26 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %25) #8
  %27 = call i32 @rand() #8
  %28 = sitofp i32 %27 to float
  %29 = fdiv float %28, 0x41747AE140000000
  %30 = getelementptr inbounds [4 x float], [4 x float]* %1, i64 0, i64 3
  store float %29, float* %30, align 4
  %31 = fpext float %29 to double
  %32 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %31) #8
  %33 = bitcast [4 x float]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  %34 = bitcast [4 x float]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %34, i8 0, i64 16, i1 false)
  %35 = getelementptr inbounds [4 x float], [4 x float]* %2, i64 0, i64 0
  %36 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 0
  call void @naive_fixed_qr_decomp(float* nonnull %12, float* nonnull %35, float* nonnull %36)
  %37 = bitcast [4 x float]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %37, i8 0, i64 16, i1 false)
  %38 = bitcast [4 x float]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %38, i8 0, i64 16, i1 false)
  %39 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %40 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  call void @no_opt_naive_fixed_qr_decomp(float* nonnull %12, float* nonnull %39, float* nonnull %40)
  %41 = load float, float* %35, align 16
  %42 = fpext float %41 to double
  %43 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), double %42) #8
  %44 = load float, float* %39, align 16
  %45 = fpext float %44 to double
  %46 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), double %45) #8
  %47 = getelementptr inbounds [4 x float], [4 x float]* %2, i64 0, i64 1
  %48 = load float, float* %47, align 4
  %49 = fpext float %48 to double
  %50 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), double %49) #8
  %51 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %52 = load float, float* %51, align 4
  %53 = fpext float %52 to double
  %54 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), double %53) #8
  %55 = getelementptr inbounds [4 x float], [4 x float]* %2, i64 0, i64 2
  %56 = load float, float* %55, align 8
  %57 = fpext float %56 to double
  %58 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), double %57) #8
  %59 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %60 = load float, float* %59, align 8
  %61 = fpext float %60 to double
  %62 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), double %61) #8
  %63 = getelementptr inbounds [4 x float], [4 x float]* %2, i64 0, i64 3
  %64 = load float, float* %63, align 4
  %65 = fpext float %64 to double
  %66 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), double %65) #8
  %67 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %68 = load float, float* %67, align 4
  %69 = fpext float %68 to double
  %70 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), double %69) #8
  %71 = load float, float* %36, align 16
  %72 = fpext float %71 to double
  %73 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), double %72) #8
  %74 = load float, float* %40, align 16
  %75 = fpext float %74 to double
  %76 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), double %75) #8
  %77 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 1
  %78 = load float, float* %77, align 4
  %79 = fpext float %78 to double
  %80 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), double %79) #8
  %81 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 1
  %82 = load float, float* %81, align 4
  %83 = fpext float %82 to double
  %84 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), double %83) #8
  %85 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 2
  %86 = load float, float* %85, align 8
  %87 = fpext float %86 to double
  %88 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), double %87) #8
  %89 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 2
  %90 = load float, float* %89, align 8
  %91 = fpext float %90 to double
  %92 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), double %91) #8
  %93 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 3
  %94 = load float, float* %93, align 4
  %95 = fpext float %94 to double
  %96 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), double %95) #8
  %97 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 3
  %98 = load float, float* %97, align 4
  %99 = fpext float %98 to double
  %100 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), double %99) #8
  ret i32 0
}

declare i64 @time(i64*) #6

declare void @srand(i32) #6

declare i32 @rand() #6

declare i32 @printf(i8*, ...) #6

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.v4f32(<4 x float>, <4 x float>, <4 x float>) #2

attributes #0 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nounwind willreturn writeonly }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { nounwind }
attributes #9 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 11.0.1"}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
