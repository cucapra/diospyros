; ModuleID = 'diospyros.ll'
source_filename = "llvm-tests/qr-decomp-fixed-size.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.14.0"

@__const.main.A = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00], align 16
@.str = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1

; Function Attrs: alwaysinline nounwind ssp uwtable
define float @sgn(float %0) #0 {
  %2 = fcmp ogt float %0, 0.000000e+00
  %3 = zext i1 %2 to i32
  %4 = fcmp olt float %0, 0.000000e+00
  %5 = sext i1 %4 to i32
  %6 = add nsw i32 %5, %3
  %7 = sitofp i32 %6 to float
  ret float %7
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define float @naive_norm(float* %0, i32 %1) #0 {
  %3 = icmp sgt i32 %1, 0
  %4 = select i1 %3, i32 %1, i32 0
  %5 = zext i32 %4 to i64
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %2
  %6 = and i64 %5, 1
  %7 = icmp eq i32 %4, 1
  br i1 %7, label %._crit_edge.unr-lcssa, label %.lr.ph.new

.lr.ph.new:                                       ; preds = %.lr.ph
  %8 = and i64 %5, 2147483646
  br label %9

9:                                                ; preds = %9, %.lr.ph.new
  %10 = phi float [ 0.000000e+00, %.lr.ph.new ], [ %27, %9 ]
  %11 = phi i64 [ 0, %.lr.ph.new ], [ %28, %9 ]
  %12 = phi i64 [ %8, %.lr.ph.new ], [ %29, %9 ]
  %13 = getelementptr inbounds float, float* %0, i64 %11
  %14 = load float, float* %13, align 4
  %15 = fpext float %14 to double
  %16 = fmul double %15, %15
  %17 = fpext float %10 to double
  %18 = fadd double %16, %17
  %19 = fptrunc double %18 to float
  %20 = or i64 %11, 1
  %21 = getelementptr inbounds float, float* %0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  %24 = fmul double %23, %23
  %25 = fpext float %19 to double
  %26 = fadd double %24, %25
  %27 = fptrunc double %26 to float
  %28 = add nuw nsw i64 %11, 2
  %29 = add i64 %12, -2
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %._crit_edge.unr-lcssa, label %9

._crit_edge.unr-lcssa:                            ; preds = %9, %.lr.ph
  %31 = phi float [ undef, %.lr.ph ], [ %27, %9 ]
  %32 = phi float [ 0.000000e+00, %.lr.ph ], [ %27, %9 ]
  %33 = phi i64 [ 0, %.lr.ph ], [ %28, %9 ]
  %34 = icmp eq i64 %6, 0
  br i1 %34, label %._crit_edge, label %.epil.preheader

.epil.preheader:                                  ; preds = %._crit_edge.unr-lcssa
  %35 = getelementptr inbounds float, float* %0, i64 %33
  %36 = load float, float* %35, align 4
  %37 = fpext float %36 to double
  %38 = fmul double %37, %37
  %39 = fpext float %32 to double
  %40 = fadd double %38, %39
  %41 = fptrunc double %40 to float
  br label %._crit_edge

._crit_edge:                                      ; preds = %.epil.preheader, %._crit_edge.unr-lcssa, %2
  %42 = phi float [ 0.000000e+00, %2 ], [ %31, %._crit_edge.unr-lcssa ], [ %41, %.epil.preheader ]
  %43 = call float @llvm.sqrt.f32(float %42)
  ret float %43
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.pow.f64(double, double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32(float) #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @naive_fixed_transpose(float* %0) #0 {
.lr.ph:
  %1 = getelementptr inbounds float, float* %0, i64 1
  %2 = bitcast float* %1 to i32*
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds float, float* %0, i64 4
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %2, align 4
  store i32 %3, i32* %5, align 4
  br label %7

7:                                                ; preds = %7, %.lr.ph
  %8 = phi i64 [ 2, %.lr.ph ], [ %24, %7 ]
  %9 = getelementptr inbounds float, float* %0, i64 %8
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = shl nuw nsw i64 %8, 2
  %13 = getelementptr inbounds float, float* %0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %10, align 4
  store i32 %11, i32* %14, align 4
  %16 = or i64 %8, 1
  %17 = getelementptr inbounds float, float* %0, i64 %16
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = shl nuw nsw i64 %16, 2
  %21 = getelementptr inbounds float, float* %0, i64 %20
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %18, align 4
  store i32 %19, i32* %22, align 4
  %24 = add nuw nsw i64 %8, 2
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %.lr.ph.new.1, label %7

.lr.ph.new.1:                                     ; preds = %.lr.ph.new.1, %7
  %26 = phi i64 [ %46, %.lr.ph.new.1 ], [ 2, %7 ]
  %27 = add nuw nsw i64 %26, 4
  %28 = getelementptr inbounds float, float* %0, i64 %27
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = shl nuw nsw i64 %26, 2
  %32 = or i64 %31, 1
  %33 = getelementptr inbounds float, float* %0, i64 %32
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %29, align 4
  store i32 %30, i32* %34, align 4
  %36 = or i64 %26, 1
  %37 = add nuw nsw i64 %26, 5
  %38 = getelementptr inbounds float, float* %0, i64 %37
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = shl nuw nsw i64 %36, 2
  %42 = or i64 %41, 1
  %43 = getelementptr inbounds float, float* %0, i64 %42
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %39, align 4
  store i32 %40, i32* %44, align 4
  %46 = add nuw nsw i64 %26, 2
  %47 = icmp eq i64 %46, 4
  br i1 %47, label %.prol.preheader.2, label %.lr.ph.new.1

.prol.preheader.2:                                ; preds = %.lr.ph.new.1
  %48 = getelementptr inbounds float, float* %0, i64 11
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds float, float* %0, i64 14
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %49, align 4
  store i32 %50, i32* %52, align 4
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @naive_fixed_matrix_multiply(float* %0, float* %1, float* %2) #0 {
.preheader:
  store float 0.000000e+00, float* %2, align 4
  %3 = load float, float* %0, align 4
  %4 = insertelement <4 x float> zeroinitializer, float %3, i32 0
  %5 = insertelement <4 x float> %4, float 0.000000e+00, i32 1
  %6 = insertelement <4 x float> %5, float 0.000000e+00, i32 2
  %7 = insertelement <4 x float> %6, float 0.000000e+00, i32 3
  %8 = load float, float* %1, align 4
  %9 = insertelement <4 x float> zeroinitializer, float %8, i32 0
  %10 = insertelement <4 x float> %9, float 0.000000e+00, i32 1
  %11 = insertelement <4 x float> %10, float 0.000000e+00, i32 2
  %12 = insertelement <4 x float> %11, float 0.000000e+00, i32 3
  %13 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7, <4 x float> %12, <4 x float> zeroinitializer)
  %14 = extractelement <4 x float> %13, i32 0
  store float %14, float* %2, align 4
  %15 = load float, float* %0, align 4
  %16 = insertelement <4 x float> zeroinitializer, float %15, i32 0
  %17 = insertelement <4 x float> %16, float 1.000000e+00, i32 1
  %18 = insertelement <4 x float> %17, float 1.000000e+00, i32 2
  %19 = insertelement <4 x float> %18, float 1.000000e+00, i32 3
  %20 = load float, float* %1, align 4
  %21 = insertelement <4 x float> zeroinitializer, float %20, i32 0
  %22 = insertelement <4 x float> %21, float 0.000000e+00, i32 1
  %23 = insertelement <4 x float> %22, float 0.000000e+00, i32 2
  %24 = insertelement <4 x float> %23, float 0.000000e+00, i32 3
  %25 = fmul <4 x float> %19, %24
  %26 = fadd <4 x float> %25, zeroinitializer
  %27 = getelementptr inbounds float, float* %0, i64 1
  %28 = load float, float* %27, align 4
  %29 = insertelement <4 x float> zeroinitializer, float %28, i32 0
  %30 = insertelement <4 x float> %29, float 0.000000e+00, i32 1
  %31 = insertelement <4 x float> %30, float 0.000000e+00, i32 2
  %32 = insertelement <4 x float> %31, float 0.000000e+00, i32 3
  %33 = getelementptr inbounds float, float* %1, i64 4
  %34 = load float, float* %33, align 4
  %35 = insertelement <4 x float> zeroinitializer, float %34, i32 0
  %36 = insertelement <4 x float> %35, float 0.000000e+00, i32 1
  %37 = insertelement <4 x float> %36, float 0.000000e+00, i32 2
  %38 = insertelement <4 x float> %37, float 0.000000e+00, i32 3
  %39 = call <4 x float> @llvm.fma.v4f32(<4 x float> %32, <4 x float> %38, <4 x float> %26)
  %40 = extractelement <4 x float> %39, i32 0
  store float %40, float* %2, align 4
  %41 = load float, float* %0, align 4
  %42 = insertelement <4 x float> zeroinitializer, float %41, i32 0
  %43 = insertelement <4 x float> %42, float 1.000000e+00, i32 1
  %44 = insertelement <4 x float> %43, float 1.000000e+00, i32 2
  %45 = insertelement <4 x float> %44, float 1.000000e+00, i32 3
  %46 = load float, float* %1, align 4
  %47 = insertelement <4 x float> zeroinitializer, float %46, i32 0
  %48 = insertelement <4 x float> %47, float 0.000000e+00, i32 1
  %49 = insertelement <4 x float> %48, float 0.000000e+00, i32 2
  %50 = insertelement <4 x float> %49, float 0.000000e+00, i32 3
  %51 = fmul <4 x float> %45, %50
  %52 = fadd <4 x float> %51, zeroinitializer
  %53 = getelementptr inbounds float, float* %0, i64 1
  %54 = load float, float* %53, align 4
  %55 = insertelement <4 x float> zeroinitializer, float %54, i32 0
  %56 = insertelement <4 x float> %55, float 1.000000e+00, i32 1
  %57 = insertelement <4 x float> %56, float 1.000000e+00, i32 2
  %58 = insertelement <4 x float> %57, float 1.000000e+00, i32 3
  %59 = getelementptr inbounds float, float* %1, i64 4
  %60 = load float, float* %59, align 4
  %61 = insertelement <4 x float> zeroinitializer, float %60, i32 0
  %62 = insertelement <4 x float> %61, float 0.000000e+00, i32 1
  %63 = insertelement <4 x float> %62, float 0.000000e+00, i32 2
  %64 = insertelement <4 x float> %63, float 0.000000e+00, i32 3
  %65 = call <4 x float> @llvm.fma.v4f32(<4 x float> %58, <4 x float> %64, <4 x float> %52)
  %66 = getelementptr inbounds float, float* %0, i64 2
  %67 = load float, float* %66, align 4
  %68 = insertelement <4 x float> zeroinitializer, float %67, i32 0
  %69 = insertelement <4 x float> %68, float 0.000000e+00, i32 1
  %70 = insertelement <4 x float> %69, float 0.000000e+00, i32 2
  %71 = insertelement <4 x float> %70, float 0.000000e+00, i32 3
  %72 = getelementptr inbounds float, float* %1, i64 8
  %73 = load float, float* %72, align 4
  %74 = insertelement <4 x float> zeroinitializer, float %73, i32 0
  %75 = insertelement <4 x float> %74, float 0.000000e+00, i32 1
  %76 = insertelement <4 x float> %75, float 0.000000e+00, i32 2
  %77 = insertelement <4 x float> %76, float 0.000000e+00, i32 3
  %78 = call <4 x float> @llvm.fma.v4f32(<4 x float> %71, <4 x float> %77, <4 x float> %65)
  %79 = extractelement <4 x float> %78, i32 0
  store float %79, float* %2, align 4
  %80 = load float, float* %0, align 4
  %81 = insertelement <4 x float> zeroinitializer, float %80, i32 0
  %82 = insertelement <4 x float> %81, float 1.000000e+00, i32 1
  %83 = insertelement <4 x float> %82, float 1.000000e+00, i32 2
  %84 = insertelement <4 x float> %83, float 1.000000e+00, i32 3
  %85 = load float, float* %1, align 4
  %86 = insertelement <4 x float> zeroinitializer, float %85, i32 0
  %87 = insertelement <4 x float> %86, float 0.000000e+00, i32 1
  %88 = insertelement <4 x float> %87, float 0.000000e+00, i32 2
  %89 = insertelement <4 x float> %88, float 0.000000e+00, i32 3
  %90 = fmul <4 x float> %84, %89
  %91 = fadd <4 x float> %90, zeroinitializer
  %92 = getelementptr inbounds float, float* %0, i64 1
  %93 = load float, float* %92, align 4
  %94 = insertelement <4 x float> zeroinitializer, float %93, i32 0
  %95 = insertelement <4 x float> %94, float 1.000000e+00, i32 1
  %96 = insertelement <4 x float> %95, float 1.000000e+00, i32 2
  %97 = insertelement <4 x float> %96, float 1.000000e+00, i32 3
  %98 = getelementptr inbounds float, float* %1, i64 4
  %99 = load float, float* %98, align 4
  %100 = insertelement <4 x float> zeroinitializer, float %99, i32 0
  %101 = insertelement <4 x float> %100, float 0.000000e+00, i32 1
  %102 = insertelement <4 x float> %101, float 0.000000e+00, i32 2
  %103 = insertelement <4 x float> %102, float 0.000000e+00, i32 3
  %104 = call <4 x float> @llvm.fma.v4f32(<4 x float> %97, <4 x float> %103, <4 x float> %91)
  %105 = getelementptr inbounds float, float* %0, i64 2
  %106 = load float, float* %105, align 4
  %107 = insertelement <4 x float> zeroinitializer, float %106, i32 0
  %108 = insertelement <4 x float> %107, float 1.000000e+00, i32 1
  %109 = insertelement <4 x float> %108, float 1.000000e+00, i32 2
  %110 = insertelement <4 x float> %109, float 1.000000e+00, i32 3
  %111 = getelementptr inbounds float, float* %1, i64 8
  %112 = load float, float* %111, align 4
  %113 = insertelement <4 x float> zeroinitializer, float %112, i32 0
  %114 = insertelement <4 x float> %113, float 0.000000e+00, i32 1
  %115 = insertelement <4 x float> %114, float 0.000000e+00, i32 2
  %116 = insertelement <4 x float> %115, float 0.000000e+00, i32 3
  %117 = call <4 x float> @llvm.fma.v4f32(<4 x float> %110, <4 x float> %116, <4 x float> %104)
  %118 = getelementptr inbounds float, float* %0, i64 3
  %119 = load float, float* %118, align 4
  %120 = insertelement <4 x float> zeroinitializer, float %119, i32 0
  %121 = insertelement <4 x float> %120, float 0.000000e+00, i32 1
  %122 = insertelement <4 x float> %121, float 0.000000e+00, i32 2
  %123 = insertelement <4 x float> %122, float 0.000000e+00, i32 3
  %124 = getelementptr inbounds float, float* %1, i64 12
  %125 = load float, float* %124, align 4
  %126 = insertelement <4 x float> zeroinitializer, float %125, i32 0
  %127 = insertelement <4 x float> %126, float 0.000000e+00, i32 1
  %128 = insertelement <4 x float> %127, float 0.000000e+00, i32 2
  %129 = insertelement <4 x float> %128, float 0.000000e+00, i32 3
  %130 = call <4 x float> @llvm.fma.v4f32(<4 x float> %123, <4 x float> %129, <4 x float> %117)
  %131 = extractelement <4 x float> %130, i32 0
  store float %131, float* %2, align 4
  %132 = extractelement <4 x float> %130, i32 1
  %133 = getelementptr inbounds float, float* %2, i64 1
  store float %132, float* %133, align 4
  %134 = load float, float* %0, align 4
  %135 = insertelement <4 x float> zeroinitializer, float %134, i32 0
  %136 = insertelement <4 x float> %135, float 0.000000e+00, i32 1
  %137 = insertelement <4 x float> %136, float 0.000000e+00, i32 2
  %138 = insertelement <4 x float> %137, float 0.000000e+00, i32 3
  %139 = getelementptr inbounds float, float* %1, i64 1
  %140 = load float, float* %139, align 4
  %141 = insertelement <4 x float> zeroinitializer, float %140, i32 0
  %142 = insertelement <4 x float> %141, float 0.000000e+00, i32 1
  %143 = insertelement <4 x float> %142, float 0.000000e+00, i32 2
  %144 = insertelement <4 x float> %143, float 0.000000e+00, i32 3
  %145 = call <4 x float> @llvm.fma.v4f32(<4 x float> %138, <4 x float> %144, <4 x float> zeroinitializer)
  %146 = extractelement <4 x float> %145, i32 0
  %147 = getelementptr inbounds float, float* %2, i64 1
  store float %146, float* %147, align 4
  %148 = load float, float* %0, align 4
  %149 = insertelement <4 x float> zeroinitializer, float %148, i32 0
  %150 = insertelement <4 x float> %149, float 1.000000e+00, i32 1
  %151 = insertelement <4 x float> %150, float 1.000000e+00, i32 2
  %152 = insertelement <4 x float> %151, float 1.000000e+00, i32 3
  %153 = getelementptr inbounds float, float* %1, i64 1
  %154 = load float, float* %153, align 4
  %155 = insertelement <4 x float> zeroinitializer, float %154, i32 0
  %156 = insertelement <4 x float> %155, float 0.000000e+00, i32 1
  %157 = insertelement <4 x float> %156, float 0.000000e+00, i32 2
  %158 = insertelement <4 x float> %157, float 0.000000e+00, i32 3
  %159 = fmul <4 x float> %152, %158
  %160 = fadd <4 x float> %159, zeroinitializer
  %161 = getelementptr inbounds float, float* %0, i64 1
  %162 = load float, float* %161, align 4
  %163 = insertelement <4 x float> zeroinitializer, float %162, i32 0
  %164 = insertelement <4 x float> %163, float 0.000000e+00, i32 1
  %165 = insertelement <4 x float> %164, float 0.000000e+00, i32 2
  %166 = insertelement <4 x float> %165, float 0.000000e+00, i32 3
  %167 = getelementptr inbounds float, float* %1, i64 5
  %168 = load float, float* %167, align 4
  %169 = insertelement <4 x float> zeroinitializer, float %168, i32 0
  %170 = insertelement <4 x float> %169, float 0.000000e+00, i32 1
  %171 = insertelement <4 x float> %170, float 0.000000e+00, i32 2
  %172 = insertelement <4 x float> %171, float 0.000000e+00, i32 3
  %173 = call <4 x float> @llvm.fma.v4f32(<4 x float> %166, <4 x float> %172, <4 x float> %160)
  %174 = extractelement <4 x float> %173, i32 0
  %175 = getelementptr inbounds float, float* %2, i64 1
  store float %174, float* %175, align 4
  %176 = load float, float* %0, align 4
  %177 = insertelement <4 x float> zeroinitializer, float %176, i32 0
  %178 = insertelement <4 x float> %177, float 1.000000e+00, i32 1
  %179 = insertelement <4 x float> %178, float 1.000000e+00, i32 2
  %180 = insertelement <4 x float> %179, float 1.000000e+00, i32 3
  %181 = getelementptr inbounds float, float* %1, i64 1
  %182 = load float, float* %181, align 4
  %183 = insertelement <4 x float> zeroinitializer, float %182, i32 0
  %184 = insertelement <4 x float> %183, float 0.000000e+00, i32 1
  %185 = insertelement <4 x float> %184, float 0.000000e+00, i32 2
  %186 = insertelement <4 x float> %185, float 0.000000e+00, i32 3
  %187 = fmul <4 x float> %180, %186
  %188 = fadd <4 x float> %187, zeroinitializer
  %189 = getelementptr inbounds float, float* %0, i64 1
  %190 = load float, float* %189, align 4
  %191 = insertelement <4 x float> zeroinitializer, float %190, i32 0
  %192 = insertelement <4 x float> %191, float 1.000000e+00, i32 1
  %193 = insertelement <4 x float> %192, float 1.000000e+00, i32 2
  %194 = insertelement <4 x float> %193, float 1.000000e+00, i32 3
  %195 = getelementptr inbounds float, float* %1, i64 5
  %196 = load float, float* %195, align 4
  %197 = insertelement <4 x float> zeroinitializer, float %196, i32 0
  %198 = insertelement <4 x float> %197, float 0.000000e+00, i32 1
  %199 = insertelement <4 x float> %198, float 0.000000e+00, i32 2
  %200 = insertelement <4 x float> %199, float 0.000000e+00, i32 3
  %201 = call <4 x float> @llvm.fma.v4f32(<4 x float> %194, <4 x float> %200, <4 x float> %188)
  %202 = getelementptr inbounds float, float* %0, i64 2
  %203 = load float, float* %202, align 4
  %204 = insertelement <4 x float> zeroinitializer, float %203, i32 0
  %205 = insertelement <4 x float> %204, float 0.000000e+00, i32 1
  %206 = insertelement <4 x float> %205, float 0.000000e+00, i32 2
  %207 = insertelement <4 x float> %206, float 0.000000e+00, i32 3
  %208 = getelementptr inbounds float, float* %1, i64 9
  %209 = load float, float* %208, align 4
  %210 = insertelement <4 x float> zeroinitializer, float %209, i32 0
  %211 = insertelement <4 x float> %210, float 0.000000e+00, i32 1
  %212 = insertelement <4 x float> %211, float 0.000000e+00, i32 2
  %213 = insertelement <4 x float> %212, float 0.000000e+00, i32 3
  %214 = call <4 x float> @llvm.fma.v4f32(<4 x float> %207, <4 x float> %213, <4 x float> %201)
  %215 = extractelement <4 x float> %214, i32 0
  %216 = getelementptr inbounds float, float* %2, i64 1
  store float %215, float* %216, align 4
  %217 = load float, float* %0, align 4
  %218 = insertelement <4 x float> zeroinitializer, float %217, i32 0
  %219 = insertelement <4 x float> %218, float 1.000000e+00, i32 1
  %220 = insertelement <4 x float> %219, float 1.000000e+00, i32 2
  %221 = insertelement <4 x float> %220, float 1.000000e+00, i32 3
  %222 = getelementptr inbounds float, float* %1, i64 1
  %223 = load float, float* %222, align 4
  %224 = insertelement <4 x float> zeroinitializer, float %223, i32 0
  %225 = insertelement <4 x float> %224, float 0.000000e+00, i32 1
  %226 = insertelement <4 x float> %225, float 0.000000e+00, i32 2
  %227 = insertelement <4 x float> %226, float 0.000000e+00, i32 3
  %228 = fmul <4 x float> %221, %227
  %229 = fadd <4 x float> %228, zeroinitializer
  %230 = getelementptr inbounds float, float* %0, i64 1
  %231 = load float, float* %230, align 4
  %232 = insertelement <4 x float> zeroinitializer, float %231, i32 0
  %233 = insertelement <4 x float> %232, float 1.000000e+00, i32 1
  %234 = insertelement <4 x float> %233, float 1.000000e+00, i32 2
  %235 = insertelement <4 x float> %234, float 1.000000e+00, i32 3
  %236 = getelementptr inbounds float, float* %1, i64 5
  %237 = load float, float* %236, align 4
  %238 = insertelement <4 x float> zeroinitializer, float %237, i32 0
  %239 = insertelement <4 x float> %238, float 0.000000e+00, i32 1
  %240 = insertelement <4 x float> %239, float 0.000000e+00, i32 2
  %241 = insertelement <4 x float> %240, float 0.000000e+00, i32 3
  %242 = call <4 x float> @llvm.fma.v4f32(<4 x float> %235, <4 x float> %241, <4 x float> %229)
  %243 = getelementptr inbounds float, float* %0, i64 2
  %244 = load float, float* %243, align 4
  %245 = insertelement <4 x float> zeroinitializer, float %244, i32 0
  %246 = insertelement <4 x float> %245, float 1.000000e+00, i32 1
  %247 = insertelement <4 x float> %246, float 1.000000e+00, i32 2
  %248 = insertelement <4 x float> %247, float 1.000000e+00, i32 3
  %249 = getelementptr inbounds float, float* %1, i64 9
  %250 = load float, float* %249, align 4
  %251 = insertelement <4 x float> zeroinitializer, float %250, i32 0
  %252 = insertelement <4 x float> %251, float 0.000000e+00, i32 1
  %253 = insertelement <4 x float> %252, float 0.000000e+00, i32 2
  %254 = insertelement <4 x float> %253, float 0.000000e+00, i32 3
  %255 = call <4 x float> @llvm.fma.v4f32(<4 x float> %248, <4 x float> %254, <4 x float> %242)
  %256 = getelementptr inbounds float, float* %0, i64 3
  %257 = load float, float* %256, align 4
  %258 = insertelement <4 x float> zeroinitializer, float %257, i32 0
  %259 = insertelement <4 x float> %258, float 0.000000e+00, i32 1
  %260 = insertelement <4 x float> %259, float 0.000000e+00, i32 2
  %261 = insertelement <4 x float> %260, float 0.000000e+00, i32 3
  %262 = getelementptr inbounds float, float* %1, i64 13
  %263 = load float, float* %262, align 4
  %264 = insertelement <4 x float> zeroinitializer, float %263, i32 0
  %265 = insertelement <4 x float> %264, float 0.000000e+00, i32 1
  %266 = insertelement <4 x float> %265, float 0.000000e+00, i32 2
  %267 = insertelement <4 x float> %266, float 0.000000e+00, i32 3
  %268 = call <4 x float> @llvm.fma.v4f32(<4 x float> %261, <4 x float> %267, <4 x float> %255)
  %269 = extractelement <4 x float> %268, i32 0
  %270 = getelementptr inbounds float, float* %2, i64 1
  store float %269, float* %270, align 4
  %271 = extractelement <4 x float> %268, i32 1
  %272 = getelementptr inbounds float, float* %2, i64 2
  store float %271, float* %272, align 4
  %273 = load float, float* %0, align 4
  %274 = insertelement <4 x float> zeroinitializer, float %273, i32 0
  %275 = insertelement <4 x float> %274, float 0.000000e+00, i32 1
  %276 = insertelement <4 x float> %275, float 0.000000e+00, i32 2
  %277 = insertelement <4 x float> %276, float 0.000000e+00, i32 3
  %278 = getelementptr inbounds float, float* %1, i64 2
  %279 = load float, float* %278, align 4
  %280 = insertelement <4 x float> zeroinitializer, float %279, i32 0
  %281 = insertelement <4 x float> %280, float 0.000000e+00, i32 1
  %282 = insertelement <4 x float> %281, float 0.000000e+00, i32 2
  %283 = insertelement <4 x float> %282, float 0.000000e+00, i32 3
  %284 = call <4 x float> @llvm.fma.v4f32(<4 x float> %277, <4 x float> %283, <4 x float> zeroinitializer)
  %285 = extractelement <4 x float> %284, i32 0
  %286 = getelementptr inbounds float, float* %2, i64 2
  store float %285, float* %286, align 4
  %287 = load float, float* %0, align 4
  %288 = insertelement <4 x float> zeroinitializer, float %287, i32 0
  %289 = insertelement <4 x float> %288, float 1.000000e+00, i32 1
  %290 = insertelement <4 x float> %289, float 1.000000e+00, i32 2
  %291 = insertelement <4 x float> %290, float 1.000000e+00, i32 3
  %292 = getelementptr inbounds float, float* %1, i64 2
  %293 = load float, float* %292, align 4
  %294 = insertelement <4 x float> zeroinitializer, float %293, i32 0
  %295 = insertelement <4 x float> %294, float 0.000000e+00, i32 1
  %296 = insertelement <4 x float> %295, float 0.000000e+00, i32 2
  %297 = insertelement <4 x float> %296, float 0.000000e+00, i32 3
  %298 = fmul <4 x float> %291, %297
  %299 = fadd <4 x float> %298, zeroinitializer
  %300 = getelementptr inbounds float, float* %0, i64 1
  %301 = load float, float* %300, align 4
  %302 = insertelement <4 x float> zeroinitializer, float %301, i32 0
  %303 = insertelement <4 x float> %302, float 0.000000e+00, i32 1
  %304 = insertelement <4 x float> %303, float 0.000000e+00, i32 2
  %305 = insertelement <4 x float> %304, float 0.000000e+00, i32 3
  %306 = getelementptr inbounds float, float* %1, i64 6
  %307 = load float, float* %306, align 4
  %308 = insertelement <4 x float> zeroinitializer, float %307, i32 0
  %309 = insertelement <4 x float> %308, float 0.000000e+00, i32 1
  %310 = insertelement <4 x float> %309, float 0.000000e+00, i32 2
  %311 = insertelement <4 x float> %310, float 0.000000e+00, i32 3
  %312 = call <4 x float> @llvm.fma.v4f32(<4 x float> %305, <4 x float> %311, <4 x float> %299)
  %313 = extractelement <4 x float> %312, i32 0
  %314 = getelementptr inbounds float, float* %2, i64 2
  store float %313, float* %314, align 4
  %315 = load float, float* %0, align 4
  %316 = insertelement <4 x float> zeroinitializer, float %315, i32 0
  %317 = insertelement <4 x float> %316, float 1.000000e+00, i32 1
  %318 = insertelement <4 x float> %317, float 1.000000e+00, i32 2
  %319 = insertelement <4 x float> %318, float 1.000000e+00, i32 3
  %320 = getelementptr inbounds float, float* %1, i64 2
  %321 = load float, float* %320, align 4
  %322 = insertelement <4 x float> zeroinitializer, float %321, i32 0
  %323 = insertelement <4 x float> %322, float 0.000000e+00, i32 1
  %324 = insertelement <4 x float> %323, float 0.000000e+00, i32 2
  %325 = insertelement <4 x float> %324, float 0.000000e+00, i32 3
  %326 = fmul <4 x float> %319, %325
  %327 = fadd <4 x float> %326, zeroinitializer
  %328 = getelementptr inbounds float, float* %0, i64 1
  %329 = load float, float* %328, align 4
  %330 = insertelement <4 x float> zeroinitializer, float %329, i32 0
  %331 = insertelement <4 x float> %330, float 1.000000e+00, i32 1
  %332 = insertelement <4 x float> %331, float 1.000000e+00, i32 2
  %333 = insertelement <4 x float> %332, float 1.000000e+00, i32 3
  %334 = getelementptr inbounds float, float* %1, i64 6
  %335 = load float, float* %334, align 4
  %336 = insertelement <4 x float> zeroinitializer, float %335, i32 0
  %337 = insertelement <4 x float> %336, float 0.000000e+00, i32 1
  %338 = insertelement <4 x float> %337, float 0.000000e+00, i32 2
  %339 = insertelement <4 x float> %338, float 0.000000e+00, i32 3
  %340 = call <4 x float> @llvm.fma.v4f32(<4 x float> %333, <4 x float> %339, <4 x float> %327)
  %341 = getelementptr inbounds float, float* %0, i64 2
  %342 = load float, float* %341, align 4
  %343 = insertelement <4 x float> zeroinitializer, float %342, i32 0
  %344 = insertelement <4 x float> %343, float 0.000000e+00, i32 1
  %345 = insertelement <4 x float> %344, float 0.000000e+00, i32 2
  %346 = insertelement <4 x float> %345, float 0.000000e+00, i32 3
  %347 = getelementptr inbounds float, float* %1, i64 10
  %348 = load float, float* %347, align 4
  %349 = insertelement <4 x float> zeroinitializer, float %348, i32 0
  %350 = insertelement <4 x float> %349, float 0.000000e+00, i32 1
  %351 = insertelement <4 x float> %350, float 0.000000e+00, i32 2
  %352 = insertelement <4 x float> %351, float 0.000000e+00, i32 3
  %353 = call <4 x float> @llvm.fma.v4f32(<4 x float> %346, <4 x float> %352, <4 x float> %340)
  %354 = extractelement <4 x float> %353, i32 0
  %355 = getelementptr inbounds float, float* %2, i64 2
  store float %354, float* %355, align 4
  %356 = load float, float* %0, align 4
  %357 = insertelement <4 x float> zeroinitializer, float %356, i32 0
  %358 = insertelement <4 x float> %357, float 1.000000e+00, i32 1
  %359 = insertelement <4 x float> %358, float 1.000000e+00, i32 2
  %360 = insertelement <4 x float> %359, float 1.000000e+00, i32 3
  %361 = getelementptr inbounds float, float* %1, i64 2
  %362 = load float, float* %361, align 4
  %363 = insertelement <4 x float> zeroinitializer, float %362, i32 0
  %364 = insertelement <4 x float> %363, float 0.000000e+00, i32 1
  %365 = insertelement <4 x float> %364, float 0.000000e+00, i32 2
  %366 = insertelement <4 x float> %365, float 0.000000e+00, i32 3
  %367 = fmul <4 x float> %360, %366
  %368 = fadd <4 x float> %367, zeroinitializer
  %369 = getelementptr inbounds float, float* %0, i64 1
  %370 = load float, float* %369, align 4
  %371 = insertelement <4 x float> zeroinitializer, float %370, i32 0
  %372 = insertelement <4 x float> %371, float 1.000000e+00, i32 1
  %373 = insertelement <4 x float> %372, float 1.000000e+00, i32 2
  %374 = insertelement <4 x float> %373, float 1.000000e+00, i32 3
  %375 = getelementptr inbounds float, float* %1, i64 6
  %376 = load float, float* %375, align 4
  %377 = insertelement <4 x float> zeroinitializer, float %376, i32 0
  %378 = insertelement <4 x float> %377, float 0.000000e+00, i32 1
  %379 = insertelement <4 x float> %378, float 0.000000e+00, i32 2
  %380 = insertelement <4 x float> %379, float 0.000000e+00, i32 3
  %381 = call <4 x float> @llvm.fma.v4f32(<4 x float> %374, <4 x float> %380, <4 x float> %368)
  %382 = getelementptr inbounds float, float* %0, i64 2
  %383 = load float, float* %382, align 4
  %384 = insertelement <4 x float> zeroinitializer, float %383, i32 0
  %385 = insertelement <4 x float> %384, float 1.000000e+00, i32 1
  %386 = insertelement <4 x float> %385, float 1.000000e+00, i32 2
  %387 = insertelement <4 x float> %386, float 1.000000e+00, i32 3
  %388 = getelementptr inbounds float, float* %1, i64 10
  %389 = load float, float* %388, align 4
  %390 = insertelement <4 x float> zeroinitializer, float %389, i32 0
  %391 = insertelement <4 x float> %390, float 0.000000e+00, i32 1
  %392 = insertelement <4 x float> %391, float 0.000000e+00, i32 2
  %393 = insertelement <4 x float> %392, float 0.000000e+00, i32 3
  %394 = call <4 x float> @llvm.fma.v4f32(<4 x float> %387, <4 x float> %393, <4 x float> %381)
  %395 = getelementptr inbounds float, float* %0, i64 3
  %396 = load float, float* %395, align 4
  %397 = insertelement <4 x float> zeroinitializer, float %396, i32 0
  %398 = insertelement <4 x float> %397, float 0.000000e+00, i32 1
  %399 = insertelement <4 x float> %398, float 0.000000e+00, i32 2
  %400 = insertelement <4 x float> %399, float 0.000000e+00, i32 3
  %401 = getelementptr inbounds float, float* %1, i64 14
  %402 = load float, float* %401, align 4
  %403 = insertelement <4 x float> zeroinitializer, float %402, i32 0
  %404 = insertelement <4 x float> %403, float 0.000000e+00, i32 1
  %405 = insertelement <4 x float> %404, float 0.000000e+00, i32 2
  %406 = insertelement <4 x float> %405, float 0.000000e+00, i32 3
  %407 = call <4 x float> @llvm.fma.v4f32(<4 x float> %400, <4 x float> %406, <4 x float> %394)
  %408 = extractelement <4 x float> %407, i32 0
  %409 = getelementptr inbounds float, float* %2, i64 2
  store float %408, float* %409, align 4
  %410 = extractelement <4 x float> %407, i32 1
  %411 = getelementptr inbounds float, float* %2, i64 3
  store float %410, float* %411, align 4
  %412 = load float, float* %0, align 4
  %413 = insertelement <4 x float> zeroinitializer, float %412, i32 0
  %414 = insertelement <4 x float> %413, float 0.000000e+00, i32 1
  %415 = insertelement <4 x float> %414, float 0.000000e+00, i32 2
  %416 = insertelement <4 x float> %415, float 0.000000e+00, i32 3
  %417 = getelementptr inbounds float, float* %1, i64 3
  %418 = load float, float* %417, align 4
  %419 = insertelement <4 x float> zeroinitializer, float %418, i32 0
  %420 = insertelement <4 x float> %419, float 0.000000e+00, i32 1
  %421 = insertelement <4 x float> %420, float 0.000000e+00, i32 2
  %422 = insertelement <4 x float> %421, float 0.000000e+00, i32 3
  %423 = call <4 x float> @llvm.fma.v4f32(<4 x float> %416, <4 x float> %422, <4 x float> zeroinitializer)
  %424 = extractelement <4 x float> %423, i32 0
  %425 = getelementptr inbounds float, float* %2, i64 3
  store float %424, float* %425, align 4
  %426 = load float, float* %0, align 4
  %427 = insertelement <4 x float> zeroinitializer, float %426, i32 0
  %428 = insertelement <4 x float> %427, float 1.000000e+00, i32 1
  %429 = insertelement <4 x float> %428, float 1.000000e+00, i32 2
  %430 = insertelement <4 x float> %429, float 1.000000e+00, i32 3
  %431 = getelementptr inbounds float, float* %1, i64 3
  %432 = load float, float* %431, align 4
  %433 = insertelement <4 x float> zeroinitializer, float %432, i32 0
  %434 = insertelement <4 x float> %433, float 0.000000e+00, i32 1
  %435 = insertelement <4 x float> %434, float 0.000000e+00, i32 2
  %436 = insertelement <4 x float> %435, float 0.000000e+00, i32 3
  %437 = fmul <4 x float> %430, %436
  %438 = fadd <4 x float> %437, zeroinitializer
  %439 = getelementptr inbounds float, float* %0, i64 1
  %440 = load float, float* %439, align 4
  %441 = insertelement <4 x float> zeroinitializer, float %440, i32 0
  %442 = insertelement <4 x float> %441, float 0.000000e+00, i32 1
  %443 = insertelement <4 x float> %442, float 0.000000e+00, i32 2
  %444 = insertelement <4 x float> %443, float 0.000000e+00, i32 3
  %445 = getelementptr inbounds float, float* %1, i64 7
  %446 = load float, float* %445, align 4
  %447 = insertelement <4 x float> zeroinitializer, float %446, i32 0
  %448 = insertelement <4 x float> %447, float 0.000000e+00, i32 1
  %449 = insertelement <4 x float> %448, float 0.000000e+00, i32 2
  %450 = insertelement <4 x float> %449, float 0.000000e+00, i32 3
  %451 = call <4 x float> @llvm.fma.v4f32(<4 x float> %444, <4 x float> %450, <4 x float> %438)
  %452 = extractelement <4 x float> %451, i32 0
  %453 = getelementptr inbounds float, float* %2, i64 3
  store float %452, float* %453, align 4
  %454 = load float, float* %0, align 4
  %455 = insertelement <4 x float> zeroinitializer, float %454, i32 0
  %456 = insertelement <4 x float> %455, float 1.000000e+00, i32 1
  %457 = insertelement <4 x float> %456, float 1.000000e+00, i32 2
  %458 = insertelement <4 x float> %457, float 1.000000e+00, i32 3
  %459 = getelementptr inbounds float, float* %1, i64 3
  %460 = load float, float* %459, align 4
  %461 = insertelement <4 x float> zeroinitializer, float %460, i32 0
  %462 = insertelement <4 x float> %461, float 0.000000e+00, i32 1
  %463 = insertelement <4 x float> %462, float 0.000000e+00, i32 2
  %464 = insertelement <4 x float> %463, float 0.000000e+00, i32 3
  %465 = fmul <4 x float> %458, %464
  %466 = fadd <4 x float> %465, zeroinitializer
  %467 = getelementptr inbounds float, float* %0, i64 1
  %468 = load float, float* %467, align 4
  %469 = insertelement <4 x float> zeroinitializer, float %468, i32 0
  %470 = insertelement <4 x float> %469, float 1.000000e+00, i32 1
  %471 = insertelement <4 x float> %470, float 1.000000e+00, i32 2
  %472 = insertelement <4 x float> %471, float 1.000000e+00, i32 3
  %473 = getelementptr inbounds float, float* %1, i64 7
  %474 = load float, float* %473, align 4
  %475 = insertelement <4 x float> zeroinitializer, float %474, i32 0
  %476 = insertelement <4 x float> %475, float 0.000000e+00, i32 1
  %477 = insertelement <4 x float> %476, float 0.000000e+00, i32 2
  %478 = insertelement <4 x float> %477, float 0.000000e+00, i32 3
  %479 = call <4 x float> @llvm.fma.v4f32(<4 x float> %472, <4 x float> %478, <4 x float> %466)
  %480 = getelementptr inbounds float, float* %0, i64 2
  %481 = load float, float* %480, align 4
  %482 = insertelement <4 x float> zeroinitializer, float %481, i32 0
  %483 = insertelement <4 x float> %482, float 0.000000e+00, i32 1
  %484 = insertelement <4 x float> %483, float 0.000000e+00, i32 2
  %485 = insertelement <4 x float> %484, float 0.000000e+00, i32 3
  %486 = getelementptr inbounds float, float* %1, i64 11
  %487 = load float, float* %486, align 4
  %488 = insertelement <4 x float> zeroinitializer, float %487, i32 0
  %489 = insertelement <4 x float> %488, float 0.000000e+00, i32 1
  %490 = insertelement <4 x float> %489, float 0.000000e+00, i32 2
  %491 = insertelement <4 x float> %490, float 0.000000e+00, i32 3
  %492 = call <4 x float> @llvm.fma.v4f32(<4 x float> %485, <4 x float> %491, <4 x float> %479)
  %493 = extractelement <4 x float> %492, i32 0
  %494 = getelementptr inbounds float, float* %2, i64 3
  store float %493, float* %494, align 4
  %495 = load float, float* %0, align 4
  %496 = insertelement <4 x float> zeroinitializer, float %495, i32 0
  %497 = insertelement <4 x float> %496, float 1.000000e+00, i32 1
  %498 = insertelement <4 x float> %497, float 1.000000e+00, i32 2
  %499 = insertelement <4 x float> %498, float 1.000000e+00, i32 3
  %500 = getelementptr inbounds float, float* %1, i64 3
  %501 = load float, float* %500, align 4
  %502 = insertelement <4 x float> zeroinitializer, float %501, i32 0
  %503 = insertelement <4 x float> %502, float 0.000000e+00, i32 1
  %504 = insertelement <4 x float> %503, float 0.000000e+00, i32 2
  %505 = insertelement <4 x float> %504, float 0.000000e+00, i32 3
  %506 = fmul <4 x float> %499, %505
  %507 = fadd <4 x float> %506, zeroinitializer
  %508 = getelementptr inbounds float, float* %0, i64 1
  %509 = load float, float* %508, align 4
  %510 = insertelement <4 x float> zeroinitializer, float %509, i32 0
  %511 = insertelement <4 x float> %510, float 1.000000e+00, i32 1
  %512 = insertelement <4 x float> %511, float 1.000000e+00, i32 2
  %513 = insertelement <4 x float> %512, float 1.000000e+00, i32 3
  %514 = getelementptr inbounds float, float* %1, i64 7
  %515 = load float, float* %514, align 4
  %516 = insertelement <4 x float> zeroinitializer, float %515, i32 0
  %517 = insertelement <4 x float> %516, float 0.000000e+00, i32 1
  %518 = insertelement <4 x float> %517, float 0.000000e+00, i32 2
  %519 = insertelement <4 x float> %518, float 0.000000e+00, i32 3
  %520 = call <4 x float> @llvm.fma.v4f32(<4 x float> %513, <4 x float> %519, <4 x float> %507)
  %521 = getelementptr inbounds float, float* %0, i64 2
  %522 = load float, float* %521, align 4
  %523 = insertelement <4 x float> zeroinitializer, float %522, i32 0
  %524 = insertelement <4 x float> %523, float 1.000000e+00, i32 1
  %525 = insertelement <4 x float> %524, float 1.000000e+00, i32 2
  %526 = insertelement <4 x float> %525, float 1.000000e+00, i32 3
  %527 = getelementptr inbounds float, float* %1, i64 11
  %528 = load float, float* %527, align 4
  %529 = insertelement <4 x float> zeroinitializer, float %528, i32 0
  %530 = insertelement <4 x float> %529, float 0.000000e+00, i32 1
  %531 = insertelement <4 x float> %530, float 0.000000e+00, i32 2
  %532 = insertelement <4 x float> %531, float 0.000000e+00, i32 3
  %533 = call <4 x float> @llvm.fma.v4f32(<4 x float> %526, <4 x float> %532, <4 x float> %520)
  %534 = getelementptr inbounds float, float* %0, i64 3
  %535 = load float, float* %534, align 4
  %536 = insertelement <4 x float> zeroinitializer, float %535, i32 0
  %537 = insertelement <4 x float> %536, float 0.000000e+00, i32 1
  %538 = insertelement <4 x float> %537, float 0.000000e+00, i32 2
  %539 = insertelement <4 x float> %538, float 0.000000e+00, i32 3
  %540 = getelementptr inbounds float, float* %1, i64 15
  %541 = load float, float* %540, align 4
  %542 = insertelement <4 x float> zeroinitializer, float %541, i32 0
  %543 = insertelement <4 x float> %542, float 0.000000e+00, i32 1
  %544 = insertelement <4 x float> %543, float 0.000000e+00, i32 2
  %545 = insertelement <4 x float> %544, float 0.000000e+00, i32 3
  %546 = call <4 x float> @llvm.fma.v4f32(<4 x float> %539, <4 x float> %545, <4 x float> %533)
  %547 = extractelement <4 x float> %546, i32 0
  %548 = getelementptr inbounds float, float* %2, i64 3
  store float %547, float* %548, align 4
  %549 = getelementptr inbounds float, float* %2, i64 4
  store float 0.000000e+00, float* %549, align 4
  %550 = getelementptr inbounds float, float* %0, i64 4
  %551 = load float, float* %550, align 4
  %552 = insertelement <4 x float> zeroinitializer, float %551, i32 0
  %553 = insertelement <4 x float> %552, float 0.000000e+00, i32 1
  %554 = insertelement <4 x float> %553, float 0.000000e+00, i32 2
  %555 = insertelement <4 x float> %554, float 0.000000e+00, i32 3
  %556 = load float, float* %1, align 4
  %557 = insertelement <4 x float> zeroinitializer, float %556, i32 0
  %558 = insertelement <4 x float> %557, float 0.000000e+00, i32 1
  %559 = insertelement <4 x float> %558, float 0.000000e+00, i32 2
  %560 = insertelement <4 x float> %559, float 0.000000e+00, i32 3
  %561 = call <4 x float> @llvm.fma.v4f32(<4 x float> %555, <4 x float> %560, <4 x float> zeroinitializer)
  %562 = extractelement <4 x float> %561, i32 0
  %563 = getelementptr inbounds float, float* %2, i64 4
  store float %562, float* %563, align 4
  %564 = getelementptr inbounds float, float* %0, i64 4
  %565 = load float, float* %564, align 4
  %566 = insertelement <4 x float> zeroinitializer, float %565, i32 0
  %567 = insertelement <4 x float> %566, float 1.000000e+00, i32 1
  %568 = insertelement <4 x float> %567, float 1.000000e+00, i32 2
  %569 = insertelement <4 x float> %568, float 1.000000e+00, i32 3
  %570 = load float, float* %1, align 4
  %571 = insertelement <4 x float> zeroinitializer, float %570, i32 0
  %572 = insertelement <4 x float> %571, float 0.000000e+00, i32 1
  %573 = insertelement <4 x float> %572, float 0.000000e+00, i32 2
  %574 = insertelement <4 x float> %573, float 0.000000e+00, i32 3
  %575 = fmul <4 x float> %569, %574
  %576 = fadd <4 x float> %575, zeroinitializer
  %577 = getelementptr inbounds float, float* %0, i64 5
  %578 = load float, float* %577, align 4
  %579 = insertelement <4 x float> zeroinitializer, float %578, i32 0
  %580 = insertelement <4 x float> %579, float 0.000000e+00, i32 1
  %581 = insertelement <4 x float> %580, float 0.000000e+00, i32 2
  %582 = insertelement <4 x float> %581, float 0.000000e+00, i32 3
  %583 = getelementptr inbounds float, float* %1, i64 4
  %584 = load float, float* %583, align 4
  %585 = insertelement <4 x float> zeroinitializer, float %584, i32 0
  %586 = insertelement <4 x float> %585, float 0.000000e+00, i32 1
  %587 = insertelement <4 x float> %586, float 0.000000e+00, i32 2
  %588 = insertelement <4 x float> %587, float 0.000000e+00, i32 3
  %589 = call <4 x float> @llvm.fma.v4f32(<4 x float> %582, <4 x float> %588, <4 x float> %576)
  %590 = extractelement <4 x float> %589, i32 0
  %591 = getelementptr inbounds float, float* %2, i64 4
  store float %590, float* %591, align 4
  %592 = getelementptr inbounds float, float* %0, i64 4
  %593 = load float, float* %592, align 4
  %594 = insertelement <4 x float> zeroinitializer, float %593, i32 0
  %595 = insertelement <4 x float> %594, float 1.000000e+00, i32 1
  %596 = insertelement <4 x float> %595, float 1.000000e+00, i32 2
  %597 = insertelement <4 x float> %596, float 1.000000e+00, i32 3
  %598 = load float, float* %1, align 4
  %599 = insertelement <4 x float> zeroinitializer, float %598, i32 0
  %600 = insertelement <4 x float> %599, float 0.000000e+00, i32 1
  %601 = insertelement <4 x float> %600, float 0.000000e+00, i32 2
  %602 = insertelement <4 x float> %601, float 0.000000e+00, i32 3
  %603 = fmul <4 x float> %597, %602
  %604 = fadd <4 x float> %603, zeroinitializer
  %605 = getelementptr inbounds float, float* %0, i64 5
  %606 = load float, float* %605, align 4
  %607 = insertelement <4 x float> zeroinitializer, float %606, i32 0
  %608 = insertelement <4 x float> %607, float 1.000000e+00, i32 1
  %609 = insertelement <4 x float> %608, float 1.000000e+00, i32 2
  %610 = insertelement <4 x float> %609, float 1.000000e+00, i32 3
  %611 = getelementptr inbounds float, float* %1, i64 4
  %612 = load float, float* %611, align 4
  %613 = insertelement <4 x float> zeroinitializer, float %612, i32 0
  %614 = insertelement <4 x float> %613, float 0.000000e+00, i32 1
  %615 = insertelement <4 x float> %614, float 0.000000e+00, i32 2
  %616 = insertelement <4 x float> %615, float 0.000000e+00, i32 3
  %617 = call <4 x float> @llvm.fma.v4f32(<4 x float> %610, <4 x float> %616, <4 x float> %604)
  %618 = getelementptr inbounds float, float* %0, i64 6
  %619 = load float, float* %618, align 4
  %620 = insertelement <4 x float> zeroinitializer, float %619, i32 0
  %621 = insertelement <4 x float> %620, float 0.000000e+00, i32 1
  %622 = insertelement <4 x float> %621, float 0.000000e+00, i32 2
  %623 = insertelement <4 x float> %622, float 0.000000e+00, i32 3
  %624 = getelementptr inbounds float, float* %1, i64 8
  %625 = load float, float* %624, align 4
  %626 = insertelement <4 x float> zeroinitializer, float %625, i32 0
  %627 = insertelement <4 x float> %626, float 0.000000e+00, i32 1
  %628 = insertelement <4 x float> %627, float 0.000000e+00, i32 2
  %629 = insertelement <4 x float> %628, float 0.000000e+00, i32 3
  %630 = call <4 x float> @llvm.fma.v4f32(<4 x float> %623, <4 x float> %629, <4 x float> %617)
  %631 = extractelement <4 x float> %630, i32 0
  %632 = getelementptr inbounds float, float* %2, i64 4
  store float %631, float* %632, align 4
  %633 = getelementptr inbounds float, float* %0, i64 4
  %634 = load float, float* %633, align 4
  %635 = insertelement <4 x float> zeroinitializer, float %634, i32 0
  %636 = insertelement <4 x float> %635, float 1.000000e+00, i32 1
  %637 = insertelement <4 x float> %636, float 1.000000e+00, i32 2
  %638 = insertelement <4 x float> %637, float 1.000000e+00, i32 3
  %639 = load float, float* %1, align 4
  %640 = insertelement <4 x float> zeroinitializer, float %639, i32 0
  %641 = insertelement <4 x float> %640, float 0.000000e+00, i32 1
  %642 = insertelement <4 x float> %641, float 0.000000e+00, i32 2
  %643 = insertelement <4 x float> %642, float 0.000000e+00, i32 3
  %644 = fmul <4 x float> %638, %643
  %645 = fadd <4 x float> %644, zeroinitializer
  %646 = getelementptr inbounds float, float* %0, i64 5
  %647 = load float, float* %646, align 4
  %648 = insertelement <4 x float> zeroinitializer, float %647, i32 0
  %649 = insertelement <4 x float> %648, float 1.000000e+00, i32 1
  %650 = insertelement <4 x float> %649, float 1.000000e+00, i32 2
  %651 = insertelement <4 x float> %650, float 1.000000e+00, i32 3
  %652 = getelementptr inbounds float, float* %1, i64 4
  %653 = load float, float* %652, align 4
  %654 = insertelement <4 x float> zeroinitializer, float %653, i32 0
  %655 = insertelement <4 x float> %654, float 0.000000e+00, i32 1
  %656 = insertelement <4 x float> %655, float 0.000000e+00, i32 2
  %657 = insertelement <4 x float> %656, float 0.000000e+00, i32 3
  %658 = call <4 x float> @llvm.fma.v4f32(<4 x float> %651, <4 x float> %657, <4 x float> %645)
  %659 = getelementptr inbounds float, float* %0, i64 6
  %660 = load float, float* %659, align 4
  %661 = insertelement <4 x float> zeroinitializer, float %660, i32 0
  %662 = insertelement <4 x float> %661, float 1.000000e+00, i32 1
  %663 = insertelement <4 x float> %662, float 1.000000e+00, i32 2
  %664 = insertelement <4 x float> %663, float 1.000000e+00, i32 3
  %665 = getelementptr inbounds float, float* %1, i64 8
  %666 = load float, float* %665, align 4
  %667 = insertelement <4 x float> zeroinitializer, float %666, i32 0
  %668 = insertelement <4 x float> %667, float 0.000000e+00, i32 1
  %669 = insertelement <4 x float> %668, float 0.000000e+00, i32 2
  %670 = insertelement <4 x float> %669, float 0.000000e+00, i32 3
  %671 = call <4 x float> @llvm.fma.v4f32(<4 x float> %664, <4 x float> %670, <4 x float> %658)
  %672 = getelementptr inbounds float, float* %0, i64 7
  %673 = load float, float* %672, align 4
  %674 = insertelement <4 x float> zeroinitializer, float %673, i32 0
  %675 = insertelement <4 x float> %674, float 0.000000e+00, i32 1
  %676 = insertelement <4 x float> %675, float 0.000000e+00, i32 2
  %677 = insertelement <4 x float> %676, float 0.000000e+00, i32 3
  %678 = getelementptr inbounds float, float* %1, i64 12
  %679 = load float, float* %678, align 4
  %680 = insertelement <4 x float> zeroinitializer, float %679, i32 0
  %681 = insertelement <4 x float> %680, float 0.000000e+00, i32 1
  %682 = insertelement <4 x float> %681, float 0.000000e+00, i32 2
  %683 = insertelement <4 x float> %682, float 0.000000e+00, i32 3
  %684 = call <4 x float> @llvm.fma.v4f32(<4 x float> %677, <4 x float> %683, <4 x float> %671)
  %685 = extractelement <4 x float> %684, i32 0
  %686 = getelementptr inbounds float, float* %2, i64 4
  store float %685, float* %686, align 4
  %687 = extractelement <4 x float> %684, i32 1
  %688 = getelementptr inbounds float, float* %2, i64 5
  store float %687, float* %688, align 4
  %689 = getelementptr inbounds float, float* %0, i64 4
  %690 = load float, float* %689, align 4
  %691 = insertelement <4 x float> zeroinitializer, float %690, i32 0
  %692 = insertelement <4 x float> %691, float 0.000000e+00, i32 1
  %693 = insertelement <4 x float> %692, float 0.000000e+00, i32 2
  %694 = insertelement <4 x float> %693, float 0.000000e+00, i32 3
  %695 = getelementptr inbounds float, float* %1, i64 1
  %696 = load float, float* %695, align 4
  %697 = insertelement <4 x float> zeroinitializer, float %696, i32 0
  %698 = insertelement <4 x float> %697, float 0.000000e+00, i32 1
  %699 = insertelement <4 x float> %698, float 0.000000e+00, i32 2
  %700 = insertelement <4 x float> %699, float 0.000000e+00, i32 3
  %701 = call <4 x float> @llvm.fma.v4f32(<4 x float> %694, <4 x float> %700, <4 x float> zeroinitializer)
  %702 = extractelement <4 x float> %701, i32 0
  %703 = getelementptr inbounds float, float* %2, i64 5
  store float %702, float* %703, align 4
  %704 = getelementptr inbounds float, float* %0, i64 4
  %705 = load float, float* %704, align 4
  %706 = insertelement <4 x float> zeroinitializer, float %705, i32 0
  %707 = insertelement <4 x float> %706, float 1.000000e+00, i32 1
  %708 = insertelement <4 x float> %707, float 1.000000e+00, i32 2
  %709 = insertelement <4 x float> %708, float 1.000000e+00, i32 3
  %710 = getelementptr inbounds float, float* %1, i64 1
  %711 = load float, float* %710, align 4
  %712 = insertelement <4 x float> zeroinitializer, float %711, i32 0
  %713 = insertelement <4 x float> %712, float 0.000000e+00, i32 1
  %714 = insertelement <4 x float> %713, float 0.000000e+00, i32 2
  %715 = insertelement <4 x float> %714, float 0.000000e+00, i32 3
  %716 = fmul <4 x float> %709, %715
  %717 = fadd <4 x float> %716, zeroinitializer
  %718 = getelementptr inbounds float, float* %0, i64 5
  %719 = load float, float* %718, align 4
  %720 = insertelement <4 x float> zeroinitializer, float %719, i32 0
  %721 = insertelement <4 x float> %720, float 0.000000e+00, i32 1
  %722 = insertelement <4 x float> %721, float 0.000000e+00, i32 2
  %723 = insertelement <4 x float> %722, float 0.000000e+00, i32 3
  %724 = getelementptr inbounds float, float* %1, i64 5
  %725 = load float, float* %724, align 4
  %726 = insertelement <4 x float> zeroinitializer, float %725, i32 0
  %727 = insertelement <4 x float> %726, float 0.000000e+00, i32 1
  %728 = insertelement <4 x float> %727, float 0.000000e+00, i32 2
  %729 = insertelement <4 x float> %728, float 0.000000e+00, i32 3
  %730 = call <4 x float> @llvm.fma.v4f32(<4 x float> %723, <4 x float> %729, <4 x float> %717)
  %731 = extractelement <4 x float> %730, i32 0
  %732 = getelementptr inbounds float, float* %2, i64 5
  store float %731, float* %732, align 4
  %733 = getelementptr inbounds float, float* %0, i64 4
  %734 = load float, float* %733, align 4
  %735 = insertelement <4 x float> zeroinitializer, float %734, i32 0
  %736 = insertelement <4 x float> %735, float 1.000000e+00, i32 1
  %737 = insertelement <4 x float> %736, float 1.000000e+00, i32 2
  %738 = insertelement <4 x float> %737, float 1.000000e+00, i32 3
  %739 = getelementptr inbounds float, float* %1, i64 1
  %740 = load float, float* %739, align 4
  %741 = insertelement <4 x float> zeroinitializer, float %740, i32 0
  %742 = insertelement <4 x float> %741, float 0.000000e+00, i32 1
  %743 = insertelement <4 x float> %742, float 0.000000e+00, i32 2
  %744 = insertelement <4 x float> %743, float 0.000000e+00, i32 3
  %745 = fmul <4 x float> %738, %744
  %746 = fadd <4 x float> %745, zeroinitializer
  %747 = getelementptr inbounds float, float* %0, i64 5
  %748 = load float, float* %747, align 4
  %749 = insertelement <4 x float> zeroinitializer, float %748, i32 0
  %750 = insertelement <4 x float> %749, float 1.000000e+00, i32 1
  %751 = insertelement <4 x float> %750, float 1.000000e+00, i32 2
  %752 = insertelement <4 x float> %751, float 1.000000e+00, i32 3
  %753 = getelementptr inbounds float, float* %1, i64 5
  %754 = load float, float* %753, align 4
  %755 = insertelement <4 x float> zeroinitializer, float %754, i32 0
  %756 = insertelement <4 x float> %755, float 0.000000e+00, i32 1
  %757 = insertelement <4 x float> %756, float 0.000000e+00, i32 2
  %758 = insertelement <4 x float> %757, float 0.000000e+00, i32 3
  %759 = call <4 x float> @llvm.fma.v4f32(<4 x float> %752, <4 x float> %758, <4 x float> %746)
  %760 = getelementptr inbounds float, float* %0, i64 6
  %761 = load float, float* %760, align 4
  %762 = insertelement <4 x float> zeroinitializer, float %761, i32 0
  %763 = insertelement <4 x float> %762, float 0.000000e+00, i32 1
  %764 = insertelement <4 x float> %763, float 0.000000e+00, i32 2
  %765 = insertelement <4 x float> %764, float 0.000000e+00, i32 3
  %766 = getelementptr inbounds float, float* %1, i64 9
  %767 = load float, float* %766, align 4
  %768 = insertelement <4 x float> zeroinitializer, float %767, i32 0
  %769 = insertelement <4 x float> %768, float 0.000000e+00, i32 1
  %770 = insertelement <4 x float> %769, float 0.000000e+00, i32 2
  %771 = insertelement <4 x float> %770, float 0.000000e+00, i32 3
  %772 = call <4 x float> @llvm.fma.v4f32(<4 x float> %765, <4 x float> %771, <4 x float> %759)
  %773 = extractelement <4 x float> %772, i32 0
  %774 = getelementptr inbounds float, float* %2, i64 5
  store float %773, float* %774, align 4
  %775 = getelementptr inbounds float, float* %0, i64 4
  %776 = load float, float* %775, align 4
  %777 = insertelement <4 x float> zeroinitializer, float %776, i32 0
  %778 = insertelement <4 x float> %777, float 1.000000e+00, i32 1
  %779 = insertelement <4 x float> %778, float 1.000000e+00, i32 2
  %780 = insertelement <4 x float> %779, float 1.000000e+00, i32 3
  %781 = getelementptr inbounds float, float* %1, i64 1
  %782 = load float, float* %781, align 4
  %783 = insertelement <4 x float> zeroinitializer, float %782, i32 0
  %784 = insertelement <4 x float> %783, float 0.000000e+00, i32 1
  %785 = insertelement <4 x float> %784, float 0.000000e+00, i32 2
  %786 = insertelement <4 x float> %785, float 0.000000e+00, i32 3
  %787 = fmul <4 x float> %780, %786
  %788 = fadd <4 x float> %787, zeroinitializer
  %789 = getelementptr inbounds float, float* %0, i64 5
  %790 = load float, float* %789, align 4
  %791 = insertelement <4 x float> zeroinitializer, float %790, i32 0
  %792 = insertelement <4 x float> %791, float 1.000000e+00, i32 1
  %793 = insertelement <4 x float> %792, float 1.000000e+00, i32 2
  %794 = insertelement <4 x float> %793, float 1.000000e+00, i32 3
  %795 = getelementptr inbounds float, float* %1, i64 5
  %796 = load float, float* %795, align 4
  %797 = insertelement <4 x float> zeroinitializer, float %796, i32 0
  %798 = insertelement <4 x float> %797, float 0.000000e+00, i32 1
  %799 = insertelement <4 x float> %798, float 0.000000e+00, i32 2
  %800 = insertelement <4 x float> %799, float 0.000000e+00, i32 3
  %801 = call <4 x float> @llvm.fma.v4f32(<4 x float> %794, <4 x float> %800, <4 x float> %788)
  %802 = getelementptr inbounds float, float* %0, i64 6
  %803 = load float, float* %802, align 4
  %804 = insertelement <4 x float> zeroinitializer, float %803, i32 0
  %805 = insertelement <4 x float> %804, float 1.000000e+00, i32 1
  %806 = insertelement <4 x float> %805, float 1.000000e+00, i32 2
  %807 = insertelement <4 x float> %806, float 1.000000e+00, i32 3
  %808 = getelementptr inbounds float, float* %1, i64 9
  %809 = load float, float* %808, align 4
  %810 = insertelement <4 x float> zeroinitializer, float %809, i32 0
  %811 = insertelement <4 x float> %810, float 0.000000e+00, i32 1
  %812 = insertelement <4 x float> %811, float 0.000000e+00, i32 2
  %813 = insertelement <4 x float> %812, float 0.000000e+00, i32 3
  %814 = call <4 x float> @llvm.fma.v4f32(<4 x float> %807, <4 x float> %813, <4 x float> %801)
  %815 = getelementptr inbounds float, float* %0, i64 7
  %816 = load float, float* %815, align 4
  %817 = insertelement <4 x float> zeroinitializer, float %816, i32 0
  %818 = insertelement <4 x float> %817, float 0.000000e+00, i32 1
  %819 = insertelement <4 x float> %818, float 0.000000e+00, i32 2
  %820 = insertelement <4 x float> %819, float 0.000000e+00, i32 3
  %821 = getelementptr inbounds float, float* %1, i64 13
  %822 = load float, float* %821, align 4
  %823 = insertelement <4 x float> zeroinitializer, float %822, i32 0
  %824 = insertelement <4 x float> %823, float 0.000000e+00, i32 1
  %825 = insertelement <4 x float> %824, float 0.000000e+00, i32 2
  %826 = insertelement <4 x float> %825, float 0.000000e+00, i32 3
  %827 = call <4 x float> @llvm.fma.v4f32(<4 x float> %820, <4 x float> %826, <4 x float> %814)
  %828 = extractelement <4 x float> %827, i32 0
  %829 = getelementptr inbounds float, float* %2, i64 5
  store float %828, float* %829, align 4
  %830 = extractelement <4 x float> %827, i32 1
  %831 = getelementptr inbounds float, float* %2, i64 6
  store float %830, float* %831, align 4
  %832 = getelementptr inbounds float, float* %0, i64 4
  %833 = load float, float* %832, align 4
  %834 = insertelement <4 x float> zeroinitializer, float %833, i32 0
  %835 = insertelement <4 x float> %834, float 0.000000e+00, i32 1
  %836 = insertelement <4 x float> %835, float 0.000000e+00, i32 2
  %837 = insertelement <4 x float> %836, float 0.000000e+00, i32 3
  %838 = getelementptr inbounds float, float* %1, i64 2
  %839 = load float, float* %838, align 4
  %840 = insertelement <4 x float> zeroinitializer, float %839, i32 0
  %841 = insertelement <4 x float> %840, float 0.000000e+00, i32 1
  %842 = insertelement <4 x float> %841, float 0.000000e+00, i32 2
  %843 = insertelement <4 x float> %842, float 0.000000e+00, i32 3
  %844 = call <4 x float> @llvm.fma.v4f32(<4 x float> %837, <4 x float> %843, <4 x float> zeroinitializer)
  %845 = extractelement <4 x float> %844, i32 0
  %846 = getelementptr inbounds float, float* %2, i64 6
  store float %845, float* %846, align 4
  %847 = getelementptr inbounds float, float* %0, i64 4
  %848 = load float, float* %847, align 4
  %849 = insertelement <4 x float> zeroinitializer, float %848, i32 0
  %850 = insertelement <4 x float> %849, float 1.000000e+00, i32 1
  %851 = insertelement <4 x float> %850, float 1.000000e+00, i32 2
  %852 = insertelement <4 x float> %851, float 1.000000e+00, i32 3
  %853 = getelementptr inbounds float, float* %1, i64 2
  %854 = load float, float* %853, align 4
  %855 = insertelement <4 x float> zeroinitializer, float %854, i32 0
  %856 = insertelement <4 x float> %855, float 0.000000e+00, i32 1
  %857 = insertelement <4 x float> %856, float 0.000000e+00, i32 2
  %858 = insertelement <4 x float> %857, float 0.000000e+00, i32 3
  %859 = fmul <4 x float> %852, %858
  %860 = fadd <4 x float> %859, zeroinitializer
  %861 = getelementptr inbounds float, float* %0, i64 5
  %862 = load float, float* %861, align 4
  %863 = insertelement <4 x float> zeroinitializer, float %862, i32 0
  %864 = insertelement <4 x float> %863, float 0.000000e+00, i32 1
  %865 = insertelement <4 x float> %864, float 0.000000e+00, i32 2
  %866 = insertelement <4 x float> %865, float 0.000000e+00, i32 3
  %867 = getelementptr inbounds float, float* %1, i64 6
  %868 = load float, float* %867, align 4
  %869 = insertelement <4 x float> zeroinitializer, float %868, i32 0
  %870 = insertelement <4 x float> %869, float 0.000000e+00, i32 1
  %871 = insertelement <4 x float> %870, float 0.000000e+00, i32 2
  %872 = insertelement <4 x float> %871, float 0.000000e+00, i32 3
  %873 = call <4 x float> @llvm.fma.v4f32(<4 x float> %866, <4 x float> %872, <4 x float> %860)
  %874 = extractelement <4 x float> %873, i32 0
  %875 = getelementptr inbounds float, float* %2, i64 6
  store float %874, float* %875, align 4
  %876 = getelementptr inbounds float, float* %0, i64 4
  %877 = load float, float* %876, align 4
  %878 = insertelement <4 x float> zeroinitializer, float %877, i32 0
  %879 = insertelement <4 x float> %878, float 1.000000e+00, i32 1
  %880 = insertelement <4 x float> %879, float 1.000000e+00, i32 2
  %881 = insertelement <4 x float> %880, float 1.000000e+00, i32 3
  %882 = getelementptr inbounds float, float* %1, i64 2
  %883 = load float, float* %882, align 4
  %884 = insertelement <4 x float> zeroinitializer, float %883, i32 0
  %885 = insertelement <4 x float> %884, float 0.000000e+00, i32 1
  %886 = insertelement <4 x float> %885, float 0.000000e+00, i32 2
  %887 = insertelement <4 x float> %886, float 0.000000e+00, i32 3
  %888 = fmul <4 x float> %881, %887
  %889 = fadd <4 x float> %888, zeroinitializer
  %890 = getelementptr inbounds float, float* %0, i64 5
  %891 = load float, float* %890, align 4
  %892 = insertelement <4 x float> zeroinitializer, float %891, i32 0
  %893 = insertelement <4 x float> %892, float 1.000000e+00, i32 1
  %894 = insertelement <4 x float> %893, float 1.000000e+00, i32 2
  %895 = insertelement <4 x float> %894, float 1.000000e+00, i32 3
  %896 = getelementptr inbounds float, float* %1, i64 6
  %897 = load float, float* %896, align 4
  %898 = insertelement <4 x float> zeroinitializer, float %897, i32 0
  %899 = insertelement <4 x float> %898, float 0.000000e+00, i32 1
  %900 = insertelement <4 x float> %899, float 0.000000e+00, i32 2
  %901 = insertelement <4 x float> %900, float 0.000000e+00, i32 3
  %902 = call <4 x float> @llvm.fma.v4f32(<4 x float> %895, <4 x float> %901, <4 x float> %889)
  %903 = getelementptr inbounds float, float* %0, i64 6
  %904 = load float, float* %903, align 4
  %905 = insertelement <4 x float> zeroinitializer, float %904, i32 0
  %906 = insertelement <4 x float> %905, float 0.000000e+00, i32 1
  %907 = insertelement <4 x float> %906, float 0.000000e+00, i32 2
  %908 = insertelement <4 x float> %907, float 0.000000e+00, i32 3
  %909 = getelementptr inbounds float, float* %1, i64 10
  %910 = load float, float* %909, align 4
  %911 = insertelement <4 x float> zeroinitializer, float %910, i32 0
  %912 = insertelement <4 x float> %911, float 0.000000e+00, i32 1
  %913 = insertelement <4 x float> %912, float 0.000000e+00, i32 2
  %914 = insertelement <4 x float> %913, float 0.000000e+00, i32 3
  %915 = call <4 x float> @llvm.fma.v4f32(<4 x float> %908, <4 x float> %914, <4 x float> %902)
  %916 = extractelement <4 x float> %915, i32 0
  %917 = getelementptr inbounds float, float* %2, i64 6
  store float %916, float* %917, align 4
  %918 = getelementptr inbounds float, float* %0, i64 4
  %919 = load float, float* %918, align 4
  %920 = insertelement <4 x float> zeroinitializer, float %919, i32 0
  %921 = insertelement <4 x float> %920, float 1.000000e+00, i32 1
  %922 = insertelement <4 x float> %921, float 1.000000e+00, i32 2
  %923 = insertelement <4 x float> %922, float 1.000000e+00, i32 3
  %924 = getelementptr inbounds float, float* %1, i64 2
  %925 = load float, float* %924, align 4
  %926 = insertelement <4 x float> zeroinitializer, float %925, i32 0
  %927 = insertelement <4 x float> %926, float 0.000000e+00, i32 1
  %928 = insertelement <4 x float> %927, float 0.000000e+00, i32 2
  %929 = insertelement <4 x float> %928, float 0.000000e+00, i32 3
  %930 = fmul <4 x float> %923, %929
  %931 = fadd <4 x float> %930, zeroinitializer
  %932 = getelementptr inbounds float, float* %0, i64 5
  %933 = load float, float* %932, align 4
  %934 = insertelement <4 x float> zeroinitializer, float %933, i32 0
  %935 = insertelement <4 x float> %934, float 1.000000e+00, i32 1
  %936 = insertelement <4 x float> %935, float 1.000000e+00, i32 2
  %937 = insertelement <4 x float> %936, float 1.000000e+00, i32 3
  %938 = getelementptr inbounds float, float* %1, i64 6
  %939 = load float, float* %938, align 4
  %940 = insertelement <4 x float> zeroinitializer, float %939, i32 0
  %941 = insertelement <4 x float> %940, float 0.000000e+00, i32 1
  %942 = insertelement <4 x float> %941, float 0.000000e+00, i32 2
  %943 = insertelement <4 x float> %942, float 0.000000e+00, i32 3
  %944 = call <4 x float> @llvm.fma.v4f32(<4 x float> %937, <4 x float> %943, <4 x float> %931)
  %945 = getelementptr inbounds float, float* %0, i64 6
  %946 = load float, float* %945, align 4
  %947 = insertelement <4 x float> zeroinitializer, float %946, i32 0
  %948 = insertelement <4 x float> %947, float 1.000000e+00, i32 1
  %949 = insertelement <4 x float> %948, float 1.000000e+00, i32 2
  %950 = insertelement <4 x float> %949, float 1.000000e+00, i32 3
  %951 = getelementptr inbounds float, float* %1, i64 10
  %952 = load float, float* %951, align 4
  %953 = insertelement <4 x float> zeroinitializer, float %952, i32 0
  %954 = insertelement <4 x float> %953, float 0.000000e+00, i32 1
  %955 = insertelement <4 x float> %954, float 0.000000e+00, i32 2
  %956 = insertelement <4 x float> %955, float 0.000000e+00, i32 3
  %957 = call <4 x float> @llvm.fma.v4f32(<4 x float> %950, <4 x float> %956, <4 x float> %944)
  %958 = getelementptr inbounds float, float* %0, i64 7
  %959 = load float, float* %958, align 4
  %960 = insertelement <4 x float> zeroinitializer, float %959, i32 0
  %961 = insertelement <4 x float> %960, float 0.000000e+00, i32 1
  %962 = insertelement <4 x float> %961, float 0.000000e+00, i32 2
  %963 = insertelement <4 x float> %962, float 0.000000e+00, i32 3
  %964 = getelementptr inbounds float, float* %1, i64 14
  %965 = load float, float* %964, align 4
  %966 = insertelement <4 x float> zeroinitializer, float %965, i32 0
  %967 = insertelement <4 x float> %966, float 0.000000e+00, i32 1
  %968 = insertelement <4 x float> %967, float 0.000000e+00, i32 2
  %969 = insertelement <4 x float> %968, float 0.000000e+00, i32 3
  %970 = call <4 x float> @llvm.fma.v4f32(<4 x float> %963, <4 x float> %969, <4 x float> %957)
  %971 = extractelement <4 x float> %970, i32 0
  %972 = getelementptr inbounds float, float* %2, i64 6
  store float %971, float* %972, align 4
  %973 = extractelement <4 x float> %970, i32 1
  %974 = getelementptr inbounds float, float* %2, i64 7
  store float %973, float* %974, align 4
  %975 = getelementptr inbounds float, float* %0, i64 4
  %976 = load float, float* %975, align 4
  %977 = insertelement <4 x float> zeroinitializer, float %976, i32 0
  %978 = insertelement <4 x float> %977, float 0.000000e+00, i32 1
  %979 = insertelement <4 x float> %978, float 0.000000e+00, i32 2
  %980 = insertelement <4 x float> %979, float 0.000000e+00, i32 3
  %981 = getelementptr inbounds float, float* %1, i64 3
  %982 = load float, float* %981, align 4
  %983 = insertelement <4 x float> zeroinitializer, float %982, i32 0
  %984 = insertelement <4 x float> %983, float 0.000000e+00, i32 1
  %985 = insertelement <4 x float> %984, float 0.000000e+00, i32 2
  %986 = insertelement <4 x float> %985, float 0.000000e+00, i32 3
  %987 = call <4 x float> @llvm.fma.v4f32(<4 x float> %980, <4 x float> %986, <4 x float> zeroinitializer)
  %988 = extractelement <4 x float> %987, i32 0
  %989 = getelementptr inbounds float, float* %2, i64 7
  store float %988, float* %989, align 4
  %990 = getelementptr inbounds float, float* %0, i64 4
  %991 = load float, float* %990, align 4
  %992 = insertelement <4 x float> zeroinitializer, float %991, i32 0
  %993 = insertelement <4 x float> %992, float 1.000000e+00, i32 1
  %994 = insertelement <4 x float> %993, float 1.000000e+00, i32 2
  %995 = insertelement <4 x float> %994, float 1.000000e+00, i32 3
  %996 = getelementptr inbounds float, float* %1, i64 3
  %997 = load float, float* %996, align 4
  %998 = insertelement <4 x float> zeroinitializer, float %997, i32 0
  %999 = insertelement <4 x float> %998, float 0.000000e+00, i32 1
  %1000 = insertelement <4 x float> %999, float 0.000000e+00, i32 2
  %1001 = insertelement <4 x float> %1000, float 0.000000e+00, i32 3
  %1002 = fmul <4 x float> %995, %1001
  %1003 = fadd <4 x float> %1002, zeroinitializer
  %1004 = getelementptr inbounds float, float* %0, i64 5
  %1005 = load float, float* %1004, align 4
  %1006 = insertelement <4 x float> zeroinitializer, float %1005, i32 0
  %1007 = insertelement <4 x float> %1006, float 0.000000e+00, i32 1
  %1008 = insertelement <4 x float> %1007, float 0.000000e+00, i32 2
  %1009 = insertelement <4 x float> %1008, float 0.000000e+00, i32 3
  %1010 = getelementptr inbounds float, float* %1, i64 7
  %1011 = load float, float* %1010, align 4
  %1012 = insertelement <4 x float> zeroinitializer, float %1011, i32 0
  %1013 = insertelement <4 x float> %1012, float 0.000000e+00, i32 1
  %1014 = insertelement <4 x float> %1013, float 0.000000e+00, i32 2
  %1015 = insertelement <4 x float> %1014, float 0.000000e+00, i32 3
  %1016 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1009, <4 x float> %1015, <4 x float> %1003)
  %1017 = extractelement <4 x float> %1016, i32 0
  %1018 = getelementptr inbounds float, float* %2, i64 7
  store float %1017, float* %1018, align 4
  %1019 = getelementptr inbounds float, float* %0, i64 4
  %1020 = load float, float* %1019, align 4
  %1021 = insertelement <4 x float> zeroinitializer, float %1020, i32 0
  %1022 = insertelement <4 x float> %1021, float 1.000000e+00, i32 1
  %1023 = insertelement <4 x float> %1022, float 1.000000e+00, i32 2
  %1024 = insertelement <4 x float> %1023, float 1.000000e+00, i32 3
  %1025 = getelementptr inbounds float, float* %1, i64 3
  %1026 = load float, float* %1025, align 4
  %1027 = insertelement <4 x float> zeroinitializer, float %1026, i32 0
  %1028 = insertelement <4 x float> %1027, float 0.000000e+00, i32 1
  %1029 = insertelement <4 x float> %1028, float 0.000000e+00, i32 2
  %1030 = insertelement <4 x float> %1029, float 0.000000e+00, i32 3
  %1031 = fmul <4 x float> %1024, %1030
  %1032 = fadd <4 x float> %1031, zeroinitializer
  %1033 = getelementptr inbounds float, float* %0, i64 5
  %1034 = load float, float* %1033, align 4
  %1035 = insertelement <4 x float> zeroinitializer, float %1034, i32 0
  %1036 = insertelement <4 x float> %1035, float 1.000000e+00, i32 1
  %1037 = insertelement <4 x float> %1036, float 1.000000e+00, i32 2
  %1038 = insertelement <4 x float> %1037, float 1.000000e+00, i32 3
  %1039 = getelementptr inbounds float, float* %1, i64 7
  %1040 = load float, float* %1039, align 4
  %1041 = insertelement <4 x float> zeroinitializer, float %1040, i32 0
  %1042 = insertelement <4 x float> %1041, float 0.000000e+00, i32 1
  %1043 = insertelement <4 x float> %1042, float 0.000000e+00, i32 2
  %1044 = insertelement <4 x float> %1043, float 0.000000e+00, i32 3
  %1045 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1038, <4 x float> %1044, <4 x float> %1032)
  %1046 = getelementptr inbounds float, float* %0, i64 6
  %1047 = load float, float* %1046, align 4
  %1048 = insertelement <4 x float> zeroinitializer, float %1047, i32 0
  %1049 = insertelement <4 x float> %1048, float 0.000000e+00, i32 1
  %1050 = insertelement <4 x float> %1049, float 0.000000e+00, i32 2
  %1051 = insertelement <4 x float> %1050, float 0.000000e+00, i32 3
  %1052 = getelementptr inbounds float, float* %1, i64 11
  %1053 = load float, float* %1052, align 4
  %1054 = insertelement <4 x float> zeroinitializer, float %1053, i32 0
  %1055 = insertelement <4 x float> %1054, float 0.000000e+00, i32 1
  %1056 = insertelement <4 x float> %1055, float 0.000000e+00, i32 2
  %1057 = insertelement <4 x float> %1056, float 0.000000e+00, i32 3
  %1058 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1051, <4 x float> %1057, <4 x float> %1045)
  %1059 = extractelement <4 x float> %1058, i32 0
  %1060 = getelementptr inbounds float, float* %2, i64 7
  store float %1059, float* %1060, align 4
  %1061 = getelementptr inbounds float, float* %0, i64 4
  %1062 = load float, float* %1061, align 4
  %1063 = insertelement <4 x float> zeroinitializer, float %1062, i32 0
  %1064 = insertelement <4 x float> %1063, float 1.000000e+00, i32 1
  %1065 = insertelement <4 x float> %1064, float 1.000000e+00, i32 2
  %1066 = insertelement <4 x float> %1065, float 1.000000e+00, i32 3
  %1067 = getelementptr inbounds float, float* %1, i64 3
  %1068 = load float, float* %1067, align 4
  %1069 = insertelement <4 x float> zeroinitializer, float %1068, i32 0
  %1070 = insertelement <4 x float> %1069, float 0.000000e+00, i32 1
  %1071 = insertelement <4 x float> %1070, float 0.000000e+00, i32 2
  %1072 = insertelement <4 x float> %1071, float 0.000000e+00, i32 3
  %1073 = fmul <4 x float> %1066, %1072
  %1074 = fadd <4 x float> %1073, zeroinitializer
  %1075 = getelementptr inbounds float, float* %0, i64 5
  %1076 = load float, float* %1075, align 4
  %1077 = insertelement <4 x float> zeroinitializer, float %1076, i32 0
  %1078 = insertelement <4 x float> %1077, float 1.000000e+00, i32 1
  %1079 = insertelement <4 x float> %1078, float 1.000000e+00, i32 2
  %1080 = insertelement <4 x float> %1079, float 1.000000e+00, i32 3
  %1081 = getelementptr inbounds float, float* %1, i64 7
  %1082 = load float, float* %1081, align 4
  %1083 = insertelement <4 x float> zeroinitializer, float %1082, i32 0
  %1084 = insertelement <4 x float> %1083, float 0.000000e+00, i32 1
  %1085 = insertelement <4 x float> %1084, float 0.000000e+00, i32 2
  %1086 = insertelement <4 x float> %1085, float 0.000000e+00, i32 3
  %1087 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1080, <4 x float> %1086, <4 x float> %1074)
  %1088 = getelementptr inbounds float, float* %0, i64 6
  %1089 = load float, float* %1088, align 4
  %1090 = insertelement <4 x float> zeroinitializer, float %1089, i32 0
  %1091 = insertelement <4 x float> %1090, float 1.000000e+00, i32 1
  %1092 = insertelement <4 x float> %1091, float 1.000000e+00, i32 2
  %1093 = insertelement <4 x float> %1092, float 1.000000e+00, i32 3
  %1094 = getelementptr inbounds float, float* %1, i64 11
  %1095 = load float, float* %1094, align 4
  %1096 = insertelement <4 x float> zeroinitializer, float %1095, i32 0
  %1097 = insertelement <4 x float> %1096, float 0.000000e+00, i32 1
  %1098 = insertelement <4 x float> %1097, float 0.000000e+00, i32 2
  %1099 = insertelement <4 x float> %1098, float 0.000000e+00, i32 3
  %1100 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1093, <4 x float> %1099, <4 x float> %1087)
  %1101 = getelementptr inbounds float, float* %0, i64 7
  %1102 = load float, float* %1101, align 4
  %1103 = insertelement <4 x float> zeroinitializer, float %1102, i32 0
  %1104 = insertelement <4 x float> %1103, float 0.000000e+00, i32 1
  %1105 = insertelement <4 x float> %1104, float 0.000000e+00, i32 2
  %1106 = insertelement <4 x float> %1105, float 0.000000e+00, i32 3
  %1107 = getelementptr inbounds float, float* %1, i64 15
  %1108 = load float, float* %1107, align 4
  %1109 = insertelement <4 x float> zeroinitializer, float %1108, i32 0
  %1110 = insertelement <4 x float> %1109, float 0.000000e+00, i32 1
  %1111 = insertelement <4 x float> %1110, float 0.000000e+00, i32 2
  %1112 = insertelement <4 x float> %1111, float 0.000000e+00, i32 3
  %1113 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1106, <4 x float> %1112, <4 x float> %1100)
  %1114 = extractelement <4 x float> %1113, i32 0
  %1115 = getelementptr inbounds float, float* %2, i64 7
  store float %1114, float* %1115, align 4
  %1116 = getelementptr inbounds float, float* %2, i64 8
  store float 0.000000e+00, float* %1116, align 4
  %1117 = getelementptr inbounds float, float* %0, i64 8
  %1118 = load float, float* %1117, align 4
  %1119 = insertelement <4 x float> zeroinitializer, float %1118, i32 0
  %1120 = insertelement <4 x float> %1119, float 0.000000e+00, i32 1
  %1121 = insertelement <4 x float> %1120, float 0.000000e+00, i32 2
  %1122 = insertelement <4 x float> %1121, float 0.000000e+00, i32 3
  %1123 = load float, float* %1, align 4
  %1124 = insertelement <4 x float> zeroinitializer, float %1123, i32 0
  %1125 = insertelement <4 x float> %1124, float 0.000000e+00, i32 1
  %1126 = insertelement <4 x float> %1125, float 0.000000e+00, i32 2
  %1127 = insertelement <4 x float> %1126, float 0.000000e+00, i32 3
  %1128 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1122, <4 x float> %1127, <4 x float> zeroinitializer)
  %1129 = extractelement <4 x float> %1128, i32 0
  %1130 = getelementptr inbounds float, float* %2, i64 8
  store float %1129, float* %1130, align 4
  %1131 = getelementptr inbounds float, float* %0, i64 8
  %1132 = load float, float* %1131, align 4
  %1133 = insertelement <4 x float> zeroinitializer, float %1132, i32 0
  %1134 = insertelement <4 x float> %1133, float 1.000000e+00, i32 1
  %1135 = insertelement <4 x float> %1134, float 1.000000e+00, i32 2
  %1136 = insertelement <4 x float> %1135, float 1.000000e+00, i32 3
  %1137 = load float, float* %1, align 4
  %1138 = insertelement <4 x float> zeroinitializer, float %1137, i32 0
  %1139 = insertelement <4 x float> %1138, float 0.000000e+00, i32 1
  %1140 = insertelement <4 x float> %1139, float 0.000000e+00, i32 2
  %1141 = insertelement <4 x float> %1140, float 0.000000e+00, i32 3
  %1142 = fmul <4 x float> %1136, %1141
  %1143 = fadd <4 x float> %1142, zeroinitializer
  %1144 = getelementptr inbounds float, float* %0, i64 9
  %1145 = load float, float* %1144, align 4
  %1146 = insertelement <4 x float> zeroinitializer, float %1145, i32 0
  %1147 = insertelement <4 x float> %1146, float 0.000000e+00, i32 1
  %1148 = insertelement <4 x float> %1147, float 0.000000e+00, i32 2
  %1149 = insertelement <4 x float> %1148, float 0.000000e+00, i32 3
  %1150 = getelementptr inbounds float, float* %1, i64 4
  %1151 = load float, float* %1150, align 4
  %1152 = insertelement <4 x float> zeroinitializer, float %1151, i32 0
  %1153 = insertelement <4 x float> %1152, float 0.000000e+00, i32 1
  %1154 = insertelement <4 x float> %1153, float 0.000000e+00, i32 2
  %1155 = insertelement <4 x float> %1154, float 0.000000e+00, i32 3
  %1156 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1149, <4 x float> %1155, <4 x float> %1143)
  %1157 = extractelement <4 x float> %1156, i32 0
  %1158 = getelementptr inbounds float, float* %2, i64 8
  store float %1157, float* %1158, align 4
  %1159 = getelementptr inbounds float, float* %0, i64 8
  %1160 = load float, float* %1159, align 4
  %1161 = insertelement <4 x float> zeroinitializer, float %1160, i32 0
  %1162 = insertelement <4 x float> %1161, float 1.000000e+00, i32 1
  %1163 = insertelement <4 x float> %1162, float 1.000000e+00, i32 2
  %1164 = insertelement <4 x float> %1163, float 1.000000e+00, i32 3
  %1165 = load float, float* %1, align 4
  %1166 = insertelement <4 x float> zeroinitializer, float %1165, i32 0
  %1167 = insertelement <4 x float> %1166, float 0.000000e+00, i32 1
  %1168 = insertelement <4 x float> %1167, float 0.000000e+00, i32 2
  %1169 = insertelement <4 x float> %1168, float 0.000000e+00, i32 3
  %1170 = fmul <4 x float> %1164, %1169
  %1171 = fadd <4 x float> %1170, zeroinitializer
  %1172 = getelementptr inbounds float, float* %0, i64 9
  %1173 = load float, float* %1172, align 4
  %1174 = insertelement <4 x float> zeroinitializer, float %1173, i32 0
  %1175 = insertelement <4 x float> %1174, float 1.000000e+00, i32 1
  %1176 = insertelement <4 x float> %1175, float 1.000000e+00, i32 2
  %1177 = insertelement <4 x float> %1176, float 1.000000e+00, i32 3
  %1178 = getelementptr inbounds float, float* %1, i64 4
  %1179 = load float, float* %1178, align 4
  %1180 = insertelement <4 x float> zeroinitializer, float %1179, i32 0
  %1181 = insertelement <4 x float> %1180, float 0.000000e+00, i32 1
  %1182 = insertelement <4 x float> %1181, float 0.000000e+00, i32 2
  %1183 = insertelement <4 x float> %1182, float 0.000000e+00, i32 3
  %1184 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1177, <4 x float> %1183, <4 x float> %1171)
  %1185 = getelementptr inbounds float, float* %0, i64 10
  %1186 = load float, float* %1185, align 4
  %1187 = insertelement <4 x float> zeroinitializer, float %1186, i32 0
  %1188 = insertelement <4 x float> %1187, float 0.000000e+00, i32 1
  %1189 = insertelement <4 x float> %1188, float 0.000000e+00, i32 2
  %1190 = insertelement <4 x float> %1189, float 0.000000e+00, i32 3
  %1191 = getelementptr inbounds float, float* %1, i64 8
  %1192 = load float, float* %1191, align 4
  %1193 = insertelement <4 x float> zeroinitializer, float %1192, i32 0
  %1194 = insertelement <4 x float> %1193, float 0.000000e+00, i32 1
  %1195 = insertelement <4 x float> %1194, float 0.000000e+00, i32 2
  %1196 = insertelement <4 x float> %1195, float 0.000000e+00, i32 3
  %1197 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1190, <4 x float> %1196, <4 x float> %1184)
  %1198 = extractelement <4 x float> %1197, i32 0
  %1199 = getelementptr inbounds float, float* %2, i64 8
  store float %1198, float* %1199, align 4
  %1200 = getelementptr inbounds float, float* %0, i64 8
  %1201 = load float, float* %1200, align 4
  %1202 = insertelement <4 x float> zeroinitializer, float %1201, i32 0
  %1203 = insertelement <4 x float> %1202, float 1.000000e+00, i32 1
  %1204 = insertelement <4 x float> %1203, float 1.000000e+00, i32 2
  %1205 = insertelement <4 x float> %1204, float 1.000000e+00, i32 3
  %1206 = load float, float* %1, align 4
  %1207 = insertelement <4 x float> zeroinitializer, float %1206, i32 0
  %1208 = insertelement <4 x float> %1207, float 0.000000e+00, i32 1
  %1209 = insertelement <4 x float> %1208, float 0.000000e+00, i32 2
  %1210 = insertelement <4 x float> %1209, float 0.000000e+00, i32 3
  %1211 = fmul <4 x float> %1205, %1210
  %1212 = fadd <4 x float> %1211, zeroinitializer
  %1213 = getelementptr inbounds float, float* %0, i64 9
  %1214 = load float, float* %1213, align 4
  %1215 = insertelement <4 x float> zeroinitializer, float %1214, i32 0
  %1216 = insertelement <4 x float> %1215, float 1.000000e+00, i32 1
  %1217 = insertelement <4 x float> %1216, float 1.000000e+00, i32 2
  %1218 = insertelement <4 x float> %1217, float 1.000000e+00, i32 3
  %1219 = getelementptr inbounds float, float* %1, i64 4
  %1220 = load float, float* %1219, align 4
  %1221 = insertelement <4 x float> zeroinitializer, float %1220, i32 0
  %1222 = insertelement <4 x float> %1221, float 0.000000e+00, i32 1
  %1223 = insertelement <4 x float> %1222, float 0.000000e+00, i32 2
  %1224 = insertelement <4 x float> %1223, float 0.000000e+00, i32 3
  %1225 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1218, <4 x float> %1224, <4 x float> %1212)
  %1226 = getelementptr inbounds float, float* %0, i64 10
  %1227 = load float, float* %1226, align 4
  %1228 = insertelement <4 x float> zeroinitializer, float %1227, i32 0
  %1229 = insertelement <4 x float> %1228, float 1.000000e+00, i32 1
  %1230 = insertelement <4 x float> %1229, float 1.000000e+00, i32 2
  %1231 = insertelement <4 x float> %1230, float 1.000000e+00, i32 3
  %1232 = getelementptr inbounds float, float* %1, i64 8
  %1233 = load float, float* %1232, align 4
  %1234 = insertelement <4 x float> zeroinitializer, float %1233, i32 0
  %1235 = insertelement <4 x float> %1234, float 0.000000e+00, i32 1
  %1236 = insertelement <4 x float> %1235, float 0.000000e+00, i32 2
  %1237 = insertelement <4 x float> %1236, float 0.000000e+00, i32 3
  %1238 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1231, <4 x float> %1237, <4 x float> %1225)
  %1239 = getelementptr inbounds float, float* %0, i64 11
  %1240 = load float, float* %1239, align 4
  %1241 = insertelement <4 x float> zeroinitializer, float %1240, i32 0
  %1242 = insertelement <4 x float> %1241, float 0.000000e+00, i32 1
  %1243 = insertelement <4 x float> %1242, float 0.000000e+00, i32 2
  %1244 = insertelement <4 x float> %1243, float 0.000000e+00, i32 3
  %1245 = getelementptr inbounds float, float* %1, i64 12
  %1246 = load float, float* %1245, align 4
  %1247 = insertelement <4 x float> zeroinitializer, float %1246, i32 0
  %1248 = insertelement <4 x float> %1247, float 0.000000e+00, i32 1
  %1249 = insertelement <4 x float> %1248, float 0.000000e+00, i32 2
  %1250 = insertelement <4 x float> %1249, float 0.000000e+00, i32 3
  %1251 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1244, <4 x float> %1250, <4 x float> %1238)
  %1252 = extractelement <4 x float> %1251, i32 0
  %1253 = getelementptr inbounds float, float* %2, i64 8
  store float %1252, float* %1253, align 4
  %1254 = extractelement <4 x float> %1251, i32 1
  %1255 = getelementptr inbounds float, float* %2, i64 9
  store float %1254, float* %1255, align 4
  %1256 = getelementptr inbounds float, float* %0, i64 8
  %1257 = load float, float* %1256, align 4
  %1258 = insertelement <4 x float> zeroinitializer, float %1257, i32 0
  %1259 = insertelement <4 x float> %1258, float 0.000000e+00, i32 1
  %1260 = insertelement <4 x float> %1259, float 0.000000e+00, i32 2
  %1261 = insertelement <4 x float> %1260, float 0.000000e+00, i32 3
  %1262 = getelementptr inbounds float, float* %1, i64 1
  %1263 = load float, float* %1262, align 4
  %1264 = insertelement <4 x float> zeroinitializer, float %1263, i32 0
  %1265 = insertelement <4 x float> %1264, float 0.000000e+00, i32 1
  %1266 = insertelement <4 x float> %1265, float 0.000000e+00, i32 2
  %1267 = insertelement <4 x float> %1266, float 0.000000e+00, i32 3
  %1268 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1261, <4 x float> %1267, <4 x float> zeroinitializer)
  %1269 = extractelement <4 x float> %1268, i32 0
  %1270 = getelementptr inbounds float, float* %2, i64 9
  store float %1269, float* %1270, align 4
  %1271 = getelementptr inbounds float, float* %0, i64 8
  %1272 = load float, float* %1271, align 4
  %1273 = insertelement <4 x float> zeroinitializer, float %1272, i32 0
  %1274 = insertelement <4 x float> %1273, float 1.000000e+00, i32 1
  %1275 = insertelement <4 x float> %1274, float 1.000000e+00, i32 2
  %1276 = insertelement <4 x float> %1275, float 1.000000e+00, i32 3
  %1277 = getelementptr inbounds float, float* %1, i64 1
  %1278 = load float, float* %1277, align 4
  %1279 = insertelement <4 x float> zeroinitializer, float %1278, i32 0
  %1280 = insertelement <4 x float> %1279, float 0.000000e+00, i32 1
  %1281 = insertelement <4 x float> %1280, float 0.000000e+00, i32 2
  %1282 = insertelement <4 x float> %1281, float 0.000000e+00, i32 3
  %1283 = fmul <4 x float> %1276, %1282
  %1284 = fadd <4 x float> %1283, zeroinitializer
  %1285 = getelementptr inbounds float, float* %0, i64 9
  %1286 = load float, float* %1285, align 4
  %1287 = insertelement <4 x float> zeroinitializer, float %1286, i32 0
  %1288 = insertelement <4 x float> %1287, float 0.000000e+00, i32 1
  %1289 = insertelement <4 x float> %1288, float 0.000000e+00, i32 2
  %1290 = insertelement <4 x float> %1289, float 0.000000e+00, i32 3
  %1291 = getelementptr inbounds float, float* %1, i64 5
  %1292 = load float, float* %1291, align 4
  %1293 = insertelement <4 x float> zeroinitializer, float %1292, i32 0
  %1294 = insertelement <4 x float> %1293, float 0.000000e+00, i32 1
  %1295 = insertelement <4 x float> %1294, float 0.000000e+00, i32 2
  %1296 = insertelement <4 x float> %1295, float 0.000000e+00, i32 3
  %1297 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1290, <4 x float> %1296, <4 x float> %1284)
  %1298 = extractelement <4 x float> %1297, i32 0
  %1299 = getelementptr inbounds float, float* %2, i64 9
  store float %1298, float* %1299, align 4
  %1300 = getelementptr inbounds float, float* %0, i64 8
  %1301 = load float, float* %1300, align 4
  %1302 = insertelement <4 x float> zeroinitializer, float %1301, i32 0
  %1303 = insertelement <4 x float> %1302, float 1.000000e+00, i32 1
  %1304 = insertelement <4 x float> %1303, float 1.000000e+00, i32 2
  %1305 = insertelement <4 x float> %1304, float 1.000000e+00, i32 3
  %1306 = getelementptr inbounds float, float* %1, i64 1
  %1307 = load float, float* %1306, align 4
  %1308 = insertelement <4 x float> zeroinitializer, float %1307, i32 0
  %1309 = insertelement <4 x float> %1308, float 0.000000e+00, i32 1
  %1310 = insertelement <4 x float> %1309, float 0.000000e+00, i32 2
  %1311 = insertelement <4 x float> %1310, float 0.000000e+00, i32 3
  %1312 = fmul <4 x float> %1305, %1311
  %1313 = fadd <4 x float> %1312, zeroinitializer
  %1314 = getelementptr inbounds float, float* %0, i64 9
  %1315 = load float, float* %1314, align 4
  %1316 = insertelement <4 x float> zeroinitializer, float %1315, i32 0
  %1317 = insertelement <4 x float> %1316, float 1.000000e+00, i32 1
  %1318 = insertelement <4 x float> %1317, float 1.000000e+00, i32 2
  %1319 = insertelement <4 x float> %1318, float 1.000000e+00, i32 3
  %1320 = getelementptr inbounds float, float* %1, i64 5
  %1321 = load float, float* %1320, align 4
  %1322 = insertelement <4 x float> zeroinitializer, float %1321, i32 0
  %1323 = insertelement <4 x float> %1322, float 0.000000e+00, i32 1
  %1324 = insertelement <4 x float> %1323, float 0.000000e+00, i32 2
  %1325 = insertelement <4 x float> %1324, float 0.000000e+00, i32 3
  %1326 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1319, <4 x float> %1325, <4 x float> %1313)
  %1327 = getelementptr inbounds float, float* %0, i64 10
  %1328 = load float, float* %1327, align 4
  %1329 = insertelement <4 x float> zeroinitializer, float %1328, i32 0
  %1330 = insertelement <4 x float> %1329, float 0.000000e+00, i32 1
  %1331 = insertelement <4 x float> %1330, float 0.000000e+00, i32 2
  %1332 = insertelement <4 x float> %1331, float 0.000000e+00, i32 3
  %1333 = getelementptr inbounds float, float* %1, i64 9
  %1334 = load float, float* %1333, align 4
  %1335 = insertelement <4 x float> zeroinitializer, float %1334, i32 0
  %1336 = insertelement <4 x float> %1335, float 0.000000e+00, i32 1
  %1337 = insertelement <4 x float> %1336, float 0.000000e+00, i32 2
  %1338 = insertelement <4 x float> %1337, float 0.000000e+00, i32 3
  %1339 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1332, <4 x float> %1338, <4 x float> %1326)
  %1340 = extractelement <4 x float> %1339, i32 0
  %1341 = getelementptr inbounds float, float* %2, i64 9
  store float %1340, float* %1341, align 4
  %1342 = getelementptr inbounds float, float* %0, i64 8
  %1343 = load float, float* %1342, align 4
  %1344 = insertelement <4 x float> zeroinitializer, float %1343, i32 0
  %1345 = insertelement <4 x float> %1344, float 1.000000e+00, i32 1
  %1346 = insertelement <4 x float> %1345, float 1.000000e+00, i32 2
  %1347 = insertelement <4 x float> %1346, float 1.000000e+00, i32 3
  %1348 = getelementptr inbounds float, float* %1, i64 1
  %1349 = load float, float* %1348, align 4
  %1350 = insertelement <4 x float> zeroinitializer, float %1349, i32 0
  %1351 = insertelement <4 x float> %1350, float 0.000000e+00, i32 1
  %1352 = insertelement <4 x float> %1351, float 0.000000e+00, i32 2
  %1353 = insertelement <4 x float> %1352, float 0.000000e+00, i32 3
  %1354 = fmul <4 x float> %1347, %1353
  %1355 = fadd <4 x float> %1354, zeroinitializer
  %1356 = getelementptr inbounds float, float* %0, i64 9
  %1357 = load float, float* %1356, align 4
  %1358 = insertelement <4 x float> zeroinitializer, float %1357, i32 0
  %1359 = insertelement <4 x float> %1358, float 1.000000e+00, i32 1
  %1360 = insertelement <4 x float> %1359, float 1.000000e+00, i32 2
  %1361 = insertelement <4 x float> %1360, float 1.000000e+00, i32 3
  %1362 = getelementptr inbounds float, float* %1, i64 5
  %1363 = load float, float* %1362, align 4
  %1364 = insertelement <4 x float> zeroinitializer, float %1363, i32 0
  %1365 = insertelement <4 x float> %1364, float 0.000000e+00, i32 1
  %1366 = insertelement <4 x float> %1365, float 0.000000e+00, i32 2
  %1367 = insertelement <4 x float> %1366, float 0.000000e+00, i32 3
  %1368 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1361, <4 x float> %1367, <4 x float> %1355)
  %1369 = getelementptr inbounds float, float* %0, i64 10
  %1370 = load float, float* %1369, align 4
  %1371 = insertelement <4 x float> zeroinitializer, float %1370, i32 0
  %1372 = insertelement <4 x float> %1371, float 1.000000e+00, i32 1
  %1373 = insertelement <4 x float> %1372, float 1.000000e+00, i32 2
  %1374 = insertelement <4 x float> %1373, float 1.000000e+00, i32 3
  %1375 = getelementptr inbounds float, float* %1, i64 9
  %1376 = load float, float* %1375, align 4
  %1377 = insertelement <4 x float> zeroinitializer, float %1376, i32 0
  %1378 = insertelement <4 x float> %1377, float 0.000000e+00, i32 1
  %1379 = insertelement <4 x float> %1378, float 0.000000e+00, i32 2
  %1380 = insertelement <4 x float> %1379, float 0.000000e+00, i32 3
  %1381 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1374, <4 x float> %1380, <4 x float> %1368)
  %1382 = getelementptr inbounds float, float* %0, i64 11
  %1383 = load float, float* %1382, align 4
  %1384 = insertelement <4 x float> zeroinitializer, float %1383, i32 0
  %1385 = insertelement <4 x float> %1384, float 0.000000e+00, i32 1
  %1386 = insertelement <4 x float> %1385, float 0.000000e+00, i32 2
  %1387 = insertelement <4 x float> %1386, float 0.000000e+00, i32 3
  %1388 = getelementptr inbounds float, float* %1, i64 13
  %1389 = load float, float* %1388, align 4
  %1390 = insertelement <4 x float> zeroinitializer, float %1389, i32 0
  %1391 = insertelement <4 x float> %1390, float 0.000000e+00, i32 1
  %1392 = insertelement <4 x float> %1391, float 0.000000e+00, i32 2
  %1393 = insertelement <4 x float> %1392, float 0.000000e+00, i32 3
  %1394 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1387, <4 x float> %1393, <4 x float> %1381)
  %1395 = extractelement <4 x float> %1394, i32 0
  %1396 = getelementptr inbounds float, float* %2, i64 9
  store float %1395, float* %1396, align 4
  %1397 = extractelement <4 x float> %1394, i32 1
  %1398 = getelementptr inbounds float, float* %2, i64 10
  store float %1397, float* %1398, align 4
  %1399 = getelementptr inbounds float, float* %0, i64 8
  %1400 = load float, float* %1399, align 4
  %1401 = insertelement <4 x float> zeroinitializer, float %1400, i32 0
  %1402 = insertelement <4 x float> %1401, float 0.000000e+00, i32 1
  %1403 = insertelement <4 x float> %1402, float 0.000000e+00, i32 2
  %1404 = insertelement <4 x float> %1403, float 0.000000e+00, i32 3
  %1405 = getelementptr inbounds float, float* %1, i64 2
  %1406 = load float, float* %1405, align 4
  %1407 = insertelement <4 x float> zeroinitializer, float %1406, i32 0
  %1408 = insertelement <4 x float> %1407, float 0.000000e+00, i32 1
  %1409 = insertelement <4 x float> %1408, float 0.000000e+00, i32 2
  %1410 = insertelement <4 x float> %1409, float 0.000000e+00, i32 3
  %1411 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1404, <4 x float> %1410, <4 x float> zeroinitializer)
  %1412 = extractelement <4 x float> %1411, i32 0
  %1413 = getelementptr inbounds float, float* %2, i64 10
  store float %1412, float* %1413, align 4
  %1414 = getelementptr inbounds float, float* %0, i64 8
  %1415 = load float, float* %1414, align 4
  %1416 = insertelement <4 x float> zeroinitializer, float %1415, i32 0
  %1417 = insertelement <4 x float> %1416, float 1.000000e+00, i32 1
  %1418 = insertelement <4 x float> %1417, float 1.000000e+00, i32 2
  %1419 = insertelement <4 x float> %1418, float 1.000000e+00, i32 3
  %1420 = getelementptr inbounds float, float* %1, i64 2
  %1421 = load float, float* %1420, align 4
  %1422 = insertelement <4 x float> zeroinitializer, float %1421, i32 0
  %1423 = insertelement <4 x float> %1422, float 0.000000e+00, i32 1
  %1424 = insertelement <4 x float> %1423, float 0.000000e+00, i32 2
  %1425 = insertelement <4 x float> %1424, float 0.000000e+00, i32 3
  %1426 = fmul <4 x float> %1419, %1425
  %1427 = fadd <4 x float> %1426, zeroinitializer
  %1428 = getelementptr inbounds float, float* %0, i64 9
  %1429 = load float, float* %1428, align 4
  %1430 = insertelement <4 x float> zeroinitializer, float %1429, i32 0
  %1431 = insertelement <4 x float> %1430, float 0.000000e+00, i32 1
  %1432 = insertelement <4 x float> %1431, float 0.000000e+00, i32 2
  %1433 = insertelement <4 x float> %1432, float 0.000000e+00, i32 3
  %1434 = getelementptr inbounds float, float* %1, i64 6
  %1435 = load float, float* %1434, align 4
  %1436 = insertelement <4 x float> zeroinitializer, float %1435, i32 0
  %1437 = insertelement <4 x float> %1436, float 0.000000e+00, i32 1
  %1438 = insertelement <4 x float> %1437, float 0.000000e+00, i32 2
  %1439 = insertelement <4 x float> %1438, float 0.000000e+00, i32 3
  %1440 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1433, <4 x float> %1439, <4 x float> %1427)
  %1441 = extractelement <4 x float> %1440, i32 0
  %1442 = getelementptr inbounds float, float* %2, i64 10
  store float %1441, float* %1442, align 4
  %1443 = getelementptr inbounds float, float* %0, i64 8
  %1444 = load float, float* %1443, align 4
  %1445 = insertelement <4 x float> zeroinitializer, float %1444, i32 0
  %1446 = insertelement <4 x float> %1445, float 1.000000e+00, i32 1
  %1447 = insertelement <4 x float> %1446, float 1.000000e+00, i32 2
  %1448 = insertelement <4 x float> %1447, float 1.000000e+00, i32 3
  %1449 = getelementptr inbounds float, float* %1, i64 2
  %1450 = load float, float* %1449, align 4
  %1451 = insertelement <4 x float> zeroinitializer, float %1450, i32 0
  %1452 = insertelement <4 x float> %1451, float 0.000000e+00, i32 1
  %1453 = insertelement <4 x float> %1452, float 0.000000e+00, i32 2
  %1454 = insertelement <4 x float> %1453, float 0.000000e+00, i32 3
  %1455 = fmul <4 x float> %1448, %1454
  %1456 = fadd <4 x float> %1455, zeroinitializer
  %1457 = getelementptr inbounds float, float* %0, i64 9
  %1458 = load float, float* %1457, align 4
  %1459 = insertelement <4 x float> zeroinitializer, float %1458, i32 0
  %1460 = insertelement <4 x float> %1459, float 1.000000e+00, i32 1
  %1461 = insertelement <4 x float> %1460, float 1.000000e+00, i32 2
  %1462 = insertelement <4 x float> %1461, float 1.000000e+00, i32 3
  %1463 = getelementptr inbounds float, float* %1, i64 6
  %1464 = load float, float* %1463, align 4
  %1465 = insertelement <4 x float> zeroinitializer, float %1464, i32 0
  %1466 = insertelement <4 x float> %1465, float 0.000000e+00, i32 1
  %1467 = insertelement <4 x float> %1466, float 0.000000e+00, i32 2
  %1468 = insertelement <4 x float> %1467, float 0.000000e+00, i32 3
  %1469 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1462, <4 x float> %1468, <4 x float> %1456)
  %1470 = getelementptr inbounds float, float* %0, i64 10
  %1471 = load float, float* %1470, align 4
  %1472 = insertelement <4 x float> zeroinitializer, float %1471, i32 0
  %1473 = insertelement <4 x float> %1472, float 0.000000e+00, i32 1
  %1474 = insertelement <4 x float> %1473, float 0.000000e+00, i32 2
  %1475 = insertelement <4 x float> %1474, float 0.000000e+00, i32 3
  %1476 = getelementptr inbounds float, float* %1, i64 10
  %1477 = load float, float* %1476, align 4
  %1478 = insertelement <4 x float> zeroinitializer, float %1477, i32 0
  %1479 = insertelement <4 x float> %1478, float 0.000000e+00, i32 1
  %1480 = insertelement <4 x float> %1479, float 0.000000e+00, i32 2
  %1481 = insertelement <4 x float> %1480, float 0.000000e+00, i32 3
  %1482 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1475, <4 x float> %1481, <4 x float> %1469)
  %1483 = extractelement <4 x float> %1482, i32 0
  %1484 = getelementptr inbounds float, float* %2, i64 10
  store float %1483, float* %1484, align 4
  %1485 = getelementptr inbounds float, float* %0, i64 8
  %1486 = load float, float* %1485, align 4
  %1487 = insertelement <4 x float> zeroinitializer, float %1486, i32 0
  %1488 = insertelement <4 x float> %1487, float 1.000000e+00, i32 1
  %1489 = insertelement <4 x float> %1488, float 1.000000e+00, i32 2
  %1490 = insertelement <4 x float> %1489, float 1.000000e+00, i32 3
  %1491 = getelementptr inbounds float, float* %1, i64 2
  %1492 = load float, float* %1491, align 4
  %1493 = insertelement <4 x float> zeroinitializer, float %1492, i32 0
  %1494 = insertelement <4 x float> %1493, float 0.000000e+00, i32 1
  %1495 = insertelement <4 x float> %1494, float 0.000000e+00, i32 2
  %1496 = insertelement <4 x float> %1495, float 0.000000e+00, i32 3
  %1497 = fmul <4 x float> %1490, %1496
  %1498 = fadd <4 x float> %1497, zeroinitializer
  %1499 = getelementptr inbounds float, float* %0, i64 9
  %1500 = load float, float* %1499, align 4
  %1501 = insertelement <4 x float> zeroinitializer, float %1500, i32 0
  %1502 = insertelement <4 x float> %1501, float 1.000000e+00, i32 1
  %1503 = insertelement <4 x float> %1502, float 1.000000e+00, i32 2
  %1504 = insertelement <4 x float> %1503, float 1.000000e+00, i32 3
  %1505 = getelementptr inbounds float, float* %1, i64 6
  %1506 = load float, float* %1505, align 4
  %1507 = insertelement <4 x float> zeroinitializer, float %1506, i32 0
  %1508 = insertelement <4 x float> %1507, float 0.000000e+00, i32 1
  %1509 = insertelement <4 x float> %1508, float 0.000000e+00, i32 2
  %1510 = insertelement <4 x float> %1509, float 0.000000e+00, i32 3
  %1511 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1504, <4 x float> %1510, <4 x float> %1498)
  %1512 = getelementptr inbounds float, float* %0, i64 10
  %1513 = load float, float* %1512, align 4
  %1514 = insertelement <4 x float> zeroinitializer, float %1513, i32 0
  %1515 = insertelement <4 x float> %1514, float 1.000000e+00, i32 1
  %1516 = insertelement <4 x float> %1515, float 1.000000e+00, i32 2
  %1517 = insertelement <4 x float> %1516, float 1.000000e+00, i32 3
  %1518 = getelementptr inbounds float, float* %1, i64 10
  %1519 = load float, float* %1518, align 4
  %1520 = insertelement <4 x float> zeroinitializer, float %1519, i32 0
  %1521 = insertelement <4 x float> %1520, float 0.000000e+00, i32 1
  %1522 = insertelement <4 x float> %1521, float 0.000000e+00, i32 2
  %1523 = insertelement <4 x float> %1522, float 0.000000e+00, i32 3
  %1524 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1517, <4 x float> %1523, <4 x float> %1511)
  %1525 = getelementptr inbounds float, float* %0, i64 11
  %1526 = load float, float* %1525, align 4
  %1527 = insertelement <4 x float> zeroinitializer, float %1526, i32 0
  %1528 = insertelement <4 x float> %1527, float 0.000000e+00, i32 1
  %1529 = insertelement <4 x float> %1528, float 0.000000e+00, i32 2
  %1530 = insertelement <4 x float> %1529, float 0.000000e+00, i32 3
  %1531 = getelementptr inbounds float, float* %1, i64 14
  %1532 = load float, float* %1531, align 4
  %1533 = insertelement <4 x float> zeroinitializer, float %1532, i32 0
  %1534 = insertelement <4 x float> %1533, float 0.000000e+00, i32 1
  %1535 = insertelement <4 x float> %1534, float 0.000000e+00, i32 2
  %1536 = insertelement <4 x float> %1535, float 0.000000e+00, i32 3
  %1537 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1530, <4 x float> %1536, <4 x float> %1524)
  %1538 = extractelement <4 x float> %1537, i32 0
  %1539 = getelementptr inbounds float, float* %2, i64 10
  store float %1538, float* %1539, align 4
  %1540 = extractelement <4 x float> %1537, i32 1
  %1541 = getelementptr inbounds float, float* %2, i64 11
  store float %1540, float* %1541, align 4
  %1542 = getelementptr inbounds float, float* %0, i64 8
  %1543 = load float, float* %1542, align 4
  %1544 = insertelement <4 x float> zeroinitializer, float %1543, i32 0
  %1545 = insertelement <4 x float> %1544, float 0.000000e+00, i32 1
  %1546 = insertelement <4 x float> %1545, float 0.000000e+00, i32 2
  %1547 = insertelement <4 x float> %1546, float 0.000000e+00, i32 3
  %1548 = getelementptr inbounds float, float* %1, i64 3
  %1549 = load float, float* %1548, align 4
  %1550 = insertelement <4 x float> zeroinitializer, float %1549, i32 0
  %1551 = insertelement <4 x float> %1550, float 0.000000e+00, i32 1
  %1552 = insertelement <4 x float> %1551, float 0.000000e+00, i32 2
  %1553 = insertelement <4 x float> %1552, float 0.000000e+00, i32 3
  %1554 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1547, <4 x float> %1553, <4 x float> zeroinitializer)
  %1555 = extractelement <4 x float> %1554, i32 0
  %1556 = getelementptr inbounds float, float* %2, i64 11
  store float %1555, float* %1556, align 4
  %1557 = getelementptr inbounds float, float* %0, i64 8
  %1558 = load float, float* %1557, align 4
  %1559 = insertelement <4 x float> zeroinitializer, float %1558, i32 0
  %1560 = insertelement <4 x float> %1559, float 1.000000e+00, i32 1
  %1561 = insertelement <4 x float> %1560, float 1.000000e+00, i32 2
  %1562 = insertelement <4 x float> %1561, float 1.000000e+00, i32 3
  %1563 = getelementptr inbounds float, float* %1, i64 3
  %1564 = load float, float* %1563, align 4
  %1565 = insertelement <4 x float> zeroinitializer, float %1564, i32 0
  %1566 = insertelement <4 x float> %1565, float 0.000000e+00, i32 1
  %1567 = insertelement <4 x float> %1566, float 0.000000e+00, i32 2
  %1568 = insertelement <4 x float> %1567, float 0.000000e+00, i32 3
  %1569 = fmul <4 x float> %1562, %1568
  %1570 = fadd <4 x float> %1569, zeroinitializer
  %1571 = getelementptr inbounds float, float* %0, i64 9
  %1572 = load float, float* %1571, align 4
  %1573 = insertelement <4 x float> zeroinitializer, float %1572, i32 0
  %1574 = insertelement <4 x float> %1573, float 0.000000e+00, i32 1
  %1575 = insertelement <4 x float> %1574, float 0.000000e+00, i32 2
  %1576 = insertelement <4 x float> %1575, float 0.000000e+00, i32 3
  %1577 = getelementptr inbounds float, float* %1, i64 7
  %1578 = load float, float* %1577, align 4
  %1579 = insertelement <4 x float> zeroinitializer, float %1578, i32 0
  %1580 = insertelement <4 x float> %1579, float 0.000000e+00, i32 1
  %1581 = insertelement <4 x float> %1580, float 0.000000e+00, i32 2
  %1582 = insertelement <4 x float> %1581, float 0.000000e+00, i32 3
  %1583 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1576, <4 x float> %1582, <4 x float> %1570)
  %1584 = extractelement <4 x float> %1583, i32 0
  %1585 = getelementptr inbounds float, float* %2, i64 11
  store float %1584, float* %1585, align 4
  %1586 = getelementptr inbounds float, float* %0, i64 8
  %1587 = load float, float* %1586, align 4
  %1588 = insertelement <4 x float> zeroinitializer, float %1587, i32 0
  %1589 = insertelement <4 x float> %1588, float 1.000000e+00, i32 1
  %1590 = insertelement <4 x float> %1589, float 1.000000e+00, i32 2
  %1591 = insertelement <4 x float> %1590, float 1.000000e+00, i32 3
  %1592 = getelementptr inbounds float, float* %1, i64 3
  %1593 = load float, float* %1592, align 4
  %1594 = insertelement <4 x float> zeroinitializer, float %1593, i32 0
  %1595 = insertelement <4 x float> %1594, float 0.000000e+00, i32 1
  %1596 = insertelement <4 x float> %1595, float 0.000000e+00, i32 2
  %1597 = insertelement <4 x float> %1596, float 0.000000e+00, i32 3
  %1598 = fmul <4 x float> %1591, %1597
  %1599 = fadd <4 x float> %1598, zeroinitializer
  %1600 = getelementptr inbounds float, float* %0, i64 9
  %1601 = load float, float* %1600, align 4
  %1602 = insertelement <4 x float> zeroinitializer, float %1601, i32 0
  %1603 = insertelement <4 x float> %1602, float 1.000000e+00, i32 1
  %1604 = insertelement <4 x float> %1603, float 1.000000e+00, i32 2
  %1605 = insertelement <4 x float> %1604, float 1.000000e+00, i32 3
  %1606 = getelementptr inbounds float, float* %1, i64 7
  %1607 = load float, float* %1606, align 4
  %1608 = insertelement <4 x float> zeroinitializer, float %1607, i32 0
  %1609 = insertelement <4 x float> %1608, float 0.000000e+00, i32 1
  %1610 = insertelement <4 x float> %1609, float 0.000000e+00, i32 2
  %1611 = insertelement <4 x float> %1610, float 0.000000e+00, i32 3
  %1612 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1605, <4 x float> %1611, <4 x float> %1599)
  %1613 = getelementptr inbounds float, float* %0, i64 10
  %1614 = load float, float* %1613, align 4
  %1615 = insertelement <4 x float> zeroinitializer, float %1614, i32 0
  %1616 = insertelement <4 x float> %1615, float 0.000000e+00, i32 1
  %1617 = insertelement <4 x float> %1616, float 0.000000e+00, i32 2
  %1618 = insertelement <4 x float> %1617, float 0.000000e+00, i32 3
  %1619 = getelementptr inbounds float, float* %1, i64 11
  %1620 = load float, float* %1619, align 4
  %1621 = insertelement <4 x float> zeroinitializer, float %1620, i32 0
  %1622 = insertelement <4 x float> %1621, float 0.000000e+00, i32 1
  %1623 = insertelement <4 x float> %1622, float 0.000000e+00, i32 2
  %1624 = insertelement <4 x float> %1623, float 0.000000e+00, i32 3
  %1625 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1618, <4 x float> %1624, <4 x float> %1612)
  %1626 = extractelement <4 x float> %1625, i32 0
  %1627 = getelementptr inbounds float, float* %2, i64 11
  store float %1626, float* %1627, align 4
  %1628 = getelementptr inbounds float, float* %0, i64 8
  %1629 = load float, float* %1628, align 4
  %1630 = insertelement <4 x float> zeroinitializer, float %1629, i32 0
  %1631 = insertelement <4 x float> %1630, float 1.000000e+00, i32 1
  %1632 = insertelement <4 x float> %1631, float 1.000000e+00, i32 2
  %1633 = insertelement <4 x float> %1632, float 1.000000e+00, i32 3
  %1634 = getelementptr inbounds float, float* %1, i64 3
  %1635 = load float, float* %1634, align 4
  %1636 = insertelement <4 x float> zeroinitializer, float %1635, i32 0
  %1637 = insertelement <4 x float> %1636, float 0.000000e+00, i32 1
  %1638 = insertelement <4 x float> %1637, float 0.000000e+00, i32 2
  %1639 = insertelement <4 x float> %1638, float 0.000000e+00, i32 3
  %1640 = fmul <4 x float> %1633, %1639
  %1641 = fadd <4 x float> %1640, zeroinitializer
  %1642 = getelementptr inbounds float, float* %0, i64 9
  %1643 = load float, float* %1642, align 4
  %1644 = insertelement <4 x float> zeroinitializer, float %1643, i32 0
  %1645 = insertelement <4 x float> %1644, float 1.000000e+00, i32 1
  %1646 = insertelement <4 x float> %1645, float 1.000000e+00, i32 2
  %1647 = insertelement <4 x float> %1646, float 1.000000e+00, i32 3
  %1648 = getelementptr inbounds float, float* %1, i64 7
  %1649 = load float, float* %1648, align 4
  %1650 = insertelement <4 x float> zeroinitializer, float %1649, i32 0
  %1651 = insertelement <4 x float> %1650, float 0.000000e+00, i32 1
  %1652 = insertelement <4 x float> %1651, float 0.000000e+00, i32 2
  %1653 = insertelement <4 x float> %1652, float 0.000000e+00, i32 3
  %1654 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1647, <4 x float> %1653, <4 x float> %1641)
  %1655 = getelementptr inbounds float, float* %0, i64 10
  %1656 = load float, float* %1655, align 4
  %1657 = insertelement <4 x float> zeroinitializer, float %1656, i32 0
  %1658 = insertelement <4 x float> %1657, float 1.000000e+00, i32 1
  %1659 = insertelement <4 x float> %1658, float 1.000000e+00, i32 2
  %1660 = insertelement <4 x float> %1659, float 1.000000e+00, i32 3
  %1661 = getelementptr inbounds float, float* %1, i64 11
  %1662 = load float, float* %1661, align 4
  %1663 = insertelement <4 x float> zeroinitializer, float %1662, i32 0
  %1664 = insertelement <4 x float> %1663, float 0.000000e+00, i32 1
  %1665 = insertelement <4 x float> %1664, float 0.000000e+00, i32 2
  %1666 = insertelement <4 x float> %1665, float 0.000000e+00, i32 3
  %1667 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1660, <4 x float> %1666, <4 x float> %1654)
  %1668 = getelementptr inbounds float, float* %0, i64 11
  %1669 = load float, float* %1668, align 4
  %1670 = insertelement <4 x float> zeroinitializer, float %1669, i32 0
  %1671 = insertelement <4 x float> %1670, float 0.000000e+00, i32 1
  %1672 = insertelement <4 x float> %1671, float 0.000000e+00, i32 2
  %1673 = insertelement <4 x float> %1672, float 0.000000e+00, i32 3
  %1674 = getelementptr inbounds float, float* %1, i64 15
  %1675 = load float, float* %1674, align 4
  %1676 = insertelement <4 x float> zeroinitializer, float %1675, i32 0
  %1677 = insertelement <4 x float> %1676, float 0.000000e+00, i32 1
  %1678 = insertelement <4 x float> %1677, float 0.000000e+00, i32 2
  %1679 = insertelement <4 x float> %1678, float 0.000000e+00, i32 3
  %1680 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1673, <4 x float> %1679, <4 x float> %1667)
  %1681 = extractelement <4 x float> %1680, i32 0
  %1682 = getelementptr inbounds float, float* %2, i64 11
  store float %1681, float* %1682, align 4
  %1683 = getelementptr inbounds float, float* %2, i64 12
  store float 0.000000e+00, float* %1683, align 4
  %1684 = getelementptr inbounds float, float* %0, i64 12
  %1685 = load float, float* %1684, align 4
  %1686 = insertelement <4 x float> zeroinitializer, float %1685, i32 0
  %1687 = insertelement <4 x float> %1686, float 0.000000e+00, i32 1
  %1688 = insertelement <4 x float> %1687, float 0.000000e+00, i32 2
  %1689 = insertelement <4 x float> %1688, float 0.000000e+00, i32 3
  %1690 = load float, float* %1, align 4
  %1691 = insertelement <4 x float> zeroinitializer, float %1690, i32 0
  %1692 = insertelement <4 x float> %1691, float 0.000000e+00, i32 1
  %1693 = insertelement <4 x float> %1692, float 0.000000e+00, i32 2
  %1694 = insertelement <4 x float> %1693, float 0.000000e+00, i32 3
  %1695 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1689, <4 x float> %1694, <4 x float> zeroinitializer)
  %1696 = extractelement <4 x float> %1695, i32 0
  %1697 = getelementptr inbounds float, float* %2, i64 12
  store float %1696, float* %1697, align 4
  %1698 = getelementptr inbounds float, float* %0, i64 12
  %1699 = load float, float* %1698, align 4
  %1700 = insertelement <4 x float> zeroinitializer, float %1699, i32 0
  %1701 = insertelement <4 x float> %1700, float 1.000000e+00, i32 1
  %1702 = insertelement <4 x float> %1701, float 1.000000e+00, i32 2
  %1703 = insertelement <4 x float> %1702, float 1.000000e+00, i32 3
  %1704 = load float, float* %1, align 4
  %1705 = insertelement <4 x float> zeroinitializer, float %1704, i32 0
  %1706 = insertelement <4 x float> %1705, float 0.000000e+00, i32 1
  %1707 = insertelement <4 x float> %1706, float 0.000000e+00, i32 2
  %1708 = insertelement <4 x float> %1707, float 0.000000e+00, i32 3
  %1709 = fmul <4 x float> %1703, %1708
  %1710 = fadd <4 x float> %1709, zeroinitializer
  %1711 = getelementptr inbounds float, float* %0, i64 13
  %1712 = load float, float* %1711, align 4
  %1713 = insertelement <4 x float> zeroinitializer, float %1712, i32 0
  %1714 = insertelement <4 x float> %1713, float 0.000000e+00, i32 1
  %1715 = insertelement <4 x float> %1714, float 0.000000e+00, i32 2
  %1716 = insertelement <4 x float> %1715, float 0.000000e+00, i32 3
  %1717 = getelementptr inbounds float, float* %1, i64 4
  %1718 = load float, float* %1717, align 4
  %1719 = insertelement <4 x float> zeroinitializer, float %1718, i32 0
  %1720 = insertelement <4 x float> %1719, float 0.000000e+00, i32 1
  %1721 = insertelement <4 x float> %1720, float 0.000000e+00, i32 2
  %1722 = insertelement <4 x float> %1721, float 0.000000e+00, i32 3
  %1723 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1716, <4 x float> %1722, <4 x float> %1710)
  %1724 = extractelement <4 x float> %1723, i32 0
  %1725 = getelementptr inbounds float, float* %2, i64 12
  store float %1724, float* %1725, align 4
  %1726 = getelementptr inbounds float, float* %0, i64 12
  %1727 = load float, float* %1726, align 4
  %1728 = insertelement <4 x float> zeroinitializer, float %1727, i32 0
  %1729 = insertelement <4 x float> %1728, float 1.000000e+00, i32 1
  %1730 = insertelement <4 x float> %1729, float 1.000000e+00, i32 2
  %1731 = insertelement <4 x float> %1730, float 1.000000e+00, i32 3
  %1732 = load float, float* %1, align 4
  %1733 = insertelement <4 x float> zeroinitializer, float %1732, i32 0
  %1734 = insertelement <4 x float> %1733, float 0.000000e+00, i32 1
  %1735 = insertelement <4 x float> %1734, float 0.000000e+00, i32 2
  %1736 = insertelement <4 x float> %1735, float 0.000000e+00, i32 3
  %1737 = fmul <4 x float> %1731, %1736
  %1738 = fadd <4 x float> %1737, zeroinitializer
  %1739 = getelementptr inbounds float, float* %0, i64 13
  %1740 = load float, float* %1739, align 4
  %1741 = insertelement <4 x float> zeroinitializer, float %1740, i32 0
  %1742 = insertelement <4 x float> %1741, float 1.000000e+00, i32 1
  %1743 = insertelement <4 x float> %1742, float 1.000000e+00, i32 2
  %1744 = insertelement <4 x float> %1743, float 1.000000e+00, i32 3
  %1745 = getelementptr inbounds float, float* %1, i64 4
  %1746 = load float, float* %1745, align 4
  %1747 = insertelement <4 x float> zeroinitializer, float %1746, i32 0
  %1748 = insertelement <4 x float> %1747, float 0.000000e+00, i32 1
  %1749 = insertelement <4 x float> %1748, float 0.000000e+00, i32 2
  %1750 = insertelement <4 x float> %1749, float 0.000000e+00, i32 3
  %1751 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1744, <4 x float> %1750, <4 x float> %1738)
  %1752 = getelementptr inbounds float, float* %0, i64 14
  %1753 = load float, float* %1752, align 4
  %1754 = insertelement <4 x float> zeroinitializer, float %1753, i32 0
  %1755 = insertelement <4 x float> %1754, float 0.000000e+00, i32 1
  %1756 = insertelement <4 x float> %1755, float 0.000000e+00, i32 2
  %1757 = insertelement <4 x float> %1756, float 0.000000e+00, i32 3
  %1758 = getelementptr inbounds float, float* %1, i64 8
  %1759 = load float, float* %1758, align 4
  %1760 = insertelement <4 x float> zeroinitializer, float %1759, i32 0
  %1761 = insertelement <4 x float> %1760, float 0.000000e+00, i32 1
  %1762 = insertelement <4 x float> %1761, float 0.000000e+00, i32 2
  %1763 = insertelement <4 x float> %1762, float 0.000000e+00, i32 3
  %1764 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1757, <4 x float> %1763, <4 x float> %1751)
  %1765 = extractelement <4 x float> %1764, i32 0
  %1766 = getelementptr inbounds float, float* %2, i64 12
  store float %1765, float* %1766, align 4
  %1767 = getelementptr inbounds float, float* %0, i64 12
  %1768 = load float, float* %1767, align 4
  %1769 = insertelement <4 x float> zeroinitializer, float %1768, i32 0
  %1770 = insertelement <4 x float> %1769, float 1.000000e+00, i32 1
  %1771 = insertelement <4 x float> %1770, float 1.000000e+00, i32 2
  %1772 = insertelement <4 x float> %1771, float 1.000000e+00, i32 3
  %1773 = load float, float* %1, align 4
  %1774 = insertelement <4 x float> zeroinitializer, float %1773, i32 0
  %1775 = insertelement <4 x float> %1774, float 0.000000e+00, i32 1
  %1776 = insertelement <4 x float> %1775, float 0.000000e+00, i32 2
  %1777 = insertelement <4 x float> %1776, float 0.000000e+00, i32 3
  %1778 = fmul <4 x float> %1772, %1777
  %1779 = fadd <4 x float> %1778, zeroinitializer
  %1780 = getelementptr inbounds float, float* %0, i64 13
  %1781 = load float, float* %1780, align 4
  %1782 = insertelement <4 x float> zeroinitializer, float %1781, i32 0
  %1783 = insertelement <4 x float> %1782, float 1.000000e+00, i32 1
  %1784 = insertelement <4 x float> %1783, float 1.000000e+00, i32 2
  %1785 = insertelement <4 x float> %1784, float 1.000000e+00, i32 3
  %1786 = getelementptr inbounds float, float* %1, i64 4
  %1787 = load float, float* %1786, align 4
  %1788 = insertelement <4 x float> zeroinitializer, float %1787, i32 0
  %1789 = insertelement <4 x float> %1788, float 0.000000e+00, i32 1
  %1790 = insertelement <4 x float> %1789, float 0.000000e+00, i32 2
  %1791 = insertelement <4 x float> %1790, float 0.000000e+00, i32 3
  %1792 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1785, <4 x float> %1791, <4 x float> %1779)
  %1793 = getelementptr inbounds float, float* %0, i64 14
  %1794 = load float, float* %1793, align 4
  %1795 = insertelement <4 x float> zeroinitializer, float %1794, i32 0
  %1796 = insertelement <4 x float> %1795, float 1.000000e+00, i32 1
  %1797 = insertelement <4 x float> %1796, float 1.000000e+00, i32 2
  %1798 = insertelement <4 x float> %1797, float 1.000000e+00, i32 3
  %1799 = getelementptr inbounds float, float* %1, i64 8
  %1800 = load float, float* %1799, align 4
  %1801 = insertelement <4 x float> zeroinitializer, float %1800, i32 0
  %1802 = insertelement <4 x float> %1801, float 0.000000e+00, i32 1
  %1803 = insertelement <4 x float> %1802, float 0.000000e+00, i32 2
  %1804 = insertelement <4 x float> %1803, float 0.000000e+00, i32 3
  %1805 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1798, <4 x float> %1804, <4 x float> %1792)
  %1806 = getelementptr inbounds float, float* %0, i64 15
  %1807 = load float, float* %1806, align 4
  %1808 = insertelement <4 x float> zeroinitializer, float %1807, i32 0
  %1809 = insertelement <4 x float> %1808, float 0.000000e+00, i32 1
  %1810 = insertelement <4 x float> %1809, float 0.000000e+00, i32 2
  %1811 = insertelement <4 x float> %1810, float 0.000000e+00, i32 3
  %1812 = getelementptr inbounds float, float* %1, i64 12
  %1813 = load float, float* %1812, align 4
  %1814 = insertelement <4 x float> zeroinitializer, float %1813, i32 0
  %1815 = insertelement <4 x float> %1814, float 0.000000e+00, i32 1
  %1816 = insertelement <4 x float> %1815, float 0.000000e+00, i32 2
  %1817 = insertelement <4 x float> %1816, float 0.000000e+00, i32 3
  %1818 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1811, <4 x float> %1817, <4 x float> %1805)
  %1819 = extractelement <4 x float> %1818, i32 0
  %1820 = getelementptr inbounds float, float* %2, i64 12
  store float %1819, float* %1820, align 4
  %1821 = extractelement <4 x float> %1818, i32 1
  %1822 = getelementptr inbounds float, float* %2, i64 13
  store float %1821, float* %1822, align 4
  %1823 = getelementptr inbounds float, float* %0, i64 12
  %1824 = load float, float* %1823, align 4
  %1825 = insertelement <4 x float> zeroinitializer, float %1824, i32 0
  %1826 = insertelement <4 x float> %1825, float 0.000000e+00, i32 1
  %1827 = insertelement <4 x float> %1826, float 0.000000e+00, i32 2
  %1828 = insertelement <4 x float> %1827, float 0.000000e+00, i32 3
  %1829 = getelementptr inbounds float, float* %1, i64 1
  %1830 = load float, float* %1829, align 4
  %1831 = insertelement <4 x float> zeroinitializer, float %1830, i32 0
  %1832 = insertelement <4 x float> %1831, float 0.000000e+00, i32 1
  %1833 = insertelement <4 x float> %1832, float 0.000000e+00, i32 2
  %1834 = insertelement <4 x float> %1833, float 0.000000e+00, i32 3
  %1835 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1828, <4 x float> %1834, <4 x float> zeroinitializer)
  %1836 = extractelement <4 x float> %1835, i32 0
  %1837 = getelementptr inbounds float, float* %2, i64 13
  store float %1836, float* %1837, align 4
  %1838 = getelementptr inbounds float, float* %0, i64 12
  %1839 = load float, float* %1838, align 4
  %1840 = insertelement <4 x float> zeroinitializer, float %1839, i32 0
  %1841 = insertelement <4 x float> %1840, float 1.000000e+00, i32 1
  %1842 = insertelement <4 x float> %1841, float 1.000000e+00, i32 2
  %1843 = insertelement <4 x float> %1842, float 1.000000e+00, i32 3
  %1844 = getelementptr inbounds float, float* %1, i64 1
  %1845 = load float, float* %1844, align 4
  %1846 = insertelement <4 x float> zeroinitializer, float %1845, i32 0
  %1847 = insertelement <4 x float> %1846, float 0.000000e+00, i32 1
  %1848 = insertelement <4 x float> %1847, float 0.000000e+00, i32 2
  %1849 = insertelement <4 x float> %1848, float 0.000000e+00, i32 3
  %1850 = fmul <4 x float> %1843, %1849
  %1851 = fadd <4 x float> %1850, zeroinitializer
  %1852 = getelementptr inbounds float, float* %0, i64 13
  %1853 = load float, float* %1852, align 4
  %1854 = insertelement <4 x float> zeroinitializer, float %1853, i32 0
  %1855 = insertelement <4 x float> %1854, float 0.000000e+00, i32 1
  %1856 = insertelement <4 x float> %1855, float 0.000000e+00, i32 2
  %1857 = insertelement <4 x float> %1856, float 0.000000e+00, i32 3
  %1858 = getelementptr inbounds float, float* %1, i64 5
  %1859 = load float, float* %1858, align 4
  %1860 = insertelement <4 x float> zeroinitializer, float %1859, i32 0
  %1861 = insertelement <4 x float> %1860, float 0.000000e+00, i32 1
  %1862 = insertelement <4 x float> %1861, float 0.000000e+00, i32 2
  %1863 = insertelement <4 x float> %1862, float 0.000000e+00, i32 3
  %1864 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1857, <4 x float> %1863, <4 x float> %1851)
  %1865 = extractelement <4 x float> %1864, i32 0
  %1866 = getelementptr inbounds float, float* %2, i64 13
  store float %1865, float* %1866, align 4
  %1867 = getelementptr inbounds float, float* %0, i64 12
  %1868 = load float, float* %1867, align 4
  %1869 = insertelement <4 x float> zeroinitializer, float %1868, i32 0
  %1870 = insertelement <4 x float> %1869, float 1.000000e+00, i32 1
  %1871 = insertelement <4 x float> %1870, float 1.000000e+00, i32 2
  %1872 = insertelement <4 x float> %1871, float 1.000000e+00, i32 3
  %1873 = getelementptr inbounds float, float* %1, i64 1
  %1874 = load float, float* %1873, align 4
  %1875 = insertelement <4 x float> zeroinitializer, float %1874, i32 0
  %1876 = insertelement <4 x float> %1875, float 0.000000e+00, i32 1
  %1877 = insertelement <4 x float> %1876, float 0.000000e+00, i32 2
  %1878 = insertelement <4 x float> %1877, float 0.000000e+00, i32 3
  %1879 = fmul <4 x float> %1872, %1878
  %1880 = fadd <4 x float> %1879, zeroinitializer
  %1881 = getelementptr inbounds float, float* %0, i64 13
  %1882 = load float, float* %1881, align 4
  %1883 = insertelement <4 x float> zeroinitializer, float %1882, i32 0
  %1884 = insertelement <4 x float> %1883, float 1.000000e+00, i32 1
  %1885 = insertelement <4 x float> %1884, float 1.000000e+00, i32 2
  %1886 = insertelement <4 x float> %1885, float 1.000000e+00, i32 3
  %1887 = getelementptr inbounds float, float* %1, i64 5
  %1888 = load float, float* %1887, align 4
  %1889 = insertelement <4 x float> zeroinitializer, float %1888, i32 0
  %1890 = insertelement <4 x float> %1889, float 0.000000e+00, i32 1
  %1891 = insertelement <4 x float> %1890, float 0.000000e+00, i32 2
  %1892 = insertelement <4 x float> %1891, float 0.000000e+00, i32 3
  %1893 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1886, <4 x float> %1892, <4 x float> %1880)
  %1894 = getelementptr inbounds float, float* %0, i64 14
  %1895 = load float, float* %1894, align 4
  %1896 = insertelement <4 x float> zeroinitializer, float %1895, i32 0
  %1897 = insertelement <4 x float> %1896, float 0.000000e+00, i32 1
  %1898 = insertelement <4 x float> %1897, float 0.000000e+00, i32 2
  %1899 = insertelement <4 x float> %1898, float 0.000000e+00, i32 3
  %1900 = getelementptr inbounds float, float* %1, i64 9
  %1901 = load float, float* %1900, align 4
  %1902 = insertelement <4 x float> zeroinitializer, float %1901, i32 0
  %1903 = insertelement <4 x float> %1902, float 0.000000e+00, i32 1
  %1904 = insertelement <4 x float> %1903, float 0.000000e+00, i32 2
  %1905 = insertelement <4 x float> %1904, float 0.000000e+00, i32 3
  %1906 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1899, <4 x float> %1905, <4 x float> %1893)
  %1907 = extractelement <4 x float> %1906, i32 0
  %1908 = getelementptr inbounds float, float* %2, i64 13
  store float %1907, float* %1908, align 4
  %1909 = getelementptr inbounds float, float* %0, i64 12
  %1910 = load float, float* %1909, align 4
  %1911 = insertelement <4 x float> zeroinitializer, float %1910, i32 0
  %1912 = insertelement <4 x float> %1911, float 1.000000e+00, i32 1
  %1913 = insertelement <4 x float> %1912, float 1.000000e+00, i32 2
  %1914 = insertelement <4 x float> %1913, float 1.000000e+00, i32 3
  %1915 = getelementptr inbounds float, float* %1, i64 1
  %1916 = load float, float* %1915, align 4
  %1917 = insertelement <4 x float> zeroinitializer, float %1916, i32 0
  %1918 = insertelement <4 x float> %1917, float 0.000000e+00, i32 1
  %1919 = insertelement <4 x float> %1918, float 0.000000e+00, i32 2
  %1920 = insertelement <4 x float> %1919, float 0.000000e+00, i32 3
  %1921 = fmul <4 x float> %1914, %1920
  %1922 = fadd <4 x float> %1921, zeroinitializer
  %1923 = getelementptr inbounds float, float* %0, i64 13
  %1924 = load float, float* %1923, align 4
  %1925 = insertelement <4 x float> zeroinitializer, float %1924, i32 0
  %1926 = insertelement <4 x float> %1925, float 1.000000e+00, i32 1
  %1927 = insertelement <4 x float> %1926, float 1.000000e+00, i32 2
  %1928 = insertelement <4 x float> %1927, float 1.000000e+00, i32 3
  %1929 = getelementptr inbounds float, float* %1, i64 5
  %1930 = load float, float* %1929, align 4
  %1931 = insertelement <4 x float> zeroinitializer, float %1930, i32 0
  %1932 = insertelement <4 x float> %1931, float 0.000000e+00, i32 1
  %1933 = insertelement <4 x float> %1932, float 0.000000e+00, i32 2
  %1934 = insertelement <4 x float> %1933, float 0.000000e+00, i32 3
  %1935 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1928, <4 x float> %1934, <4 x float> %1922)
  %1936 = getelementptr inbounds float, float* %0, i64 14
  %1937 = load float, float* %1936, align 4
  %1938 = insertelement <4 x float> zeroinitializer, float %1937, i32 0
  %1939 = insertelement <4 x float> %1938, float 1.000000e+00, i32 1
  %1940 = insertelement <4 x float> %1939, float 1.000000e+00, i32 2
  %1941 = insertelement <4 x float> %1940, float 1.000000e+00, i32 3
  %1942 = getelementptr inbounds float, float* %1, i64 9
  %1943 = load float, float* %1942, align 4
  %1944 = insertelement <4 x float> zeroinitializer, float %1943, i32 0
  %1945 = insertelement <4 x float> %1944, float 0.000000e+00, i32 1
  %1946 = insertelement <4 x float> %1945, float 0.000000e+00, i32 2
  %1947 = insertelement <4 x float> %1946, float 0.000000e+00, i32 3
  %1948 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1941, <4 x float> %1947, <4 x float> %1935)
  %1949 = getelementptr inbounds float, float* %0, i64 15
  %1950 = load float, float* %1949, align 4
  %1951 = insertelement <4 x float> zeroinitializer, float %1950, i32 0
  %1952 = insertelement <4 x float> %1951, float 0.000000e+00, i32 1
  %1953 = insertelement <4 x float> %1952, float 0.000000e+00, i32 2
  %1954 = insertelement <4 x float> %1953, float 0.000000e+00, i32 3
  %1955 = getelementptr inbounds float, float* %1, i64 13
  %1956 = load float, float* %1955, align 4
  %1957 = insertelement <4 x float> zeroinitializer, float %1956, i32 0
  %1958 = insertelement <4 x float> %1957, float 0.000000e+00, i32 1
  %1959 = insertelement <4 x float> %1958, float 0.000000e+00, i32 2
  %1960 = insertelement <4 x float> %1959, float 0.000000e+00, i32 3
  %1961 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1954, <4 x float> %1960, <4 x float> %1948)
  %1962 = extractelement <4 x float> %1961, i32 0
  %1963 = getelementptr inbounds float, float* %2, i64 13
  store float %1962, float* %1963, align 4
  %1964 = extractelement <4 x float> %1961, i32 1
  %1965 = getelementptr inbounds float, float* %2, i64 14
  store float %1964, float* %1965, align 4
  %1966 = getelementptr inbounds float, float* %0, i64 12
  %1967 = load float, float* %1966, align 4
  %1968 = insertelement <4 x float> zeroinitializer, float %1967, i32 0
  %1969 = insertelement <4 x float> %1968, float 0.000000e+00, i32 1
  %1970 = insertelement <4 x float> %1969, float 0.000000e+00, i32 2
  %1971 = insertelement <4 x float> %1970, float 0.000000e+00, i32 3
  %1972 = getelementptr inbounds float, float* %1, i64 2
  %1973 = load float, float* %1972, align 4
  %1974 = insertelement <4 x float> zeroinitializer, float %1973, i32 0
  %1975 = insertelement <4 x float> %1974, float 0.000000e+00, i32 1
  %1976 = insertelement <4 x float> %1975, float 0.000000e+00, i32 2
  %1977 = insertelement <4 x float> %1976, float 0.000000e+00, i32 3
  %1978 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1971, <4 x float> %1977, <4 x float> zeroinitializer)
  %1979 = extractelement <4 x float> %1978, i32 0
  %1980 = getelementptr inbounds float, float* %2, i64 14
  store float %1979, float* %1980, align 4
  %1981 = getelementptr inbounds float, float* %0, i64 12
  %1982 = load float, float* %1981, align 4
  %1983 = insertelement <4 x float> zeroinitializer, float %1982, i32 0
  %1984 = insertelement <4 x float> %1983, float 1.000000e+00, i32 1
  %1985 = insertelement <4 x float> %1984, float 1.000000e+00, i32 2
  %1986 = insertelement <4 x float> %1985, float 1.000000e+00, i32 3
  %1987 = getelementptr inbounds float, float* %1, i64 2
  %1988 = load float, float* %1987, align 4
  %1989 = insertelement <4 x float> zeroinitializer, float %1988, i32 0
  %1990 = insertelement <4 x float> %1989, float 0.000000e+00, i32 1
  %1991 = insertelement <4 x float> %1990, float 0.000000e+00, i32 2
  %1992 = insertelement <4 x float> %1991, float 0.000000e+00, i32 3
  %1993 = fmul <4 x float> %1986, %1992
  %1994 = fadd <4 x float> %1993, zeroinitializer
  %1995 = getelementptr inbounds float, float* %0, i64 13
  %1996 = load float, float* %1995, align 4
  %1997 = insertelement <4 x float> zeroinitializer, float %1996, i32 0
  %1998 = insertelement <4 x float> %1997, float 0.000000e+00, i32 1
  %1999 = insertelement <4 x float> %1998, float 0.000000e+00, i32 2
  %2000 = insertelement <4 x float> %1999, float 0.000000e+00, i32 3
  %2001 = getelementptr inbounds float, float* %1, i64 6
  %2002 = load float, float* %2001, align 4
  %2003 = insertelement <4 x float> zeroinitializer, float %2002, i32 0
  %2004 = insertelement <4 x float> %2003, float 0.000000e+00, i32 1
  %2005 = insertelement <4 x float> %2004, float 0.000000e+00, i32 2
  %2006 = insertelement <4 x float> %2005, float 0.000000e+00, i32 3
  %2007 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2000, <4 x float> %2006, <4 x float> %1994)
  %2008 = extractelement <4 x float> %2007, i32 0
  %2009 = getelementptr inbounds float, float* %2, i64 14
  store float %2008, float* %2009, align 4
  %2010 = getelementptr inbounds float, float* %0, i64 12
  %2011 = load float, float* %2010, align 4
  %2012 = insertelement <4 x float> zeroinitializer, float %2011, i32 0
  %2013 = insertelement <4 x float> %2012, float 1.000000e+00, i32 1
  %2014 = insertelement <4 x float> %2013, float 1.000000e+00, i32 2
  %2015 = insertelement <4 x float> %2014, float 1.000000e+00, i32 3
  %2016 = getelementptr inbounds float, float* %1, i64 2
  %2017 = load float, float* %2016, align 4
  %2018 = insertelement <4 x float> zeroinitializer, float %2017, i32 0
  %2019 = insertelement <4 x float> %2018, float 0.000000e+00, i32 1
  %2020 = insertelement <4 x float> %2019, float 0.000000e+00, i32 2
  %2021 = insertelement <4 x float> %2020, float 0.000000e+00, i32 3
  %2022 = fmul <4 x float> %2015, %2021
  %2023 = fadd <4 x float> %2022, zeroinitializer
  %2024 = getelementptr inbounds float, float* %0, i64 13
  %2025 = load float, float* %2024, align 4
  %2026 = insertelement <4 x float> zeroinitializer, float %2025, i32 0
  %2027 = insertelement <4 x float> %2026, float 1.000000e+00, i32 1
  %2028 = insertelement <4 x float> %2027, float 1.000000e+00, i32 2
  %2029 = insertelement <4 x float> %2028, float 1.000000e+00, i32 3
  %2030 = getelementptr inbounds float, float* %1, i64 6
  %2031 = load float, float* %2030, align 4
  %2032 = insertelement <4 x float> zeroinitializer, float %2031, i32 0
  %2033 = insertelement <4 x float> %2032, float 0.000000e+00, i32 1
  %2034 = insertelement <4 x float> %2033, float 0.000000e+00, i32 2
  %2035 = insertelement <4 x float> %2034, float 0.000000e+00, i32 3
  %2036 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2029, <4 x float> %2035, <4 x float> %2023)
  %2037 = getelementptr inbounds float, float* %0, i64 14
  %2038 = load float, float* %2037, align 4
  %2039 = insertelement <4 x float> zeroinitializer, float %2038, i32 0
  %2040 = insertelement <4 x float> %2039, float 0.000000e+00, i32 1
  %2041 = insertelement <4 x float> %2040, float 0.000000e+00, i32 2
  %2042 = insertelement <4 x float> %2041, float 0.000000e+00, i32 3
  %2043 = getelementptr inbounds float, float* %1, i64 10
  %2044 = load float, float* %2043, align 4
  %2045 = insertelement <4 x float> zeroinitializer, float %2044, i32 0
  %2046 = insertelement <4 x float> %2045, float 0.000000e+00, i32 1
  %2047 = insertelement <4 x float> %2046, float 0.000000e+00, i32 2
  %2048 = insertelement <4 x float> %2047, float 0.000000e+00, i32 3
  %2049 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2042, <4 x float> %2048, <4 x float> %2036)
  %2050 = extractelement <4 x float> %2049, i32 0
  %2051 = getelementptr inbounds float, float* %2, i64 14
  store float %2050, float* %2051, align 4
  %2052 = getelementptr inbounds float, float* %0, i64 12
  %2053 = load float, float* %2052, align 4
  %2054 = insertelement <4 x float> zeroinitializer, float %2053, i32 0
  %2055 = insertelement <4 x float> %2054, float 1.000000e+00, i32 1
  %2056 = insertelement <4 x float> %2055, float 1.000000e+00, i32 2
  %2057 = insertelement <4 x float> %2056, float 1.000000e+00, i32 3
  %2058 = getelementptr inbounds float, float* %1, i64 2
  %2059 = load float, float* %2058, align 4
  %2060 = insertelement <4 x float> zeroinitializer, float %2059, i32 0
  %2061 = insertelement <4 x float> %2060, float 0.000000e+00, i32 1
  %2062 = insertelement <4 x float> %2061, float 0.000000e+00, i32 2
  %2063 = insertelement <4 x float> %2062, float 0.000000e+00, i32 3
  %2064 = fmul <4 x float> %2057, %2063
  %2065 = fadd <4 x float> %2064, zeroinitializer
  %2066 = getelementptr inbounds float, float* %0, i64 13
  %2067 = load float, float* %2066, align 4
  %2068 = insertelement <4 x float> zeroinitializer, float %2067, i32 0
  %2069 = insertelement <4 x float> %2068, float 1.000000e+00, i32 1
  %2070 = insertelement <4 x float> %2069, float 1.000000e+00, i32 2
  %2071 = insertelement <4 x float> %2070, float 1.000000e+00, i32 3
  %2072 = getelementptr inbounds float, float* %1, i64 6
  %2073 = load float, float* %2072, align 4
  %2074 = insertelement <4 x float> zeroinitializer, float %2073, i32 0
  %2075 = insertelement <4 x float> %2074, float 0.000000e+00, i32 1
  %2076 = insertelement <4 x float> %2075, float 0.000000e+00, i32 2
  %2077 = insertelement <4 x float> %2076, float 0.000000e+00, i32 3
  %2078 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2071, <4 x float> %2077, <4 x float> %2065)
  %2079 = getelementptr inbounds float, float* %0, i64 14
  %2080 = load float, float* %2079, align 4
  %2081 = insertelement <4 x float> zeroinitializer, float %2080, i32 0
  %2082 = insertelement <4 x float> %2081, float 1.000000e+00, i32 1
  %2083 = insertelement <4 x float> %2082, float 1.000000e+00, i32 2
  %2084 = insertelement <4 x float> %2083, float 1.000000e+00, i32 3
  %2085 = getelementptr inbounds float, float* %1, i64 10
  %2086 = load float, float* %2085, align 4
  %2087 = insertelement <4 x float> zeroinitializer, float %2086, i32 0
  %2088 = insertelement <4 x float> %2087, float 0.000000e+00, i32 1
  %2089 = insertelement <4 x float> %2088, float 0.000000e+00, i32 2
  %2090 = insertelement <4 x float> %2089, float 0.000000e+00, i32 3
  %2091 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2084, <4 x float> %2090, <4 x float> %2078)
  %2092 = getelementptr inbounds float, float* %0, i64 15
  %2093 = load float, float* %2092, align 4
  %2094 = insertelement <4 x float> zeroinitializer, float %2093, i32 0
  %2095 = insertelement <4 x float> %2094, float 0.000000e+00, i32 1
  %2096 = insertelement <4 x float> %2095, float 0.000000e+00, i32 2
  %2097 = insertelement <4 x float> %2096, float 0.000000e+00, i32 3
  %2098 = getelementptr inbounds float, float* %1, i64 14
  %2099 = load float, float* %2098, align 4
  %2100 = insertelement <4 x float> zeroinitializer, float %2099, i32 0
  %2101 = insertelement <4 x float> %2100, float 0.000000e+00, i32 1
  %2102 = insertelement <4 x float> %2101, float 0.000000e+00, i32 2
  %2103 = insertelement <4 x float> %2102, float 0.000000e+00, i32 3
  %2104 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2097, <4 x float> %2103, <4 x float> %2091)
  %2105 = extractelement <4 x float> %2104, i32 0
  %2106 = getelementptr inbounds float, float* %2, i64 14
  store float %2105, float* %2106, align 4
  %2107 = extractelement <4 x float> %2104, i32 1
  %2108 = getelementptr inbounds float, float* %2, i64 15
  store float %2107, float* %2108, align 4
  %2109 = getelementptr inbounds float, float* %0, i64 12
  %2110 = load float, float* %2109, align 4
  %2111 = insertelement <4 x float> zeroinitializer, float %2110, i32 0
  %2112 = insertelement <4 x float> %2111, float 0.000000e+00, i32 1
  %2113 = insertelement <4 x float> %2112, float 0.000000e+00, i32 2
  %2114 = insertelement <4 x float> %2113, float 0.000000e+00, i32 3
  %2115 = getelementptr inbounds float, float* %1, i64 3
  %2116 = load float, float* %2115, align 4
  %2117 = insertelement <4 x float> zeroinitializer, float %2116, i32 0
  %2118 = insertelement <4 x float> %2117, float 0.000000e+00, i32 1
  %2119 = insertelement <4 x float> %2118, float 0.000000e+00, i32 2
  %2120 = insertelement <4 x float> %2119, float 0.000000e+00, i32 3
  %2121 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2114, <4 x float> %2120, <4 x float> zeroinitializer)
  %2122 = extractelement <4 x float> %2121, i32 0
  %2123 = getelementptr inbounds float, float* %2, i64 15
  store float %2122, float* %2123, align 4
  %2124 = getelementptr inbounds float, float* %0, i64 12
  %2125 = load float, float* %2124, align 4
  %2126 = insertelement <4 x float> zeroinitializer, float %2125, i32 0
  %2127 = insertelement <4 x float> %2126, float 1.000000e+00, i32 1
  %2128 = insertelement <4 x float> %2127, float 1.000000e+00, i32 2
  %2129 = insertelement <4 x float> %2128, float 1.000000e+00, i32 3
  %2130 = getelementptr inbounds float, float* %1, i64 3
  %2131 = load float, float* %2130, align 4
  %2132 = insertelement <4 x float> zeroinitializer, float %2131, i32 0
  %2133 = insertelement <4 x float> %2132, float 0.000000e+00, i32 1
  %2134 = insertelement <4 x float> %2133, float 0.000000e+00, i32 2
  %2135 = insertelement <4 x float> %2134, float 0.000000e+00, i32 3
  %2136 = fmul <4 x float> %2129, %2135
  %2137 = fadd <4 x float> %2136, zeroinitializer
  %2138 = getelementptr inbounds float, float* %0, i64 13
  %2139 = load float, float* %2138, align 4
  %2140 = insertelement <4 x float> zeroinitializer, float %2139, i32 0
  %2141 = insertelement <4 x float> %2140, float 0.000000e+00, i32 1
  %2142 = insertelement <4 x float> %2141, float 0.000000e+00, i32 2
  %2143 = insertelement <4 x float> %2142, float 0.000000e+00, i32 3
  %2144 = getelementptr inbounds float, float* %1, i64 7
  %2145 = load float, float* %2144, align 4
  %2146 = insertelement <4 x float> zeroinitializer, float %2145, i32 0
  %2147 = insertelement <4 x float> %2146, float 0.000000e+00, i32 1
  %2148 = insertelement <4 x float> %2147, float 0.000000e+00, i32 2
  %2149 = insertelement <4 x float> %2148, float 0.000000e+00, i32 3
  %2150 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2143, <4 x float> %2149, <4 x float> %2137)
  %2151 = extractelement <4 x float> %2150, i32 0
  %2152 = getelementptr inbounds float, float* %2, i64 15
  store float %2151, float* %2152, align 4
  %2153 = getelementptr inbounds float, float* %0, i64 12
  %2154 = load float, float* %2153, align 4
  %2155 = insertelement <4 x float> zeroinitializer, float %2154, i32 0
  %2156 = insertelement <4 x float> %2155, float 1.000000e+00, i32 1
  %2157 = insertelement <4 x float> %2156, float 1.000000e+00, i32 2
  %2158 = insertelement <4 x float> %2157, float 1.000000e+00, i32 3
  %2159 = getelementptr inbounds float, float* %1, i64 3
  %2160 = load float, float* %2159, align 4
  %2161 = insertelement <4 x float> zeroinitializer, float %2160, i32 0
  %2162 = insertelement <4 x float> %2161, float 0.000000e+00, i32 1
  %2163 = insertelement <4 x float> %2162, float 0.000000e+00, i32 2
  %2164 = insertelement <4 x float> %2163, float 0.000000e+00, i32 3
  %2165 = fmul <4 x float> %2158, %2164
  %2166 = fadd <4 x float> %2165, zeroinitializer
  %2167 = getelementptr inbounds float, float* %0, i64 13
  %2168 = load float, float* %2167, align 4
  %2169 = insertelement <4 x float> zeroinitializer, float %2168, i32 0
  %2170 = insertelement <4 x float> %2169, float 1.000000e+00, i32 1
  %2171 = insertelement <4 x float> %2170, float 1.000000e+00, i32 2
  %2172 = insertelement <4 x float> %2171, float 1.000000e+00, i32 3
  %2173 = getelementptr inbounds float, float* %1, i64 7
  %2174 = load float, float* %2173, align 4
  %2175 = insertelement <4 x float> zeroinitializer, float %2174, i32 0
  %2176 = insertelement <4 x float> %2175, float 0.000000e+00, i32 1
  %2177 = insertelement <4 x float> %2176, float 0.000000e+00, i32 2
  %2178 = insertelement <4 x float> %2177, float 0.000000e+00, i32 3
  %2179 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2172, <4 x float> %2178, <4 x float> %2166)
  %2180 = getelementptr inbounds float, float* %0, i64 14
  %2181 = load float, float* %2180, align 4
  %2182 = insertelement <4 x float> zeroinitializer, float %2181, i32 0
  %2183 = insertelement <4 x float> %2182, float 0.000000e+00, i32 1
  %2184 = insertelement <4 x float> %2183, float 0.000000e+00, i32 2
  %2185 = insertelement <4 x float> %2184, float 0.000000e+00, i32 3
  %2186 = getelementptr inbounds float, float* %1, i64 11
  %2187 = load float, float* %2186, align 4
  %2188 = insertelement <4 x float> zeroinitializer, float %2187, i32 0
  %2189 = insertelement <4 x float> %2188, float 0.000000e+00, i32 1
  %2190 = insertelement <4 x float> %2189, float 0.000000e+00, i32 2
  %2191 = insertelement <4 x float> %2190, float 0.000000e+00, i32 3
  %2192 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2185, <4 x float> %2191, <4 x float> %2179)
  %2193 = extractelement <4 x float> %2192, i32 0
  %2194 = getelementptr inbounds float, float* %2, i64 15
  store float %2193, float* %2194, align 4
  %2195 = getelementptr inbounds float, float* %0, i64 12
  %2196 = load float, float* %2195, align 4
  %2197 = insertelement <4 x float> zeroinitializer, float %2196, i32 0
  %2198 = insertelement <4 x float> %2197, float 1.000000e+00, i32 1
  %2199 = insertelement <4 x float> %2198, float 1.000000e+00, i32 2
  %2200 = insertelement <4 x float> %2199, float 1.000000e+00, i32 3
  %2201 = getelementptr inbounds float, float* %1, i64 3
  %2202 = load float, float* %2201, align 4
  %2203 = insertelement <4 x float> zeroinitializer, float %2202, i32 0
  %2204 = insertelement <4 x float> %2203, float 0.000000e+00, i32 1
  %2205 = insertelement <4 x float> %2204, float 0.000000e+00, i32 2
  %2206 = insertelement <4 x float> %2205, float 0.000000e+00, i32 3
  %2207 = fmul <4 x float> %2200, %2206
  %2208 = fadd <4 x float> %2207, zeroinitializer
  %2209 = getelementptr inbounds float, float* %0, i64 13
  %2210 = load float, float* %2209, align 4
  %2211 = insertelement <4 x float> zeroinitializer, float %2210, i32 0
  %2212 = insertelement <4 x float> %2211, float 1.000000e+00, i32 1
  %2213 = insertelement <4 x float> %2212, float 1.000000e+00, i32 2
  %2214 = insertelement <4 x float> %2213, float 1.000000e+00, i32 3
  %2215 = getelementptr inbounds float, float* %1, i64 7
  %2216 = load float, float* %2215, align 4
  %2217 = insertelement <4 x float> zeroinitializer, float %2216, i32 0
  %2218 = insertelement <4 x float> %2217, float 0.000000e+00, i32 1
  %2219 = insertelement <4 x float> %2218, float 0.000000e+00, i32 2
  %2220 = insertelement <4 x float> %2219, float 0.000000e+00, i32 3
  %2221 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2214, <4 x float> %2220, <4 x float> %2208)
  %2222 = getelementptr inbounds float, float* %0, i64 14
  %2223 = load float, float* %2222, align 4
  %2224 = insertelement <4 x float> zeroinitializer, float %2223, i32 0
  %2225 = insertelement <4 x float> %2224, float 1.000000e+00, i32 1
  %2226 = insertelement <4 x float> %2225, float 1.000000e+00, i32 2
  %2227 = insertelement <4 x float> %2226, float 1.000000e+00, i32 3
  %2228 = getelementptr inbounds float, float* %1, i64 11
  %2229 = load float, float* %2228, align 4
  %2230 = insertelement <4 x float> zeroinitializer, float %2229, i32 0
  %2231 = insertelement <4 x float> %2230, float 0.000000e+00, i32 1
  %2232 = insertelement <4 x float> %2231, float 0.000000e+00, i32 2
  %2233 = insertelement <4 x float> %2232, float 0.000000e+00, i32 3
  %2234 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2227, <4 x float> %2233, <4 x float> %2221)
  %2235 = getelementptr inbounds float, float* %0, i64 15
  %2236 = load float, float* %2235, align 4
  %2237 = insertelement <4 x float> zeroinitializer, float %2236, i32 0
  %2238 = insertelement <4 x float> %2237, float 0.000000e+00, i32 1
  %2239 = insertelement <4 x float> %2238, float 0.000000e+00, i32 2
  %2240 = insertelement <4 x float> %2239, float 0.000000e+00, i32 3
  %2241 = getelementptr inbounds float, float* %1, i64 15
  %2242 = load float, float* %2241, align 4
  %2243 = insertelement <4 x float> zeroinitializer, float %2242, i32 0
  %2244 = insertelement <4 x float> %2243, float 0.000000e+00, i32 1
  %2245 = insertelement <4 x float> %2244, float 0.000000e+00, i32 2
  %2246 = insertelement <4 x float> %2245, float 0.000000e+00, i32 3
  %2247 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2240, <4 x float> %2246, <4 x float> %2234)
  %2248 = extractelement <4 x float> %2247, i32 0
  %2249 = getelementptr inbounds float, float* %2, i64 15
  store float %2248, float* %2249, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @naive_fixed_qr_decomp(float* %0, float* %1, float* %2) #2 {
.preheader33:
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %0 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %3, i1 false, i1 true, i1 false)
  %6 = call i8* @__memcpy_chk(i8* %3, i8* %4, i64 64, i64 %5) #8
  %7 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8 = bitcast float* %1 to i8*
  %9 = call i64 @llvm.objectsize.i64.p0i8(i8* %8, i1 false, i1 true, i1 false)
  %10 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %11 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %12 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %13 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %14 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16 = call i8* @__memcpy_chk(i8* %8, i8* %15, i64 64, i64 %9) #8
  call void @free(i8* %10)
  call void @free(i8* %11)
  call void @free(i8* %12)
  call void @free(i8* %13)
  call void @free(i8* %14)
  call void @free(i8* %15)
  %17 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %18 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %19 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %20 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %21 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %22 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %23 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %24 = getelementptr inbounds float, float* %1, i64 14
  %25 = getelementptr inbounds float, float* %1, i64 11
  %26 = call i8* @__memcpy_chk(i8* %8, i8* %23, i64 64, i64 %9) #8
  %27 = call i8* @__memcpy_chk(i8* %3, i8* %23, i64 64, i64 %5) #8
  call void @free(i8* %17)
  call void @free(i8* %18)
  call void @free(i8* %19)
  call void @free(i8* %20)
  call void @free(i8* %21)
  call void @free(i8* %22)
  %28 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %29 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %30 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %31 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %32 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %33 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %34 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %35 = call i8* @__memcpy_chk(i8* nonnull %8, i8* %34, i64 64, i64 %9) #8
  %36 = call i8* @__memcpy_chk(i8* nonnull %3, i8* %34, i64 64, i64 %5) #8
  call void @free(i8* %28)
  call void @free(i8* %29)
  call void @free(i8* %30)
  call void @free(i8* %31)
  call void @free(i8* %32)
  call void @free(i8* %33)
  %37 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %38 = bitcast i8* %37 to float*
  store float 1.000000e+00, float* %38, align 4
  %39 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %40 = getelementptr inbounds i8, i8* %39, i64 20
  %41 = bitcast i8* %40 to float*
  store float 1.000000e+00, float* %41, align 4
  %42 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %43 = getelementptr inbounds i8, i8* %42, i64 40
  %44 = bitcast i8* %43 to float*
  store float 1.000000e+00, float* %44, align 4
  %45 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %46 = getelementptr inbounds i8, i8* %45, i64 60
  %47 = bitcast i8* %46 to float*
  store float 1.000000e+00, float* %47, align 4
  %48 = bitcast float* %2 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = sitofp i32 %49 to float
  %51 = insertelement <4 x float> zeroinitializer, float %50, i32 0
  %52 = insertelement <4 x float> %51, float 0.000000e+00, i32 1
  %53 = insertelement <4 x float> %52, float 0.000000e+00, i32 2
  %54 = insertelement <4 x float> %53, float 0.000000e+00, i32 3
  %55 = extractelement <4 x float> %54, i32 0
  %56 = fptosi float %55 to i32
  %57 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %58 = bitcast i8* %57 to i32*
  store i32 %56, i32* %58, align 4
  %59 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = sitofp i32 %61 to float
  %63 = insertelement <4 x float> zeroinitializer, float %62, i32 0
  %64 = insertelement <4 x float> %63, float 0.000000e+00, i32 1
  %65 = insertelement <4 x float> %64, float 0.000000e+00, i32 2
  %66 = insertelement <4 x float> %65, float 0.000000e+00, i32 3
  %67 = extractelement <4 x float> %66, i32 0
  %68 = fptosi float %67 to i32
  %69 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %70 = bitcast i8* %69 to i32*
  store i32 %68, i32* %70, align 4
  %71 = getelementptr inbounds float, float* %2, i64 4
  %72 = bitcast float* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = sitofp i32 %73 to float
  %75 = insertelement <4 x float> zeroinitializer, float %74, i32 0
  %76 = insertelement <4 x float> %75, float 0.000000e+00, i32 1
  %77 = insertelement <4 x float> %76, float 0.000000e+00, i32 2
  %78 = insertelement <4 x float> %77, float 0.000000e+00, i32 3
  %79 = extractelement <4 x float> %78, i32 0
  %80 = fptosi float %79 to i32
  %81 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %82 = getelementptr inbounds i8, i8* %81, i64 4
  %83 = bitcast i8* %82 to i32*
  store i32 %80, i32* %83, align 4
  %84 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %85 = getelementptr inbounds i8, i8* %84, i64 16
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = sitofp i32 %87 to float
  %89 = insertelement <4 x float> zeroinitializer, float %88, i32 0
  %90 = insertelement <4 x float> %89, float 0.000000e+00, i32 1
  %91 = insertelement <4 x float> %90, float 0.000000e+00, i32 2
  %92 = insertelement <4 x float> %91, float 0.000000e+00, i32 3
  %93 = extractelement <4 x float> %92, i32 0
  %94 = fptosi float %93 to i32
  %95 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %96 = getelementptr inbounds i8, i8* %95, i64 4
  %97 = bitcast i8* %96 to i32*
  store i32 %94, i32* %97, align 4
  %98 = getelementptr inbounds float, float* %2, i64 8
  %99 = bitcast float* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = sitofp i32 %100 to float
  %102 = insertelement <4 x float> zeroinitializer, float %101, i32 0
  %103 = insertelement <4 x float> %102, float 0.000000e+00, i32 1
  %104 = insertelement <4 x float> %103, float 0.000000e+00, i32 2
  %105 = insertelement <4 x float> %104, float 0.000000e+00, i32 3
  %106 = extractelement <4 x float> %105, i32 0
  %107 = fptosi float %106 to i32
  %108 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %109 = getelementptr inbounds i8, i8* %108, i64 8
  %110 = bitcast i8* %109 to i32*
  store i32 %107, i32* %110, align 4
  %111 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %112 = getelementptr inbounds i8, i8* %111, i64 32
  %113 = bitcast i8* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = sitofp i32 %114 to float
  %116 = insertelement <4 x float> zeroinitializer, float %115, i32 0
  %117 = insertelement <4 x float> %116, float 0.000000e+00, i32 1
  %118 = insertelement <4 x float> %117, float 0.000000e+00, i32 2
  %119 = insertelement <4 x float> %118, float 0.000000e+00, i32 3
  %120 = extractelement <4 x float> %119, i32 0
  %121 = fptosi float %120 to i32
  %122 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %123 = getelementptr inbounds i8, i8* %122, i64 8
  %124 = bitcast i8* %123 to i32*
  store i32 %121, i32* %124, align 4
  %125 = getelementptr inbounds float, float* %2, i64 12
  %126 = bitcast float* %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = sitofp i32 %127 to float
  %129 = insertelement <4 x float> zeroinitializer, float %128, i32 0
  %130 = insertelement <4 x float> %129, float 0.000000e+00, i32 1
  %131 = insertelement <4 x float> %130, float 0.000000e+00, i32 2
  %132 = insertelement <4 x float> %131, float 0.000000e+00, i32 3
  %133 = extractelement <4 x float> %132, i32 0
  %134 = fptosi float %133 to i32
  %135 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %136 = getelementptr inbounds i8, i8* %135, i64 12
  %137 = bitcast i8* %136 to i32*
  store i32 %134, i32* %137, align 4
  %138 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %139 = getelementptr inbounds i8, i8* %138, i64 48
  %140 = bitcast i8* %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = sitofp i32 %141 to float
  %143 = insertelement <4 x float> zeroinitializer, float %142, i32 0
  %144 = insertelement <4 x float> %143, float 0.000000e+00, i32 1
  %145 = insertelement <4 x float> %144, float 0.000000e+00, i32 2
  %146 = insertelement <4 x float> %145, float 0.000000e+00, i32 3
  %147 = extractelement <4 x float> %146, i32 0
  %148 = fptosi float %147 to i32
  %149 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %150 = getelementptr inbounds i8, i8* %149, i64 12
  %151 = bitcast i8* %150 to i32*
  store i32 %148, i32* %151, align 4
  %152 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %153 = bitcast i8* %152 to float*
  %154 = load float, float* %153, align 4
  %155 = insertelement <4 x float> zeroinitializer, float %154, i32 0
  %156 = insertelement <4 x float> %155, float 0.000000e+00, i32 1
  %157 = insertelement <4 x float> %156, float 0.000000e+00, i32 2
  %158 = insertelement <4 x float> %157, float 0.000000e+00, i32 3
  %159 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %160 = getelementptr inbounds i8, i8* %159, i64 12
  %161 = bitcast i8* %160 to float*
  %162 = load float, float* %161, align 4
  %163 = insertelement <4 x float> zeroinitializer, float %162, i32 0
  %164 = insertelement <4 x float> %163, float 1.000000e+00, i32 1
  %165 = insertelement <4 x float> %164, float 1.000000e+00, i32 2
  %166 = insertelement <4 x float> %165, float 1.000000e+00, i32 3
  %167 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %168 = getelementptr inbounds i8, i8* %167, i64 12
  %169 = bitcast i8* %168 to float*
  %170 = load float, float* %169, align 4
  %171 = insertelement <4 x float> zeroinitializer, float %170, i32 0
  %172 = insertelement <4 x float> %171, float 0.000000e+00, i32 1
  %173 = insertelement <4 x float> %172, float 0.000000e+00, i32 2
  %174 = insertelement <4 x float> %173, float 0.000000e+00, i32 3
  %175 = fmul <4 x float> %166, %174
  %176 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %177 = getelementptr inbounds i8, i8* %176, i64 8
  %178 = bitcast i8* %177 to float*
  %179 = load float, float* %178, align 4
  %180 = insertelement <4 x float> zeroinitializer, float %179, i32 0
  %181 = insertelement <4 x float> %180, float 1.000000e+00, i32 1
  %182 = insertelement <4 x float> %181, float 1.000000e+00, i32 2
  %183 = insertelement <4 x float> %182, float 1.000000e+00, i32 3
  %184 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %185 = getelementptr inbounds i8, i8* %184, i64 8
  %186 = bitcast i8* %185 to float*
  %187 = load float, float* %186, align 4
  %188 = insertelement <4 x float> zeroinitializer, float %187, i32 0
  %189 = insertelement <4 x float> %188, float 0.000000e+00, i32 1
  %190 = insertelement <4 x float> %189, float 0.000000e+00, i32 2
  %191 = insertelement <4 x float> %190, float 0.000000e+00, i32 3
  %192 = fmul <4 x float> %183, %191
  %193 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %194 = getelementptr inbounds i8, i8* %193, i64 4
  %195 = bitcast i8* %194 to float*
  %196 = load float, float* %195, align 4
  %197 = insertelement <4 x float> zeroinitializer, float %196, i32 0
  %198 = insertelement <4 x float> %197, float 1.000000e+00, i32 1
  %199 = insertelement <4 x float> %198, float 1.000000e+00, i32 2
  %200 = insertelement <4 x float> %199, float 1.000000e+00, i32 3
  %201 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %202 = getelementptr inbounds i8, i8* %201, i64 4
  %203 = bitcast i8* %202 to float*
  %204 = load float, float* %203, align 4
  %205 = insertelement <4 x float> zeroinitializer, float %204, i32 0
  %206 = insertelement <4 x float> %205, float 0.000000e+00, i32 1
  %207 = insertelement <4 x float> %206, float 0.000000e+00, i32 2
  %208 = insertelement <4 x float> %207, float 0.000000e+00, i32 3
  %209 = fmul <4 x float> %200, %208
  %210 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %211 = bitcast i8* %210 to float*
  %212 = load float, float* %211, align 4
  %213 = insertelement <4 x float> zeroinitializer, float %212, i32 0
  %214 = insertelement <4 x float> %213, float 1.000000e+00, i32 1
  %215 = insertelement <4 x float> %214, float 1.000000e+00, i32 2
  %216 = insertelement <4 x float> %215, float 1.000000e+00, i32 3
  %217 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %218 = bitcast i8* %217 to float*
  %219 = load float, float* %218, align 4
  %220 = insertelement <4 x float> zeroinitializer, float %219, i32 0
  %221 = insertelement <4 x float> %220, float 0.000000e+00, i32 1
  %222 = insertelement <4 x float> %221, float 0.000000e+00, i32 2
  %223 = insertelement <4 x float> %222, float 0.000000e+00, i32 3
  %224 = fmul <4 x float> %216, %223
  %225 = fadd <4 x float> %224, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %226 = fadd <4 x float> %209, %225
  %227 = fadd <4 x float> %192, %226
  %228 = fadd <4 x float> %175, %227
  %229 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %228)
  %230 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %231 = bitcast i8* %230 to float*
  %232 = load float, float* %231, align 4
  %233 = fcmp olt float %232, 0.000000e+00
  %234 = sext i1 %233 to i32
  %235 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %236 = bitcast i8* %235 to float*
  %237 = load float, float* %236, align 4
  %238 = fcmp ogt float %237, 0.000000e+00
  %239 = zext i1 %238 to i32
  %240 = add nsw i32 %234, %239
  %241 = sitofp i32 %240 to float
  %242 = insertelement <4 x float> zeroinitializer, float %241, i32 0
  %243 = insertelement <4 x float> %242, float 0.000000e+00, i32 1
  %244 = insertelement <4 x float> %243, float 0.000000e+00, i32 2
  %245 = insertelement <4 x float> %244, float 0.000000e+00, i32 3
  %246 = fneg <4 x float> %245
  %247 = fmul <4 x float> %229, %246
  %248 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %249 = bitcast i8* %248 to float*
  %250 = load float, float* %249, align 4
  %251 = insertelement <4 x float> zeroinitializer, float %250, i32 0
  %252 = insertelement <4 x float> %251, float 0.000000e+00, i32 1
  %253 = insertelement <4 x float> %252, float 0.000000e+00, i32 2
  %254 = insertelement <4 x float> %253, float 0.000000e+00, i32 3
  %255 = call <4 x float> @llvm.fma.v4f32(<4 x float> %247, <4 x float> %254, <4 x float> %158)
  %256 = extractelement <4 x float> %255, i32 0
  %257 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %258 = bitcast i8* %257 to float*
  store float %256, float* %258, align 4
  %259 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %260 = getelementptr inbounds i8, i8* %259, i64 4
  %261 = bitcast i8* %260 to float*
  %262 = load float, float* %261, align 4
  %263 = insertelement <4 x float> zeroinitializer, float %262, i32 0
  %264 = insertelement <4 x float> %263, float 0.000000e+00, i32 1
  %265 = insertelement <4 x float> %264, float 0.000000e+00, i32 2
  %266 = insertelement <4 x float> %265, float 0.000000e+00, i32 3
  %267 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %268 = getelementptr inbounds i8, i8* %267, i64 12
  %269 = bitcast i8* %268 to float*
  %270 = load float, float* %269, align 4
  %271 = insertelement <4 x float> zeroinitializer, float %270, i32 0
  %272 = insertelement <4 x float> %271, float 1.000000e+00, i32 1
  %273 = insertelement <4 x float> %272, float 1.000000e+00, i32 2
  %274 = insertelement <4 x float> %273, float 1.000000e+00, i32 3
  %275 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %276 = getelementptr inbounds i8, i8* %275, i64 12
  %277 = bitcast i8* %276 to float*
  %278 = load float, float* %277, align 4
  %279 = insertelement <4 x float> zeroinitializer, float %278, i32 0
  %280 = insertelement <4 x float> %279, float 0.000000e+00, i32 1
  %281 = insertelement <4 x float> %280, float 0.000000e+00, i32 2
  %282 = insertelement <4 x float> %281, float 0.000000e+00, i32 3
  %283 = fmul <4 x float> %274, %282
  %284 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %285 = getelementptr inbounds i8, i8* %284, i64 8
  %286 = bitcast i8* %285 to float*
  %287 = load float, float* %286, align 4
  %288 = insertelement <4 x float> zeroinitializer, float %287, i32 0
  %289 = insertelement <4 x float> %288, float 1.000000e+00, i32 1
  %290 = insertelement <4 x float> %289, float 1.000000e+00, i32 2
  %291 = insertelement <4 x float> %290, float 1.000000e+00, i32 3
  %292 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %293 = getelementptr inbounds i8, i8* %292, i64 8
  %294 = bitcast i8* %293 to float*
  %295 = load float, float* %294, align 4
  %296 = insertelement <4 x float> zeroinitializer, float %295, i32 0
  %297 = insertelement <4 x float> %296, float 0.000000e+00, i32 1
  %298 = insertelement <4 x float> %297, float 0.000000e+00, i32 2
  %299 = insertelement <4 x float> %298, float 0.000000e+00, i32 3
  %300 = fmul <4 x float> %291, %299
  %301 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %302 = getelementptr inbounds i8, i8* %301, i64 4
  %303 = bitcast i8* %302 to float*
  %304 = load float, float* %303, align 4
  %305 = insertelement <4 x float> zeroinitializer, float %304, i32 0
  %306 = insertelement <4 x float> %305, float 1.000000e+00, i32 1
  %307 = insertelement <4 x float> %306, float 1.000000e+00, i32 2
  %308 = insertelement <4 x float> %307, float 1.000000e+00, i32 3
  %309 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %310 = getelementptr inbounds i8, i8* %309, i64 4
  %311 = bitcast i8* %310 to float*
  %312 = load float, float* %311, align 4
  %313 = insertelement <4 x float> zeroinitializer, float %312, i32 0
  %314 = insertelement <4 x float> %313, float 0.000000e+00, i32 1
  %315 = insertelement <4 x float> %314, float 0.000000e+00, i32 2
  %316 = insertelement <4 x float> %315, float 0.000000e+00, i32 3
  %317 = fmul <4 x float> %308, %316
  %318 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %319 = bitcast i8* %318 to float*
  %320 = load float, float* %319, align 4
  %321 = insertelement <4 x float> zeroinitializer, float %320, i32 0
  %322 = insertelement <4 x float> %321, float 1.000000e+00, i32 1
  %323 = insertelement <4 x float> %322, float 1.000000e+00, i32 2
  %324 = insertelement <4 x float> %323, float 1.000000e+00, i32 3
  %325 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %326 = bitcast i8* %325 to float*
  %327 = load float, float* %326, align 4
  %328 = insertelement <4 x float> zeroinitializer, float %327, i32 0
  %329 = insertelement <4 x float> %328, float 0.000000e+00, i32 1
  %330 = insertelement <4 x float> %329, float 0.000000e+00, i32 2
  %331 = insertelement <4 x float> %330, float 0.000000e+00, i32 3
  %332 = fmul <4 x float> %324, %331
  %333 = fadd <4 x float> %332, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %334 = fadd <4 x float> %317, %333
  %335 = fadd <4 x float> %300, %334
  %336 = fadd <4 x float> %283, %335
  %337 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %336)
  %338 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %339 = bitcast i8* %338 to float*
  %340 = load float, float* %339, align 4
  %341 = fcmp olt float %340, 0.000000e+00
  %342 = sext i1 %341 to i32
  %343 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %344 = bitcast i8* %343 to float*
  %345 = load float, float* %344, align 4
  %346 = fcmp ogt float %345, 0.000000e+00
  %347 = zext i1 %346 to i32
  %348 = add nsw i32 %342, %347
  %349 = sitofp i32 %348 to float
  %350 = insertelement <4 x float> zeroinitializer, float %349, i32 0
  %351 = insertelement <4 x float> %350, float 0.000000e+00, i32 1
  %352 = insertelement <4 x float> %351, float 0.000000e+00, i32 2
  %353 = insertelement <4 x float> %352, float 0.000000e+00, i32 3
  %354 = fneg <4 x float> %353
  %355 = fmul <4 x float> %337, %354
  %356 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %357 = getelementptr inbounds i8, i8* %356, i64 4
  %358 = bitcast i8* %357 to float*
  %359 = load float, float* %358, align 4
  %360 = insertelement <4 x float> zeroinitializer, float %359, i32 0
  %361 = insertelement <4 x float> %360, float 0.000000e+00, i32 1
  %362 = insertelement <4 x float> %361, float 0.000000e+00, i32 2
  %363 = insertelement <4 x float> %362, float 0.000000e+00, i32 3
  %364 = call <4 x float> @llvm.fma.v4f32(<4 x float> %355, <4 x float> %363, <4 x float> %266)
  %365 = extractelement <4 x float> %364, i32 0
  %366 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %367 = getelementptr inbounds i8, i8* %366, i64 4
  %368 = bitcast i8* %367 to float*
  store float %365, float* %368, align 4
  %369 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %370 = getelementptr inbounds i8, i8* %369, i64 8
  %371 = bitcast i8* %370 to float*
  %372 = load float, float* %371, align 4
  %373 = insertelement <4 x float> zeroinitializer, float %372, i32 0
  %374 = insertelement <4 x float> %373, float 0.000000e+00, i32 1
  %375 = insertelement <4 x float> %374, float 0.000000e+00, i32 2
  %376 = insertelement <4 x float> %375, float 0.000000e+00, i32 3
  %377 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %378 = getelementptr inbounds i8, i8* %377, i64 12
  %379 = bitcast i8* %378 to float*
  %380 = load float, float* %379, align 4
  %381 = insertelement <4 x float> zeroinitializer, float %380, i32 0
  %382 = insertelement <4 x float> %381, float 1.000000e+00, i32 1
  %383 = insertelement <4 x float> %382, float 1.000000e+00, i32 2
  %384 = insertelement <4 x float> %383, float 1.000000e+00, i32 3
  %385 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %386 = getelementptr inbounds i8, i8* %385, i64 12
  %387 = bitcast i8* %386 to float*
  %388 = load float, float* %387, align 4
  %389 = insertelement <4 x float> zeroinitializer, float %388, i32 0
  %390 = insertelement <4 x float> %389, float 0.000000e+00, i32 1
  %391 = insertelement <4 x float> %390, float 0.000000e+00, i32 2
  %392 = insertelement <4 x float> %391, float 0.000000e+00, i32 3
  %393 = fmul <4 x float> %384, %392
  %394 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %395 = getelementptr inbounds i8, i8* %394, i64 8
  %396 = bitcast i8* %395 to float*
  %397 = load float, float* %396, align 4
  %398 = insertelement <4 x float> zeroinitializer, float %397, i32 0
  %399 = insertelement <4 x float> %398, float 1.000000e+00, i32 1
  %400 = insertelement <4 x float> %399, float 1.000000e+00, i32 2
  %401 = insertelement <4 x float> %400, float 1.000000e+00, i32 3
  %402 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %403 = getelementptr inbounds i8, i8* %402, i64 8
  %404 = bitcast i8* %403 to float*
  %405 = load float, float* %404, align 4
  %406 = insertelement <4 x float> zeroinitializer, float %405, i32 0
  %407 = insertelement <4 x float> %406, float 0.000000e+00, i32 1
  %408 = insertelement <4 x float> %407, float 0.000000e+00, i32 2
  %409 = insertelement <4 x float> %408, float 0.000000e+00, i32 3
  %410 = fmul <4 x float> %401, %409
  %411 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %412 = getelementptr inbounds i8, i8* %411, i64 4
  %413 = bitcast i8* %412 to float*
  %414 = load float, float* %413, align 4
  %415 = insertelement <4 x float> zeroinitializer, float %414, i32 0
  %416 = insertelement <4 x float> %415, float 1.000000e+00, i32 1
  %417 = insertelement <4 x float> %416, float 1.000000e+00, i32 2
  %418 = insertelement <4 x float> %417, float 1.000000e+00, i32 3
  %419 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %420 = getelementptr inbounds i8, i8* %419, i64 4
  %421 = bitcast i8* %420 to float*
  %422 = load float, float* %421, align 4
  %423 = insertelement <4 x float> zeroinitializer, float %422, i32 0
  %424 = insertelement <4 x float> %423, float 0.000000e+00, i32 1
  %425 = insertelement <4 x float> %424, float 0.000000e+00, i32 2
  %426 = insertelement <4 x float> %425, float 0.000000e+00, i32 3
  %427 = fmul <4 x float> %418, %426
  %428 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %429 = bitcast i8* %428 to float*
  %430 = load float, float* %429, align 4
  %431 = insertelement <4 x float> zeroinitializer, float %430, i32 0
  %432 = insertelement <4 x float> %431, float 1.000000e+00, i32 1
  %433 = insertelement <4 x float> %432, float 1.000000e+00, i32 2
  %434 = insertelement <4 x float> %433, float 1.000000e+00, i32 3
  %435 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %436 = bitcast i8* %435 to float*
  %437 = load float, float* %436, align 4
  %438 = insertelement <4 x float> zeroinitializer, float %437, i32 0
  %439 = insertelement <4 x float> %438, float 0.000000e+00, i32 1
  %440 = insertelement <4 x float> %439, float 0.000000e+00, i32 2
  %441 = insertelement <4 x float> %440, float 0.000000e+00, i32 3
  %442 = fmul <4 x float> %434, %441
  %443 = fadd <4 x float> %442, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %444 = fadd <4 x float> %427, %443
  %445 = fadd <4 x float> %410, %444
  %446 = fadd <4 x float> %393, %445
  %447 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %446)
  %448 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %449 = bitcast i8* %448 to float*
  %450 = load float, float* %449, align 4
  %451 = fcmp olt float %450, 0.000000e+00
  %452 = sext i1 %451 to i32
  %453 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %454 = bitcast i8* %453 to float*
  %455 = load float, float* %454, align 4
  %456 = fcmp ogt float %455, 0.000000e+00
  %457 = zext i1 %456 to i32
  %458 = add nsw i32 %452, %457
  %459 = sitofp i32 %458 to float
  %460 = insertelement <4 x float> zeroinitializer, float %459, i32 0
  %461 = insertelement <4 x float> %460, float 0.000000e+00, i32 1
  %462 = insertelement <4 x float> %461, float 0.000000e+00, i32 2
  %463 = insertelement <4 x float> %462, float 0.000000e+00, i32 3
  %464 = fneg <4 x float> %463
  %465 = fmul <4 x float> %447, %464
  %466 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %467 = getelementptr inbounds i8, i8* %466, i64 8
  %468 = bitcast i8* %467 to float*
  %469 = load float, float* %468, align 4
  %470 = insertelement <4 x float> zeroinitializer, float %469, i32 0
  %471 = insertelement <4 x float> %470, float 0.000000e+00, i32 1
  %472 = insertelement <4 x float> %471, float 0.000000e+00, i32 2
  %473 = insertelement <4 x float> %472, float 0.000000e+00, i32 3
  %474 = call <4 x float> @llvm.fma.v4f32(<4 x float> %465, <4 x float> %473, <4 x float> %376)
  %475 = extractelement <4 x float> %474, i32 0
  %476 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %477 = getelementptr inbounds i8, i8* %476, i64 8
  %478 = bitcast i8* %477 to float*
  store float %475, float* %478, align 4
  %479 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %480 = getelementptr inbounds i8, i8* %479, i64 12
  %481 = bitcast i8* %480 to float*
  %482 = load float, float* %481, align 4
  %483 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %484 = getelementptr inbounds i8, i8* %483, i64 12
  %485 = bitcast i8* %484 to float*
  %486 = load float, float* %485, align 4
  %487 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %488 = getelementptr inbounds i8, i8* %487, i64 12
  %489 = bitcast i8* %488 to float*
  %490 = load float, float* %489, align 4
  %491 = fmul float %486, %490
  %492 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %493 = getelementptr inbounds i8, i8* %492, i64 8
  %494 = bitcast i8* %493 to float*
  %495 = load float, float* %494, align 4
  %496 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %497 = getelementptr inbounds i8, i8* %496, i64 8
  %498 = bitcast i8* %497 to float*
  %499 = load float, float* %498, align 4
  %500 = fmul float %495, %499
  %501 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %502 = getelementptr inbounds i8, i8* %501, i64 4
  %503 = bitcast i8* %502 to float*
  %504 = load float, float* %503, align 4
  %505 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %506 = getelementptr inbounds i8, i8* %505, i64 4
  %507 = bitcast i8* %506 to float*
  %508 = load float, float* %507, align 4
  %509 = fmul float %504, %508
  %510 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %511 = bitcast i8* %510 to float*
  %512 = load float, float* %511, align 4
  %513 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %514 = bitcast i8* %513 to float*
  %515 = load float, float* %514, align 4
  %516 = fmul float %512, %515
  %517 = fadd float %516, 0.000000e+00
  %518 = fadd float %509, %517
  %519 = fadd float %500, %518
  %520 = fadd float %491, %519
  %521 = call float @llvm.sqrt.f32(float %520)
  %522 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %523 = bitcast i8* %522 to float*
  %524 = load float, float* %523, align 4
  %525 = fcmp olt float %524, 0.000000e+00
  %526 = sext i1 %525 to i32
  %527 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %528 = bitcast i8* %527 to float*
  %529 = load float, float* %528, align 4
  %530 = fcmp ogt float %529, 0.000000e+00
  %531 = zext i1 %530 to i32
  %532 = add nsw i32 %526, %531
  %533 = sitofp i32 %532 to float
  %534 = fneg float %533
  %535 = fmul float %521, %534
  %536 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %537 = getelementptr inbounds i8, i8* %536, i64 12
  %538 = bitcast i8* %537 to float*
  %539 = load float, float* %538, align 4
  %540 = fmul float %535, %539
  %541 = fadd float %482, %540
  %542 = insertelement <4 x float> zeroinitializer, float %541, i32 0
  %543 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %544 = bitcast i8* %543 to float*
  %545 = load float, float* %544, align 4
  %546 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %547 = getelementptr inbounds i8, i8* %546, i64 12
  %548 = bitcast i8* %547 to float*
  %549 = load float, float* %548, align 4
  %550 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %551 = getelementptr inbounds i8, i8* %550, i64 12
  %552 = bitcast i8* %551 to float*
  %553 = load float, float* %552, align 4
  %554 = fmul float %549, %553
  %555 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %556 = getelementptr inbounds i8, i8* %555, i64 8
  %557 = bitcast i8* %556 to float*
  %558 = load float, float* %557, align 4
  %559 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %560 = getelementptr inbounds i8, i8* %559, i64 8
  %561 = bitcast i8* %560 to float*
  %562 = load float, float* %561, align 4
  %563 = fmul float %558, %562
  %564 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %565 = getelementptr inbounds i8, i8* %564, i64 4
  %566 = bitcast i8* %565 to float*
  %567 = load float, float* %566, align 4
  %568 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %569 = getelementptr inbounds i8, i8* %568, i64 4
  %570 = bitcast i8* %569 to float*
  %571 = load float, float* %570, align 4
  %572 = fmul float %567, %571
  %573 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %574 = bitcast i8* %573 to float*
  %575 = load float, float* %574, align 4
  %576 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %577 = bitcast i8* %576 to float*
  %578 = load float, float* %577, align 4
  %579 = fmul float %575, %578
  %580 = fadd float %579, 0.000000e+00
  %581 = fadd float %572, %580
  %582 = fadd float %563, %581
  %583 = fadd float %554, %582
  %584 = call float @llvm.sqrt.f32(float %583)
  %585 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %586 = bitcast i8* %585 to float*
  %587 = load float, float* %586, align 4
  %588 = fcmp olt float %587, 0.000000e+00
  %589 = sext i1 %588 to i32
  %590 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %591 = bitcast i8* %590 to float*
  %592 = load float, float* %591, align 4
  %593 = fcmp ogt float %592, 0.000000e+00
  %594 = zext i1 %593 to i32
  %595 = add nsw i32 %589, %594
  %596 = sitofp i32 %595 to float
  %597 = fneg float %596
  %598 = fmul float %584, %597
  %599 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %600 = bitcast i8* %599 to float*
  %601 = load float, float* %600, align 4
  %602 = fmul float %598, %601
  %603 = fadd float %545, %602
  %604 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %605 = getelementptr inbounds i8, i8* %604, i64 12
  %606 = bitcast i8* %605 to float*
  %607 = load float, float* %606, align 4
  %608 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %609 = getelementptr inbounds i8, i8* %608, i64 12
  %610 = bitcast i8* %609 to float*
  %611 = load float, float* %610, align 4
  %612 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %613 = getelementptr inbounds i8, i8* %612, i64 12
  %614 = bitcast i8* %613 to float*
  %615 = load float, float* %614, align 4
  %616 = fmul float %611, %615
  %617 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %618 = getelementptr inbounds i8, i8* %617, i64 8
  %619 = bitcast i8* %618 to float*
  %620 = load float, float* %619, align 4
  %621 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %622 = getelementptr inbounds i8, i8* %621, i64 8
  %623 = bitcast i8* %622 to float*
  %624 = load float, float* %623, align 4
  %625 = fmul float %620, %624
  %626 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %627 = getelementptr inbounds i8, i8* %626, i64 4
  %628 = bitcast i8* %627 to float*
  %629 = load float, float* %628, align 4
  %630 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %631 = getelementptr inbounds i8, i8* %630, i64 4
  %632 = bitcast i8* %631 to float*
  %633 = load float, float* %632, align 4
  %634 = fmul float %629, %633
  %635 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %636 = bitcast i8* %635 to float*
  %637 = load float, float* %636, align 4
  %638 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %639 = bitcast i8* %638 to float*
  %640 = load float, float* %639, align 4
  %641 = fmul float %637, %640
  %642 = fadd float %641, 0.000000e+00
  %643 = fadd float %634, %642
  %644 = fadd float %625, %643
  %645 = fadd float %616, %644
  %646 = call float @llvm.sqrt.f32(float %645)
  %647 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %648 = bitcast i8* %647 to float*
  %649 = load float, float* %648, align 4
  %650 = fcmp olt float %649, 0.000000e+00
  %651 = sext i1 %650 to i32
  %652 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %653 = bitcast i8* %652 to float*
  %654 = load float, float* %653, align 4
  %655 = fcmp ogt float %654, 0.000000e+00
  %656 = zext i1 %655 to i32
  %657 = add nsw i32 %651, %656
  %658 = sitofp i32 %657 to float
  %659 = fneg float %658
  %660 = fmul float %646, %659
  %661 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %662 = getelementptr inbounds i8, i8* %661, i64 12
  %663 = bitcast i8* %662 to float*
  %664 = load float, float* %663, align 4
  %665 = fmul float %660, %664
  %666 = fadd float %607, %665
  %667 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %668 = getelementptr inbounds i8, i8* %667, i64 12
  %669 = bitcast i8* %668 to float*
  %670 = load float, float* %669, align 4
  %671 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %672 = getelementptr inbounds i8, i8* %671, i64 12
  %673 = bitcast i8* %672 to float*
  %674 = load float, float* %673, align 4
  %675 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %676 = getelementptr inbounds i8, i8* %675, i64 12
  %677 = bitcast i8* %676 to float*
  %678 = load float, float* %677, align 4
  %679 = fmul float %674, %678
  %680 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %681 = getelementptr inbounds i8, i8* %680, i64 8
  %682 = bitcast i8* %681 to float*
  %683 = load float, float* %682, align 4
  %684 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %685 = getelementptr inbounds i8, i8* %684, i64 8
  %686 = bitcast i8* %685 to float*
  %687 = load float, float* %686, align 4
  %688 = fmul float %683, %687
  %689 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %690 = getelementptr inbounds i8, i8* %689, i64 4
  %691 = bitcast i8* %690 to float*
  %692 = load float, float* %691, align 4
  %693 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %694 = getelementptr inbounds i8, i8* %693, i64 4
  %695 = bitcast i8* %694 to float*
  %696 = load float, float* %695, align 4
  %697 = fmul float %692, %696
  %698 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %699 = bitcast i8* %698 to float*
  %700 = load float, float* %699, align 4
  %701 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %702 = bitcast i8* %701 to float*
  %703 = load float, float* %702, align 4
  %704 = fmul float %700, %703
  %705 = fadd float %704, 0.000000e+00
  %706 = fadd float %697, %705
  %707 = fadd float %688, %706
  %708 = fadd float %679, %707
  %709 = call float @llvm.sqrt.f32(float %708)
  %710 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %711 = bitcast i8* %710 to float*
  %712 = load float, float* %711, align 4
  %713 = fcmp olt float %712, 0.000000e+00
  %714 = sext i1 %713 to i32
  %715 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %716 = bitcast i8* %715 to float*
  %717 = load float, float* %716, align 4
  %718 = fcmp ogt float %717, 0.000000e+00
  %719 = zext i1 %718 to i32
  %720 = add nsw i32 %714, %719
  %721 = sitofp i32 %720 to float
  %722 = fneg float %721
  %723 = fmul float %709, %722
  %724 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %725 = getelementptr inbounds i8, i8* %724, i64 12
  %726 = bitcast i8* %725 to float*
  %727 = load float, float* %726, align 4
  %728 = fmul float %723, %727
  %729 = fadd float %670, %728
  %730 = fmul float %666, %729
  %731 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %732 = getelementptr inbounds i8, i8* %731, i64 8
  %733 = bitcast i8* %732 to float*
  %734 = load float, float* %733, align 4
  %735 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %736 = getelementptr inbounds i8, i8* %735, i64 12
  %737 = bitcast i8* %736 to float*
  %738 = load float, float* %737, align 4
  %739 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %740 = getelementptr inbounds i8, i8* %739, i64 12
  %741 = bitcast i8* %740 to float*
  %742 = load float, float* %741, align 4
  %743 = fmul float %738, %742
  %744 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %745 = getelementptr inbounds i8, i8* %744, i64 8
  %746 = bitcast i8* %745 to float*
  %747 = load float, float* %746, align 4
  %748 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %749 = getelementptr inbounds i8, i8* %748, i64 8
  %750 = bitcast i8* %749 to float*
  %751 = load float, float* %750, align 4
  %752 = fmul float %747, %751
  %753 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %754 = getelementptr inbounds i8, i8* %753, i64 4
  %755 = bitcast i8* %754 to float*
  %756 = load float, float* %755, align 4
  %757 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %758 = getelementptr inbounds i8, i8* %757, i64 4
  %759 = bitcast i8* %758 to float*
  %760 = load float, float* %759, align 4
  %761 = fmul float %756, %760
  %762 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %763 = bitcast i8* %762 to float*
  %764 = load float, float* %763, align 4
  %765 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %766 = bitcast i8* %765 to float*
  %767 = load float, float* %766, align 4
  %768 = fmul float %764, %767
  %769 = fadd float %768, 0.000000e+00
  %770 = fadd float %761, %769
  %771 = fadd float %752, %770
  %772 = fadd float %743, %771
  %773 = call float @llvm.sqrt.f32(float %772)
  %774 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %775 = bitcast i8* %774 to float*
  %776 = load float, float* %775, align 4
  %777 = fcmp olt float %776, 0.000000e+00
  %778 = sext i1 %777 to i32
  %779 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %780 = bitcast i8* %779 to float*
  %781 = load float, float* %780, align 4
  %782 = fcmp ogt float %781, 0.000000e+00
  %783 = zext i1 %782 to i32
  %784 = add nsw i32 %778, %783
  %785 = sitofp i32 %784 to float
  %786 = fneg float %785
  %787 = fmul float %773, %786
  %788 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %789 = getelementptr inbounds i8, i8* %788, i64 8
  %790 = bitcast i8* %789 to float*
  %791 = load float, float* %790, align 4
  %792 = fmul float %787, %791
  %793 = fadd float %734, %792
  %794 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %795 = getelementptr inbounds i8, i8* %794, i64 8
  %796 = bitcast i8* %795 to float*
  %797 = load float, float* %796, align 4
  %798 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %799 = getelementptr inbounds i8, i8* %798, i64 12
  %800 = bitcast i8* %799 to float*
  %801 = load float, float* %800, align 4
  %802 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %803 = getelementptr inbounds i8, i8* %802, i64 12
  %804 = bitcast i8* %803 to float*
  %805 = load float, float* %804, align 4
  %806 = fmul float %801, %805
  %807 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %808 = getelementptr inbounds i8, i8* %807, i64 8
  %809 = bitcast i8* %808 to float*
  %810 = load float, float* %809, align 4
  %811 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %812 = getelementptr inbounds i8, i8* %811, i64 8
  %813 = bitcast i8* %812 to float*
  %814 = load float, float* %813, align 4
  %815 = fmul float %810, %814
  %816 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %817 = getelementptr inbounds i8, i8* %816, i64 4
  %818 = bitcast i8* %817 to float*
  %819 = load float, float* %818, align 4
  %820 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %821 = getelementptr inbounds i8, i8* %820, i64 4
  %822 = bitcast i8* %821 to float*
  %823 = load float, float* %822, align 4
  %824 = fmul float %819, %823
  %825 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %826 = bitcast i8* %825 to float*
  %827 = load float, float* %826, align 4
  %828 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %829 = bitcast i8* %828 to float*
  %830 = load float, float* %829, align 4
  %831 = fmul float %827, %830
  %832 = fadd float %831, 0.000000e+00
  %833 = fadd float %824, %832
  %834 = fadd float %815, %833
  %835 = fadd float %806, %834
  %836 = call float @llvm.sqrt.f32(float %835)
  %837 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %838 = bitcast i8* %837 to float*
  %839 = load float, float* %838, align 4
  %840 = fcmp olt float %839, 0.000000e+00
  %841 = sext i1 %840 to i32
  %842 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %843 = bitcast i8* %842 to float*
  %844 = load float, float* %843, align 4
  %845 = fcmp ogt float %844, 0.000000e+00
  %846 = zext i1 %845 to i32
  %847 = add nsw i32 %841, %846
  %848 = sitofp i32 %847 to float
  %849 = fneg float %848
  %850 = fmul float %836, %849
  %851 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %852 = getelementptr inbounds i8, i8* %851, i64 8
  %853 = bitcast i8* %852 to float*
  %854 = load float, float* %853, align 4
  %855 = fmul float %850, %854
  %856 = fadd float %797, %855
  %857 = fmul float %793, %856
  %858 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %859 = getelementptr inbounds i8, i8* %858, i64 4
  %860 = bitcast i8* %859 to float*
  %861 = load float, float* %860, align 4
  %862 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %863 = getelementptr inbounds i8, i8* %862, i64 12
  %864 = bitcast i8* %863 to float*
  %865 = load float, float* %864, align 4
  %866 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %867 = getelementptr inbounds i8, i8* %866, i64 12
  %868 = bitcast i8* %867 to float*
  %869 = load float, float* %868, align 4
  %870 = fmul float %865, %869
  %871 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %872 = getelementptr inbounds i8, i8* %871, i64 8
  %873 = bitcast i8* %872 to float*
  %874 = load float, float* %873, align 4
  %875 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %876 = getelementptr inbounds i8, i8* %875, i64 8
  %877 = bitcast i8* %876 to float*
  %878 = load float, float* %877, align 4
  %879 = fmul float %874, %878
  %880 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %881 = getelementptr inbounds i8, i8* %880, i64 4
  %882 = bitcast i8* %881 to float*
  %883 = load float, float* %882, align 4
  %884 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %885 = getelementptr inbounds i8, i8* %884, i64 4
  %886 = bitcast i8* %885 to float*
  %887 = load float, float* %886, align 4
  %888 = fmul float %883, %887
  %889 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %890 = bitcast i8* %889 to float*
  %891 = load float, float* %890, align 4
  %892 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %893 = bitcast i8* %892 to float*
  %894 = load float, float* %893, align 4
  %895 = fmul float %891, %894
  %896 = fadd float %895, 0.000000e+00
  %897 = fadd float %888, %896
  %898 = fadd float %879, %897
  %899 = fadd float %870, %898
  %900 = call float @llvm.sqrt.f32(float %899)
  %901 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %902 = bitcast i8* %901 to float*
  %903 = load float, float* %902, align 4
  %904 = fcmp olt float %903, 0.000000e+00
  %905 = sext i1 %904 to i32
  %906 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %907 = bitcast i8* %906 to float*
  %908 = load float, float* %907, align 4
  %909 = fcmp ogt float %908, 0.000000e+00
  %910 = zext i1 %909 to i32
  %911 = add nsw i32 %905, %910
  %912 = sitofp i32 %911 to float
  %913 = fneg float %912
  %914 = fmul float %900, %913
  %915 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %916 = getelementptr inbounds i8, i8* %915, i64 4
  %917 = bitcast i8* %916 to float*
  %918 = load float, float* %917, align 4
  %919 = fmul float %914, %918
  %920 = fadd float %861, %919
  %921 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %922 = getelementptr inbounds i8, i8* %921, i64 4
  %923 = bitcast i8* %922 to float*
  %924 = load float, float* %923, align 4
  %925 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %926 = getelementptr inbounds i8, i8* %925, i64 12
  %927 = bitcast i8* %926 to float*
  %928 = load float, float* %927, align 4
  %929 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %930 = getelementptr inbounds i8, i8* %929, i64 12
  %931 = bitcast i8* %930 to float*
  %932 = load float, float* %931, align 4
  %933 = fmul float %928, %932
  %934 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %935 = getelementptr inbounds i8, i8* %934, i64 8
  %936 = bitcast i8* %935 to float*
  %937 = load float, float* %936, align 4
  %938 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %939 = getelementptr inbounds i8, i8* %938, i64 8
  %940 = bitcast i8* %939 to float*
  %941 = load float, float* %940, align 4
  %942 = fmul float %937, %941
  %943 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %944 = getelementptr inbounds i8, i8* %943, i64 4
  %945 = bitcast i8* %944 to float*
  %946 = load float, float* %945, align 4
  %947 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %948 = getelementptr inbounds i8, i8* %947, i64 4
  %949 = bitcast i8* %948 to float*
  %950 = load float, float* %949, align 4
  %951 = fmul float %946, %950
  %952 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %953 = bitcast i8* %952 to float*
  %954 = load float, float* %953, align 4
  %955 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %956 = bitcast i8* %955 to float*
  %957 = load float, float* %956, align 4
  %958 = fmul float %954, %957
  %959 = fadd float %958, 0.000000e+00
  %960 = fadd float %951, %959
  %961 = fadd float %942, %960
  %962 = fadd float %933, %961
  %963 = call float @llvm.sqrt.f32(float %962)
  %964 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %965 = bitcast i8* %964 to float*
  %966 = load float, float* %965, align 4
  %967 = fcmp olt float %966, 0.000000e+00
  %968 = sext i1 %967 to i32
  %969 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %970 = bitcast i8* %969 to float*
  %971 = load float, float* %970, align 4
  %972 = fcmp ogt float %971, 0.000000e+00
  %973 = zext i1 %972 to i32
  %974 = add nsw i32 %968, %973
  %975 = sitofp i32 %974 to float
  %976 = fneg float %975
  %977 = fmul float %963, %976
  %978 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %979 = getelementptr inbounds i8, i8* %978, i64 4
  %980 = bitcast i8* %979 to float*
  %981 = load float, float* %980, align 4
  %982 = fmul float %977, %981
  %983 = fadd float %924, %982
  %984 = fmul float %920, %983
  %985 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %986 = bitcast i8* %985 to float*
  %987 = load float, float* %986, align 4
  %988 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %989 = getelementptr inbounds i8, i8* %988, i64 12
  %990 = bitcast i8* %989 to float*
  %991 = load float, float* %990, align 4
  %992 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %993 = getelementptr inbounds i8, i8* %992, i64 12
  %994 = bitcast i8* %993 to float*
  %995 = load float, float* %994, align 4
  %996 = fmul float %991, %995
  %997 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %998 = getelementptr inbounds i8, i8* %997, i64 8
  %999 = bitcast i8* %998 to float*
  %1000 = load float, float* %999, align 4
  %1001 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1002 = getelementptr inbounds i8, i8* %1001, i64 8
  %1003 = bitcast i8* %1002 to float*
  %1004 = load float, float* %1003, align 4
  %1005 = fmul float %1000, %1004
  %1006 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1007 = getelementptr inbounds i8, i8* %1006, i64 4
  %1008 = bitcast i8* %1007 to float*
  %1009 = load float, float* %1008, align 4
  %1010 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1011 = getelementptr inbounds i8, i8* %1010, i64 4
  %1012 = bitcast i8* %1011 to float*
  %1013 = load float, float* %1012, align 4
  %1014 = fmul float %1009, %1013
  %1015 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1016 = bitcast i8* %1015 to float*
  %1017 = load float, float* %1016, align 4
  %1018 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1019 = bitcast i8* %1018 to float*
  %1020 = load float, float* %1019, align 4
  %1021 = fmul float %1017, %1020
  %1022 = fadd float %1021, 0.000000e+00
  %1023 = fadd float %1014, %1022
  %1024 = fadd float %1005, %1023
  %1025 = fadd float %996, %1024
  %1026 = call float @llvm.sqrt.f32(float %1025)
  %1027 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1028 = bitcast i8* %1027 to float*
  %1029 = load float, float* %1028, align 4
  %1030 = fcmp olt float %1029, 0.000000e+00
  %1031 = sext i1 %1030 to i32
  %1032 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1033 = bitcast i8* %1032 to float*
  %1034 = load float, float* %1033, align 4
  %1035 = fcmp ogt float %1034, 0.000000e+00
  %1036 = zext i1 %1035 to i32
  %1037 = add nsw i32 %1031, %1036
  %1038 = sitofp i32 %1037 to float
  %1039 = fneg float %1038
  %1040 = fmul float %1026, %1039
  %1041 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1042 = bitcast i8* %1041 to float*
  %1043 = load float, float* %1042, align 4
  %1044 = fmul float %1040, %1043
  %1045 = fadd float %987, %1044
  %1046 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1047 = bitcast i8* %1046 to float*
  %1048 = load float, float* %1047, align 4
  %1049 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1050 = getelementptr inbounds i8, i8* %1049, i64 12
  %1051 = bitcast i8* %1050 to float*
  %1052 = load float, float* %1051, align 4
  %1053 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1054 = getelementptr inbounds i8, i8* %1053, i64 12
  %1055 = bitcast i8* %1054 to float*
  %1056 = load float, float* %1055, align 4
  %1057 = fmul float %1052, %1056
  %1058 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1059 = getelementptr inbounds i8, i8* %1058, i64 8
  %1060 = bitcast i8* %1059 to float*
  %1061 = load float, float* %1060, align 4
  %1062 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1063 = getelementptr inbounds i8, i8* %1062, i64 8
  %1064 = bitcast i8* %1063 to float*
  %1065 = load float, float* %1064, align 4
  %1066 = fmul float %1061, %1065
  %1067 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1068 = getelementptr inbounds i8, i8* %1067, i64 4
  %1069 = bitcast i8* %1068 to float*
  %1070 = load float, float* %1069, align 4
  %1071 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1072 = getelementptr inbounds i8, i8* %1071, i64 4
  %1073 = bitcast i8* %1072 to float*
  %1074 = load float, float* %1073, align 4
  %1075 = fmul float %1070, %1074
  %1076 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1077 = bitcast i8* %1076 to float*
  %1078 = load float, float* %1077, align 4
  %1079 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1080 = bitcast i8* %1079 to float*
  %1081 = load float, float* %1080, align 4
  %1082 = fmul float %1078, %1081
  %1083 = fadd float %1082, 0.000000e+00
  %1084 = fadd float %1075, %1083
  %1085 = fadd float %1066, %1084
  %1086 = fadd float %1057, %1085
  %1087 = call float @llvm.sqrt.f32(float %1086)
  %1088 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1089 = bitcast i8* %1088 to float*
  %1090 = load float, float* %1089, align 4
  %1091 = fcmp olt float %1090, 0.000000e+00
  %1092 = sext i1 %1091 to i32
  %1093 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1094 = bitcast i8* %1093 to float*
  %1095 = load float, float* %1094, align 4
  %1096 = fcmp ogt float %1095, 0.000000e+00
  %1097 = zext i1 %1096 to i32
  %1098 = add nsw i32 %1092, %1097
  %1099 = sitofp i32 %1098 to float
  %1100 = fneg float %1099
  %1101 = fmul float %1087, %1100
  %1102 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1103 = bitcast i8* %1102 to float*
  %1104 = load float, float* %1103, align 4
  %1105 = fmul float %1101, %1104
  %1106 = fadd float %1048, %1105
  %1107 = fmul float %1045, %1106
  %1108 = fadd float %1107, 0.000000e+00
  %1109 = fadd float %984, %1108
  %1110 = fadd float %857, %1109
  %1111 = fadd float %730, %1110
  %1112 = call float @llvm.sqrt.f32(float %1111)
  %1113 = fdiv float %603, %1112
  %1114 = insertelement <4 x float> %542, float %1113, i32 1
  %1115 = insertelement <4 x float> %1114, float 0.000000e+00, i32 2
  %1116 = insertelement <4 x float> %1115, float 0.000000e+00, i32 3
  %1117 = extractelement <4 x float> %1116, i32 0
  %1118 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1119 = getelementptr inbounds i8, i8* %1118, i64 12
  %1120 = bitcast i8* %1119 to float*
  store float %1117, float* %1120, align 4
  %1121 = extractelement <4 x float> %1116, i32 1
  %1122 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1123 = bitcast i8* %1122 to float*
  store float %1121, float* %1123, align 4
  %1124 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1125 = getelementptr inbounds i8, i8* %1124, i64 4
  %1126 = bitcast i8* %1125 to float*
  %1127 = load float, float* %1126, align 4
  %1128 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1129 = getelementptr inbounds i8, i8* %1128, i64 12
  %1130 = bitcast i8* %1129 to float*
  %1131 = load float, float* %1130, align 4
  %1132 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1133 = getelementptr inbounds i8, i8* %1132, i64 12
  %1134 = bitcast i8* %1133 to float*
  %1135 = load float, float* %1134, align 4
  %1136 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1137 = getelementptr inbounds i8, i8* %1136, i64 12
  %1138 = bitcast i8* %1137 to float*
  %1139 = load float, float* %1138, align 4
  %1140 = fmul float %1135, %1139
  %1141 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1142 = getelementptr inbounds i8, i8* %1141, i64 8
  %1143 = bitcast i8* %1142 to float*
  %1144 = load float, float* %1143, align 4
  %1145 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1146 = getelementptr inbounds i8, i8* %1145, i64 8
  %1147 = bitcast i8* %1146 to float*
  %1148 = load float, float* %1147, align 4
  %1149 = fmul float %1144, %1148
  %1150 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1151 = getelementptr inbounds i8, i8* %1150, i64 4
  %1152 = bitcast i8* %1151 to float*
  %1153 = load float, float* %1152, align 4
  %1154 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1155 = getelementptr inbounds i8, i8* %1154, i64 4
  %1156 = bitcast i8* %1155 to float*
  %1157 = load float, float* %1156, align 4
  %1158 = fmul float %1153, %1157
  %1159 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1160 = bitcast i8* %1159 to float*
  %1161 = load float, float* %1160, align 4
  %1162 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1163 = bitcast i8* %1162 to float*
  %1164 = load float, float* %1163, align 4
  %1165 = fmul float %1161, %1164
  %1166 = fadd float %1165, 0.000000e+00
  %1167 = fadd float %1158, %1166
  %1168 = fadd float %1149, %1167
  %1169 = fadd float %1140, %1168
  %1170 = call float @llvm.sqrt.f32(float %1169)
  %1171 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1172 = bitcast i8* %1171 to float*
  %1173 = load float, float* %1172, align 4
  %1174 = fcmp olt float %1173, 0.000000e+00
  %1175 = sext i1 %1174 to i32
  %1176 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1177 = bitcast i8* %1176 to float*
  %1178 = load float, float* %1177, align 4
  %1179 = fcmp ogt float %1178, 0.000000e+00
  %1180 = zext i1 %1179 to i32
  %1181 = add nsw i32 %1175, %1180
  %1182 = sitofp i32 %1181 to float
  %1183 = fneg float %1182
  %1184 = fmul float %1170, %1183
  %1185 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1186 = getelementptr inbounds i8, i8* %1185, i64 12
  %1187 = bitcast i8* %1186 to float*
  %1188 = load float, float* %1187, align 4
  %1189 = fmul float %1184, %1188
  %1190 = fadd float %1131, %1189
  %1191 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1192 = getelementptr inbounds i8, i8* %1191, i64 12
  %1193 = bitcast i8* %1192 to float*
  %1194 = load float, float* %1193, align 4
  %1195 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1196 = getelementptr inbounds i8, i8* %1195, i64 12
  %1197 = bitcast i8* %1196 to float*
  %1198 = load float, float* %1197, align 4
  %1199 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1200 = getelementptr inbounds i8, i8* %1199, i64 12
  %1201 = bitcast i8* %1200 to float*
  %1202 = load float, float* %1201, align 4
  %1203 = fmul float %1198, %1202
  %1204 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1205 = getelementptr inbounds i8, i8* %1204, i64 8
  %1206 = bitcast i8* %1205 to float*
  %1207 = load float, float* %1206, align 4
  %1208 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1209 = getelementptr inbounds i8, i8* %1208, i64 8
  %1210 = bitcast i8* %1209 to float*
  %1211 = load float, float* %1210, align 4
  %1212 = fmul float %1207, %1211
  %1213 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1214 = getelementptr inbounds i8, i8* %1213, i64 4
  %1215 = bitcast i8* %1214 to float*
  %1216 = load float, float* %1215, align 4
  %1217 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1218 = getelementptr inbounds i8, i8* %1217, i64 4
  %1219 = bitcast i8* %1218 to float*
  %1220 = load float, float* %1219, align 4
  %1221 = fmul float %1216, %1220
  %1222 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1223 = bitcast i8* %1222 to float*
  %1224 = load float, float* %1223, align 4
  %1225 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1226 = bitcast i8* %1225 to float*
  %1227 = load float, float* %1226, align 4
  %1228 = fmul float %1224, %1227
  %1229 = fadd float %1228, 0.000000e+00
  %1230 = fadd float %1221, %1229
  %1231 = fadd float %1212, %1230
  %1232 = fadd float %1203, %1231
  %1233 = call float @llvm.sqrt.f32(float %1232)
  %1234 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1235 = bitcast i8* %1234 to float*
  %1236 = load float, float* %1235, align 4
  %1237 = fcmp olt float %1236, 0.000000e+00
  %1238 = sext i1 %1237 to i32
  %1239 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1240 = bitcast i8* %1239 to float*
  %1241 = load float, float* %1240, align 4
  %1242 = fcmp ogt float %1241, 0.000000e+00
  %1243 = zext i1 %1242 to i32
  %1244 = add nsw i32 %1238, %1243
  %1245 = sitofp i32 %1244 to float
  %1246 = fneg float %1245
  %1247 = fmul float %1233, %1246
  %1248 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1249 = getelementptr inbounds i8, i8* %1248, i64 12
  %1250 = bitcast i8* %1249 to float*
  %1251 = load float, float* %1250, align 4
  %1252 = fmul float %1247, %1251
  %1253 = fadd float %1194, %1252
  %1254 = fmul float %1190, %1253
  %1255 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1256 = getelementptr inbounds i8, i8* %1255, i64 8
  %1257 = bitcast i8* %1256 to float*
  %1258 = load float, float* %1257, align 4
  %1259 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1260 = getelementptr inbounds i8, i8* %1259, i64 12
  %1261 = bitcast i8* %1260 to float*
  %1262 = load float, float* %1261, align 4
  %1263 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1264 = getelementptr inbounds i8, i8* %1263, i64 12
  %1265 = bitcast i8* %1264 to float*
  %1266 = load float, float* %1265, align 4
  %1267 = fmul float %1262, %1266
  %1268 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1269 = getelementptr inbounds i8, i8* %1268, i64 8
  %1270 = bitcast i8* %1269 to float*
  %1271 = load float, float* %1270, align 4
  %1272 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1273 = getelementptr inbounds i8, i8* %1272, i64 8
  %1274 = bitcast i8* %1273 to float*
  %1275 = load float, float* %1274, align 4
  %1276 = fmul float %1271, %1275
  %1277 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1278 = getelementptr inbounds i8, i8* %1277, i64 4
  %1279 = bitcast i8* %1278 to float*
  %1280 = load float, float* %1279, align 4
  %1281 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1282 = getelementptr inbounds i8, i8* %1281, i64 4
  %1283 = bitcast i8* %1282 to float*
  %1284 = load float, float* %1283, align 4
  %1285 = fmul float %1280, %1284
  %1286 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1287 = bitcast i8* %1286 to float*
  %1288 = load float, float* %1287, align 4
  %1289 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1290 = bitcast i8* %1289 to float*
  %1291 = load float, float* %1290, align 4
  %1292 = fmul float %1288, %1291
  %1293 = fadd float %1292, 0.000000e+00
  %1294 = fadd float %1285, %1293
  %1295 = fadd float %1276, %1294
  %1296 = fadd float %1267, %1295
  %1297 = call float @llvm.sqrt.f32(float %1296)
  %1298 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1299 = bitcast i8* %1298 to float*
  %1300 = load float, float* %1299, align 4
  %1301 = fcmp olt float %1300, 0.000000e+00
  %1302 = sext i1 %1301 to i32
  %1303 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1304 = bitcast i8* %1303 to float*
  %1305 = load float, float* %1304, align 4
  %1306 = fcmp ogt float %1305, 0.000000e+00
  %1307 = zext i1 %1306 to i32
  %1308 = add nsw i32 %1302, %1307
  %1309 = sitofp i32 %1308 to float
  %1310 = fneg float %1309
  %1311 = fmul float %1297, %1310
  %1312 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1313 = getelementptr inbounds i8, i8* %1312, i64 8
  %1314 = bitcast i8* %1313 to float*
  %1315 = load float, float* %1314, align 4
  %1316 = fmul float %1311, %1315
  %1317 = fadd float %1258, %1316
  %1318 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1319 = getelementptr inbounds i8, i8* %1318, i64 8
  %1320 = bitcast i8* %1319 to float*
  %1321 = load float, float* %1320, align 4
  %1322 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1323 = getelementptr inbounds i8, i8* %1322, i64 12
  %1324 = bitcast i8* %1323 to float*
  %1325 = load float, float* %1324, align 4
  %1326 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1327 = getelementptr inbounds i8, i8* %1326, i64 12
  %1328 = bitcast i8* %1327 to float*
  %1329 = load float, float* %1328, align 4
  %1330 = fmul float %1325, %1329
  %1331 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1332 = getelementptr inbounds i8, i8* %1331, i64 8
  %1333 = bitcast i8* %1332 to float*
  %1334 = load float, float* %1333, align 4
  %1335 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1336 = getelementptr inbounds i8, i8* %1335, i64 8
  %1337 = bitcast i8* %1336 to float*
  %1338 = load float, float* %1337, align 4
  %1339 = fmul float %1334, %1338
  %1340 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1341 = getelementptr inbounds i8, i8* %1340, i64 4
  %1342 = bitcast i8* %1341 to float*
  %1343 = load float, float* %1342, align 4
  %1344 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1345 = getelementptr inbounds i8, i8* %1344, i64 4
  %1346 = bitcast i8* %1345 to float*
  %1347 = load float, float* %1346, align 4
  %1348 = fmul float %1343, %1347
  %1349 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1350 = bitcast i8* %1349 to float*
  %1351 = load float, float* %1350, align 4
  %1352 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1353 = bitcast i8* %1352 to float*
  %1354 = load float, float* %1353, align 4
  %1355 = fmul float %1351, %1354
  %1356 = fadd float %1355, 0.000000e+00
  %1357 = fadd float %1348, %1356
  %1358 = fadd float %1339, %1357
  %1359 = fadd float %1330, %1358
  %1360 = call float @llvm.sqrt.f32(float %1359)
  %1361 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1362 = bitcast i8* %1361 to float*
  %1363 = load float, float* %1362, align 4
  %1364 = fcmp olt float %1363, 0.000000e+00
  %1365 = sext i1 %1364 to i32
  %1366 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1367 = bitcast i8* %1366 to float*
  %1368 = load float, float* %1367, align 4
  %1369 = fcmp ogt float %1368, 0.000000e+00
  %1370 = zext i1 %1369 to i32
  %1371 = add nsw i32 %1365, %1370
  %1372 = sitofp i32 %1371 to float
  %1373 = fneg float %1372
  %1374 = fmul float %1360, %1373
  %1375 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1376 = getelementptr inbounds i8, i8* %1375, i64 8
  %1377 = bitcast i8* %1376 to float*
  %1378 = load float, float* %1377, align 4
  %1379 = fmul float %1374, %1378
  %1380 = fadd float %1321, %1379
  %1381 = fmul float %1317, %1380
  %1382 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1383 = getelementptr inbounds i8, i8* %1382, i64 4
  %1384 = bitcast i8* %1383 to float*
  %1385 = load float, float* %1384, align 4
  %1386 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1387 = getelementptr inbounds i8, i8* %1386, i64 12
  %1388 = bitcast i8* %1387 to float*
  %1389 = load float, float* %1388, align 4
  %1390 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1391 = getelementptr inbounds i8, i8* %1390, i64 12
  %1392 = bitcast i8* %1391 to float*
  %1393 = load float, float* %1392, align 4
  %1394 = fmul float %1389, %1393
  %1395 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1396 = getelementptr inbounds i8, i8* %1395, i64 8
  %1397 = bitcast i8* %1396 to float*
  %1398 = load float, float* %1397, align 4
  %1399 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1400 = getelementptr inbounds i8, i8* %1399, i64 8
  %1401 = bitcast i8* %1400 to float*
  %1402 = load float, float* %1401, align 4
  %1403 = fmul float %1398, %1402
  %1404 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1405 = getelementptr inbounds i8, i8* %1404, i64 4
  %1406 = bitcast i8* %1405 to float*
  %1407 = load float, float* %1406, align 4
  %1408 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1409 = getelementptr inbounds i8, i8* %1408, i64 4
  %1410 = bitcast i8* %1409 to float*
  %1411 = load float, float* %1410, align 4
  %1412 = fmul float %1407, %1411
  %1413 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1414 = bitcast i8* %1413 to float*
  %1415 = load float, float* %1414, align 4
  %1416 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1417 = bitcast i8* %1416 to float*
  %1418 = load float, float* %1417, align 4
  %1419 = fmul float %1415, %1418
  %1420 = fadd float %1419, 0.000000e+00
  %1421 = fadd float %1412, %1420
  %1422 = fadd float %1403, %1421
  %1423 = fadd float %1394, %1422
  %1424 = call float @llvm.sqrt.f32(float %1423)
  %1425 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1426 = bitcast i8* %1425 to float*
  %1427 = load float, float* %1426, align 4
  %1428 = fcmp olt float %1427, 0.000000e+00
  %1429 = sext i1 %1428 to i32
  %1430 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1431 = bitcast i8* %1430 to float*
  %1432 = load float, float* %1431, align 4
  %1433 = fcmp ogt float %1432, 0.000000e+00
  %1434 = zext i1 %1433 to i32
  %1435 = add nsw i32 %1429, %1434
  %1436 = sitofp i32 %1435 to float
  %1437 = fneg float %1436
  %1438 = fmul float %1424, %1437
  %1439 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1440 = getelementptr inbounds i8, i8* %1439, i64 4
  %1441 = bitcast i8* %1440 to float*
  %1442 = load float, float* %1441, align 4
  %1443 = fmul float %1438, %1442
  %1444 = fadd float %1385, %1443
  %1445 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1446 = getelementptr inbounds i8, i8* %1445, i64 4
  %1447 = bitcast i8* %1446 to float*
  %1448 = load float, float* %1447, align 4
  %1449 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1450 = getelementptr inbounds i8, i8* %1449, i64 12
  %1451 = bitcast i8* %1450 to float*
  %1452 = load float, float* %1451, align 4
  %1453 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1454 = getelementptr inbounds i8, i8* %1453, i64 12
  %1455 = bitcast i8* %1454 to float*
  %1456 = load float, float* %1455, align 4
  %1457 = fmul float %1452, %1456
  %1458 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1459 = getelementptr inbounds i8, i8* %1458, i64 8
  %1460 = bitcast i8* %1459 to float*
  %1461 = load float, float* %1460, align 4
  %1462 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1463 = getelementptr inbounds i8, i8* %1462, i64 8
  %1464 = bitcast i8* %1463 to float*
  %1465 = load float, float* %1464, align 4
  %1466 = fmul float %1461, %1465
  %1467 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1468 = getelementptr inbounds i8, i8* %1467, i64 4
  %1469 = bitcast i8* %1468 to float*
  %1470 = load float, float* %1469, align 4
  %1471 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1472 = getelementptr inbounds i8, i8* %1471, i64 4
  %1473 = bitcast i8* %1472 to float*
  %1474 = load float, float* %1473, align 4
  %1475 = fmul float %1470, %1474
  %1476 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1477 = bitcast i8* %1476 to float*
  %1478 = load float, float* %1477, align 4
  %1479 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1480 = bitcast i8* %1479 to float*
  %1481 = load float, float* %1480, align 4
  %1482 = fmul float %1478, %1481
  %1483 = fadd float %1482, 0.000000e+00
  %1484 = fadd float %1475, %1483
  %1485 = fadd float %1466, %1484
  %1486 = fadd float %1457, %1485
  %1487 = call float @llvm.sqrt.f32(float %1486)
  %1488 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1489 = bitcast i8* %1488 to float*
  %1490 = load float, float* %1489, align 4
  %1491 = fcmp olt float %1490, 0.000000e+00
  %1492 = sext i1 %1491 to i32
  %1493 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1494 = bitcast i8* %1493 to float*
  %1495 = load float, float* %1494, align 4
  %1496 = fcmp ogt float %1495, 0.000000e+00
  %1497 = zext i1 %1496 to i32
  %1498 = add nsw i32 %1492, %1497
  %1499 = sitofp i32 %1498 to float
  %1500 = fneg float %1499
  %1501 = fmul float %1487, %1500
  %1502 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1503 = getelementptr inbounds i8, i8* %1502, i64 4
  %1504 = bitcast i8* %1503 to float*
  %1505 = load float, float* %1504, align 4
  %1506 = fmul float %1501, %1505
  %1507 = fadd float %1448, %1506
  %1508 = fmul float %1444, %1507
  %1509 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1510 = bitcast i8* %1509 to float*
  %1511 = load float, float* %1510, align 4
  %1512 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1513 = getelementptr inbounds i8, i8* %1512, i64 12
  %1514 = bitcast i8* %1513 to float*
  %1515 = load float, float* %1514, align 4
  %1516 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1517 = getelementptr inbounds i8, i8* %1516, i64 12
  %1518 = bitcast i8* %1517 to float*
  %1519 = load float, float* %1518, align 4
  %1520 = fmul float %1515, %1519
  %1521 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1522 = getelementptr inbounds i8, i8* %1521, i64 8
  %1523 = bitcast i8* %1522 to float*
  %1524 = load float, float* %1523, align 4
  %1525 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1526 = getelementptr inbounds i8, i8* %1525, i64 8
  %1527 = bitcast i8* %1526 to float*
  %1528 = load float, float* %1527, align 4
  %1529 = fmul float %1524, %1528
  %1530 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1531 = getelementptr inbounds i8, i8* %1530, i64 4
  %1532 = bitcast i8* %1531 to float*
  %1533 = load float, float* %1532, align 4
  %1534 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1535 = getelementptr inbounds i8, i8* %1534, i64 4
  %1536 = bitcast i8* %1535 to float*
  %1537 = load float, float* %1536, align 4
  %1538 = fmul float %1533, %1537
  %1539 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1540 = bitcast i8* %1539 to float*
  %1541 = load float, float* %1540, align 4
  %1542 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1543 = bitcast i8* %1542 to float*
  %1544 = load float, float* %1543, align 4
  %1545 = fmul float %1541, %1544
  %1546 = fadd float %1545, 0.000000e+00
  %1547 = fadd float %1538, %1546
  %1548 = fadd float %1529, %1547
  %1549 = fadd float %1520, %1548
  %1550 = call float @llvm.sqrt.f32(float %1549)
  %1551 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1552 = bitcast i8* %1551 to float*
  %1553 = load float, float* %1552, align 4
  %1554 = fcmp olt float %1553, 0.000000e+00
  %1555 = sext i1 %1554 to i32
  %1556 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1557 = bitcast i8* %1556 to float*
  %1558 = load float, float* %1557, align 4
  %1559 = fcmp ogt float %1558, 0.000000e+00
  %1560 = zext i1 %1559 to i32
  %1561 = add nsw i32 %1555, %1560
  %1562 = sitofp i32 %1561 to float
  %1563 = fneg float %1562
  %1564 = fmul float %1550, %1563
  %1565 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1566 = bitcast i8* %1565 to float*
  %1567 = load float, float* %1566, align 4
  %1568 = fmul float %1564, %1567
  %1569 = fadd float %1511, %1568
  %1570 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1571 = bitcast i8* %1570 to float*
  %1572 = load float, float* %1571, align 4
  %1573 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1574 = getelementptr inbounds i8, i8* %1573, i64 12
  %1575 = bitcast i8* %1574 to float*
  %1576 = load float, float* %1575, align 4
  %1577 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1578 = getelementptr inbounds i8, i8* %1577, i64 12
  %1579 = bitcast i8* %1578 to float*
  %1580 = load float, float* %1579, align 4
  %1581 = fmul float %1576, %1580
  %1582 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1583 = getelementptr inbounds i8, i8* %1582, i64 8
  %1584 = bitcast i8* %1583 to float*
  %1585 = load float, float* %1584, align 4
  %1586 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1587 = getelementptr inbounds i8, i8* %1586, i64 8
  %1588 = bitcast i8* %1587 to float*
  %1589 = load float, float* %1588, align 4
  %1590 = fmul float %1585, %1589
  %1591 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1592 = getelementptr inbounds i8, i8* %1591, i64 4
  %1593 = bitcast i8* %1592 to float*
  %1594 = load float, float* %1593, align 4
  %1595 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1596 = getelementptr inbounds i8, i8* %1595, i64 4
  %1597 = bitcast i8* %1596 to float*
  %1598 = load float, float* %1597, align 4
  %1599 = fmul float %1594, %1598
  %1600 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1601 = bitcast i8* %1600 to float*
  %1602 = load float, float* %1601, align 4
  %1603 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1604 = bitcast i8* %1603 to float*
  %1605 = load float, float* %1604, align 4
  %1606 = fmul float %1602, %1605
  %1607 = fadd float %1606, 0.000000e+00
  %1608 = fadd float %1599, %1607
  %1609 = fadd float %1590, %1608
  %1610 = fadd float %1581, %1609
  %1611 = call float @llvm.sqrt.f32(float %1610)
  %1612 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1613 = bitcast i8* %1612 to float*
  %1614 = load float, float* %1613, align 4
  %1615 = fcmp olt float %1614, 0.000000e+00
  %1616 = sext i1 %1615 to i32
  %1617 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1618 = bitcast i8* %1617 to float*
  %1619 = load float, float* %1618, align 4
  %1620 = fcmp ogt float %1619, 0.000000e+00
  %1621 = zext i1 %1620 to i32
  %1622 = add nsw i32 %1616, %1621
  %1623 = sitofp i32 %1622 to float
  %1624 = fneg float %1623
  %1625 = fmul float %1611, %1624
  %1626 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1627 = bitcast i8* %1626 to float*
  %1628 = load float, float* %1627, align 4
  %1629 = fmul float %1625, %1628
  %1630 = fadd float %1572, %1629
  %1631 = fmul float %1569, %1630
  %1632 = fadd float %1631, 0.000000e+00
  %1633 = fadd float %1508, %1632
  %1634 = fadd float %1381, %1633
  %1635 = fadd float %1254, %1634
  %1636 = call float @llvm.sqrt.f32(float %1635)
  %1637 = fdiv float %1127, %1636
  %1638 = insertelement <4 x float> zeroinitializer, float %1637, i32 0
  %1639 = insertelement <4 x float> %1638, float 0.000000e+00, i32 1
  %1640 = insertelement <4 x float> %1639, float 0.000000e+00, i32 2
  %1641 = insertelement <4 x float> %1640, float 0.000000e+00, i32 3
  %1642 = extractelement <4 x float> %1641, i32 0
  %1643 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1644 = getelementptr inbounds i8, i8* %1643, i64 4
  %1645 = bitcast i8* %1644 to float*
  store float %1642, float* %1645, align 4
  %1646 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1647 = getelementptr inbounds i8, i8* %1646, i64 8
  %1648 = bitcast i8* %1647 to float*
  %1649 = load float, float* %1648, align 4
  %1650 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1651 = getelementptr inbounds i8, i8* %1650, i64 12
  %1652 = bitcast i8* %1651 to float*
  %1653 = load float, float* %1652, align 4
  %1654 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1655 = getelementptr inbounds i8, i8* %1654, i64 12
  %1656 = bitcast i8* %1655 to float*
  %1657 = load float, float* %1656, align 4
  %1658 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1659 = getelementptr inbounds i8, i8* %1658, i64 12
  %1660 = bitcast i8* %1659 to float*
  %1661 = load float, float* %1660, align 4
  %1662 = fmul float %1657, %1661
  %1663 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1664 = getelementptr inbounds i8, i8* %1663, i64 8
  %1665 = bitcast i8* %1664 to float*
  %1666 = load float, float* %1665, align 4
  %1667 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1668 = getelementptr inbounds i8, i8* %1667, i64 8
  %1669 = bitcast i8* %1668 to float*
  %1670 = load float, float* %1669, align 4
  %1671 = fmul float %1666, %1670
  %1672 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1673 = getelementptr inbounds i8, i8* %1672, i64 4
  %1674 = bitcast i8* %1673 to float*
  %1675 = load float, float* %1674, align 4
  %1676 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1677 = getelementptr inbounds i8, i8* %1676, i64 4
  %1678 = bitcast i8* %1677 to float*
  %1679 = load float, float* %1678, align 4
  %1680 = fmul float %1675, %1679
  %1681 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1682 = bitcast i8* %1681 to float*
  %1683 = load float, float* %1682, align 4
  %1684 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1685 = bitcast i8* %1684 to float*
  %1686 = load float, float* %1685, align 4
  %1687 = fmul float %1683, %1686
  %1688 = fadd float %1687, 0.000000e+00
  %1689 = fadd float %1680, %1688
  %1690 = fadd float %1671, %1689
  %1691 = fadd float %1662, %1690
  %1692 = call float @llvm.sqrt.f32(float %1691)
  %1693 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1694 = bitcast i8* %1693 to float*
  %1695 = load float, float* %1694, align 4
  %1696 = fcmp olt float %1695, 0.000000e+00
  %1697 = sext i1 %1696 to i32
  %1698 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1699 = bitcast i8* %1698 to float*
  %1700 = load float, float* %1699, align 4
  %1701 = fcmp ogt float %1700, 0.000000e+00
  %1702 = zext i1 %1701 to i32
  %1703 = add nsw i32 %1697, %1702
  %1704 = sitofp i32 %1703 to float
  %1705 = fneg float %1704
  %1706 = fmul float %1692, %1705
  %1707 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1708 = getelementptr inbounds i8, i8* %1707, i64 12
  %1709 = bitcast i8* %1708 to float*
  %1710 = load float, float* %1709, align 4
  %1711 = fmul float %1706, %1710
  %1712 = fadd float %1653, %1711
  %1713 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1714 = getelementptr inbounds i8, i8* %1713, i64 12
  %1715 = bitcast i8* %1714 to float*
  %1716 = load float, float* %1715, align 4
  %1717 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1718 = getelementptr inbounds i8, i8* %1717, i64 12
  %1719 = bitcast i8* %1718 to float*
  %1720 = load float, float* %1719, align 4
  %1721 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1722 = getelementptr inbounds i8, i8* %1721, i64 12
  %1723 = bitcast i8* %1722 to float*
  %1724 = load float, float* %1723, align 4
  %1725 = fmul float %1720, %1724
  %1726 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1727 = getelementptr inbounds i8, i8* %1726, i64 8
  %1728 = bitcast i8* %1727 to float*
  %1729 = load float, float* %1728, align 4
  %1730 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1731 = getelementptr inbounds i8, i8* %1730, i64 8
  %1732 = bitcast i8* %1731 to float*
  %1733 = load float, float* %1732, align 4
  %1734 = fmul float %1729, %1733
  %1735 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1736 = getelementptr inbounds i8, i8* %1735, i64 4
  %1737 = bitcast i8* %1736 to float*
  %1738 = load float, float* %1737, align 4
  %1739 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1740 = getelementptr inbounds i8, i8* %1739, i64 4
  %1741 = bitcast i8* %1740 to float*
  %1742 = load float, float* %1741, align 4
  %1743 = fmul float %1738, %1742
  %1744 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1745 = bitcast i8* %1744 to float*
  %1746 = load float, float* %1745, align 4
  %1747 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1748 = bitcast i8* %1747 to float*
  %1749 = load float, float* %1748, align 4
  %1750 = fmul float %1746, %1749
  %1751 = fadd float %1750, 0.000000e+00
  %1752 = fadd float %1743, %1751
  %1753 = fadd float %1734, %1752
  %1754 = fadd float %1725, %1753
  %1755 = call float @llvm.sqrt.f32(float %1754)
  %1756 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1757 = bitcast i8* %1756 to float*
  %1758 = load float, float* %1757, align 4
  %1759 = fcmp olt float %1758, 0.000000e+00
  %1760 = sext i1 %1759 to i32
  %1761 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1762 = bitcast i8* %1761 to float*
  %1763 = load float, float* %1762, align 4
  %1764 = fcmp ogt float %1763, 0.000000e+00
  %1765 = zext i1 %1764 to i32
  %1766 = add nsw i32 %1760, %1765
  %1767 = sitofp i32 %1766 to float
  %1768 = fneg float %1767
  %1769 = fmul float %1755, %1768
  %1770 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1771 = getelementptr inbounds i8, i8* %1770, i64 12
  %1772 = bitcast i8* %1771 to float*
  %1773 = load float, float* %1772, align 4
  %1774 = fmul float %1769, %1773
  %1775 = fadd float %1716, %1774
  %1776 = fmul float %1712, %1775
  %1777 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1778 = getelementptr inbounds i8, i8* %1777, i64 8
  %1779 = bitcast i8* %1778 to float*
  %1780 = load float, float* %1779, align 4
  %1781 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1782 = getelementptr inbounds i8, i8* %1781, i64 12
  %1783 = bitcast i8* %1782 to float*
  %1784 = load float, float* %1783, align 4
  %1785 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1786 = getelementptr inbounds i8, i8* %1785, i64 12
  %1787 = bitcast i8* %1786 to float*
  %1788 = load float, float* %1787, align 4
  %1789 = fmul float %1784, %1788
  %1790 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1791 = getelementptr inbounds i8, i8* %1790, i64 8
  %1792 = bitcast i8* %1791 to float*
  %1793 = load float, float* %1792, align 4
  %1794 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1795 = getelementptr inbounds i8, i8* %1794, i64 8
  %1796 = bitcast i8* %1795 to float*
  %1797 = load float, float* %1796, align 4
  %1798 = fmul float %1793, %1797
  %1799 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1800 = getelementptr inbounds i8, i8* %1799, i64 4
  %1801 = bitcast i8* %1800 to float*
  %1802 = load float, float* %1801, align 4
  %1803 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1804 = getelementptr inbounds i8, i8* %1803, i64 4
  %1805 = bitcast i8* %1804 to float*
  %1806 = load float, float* %1805, align 4
  %1807 = fmul float %1802, %1806
  %1808 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1809 = bitcast i8* %1808 to float*
  %1810 = load float, float* %1809, align 4
  %1811 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1812 = bitcast i8* %1811 to float*
  %1813 = load float, float* %1812, align 4
  %1814 = fmul float %1810, %1813
  %1815 = fadd float %1814, 0.000000e+00
  %1816 = fadd float %1807, %1815
  %1817 = fadd float %1798, %1816
  %1818 = fadd float %1789, %1817
  %1819 = call float @llvm.sqrt.f32(float %1818)
  %1820 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1821 = bitcast i8* %1820 to float*
  %1822 = load float, float* %1821, align 4
  %1823 = fcmp olt float %1822, 0.000000e+00
  %1824 = sext i1 %1823 to i32
  %1825 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1826 = bitcast i8* %1825 to float*
  %1827 = load float, float* %1826, align 4
  %1828 = fcmp ogt float %1827, 0.000000e+00
  %1829 = zext i1 %1828 to i32
  %1830 = add nsw i32 %1824, %1829
  %1831 = sitofp i32 %1830 to float
  %1832 = fneg float %1831
  %1833 = fmul float %1819, %1832
  %1834 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1835 = getelementptr inbounds i8, i8* %1834, i64 8
  %1836 = bitcast i8* %1835 to float*
  %1837 = load float, float* %1836, align 4
  %1838 = fmul float %1833, %1837
  %1839 = fadd float %1780, %1838
  %1840 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1841 = getelementptr inbounds i8, i8* %1840, i64 8
  %1842 = bitcast i8* %1841 to float*
  %1843 = load float, float* %1842, align 4
  %1844 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1845 = getelementptr inbounds i8, i8* %1844, i64 12
  %1846 = bitcast i8* %1845 to float*
  %1847 = load float, float* %1846, align 4
  %1848 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1849 = getelementptr inbounds i8, i8* %1848, i64 12
  %1850 = bitcast i8* %1849 to float*
  %1851 = load float, float* %1850, align 4
  %1852 = fmul float %1847, %1851
  %1853 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1854 = getelementptr inbounds i8, i8* %1853, i64 8
  %1855 = bitcast i8* %1854 to float*
  %1856 = load float, float* %1855, align 4
  %1857 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1858 = getelementptr inbounds i8, i8* %1857, i64 8
  %1859 = bitcast i8* %1858 to float*
  %1860 = load float, float* %1859, align 4
  %1861 = fmul float %1856, %1860
  %1862 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1863 = getelementptr inbounds i8, i8* %1862, i64 4
  %1864 = bitcast i8* %1863 to float*
  %1865 = load float, float* %1864, align 4
  %1866 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1867 = getelementptr inbounds i8, i8* %1866, i64 4
  %1868 = bitcast i8* %1867 to float*
  %1869 = load float, float* %1868, align 4
  %1870 = fmul float %1865, %1869
  %1871 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1872 = bitcast i8* %1871 to float*
  %1873 = load float, float* %1872, align 4
  %1874 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1875 = bitcast i8* %1874 to float*
  %1876 = load float, float* %1875, align 4
  %1877 = fmul float %1873, %1876
  %1878 = fadd float %1877, 0.000000e+00
  %1879 = fadd float %1870, %1878
  %1880 = fadd float %1861, %1879
  %1881 = fadd float %1852, %1880
  %1882 = call float @llvm.sqrt.f32(float %1881)
  %1883 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1884 = bitcast i8* %1883 to float*
  %1885 = load float, float* %1884, align 4
  %1886 = fcmp olt float %1885, 0.000000e+00
  %1887 = sext i1 %1886 to i32
  %1888 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1889 = bitcast i8* %1888 to float*
  %1890 = load float, float* %1889, align 4
  %1891 = fcmp ogt float %1890, 0.000000e+00
  %1892 = zext i1 %1891 to i32
  %1893 = add nsw i32 %1887, %1892
  %1894 = sitofp i32 %1893 to float
  %1895 = fneg float %1894
  %1896 = fmul float %1882, %1895
  %1897 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1898 = getelementptr inbounds i8, i8* %1897, i64 8
  %1899 = bitcast i8* %1898 to float*
  %1900 = load float, float* %1899, align 4
  %1901 = fmul float %1896, %1900
  %1902 = fadd float %1843, %1901
  %1903 = fmul float %1839, %1902
  %1904 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1905 = getelementptr inbounds i8, i8* %1904, i64 4
  %1906 = bitcast i8* %1905 to float*
  %1907 = load float, float* %1906, align 4
  %1908 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1909 = getelementptr inbounds i8, i8* %1908, i64 12
  %1910 = bitcast i8* %1909 to float*
  %1911 = load float, float* %1910, align 4
  %1912 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1913 = getelementptr inbounds i8, i8* %1912, i64 12
  %1914 = bitcast i8* %1913 to float*
  %1915 = load float, float* %1914, align 4
  %1916 = fmul float %1911, %1915
  %1917 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1918 = getelementptr inbounds i8, i8* %1917, i64 8
  %1919 = bitcast i8* %1918 to float*
  %1920 = load float, float* %1919, align 4
  %1921 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1922 = getelementptr inbounds i8, i8* %1921, i64 8
  %1923 = bitcast i8* %1922 to float*
  %1924 = load float, float* %1923, align 4
  %1925 = fmul float %1920, %1924
  %1926 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1927 = getelementptr inbounds i8, i8* %1926, i64 4
  %1928 = bitcast i8* %1927 to float*
  %1929 = load float, float* %1928, align 4
  %1930 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1931 = getelementptr inbounds i8, i8* %1930, i64 4
  %1932 = bitcast i8* %1931 to float*
  %1933 = load float, float* %1932, align 4
  %1934 = fmul float %1929, %1933
  %1935 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1936 = bitcast i8* %1935 to float*
  %1937 = load float, float* %1936, align 4
  %1938 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1939 = bitcast i8* %1938 to float*
  %1940 = load float, float* %1939, align 4
  %1941 = fmul float %1937, %1940
  %1942 = fadd float %1941, 0.000000e+00
  %1943 = fadd float %1934, %1942
  %1944 = fadd float %1925, %1943
  %1945 = fadd float %1916, %1944
  %1946 = call float @llvm.sqrt.f32(float %1945)
  %1947 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1948 = bitcast i8* %1947 to float*
  %1949 = load float, float* %1948, align 4
  %1950 = fcmp olt float %1949, 0.000000e+00
  %1951 = sext i1 %1950 to i32
  %1952 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1953 = bitcast i8* %1952 to float*
  %1954 = load float, float* %1953, align 4
  %1955 = fcmp ogt float %1954, 0.000000e+00
  %1956 = zext i1 %1955 to i32
  %1957 = add nsw i32 %1951, %1956
  %1958 = sitofp i32 %1957 to float
  %1959 = fneg float %1958
  %1960 = fmul float %1946, %1959
  %1961 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1962 = getelementptr inbounds i8, i8* %1961, i64 4
  %1963 = bitcast i8* %1962 to float*
  %1964 = load float, float* %1963, align 4
  %1965 = fmul float %1960, %1964
  %1966 = fadd float %1907, %1965
  %1967 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1968 = getelementptr inbounds i8, i8* %1967, i64 4
  %1969 = bitcast i8* %1968 to float*
  %1970 = load float, float* %1969, align 4
  %1971 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1972 = getelementptr inbounds i8, i8* %1971, i64 12
  %1973 = bitcast i8* %1972 to float*
  %1974 = load float, float* %1973, align 4
  %1975 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1976 = getelementptr inbounds i8, i8* %1975, i64 12
  %1977 = bitcast i8* %1976 to float*
  %1978 = load float, float* %1977, align 4
  %1979 = fmul float %1974, %1978
  %1980 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1981 = getelementptr inbounds i8, i8* %1980, i64 8
  %1982 = bitcast i8* %1981 to float*
  %1983 = load float, float* %1982, align 4
  %1984 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1985 = getelementptr inbounds i8, i8* %1984, i64 8
  %1986 = bitcast i8* %1985 to float*
  %1987 = load float, float* %1986, align 4
  %1988 = fmul float %1983, %1987
  %1989 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1990 = getelementptr inbounds i8, i8* %1989, i64 4
  %1991 = bitcast i8* %1990 to float*
  %1992 = load float, float* %1991, align 4
  %1993 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1994 = getelementptr inbounds i8, i8* %1993, i64 4
  %1995 = bitcast i8* %1994 to float*
  %1996 = load float, float* %1995, align 4
  %1997 = fmul float %1992, %1996
  %1998 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1999 = bitcast i8* %1998 to float*
  %2000 = load float, float* %1999, align 4
  %2001 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2002 = bitcast i8* %2001 to float*
  %2003 = load float, float* %2002, align 4
  %2004 = fmul float %2000, %2003
  %2005 = fadd float %2004, 0.000000e+00
  %2006 = fadd float %1997, %2005
  %2007 = fadd float %1988, %2006
  %2008 = fadd float %1979, %2007
  %2009 = call float @llvm.sqrt.f32(float %2008)
  %2010 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2011 = bitcast i8* %2010 to float*
  %2012 = load float, float* %2011, align 4
  %2013 = fcmp olt float %2012, 0.000000e+00
  %2014 = sext i1 %2013 to i32
  %2015 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2016 = bitcast i8* %2015 to float*
  %2017 = load float, float* %2016, align 4
  %2018 = fcmp ogt float %2017, 0.000000e+00
  %2019 = zext i1 %2018 to i32
  %2020 = add nsw i32 %2014, %2019
  %2021 = sitofp i32 %2020 to float
  %2022 = fneg float %2021
  %2023 = fmul float %2009, %2022
  %2024 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2025 = getelementptr inbounds i8, i8* %2024, i64 4
  %2026 = bitcast i8* %2025 to float*
  %2027 = load float, float* %2026, align 4
  %2028 = fmul float %2023, %2027
  %2029 = fadd float %1970, %2028
  %2030 = fmul float %1966, %2029
  %2031 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2032 = bitcast i8* %2031 to float*
  %2033 = load float, float* %2032, align 4
  %2034 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2035 = getelementptr inbounds i8, i8* %2034, i64 12
  %2036 = bitcast i8* %2035 to float*
  %2037 = load float, float* %2036, align 4
  %2038 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2039 = getelementptr inbounds i8, i8* %2038, i64 12
  %2040 = bitcast i8* %2039 to float*
  %2041 = load float, float* %2040, align 4
  %2042 = fmul float %2037, %2041
  %2043 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2044 = getelementptr inbounds i8, i8* %2043, i64 8
  %2045 = bitcast i8* %2044 to float*
  %2046 = load float, float* %2045, align 4
  %2047 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2048 = getelementptr inbounds i8, i8* %2047, i64 8
  %2049 = bitcast i8* %2048 to float*
  %2050 = load float, float* %2049, align 4
  %2051 = fmul float %2046, %2050
  %2052 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2053 = getelementptr inbounds i8, i8* %2052, i64 4
  %2054 = bitcast i8* %2053 to float*
  %2055 = load float, float* %2054, align 4
  %2056 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2057 = getelementptr inbounds i8, i8* %2056, i64 4
  %2058 = bitcast i8* %2057 to float*
  %2059 = load float, float* %2058, align 4
  %2060 = fmul float %2055, %2059
  %2061 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2062 = bitcast i8* %2061 to float*
  %2063 = load float, float* %2062, align 4
  %2064 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2065 = bitcast i8* %2064 to float*
  %2066 = load float, float* %2065, align 4
  %2067 = fmul float %2063, %2066
  %2068 = fadd float %2067, 0.000000e+00
  %2069 = fadd float %2060, %2068
  %2070 = fadd float %2051, %2069
  %2071 = fadd float %2042, %2070
  %2072 = call float @llvm.sqrt.f32(float %2071)
  %2073 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2074 = bitcast i8* %2073 to float*
  %2075 = load float, float* %2074, align 4
  %2076 = fcmp olt float %2075, 0.000000e+00
  %2077 = sext i1 %2076 to i32
  %2078 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2079 = bitcast i8* %2078 to float*
  %2080 = load float, float* %2079, align 4
  %2081 = fcmp ogt float %2080, 0.000000e+00
  %2082 = zext i1 %2081 to i32
  %2083 = add nsw i32 %2077, %2082
  %2084 = sitofp i32 %2083 to float
  %2085 = fneg float %2084
  %2086 = fmul float %2072, %2085
  %2087 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2088 = bitcast i8* %2087 to float*
  %2089 = load float, float* %2088, align 4
  %2090 = fmul float %2086, %2089
  %2091 = fadd float %2033, %2090
  %2092 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2093 = bitcast i8* %2092 to float*
  %2094 = load float, float* %2093, align 4
  %2095 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2096 = getelementptr inbounds i8, i8* %2095, i64 12
  %2097 = bitcast i8* %2096 to float*
  %2098 = load float, float* %2097, align 4
  %2099 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2100 = getelementptr inbounds i8, i8* %2099, i64 12
  %2101 = bitcast i8* %2100 to float*
  %2102 = load float, float* %2101, align 4
  %2103 = fmul float %2098, %2102
  %2104 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2105 = getelementptr inbounds i8, i8* %2104, i64 8
  %2106 = bitcast i8* %2105 to float*
  %2107 = load float, float* %2106, align 4
  %2108 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2109 = getelementptr inbounds i8, i8* %2108, i64 8
  %2110 = bitcast i8* %2109 to float*
  %2111 = load float, float* %2110, align 4
  %2112 = fmul float %2107, %2111
  %2113 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2114 = getelementptr inbounds i8, i8* %2113, i64 4
  %2115 = bitcast i8* %2114 to float*
  %2116 = load float, float* %2115, align 4
  %2117 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2118 = getelementptr inbounds i8, i8* %2117, i64 4
  %2119 = bitcast i8* %2118 to float*
  %2120 = load float, float* %2119, align 4
  %2121 = fmul float %2116, %2120
  %2122 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2123 = bitcast i8* %2122 to float*
  %2124 = load float, float* %2123, align 4
  %2125 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2126 = bitcast i8* %2125 to float*
  %2127 = load float, float* %2126, align 4
  %2128 = fmul float %2124, %2127
  %2129 = fadd float %2128, 0.000000e+00
  %2130 = fadd float %2121, %2129
  %2131 = fadd float %2112, %2130
  %2132 = fadd float %2103, %2131
  %2133 = call float @llvm.sqrt.f32(float %2132)
  %2134 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2135 = bitcast i8* %2134 to float*
  %2136 = load float, float* %2135, align 4
  %2137 = fcmp olt float %2136, 0.000000e+00
  %2138 = sext i1 %2137 to i32
  %2139 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2140 = bitcast i8* %2139 to float*
  %2141 = load float, float* %2140, align 4
  %2142 = fcmp ogt float %2141, 0.000000e+00
  %2143 = zext i1 %2142 to i32
  %2144 = add nsw i32 %2138, %2143
  %2145 = sitofp i32 %2144 to float
  %2146 = fneg float %2145
  %2147 = fmul float %2133, %2146
  %2148 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2149 = bitcast i8* %2148 to float*
  %2150 = load float, float* %2149, align 4
  %2151 = fmul float %2147, %2150
  %2152 = fadd float %2094, %2151
  %2153 = fmul float %2091, %2152
  %2154 = fadd float %2153, 0.000000e+00
  %2155 = fadd float %2030, %2154
  %2156 = fadd float %1903, %2155
  %2157 = fadd float %1776, %2156
  %2158 = call float @llvm.sqrt.f32(float %2157)
  %2159 = fdiv float %1649, %2158
  %2160 = insertelement <4 x float> zeroinitializer, float %2159, i32 0
  %2161 = insertelement <4 x float> %2160, float 0.000000e+00, i32 1
  %2162 = insertelement <4 x float> %2161, float 0.000000e+00, i32 2
  %2163 = insertelement <4 x float> %2162, float 0.000000e+00, i32 3
  %2164 = extractelement <4 x float> %2163, i32 0
  %2165 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2166 = getelementptr inbounds i8, i8* %2165, i64 8
  %2167 = bitcast i8* %2166 to float*
  store float %2164, float* %2167, align 4
  %2168 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2169 = getelementptr inbounds i8, i8* %2168, i64 12
  %2170 = bitcast i8* %2169 to float*
  %2171 = load float, float* %2170, align 4
  %2172 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2173 = getelementptr inbounds i8, i8* %2172, i64 12
  %2174 = bitcast i8* %2173 to float*
  %2175 = load float, float* %2174, align 4
  %2176 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2177 = getelementptr inbounds i8, i8* %2176, i64 12
  %2178 = bitcast i8* %2177 to float*
  %2179 = load float, float* %2178, align 4
  %2180 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2181 = getelementptr inbounds i8, i8* %2180, i64 12
  %2182 = bitcast i8* %2181 to float*
  %2183 = load float, float* %2182, align 4
  %2184 = fmul float %2179, %2183
  %2185 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2186 = getelementptr inbounds i8, i8* %2185, i64 8
  %2187 = bitcast i8* %2186 to float*
  %2188 = load float, float* %2187, align 4
  %2189 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2190 = getelementptr inbounds i8, i8* %2189, i64 8
  %2191 = bitcast i8* %2190 to float*
  %2192 = load float, float* %2191, align 4
  %2193 = fmul float %2188, %2192
  %2194 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2195 = getelementptr inbounds i8, i8* %2194, i64 4
  %2196 = bitcast i8* %2195 to float*
  %2197 = load float, float* %2196, align 4
  %2198 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2199 = getelementptr inbounds i8, i8* %2198, i64 4
  %2200 = bitcast i8* %2199 to float*
  %2201 = load float, float* %2200, align 4
  %2202 = fmul float %2197, %2201
  %2203 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2204 = bitcast i8* %2203 to float*
  %2205 = load float, float* %2204, align 4
  %2206 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2207 = bitcast i8* %2206 to float*
  %2208 = load float, float* %2207, align 4
  %2209 = fmul float %2205, %2208
  %2210 = fadd float %2209, 0.000000e+00
  %2211 = fadd float %2202, %2210
  %2212 = fadd float %2193, %2211
  %2213 = fadd float %2184, %2212
  %2214 = call float @llvm.sqrt.f32(float %2213)
  %2215 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2216 = bitcast i8* %2215 to float*
  %2217 = load float, float* %2216, align 4
  %2218 = fcmp olt float %2217, 0.000000e+00
  %2219 = sext i1 %2218 to i32
  %2220 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2221 = bitcast i8* %2220 to float*
  %2222 = load float, float* %2221, align 4
  %2223 = fcmp ogt float %2222, 0.000000e+00
  %2224 = zext i1 %2223 to i32
  %2225 = add nsw i32 %2219, %2224
  %2226 = sitofp i32 %2225 to float
  %2227 = fneg float %2226
  %2228 = fmul float %2214, %2227
  %2229 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2230 = getelementptr inbounds i8, i8* %2229, i64 12
  %2231 = bitcast i8* %2230 to float*
  %2232 = load float, float* %2231, align 4
  %2233 = fmul float %2228, %2232
  %2234 = fadd float %2175, %2233
  %2235 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2236 = getelementptr inbounds i8, i8* %2235, i64 12
  %2237 = bitcast i8* %2236 to float*
  %2238 = load float, float* %2237, align 4
  %2239 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2240 = getelementptr inbounds i8, i8* %2239, i64 12
  %2241 = bitcast i8* %2240 to float*
  %2242 = load float, float* %2241, align 4
  %2243 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2244 = getelementptr inbounds i8, i8* %2243, i64 12
  %2245 = bitcast i8* %2244 to float*
  %2246 = load float, float* %2245, align 4
  %2247 = fmul float %2242, %2246
  %2248 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2249 = getelementptr inbounds i8, i8* %2248, i64 8
  %2250 = bitcast i8* %2249 to float*
  %2251 = load float, float* %2250, align 4
  %2252 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2253 = getelementptr inbounds i8, i8* %2252, i64 8
  %2254 = bitcast i8* %2253 to float*
  %2255 = load float, float* %2254, align 4
  %2256 = fmul float %2251, %2255
  %2257 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2258 = getelementptr inbounds i8, i8* %2257, i64 4
  %2259 = bitcast i8* %2258 to float*
  %2260 = load float, float* %2259, align 4
  %2261 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2262 = getelementptr inbounds i8, i8* %2261, i64 4
  %2263 = bitcast i8* %2262 to float*
  %2264 = load float, float* %2263, align 4
  %2265 = fmul float %2260, %2264
  %2266 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2267 = bitcast i8* %2266 to float*
  %2268 = load float, float* %2267, align 4
  %2269 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2270 = bitcast i8* %2269 to float*
  %2271 = load float, float* %2270, align 4
  %2272 = fmul float %2268, %2271
  %2273 = fadd float %2272, 0.000000e+00
  %2274 = fadd float %2265, %2273
  %2275 = fadd float %2256, %2274
  %2276 = fadd float %2247, %2275
  %2277 = call float @llvm.sqrt.f32(float %2276)
  %2278 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2279 = bitcast i8* %2278 to float*
  %2280 = load float, float* %2279, align 4
  %2281 = fcmp olt float %2280, 0.000000e+00
  %2282 = sext i1 %2281 to i32
  %2283 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2284 = bitcast i8* %2283 to float*
  %2285 = load float, float* %2284, align 4
  %2286 = fcmp ogt float %2285, 0.000000e+00
  %2287 = zext i1 %2286 to i32
  %2288 = add nsw i32 %2282, %2287
  %2289 = sitofp i32 %2288 to float
  %2290 = fneg float %2289
  %2291 = fmul float %2277, %2290
  %2292 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2293 = getelementptr inbounds i8, i8* %2292, i64 12
  %2294 = bitcast i8* %2293 to float*
  %2295 = load float, float* %2294, align 4
  %2296 = fmul float %2291, %2295
  %2297 = fadd float %2238, %2296
  %2298 = fmul float %2234, %2297
  %2299 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2300 = getelementptr inbounds i8, i8* %2299, i64 8
  %2301 = bitcast i8* %2300 to float*
  %2302 = load float, float* %2301, align 4
  %2303 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2304 = getelementptr inbounds i8, i8* %2303, i64 12
  %2305 = bitcast i8* %2304 to float*
  %2306 = load float, float* %2305, align 4
  %2307 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2308 = getelementptr inbounds i8, i8* %2307, i64 12
  %2309 = bitcast i8* %2308 to float*
  %2310 = load float, float* %2309, align 4
  %2311 = fmul float %2306, %2310
  %2312 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2313 = getelementptr inbounds i8, i8* %2312, i64 8
  %2314 = bitcast i8* %2313 to float*
  %2315 = load float, float* %2314, align 4
  %2316 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2317 = getelementptr inbounds i8, i8* %2316, i64 8
  %2318 = bitcast i8* %2317 to float*
  %2319 = load float, float* %2318, align 4
  %2320 = fmul float %2315, %2319
  %2321 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2322 = getelementptr inbounds i8, i8* %2321, i64 4
  %2323 = bitcast i8* %2322 to float*
  %2324 = load float, float* %2323, align 4
  %2325 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2326 = getelementptr inbounds i8, i8* %2325, i64 4
  %2327 = bitcast i8* %2326 to float*
  %2328 = load float, float* %2327, align 4
  %2329 = fmul float %2324, %2328
  %2330 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2331 = bitcast i8* %2330 to float*
  %2332 = load float, float* %2331, align 4
  %2333 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2334 = bitcast i8* %2333 to float*
  %2335 = load float, float* %2334, align 4
  %2336 = fmul float %2332, %2335
  %2337 = fadd float %2336, 0.000000e+00
  %2338 = fadd float %2329, %2337
  %2339 = fadd float %2320, %2338
  %2340 = fadd float %2311, %2339
  %2341 = call float @llvm.sqrt.f32(float %2340)
  %2342 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2343 = bitcast i8* %2342 to float*
  %2344 = load float, float* %2343, align 4
  %2345 = fcmp olt float %2344, 0.000000e+00
  %2346 = sext i1 %2345 to i32
  %2347 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2348 = bitcast i8* %2347 to float*
  %2349 = load float, float* %2348, align 4
  %2350 = fcmp ogt float %2349, 0.000000e+00
  %2351 = zext i1 %2350 to i32
  %2352 = add nsw i32 %2346, %2351
  %2353 = sitofp i32 %2352 to float
  %2354 = fneg float %2353
  %2355 = fmul float %2341, %2354
  %2356 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2357 = getelementptr inbounds i8, i8* %2356, i64 8
  %2358 = bitcast i8* %2357 to float*
  %2359 = load float, float* %2358, align 4
  %2360 = fmul float %2355, %2359
  %2361 = fadd float %2302, %2360
  %2362 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2363 = getelementptr inbounds i8, i8* %2362, i64 8
  %2364 = bitcast i8* %2363 to float*
  %2365 = load float, float* %2364, align 4
  %2366 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2367 = getelementptr inbounds i8, i8* %2366, i64 12
  %2368 = bitcast i8* %2367 to float*
  %2369 = load float, float* %2368, align 4
  %2370 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2371 = getelementptr inbounds i8, i8* %2370, i64 12
  %2372 = bitcast i8* %2371 to float*
  %2373 = load float, float* %2372, align 4
  %2374 = fmul float %2369, %2373
  %2375 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2376 = getelementptr inbounds i8, i8* %2375, i64 8
  %2377 = bitcast i8* %2376 to float*
  %2378 = load float, float* %2377, align 4
  %2379 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2380 = getelementptr inbounds i8, i8* %2379, i64 8
  %2381 = bitcast i8* %2380 to float*
  %2382 = load float, float* %2381, align 4
  %2383 = fmul float %2378, %2382
  %2384 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2385 = getelementptr inbounds i8, i8* %2384, i64 4
  %2386 = bitcast i8* %2385 to float*
  %2387 = load float, float* %2386, align 4
  %2388 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2389 = getelementptr inbounds i8, i8* %2388, i64 4
  %2390 = bitcast i8* %2389 to float*
  %2391 = load float, float* %2390, align 4
  %2392 = fmul float %2387, %2391
  %2393 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2394 = bitcast i8* %2393 to float*
  %2395 = load float, float* %2394, align 4
  %2396 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2397 = bitcast i8* %2396 to float*
  %2398 = load float, float* %2397, align 4
  %2399 = fmul float %2395, %2398
  %2400 = fadd float %2399, 0.000000e+00
  %2401 = fadd float %2392, %2400
  %2402 = fadd float %2383, %2401
  %2403 = fadd float %2374, %2402
  %2404 = call float @llvm.sqrt.f32(float %2403)
  %2405 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2406 = bitcast i8* %2405 to float*
  %2407 = load float, float* %2406, align 4
  %2408 = fcmp olt float %2407, 0.000000e+00
  %2409 = sext i1 %2408 to i32
  %2410 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2411 = bitcast i8* %2410 to float*
  %2412 = load float, float* %2411, align 4
  %2413 = fcmp ogt float %2412, 0.000000e+00
  %2414 = zext i1 %2413 to i32
  %2415 = add nsw i32 %2409, %2414
  %2416 = sitofp i32 %2415 to float
  %2417 = fneg float %2416
  %2418 = fmul float %2404, %2417
  %2419 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2420 = getelementptr inbounds i8, i8* %2419, i64 8
  %2421 = bitcast i8* %2420 to float*
  %2422 = load float, float* %2421, align 4
  %2423 = fmul float %2418, %2422
  %2424 = fadd float %2365, %2423
  %2425 = fmul float %2361, %2424
  %2426 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2427 = getelementptr inbounds i8, i8* %2426, i64 4
  %2428 = bitcast i8* %2427 to float*
  %2429 = load float, float* %2428, align 4
  %2430 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2431 = getelementptr inbounds i8, i8* %2430, i64 12
  %2432 = bitcast i8* %2431 to float*
  %2433 = load float, float* %2432, align 4
  %2434 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2435 = getelementptr inbounds i8, i8* %2434, i64 12
  %2436 = bitcast i8* %2435 to float*
  %2437 = load float, float* %2436, align 4
  %2438 = fmul float %2433, %2437
  %2439 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2440 = getelementptr inbounds i8, i8* %2439, i64 8
  %2441 = bitcast i8* %2440 to float*
  %2442 = load float, float* %2441, align 4
  %2443 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2444 = getelementptr inbounds i8, i8* %2443, i64 8
  %2445 = bitcast i8* %2444 to float*
  %2446 = load float, float* %2445, align 4
  %2447 = fmul float %2442, %2446
  %2448 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2449 = getelementptr inbounds i8, i8* %2448, i64 4
  %2450 = bitcast i8* %2449 to float*
  %2451 = load float, float* %2450, align 4
  %2452 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2453 = getelementptr inbounds i8, i8* %2452, i64 4
  %2454 = bitcast i8* %2453 to float*
  %2455 = load float, float* %2454, align 4
  %2456 = fmul float %2451, %2455
  %2457 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2458 = bitcast i8* %2457 to float*
  %2459 = load float, float* %2458, align 4
  %2460 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2461 = bitcast i8* %2460 to float*
  %2462 = load float, float* %2461, align 4
  %2463 = fmul float %2459, %2462
  %2464 = fadd float %2463, 0.000000e+00
  %2465 = fadd float %2456, %2464
  %2466 = fadd float %2447, %2465
  %2467 = fadd float %2438, %2466
  %2468 = call float @llvm.sqrt.f32(float %2467)
  %2469 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2470 = bitcast i8* %2469 to float*
  %2471 = load float, float* %2470, align 4
  %2472 = fcmp olt float %2471, 0.000000e+00
  %2473 = sext i1 %2472 to i32
  %2474 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2475 = bitcast i8* %2474 to float*
  %2476 = load float, float* %2475, align 4
  %2477 = fcmp ogt float %2476, 0.000000e+00
  %2478 = zext i1 %2477 to i32
  %2479 = add nsw i32 %2473, %2478
  %2480 = sitofp i32 %2479 to float
  %2481 = fneg float %2480
  %2482 = fmul float %2468, %2481
  %2483 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2484 = getelementptr inbounds i8, i8* %2483, i64 4
  %2485 = bitcast i8* %2484 to float*
  %2486 = load float, float* %2485, align 4
  %2487 = fmul float %2482, %2486
  %2488 = fadd float %2429, %2487
  %2489 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2490 = getelementptr inbounds i8, i8* %2489, i64 4
  %2491 = bitcast i8* %2490 to float*
  %2492 = load float, float* %2491, align 4
  %2493 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2494 = getelementptr inbounds i8, i8* %2493, i64 12
  %2495 = bitcast i8* %2494 to float*
  %2496 = load float, float* %2495, align 4
  %2497 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2498 = getelementptr inbounds i8, i8* %2497, i64 12
  %2499 = bitcast i8* %2498 to float*
  %2500 = load float, float* %2499, align 4
  %2501 = fmul float %2496, %2500
  %2502 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2503 = getelementptr inbounds i8, i8* %2502, i64 8
  %2504 = bitcast i8* %2503 to float*
  %2505 = load float, float* %2504, align 4
  %2506 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2507 = getelementptr inbounds i8, i8* %2506, i64 8
  %2508 = bitcast i8* %2507 to float*
  %2509 = load float, float* %2508, align 4
  %2510 = fmul float %2505, %2509
  %2511 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2512 = getelementptr inbounds i8, i8* %2511, i64 4
  %2513 = bitcast i8* %2512 to float*
  %2514 = load float, float* %2513, align 4
  %2515 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2516 = getelementptr inbounds i8, i8* %2515, i64 4
  %2517 = bitcast i8* %2516 to float*
  %2518 = load float, float* %2517, align 4
  %2519 = fmul float %2514, %2518
  %2520 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2521 = bitcast i8* %2520 to float*
  %2522 = load float, float* %2521, align 4
  %2523 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2524 = bitcast i8* %2523 to float*
  %2525 = load float, float* %2524, align 4
  %2526 = fmul float %2522, %2525
  %2527 = fadd float %2526, 0.000000e+00
  %2528 = fadd float %2519, %2527
  %2529 = fadd float %2510, %2528
  %2530 = fadd float %2501, %2529
  %2531 = call float @llvm.sqrt.f32(float %2530)
  %2532 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2533 = bitcast i8* %2532 to float*
  %2534 = load float, float* %2533, align 4
  %2535 = fcmp olt float %2534, 0.000000e+00
  %2536 = sext i1 %2535 to i32
  %2537 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2538 = bitcast i8* %2537 to float*
  %2539 = load float, float* %2538, align 4
  %2540 = fcmp ogt float %2539, 0.000000e+00
  %2541 = zext i1 %2540 to i32
  %2542 = add nsw i32 %2536, %2541
  %2543 = sitofp i32 %2542 to float
  %2544 = fneg float %2543
  %2545 = fmul float %2531, %2544
  %2546 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2547 = getelementptr inbounds i8, i8* %2546, i64 4
  %2548 = bitcast i8* %2547 to float*
  %2549 = load float, float* %2548, align 4
  %2550 = fmul float %2545, %2549
  %2551 = fadd float %2492, %2550
  %2552 = fmul float %2488, %2551
  %2553 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2554 = bitcast i8* %2553 to float*
  %2555 = load float, float* %2554, align 4
  %2556 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2557 = getelementptr inbounds i8, i8* %2556, i64 12
  %2558 = bitcast i8* %2557 to float*
  %2559 = load float, float* %2558, align 4
  %2560 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2561 = getelementptr inbounds i8, i8* %2560, i64 12
  %2562 = bitcast i8* %2561 to float*
  %2563 = load float, float* %2562, align 4
  %2564 = fmul float %2559, %2563
  %2565 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2566 = getelementptr inbounds i8, i8* %2565, i64 8
  %2567 = bitcast i8* %2566 to float*
  %2568 = load float, float* %2567, align 4
  %2569 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2570 = getelementptr inbounds i8, i8* %2569, i64 8
  %2571 = bitcast i8* %2570 to float*
  %2572 = load float, float* %2571, align 4
  %2573 = fmul float %2568, %2572
  %2574 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2575 = getelementptr inbounds i8, i8* %2574, i64 4
  %2576 = bitcast i8* %2575 to float*
  %2577 = load float, float* %2576, align 4
  %2578 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2579 = getelementptr inbounds i8, i8* %2578, i64 4
  %2580 = bitcast i8* %2579 to float*
  %2581 = load float, float* %2580, align 4
  %2582 = fmul float %2577, %2581
  %2583 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2584 = bitcast i8* %2583 to float*
  %2585 = load float, float* %2584, align 4
  %2586 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2587 = bitcast i8* %2586 to float*
  %2588 = load float, float* %2587, align 4
  %2589 = fmul float %2585, %2588
  %2590 = fadd float %2589, 0.000000e+00
  %2591 = fadd float %2582, %2590
  %2592 = fadd float %2573, %2591
  %2593 = fadd float %2564, %2592
  %2594 = call float @llvm.sqrt.f32(float %2593)
  %2595 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2596 = bitcast i8* %2595 to float*
  %2597 = load float, float* %2596, align 4
  %2598 = fcmp olt float %2597, 0.000000e+00
  %2599 = sext i1 %2598 to i32
  %2600 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2601 = bitcast i8* %2600 to float*
  %2602 = load float, float* %2601, align 4
  %2603 = fcmp ogt float %2602, 0.000000e+00
  %2604 = zext i1 %2603 to i32
  %2605 = add nsw i32 %2599, %2604
  %2606 = sitofp i32 %2605 to float
  %2607 = fneg float %2606
  %2608 = fmul float %2594, %2607
  %2609 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2610 = bitcast i8* %2609 to float*
  %2611 = load float, float* %2610, align 4
  %2612 = fmul float %2608, %2611
  %2613 = fadd float %2555, %2612
  %2614 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2615 = bitcast i8* %2614 to float*
  %2616 = load float, float* %2615, align 4
  %2617 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2618 = getelementptr inbounds i8, i8* %2617, i64 12
  %2619 = bitcast i8* %2618 to float*
  %2620 = load float, float* %2619, align 4
  %2621 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2622 = getelementptr inbounds i8, i8* %2621, i64 12
  %2623 = bitcast i8* %2622 to float*
  %2624 = load float, float* %2623, align 4
  %2625 = fmul float %2620, %2624
  %2626 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2627 = getelementptr inbounds i8, i8* %2626, i64 8
  %2628 = bitcast i8* %2627 to float*
  %2629 = load float, float* %2628, align 4
  %2630 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2631 = getelementptr inbounds i8, i8* %2630, i64 8
  %2632 = bitcast i8* %2631 to float*
  %2633 = load float, float* %2632, align 4
  %2634 = fmul float %2629, %2633
  %2635 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2636 = getelementptr inbounds i8, i8* %2635, i64 4
  %2637 = bitcast i8* %2636 to float*
  %2638 = load float, float* %2637, align 4
  %2639 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2640 = getelementptr inbounds i8, i8* %2639, i64 4
  %2641 = bitcast i8* %2640 to float*
  %2642 = load float, float* %2641, align 4
  %2643 = fmul float %2638, %2642
  %2644 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2645 = bitcast i8* %2644 to float*
  %2646 = load float, float* %2645, align 4
  %2647 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2648 = bitcast i8* %2647 to float*
  %2649 = load float, float* %2648, align 4
  %2650 = fmul float %2646, %2649
  %2651 = fadd float %2650, 0.000000e+00
  %2652 = fadd float %2643, %2651
  %2653 = fadd float %2634, %2652
  %2654 = fadd float %2625, %2653
  %2655 = call float @llvm.sqrt.f32(float %2654)
  %2656 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2657 = bitcast i8* %2656 to float*
  %2658 = load float, float* %2657, align 4
  %2659 = fcmp olt float %2658, 0.000000e+00
  %2660 = sext i1 %2659 to i32
  %2661 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2662 = bitcast i8* %2661 to float*
  %2663 = load float, float* %2662, align 4
  %2664 = fcmp ogt float %2663, 0.000000e+00
  %2665 = zext i1 %2664 to i32
  %2666 = add nsw i32 %2660, %2665
  %2667 = sitofp i32 %2666 to float
  %2668 = fneg float %2667
  %2669 = fmul float %2655, %2668
  %2670 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2671 = bitcast i8* %2670 to float*
  %2672 = load float, float* %2671, align 4
  %2673 = fmul float %2669, %2672
  %2674 = fadd float %2616, %2673
  %2675 = fmul float %2613, %2674
  %2676 = fadd float %2675, 0.000000e+00
  %2677 = fadd float %2552, %2676
  %2678 = fadd float %2425, %2677
  %2679 = fadd float %2298, %2678
  %2680 = call float @llvm.sqrt.f32(float %2679)
  %2681 = fdiv float %2171, %2680
  %2682 = insertelement <4 x float> zeroinitializer, float %2681, i32 0
  %2683 = insertelement <4 x float> %2682, float 0.000000e+00, i32 1
  %2684 = insertelement <4 x float> %2683, float 0.000000e+00, i32 2
  %2685 = insertelement <4 x float> %2684, float 0.000000e+00, i32 3
  %2686 = extractelement <4 x float> %2685, i32 0
  %2687 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2688 = getelementptr inbounds i8, i8* %2687, i64 12
  %2689 = bitcast i8* %2688 to float*
  store float %2686, float* %2689, align 4
  %2690 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2691 = bitcast i8* %2690 to float*
  %2692 = load float, float* %2691, align 4
  %2693 = insertelement <4 x float> zeroinitializer, float %2692, i32 0
  %2694 = insertelement <4 x float> %2693, float 1.000000e+00, i32 1
  %2695 = insertelement <4 x float> %2694, float 1.000000e+00, i32 2
  %2696 = insertelement <4 x float> %2695, float 1.000000e+00, i32 3
  %2697 = fmul <4 x float> %2696, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2698 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2699 = bitcast i8* %2698 to float*
  %2700 = load float, float* %2699, align 4
  %2701 = insertelement <4 x float> zeroinitializer, float %2700, i32 0
  %2702 = insertelement <4 x float> %2701, float 0.000000e+00, i32 1
  %2703 = insertelement <4 x float> %2702, float 0.000000e+00, i32 2
  %2704 = insertelement <4 x float> %2703, float 0.000000e+00, i32 3
  %2705 = fmul <4 x float> %2697, %2704
  %2706 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %2705
  %2707 = extractelement <4 x float> %2706, i32 0
  %2708 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2709 = bitcast i8* %2708 to float*
  store float %2707, float* %2709, align 4
  %2710 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2711 = bitcast i8* %2710 to float*
  %2712 = load float, float* %2711, align 4
  %2713 = insertelement <4 x float> zeroinitializer, float %2712, i32 0
  %2714 = insertelement <4 x float> %2713, float 1.000000e+00, i32 1
  %2715 = insertelement <4 x float> %2714, float 1.000000e+00, i32 2
  %2716 = insertelement <4 x float> %2715, float 1.000000e+00, i32 3
  %2717 = fmul <4 x float> %2716, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2718 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2719 = getelementptr inbounds i8, i8* %2718, i64 4
  %2720 = bitcast i8* %2719 to float*
  %2721 = load float, float* %2720, align 4
  %2722 = insertelement <4 x float> zeroinitializer, float %2721, i32 0
  %2723 = insertelement <4 x float> %2722, float 0.000000e+00, i32 1
  %2724 = insertelement <4 x float> %2723, float 0.000000e+00, i32 2
  %2725 = insertelement <4 x float> %2724, float 0.000000e+00, i32 3
  %2726 = fmul <4 x float> %2717, %2725
  %2727 = fsub <4 x float> zeroinitializer, %2726
  %2728 = extractelement <4 x float> %2727, i32 0
  %2729 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2730 = getelementptr inbounds i8, i8* %2729, i64 4
  %2731 = bitcast i8* %2730 to float*
  store float %2728, float* %2731, align 4
  %2732 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2733 = bitcast i8* %2732 to float*
  %2734 = load float, float* %2733, align 4
  %2735 = insertelement <4 x float> zeroinitializer, float %2734, i32 0
  %2736 = insertelement <4 x float> %2735, float 1.000000e+00, i32 1
  %2737 = insertelement <4 x float> %2736, float 1.000000e+00, i32 2
  %2738 = insertelement <4 x float> %2737, float 1.000000e+00, i32 3
  %2739 = fmul <4 x float> %2738, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2740 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2741 = getelementptr inbounds i8, i8* %2740, i64 8
  %2742 = bitcast i8* %2741 to float*
  %2743 = load float, float* %2742, align 4
  %2744 = insertelement <4 x float> zeroinitializer, float %2743, i32 0
  %2745 = insertelement <4 x float> %2744, float 0.000000e+00, i32 1
  %2746 = insertelement <4 x float> %2745, float 0.000000e+00, i32 2
  %2747 = insertelement <4 x float> %2746, float 0.000000e+00, i32 3
  %2748 = fmul <4 x float> %2739, %2747
  %2749 = fsub <4 x float> zeroinitializer, %2748
  %2750 = extractelement <4 x float> %2749, i32 0
  %2751 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2752 = getelementptr inbounds i8, i8* %2751, i64 8
  %2753 = bitcast i8* %2752 to float*
  store float %2750, float* %2753, align 4
  %2754 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2755 = bitcast i8* %2754 to float*
  %2756 = load float, float* %2755, align 4
  %2757 = insertelement <4 x float> zeroinitializer, float %2756, i32 0
  %2758 = insertelement <4 x float> %2757, float 1.000000e+00, i32 1
  %2759 = insertelement <4 x float> %2758, float 1.000000e+00, i32 2
  %2760 = insertelement <4 x float> %2759, float 1.000000e+00, i32 3
  %2761 = fmul <4 x float> %2760, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2762 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2763 = getelementptr inbounds i8, i8* %2762, i64 12
  %2764 = bitcast i8* %2763 to float*
  %2765 = load float, float* %2764, align 4
  %2766 = insertelement <4 x float> zeroinitializer, float %2765, i32 0
  %2767 = insertelement <4 x float> %2766, float 0.000000e+00, i32 1
  %2768 = insertelement <4 x float> %2767, float 0.000000e+00, i32 2
  %2769 = insertelement <4 x float> %2768, float 0.000000e+00, i32 3
  %2770 = fmul <4 x float> %2761, %2769
  %2771 = fsub <4 x float> zeroinitializer, %2770
  %2772 = extractelement <4 x float> %2771, i32 0
  %2773 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2774 = getelementptr inbounds i8, i8* %2773, i64 12
  %2775 = bitcast i8* %2774 to float*
  store float %2772, float* %2775, align 4
  %2776 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2777 = getelementptr inbounds i8, i8* %2776, i64 4
  %2778 = bitcast i8* %2777 to float*
  %2779 = load float, float* %2778, align 4
  %2780 = insertelement <4 x float> zeroinitializer, float %2779, i32 0
  %2781 = insertelement <4 x float> %2780, float 1.000000e+00, i32 1
  %2782 = insertelement <4 x float> %2781, float 1.000000e+00, i32 2
  %2783 = insertelement <4 x float> %2782, float 1.000000e+00, i32 3
  %2784 = fmul <4 x float> %2783, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2785 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2786 = bitcast i8* %2785 to float*
  %2787 = load float, float* %2786, align 4
  %2788 = insertelement <4 x float> zeroinitializer, float %2787, i32 0
  %2789 = insertelement <4 x float> %2788, float 0.000000e+00, i32 1
  %2790 = insertelement <4 x float> %2789, float 0.000000e+00, i32 2
  %2791 = insertelement <4 x float> %2790, float 0.000000e+00, i32 3
  %2792 = fmul <4 x float> %2784, %2791
  %2793 = fsub <4 x float> zeroinitializer, %2792
  %2794 = extractelement <4 x float> %2793, i32 0
  %2795 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2796 = getelementptr inbounds i8, i8* %2795, i64 16
  %2797 = bitcast i8* %2796 to float*
  store float %2794, float* %2797, align 4
  %2798 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2799 = getelementptr inbounds i8, i8* %2798, i64 4
  %2800 = bitcast i8* %2799 to float*
  %2801 = load float, float* %2800, align 4
  %2802 = insertelement <4 x float> zeroinitializer, float %2801, i32 0
  %2803 = insertelement <4 x float> %2802, float 1.000000e+00, i32 1
  %2804 = insertelement <4 x float> %2803, float 1.000000e+00, i32 2
  %2805 = insertelement <4 x float> %2804, float 1.000000e+00, i32 3
  %2806 = fmul <4 x float> %2805, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2807 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2808 = getelementptr inbounds i8, i8* %2807, i64 4
  %2809 = bitcast i8* %2808 to float*
  %2810 = load float, float* %2809, align 4
  %2811 = insertelement <4 x float> zeroinitializer, float %2810, i32 0
  %2812 = insertelement <4 x float> %2811, float 0.000000e+00, i32 1
  %2813 = insertelement <4 x float> %2812, float 0.000000e+00, i32 2
  %2814 = insertelement <4 x float> %2813, float 0.000000e+00, i32 3
  %2815 = fmul <4 x float> %2806, %2814
  %2816 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %2815
  %2817 = extractelement <4 x float> %2816, i32 0
  %2818 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2819 = getelementptr inbounds i8, i8* %2818, i64 20
  %2820 = bitcast i8* %2819 to float*
  store float %2817, float* %2820, align 4
  %2821 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2822 = getelementptr inbounds i8, i8* %2821, i64 4
  %2823 = bitcast i8* %2822 to float*
  %2824 = load float, float* %2823, align 4
  %2825 = insertelement <4 x float> zeroinitializer, float %2824, i32 0
  %2826 = insertelement <4 x float> %2825, float 1.000000e+00, i32 1
  %2827 = insertelement <4 x float> %2826, float 1.000000e+00, i32 2
  %2828 = insertelement <4 x float> %2827, float 1.000000e+00, i32 3
  %2829 = fmul <4 x float> %2828, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2830 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2831 = getelementptr inbounds i8, i8* %2830, i64 8
  %2832 = bitcast i8* %2831 to float*
  %2833 = load float, float* %2832, align 4
  %2834 = insertelement <4 x float> zeroinitializer, float %2833, i32 0
  %2835 = insertelement <4 x float> %2834, float 0.000000e+00, i32 1
  %2836 = insertelement <4 x float> %2835, float 0.000000e+00, i32 2
  %2837 = insertelement <4 x float> %2836, float 0.000000e+00, i32 3
  %2838 = fmul <4 x float> %2829, %2837
  %2839 = fsub <4 x float> zeroinitializer, %2838
  %2840 = extractelement <4 x float> %2839, i32 0
  %2841 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2842 = getelementptr inbounds i8, i8* %2841, i64 24
  %2843 = bitcast i8* %2842 to float*
  store float %2840, float* %2843, align 4
  %2844 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2845 = getelementptr inbounds i8, i8* %2844, i64 4
  %2846 = bitcast i8* %2845 to float*
  %2847 = load float, float* %2846, align 4
  %2848 = insertelement <4 x float> zeroinitializer, float %2847, i32 0
  %2849 = insertelement <4 x float> %2848, float 1.000000e+00, i32 1
  %2850 = insertelement <4 x float> %2849, float 1.000000e+00, i32 2
  %2851 = insertelement <4 x float> %2850, float 1.000000e+00, i32 3
  %2852 = fmul <4 x float> %2851, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2853 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2854 = getelementptr inbounds i8, i8* %2853, i64 12
  %2855 = bitcast i8* %2854 to float*
  %2856 = load float, float* %2855, align 4
  %2857 = insertelement <4 x float> zeroinitializer, float %2856, i32 0
  %2858 = insertelement <4 x float> %2857, float 0.000000e+00, i32 1
  %2859 = insertelement <4 x float> %2858, float 0.000000e+00, i32 2
  %2860 = insertelement <4 x float> %2859, float 0.000000e+00, i32 3
  %2861 = fmul <4 x float> %2852, %2860
  %2862 = fsub <4 x float> zeroinitializer, %2861
  %2863 = extractelement <4 x float> %2862, i32 0
  %2864 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2865 = getelementptr inbounds i8, i8* %2864, i64 28
  %2866 = bitcast i8* %2865 to float*
  store float %2863, float* %2866, align 4
  %2867 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2868 = getelementptr inbounds i8, i8* %2867, i64 8
  %2869 = bitcast i8* %2868 to float*
  %2870 = load float, float* %2869, align 4
  %2871 = insertelement <4 x float> zeroinitializer, float %2870, i32 0
  %2872 = insertelement <4 x float> %2871, float 1.000000e+00, i32 1
  %2873 = insertelement <4 x float> %2872, float 1.000000e+00, i32 2
  %2874 = insertelement <4 x float> %2873, float 1.000000e+00, i32 3
  %2875 = fmul <4 x float> %2874, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2876 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2877 = bitcast i8* %2876 to float*
  %2878 = load float, float* %2877, align 4
  %2879 = insertelement <4 x float> zeroinitializer, float %2878, i32 0
  %2880 = insertelement <4 x float> %2879, float 0.000000e+00, i32 1
  %2881 = insertelement <4 x float> %2880, float 0.000000e+00, i32 2
  %2882 = insertelement <4 x float> %2881, float 0.000000e+00, i32 3
  %2883 = fmul <4 x float> %2875, %2882
  %2884 = fsub <4 x float> zeroinitializer, %2883
  %2885 = extractelement <4 x float> %2884, i32 0
  %2886 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2887 = getelementptr inbounds i8, i8* %2886, i64 32
  %2888 = bitcast i8* %2887 to float*
  store float %2885, float* %2888, align 4
  %2889 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2890 = getelementptr inbounds i8, i8* %2889, i64 8
  %2891 = bitcast i8* %2890 to float*
  %2892 = load float, float* %2891, align 4
  %2893 = insertelement <4 x float> zeroinitializer, float %2892, i32 0
  %2894 = insertelement <4 x float> %2893, float 1.000000e+00, i32 1
  %2895 = insertelement <4 x float> %2894, float 1.000000e+00, i32 2
  %2896 = insertelement <4 x float> %2895, float 1.000000e+00, i32 3
  %2897 = fmul <4 x float> %2896, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2898 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2899 = getelementptr inbounds i8, i8* %2898, i64 4
  %2900 = bitcast i8* %2899 to float*
  %2901 = load float, float* %2900, align 4
  %2902 = insertelement <4 x float> zeroinitializer, float %2901, i32 0
  %2903 = insertelement <4 x float> %2902, float 0.000000e+00, i32 1
  %2904 = insertelement <4 x float> %2903, float 0.000000e+00, i32 2
  %2905 = insertelement <4 x float> %2904, float 0.000000e+00, i32 3
  %2906 = fmul <4 x float> %2897, %2905
  %2907 = fsub <4 x float> zeroinitializer, %2906
  %2908 = extractelement <4 x float> %2907, i32 0
  %2909 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2910 = getelementptr inbounds i8, i8* %2909, i64 36
  %2911 = bitcast i8* %2910 to float*
  store float %2908, float* %2911, align 4
  %2912 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2913 = getelementptr inbounds i8, i8* %2912, i64 8
  %2914 = bitcast i8* %2913 to float*
  %2915 = load float, float* %2914, align 4
  %2916 = insertelement <4 x float> zeroinitializer, float %2915, i32 0
  %2917 = insertelement <4 x float> %2916, float 1.000000e+00, i32 1
  %2918 = insertelement <4 x float> %2917, float 1.000000e+00, i32 2
  %2919 = insertelement <4 x float> %2918, float 1.000000e+00, i32 3
  %2920 = fmul <4 x float> %2919, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2921 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2922 = getelementptr inbounds i8, i8* %2921, i64 8
  %2923 = bitcast i8* %2922 to float*
  %2924 = load float, float* %2923, align 4
  %2925 = insertelement <4 x float> zeroinitializer, float %2924, i32 0
  %2926 = insertelement <4 x float> %2925, float 0.000000e+00, i32 1
  %2927 = insertelement <4 x float> %2926, float 0.000000e+00, i32 2
  %2928 = insertelement <4 x float> %2927, float 0.000000e+00, i32 3
  %2929 = fmul <4 x float> %2920, %2928
  %2930 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %2929
  %2931 = extractelement <4 x float> %2930, i32 0
  %2932 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2933 = getelementptr inbounds i8, i8* %2932, i64 40
  %2934 = bitcast i8* %2933 to float*
  store float %2931, float* %2934, align 4
  %2935 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2936 = getelementptr inbounds i8, i8* %2935, i64 8
  %2937 = bitcast i8* %2936 to float*
  %2938 = load float, float* %2937, align 4
  %2939 = insertelement <4 x float> zeroinitializer, float %2938, i32 0
  %2940 = insertelement <4 x float> %2939, float 1.000000e+00, i32 1
  %2941 = insertelement <4 x float> %2940, float 1.000000e+00, i32 2
  %2942 = insertelement <4 x float> %2941, float 1.000000e+00, i32 3
  %2943 = fmul <4 x float> %2942, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2944 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2945 = getelementptr inbounds i8, i8* %2944, i64 12
  %2946 = bitcast i8* %2945 to float*
  %2947 = load float, float* %2946, align 4
  %2948 = insertelement <4 x float> zeroinitializer, float %2947, i32 0
  %2949 = insertelement <4 x float> %2948, float 0.000000e+00, i32 1
  %2950 = insertelement <4 x float> %2949, float 0.000000e+00, i32 2
  %2951 = insertelement <4 x float> %2950, float 0.000000e+00, i32 3
  %2952 = fmul <4 x float> %2943, %2951
  %2953 = fsub <4 x float> zeroinitializer, %2952
  %2954 = extractelement <4 x float> %2953, i32 0
  %2955 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2956 = getelementptr inbounds i8, i8* %2955, i64 44
  %2957 = bitcast i8* %2956 to float*
  store float %2954, float* %2957, align 4
  %2958 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2959 = getelementptr inbounds i8, i8* %2958, i64 12
  %2960 = bitcast i8* %2959 to float*
  %2961 = load float, float* %2960, align 4
  %2962 = insertelement <4 x float> zeroinitializer, float %2961, i32 0
  %2963 = insertelement <4 x float> %2962, float 1.000000e+00, i32 1
  %2964 = insertelement <4 x float> %2963, float 1.000000e+00, i32 2
  %2965 = insertelement <4 x float> %2964, float 1.000000e+00, i32 3
  %2966 = fmul <4 x float> %2965, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2967 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2968 = bitcast i8* %2967 to float*
  %2969 = load float, float* %2968, align 4
  %2970 = insertelement <4 x float> zeroinitializer, float %2969, i32 0
  %2971 = insertelement <4 x float> %2970, float 0.000000e+00, i32 1
  %2972 = insertelement <4 x float> %2971, float 0.000000e+00, i32 2
  %2973 = insertelement <4 x float> %2972, float 0.000000e+00, i32 3
  %2974 = fmul <4 x float> %2966, %2973
  %2975 = fsub <4 x float> zeroinitializer, %2974
  %2976 = extractelement <4 x float> %2975, i32 0
  %2977 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2978 = getelementptr inbounds i8, i8* %2977, i64 48
  %2979 = bitcast i8* %2978 to float*
  store float %2976, float* %2979, align 4
  %2980 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2981 = getelementptr inbounds i8, i8* %2980, i64 12
  %2982 = bitcast i8* %2981 to float*
  %2983 = load float, float* %2982, align 4
  %2984 = insertelement <4 x float> zeroinitializer, float %2983, i32 0
  %2985 = insertelement <4 x float> %2984, float 1.000000e+00, i32 1
  %2986 = insertelement <4 x float> %2985, float 1.000000e+00, i32 2
  %2987 = insertelement <4 x float> %2986, float 1.000000e+00, i32 3
  %2988 = fmul <4 x float> %2987, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2989 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2990 = getelementptr inbounds i8, i8* %2989, i64 4
  %2991 = bitcast i8* %2990 to float*
  %2992 = load float, float* %2991, align 4
  %2993 = insertelement <4 x float> zeroinitializer, float %2992, i32 0
  %2994 = insertelement <4 x float> %2993, float 0.000000e+00, i32 1
  %2995 = insertelement <4 x float> %2994, float 0.000000e+00, i32 2
  %2996 = insertelement <4 x float> %2995, float 0.000000e+00, i32 3
  %2997 = fmul <4 x float> %2988, %2996
  %2998 = fsub <4 x float> zeroinitializer, %2997
  %2999 = extractelement <4 x float> %2998, i32 0
  %3000 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3001 = getelementptr inbounds i8, i8* %3000, i64 52
  %3002 = bitcast i8* %3001 to float*
  store float %2999, float* %3002, align 4
  %3003 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3004 = getelementptr inbounds i8, i8* %3003, i64 12
  %3005 = bitcast i8* %3004 to float*
  %3006 = load float, float* %3005, align 4
  %3007 = insertelement <4 x float> zeroinitializer, float %3006, i32 0
  %3008 = insertelement <4 x float> %3007, float 1.000000e+00, i32 1
  %3009 = insertelement <4 x float> %3008, float 1.000000e+00, i32 2
  %3010 = insertelement <4 x float> %3009, float 1.000000e+00, i32 3
  %3011 = fmul <4 x float> %3010, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %3012 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3013 = getelementptr inbounds i8, i8* %3012, i64 8
  %3014 = bitcast i8* %3013 to float*
  %3015 = load float, float* %3014, align 4
  %3016 = insertelement <4 x float> zeroinitializer, float %3015, i32 0
  %3017 = insertelement <4 x float> %3016, float 0.000000e+00, i32 1
  %3018 = insertelement <4 x float> %3017, float 0.000000e+00, i32 2
  %3019 = insertelement <4 x float> %3018, float 0.000000e+00, i32 3
  %3020 = fmul <4 x float> %3011, %3019
  %3021 = fsub <4 x float> zeroinitializer, %3020
  %3022 = extractelement <4 x float> %3021, i32 0
  %3023 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3024 = getelementptr inbounds i8, i8* %3023, i64 56
  %3025 = bitcast i8* %3024 to float*
  store float %3022, float* %3025, align 4
  %3026 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3027 = getelementptr inbounds i8, i8* %3026, i64 12
  %3028 = bitcast i8* %3027 to float*
  %3029 = load float, float* %3028, align 4
  %3030 = insertelement <4 x float> zeroinitializer, float %3029, i32 0
  %3031 = insertelement <4 x float> %3030, float 1.000000e+00, i32 1
  %3032 = insertelement <4 x float> %3031, float 1.000000e+00, i32 2
  %3033 = insertelement <4 x float> %3032, float 1.000000e+00, i32 3
  %3034 = fmul <4 x float> %3033, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %3035 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3036 = getelementptr inbounds i8, i8* %3035, i64 12
  %3037 = bitcast i8* %3036 to float*
  %3038 = load float, float* %3037, align 4
  %3039 = insertelement <4 x float> zeroinitializer, float %3038, i32 0
  %3040 = insertelement <4 x float> %3039, float 0.000000e+00, i32 1
  %3041 = insertelement <4 x float> %3040, float 0.000000e+00, i32 2
  %3042 = insertelement <4 x float> %3041, float 0.000000e+00, i32 3
  %3043 = fmul <4 x float> %3034, %3042
  %3044 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %3043
  %3045 = extractelement <4 x float> %3044, i32 0
  %3046 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3047 = getelementptr inbounds i8, i8* %3046, i64 60
  %3048 = bitcast i8* %3047 to float*
  store float %3045, float* %3048, align 4
  %3049 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3050 = bitcast i8* %3049 to i32*
  %3051 = load i32, i32* %3050, align 4
  %3052 = sitofp i32 %3051 to float
  %3053 = insertelement <4 x float> zeroinitializer, float %3052, i32 0
  %3054 = insertelement <4 x float> %3053, float 0.000000e+00, i32 1
  %3055 = insertelement <4 x float> %3054, float 0.000000e+00, i32 2
  %3056 = insertelement <4 x float> %3055, float 0.000000e+00, i32 3
  %3057 = extractelement <4 x float> %3056, i32 0
  %3058 = fptosi float %3057 to i32
  %3059 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3060 = bitcast i8* %3059 to i32*
  store i32 %3058, i32* %3060, align 4
  %3061 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3062 = getelementptr inbounds i8, i8* %3061, i64 4
  %3063 = bitcast i8* %3062 to i32*
  %3064 = load i32, i32* %3063, align 4
  %3065 = sitofp i32 %3064 to float
  %3066 = insertelement <4 x float> zeroinitializer, float %3065, i32 0
  %3067 = insertelement <4 x float> %3066, float 0.000000e+00, i32 1
  %3068 = insertelement <4 x float> %3067, float 0.000000e+00, i32 2
  %3069 = insertelement <4 x float> %3068, float 0.000000e+00, i32 3
  %3070 = extractelement <4 x float> %3069, i32 0
  %3071 = fptosi float %3070 to i32
  %3072 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3073 = getelementptr inbounds i8, i8* %3072, i64 4
  %3074 = bitcast i8* %3073 to i32*
  store i32 %3071, i32* %3074, align 4
  %3075 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3076 = getelementptr inbounds i8, i8* %3075, i64 8
  %3077 = bitcast i8* %3076 to i32*
  %3078 = load i32, i32* %3077, align 4
  %3079 = sitofp i32 %3078 to float
  %3080 = insertelement <4 x float> zeroinitializer, float %3079, i32 0
  %3081 = insertelement <4 x float> %3080, float 0.000000e+00, i32 1
  %3082 = insertelement <4 x float> %3081, float 0.000000e+00, i32 2
  %3083 = insertelement <4 x float> %3082, float 0.000000e+00, i32 3
  %3084 = extractelement <4 x float> %3083, i32 0
  %3085 = fptosi float %3084 to i32
  %3086 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3087 = getelementptr inbounds i8, i8* %3086, i64 8
  %3088 = bitcast i8* %3087 to i32*
  store i32 %3085, i32* %3088, align 4
  %3089 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3090 = getelementptr inbounds i8, i8* %3089, i64 12
  %3091 = bitcast i8* %3090 to i32*
  %3092 = load i32, i32* %3091, align 4
  %3093 = sitofp i32 %3092 to float
  %3094 = insertelement <4 x float> zeroinitializer, float %3093, i32 0
  %3095 = insertelement <4 x float> %3094, float 0.000000e+00, i32 1
  %3096 = insertelement <4 x float> %3095, float 0.000000e+00, i32 2
  %3097 = insertelement <4 x float> %3096, float 0.000000e+00, i32 3
  %3098 = extractelement <4 x float> %3097, i32 0
  %3099 = fptosi float %3098 to i32
  %3100 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3101 = getelementptr inbounds i8, i8* %3100, i64 12
  %3102 = bitcast i8* %3101 to i32*
  store i32 %3099, i32* %3102, align 4
  %3103 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3104 = getelementptr inbounds i8, i8* %3103, i64 16
  %3105 = bitcast i8* %3104 to i32*
  %3106 = load i32, i32* %3105, align 4
  %3107 = sitofp i32 %3106 to float
  %3108 = insertelement <4 x float> zeroinitializer, float %3107, i32 0
  %3109 = insertelement <4 x float> %3108, float 0.000000e+00, i32 1
  %3110 = insertelement <4 x float> %3109, float 0.000000e+00, i32 2
  %3111 = insertelement <4 x float> %3110, float 0.000000e+00, i32 3
  %3112 = extractelement <4 x float> %3111, i32 0
  %3113 = fptosi float %3112 to i32
  %3114 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3115 = getelementptr inbounds i8, i8* %3114, i64 16
  %3116 = bitcast i8* %3115 to i32*
  store i32 %3113, i32* %3116, align 4
  %3117 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3118 = getelementptr inbounds i8, i8* %3117, i64 20
  %3119 = bitcast i8* %3118 to i32*
  %3120 = load i32, i32* %3119, align 4
  %3121 = sitofp i32 %3120 to float
  %3122 = insertelement <4 x float> zeroinitializer, float %3121, i32 0
  %3123 = insertelement <4 x float> %3122, float 0.000000e+00, i32 1
  %3124 = insertelement <4 x float> %3123, float 0.000000e+00, i32 2
  %3125 = insertelement <4 x float> %3124, float 0.000000e+00, i32 3
  %3126 = extractelement <4 x float> %3125, i32 0
  %3127 = fptosi float %3126 to i32
  %3128 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3129 = getelementptr inbounds i8, i8* %3128, i64 20
  %3130 = bitcast i8* %3129 to i32*
  store i32 %3127, i32* %3130, align 4
  %3131 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3132 = getelementptr inbounds i8, i8* %3131, i64 24
  %3133 = bitcast i8* %3132 to i32*
  %3134 = load i32, i32* %3133, align 4
  %3135 = sitofp i32 %3134 to float
  %3136 = insertelement <4 x float> zeroinitializer, float %3135, i32 0
  %3137 = insertelement <4 x float> %3136, float 0.000000e+00, i32 1
  %3138 = insertelement <4 x float> %3137, float 0.000000e+00, i32 2
  %3139 = insertelement <4 x float> %3138, float 0.000000e+00, i32 3
  %3140 = extractelement <4 x float> %3139, i32 0
  %3141 = fptosi float %3140 to i32
  %3142 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3143 = getelementptr inbounds i8, i8* %3142, i64 24
  %3144 = bitcast i8* %3143 to i32*
  store i32 %3141, i32* %3144, align 4
  %3145 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3146 = getelementptr inbounds i8, i8* %3145, i64 28
  %3147 = bitcast i8* %3146 to i32*
  %3148 = load i32, i32* %3147, align 4
  %3149 = sitofp i32 %3148 to float
  %3150 = insertelement <4 x float> zeroinitializer, float %3149, i32 0
  %3151 = insertelement <4 x float> %3150, float 0.000000e+00, i32 1
  %3152 = insertelement <4 x float> %3151, float 0.000000e+00, i32 2
  %3153 = insertelement <4 x float> %3152, float 0.000000e+00, i32 3
  %3154 = extractelement <4 x float> %3153, i32 0
  %3155 = fptosi float %3154 to i32
  %3156 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3157 = getelementptr inbounds i8, i8* %3156, i64 28
  %3158 = bitcast i8* %3157 to i32*
  store i32 %3155, i32* %3158, align 4
  %3159 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3160 = getelementptr inbounds i8, i8* %3159, i64 32
  %3161 = bitcast i8* %3160 to i32*
  %3162 = load i32, i32* %3161, align 4
  %3163 = sitofp i32 %3162 to float
  %3164 = insertelement <4 x float> zeroinitializer, float %3163, i32 0
  %3165 = insertelement <4 x float> %3164, float 0.000000e+00, i32 1
  %3166 = insertelement <4 x float> %3165, float 0.000000e+00, i32 2
  %3167 = insertelement <4 x float> %3166, float 0.000000e+00, i32 3
  %3168 = extractelement <4 x float> %3167, i32 0
  %3169 = fptosi float %3168 to i32
  %3170 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3171 = getelementptr inbounds i8, i8* %3170, i64 32
  %3172 = bitcast i8* %3171 to i32*
  store i32 %3169, i32* %3172, align 4
  %3173 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3174 = getelementptr inbounds i8, i8* %3173, i64 36
  %3175 = bitcast i8* %3174 to i32*
  %3176 = load i32, i32* %3175, align 4
  %3177 = sitofp i32 %3176 to float
  %3178 = insertelement <4 x float> zeroinitializer, float %3177, i32 0
  %3179 = insertelement <4 x float> %3178, float 0.000000e+00, i32 1
  %3180 = insertelement <4 x float> %3179, float 0.000000e+00, i32 2
  %3181 = insertelement <4 x float> %3180, float 0.000000e+00, i32 3
  %3182 = extractelement <4 x float> %3181, i32 0
  %3183 = fptosi float %3182 to i32
  %3184 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3185 = getelementptr inbounds i8, i8* %3184, i64 36
  %3186 = bitcast i8* %3185 to i32*
  store i32 %3183, i32* %3186, align 4
  %3187 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3188 = getelementptr inbounds i8, i8* %3187, i64 40
  %3189 = bitcast i8* %3188 to i32*
  %3190 = load i32, i32* %3189, align 4
  %3191 = sitofp i32 %3190 to float
  %3192 = insertelement <4 x float> zeroinitializer, float %3191, i32 0
  %3193 = insertelement <4 x float> %3192, float 0.000000e+00, i32 1
  %3194 = insertelement <4 x float> %3193, float 0.000000e+00, i32 2
  %3195 = insertelement <4 x float> %3194, float 0.000000e+00, i32 3
  %3196 = extractelement <4 x float> %3195, i32 0
  %3197 = fptosi float %3196 to i32
  %3198 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3199 = getelementptr inbounds i8, i8* %3198, i64 40
  %3200 = bitcast i8* %3199 to i32*
  store i32 %3197, i32* %3200, align 4
  %3201 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3202 = getelementptr inbounds i8, i8* %3201, i64 44
  %3203 = bitcast i8* %3202 to i32*
  %3204 = load i32, i32* %3203, align 4
  %3205 = sitofp i32 %3204 to float
  %3206 = insertelement <4 x float> zeroinitializer, float %3205, i32 0
  %3207 = insertelement <4 x float> %3206, float 0.000000e+00, i32 1
  %3208 = insertelement <4 x float> %3207, float 0.000000e+00, i32 2
  %3209 = insertelement <4 x float> %3208, float 0.000000e+00, i32 3
  %3210 = extractelement <4 x float> %3209, i32 0
  %3211 = fptosi float %3210 to i32
  %3212 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3213 = getelementptr inbounds i8, i8* %3212, i64 44
  %3214 = bitcast i8* %3213 to i32*
  store i32 %3211, i32* %3214, align 4
  %3215 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3216 = getelementptr inbounds i8, i8* %3215, i64 48
  %3217 = bitcast i8* %3216 to i32*
  %3218 = load i32, i32* %3217, align 4
  %3219 = sitofp i32 %3218 to float
  %3220 = insertelement <4 x float> zeroinitializer, float %3219, i32 0
  %3221 = insertelement <4 x float> %3220, float 0.000000e+00, i32 1
  %3222 = insertelement <4 x float> %3221, float 0.000000e+00, i32 2
  %3223 = insertelement <4 x float> %3222, float 0.000000e+00, i32 3
  %3224 = extractelement <4 x float> %3223, i32 0
  %3225 = fptosi float %3224 to i32
  %3226 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3227 = getelementptr inbounds i8, i8* %3226, i64 48
  %3228 = bitcast i8* %3227 to i32*
  store i32 %3225, i32* %3228, align 4
  %3229 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3230 = getelementptr inbounds i8, i8* %3229, i64 52
  %3231 = bitcast i8* %3230 to i32*
  %3232 = load i32, i32* %3231, align 4
  %3233 = sitofp i32 %3232 to float
  %3234 = insertelement <4 x float> zeroinitializer, float %3233, i32 0
  %3235 = insertelement <4 x float> %3234, float 0.000000e+00, i32 1
  %3236 = insertelement <4 x float> %3235, float 0.000000e+00, i32 2
  %3237 = insertelement <4 x float> %3236, float 0.000000e+00, i32 3
  %3238 = extractelement <4 x float> %3237, i32 0
  %3239 = fptosi float %3238 to i32
  %3240 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3241 = getelementptr inbounds i8, i8* %3240, i64 52
  %3242 = bitcast i8* %3241 to i32*
  store i32 %3239, i32* %3242, align 4
  %3243 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3244 = getelementptr inbounds i8, i8* %3243, i64 56
  %3245 = bitcast i8* %3244 to i32*
  %3246 = load i32, i32* %3245, align 4
  %3247 = sitofp i32 %3246 to float
  %3248 = insertelement <4 x float> zeroinitializer, float %3247, i32 0
  %3249 = insertelement <4 x float> %3248, float 0.000000e+00, i32 1
  %3250 = insertelement <4 x float> %3249, float 0.000000e+00, i32 2
  %3251 = insertelement <4 x float> %3250, float 0.000000e+00, i32 3
  %3252 = extractelement <4 x float> %3251, i32 0
  %3253 = fptosi float %3252 to i32
  %3254 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3255 = getelementptr inbounds i8, i8* %3254, i64 56
  %3256 = bitcast i8* %3255 to i32*
  store i32 %3253, i32* %3256, align 4
  %3257 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3258 = getelementptr inbounds i8, i8* %3257, i64 60
  %3259 = bitcast i8* %3258 to i32*
  %3260 = load i32, i32* %3259, align 4
  %3261 = sitofp i32 %3260 to float
  %3262 = insertelement <4 x float> zeroinitializer, float %3261, i32 0
  %3263 = insertelement <4 x float> %3262, float 0.000000e+00, i32 1
  %3264 = insertelement <4 x float> %3263, float 0.000000e+00, i32 2
  %3265 = insertelement <4 x float> %3264, float 0.000000e+00, i32 3
  %3266 = extractelement <4 x float> %3265, i32 0
  %3267 = fptosi float %3266 to i32
  %3268 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3269 = getelementptr inbounds i8, i8* %3268, i64 60
  %3270 = bitcast i8* %3269 to i32*
  store i32 %3267, i32* %3270, align 4
  store float 0.000000e+00, float* %2, align 4
  %3271 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3272 = bitcast i8* %3271 to float*
  %3273 = load float, float* %3272, align 4
  %3274 = insertelement <4 x float> zeroinitializer, float %3273, i32 0
  %3275 = insertelement <4 x float> %3274, float 0.000000e+00, i32 1
  %3276 = insertelement <4 x float> %3275, float 0.000000e+00, i32 2
  %3277 = insertelement <4 x float> %3276, float 0.000000e+00, i32 3
  %3278 = load float, float* %0, align 4
  %3279 = insertelement <4 x float> zeroinitializer, float %3278, i32 0
  %3280 = insertelement <4 x float> %3279, float 0.000000e+00, i32 1
  %3281 = insertelement <4 x float> %3280, float 0.000000e+00, i32 2
  %3282 = insertelement <4 x float> %3281, float 0.000000e+00, i32 3
  %3283 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3277, <4 x float> %3282, <4 x float> zeroinitializer)
  %3284 = extractelement <4 x float> %3283, i32 0
  store float %3284, float* %2, align 4
  %3285 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3286 = bitcast i8* %3285 to float*
  %3287 = load float, float* %3286, align 4
  %3288 = insertelement <4 x float> zeroinitializer, float %3287, i32 0
  %3289 = insertelement <4 x float> %3288, float 1.000000e+00, i32 1
  %3290 = insertelement <4 x float> %3289, float 1.000000e+00, i32 2
  %3291 = insertelement <4 x float> %3290, float 1.000000e+00, i32 3
  %3292 = load float, float* %0, align 4
  %3293 = insertelement <4 x float> zeroinitializer, float %3292, i32 0
  %3294 = insertelement <4 x float> %3293, float 0.000000e+00, i32 1
  %3295 = insertelement <4 x float> %3294, float 0.000000e+00, i32 2
  %3296 = insertelement <4 x float> %3295, float 0.000000e+00, i32 3
  %3297 = fmul <4 x float> %3291, %3296
  %3298 = fadd <4 x float> %3297, zeroinitializer
  %3299 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3300 = getelementptr inbounds i8, i8* %3299, i64 4
  %3301 = bitcast i8* %3300 to float*
  %3302 = load float, float* %3301, align 4
  %3303 = insertelement <4 x float> zeroinitializer, float %3302, i32 0
  %3304 = insertelement <4 x float> %3303, float 0.000000e+00, i32 1
  %3305 = insertelement <4 x float> %3304, float 0.000000e+00, i32 2
  %3306 = insertelement <4 x float> %3305, float 0.000000e+00, i32 3
  %3307 = getelementptr inbounds float, float* %0, i64 4
  %3308 = load float, float* %3307, align 4
  %3309 = insertelement <4 x float> zeroinitializer, float %3308, i32 0
  %3310 = insertelement <4 x float> %3309, float 0.000000e+00, i32 1
  %3311 = insertelement <4 x float> %3310, float 0.000000e+00, i32 2
  %3312 = insertelement <4 x float> %3311, float 0.000000e+00, i32 3
  %3313 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3306, <4 x float> %3312, <4 x float> %3298)
  %3314 = extractelement <4 x float> %3313, i32 0
  store float %3314, float* %2, align 4
  %3315 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3316 = bitcast i8* %3315 to float*
  %3317 = load float, float* %3316, align 4
  %3318 = insertelement <4 x float> zeroinitializer, float %3317, i32 0
  %3319 = insertelement <4 x float> %3318, float 1.000000e+00, i32 1
  %3320 = insertelement <4 x float> %3319, float 1.000000e+00, i32 2
  %3321 = insertelement <4 x float> %3320, float 1.000000e+00, i32 3
  %3322 = load float, float* %0, align 4
  %3323 = insertelement <4 x float> zeroinitializer, float %3322, i32 0
  %3324 = insertelement <4 x float> %3323, float 0.000000e+00, i32 1
  %3325 = insertelement <4 x float> %3324, float 0.000000e+00, i32 2
  %3326 = insertelement <4 x float> %3325, float 0.000000e+00, i32 3
  %3327 = fmul <4 x float> %3321, %3326
  %3328 = fadd <4 x float> %3327, zeroinitializer
  %3329 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3330 = getelementptr inbounds i8, i8* %3329, i64 4
  %3331 = bitcast i8* %3330 to float*
  %3332 = load float, float* %3331, align 4
  %3333 = insertelement <4 x float> zeroinitializer, float %3332, i32 0
  %3334 = insertelement <4 x float> %3333, float 1.000000e+00, i32 1
  %3335 = insertelement <4 x float> %3334, float 1.000000e+00, i32 2
  %3336 = insertelement <4 x float> %3335, float 1.000000e+00, i32 3
  %3337 = getelementptr inbounds float, float* %0, i64 4
  %3338 = load float, float* %3337, align 4
  %3339 = insertelement <4 x float> zeroinitializer, float %3338, i32 0
  %3340 = insertelement <4 x float> %3339, float 0.000000e+00, i32 1
  %3341 = insertelement <4 x float> %3340, float 0.000000e+00, i32 2
  %3342 = insertelement <4 x float> %3341, float 0.000000e+00, i32 3
  %3343 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3336, <4 x float> %3342, <4 x float> %3328)
  %3344 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3345 = getelementptr inbounds i8, i8* %3344, i64 8
  %3346 = bitcast i8* %3345 to float*
  %3347 = load float, float* %3346, align 4
  %3348 = insertelement <4 x float> zeroinitializer, float %3347, i32 0
  %3349 = insertelement <4 x float> %3348, float 0.000000e+00, i32 1
  %3350 = insertelement <4 x float> %3349, float 0.000000e+00, i32 2
  %3351 = insertelement <4 x float> %3350, float 0.000000e+00, i32 3
  %3352 = getelementptr inbounds float, float* %0, i64 8
  %3353 = load float, float* %3352, align 4
  %3354 = insertelement <4 x float> zeroinitializer, float %3353, i32 0
  %3355 = insertelement <4 x float> %3354, float 0.000000e+00, i32 1
  %3356 = insertelement <4 x float> %3355, float 0.000000e+00, i32 2
  %3357 = insertelement <4 x float> %3356, float 0.000000e+00, i32 3
  %3358 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3351, <4 x float> %3357, <4 x float> %3343)
  %3359 = extractelement <4 x float> %3358, i32 0
  store float %3359, float* %2, align 4
  %3360 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3361 = bitcast i8* %3360 to float*
  %3362 = load float, float* %3361, align 4
  %3363 = insertelement <4 x float> zeroinitializer, float %3362, i32 0
  %3364 = insertelement <4 x float> %3363, float 1.000000e+00, i32 1
  %3365 = insertelement <4 x float> %3364, float 1.000000e+00, i32 2
  %3366 = insertelement <4 x float> %3365, float 1.000000e+00, i32 3
  %3367 = load float, float* %0, align 4
  %3368 = insertelement <4 x float> zeroinitializer, float %3367, i32 0
  %3369 = insertelement <4 x float> %3368, float 0.000000e+00, i32 1
  %3370 = insertelement <4 x float> %3369, float 0.000000e+00, i32 2
  %3371 = insertelement <4 x float> %3370, float 0.000000e+00, i32 3
  %3372 = fmul <4 x float> %3366, %3371
  %3373 = fadd <4 x float> %3372, zeroinitializer
  %3374 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3375 = getelementptr inbounds i8, i8* %3374, i64 4
  %3376 = bitcast i8* %3375 to float*
  %3377 = load float, float* %3376, align 4
  %3378 = insertelement <4 x float> zeroinitializer, float %3377, i32 0
  %3379 = insertelement <4 x float> %3378, float 1.000000e+00, i32 1
  %3380 = insertelement <4 x float> %3379, float 1.000000e+00, i32 2
  %3381 = insertelement <4 x float> %3380, float 1.000000e+00, i32 3
  %3382 = getelementptr inbounds float, float* %0, i64 4
  %3383 = load float, float* %3382, align 4
  %3384 = insertelement <4 x float> zeroinitializer, float %3383, i32 0
  %3385 = insertelement <4 x float> %3384, float 0.000000e+00, i32 1
  %3386 = insertelement <4 x float> %3385, float 0.000000e+00, i32 2
  %3387 = insertelement <4 x float> %3386, float 0.000000e+00, i32 3
  %3388 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3381, <4 x float> %3387, <4 x float> %3373)
  %3389 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3390 = getelementptr inbounds i8, i8* %3389, i64 8
  %3391 = bitcast i8* %3390 to float*
  %3392 = load float, float* %3391, align 4
  %3393 = insertelement <4 x float> zeroinitializer, float %3392, i32 0
  %3394 = insertelement <4 x float> %3393, float 1.000000e+00, i32 1
  %3395 = insertelement <4 x float> %3394, float 1.000000e+00, i32 2
  %3396 = insertelement <4 x float> %3395, float 1.000000e+00, i32 3
  %3397 = getelementptr inbounds float, float* %0, i64 8
  %3398 = load float, float* %3397, align 4
  %3399 = insertelement <4 x float> zeroinitializer, float %3398, i32 0
  %3400 = insertelement <4 x float> %3399, float 0.000000e+00, i32 1
  %3401 = insertelement <4 x float> %3400, float 0.000000e+00, i32 2
  %3402 = insertelement <4 x float> %3401, float 0.000000e+00, i32 3
  %3403 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3396, <4 x float> %3402, <4 x float> %3388)
  %3404 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3405 = getelementptr inbounds i8, i8* %3404, i64 12
  %3406 = bitcast i8* %3405 to float*
  %3407 = load float, float* %3406, align 4
  %3408 = insertelement <4 x float> zeroinitializer, float %3407, i32 0
  %3409 = insertelement <4 x float> %3408, float 0.000000e+00, i32 1
  %3410 = insertelement <4 x float> %3409, float 0.000000e+00, i32 2
  %3411 = insertelement <4 x float> %3410, float 0.000000e+00, i32 3
  %3412 = getelementptr inbounds float, float* %0, i64 12
  %3413 = load float, float* %3412, align 4
  %3414 = insertelement <4 x float> zeroinitializer, float %3413, i32 0
  %3415 = insertelement <4 x float> %3414, float 0.000000e+00, i32 1
  %3416 = insertelement <4 x float> %3415, float 0.000000e+00, i32 2
  %3417 = insertelement <4 x float> %3416, float 0.000000e+00, i32 3
  %3418 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3411, <4 x float> %3417, <4 x float> %3403)
  %3419 = extractelement <4 x float> %3418, i32 0
  store float %3419, float* %2, align 4
  %3420 = extractelement <4 x float> %3418, i32 1
  %3421 = getelementptr inbounds float, float* %2, i64 1
  store float %3420, float* %3421, align 4
  %3422 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3423 = bitcast i8* %3422 to float*
  %3424 = load float, float* %3423, align 4
  %3425 = insertelement <4 x float> zeroinitializer, float %3424, i32 0
  %3426 = insertelement <4 x float> %3425, float 0.000000e+00, i32 1
  %3427 = insertelement <4 x float> %3426, float 0.000000e+00, i32 2
  %3428 = insertelement <4 x float> %3427, float 0.000000e+00, i32 3
  %3429 = getelementptr inbounds float, float* %0, i64 1
  %3430 = load float, float* %3429, align 4
  %3431 = insertelement <4 x float> zeroinitializer, float %3430, i32 0
  %3432 = insertelement <4 x float> %3431, float 0.000000e+00, i32 1
  %3433 = insertelement <4 x float> %3432, float 0.000000e+00, i32 2
  %3434 = insertelement <4 x float> %3433, float 0.000000e+00, i32 3
  %3435 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3428, <4 x float> %3434, <4 x float> zeroinitializer)
  %3436 = extractelement <4 x float> %3435, i32 0
  %3437 = getelementptr inbounds float, float* %2, i64 1
  store float %3436, float* %3437, align 4
  %3438 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3439 = bitcast i8* %3438 to float*
  %3440 = load float, float* %3439, align 4
  %3441 = insertelement <4 x float> zeroinitializer, float %3440, i32 0
  %3442 = insertelement <4 x float> %3441, float 1.000000e+00, i32 1
  %3443 = insertelement <4 x float> %3442, float 1.000000e+00, i32 2
  %3444 = insertelement <4 x float> %3443, float 1.000000e+00, i32 3
  %3445 = getelementptr inbounds float, float* %0, i64 1
  %3446 = load float, float* %3445, align 4
  %3447 = insertelement <4 x float> zeroinitializer, float %3446, i32 0
  %3448 = insertelement <4 x float> %3447, float 0.000000e+00, i32 1
  %3449 = insertelement <4 x float> %3448, float 0.000000e+00, i32 2
  %3450 = insertelement <4 x float> %3449, float 0.000000e+00, i32 3
  %3451 = fmul <4 x float> %3444, %3450
  %3452 = fadd <4 x float> %3451, zeroinitializer
  %3453 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3454 = getelementptr inbounds i8, i8* %3453, i64 4
  %3455 = bitcast i8* %3454 to float*
  %3456 = load float, float* %3455, align 4
  %3457 = insertelement <4 x float> zeroinitializer, float %3456, i32 0
  %3458 = insertelement <4 x float> %3457, float 0.000000e+00, i32 1
  %3459 = insertelement <4 x float> %3458, float 0.000000e+00, i32 2
  %3460 = insertelement <4 x float> %3459, float 0.000000e+00, i32 3
  %3461 = getelementptr inbounds float, float* %0, i64 5
  %3462 = load float, float* %3461, align 4
  %3463 = insertelement <4 x float> zeroinitializer, float %3462, i32 0
  %3464 = insertelement <4 x float> %3463, float 0.000000e+00, i32 1
  %3465 = insertelement <4 x float> %3464, float 0.000000e+00, i32 2
  %3466 = insertelement <4 x float> %3465, float 0.000000e+00, i32 3
  %3467 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3460, <4 x float> %3466, <4 x float> %3452)
  %3468 = extractelement <4 x float> %3467, i32 0
  %3469 = getelementptr inbounds float, float* %2, i64 1
  store float %3468, float* %3469, align 4
  %3470 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3471 = bitcast i8* %3470 to float*
  %3472 = load float, float* %3471, align 4
  %3473 = insertelement <4 x float> zeroinitializer, float %3472, i32 0
  %3474 = insertelement <4 x float> %3473, float 1.000000e+00, i32 1
  %3475 = insertelement <4 x float> %3474, float 1.000000e+00, i32 2
  %3476 = insertelement <4 x float> %3475, float 1.000000e+00, i32 3
  %3477 = getelementptr inbounds float, float* %0, i64 1
  %3478 = load float, float* %3477, align 4
  %3479 = insertelement <4 x float> zeroinitializer, float %3478, i32 0
  %3480 = insertelement <4 x float> %3479, float 0.000000e+00, i32 1
  %3481 = insertelement <4 x float> %3480, float 0.000000e+00, i32 2
  %3482 = insertelement <4 x float> %3481, float 0.000000e+00, i32 3
  %3483 = fmul <4 x float> %3476, %3482
  %3484 = fadd <4 x float> %3483, zeroinitializer
  %3485 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3486 = getelementptr inbounds i8, i8* %3485, i64 4
  %3487 = bitcast i8* %3486 to float*
  %3488 = load float, float* %3487, align 4
  %3489 = insertelement <4 x float> zeroinitializer, float %3488, i32 0
  %3490 = insertelement <4 x float> %3489, float 1.000000e+00, i32 1
  %3491 = insertelement <4 x float> %3490, float 1.000000e+00, i32 2
  %3492 = insertelement <4 x float> %3491, float 1.000000e+00, i32 3
  %3493 = getelementptr inbounds float, float* %0, i64 5
  %3494 = load float, float* %3493, align 4
  %3495 = insertelement <4 x float> zeroinitializer, float %3494, i32 0
  %3496 = insertelement <4 x float> %3495, float 0.000000e+00, i32 1
  %3497 = insertelement <4 x float> %3496, float 0.000000e+00, i32 2
  %3498 = insertelement <4 x float> %3497, float 0.000000e+00, i32 3
  %3499 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3492, <4 x float> %3498, <4 x float> %3484)
  %3500 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3501 = getelementptr inbounds i8, i8* %3500, i64 8
  %3502 = bitcast i8* %3501 to float*
  %3503 = load float, float* %3502, align 4
  %3504 = insertelement <4 x float> zeroinitializer, float %3503, i32 0
  %3505 = insertelement <4 x float> %3504, float 0.000000e+00, i32 1
  %3506 = insertelement <4 x float> %3505, float 0.000000e+00, i32 2
  %3507 = insertelement <4 x float> %3506, float 0.000000e+00, i32 3
  %3508 = getelementptr inbounds float, float* %0, i64 9
  %3509 = load float, float* %3508, align 4
  %3510 = insertelement <4 x float> zeroinitializer, float %3509, i32 0
  %3511 = insertelement <4 x float> %3510, float 0.000000e+00, i32 1
  %3512 = insertelement <4 x float> %3511, float 0.000000e+00, i32 2
  %3513 = insertelement <4 x float> %3512, float 0.000000e+00, i32 3
  %3514 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3507, <4 x float> %3513, <4 x float> %3499)
  %3515 = extractelement <4 x float> %3514, i32 0
  %3516 = getelementptr inbounds float, float* %2, i64 1
  store float %3515, float* %3516, align 4
  %3517 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3518 = bitcast i8* %3517 to float*
  %3519 = load float, float* %3518, align 4
  %3520 = insertelement <4 x float> zeroinitializer, float %3519, i32 0
  %3521 = insertelement <4 x float> %3520, float 1.000000e+00, i32 1
  %3522 = insertelement <4 x float> %3521, float 1.000000e+00, i32 2
  %3523 = insertelement <4 x float> %3522, float 1.000000e+00, i32 3
  %3524 = getelementptr inbounds float, float* %0, i64 1
  %3525 = load float, float* %3524, align 4
  %3526 = insertelement <4 x float> zeroinitializer, float %3525, i32 0
  %3527 = insertelement <4 x float> %3526, float 0.000000e+00, i32 1
  %3528 = insertelement <4 x float> %3527, float 0.000000e+00, i32 2
  %3529 = insertelement <4 x float> %3528, float 0.000000e+00, i32 3
  %3530 = fmul <4 x float> %3523, %3529
  %3531 = fadd <4 x float> %3530, zeroinitializer
  %3532 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3533 = getelementptr inbounds i8, i8* %3532, i64 4
  %3534 = bitcast i8* %3533 to float*
  %3535 = load float, float* %3534, align 4
  %3536 = insertelement <4 x float> zeroinitializer, float %3535, i32 0
  %3537 = insertelement <4 x float> %3536, float 1.000000e+00, i32 1
  %3538 = insertelement <4 x float> %3537, float 1.000000e+00, i32 2
  %3539 = insertelement <4 x float> %3538, float 1.000000e+00, i32 3
  %3540 = getelementptr inbounds float, float* %0, i64 5
  %3541 = load float, float* %3540, align 4
  %3542 = insertelement <4 x float> zeroinitializer, float %3541, i32 0
  %3543 = insertelement <4 x float> %3542, float 0.000000e+00, i32 1
  %3544 = insertelement <4 x float> %3543, float 0.000000e+00, i32 2
  %3545 = insertelement <4 x float> %3544, float 0.000000e+00, i32 3
  %3546 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3539, <4 x float> %3545, <4 x float> %3531)
  %3547 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3548 = getelementptr inbounds i8, i8* %3547, i64 8
  %3549 = bitcast i8* %3548 to float*
  %3550 = load float, float* %3549, align 4
  %3551 = insertelement <4 x float> zeroinitializer, float %3550, i32 0
  %3552 = insertelement <4 x float> %3551, float 1.000000e+00, i32 1
  %3553 = insertelement <4 x float> %3552, float 1.000000e+00, i32 2
  %3554 = insertelement <4 x float> %3553, float 1.000000e+00, i32 3
  %3555 = getelementptr inbounds float, float* %0, i64 9
  %3556 = load float, float* %3555, align 4
  %3557 = insertelement <4 x float> zeroinitializer, float %3556, i32 0
  %3558 = insertelement <4 x float> %3557, float 0.000000e+00, i32 1
  %3559 = insertelement <4 x float> %3558, float 0.000000e+00, i32 2
  %3560 = insertelement <4 x float> %3559, float 0.000000e+00, i32 3
  %3561 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3554, <4 x float> %3560, <4 x float> %3546)
  %3562 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3563 = getelementptr inbounds i8, i8* %3562, i64 12
  %3564 = bitcast i8* %3563 to float*
  %3565 = load float, float* %3564, align 4
  %3566 = insertelement <4 x float> zeroinitializer, float %3565, i32 0
  %3567 = insertelement <4 x float> %3566, float 0.000000e+00, i32 1
  %3568 = insertelement <4 x float> %3567, float 0.000000e+00, i32 2
  %3569 = insertelement <4 x float> %3568, float 0.000000e+00, i32 3
  %3570 = getelementptr inbounds float, float* %0, i64 13
  %3571 = load float, float* %3570, align 4
  %3572 = insertelement <4 x float> zeroinitializer, float %3571, i32 0
  %3573 = insertelement <4 x float> %3572, float 0.000000e+00, i32 1
  %3574 = insertelement <4 x float> %3573, float 0.000000e+00, i32 2
  %3575 = insertelement <4 x float> %3574, float 0.000000e+00, i32 3
  %3576 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3569, <4 x float> %3575, <4 x float> %3561)
  %3577 = extractelement <4 x float> %3576, i32 0
  %3578 = getelementptr inbounds float, float* %2, i64 1
  store float %3577, float* %3578, align 4
  %3579 = extractelement <4 x float> %3576, i32 1
  %3580 = getelementptr inbounds float, float* %2, i64 2
  store float %3579, float* %3580, align 4
  %3581 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3582 = bitcast i8* %3581 to float*
  %3583 = load float, float* %3582, align 4
  %3584 = insertelement <4 x float> zeroinitializer, float %3583, i32 0
  %3585 = insertelement <4 x float> %3584, float 0.000000e+00, i32 1
  %3586 = insertelement <4 x float> %3585, float 0.000000e+00, i32 2
  %3587 = insertelement <4 x float> %3586, float 0.000000e+00, i32 3
  %3588 = getelementptr inbounds float, float* %0, i64 2
  %3589 = load float, float* %3588, align 4
  %3590 = insertelement <4 x float> zeroinitializer, float %3589, i32 0
  %3591 = insertelement <4 x float> %3590, float 0.000000e+00, i32 1
  %3592 = insertelement <4 x float> %3591, float 0.000000e+00, i32 2
  %3593 = insertelement <4 x float> %3592, float 0.000000e+00, i32 3
  %3594 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3587, <4 x float> %3593, <4 x float> zeroinitializer)
  %3595 = extractelement <4 x float> %3594, i32 0
  %3596 = getelementptr inbounds float, float* %2, i64 2
  store float %3595, float* %3596, align 4
  %3597 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3598 = bitcast i8* %3597 to float*
  %3599 = load float, float* %3598, align 4
  %3600 = insertelement <4 x float> zeroinitializer, float %3599, i32 0
  %3601 = insertelement <4 x float> %3600, float 1.000000e+00, i32 1
  %3602 = insertelement <4 x float> %3601, float 1.000000e+00, i32 2
  %3603 = insertelement <4 x float> %3602, float 1.000000e+00, i32 3
  %3604 = getelementptr inbounds float, float* %0, i64 2
  %3605 = load float, float* %3604, align 4
  %3606 = insertelement <4 x float> zeroinitializer, float %3605, i32 0
  %3607 = insertelement <4 x float> %3606, float 0.000000e+00, i32 1
  %3608 = insertelement <4 x float> %3607, float 0.000000e+00, i32 2
  %3609 = insertelement <4 x float> %3608, float 0.000000e+00, i32 3
  %3610 = fmul <4 x float> %3603, %3609
  %3611 = fadd <4 x float> %3610, zeroinitializer
  %3612 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3613 = getelementptr inbounds i8, i8* %3612, i64 4
  %3614 = bitcast i8* %3613 to float*
  %3615 = load float, float* %3614, align 4
  %3616 = insertelement <4 x float> zeroinitializer, float %3615, i32 0
  %3617 = insertelement <4 x float> %3616, float 0.000000e+00, i32 1
  %3618 = insertelement <4 x float> %3617, float 0.000000e+00, i32 2
  %3619 = insertelement <4 x float> %3618, float 0.000000e+00, i32 3
  %3620 = getelementptr inbounds float, float* %0, i64 6
  %3621 = load float, float* %3620, align 4
  %3622 = insertelement <4 x float> zeroinitializer, float %3621, i32 0
  %3623 = insertelement <4 x float> %3622, float 0.000000e+00, i32 1
  %3624 = insertelement <4 x float> %3623, float 0.000000e+00, i32 2
  %3625 = insertelement <4 x float> %3624, float 0.000000e+00, i32 3
  %3626 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3619, <4 x float> %3625, <4 x float> %3611)
  %3627 = extractelement <4 x float> %3626, i32 0
  %3628 = getelementptr inbounds float, float* %2, i64 2
  store float %3627, float* %3628, align 4
  %3629 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3630 = bitcast i8* %3629 to float*
  %3631 = load float, float* %3630, align 4
  %3632 = insertelement <4 x float> zeroinitializer, float %3631, i32 0
  %3633 = insertelement <4 x float> %3632, float 1.000000e+00, i32 1
  %3634 = insertelement <4 x float> %3633, float 1.000000e+00, i32 2
  %3635 = insertelement <4 x float> %3634, float 1.000000e+00, i32 3
  %3636 = getelementptr inbounds float, float* %0, i64 2
  %3637 = load float, float* %3636, align 4
  %3638 = insertelement <4 x float> zeroinitializer, float %3637, i32 0
  %3639 = insertelement <4 x float> %3638, float 0.000000e+00, i32 1
  %3640 = insertelement <4 x float> %3639, float 0.000000e+00, i32 2
  %3641 = insertelement <4 x float> %3640, float 0.000000e+00, i32 3
  %3642 = fmul <4 x float> %3635, %3641
  %3643 = fadd <4 x float> %3642, zeroinitializer
  %3644 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3645 = getelementptr inbounds i8, i8* %3644, i64 4
  %3646 = bitcast i8* %3645 to float*
  %3647 = load float, float* %3646, align 4
  %3648 = insertelement <4 x float> zeroinitializer, float %3647, i32 0
  %3649 = insertelement <4 x float> %3648, float 1.000000e+00, i32 1
  %3650 = insertelement <4 x float> %3649, float 1.000000e+00, i32 2
  %3651 = insertelement <4 x float> %3650, float 1.000000e+00, i32 3
  %3652 = getelementptr inbounds float, float* %0, i64 6
  %3653 = load float, float* %3652, align 4
  %3654 = insertelement <4 x float> zeroinitializer, float %3653, i32 0
  %3655 = insertelement <4 x float> %3654, float 0.000000e+00, i32 1
  %3656 = insertelement <4 x float> %3655, float 0.000000e+00, i32 2
  %3657 = insertelement <4 x float> %3656, float 0.000000e+00, i32 3
  %3658 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3651, <4 x float> %3657, <4 x float> %3643)
  %3659 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3660 = getelementptr inbounds i8, i8* %3659, i64 8
  %3661 = bitcast i8* %3660 to float*
  %3662 = load float, float* %3661, align 4
  %3663 = insertelement <4 x float> zeroinitializer, float %3662, i32 0
  %3664 = insertelement <4 x float> %3663, float 0.000000e+00, i32 1
  %3665 = insertelement <4 x float> %3664, float 0.000000e+00, i32 2
  %3666 = insertelement <4 x float> %3665, float 0.000000e+00, i32 3
  %3667 = getelementptr inbounds float, float* %0, i64 10
  %3668 = load float, float* %3667, align 4
  %3669 = insertelement <4 x float> zeroinitializer, float %3668, i32 0
  %3670 = insertelement <4 x float> %3669, float 0.000000e+00, i32 1
  %3671 = insertelement <4 x float> %3670, float 0.000000e+00, i32 2
  %3672 = insertelement <4 x float> %3671, float 0.000000e+00, i32 3
  %3673 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3666, <4 x float> %3672, <4 x float> %3658)
  %3674 = extractelement <4 x float> %3673, i32 0
  %3675 = getelementptr inbounds float, float* %2, i64 2
  store float %3674, float* %3675, align 4
  %3676 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3677 = bitcast i8* %3676 to float*
  %3678 = load float, float* %3677, align 4
  %3679 = insertelement <4 x float> zeroinitializer, float %3678, i32 0
  %3680 = insertelement <4 x float> %3679, float 1.000000e+00, i32 1
  %3681 = insertelement <4 x float> %3680, float 1.000000e+00, i32 2
  %3682 = insertelement <4 x float> %3681, float 1.000000e+00, i32 3
  %3683 = getelementptr inbounds float, float* %0, i64 2
  %3684 = load float, float* %3683, align 4
  %3685 = insertelement <4 x float> zeroinitializer, float %3684, i32 0
  %3686 = insertelement <4 x float> %3685, float 0.000000e+00, i32 1
  %3687 = insertelement <4 x float> %3686, float 0.000000e+00, i32 2
  %3688 = insertelement <4 x float> %3687, float 0.000000e+00, i32 3
  %3689 = fmul <4 x float> %3682, %3688
  %3690 = fadd <4 x float> %3689, zeroinitializer
  %3691 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3692 = getelementptr inbounds i8, i8* %3691, i64 4
  %3693 = bitcast i8* %3692 to float*
  %3694 = load float, float* %3693, align 4
  %3695 = insertelement <4 x float> zeroinitializer, float %3694, i32 0
  %3696 = insertelement <4 x float> %3695, float 1.000000e+00, i32 1
  %3697 = insertelement <4 x float> %3696, float 1.000000e+00, i32 2
  %3698 = insertelement <4 x float> %3697, float 1.000000e+00, i32 3
  %3699 = getelementptr inbounds float, float* %0, i64 6
  %3700 = load float, float* %3699, align 4
  %3701 = insertelement <4 x float> zeroinitializer, float %3700, i32 0
  %3702 = insertelement <4 x float> %3701, float 0.000000e+00, i32 1
  %3703 = insertelement <4 x float> %3702, float 0.000000e+00, i32 2
  %3704 = insertelement <4 x float> %3703, float 0.000000e+00, i32 3
  %3705 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3698, <4 x float> %3704, <4 x float> %3690)
  %3706 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3707 = getelementptr inbounds i8, i8* %3706, i64 8
  %3708 = bitcast i8* %3707 to float*
  %3709 = load float, float* %3708, align 4
  %3710 = insertelement <4 x float> zeroinitializer, float %3709, i32 0
  %3711 = insertelement <4 x float> %3710, float 1.000000e+00, i32 1
  %3712 = insertelement <4 x float> %3711, float 1.000000e+00, i32 2
  %3713 = insertelement <4 x float> %3712, float 1.000000e+00, i32 3
  %3714 = getelementptr inbounds float, float* %0, i64 10
  %3715 = load float, float* %3714, align 4
  %3716 = insertelement <4 x float> zeroinitializer, float %3715, i32 0
  %3717 = insertelement <4 x float> %3716, float 0.000000e+00, i32 1
  %3718 = insertelement <4 x float> %3717, float 0.000000e+00, i32 2
  %3719 = insertelement <4 x float> %3718, float 0.000000e+00, i32 3
  %3720 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3713, <4 x float> %3719, <4 x float> %3705)
  %3721 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3722 = getelementptr inbounds i8, i8* %3721, i64 12
  %3723 = bitcast i8* %3722 to float*
  %3724 = load float, float* %3723, align 4
  %3725 = insertelement <4 x float> zeroinitializer, float %3724, i32 0
  %3726 = insertelement <4 x float> %3725, float 0.000000e+00, i32 1
  %3727 = insertelement <4 x float> %3726, float 0.000000e+00, i32 2
  %3728 = insertelement <4 x float> %3727, float 0.000000e+00, i32 3
  %3729 = getelementptr inbounds float, float* %0, i64 14
  %3730 = load float, float* %3729, align 4
  %3731 = insertelement <4 x float> zeroinitializer, float %3730, i32 0
  %3732 = insertelement <4 x float> %3731, float 0.000000e+00, i32 1
  %3733 = insertelement <4 x float> %3732, float 0.000000e+00, i32 2
  %3734 = insertelement <4 x float> %3733, float 0.000000e+00, i32 3
  %3735 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3728, <4 x float> %3734, <4 x float> %3720)
  %3736 = extractelement <4 x float> %3735, i32 0
  %3737 = getelementptr inbounds float, float* %2, i64 2
  store float %3736, float* %3737, align 4
  %3738 = extractelement <4 x float> %3735, i32 1
  %3739 = getelementptr inbounds float, float* %2, i64 3
  store float %3738, float* %3739, align 4
  %3740 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3741 = bitcast i8* %3740 to float*
  %3742 = load float, float* %3741, align 4
  %3743 = insertelement <4 x float> zeroinitializer, float %3742, i32 0
  %3744 = insertelement <4 x float> %3743, float 0.000000e+00, i32 1
  %3745 = insertelement <4 x float> %3744, float 0.000000e+00, i32 2
  %3746 = insertelement <4 x float> %3745, float 0.000000e+00, i32 3
  %3747 = getelementptr inbounds float, float* %0, i64 3
  %3748 = load float, float* %3747, align 4
  %3749 = insertelement <4 x float> zeroinitializer, float %3748, i32 0
  %3750 = insertelement <4 x float> %3749, float 0.000000e+00, i32 1
  %3751 = insertelement <4 x float> %3750, float 0.000000e+00, i32 2
  %3752 = insertelement <4 x float> %3751, float 0.000000e+00, i32 3
  %3753 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3746, <4 x float> %3752, <4 x float> zeroinitializer)
  %3754 = extractelement <4 x float> %3753, i32 0
  %3755 = getelementptr inbounds float, float* %2, i64 3
  store float %3754, float* %3755, align 4
  %3756 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3757 = bitcast i8* %3756 to float*
  %3758 = load float, float* %3757, align 4
  %3759 = insertelement <4 x float> zeroinitializer, float %3758, i32 0
  %3760 = insertelement <4 x float> %3759, float 1.000000e+00, i32 1
  %3761 = insertelement <4 x float> %3760, float 1.000000e+00, i32 2
  %3762 = insertelement <4 x float> %3761, float 1.000000e+00, i32 3
  %3763 = getelementptr inbounds float, float* %0, i64 3
  %3764 = load float, float* %3763, align 4
  %3765 = insertelement <4 x float> zeroinitializer, float %3764, i32 0
  %3766 = insertelement <4 x float> %3765, float 0.000000e+00, i32 1
  %3767 = insertelement <4 x float> %3766, float 0.000000e+00, i32 2
  %3768 = insertelement <4 x float> %3767, float 0.000000e+00, i32 3
  %3769 = fmul <4 x float> %3762, %3768
  %3770 = fadd <4 x float> %3769, zeroinitializer
  %3771 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3772 = getelementptr inbounds i8, i8* %3771, i64 4
  %3773 = bitcast i8* %3772 to float*
  %3774 = load float, float* %3773, align 4
  %3775 = insertelement <4 x float> zeroinitializer, float %3774, i32 0
  %3776 = insertelement <4 x float> %3775, float 0.000000e+00, i32 1
  %3777 = insertelement <4 x float> %3776, float 0.000000e+00, i32 2
  %3778 = insertelement <4 x float> %3777, float 0.000000e+00, i32 3
  %3779 = getelementptr inbounds float, float* %0, i64 7
  %3780 = load float, float* %3779, align 4
  %3781 = insertelement <4 x float> zeroinitializer, float %3780, i32 0
  %3782 = insertelement <4 x float> %3781, float 0.000000e+00, i32 1
  %3783 = insertelement <4 x float> %3782, float 0.000000e+00, i32 2
  %3784 = insertelement <4 x float> %3783, float 0.000000e+00, i32 3
  %3785 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3778, <4 x float> %3784, <4 x float> %3770)
  %3786 = extractelement <4 x float> %3785, i32 0
  %3787 = getelementptr inbounds float, float* %2, i64 3
  store float %3786, float* %3787, align 4
  %3788 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3789 = bitcast i8* %3788 to float*
  %3790 = load float, float* %3789, align 4
  %3791 = insertelement <4 x float> zeroinitializer, float %3790, i32 0
  %3792 = insertelement <4 x float> %3791, float 1.000000e+00, i32 1
  %3793 = insertelement <4 x float> %3792, float 1.000000e+00, i32 2
  %3794 = insertelement <4 x float> %3793, float 1.000000e+00, i32 3
  %3795 = getelementptr inbounds float, float* %0, i64 3
  %3796 = load float, float* %3795, align 4
  %3797 = insertelement <4 x float> zeroinitializer, float %3796, i32 0
  %3798 = insertelement <4 x float> %3797, float 0.000000e+00, i32 1
  %3799 = insertelement <4 x float> %3798, float 0.000000e+00, i32 2
  %3800 = insertelement <4 x float> %3799, float 0.000000e+00, i32 3
  %3801 = fmul <4 x float> %3794, %3800
  %3802 = fadd <4 x float> %3801, zeroinitializer
  %3803 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3804 = getelementptr inbounds i8, i8* %3803, i64 4
  %3805 = bitcast i8* %3804 to float*
  %3806 = load float, float* %3805, align 4
  %3807 = insertelement <4 x float> zeroinitializer, float %3806, i32 0
  %3808 = insertelement <4 x float> %3807, float 1.000000e+00, i32 1
  %3809 = insertelement <4 x float> %3808, float 1.000000e+00, i32 2
  %3810 = insertelement <4 x float> %3809, float 1.000000e+00, i32 3
  %3811 = getelementptr inbounds float, float* %0, i64 7
  %3812 = load float, float* %3811, align 4
  %3813 = insertelement <4 x float> zeroinitializer, float %3812, i32 0
  %3814 = insertelement <4 x float> %3813, float 0.000000e+00, i32 1
  %3815 = insertelement <4 x float> %3814, float 0.000000e+00, i32 2
  %3816 = insertelement <4 x float> %3815, float 0.000000e+00, i32 3
  %3817 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3810, <4 x float> %3816, <4 x float> %3802)
  %3818 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3819 = getelementptr inbounds i8, i8* %3818, i64 8
  %3820 = bitcast i8* %3819 to float*
  %3821 = load float, float* %3820, align 4
  %3822 = insertelement <4 x float> zeroinitializer, float %3821, i32 0
  %3823 = insertelement <4 x float> %3822, float 0.000000e+00, i32 1
  %3824 = insertelement <4 x float> %3823, float 0.000000e+00, i32 2
  %3825 = insertelement <4 x float> %3824, float 0.000000e+00, i32 3
  %3826 = getelementptr inbounds float, float* %0, i64 11
  %3827 = load float, float* %3826, align 4
  %3828 = insertelement <4 x float> zeroinitializer, float %3827, i32 0
  %3829 = insertelement <4 x float> %3828, float 0.000000e+00, i32 1
  %3830 = insertelement <4 x float> %3829, float 0.000000e+00, i32 2
  %3831 = insertelement <4 x float> %3830, float 0.000000e+00, i32 3
  %3832 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3825, <4 x float> %3831, <4 x float> %3817)
  %3833 = extractelement <4 x float> %3832, i32 0
  %3834 = getelementptr inbounds float, float* %2, i64 3
  store float %3833, float* %3834, align 4
  %3835 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3836 = bitcast i8* %3835 to float*
  %3837 = load float, float* %3836, align 4
  %3838 = insertelement <4 x float> zeroinitializer, float %3837, i32 0
  %3839 = insertelement <4 x float> %3838, float 1.000000e+00, i32 1
  %3840 = insertelement <4 x float> %3839, float 1.000000e+00, i32 2
  %3841 = insertelement <4 x float> %3840, float 1.000000e+00, i32 3
  %3842 = getelementptr inbounds float, float* %0, i64 3
  %3843 = load float, float* %3842, align 4
  %3844 = insertelement <4 x float> zeroinitializer, float %3843, i32 0
  %3845 = insertelement <4 x float> %3844, float 0.000000e+00, i32 1
  %3846 = insertelement <4 x float> %3845, float 0.000000e+00, i32 2
  %3847 = insertelement <4 x float> %3846, float 0.000000e+00, i32 3
  %3848 = fmul <4 x float> %3841, %3847
  %3849 = fadd <4 x float> %3848, zeroinitializer
  %3850 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3851 = getelementptr inbounds i8, i8* %3850, i64 4
  %3852 = bitcast i8* %3851 to float*
  %3853 = load float, float* %3852, align 4
  %3854 = insertelement <4 x float> zeroinitializer, float %3853, i32 0
  %3855 = insertelement <4 x float> %3854, float 1.000000e+00, i32 1
  %3856 = insertelement <4 x float> %3855, float 1.000000e+00, i32 2
  %3857 = insertelement <4 x float> %3856, float 1.000000e+00, i32 3
  %3858 = getelementptr inbounds float, float* %0, i64 7
  %3859 = load float, float* %3858, align 4
  %3860 = insertelement <4 x float> zeroinitializer, float %3859, i32 0
  %3861 = insertelement <4 x float> %3860, float 0.000000e+00, i32 1
  %3862 = insertelement <4 x float> %3861, float 0.000000e+00, i32 2
  %3863 = insertelement <4 x float> %3862, float 0.000000e+00, i32 3
  %3864 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3857, <4 x float> %3863, <4 x float> %3849)
  %3865 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3866 = getelementptr inbounds i8, i8* %3865, i64 8
  %3867 = bitcast i8* %3866 to float*
  %3868 = load float, float* %3867, align 4
  %3869 = insertelement <4 x float> zeroinitializer, float %3868, i32 0
  %3870 = insertelement <4 x float> %3869, float 1.000000e+00, i32 1
  %3871 = insertelement <4 x float> %3870, float 1.000000e+00, i32 2
  %3872 = insertelement <4 x float> %3871, float 1.000000e+00, i32 3
  %3873 = getelementptr inbounds float, float* %0, i64 11
  %3874 = load float, float* %3873, align 4
  %3875 = insertelement <4 x float> zeroinitializer, float %3874, i32 0
  %3876 = insertelement <4 x float> %3875, float 0.000000e+00, i32 1
  %3877 = insertelement <4 x float> %3876, float 0.000000e+00, i32 2
  %3878 = insertelement <4 x float> %3877, float 0.000000e+00, i32 3
  %3879 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3872, <4 x float> %3878, <4 x float> %3864)
  %3880 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3881 = getelementptr inbounds i8, i8* %3880, i64 12
  %3882 = bitcast i8* %3881 to float*
  %3883 = load float, float* %3882, align 4
  %3884 = insertelement <4 x float> zeroinitializer, float %3883, i32 0
  %3885 = insertelement <4 x float> %3884, float 0.000000e+00, i32 1
  %3886 = insertelement <4 x float> %3885, float 0.000000e+00, i32 2
  %3887 = insertelement <4 x float> %3886, float 0.000000e+00, i32 3
  %3888 = getelementptr inbounds float, float* %0, i64 15
  %3889 = load float, float* %3888, align 4
  %3890 = insertelement <4 x float> zeroinitializer, float %3889, i32 0
  %3891 = insertelement <4 x float> %3890, float 0.000000e+00, i32 1
  %3892 = insertelement <4 x float> %3891, float 0.000000e+00, i32 2
  %3893 = insertelement <4 x float> %3892, float 0.000000e+00, i32 3
  %3894 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3887, <4 x float> %3893, <4 x float> %3879)
  %3895 = extractelement <4 x float> %3894, i32 0
  %3896 = getelementptr inbounds float, float* %2, i64 3
  store float %3895, float* %3896, align 4
  %3897 = getelementptr inbounds float, float* %2, i64 4
  store float 0.000000e+00, float* %3897, align 4
  %3898 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3899 = getelementptr inbounds i8, i8* %3898, i64 16
  %3900 = bitcast i8* %3899 to float*
  %3901 = load float, float* %3900, align 4
  %3902 = insertelement <4 x float> zeroinitializer, float %3901, i32 0
  %3903 = insertelement <4 x float> %3902, float 0.000000e+00, i32 1
  %3904 = insertelement <4 x float> %3903, float 0.000000e+00, i32 2
  %3905 = insertelement <4 x float> %3904, float 0.000000e+00, i32 3
  %3906 = load float, float* %0, align 4
  %3907 = insertelement <4 x float> zeroinitializer, float %3906, i32 0
  %3908 = insertelement <4 x float> %3907, float 0.000000e+00, i32 1
  %3909 = insertelement <4 x float> %3908, float 0.000000e+00, i32 2
  %3910 = insertelement <4 x float> %3909, float 0.000000e+00, i32 3
  %3911 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3905, <4 x float> %3910, <4 x float> zeroinitializer)
  %3912 = extractelement <4 x float> %3911, i32 0
  %3913 = getelementptr inbounds float, float* %2, i64 4
  store float %3912, float* %3913, align 4
  %3914 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3915 = getelementptr inbounds i8, i8* %3914, i64 16
  %3916 = bitcast i8* %3915 to float*
  %3917 = load float, float* %3916, align 4
  %3918 = insertelement <4 x float> zeroinitializer, float %3917, i32 0
  %3919 = insertelement <4 x float> %3918, float 1.000000e+00, i32 1
  %3920 = insertelement <4 x float> %3919, float 1.000000e+00, i32 2
  %3921 = insertelement <4 x float> %3920, float 1.000000e+00, i32 3
  %3922 = load float, float* %0, align 4
  %3923 = insertelement <4 x float> zeroinitializer, float %3922, i32 0
  %3924 = insertelement <4 x float> %3923, float 0.000000e+00, i32 1
  %3925 = insertelement <4 x float> %3924, float 0.000000e+00, i32 2
  %3926 = insertelement <4 x float> %3925, float 0.000000e+00, i32 3
  %3927 = fmul <4 x float> %3921, %3926
  %3928 = fadd <4 x float> %3927, zeroinitializer
  %3929 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3930 = getelementptr inbounds i8, i8* %3929, i64 20
  %3931 = bitcast i8* %3930 to float*
  %3932 = load float, float* %3931, align 4
  %3933 = insertelement <4 x float> zeroinitializer, float %3932, i32 0
  %3934 = insertelement <4 x float> %3933, float 0.000000e+00, i32 1
  %3935 = insertelement <4 x float> %3934, float 0.000000e+00, i32 2
  %3936 = insertelement <4 x float> %3935, float 0.000000e+00, i32 3
  %3937 = getelementptr inbounds float, float* %0, i64 4
  %3938 = load float, float* %3937, align 4
  %3939 = insertelement <4 x float> zeroinitializer, float %3938, i32 0
  %3940 = insertelement <4 x float> %3939, float 0.000000e+00, i32 1
  %3941 = insertelement <4 x float> %3940, float 0.000000e+00, i32 2
  %3942 = insertelement <4 x float> %3941, float 0.000000e+00, i32 3
  %3943 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3936, <4 x float> %3942, <4 x float> %3928)
  %3944 = extractelement <4 x float> %3943, i32 0
  %3945 = getelementptr inbounds float, float* %2, i64 4
  store float %3944, float* %3945, align 4
  %3946 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3947 = getelementptr inbounds i8, i8* %3946, i64 16
  %3948 = bitcast i8* %3947 to float*
  %3949 = load float, float* %3948, align 4
  %3950 = insertelement <4 x float> zeroinitializer, float %3949, i32 0
  %3951 = insertelement <4 x float> %3950, float 1.000000e+00, i32 1
  %3952 = insertelement <4 x float> %3951, float 1.000000e+00, i32 2
  %3953 = insertelement <4 x float> %3952, float 1.000000e+00, i32 3
  %3954 = load float, float* %0, align 4
  %3955 = insertelement <4 x float> zeroinitializer, float %3954, i32 0
  %3956 = insertelement <4 x float> %3955, float 0.000000e+00, i32 1
  %3957 = insertelement <4 x float> %3956, float 0.000000e+00, i32 2
  %3958 = insertelement <4 x float> %3957, float 0.000000e+00, i32 3
  %3959 = fmul <4 x float> %3953, %3958
  %3960 = fadd <4 x float> %3959, zeroinitializer
  %3961 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3962 = getelementptr inbounds i8, i8* %3961, i64 20
  %3963 = bitcast i8* %3962 to float*
  %3964 = load float, float* %3963, align 4
  %3965 = insertelement <4 x float> zeroinitializer, float %3964, i32 0
  %3966 = insertelement <4 x float> %3965, float 1.000000e+00, i32 1
  %3967 = insertelement <4 x float> %3966, float 1.000000e+00, i32 2
  %3968 = insertelement <4 x float> %3967, float 1.000000e+00, i32 3
  %3969 = getelementptr inbounds float, float* %0, i64 4
  %3970 = load float, float* %3969, align 4
  %3971 = insertelement <4 x float> zeroinitializer, float %3970, i32 0
  %3972 = insertelement <4 x float> %3971, float 0.000000e+00, i32 1
  %3973 = insertelement <4 x float> %3972, float 0.000000e+00, i32 2
  %3974 = insertelement <4 x float> %3973, float 0.000000e+00, i32 3
  %3975 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3968, <4 x float> %3974, <4 x float> %3960)
  %3976 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3977 = getelementptr inbounds i8, i8* %3976, i64 24
  %3978 = bitcast i8* %3977 to float*
  %3979 = load float, float* %3978, align 4
  %3980 = insertelement <4 x float> zeroinitializer, float %3979, i32 0
  %3981 = insertelement <4 x float> %3980, float 0.000000e+00, i32 1
  %3982 = insertelement <4 x float> %3981, float 0.000000e+00, i32 2
  %3983 = insertelement <4 x float> %3982, float 0.000000e+00, i32 3
  %3984 = getelementptr inbounds float, float* %0, i64 8
  %3985 = load float, float* %3984, align 4
  %3986 = insertelement <4 x float> zeroinitializer, float %3985, i32 0
  %3987 = insertelement <4 x float> %3986, float 0.000000e+00, i32 1
  %3988 = insertelement <4 x float> %3987, float 0.000000e+00, i32 2
  %3989 = insertelement <4 x float> %3988, float 0.000000e+00, i32 3
  %3990 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3983, <4 x float> %3989, <4 x float> %3975)
  %3991 = extractelement <4 x float> %3990, i32 0
  %3992 = getelementptr inbounds float, float* %2, i64 4
  store float %3991, float* %3992, align 4
  %3993 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3994 = getelementptr inbounds i8, i8* %3993, i64 16
  %3995 = bitcast i8* %3994 to float*
  %3996 = load float, float* %3995, align 4
  %3997 = insertelement <4 x float> zeroinitializer, float %3996, i32 0
  %3998 = insertelement <4 x float> %3997, float 1.000000e+00, i32 1
  %3999 = insertelement <4 x float> %3998, float 1.000000e+00, i32 2
  %4000 = insertelement <4 x float> %3999, float 1.000000e+00, i32 3
  %4001 = load float, float* %0, align 4
  %4002 = insertelement <4 x float> zeroinitializer, float %4001, i32 0
  %4003 = insertelement <4 x float> %4002, float 0.000000e+00, i32 1
  %4004 = insertelement <4 x float> %4003, float 0.000000e+00, i32 2
  %4005 = insertelement <4 x float> %4004, float 0.000000e+00, i32 3
  %4006 = fmul <4 x float> %4000, %4005
  %4007 = fadd <4 x float> %4006, zeroinitializer
  %4008 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4009 = getelementptr inbounds i8, i8* %4008, i64 20
  %4010 = bitcast i8* %4009 to float*
  %4011 = load float, float* %4010, align 4
  %4012 = insertelement <4 x float> zeroinitializer, float %4011, i32 0
  %4013 = insertelement <4 x float> %4012, float 1.000000e+00, i32 1
  %4014 = insertelement <4 x float> %4013, float 1.000000e+00, i32 2
  %4015 = insertelement <4 x float> %4014, float 1.000000e+00, i32 3
  %4016 = getelementptr inbounds float, float* %0, i64 4
  %4017 = load float, float* %4016, align 4
  %4018 = insertelement <4 x float> zeroinitializer, float %4017, i32 0
  %4019 = insertelement <4 x float> %4018, float 0.000000e+00, i32 1
  %4020 = insertelement <4 x float> %4019, float 0.000000e+00, i32 2
  %4021 = insertelement <4 x float> %4020, float 0.000000e+00, i32 3
  %4022 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4015, <4 x float> %4021, <4 x float> %4007)
  %4023 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4024 = getelementptr inbounds i8, i8* %4023, i64 24
  %4025 = bitcast i8* %4024 to float*
  %4026 = load float, float* %4025, align 4
  %4027 = insertelement <4 x float> zeroinitializer, float %4026, i32 0
  %4028 = insertelement <4 x float> %4027, float 1.000000e+00, i32 1
  %4029 = insertelement <4 x float> %4028, float 1.000000e+00, i32 2
  %4030 = insertelement <4 x float> %4029, float 1.000000e+00, i32 3
  %4031 = getelementptr inbounds float, float* %0, i64 8
  %4032 = load float, float* %4031, align 4
  %4033 = insertelement <4 x float> zeroinitializer, float %4032, i32 0
  %4034 = insertelement <4 x float> %4033, float 0.000000e+00, i32 1
  %4035 = insertelement <4 x float> %4034, float 0.000000e+00, i32 2
  %4036 = insertelement <4 x float> %4035, float 0.000000e+00, i32 3
  %4037 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4030, <4 x float> %4036, <4 x float> %4022)
  %4038 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4039 = getelementptr inbounds i8, i8* %4038, i64 28
  %4040 = bitcast i8* %4039 to float*
  %4041 = load float, float* %4040, align 4
  %4042 = insertelement <4 x float> zeroinitializer, float %4041, i32 0
  %4043 = insertelement <4 x float> %4042, float 0.000000e+00, i32 1
  %4044 = insertelement <4 x float> %4043, float 0.000000e+00, i32 2
  %4045 = insertelement <4 x float> %4044, float 0.000000e+00, i32 3
  %4046 = getelementptr inbounds float, float* %0, i64 12
  %4047 = load float, float* %4046, align 4
  %4048 = insertelement <4 x float> zeroinitializer, float %4047, i32 0
  %4049 = insertelement <4 x float> %4048, float 0.000000e+00, i32 1
  %4050 = insertelement <4 x float> %4049, float 0.000000e+00, i32 2
  %4051 = insertelement <4 x float> %4050, float 0.000000e+00, i32 3
  %4052 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4045, <4 x float> %4051, <4 x float> %4037)
  %4053 = extractelement <4 x float> %4052, i32 0
  %4054 = getelementptr inbounds float, float* %2, i64 4
  store float %4053, float* %4054, align 4
  %4055 = extractelement <4 x float> %4052, i32 1
  %4056 = getelementptr inbounds float, float* %2, i64 5
  store float %4055, float* %4056, align 4
  %4057 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4058 = getelementptr inbounds i8, i8* %4057, i64 16
  %4059 = bitcast i8* %4058 to float*
  %4060 = load float, float* %4059, align 4
  %4061 = insertelement <4 x float> zeroinitializer, float %4060, i32 0
  %4062 = insertelement <4 x float> %4061, float 0.000000e+00, i32 1
  %4063 = insertelement <4 x float> %4062, float 0.000000e+00, i32 2
  %4064 = insertelement <4 x float> %4063, float 0.000000e+00, i32 3
  %4065 = getelementptr inbounds float, float* %0, i64 1
  %4066 = load float, float* %4065, align 4
  %4067 = insertelement <4 x float> zeroinitializer, float %4066, i32 0
  %4068 = insertelement <4 x float> %4067, float 0.000000e+00, i32 1
  %4069 = insertelement <4 x float> %4068, float 0.000000e+00, i32 2
  %4070 = insertelement <4 x float> %4069, float 0.000000e+00, i32 3
  %4071 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4064, <4 x float> %4070, <4 x float> zeroinitializer)
  %4072 = extractelement <4 x float> %4071, i32 0
  %4073 = getelementptr inbounds float, float* %2, i64 5
  store float %4072, float* %4073, align 4
  %4074 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4075 = getelementptr inbounds i8, i8* %4074, i64 16
  %4076 = bitcast i8* %4075 to float*
  %4077 = load float, float* %4076, align 4
  %4078 = insertelement <4 x float> zeroinitializer, float %4077, i32 0
  %4079 = insertelement <4 x float> %4078, float 1.000000e+00, i32 1
  %4080 = insertelement <4 x float> %4079, float 1.000000e+00, i32 2
  %4081 = insertelement <4 x float> %4080, float 1.000000e+00, i32 3
  %4082 = getelementptr inbounds float, float* %0, i64 1
  %4083 = load float, float* %4082, align 4
  %4084 = insertelement <4 x float> zeroinitializer, float %4083, i32 0
  %4085 = insertelement <4 x float> %4084, float 0.000000e+00, i32 1
  %4086 = insertelement <4 x float> %4085, float 0.000000e+00, i32 2
  %4087 = insertelement <4 x float> %4086, float 0.000000e+00, i32 3
  %4088 = fmul <4 x float> %4081, %4087
  %4089 = fadd <4 x float> %4088, zeroinitializer
  %4090 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4091 = getelementptr inbounds i8, i8* %4090, i64 20
  %4092 = bitcast i8* %4091 to float*
  %4093 = load float, float* %4092, align 4
  %4094 = insertelement <4 x float> zeroinitializer, float %4093, i32 0
  %4095 = insertelement <4 x float> %4094, float 0.000000e+00, i32 1
  %4096 = insertelement <4 x float> %4095, float 0.000000e+00, i32 2
  %4097 = insertelement <4 x float> %4096, float 0.000000e+00, i32 3
  %4098 = getelementptr inbounds float, float* %0, i64 5
  %4099 = load float, float* %4098, align 4
  %4100 = insertelement <4 x float> zeroinitializer, float %4099, i32 0
  %4101 = insertelement <4 x float> %4100, float 0.000000e+00, i32 1
  %4102 = insertelement <4 x float> %4101, float 0.000000e+00, i32 2
  %4103 = insertelement <4 x float> %4102, float 0.000000e+00, i32 3
  %4104 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4097, <4 x float> %4103, <4 x float> %4089)
  %4105 = extractelement <4 x float> %4104, i32 0
  %4106 = getelementptr inbounds float, float* %2, i64 5
  store float %4105, float* %4106, align 4
  %4107 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4108 = getelementptr inbounds i8, i8* %4107, i64 16
  %4109 = bitcast i8* %4108 to float*
  %4110 = load float, float* %4109, align 4
  %4111 = insertelement <4 x float> zeroinitializer, float %4110, i32 0
  %4112 = insertelement <4 x float> %4111, float 1.000000e+00, i32 1
  %4113 = insertelement <4 x float> %4112, float 1.000000e+00, i32 2
  %4114 = insertelement <4 x float> %4113, float 1.000000e+00, i32 3
  %4115 = getelementptr inbounds float, float* %0, i64 1
  %4116 = load float, float* %4115, align 4
  %4117 = insertelement <4 x float> zeroinitializer, float %4116, i32 0
  %4118 = insertelement <4 x float> %4117, float 0.000000e+00, i32 1
  %4119 = insertelement <4 x float> %4118, float 0.000000e+00, i32 2
  %4120 = insertelement <4 x float> %4119, float 0.000000e+00, i32 3
  %4121 = fmul <4 x float> %4114, %4120
  %4122 = fadd <4 x float> %4121, zeroinitializer
  %4123 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4124 = getelementptr inbounds i8, i8* %4123, i64 20
  %4125 = bitcast i8* %4124 to float*
  %4126 = load float, float* %4125, align 4
  %4127 = insertelement <4 x float> zeroinitializer, float %4126, i32 0
  %4128 = insertelement <4 x float> %4127, float 1.000000e+00, i32 1
  %4129 = insertelement <4 x float> %4128, float 1.000000e+00, i32 2
  %4130 = insertelement <4 x float> %4129, float 1.000000e+00, i32 3
  %4131 = getelementptr inbounds float, float* %0, i64 5
  %4132 = load float, float* %4131, align 4
  %4133 = insertelement <4 x float> zeroinitializer, float %4132, i32 0
  %4134 = insertelement <4 x float> %4133, float 0.000000e+00, i32 1
  %4135 = insertelement <4 x float> %4134, float 0.000000e+00, i32 2
  %4136 = insertelement <4 x float> %4135, float 0.000000e+00, i32 3
  %4137 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4130, <4 x float> %4136, <4 x float> %4122)
  %4138 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4139 = getelementptr inbounds i8, i8* %4138, i64 24
  %4140 = bitcast i8* %4139 to float*
  %4141 = load float, float* %4140, align 4
  %4142 = insertelement <4 x float> zeroinitializer, float %4141, i32 0
  %4143 = insertelement <4 x float> %4142, float 0.000000e+00, i32 1
  %4144 = insertelement <4 x float> %4143, float 0.000000e+00, i32 2
  %4145 = insertelement <4 x float> %4144, float 0.000000e+00, i32 3
  %4146 = getelementptr inbounds float, float* %0, i64 9
  %4147 = load float, float* %4146, align 4
  %4148 = insertelement <4 x float> zeroinitializer, float %4147, i32 0
  %4149 = insertelement <4 x float> %4148, float 0.000000e+00, i32 1
  %4150 = insertelement <4 x float> %4149, float 0.000000e+00, i32 2
  %4151 = insertelement <4 x float> %4150, float 0.000000e+00, i32 3
  %4152 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4145, <4 x float> %4151, <4 x float> %4137)
  %4153 = extractelement <4 x float> %4152, i32 0
  %4154 = getelementptr inbounds float, float* %2, i64 5
  store float %4153, float* %4154, align 4
  %4155 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4156 = getelementptr inbounds i8, i8* %4155, i64 16
  %4157 = bitcast i8* %4156 to float*
  %4158 = load float, float* %4157, align 4
  %4159 = insertelement <4 x float> zeroinitializer, float %4158, i32 0
  %4160 = insertelement <4 x float> %4159, float 1.000000e+00, i32 1
  %4161 = insertelement <4 x float> %4160, float 1.000000e+00, i32 2
  %4162 = insertelement <4 x float> %4161, float 1.000000e+00, i32 3
  %4163 = getelementptr inbounds float, float* %0, i64 1
  %4164 = load float, float* %4163, align 4
  %4165 = insertelement <4 x float> zeroinitializer, float %4164, i32 0
  %4166 = insertelement <4 x float> %4165, float 0.000000e+00, i32 1
  %4167 = insertelement <4 x float> %4166, float 0.000000e+00, i32 2
  %4168 = insertelement <4 x float> %4167, float 0.000000e+00, i32 3
  %4169 = fmul <4 x float> %4162, %4168
  %4170 = fadd <4 x float> %4169, zeroinitializer
  %4171 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4172 = getelementptr inbounds i8, i8* %4171, i64 20
  %4173 = bitcast i8* %4172 to float*
  %4174 = load float, float* %4173, align 4
  %4175 = insertelement <4 x float> zeroinitializer, float %4174, i32 0
  %4176 = insertelement <4 x float> %4175, float 1.000000e+00, i32 1
  %4177 = insertelement <4 x float> %4176, float 1.000000e+00, i32 2
  %4178 = insertelement <4 x float> %4177, float 1.000000e+00, i32 3
  %4179 = getelementptr inbounds float, float* %0, i64 5
  %4180 = load float, float* %4179, align 4
  %4181 = insertelement <4 x float> zeroinitializer, float %4180, i32 0
  %4182 = insertelement <4 x float> %4181, float 0.000000e+00, i32 1
  %4183 = insertelement <4 x float> %4182, float 0.000000e+00, i32 2
  %4184 = insertelement <4 x float> %4183, float 0.000000e+00, i32 3
  %4185 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4178, <4 x float> %4184, <4 x float> %4170)
  %4186 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4187 = getelementptr inbounds i8, i8* %4186, i64 24
  %4188 = bitcast i8* %4187 to float*
  %4189 = load float, float* %4188, align 4
  %4190 = insertelement <4 x float> zeroinitializer, float %4189, i32 0
  %4191 = insertelement <4 x float> %4190, float 1.000000e+00, i32 1
  %4192 = insertelement <4 x float> %4191, float 1.000000e+00, i32 2
  %4193 = insertelement <4 x float> %4192, float 1.000000e+00, i32 3
  %4194 = getelementptr inbounds float, float* %0, i64 9
  %4195 = load float, float* %4194, align 4
  %4196 = insertelement <4 x float> zeroinitializer, float %4195, i32 0
  %4197 = insertelement <4 x float> %4196, float 0.000000e+00, i32 1
  %4198 = insertelement <4 x float> %4197, float 0.000000e+00, i32 2
  %4199 = insertelement <4 x float> %4198, float 0.000000e+00, i32 3
  %4200 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4193, <4 x float> %4199, <4 x float> %4185)
  %4201 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4202 = getelementptr inbounds i8, i8* %4201, i64 28
  %4203 = bitcast i8* %4202 to float*
  %4204 = load float, float* %4203, align 4
  %4205 = insertelement <4 x float> zeroinitializer, float %4204, i32 0
  %4206 = insertelement <4 x float> %4205, float 0.000000e+00, i32 1
  %4207 = insertelement <4 x float> %4206, float 0.000000e+00, i32 2
  %4208 = insertelement <4 x float> %4207, float 0.000000e+00, i32 3
  %4209 = getelementptr inbounds float, float* %0, i64 13
  %4210 = load float, float* %4209, align 4
  %4211 = insertelement <4 x float> zeroinitializer, float %4210, i32 0
  %4212 = insertelement <4 x float> %4211, float 0.000000e+00, i32 1
  %4213 = insertelement <4 x float> %4212, float 0.000000e+00, i32 2
  %4214 = insertelement <4 x float> %4213, float 0.000000e+00, i32 3
  %4215 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4208, <4 x float> %4214, <4 x float> %4200)
  %4216 = extractelement <4 x float> %4215, i32 0
  %4217 = getelementptr inbounds float, float* %2, i64 5
  store float %4216, float* %4217, align 4
  %4218 = extractelement <4 x float> %4215, i32 1
  %4219 = getelementptr inbounds float, float* %2, i64 6
  store float %4218, float* %4219, align 4
  %4220 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4221 = getelementptr inbounds i8, i8* %4220, i64 16
  %4222 = bitcast i8* %4221 to float*
  %4223 = load float, float* %4222, align 4
  %4224 = insertelement <4 x float> zeroinitializer, float %4223, i32 0
  %4225 = insertelement <4 x float> %4224, float 0.000000e+00, i32 1
  %4226 = insertelement <4 x float> %4225, float 0.000000e+00, i32 2
  %4227 = insertelement <4 x float> %4226, float 0.000000e+00, i32 3
  %4228 = getelementptr inbounds float, float* %0, i64 2
  %4229 = load float, float* %4228, align 4
  %4230 = insertelement <4 x float> zeroinitializer, float %4229, i32 0
  %4231 = insertelement <4 x float> %4230, float 0.000000e+00, i32 1
  %4232 = insertelement <4 x float> %4231, float 0.000000e+00, i32 2
  %4233 = insertelement <4 x float> %4232, float 0.000000e+00, i32 3
  %4234 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4227, <4 x float> %4233, <4 x float> zeroinitializer)
  %4235 = extractelement <4 x float> %4234, i32 0
  %4236 = getelementptr inbounds float, float* %2, i64 6
  store float %4235, float* %4236, align 4
  %4237 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4238 = getelementptr inbounds i8, i8* %4237, i64 16
  %4239 = bitcast i8* %4238 to float*
  %4240 = load float, float* %4239, align 4
  %4241 = insertelement <4 x float> zeroinitializer, float %4240, i32 0
  %4242 = insertelement <4 x float> %4241, float 1.000000e+00, i32 1
  %4243 = insertelement <4 x float> %4242, float 1.000000e+00, i32 2
  %4244 = insertelement <4 x float> %4243, float 1.000000e+00, i32 3
  %4245 = getelementptr inbounds float, float* %0, i64 2
  %4246 = load float, float* %4245, align 4
  %4247 = insertelement <4 x float> zeroinitializer, float %4246, i32 0
  %4248 = insertelement <4 x float> %4247, float 0.000000e+00, i32 1
  %4249 = insertelement <4 x float> %4248, float 0.000000e+00, i32 2
  %4250 = insertelement <4 x float> %4249, float 0.000000e+00, i32 3
  %4251 = fmul <4 x float> %4244, %4250
  %4252 = fadd <4 x float> %4251, zeroinitializer
  %4253 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4254 = getelementptr inbounds i8, i8* %4253, i64 20
  %4255 = bitcast i8* %4254 to float*
  %4256 = load float, float* %4255, align 4
  %4257 = insertelement <4 x float> zeroinitializer, float %4256, i32 0
  %4258 = insertelement <4 x float> %4257, float 0.000000e+00, i32 1
  %4259 = insertelement <4 x float> %4258, float 0.000000e+00, i32 2
  %4260 = insertelement <4 x float> %4259, float 0.000000e+00, i32 3
  %4261 = getelementptr inbounds float, float* %0, i64 6
  %4262 = load float, float* %4261, align 4
  %4263 = insertelement <4 x float> zeroinitializer, float %4262, i32 0
  %4264 = insertelement <4 x float> %4263, float 0.000000e+00, i32 1
  %4265 = insertelement <4 x float> %4264, float 0.000000e+00, i32 2
  %4266 = insertelement <4 x float> %4265, float 0.000000e+00, i32 3
  %4267 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4260, <4 x float> %4266, <4 x float> %4252)
  %4268 = extractelement <4 x float> %4267, i32 0
  %4269 = getelementptr inbounds float, float* %2, i64 6
  store float %4268, float* %4269, align 4
  %4270 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4271 = getelementptr inbounds i8, i8* %4270, i64 16
  %4272 = bitcast i8* %4271 to float*
  %4273 = load float, float* %4272, align 4
  %4274 = insertelement <4 x float> zeroinitializer, float %4273, i32 0
  %4275 = insertelement <4 x float> %4274, float 1.000000e+00, i32 1
  %4276 = insertelement <4 x float> %4275, float 1.000000e+00, i32 2
  %4277 = insertelement <4 x float> %4276, float 1.000000e+00, i32 3
  %4278 = getelementptr inbounds float, float* %0, i64 2
  %4279 = load float, float* %4278, align 4
  %4280 = insertelement <4 x float> zeroinitializer, float %4279, i32 0
  %4281 = insertelement <4 x float> %4280, float 0.000000e+00, i32 1
  %4282 = insertelement <4 x float> %4281, float 0.000000e+00, i32 2
  %4283 = insertelement <4 x float> %4282, float 0.000000e+00, i32 3
  %4284 = fmul <4 x float> %4277, %4283
  %4285 = fadd <4 x float> %4284, zeroinitializer
  %4286 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4287 = getelementptr inbounds i8, i8* %4286, i64 20
  %4288 = bitcast i8* %4287 to float*
  %4289 = load float, float* %4288, align 4
  %4290 = insertelement <4 x float> zeroinitializer, float %4289, i32 0
  %4291 = insertelement <4 x float> %4290, float 1.000000e+00, i32 1
  %4292 = insertelement <4 x float> %4291, float 1.000000e+00, i32 2
  %4293 = insertelement <4 x float> %4292, float 1.000000e+00, i32 3
  %4294 = getelementptr inbounds float, float* %0, i64 6
  %4295 = load float, float* %4294, align 4
  %4296 = insertelement <4 x float> zeroinitializer, float %4295, i32 0
  %4297 = insertelement <4 x float> %4296, float 0.000000e+00, i32 1
  %4298 = insertelement <4 x float> %4297, float 0.000000e+00, i32 2
  %4299 = insertelement <4 x float> %4298, float 0.000000e+00, i32 3
  %4300 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4293, <4 x float> %4299, <4 x float> %4285)
  %4301 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4302 = getelementptr inbounds i8, i8* %4301, i64 24
  %4303 = bitcast i8* %4302 to float*
  %4304 = load float, float* %4303, align 4
  %4305 = insertelement <4 x float> zeroinitializer, float %4304, i32 0
  %4306 = insertelement <4 x float> %4305, float 0.000000e+00, i32 1
  %4307 = insertelement <4 x float> %4306, float 0.000000e+00, i32 2
  %4308 = insertelement <4 x float> %4307, float 0.000000e+00, i32 3
  %4309 = getelementptr inbounds float, float* %0, i64 10
  %4310 = load float, float* %4309, align 4
  %4311 = insertelement <4 x float> zeroinitializer, float %4310, i32 0
  %4312 = insertelement <4 x float> %4311, float 0.000000e+00, i32 1
  %4313 = insertelement <4 x float> %4312, float 0.000000e+00, i32 2
  %4314 = insertelement <4 x float> %4313, float 0.000000e+00, i32 3
  %4315 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4308, <4 x float> %4314, <4 x float> %4300)
  %4316 = extractelement <4 x float> %4315, i32 0
  %4317 = getelementptr inbounds float, float* %2, i64 6
  store float %4316, float* %4317, align 4
  %4318 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4319 = getelementptr inbounds i8, i8* %4318, i64 16
  %4320 = bitcast i8* %4319 to float*
  %4321 = load float, float* %4320, align 4
  %4322 = insertelement <4 x float> zeroinitializer, float %4321, i32 0
  %4323 = insertelement <4 x float> %4322, float 1.000000e+00, i32 1
  %4324 = insertelement <4 x float> %4323, float 1.000000e+00, i32 2
  %4325 = insertelement <4 x float> %4324, float 1.000000e+00, i32 3
  %4326 = getelementptr inbounds float, float* %0, i64 2
  %4327 = load float, float* %4326, align 4
  %4328 = insertelement <4 x float> zeroinitializer, float %4327, i32 0
  %4329 = insertelement <4 x float> %4328, float 0.000000e+00, i32 1
  %4330 = insertelement <4 x float> %4329, float 0.000000e+00, i32 2
  %4331 = insertelement <4 x float> %4330, float 0.000000e+00, i32 3
  %4332 = fmul <4 x float> %4325, %4331
  %4333 = fadd <4 x float> %4332, zeroinitializer
  %4334 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4335 = getelementptr inbounds i8, i8* %4334, i64 20
  %4336 = bitcast i8* %4335 to float*
  %4337 = load float, float* %4336, align 4
  %4338 = insertelement <4 x float> zeroinitializer, float %4337, i32 0
  %4339 = insertelement <4 x float> %4338, float 1.000000e+00, i32 1
  %4340 = insertelement <4 x float> %4339, float 1.000000e+00, i32 2
  %4341 = insertelement <4 x float> %4340, float 1.000000e+00, i32 3
  %4342 = getelementptr inbounds float, float* %0, i64 6
  %4343 = load float, float* %4342, align 4
  %4344 = insertelement <4 x float> zeroinitializer, float %4343, i32 0
  %4345 = insertelement <4 x float> %4344, float 0.000000e+00, i32 1
  %4346 = insertelement <4 x float> %4345, float 0.000000e+00, i32 2
  %4347 = insertelement <4 x float> %4346, float 0.000000e+00, i32 3
  %4348 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4341, <4 x float> %4347, <4 x float> %4333)
  %4349 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4350 = getelementptr inbounds i8, i8* %4349, i64 24
  %4351 = bitcast i8* %4350 to float*
  %4352 = load float, float* %4351, align 4
  %4353 = insertelement <4 x float> zeroinitializer, float %4352, i32 0
  %4354 = insertelement <4 x float> %4353, float 1.000000e+00, i32 1
  %4355 = insertelement <4 x float> %4354, float 1.000000e+00, i32 2
  %4356 = insertelement <4 x float> %4355, float 1.000000e+00, i32 3
  %4357 = getelementptr inbounds float, float* %0, i64 10
  %4358 = load float, float* %4357, align 4
  %4359 = insertelement <4 x float> zeroinitializer, float %4358, i32 0
  %4360 = insertelement <4 x float> %4359, float 0.000000e+00, i32 1
  %4361 = insertelement <4 x float> %4360, float 0.000000e+00, i32 2
  %4362 = insertelement <4 x float> %4361, float 0.000000e+00, i32 3
  %4363 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4356, <4 x float> %4362, <4 x float> %4348)
  %4364 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4365 = getelementptr inbounds i8, i8* %4364, i64 28
  %4366 = bitcast i8* %4365 to float*
  %4367 = load float, float* %4366, align 4
  %4368 = insertelement <4 x float> zeroinitializer, float %4367, i32 0
  %4369 = insertelement <4 x float> %4368, float 0.000000e+00, i32 1
  %4370 = insertelement <4 x float> %4369, float 0.000000e+00, i32 2
  %4371 = insertelement <4 x float> %4370, float 0.000000e+00, i32 3
  %4372 = getelementptr inbounds float, float* %0, i64 14
  %4373 = load float, float* %4372, align 4
  %4374 = insertelement <4 x float> zeroinitializer, float %4373, i32 0
  %4375 = insertelement <4 x float> %4374, float 0.000000e+00, i32 1
  %4376 = insertelement <4 x float> %4375, float 0.000000e+00, i32 2
  %4377 = insertelement <4 x float> %4376, float 0.000000e+00, i32 3
  %4378 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4371, <4 x float> %4377, <4 x float> %4363)
  %4379 = extractelement <4 x float> %4378, i32 0
  %4380 = getelementptr inbounds float, float* %2, i64 6
  store float %4379, float* %4380, align 4
  %4381 = extractelement <4 x float> %4378, i32 1
  %4382 = getelementptr inbounds float, float* %2, i64 7
  store float %4381, float* %4382, align 4
  %4383 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4384 = getelementptr inbounds i8, i8* %4383, i64 16
  %4385 = bitcast i8* %4384 to float*
  %4386 = load float, float* %4385, align 4
  %4387 = insertelement <4 x float> zeroinitializer, float %4386, i32 0
  %4388 = insertelement <4 x float> %4387, float 0.000000e+00, i32 1
  %4389 = insertelement <4 x float> %4388, float 0.000000e+00, i32 2
  %4390 = insertelement <4 x float> %4389, float 0.000000e+00, i32 3
  %4391 = getelementptr inbounds float, float* %0, i64 3
  %4392 = load float, float* %4391, align 4
  %4393 = insertelement <4 x float> zeroinitializer, float %4392, i32 0
  %4394 = insertelement <4 x float> %4393, float 0.000000e+00, i32 1
  %4395 = insertelement <4 x float> %4394, float 0.000000e+00, i32 2
  %4396 = insertelement <4 x float> %4395, float 0.000000e+00, i32 3
  %4397 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4390, <4 x float> %4396, <4 x float> zeroinitializer)
  %4398 = extractelement <4 x float> %4397, i32 0
  %4399 = getelementptr inbounds float, float* %2, i64 7
  store float %4398, float* %4399, align 4
  %4400 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4401 = getelementptr inbounds i8, i8* %4400, i64 16
  %4402 = bitcast i8* %4401 to float*
  %4403 = load float, float* %4402, align 4
  %4404 = insertelement <4 x float> zeroinitializer, float %4403, i32 0
  %4405 = insertelement <4 x float> %4404, float 1.000000e+00, i32 1
  %4406 = insertelement <4 x float> %4405, float 1.000000e+00, i32 2
  %4407 = insertelement <4 x float> %4406, float 1.000000e+00, i32 3
  %4408 = getelementptr inbounds float, float* %0, i64 3
  %4409 = load float, float* %4408, align 4
  %4410 = insertelement <4 x float> zeroinitializer, float %4409, i32 0
  %4411 = insertelement <4 x float> %4410, float 0.000000e+00, i32 1
  %4412 = insertelement <4 x float> %4411, float 0.000000e+00, i32 2
  %4413 = insertelement <4 x float> %4412, float 0.000000e+00, i32 3
  %4414 = fmul <4 x float> %4407, %4413
  %4415 = fadd <4 x float> %4414, zeroinitializer
  %4416 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4417 = getelementptr inbounds i8, i8* %4416, i64 20
  %4418 = bitcast i8* %4417 to float*
  %4419 = load float, float* %4418, align 4
  %4420 = insertelement <4 x float> zeroinitializer, float %4419, i32 0
  %4421 = insertelement <4 x float> %4420, float 0.000000e+00, i32 1
  %4422 = insertelement <4 x float> %4421, float 0.000000e+00, i32 2
  %4423 = insertelement <4 x float> %4422, float 0.000000e+00, i32 3
  %4424 = getelementptr inbounds float, float* %0, i64 7
  %4425 = load float, float* %4424, align 4
  %4426 = insertelement <4 x float> zeroinitializer, float %4425, i32 0
  %4427 = insertelement <4 x float> %4426, float 0.000000e+00, i32 1
  %4428 = insertelement <4 x float> %4427, float 0.000000e+00, i32 2
  %4429 = insertelement <4 x float> %4428, float 0.000000e+00, i32 3
  %4430 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4423, <4 x float> %4429, <4 x float> %4415)
  %4431 = extractelement <4 x float> %4430, i32 0
  %4432 = getelementptr inbounds float, float* %2, i64 7
  store float %4431, float* %4432, align 4
  %4433 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4434 = getelementptr inbounds i8, i8* %4433, i64 16
  %4435 = bitcast i8* %4434 to float*
  %4436 = load float, float* %4435, align 4
  %4437 = insertelement <4 x float> zeroinitializer, float %4436, i32 0
  %4438 = insertelement <4 x float> %4437, float 1.000000e+00, i32 1
  %4439 = insertelement <4 x float> %4438, float 1.000000e+00, i32 2
  %4440 = insertelement <4 x float> %4439, float 1.000000e+00, i32 3
  %4441 = getelementptr inbounds float, float* %0, i64 3
  %4442 = load float, float* %4441, align 4
  %4443 = insertelement <4 x float> zeroinitializer, float %4442, i32 0
  %4444 = insertelement <4 x float> %4443, float 0.000000e+00, i32 1
  %4445 = insertelement <4 x float> %4444, float 0.000000e+00, i32 2
  %4446 = insertelement <4 x float> %4445, float 0.000000e+00, i32 3
  %4447 = fmul <4 x float> %4440, %4446
  %4448 = fadd <4 x float> %4447, zeroinitializer
  %4449 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4450 = getelementptr inbounds i8, i8* %4449, i64 20
  %4451 = bitcast i8* %4450 to float*
  %4452 = load float, float* %4451, align 4
  %4453 = insertelement <4 x float> zeroinitializer, float %4452, i32 0
  %4454 = insertelement <4 x float> %4453, float 1.000000e+00, i32 1
  %4455 = insertelement <4 x float> %4454, float 1.000000e+00, i32 2
  %4456 = insertelement <4 x float> %4455, float 1.000000e+00, i32 3
  %4457 = getelementptr inbounds float, float* %0, i64 7
  %4458 = load float, float* %4457, align 4
  %4459 = insertelement <4 x float> zeroinitializer, float %4458, i32 0
  %4460 = insertelement <4 x float> %4459, float 0.000000e+00, i32 1
  %4461 = insertelement <4 x float> %4460, float 0.000000e+00, i32 2
  %4462 = insertelement <4 x float> %4461, float 0.000000e+00, i32 3
  %4463 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4456, <4 x float> %4462, <4 x float> %4448)
  %4464 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4465 = getelementptr inbounds i8, i8* %4464, i64 24
  %4466 = bitcast i8* %4465 to float*
  %4467 = load float, float* %4466, align 4
  %4468 = insertelement <4 x float> zeroinitializer, float %4467, i32 0
  %4469 = insertelement <4 x float> %4468, float 0.000000e+00, i32 1
  %4470 = insertelement <4 x float> %4469, float 0.000000e+00, i32 2
  %4471 = insertelement <4 x float> %4470, float 0.000000e+00, i32 3
  %4472 = getelementptr inbounds float, float* %0, i64 11
  %4473 = load float, float* %4472, align 4
  %4474 = insertelement <4 x float> zeroinitializer, float %4473, i32 0
  %4475 = insertelement <4 x float> %4474, float 0.000000e+00, i32 1
  %4476 = insertelement <4 x float> %4475, float 0.000000e+00, i32 2
  %4477 = insertelement <4 x float> %4476, float 0.000000e+00, i32 3
  %4478 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4471, <4 x float> %4477, <4 x float> %4463)
  %4479 = extractelement <4 x float> %4478, i32 0
  %4480 = getelementptr inbounds float, float* %2, i64 7
  store float %4479, float* %4480, align 4
  %4481 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4482 = getelementptr inbounds i8, i8* %4481, i64 16
  %4483 = bitcast i8* %4482 to float*
  %4484 = load float, float* %4483, align 4
  %4485 = insertelement <4 x float> zeroinitializer, float %4484, i32 0
  %4486 = insertelement <4 x float> %4485, float 1.000000e+00, i32 1
  %4487 = insertelement <4 x float> %4486, float 1.000000e+00, i32 2
  %4488 = insertelement <4 x float> %4487, float 1.000000e+00, i32 3
  %4489 = getelementptr inbounds float, float* %0, i64 3
  %4490 = load float, float* %4489, align 4
  %4491 = insertelement <4 x float> zeroinitializer, float %4490, i32 0
  %4492 = insertelement <4 x float> %4491, float 0.000000e+00, i32 1
  %4493 = insertelement <4 x float> %4492, float 0.000000e+00, i32 2
  %4494 = insertelement <4 x float> %4493, float 0.000000e+00, i32 3
  %4495 = fmul <4 x float> %4488, %4494
  %4496 = fadd <4 x float> %4495, zeroinitializer
  %4497 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4498 = getelementptr inbounds i8, i8* %4497, i64 20
  %4499 = bitcast i8* %4498 to float*
  %4500 = load float, float* %4499, align 4
  %4501 = insertelement <4 x float> zeroinitializer, float %4500, i32 0
  %4502 = insertelement <4 x float> %4501, float 1.000000e+00, i32 1
  %4503 = insertelement <4 x float> %4502, float 1.000000e+00, i32 2
  %4504 = insertelement <4 x float> %4503, float 1.000000e+00, i32 3
  %4505 = getelementptr inbounds float, float* %0, i64 7
  %4506 = load float, float* %4505, align 4
  %4507 = insertelement <4 x float> zeroinitializer, float %4506, i32 0
  %4508 = insertelement <4 x float> %4507, float 0.000000e+00, i32 1
  %4509 = insertelement <4 x float> %4508, float 0.000000e+00, i32 2
  %4510 = insertelement <4 x float> %4509, float 0.000000e+00, i32 3
  %4511 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4504, <4 x float> %4510, <4 x float> %4496)
  %4512 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4513 = getelementptr inbounds i8, i8* %4512, i64 24
  %4514 = bitcast i8* %4513 to float*
  %4515 = load float, float* %4514, align 4
  %4516 = insertelement <4 x float> zeroinitializer, float %4515, i32 0
  %4517 = insertelement <4 x float> %4516, float 1.000000e+00, i32 1
  %4518 = insertelement <4 x float> %4517, float 1.000000e+00, i32 2
  %4519 = insertelement <4 x float> %4518, float 1.000000e+00, i32 3
  %4520 = getelementptr inbounds float, float* %0, i64 11
  %4521 = load float, float* %4520, align 4
  %4522 = insertelement <4 x float> zeroinitializer, float %4521, i32 0
  %4523 = insertelement <4 x float> %4522, float 0.000000e+00, i32 1
  %4524 = insertelement <4 x float> %4523, float 0.000000e+00, i32 2
  %4525 = insertelement <4 x float> %4524, float 0.000000e+00, i32 3
  %4526 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4519, <4 x float> %4525, <4 x float> %4511)
  %4527 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4528 = getelementptr inbounds i8, i8* %4527, i64 28
  %4529 = bitcast i8* %4528 to float*
  %4530 = load float, float* %4529, align 4
  %4531 = insertelement <4 x float> zeroinitializer, float %4530, i32 0
  %4532 = insertelement <4 x float> %4531, float 0.000000e+00, i32 1
  %4533 = insertelement <4 x float> %4532, float 0.000000e+00, i32 2
  %4534 = insertelement <4 x float> %4533, float 0.000000e+00, i32 3
  %4535 = getelementptr inbounds float, float* %0, i64 15
  %4536 = load float, float* %4535, align 4
  %4537 = insertelement <4 x float> zeroinitializer, float %4536, i32 0
  %4538 = insertelement <4 x float> %4537, float 0.000000e+00, i32 1
  %4539 = insertelement <4 x float> %4538, float 0.000000e+00, i32 2
  %4540 = insertelement <4 x float> %4539, float 0.000000e+00, i32 3
  %4541 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4534, <4 x float> %4540, <4 x float> %4526)
  %4542 = extractelement <4 x float> %4541, i32 0
  %4543 = getelementptr inbounds float, float* %2, i64 7
  store float %4542, float* %4543, align 4
  %4544 = getelementptr inbounds float, float* %2, i64 8
  store float 0.000000e+00, float* %4544, align 4
  %4545 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4546 = getelementptr inbounds i8, i8* %4545, i64 32
  %4547 = bitcast i8* %4546 to float*
  %4548 = load float, float* %4547, align 4
  %4549 = insertelement <4 x float> zeroinitializer, float %4548, i32 0
  %4550 = insertelement <4 x float> %4549, float 0.000000e+00, i32 1
  %4551 = insertelement <4 x float> %4550, float 0.000000e+00, i32 2
  %4552 = insertelement <4 x float> %4551, float 0.000000e+00, i32 3
  %4553 = load float, float* %0, align 4
  %4554 = insertelement <4 x float> zeroinitializer, float %4553, i32 0
  %4555 = insertelement <4 x float> %4554, float 0.000000e+00, i32 1
  %4556 = insertelement <4 x float> %4555, float 0.000000e+00, i32 2
  %4557 = insertelement <4 x float> %4556, float 0.000000e+00, i32 3
  %4558 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4552, <4 x float> %4557, <4 x float> zeroinitializer)
  %4559 = extractelement <4 x float> %4558, i32 0
  %4560 = getelementptr inbounds float, float* %2, i64 8
  store float %4559, float* %4560, align 4
  %4561 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4562 = getelementptr inbounds i8, i8* %4561, i64 32
  %4563 = bitcast i8* %4562 to float*
  %4564 = load float, float* %4563, align 4
  %4565 = insertelement <4 x float> zeroinitializer, float %4564, i32 0
  %4566 = insertelement <4 x float> %4565, float 1.000000e+00, i32 1
  %4567 = insertelement <4 x float> %4566, float 1.000000e+00, i32 2
  %4568 = insertelement <4 x float> %4567, float 1.000000e+00, i32 3
  %4569 = load float, float* %0, align 4
  %4570 = insertelement <4 x float> zeroinitializer, float %4569, i32 0
  %4571 = insertelement <4 x float> %4570, float 0.000000e+00, i32 1
  %4572 = insertelement <4 x float> %4571, float 0.000000e+00, i32 2
  %4573 = insertelement <4 x float> %4572, float 0.000000e+00, i32 3
  %4574 = fmul <4 x float> %4568, %4573
  %4575 = fadd <4 x float> %4574, zeroinitializer
  %4576 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4577 = getelementptr inbounds i8, i8* %4576, i64 36
  %4578 = bitcast i8* %4577 to float*
  %4579 = load float, float* %4578, align 4
  %4580 = insertelement <4 x float> zeroinitializer, float %4579, i32 0
  %4581 = insertelement <4 x float> %4580, float 0.000000e+00, i32 1
  %4582 = insertelement <4 x float> %4581, float 0.000000e+00, i32 2
  %4583 = insertelement <4 x float> %4582, float 0.000000e+00, i32 3
  %4584 = getelementptr inbounds float, float* %0, i64 4
  %4585 = load float, float* %4584, align 4
  %4586 = insertelement <4 x float> zeroinitializer, float %4585, i32 0
  %4587 = insertelement <4 x float> %4586, float 0.000000e+00, i32 1
  %4588 = insertelement <4 x float> %4587, float 0.000000e+00, i32 2
  %4589 = insertelement <4 x float> %4588, float 0.000000e+00, i32 3
  %4590 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4583, <4 x float> %4589, <4 x float> %4575)
  %4591 = extractelement <4 x float> %4590, i32 0
  %4592 = getelementptr inbounds float, float* %2, i64 8
  store float %4591, float* %4592, align 4
  %4593 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4594 = getelementptr inbounds i8, i8* %4593, i64 32
  %4595 = bitcast i8* %4594 to float*
  %4596 = load float, float* %4595, align 4
  %4597 = insertelement <4 x float> zeroinitializer, float %4596, i32 0
  %4598 = insertelement <4 x float> %4597, float 1.000000e+00, i32 1
  %4599 = insertelement <4 x float> %4598, float 1.000000e+00, i32 2
  %4600 = insertelement <4 x float> %4599, float 1.000000e+00, i32 3
  %4601 = load float, float* %0, align 4
  %4602 = insertelement <4 x float> zeroinitializer, float %4601, i32 0
  %4603 = insertelement <4 x float> %4602, float 0.000000e+00, i32 1
  %4604 = insertelement <4 x float> %4603, float 0.000000e+00, i32 2
  %4605 = insertelement <4 x float> %4604, float 0.000000e+00, i32 3
  %4606 = fmul <4 x float> %4600, %4605
  %4607 = fadd <4 x float> %4606, zeroinitializer
  %4608 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4609 = getelementptr inbounds i8, i8* %4608, i64 36
  %4610 = bitcast i8* %4609 to float*
  %4611 = load float, float* %4610, align 4
  %4612 = insertelement <4 x float> zeroinitializer, float %4611, i32 0
  %4613 = insertelement <4 x float> %4612, float 1.000000e+00, i32 1
  %4614 = insertelement <4 x float> %4613, float 1.000000e+00, i32 2
  %4615 = insertelement <4 x float> %4614, float 1.000000e+00, i32 3
  %4616 = getelementptr inbounds float, float* %0, i64 4
  %4617 = load float, float* %4616, align 4
  %4618 = insertelement <4 x float> zeroinitializer, float %4617, i32 0
  %4619 = insertelement <4 x float> %4618, float 0.000000e+00, i32 1
  %4620 = insertelement <4 x float> %4619, float 0.000000e+00, i32 2
  %4621 = insertelement <4 x float> %4620, float 0.000000e+00, i32 3
  %4622 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4615, <4 x float> %4621, <4 x float> %4607)
  %4623 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4624 = getelementptr inbounds i8, i8* %4623, i64 40
  %4625 = bitcast i8* %4624 to float*
  %4626 = load float, float* %4625, align 4
  %4627 = insertelement <4 x float> zeroinitializer, float %4626, i32 0
  %4628 = insertelement <4 x float> %4627, float 0.000000e+00, i32 1
  %4629 = insertelement <4 x float> %4628, float 0.000000e+00, i32 2
  %4630 = insertelement <4 x float> %4629, float 0.000000e+00, i32 3
  %4631 = getelementptr inbounds float, float* %0, i64 8
  %4632 = load float, float* %4631, align 4
  %4633 = insertelement <4 x float> zeroinitializer, float %4632, i32 0
  %4634 = insertelement <4 x float> %4633, float 0.000000e+00, i32 1
  %4635 = insertelement <4 x float> %4634, float 0.000000e+00, i32 2
  %4636 = insertelement <4 x float> %4635, float 0.000000e+00, i32 3
  %4637 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4630, <4 x float> %4636, <4 x float> %4622)
  %4638 = extractelement <4 x float> %4637, i32 0
  %4639 = getelementptr inbounds float, float* %2, i64 8
  store float %4638, float* %4639, align 4
  %4640 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4641 = getelementptr inbounds i8, i8* %4640, i64 32
  %4642 = bitcast i8* %4641 to float*
  %4643 = load float, float* %4642, align 4
  %4644 = insertelement <4 x float> zeroinitializer, float %4643, i32 0
  %4645 = insertelement <4 x float> %4644, float 1.000000e+00, i32 1
  %4646 = insertelement <4 x float> %4645, float 1.000000e+00, i32 2
  %4647 = insertelement <4 x float> %4646, float 1.000000e+00, i32 3
  %4648 = load float, float* %0, align 4
  %4649 = insertelement <4 x float> zeroinitializer, float %4648, i32 0
  %4650 = insertelement <4 x float> %4649, float 0.000000e+00, i32 1
  %4651 = insertelement <4 x float> %4650, float 0.000000e+00, i32 2
  %4652 = insertelement <4 x float> %4651, float 0.000000e+00, i32 3
  %4653 = fmul <4 x float> %4647, %4652
  %4654 = fadd <4 x float> %4653, zeroinitializer
  %4655 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4656 = getelementptr inbounds i8, i8* %4655, i64 36
  %4657 = bitcast i8* %4656 to float*
  %4658 = load float, float* %4657, align 4
  %4659 = insertelement <4 x float> zeroinitializer, float %4658, i32 0
  %4660 = insertelement <4 x float> %4659, float 1.000000e+00, i32 1
  %4661 = insertelement <4 x float> %4660, float 1.000000e+00, i32 2
  %4662 = insertelement <4 x float> %4661, float 1.000000e+00, i32 3
  %4663 = getelementptr inbounds float, float* %0, i64 4
  %4664 = load float, float* %4663, align 4
  %4665 = insertelement <4 x float> zeroinitializer, float %4664, i32 0
  %4666 = insertelement <4 x float> %4665, float 0.000000e+00, i32 1
  %4667 = insertelement <4 x float> %4666, float 0.000000e+00, i32 2
  %4668 = insertelement <4 x float> %4667, float 0.000000e+00, i32 3
  %4669 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4662, <4 x float> %4668, <4 x float> %4654)
  %4670 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4671 = getelementptr inbounds i8, i8* %4670, i64 40
  %4672 = bitcast i8* %4671 to float*
  %4673 = load float, float* %4672, align 4
  %4674 = insertelement <4 x float> zeroinitializer, float %4673, i32 0
  %4675 = insertelement <4 x float> %4674, float 1.000000e+00, i32 1
  %4676 = insertelement <4 x float> %4675, float 1.000000e+00, i32 2
  %4677 = insertelement <4 x float> %4676, float 1.000000e+00, i32 3
  %4678 = getelementptr inbounds float, float* %0, i64 8
  %4679 = load float, float* %4678, align 4
  %4680 = insertelement <4 x float> zeroinitializer, float %4679, i32 0
  %4681 = insertelement <4 x float> %4680, float 0.000000e+00, i32 1
  %4682 = insertelement <4 x float> %4681, float 0.000000e+00, i32 2
  %4683 = insertelement <4 x float> %4682, float 0.000000e+00, i32 3
  %4684 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4677, <4 x float> %4683, <4 x float> %4669)
  %4685 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4686 = getelementptr inbounds i8, i8* %4685, i64 44
  %4687 = bitcast i8* %4686 to float*
  %4688 = load float, float* %4687, align 4
  %4689 = insertelement <4 x float> zeroinitializer, float %4688, i32 0
  %4690 = insertelement <4 x float> %4689, float 0.000000e+00, i32 1
  %4691 = insertelement <4 x float> %4690, float 0.000000e+00, i32 2
  %4692 = insertelement <4 x float> %4691, float 0.000000e+00, i32 3
  %4693 = getelementptr inbounds float, float* %0, i64 12
  %4694 = load float, float* %4693, align 4
  %4695 = insertelement <4 x float> zeroinitializer, float %4694, i32 0
  %4696 = insertelement <4 x float> %4695, float 0.000000e+00, i32 1
  %4697 = insertelement <4 x float> %4696, float 0.000000e+00, i32 2
  %4698 = insertelement <4 x float> %4697, float 0.000000e+00, i32 3
  %4699 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4692, <4 x float> %4698, <4 x float> %4684)
  %4700 = extractelement <4 x float> %4699, i32 0
  %4701 = getelementptr inbounds float, float* %2, i64 8
  store float %4700, float* %4701, align 4
  %4702 = extractelement <4 x float> %4699, i32 1
  %4703 = getelementptr inbounds float, float* %2, i64 9
  store float %4702, float* %4703, align 4
  %4704 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4705 = getelementptr inbounds i8, i8* %4704, i64 32
  %4706 = bitcast i8* %4705 to float*
  %4707 = load float, float* %4706, align 4
  %4708 = insertelement <4 x float> zeroinitializer, float %4707, i32 0
  %4709 = insertelement <4 x float> %4708, float 0.000000e+00, i32 1
  %4710 = insertelement <4 x float> %4709, float 0.000000e+00, i32 2
  %4711 = insertelement <4 x float> %4710, float 0.000000e+00, i32 3
  %4712 = getelementptr inbounds float, float* %0, i64 1
  %4713 = load float, float* %4712, align 4
  %4714 = insertelement <4 x float> zeroinitializer, float %4713, i32 0
  %4715 = insertelement <4 x float> %4714, float 0.000000e+00, i32 1
  %4716 = insertelement <4 x float> %4715, float 0.000000e+00, i32 2
  %4717 = insertelement <4 x float> %4716, float 0.000000e+00, i32 3
  %4718 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4711, <4 x float> %4717, <4 x float> zeroinitializer)
  %4719 = extractelement <4 x float> %4718, i32 0
  %4720 = getelementptr inbounds float, float* %2, i64 9
  store float %4719, float* %4720, align 4
  %4721 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4722 = getelementptr inbounds i8, i8* %4721, i64 32
  %4723 = bitcast i8* %4722 to float*
  %4724 = load float, float* %4723, align 4
  %4725 = insertelement <4 x float> zeroinitializer, float %4724, i32 0
  %4726 = insertelement <4 x float> %4725, float 1.000000e+00, i32 1
  %4727 = insertelement <4 x float> %4726, float 1.000000e+00, i32 2
  %4728 = insertelement <4 x float> %4727, float 1.000000e+00, i32 3
  %4729 = getelementptr inbounds float, float* %0, i64 1
  %4730 = load float, float* %4729, align 4
  %4731 = insertelement <4 x float> zeroinitializer, float %4730, i32 0
  %4732 = insertelement <4 x float> %4731, float 0.000000e+00, i32 1
  %4733 = insertelement <4 x float> %4732, float 0.000000e+00, i32 2
  %4734 = insertelement <4 x float> %4733, float 0.000000e+00, i32 3
  %4735 = fmul <4 x float> %4728, %4734
  %4736 = fadd <4 x float> %4735, zeroinitializer
  %4737 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4738 = getelementptr inbounds i8, i8* %4737, i64 36
  %4739 = bitcast i8* %4738 to float*
  %4740 = load float, float* %4739, align 4
  %4741 = insertelement <4 x float> zeroinitializer, float %4740, i32 0
  %4742 = insertelement <4 x float> %4741, float 0.000000e+00, i32 1
  %4743 = insertelement <4 x float> %4742, float 0.000000e+00, i32 2
  %4744 = insertelement <4 x float> %4743, float 0.000000e+00, i32 3
  %4745 = getelementptr inbounds float, float* %0, i64 5
  %4746 = load float, float* %4745, align 4
  %4747 = insertelement <4 x float> zeroinitializer, float %4746, i32 0
  %4748 = insertelement <4 x float> %4747, float 0.000000e+00, i32 1
  %4749 = insertelement <4 x float> %4748, float 0.000000e+00, i32 2
  %4750 = insertelement <4 x float> %4749, float 0.000000e+00, i32 3
  %4751 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4744, <4 x float> %4750, <4 x float> %4736)
  %4752 = extractelement <4 x float> %4751, i32 0
  %4753 = getelementptr inbounds float, float* %2, i64 9
  store float %4752, float* %4753, align 4
  %4754 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4755 = getelementptr inbounds i8, i8* %4754, i64 32
  %4756 = bitcast i8* %4755 to float*
  %4757 = load float, float* %4756, align 4
  %4758 = insertelement <4 x float> zeroinitializer, float %4757, i32 0
  %4759 = insertelement <4 x float> %4758, float 1.000000e+00, i32 1
  %4760 = insertelement <4 x float> %4759, float 1.000000e+00, i32 2
  %4761 = insertelement <4 x float> %4760, float 1.000000e+00, i32 3
  %4762 = getelementptr inbounds float, float* %0, i64 1
  %4763 = load float, float* %4762, align 4
  %4764 = insertelement <4 x float> zeroinitializer, float %4763, i32 0
  %4765 = insertelement <4 x float> %4764, float 0.000000e+00, i32 1
  %4766 = insertelement <4 x float> %4765, float 0.000000e+00, i32 2
  %4767 = insertelement <4 x float> %4766, float 0.000000e+00, i32 3
  %4768 = fmul <4 x float> %4761, %4767
  %4769 = fadd <4 x float> %4768, zeroinitializer
  %4770 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4771 = getelementptr inbounds i8, i8* %4770, i64 36
  %4772 = bitcast i8* %4771 to float*
  %4773 = load float, float* %4772, align 4
  %4774 = insertelement <4 x float> zeroinitializer, float %4773, i32 0
  %4775 = insertelement <4 x float> %4774, float 1.000000e+00, i32 1
  %4776 = insertelement <4 x float> %4775, float 1.000000e+00, i32 2
  %4777 = insertelement <4 x float> %4776, float 1.000000e+00, i32 3
  %4778 = getelementptr inbounds float, float* %0, i64 5
  %4779 = load float, float* %4778, align 4
  %4780 = insertelement <4 x float> zeroinitializer, float %4779, i32 0
  %4781 = insertelement <4 x float> %4780, float 0.000000e+00, i32 1
  %4782 = insertelement <4 x float> %4781, float 0.000000e+00, i32 2
  %4783 = insertelement <4 x float> %4782, float 0.000000e+00, i32 3
  %4784 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4777, <4 x float> %4783, <4 x float> %4769)
  %4785 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4786 = getelementptr inbounds i8, i8* %4785, i64 40
  %4787 = bitcast i8* %4786 to float*
  %4788 = load float, float* %4787, align 4
  %4789 = insertelement <4 x float> zeroinitializer, float %4788, i32 0
  %4790 = insertelement <4 x float> %4789, float 0.000000e+00, i32 1
  %4791 = insertelement <4 x float> %4790, float 0.000000e+00, i32 2
  %4792 = insertelement <4 x float> %4791, float 0.000000e+00, i32 3
  %4793 = getelementptr inbounds float, float* %0, i64 9
  %4794 = load float, float* %4793, align 4
  %4795 = insertelement <4 x float> zeroinitializer, float %4794, i32 0
  %4796 = insertelement <4 x float> %4795, float 0.000000e+00, i32 1
  %4797 = insertelement <4 x float> %4796, float 0.000000e+00, i32 2
  %4798 = insertelement <4 x float> %4797, float 0.000000e+00, i32 3
  %4799 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4792, <4 x float> %4798, <4 x float> %4784)
  %4800 = extractelement <4 x float> %4799, i32 0
  %4801 = getelementptr inbounds float, float* %2, i64 9
  store float %4800, float* %4801, align 4
  %4802 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4803 = getelementptr inbounds i8, i8* %4802, i64 32
  %4804 = bitcast i8* %4803 to float*
  %4805 = load float, float* %4804, align 4
  %4806 = insertelement <4 x float> zeroinitializer, float %4805, i32 0
  %4807 = insertelement <4 x float> %4806, float 1.000000e+00, i32 1
  %4808 = insertelement <4 x float> %4807, float 1.000000e+00, i32 2
  %4809 = insertelement <4 x float> %4808, float 1.000000e+00, i32 3
  %4810 = getelementptr inbounds float, float* %0, i64 1
  %4811 = load float, float* %4810, align 4
  %4812 = insertelement <4 x float> zeroinitializer, float %4811, i32 0
  %4813 = insertelement <4 x float> %4812, float 0.000000e+00, i32 1
  %4814 = insertelement <4 x float> %4813, float 0.000000e+00, i32 2
  %4815 = insertelement <4 x float> %4814, float 0.000000e+00, i32 3
  %4816 = fmul <4 x float> %4809, %4815
  %4817 = fadd <4 x float> %4816, zeroinitializer
  %4818 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4819 = getelementptr inbounds i8, i8* %4818, i64 36
  %4820 = bitcast i8* %4819 to float*
  %4821 = load float, float* %4820, align 4
  %4822 = insertelement <4 x float> zeroinitializer, float %4821, i32 0
  %4823 = insertelement <4 x float> %4822, float 1.000000e+00, i32 1
  %4824 = insertelement <4 x float> %4823, float 1.000000e+00, i32 2
  %4825 = insertelement <4 x float> %4824, float 1.000000e+00, i32 3
  %4826 = getelementptr inbounds float, float* %0, i64 5
  %4827 = load float, float* %4826, align 4
  %4828 = insertelement <4 x float> zeroinitializer, float %4827, i32 0
  %4829 = insertelement <4 x float> %4828, float 0.000000e+00, i32 1
  %4830 = insertelement <4 x float> %4829, float 0.000000e+00, i32 2
  %4831 = insertelement <4 x float> %4830, float 0.000000e+00, i32 3
  %4832 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4825, <4 x float> %4831, <4 x float> %4817)
  %4833 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4834 = getelementptr inbounds i8, i8* %4833, i64 40
  %4835 = bitcast i8* %4834 to float*
  %4836 = load float, float* %4835, align 4
  %4837 = insertelement <4 x float> zeroinitializer, float %4836, i32 0
  %4838 = insertelement <4 x float> %4837, float 1.000000e+00, i32 1
  %4839 = insertelement <4 x float> %4838, float 1.000000e+00, i32 2
  %4840 = insertelement <4 x float> %4839, float 1.000000e+00, i32 3
  %4841 = getelementptr inbounds float, float* %0, i64 9
  %4842 = load float, float* %4841, align 4
  %4843 = insertelement <4 x float> zeroinitializer, float %4842, i32 0
  %4844 = insertelement <4 x float> %4843, float 0.000000e+00, i32 1
  %4845 = insertelement <4 x float> %4844, float 0.000000e+00, i32 2
  %4846 = insertelement <4 x float> %4845, float 0.000000e+00, i32 3
  %4847 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4840, <4 x float> %4846, <4 x float> %4832)
  %4848 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4849 = getelementptr inbounds i8, i8* %4848, i64 44
  %4850 = bitcast i8* %4849 to float*
  %4851 = load float, float* %4850, align 4
  %4852 = insertelement <4 x float> zeroinitializer, float %4851, i32 0
  %4853 = insertelement <4 x float> %4852, float 0.000000e+00, i32 1
  %4854 = insertelement <4 x float> %4853, float 0.000000e+00, i32 2
  %4855 = insertelement <4 x float> %4854, float 0.000000e+00, i32 3
  %4856 = getelementptr inbounds float, float* %0, i64 13
  %4857 = load float, float* %4856, align 4
  %4858 = insertelement <4 x float> zeroinitializer, float %4857, i32 0
  %4859 = insertelement <4 x float> %4858, float 0.000000e+00, i32 1
  %4860 = insertelement <4 x float> %4859, float 0.000000e+00, i32 2
  %4861 = insertelement <4 x float> %4860, float 0.000000e+00, i32 3
  %4862 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4855, <4 x float> %4861, <4 x float> %4847)
  %4863 = extractelement <4 x float> %4862, i32 0
  %4864 = getelementptr inbounds float, float* %2, i64 9
  store float %4863, float* %4864, align 4
  %4865 = extractelement <4 x float> %4862, i32 1
  %4866 = getelementptr inbounds float, float* %2, i64 10
  store float %4865, float* %4866, align 4
  %4867 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4868 = getelementptr inbounds i8, i8* %4867, i64 32
  %4869 = bitcast i8* %4868 to float*
  %4870 = load float, float* %4869, align 4
  %4871 = insertelement <4 x float> zeroinitializer, float %4870, i32 0
  %4872 = insertelement <4 x float> %4871, float 0.000000e+00, i32 1
  %4873 = insertelement <4 x float> %4872, float 0.000000e+00, i32 2
  %4874 = insertelement <4 x float> %4873, float 0.000000e+00, i32 3
  %4875 = getelementptr inbounds float, float* %0, i64 2
  %4876 = load float, float* %4875, align 4
  %4877 = insertelement <4 x float> zeroinitializer, float %4876, i32 0
  %4878 = insertelement <4 x float> %4877, float 0.000000e+00, i32 1
  %4879 = insertelement <4 x float> %4878, float 0.000000e+00, i32 2
  %4880 = insertelement <4 x float> %4879, float 0.000000e+00, i32 3
  %4881 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4874, <4 x float> %4880, <4 x float> zeroinitializer)
  %4882 = extractelement <4 x float> %4881, i32 0
  %4883 = getelementptr inbounds float, float* %2, i64 10
  store float %4882, float* %4883, align 4
  %4884 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4885 = getelementptr inbounds i8, i8* %4884, i64 32
  %4886 = bitcast i8* %4885 to float*
  %4887 = load float, float* %4886, align 4
  %4888 = insertelement <4 x float> zeroinitializer, float %4887, i32 0
  %4889 = insertelement <4 x float> %4888, float 1.000000e+00, i32 1
  %4890 = insertelement <4 x float> %4889, float 1.000000e+00, i32 2
  %4891 = insertelement <4 x float> %4890, float 1.000000e+00, i32 3
  %4892 = getelementptr inbounds float, float* %0, i64 2
  %4893 = load float, float* %4892, align 4
  %4894 = insertelement <4 x float> zeroinitializer, float %4893, i32 0
  %4895 = insertelement <4 x float> %4894, float 0.000000e+00, i32 1
  %4896 = insertelement <4 x float> %4895, float 0.000000e+00, i32 2
  %4897 = insertelement <4 x float> %4896, float 0.000000e+00, i32 3
  %4898 = fmul <4 x float> %4891, %4897
  %4899 = fadd <4 x float> %4898, zeroinitializer
  %4900 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4901 = getelementptr inbounds i8, i8* %4900, i64 36
  %4902 = bitcast i8* %4901 to float*
  %4903 = load float, float* %4902, align 4
  %4904 = insertelement <4 x float> zeroinitializer, float %4903, i32 0
  %4905 = insertelement <4 x float> %4904, float 0.000000e+00, i32 1
  %4906 = insertelement <4 x float> %4905, float 0.000000e+00, i32 2
  %4907 = insertelement <4 x float> %4906, float 0.000000e+00, i32 3
  %4908 = getelementptr inbounds float, float* %0, i64 6
  %4909 = load float, float* %4908, align 4
  %4910 = insertelement <4 x float> zeroinitializer, float %4909, i32 0
  %4911 = insertelement <4 x float> %4910, float 0.000000e+00, i32 1
  %4912 = insertelement <4 x float> %4911, float 0.000000e+00, i32 2
  %4913 = insertelement <4 x float> %4912, float 0.000000e+00, i32 3
  %4914 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4907, <4 x float> %4913, <4 x float> %4899)
  %4915 = extractelement <4 x float> %4914, i32 0
  %4916 = getelementptr inbounds float, float* %2, i64 10
  store float %4915, float* %4916, align 4
  %4917 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4918 = getelementptr inbounds i8, i8* %4917, i64 32
  %4919 = bitcast i8* %4918 to float*
  %4920 = load float, float* %4919, align 4
  %4921 = insertelement <4 x float> zeroinitializer, float %4920, i32 0
  %4922 = insertelement <4 x float> %4921, float 1.000000e+00, i32 1
  %4923 = insertelement <4 x float> %4922, float 1.000000e+00, i32 2
  %4924 = insertelement <4 x float> %4923, float 1.000000e+00, i32 3
  %4925 = getelementptr inbounds float, float* %0, i64 2
  %4926 = load float, float* %4925, align 4
  %4927 = insertelement <4 x float> zeroinitializer, float %4926, i32 0
  %4928 = insertelement <4 x float> %4927, float 0.000000e+00, i32 1
  %4929 = insertelement <4 x float> %4928, float 0.000000e+00, i32 2
  %4930 = insertelement <4 x float> %4929, float 0.000000e+00, i32 3
  %4931 = fmul <4 x float> %4924, %4930
  %4932 = fadd <4 x float> %4931, zeroinitializer
  %4933 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4934 = getelementptr inbounds i8, i8* %4933, i64 36
  %4935 = bitcast i8* %4934 to float*
  %4936 = load float, float* %4935, align 4
  %4937 = insertelement <4 x float> zeroinitializer, float %4936, i32 0
  %4938 = insertelement <4 x float> %4937, float 1.000000e+00, i32 1
  %4939 = insertelement <4 x float> %4938, float 1.000000e+00, i32 2
  %4940 = insertelement <4 x float> %4939, float 1.000000e+00, i32 3
  %4941 = getelementptr inbounds float, float* %0, i64 6
  %4942 = load float, float* %4941, align 4
  %4943 = insertelement <4 x float> zeroinitializer, float %4942, i32 0
  %4944 = insertelement <4 x float> %4943, float 0.000000e+00, i32 1
  %4945 = insertelement <4 x float> %4944, float 0.000000e+00, i32 2
  %4946 = insertelement <4 x float> %4945, float 0.000000e+00, i32 3
  %4947 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4940, <4 x float> %4946, <4 x float> %4932)
  %4948 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4949 = getelementptr inbounds i8, i8* %4948, i64 40
  %4950 = bitcast i8* %4949 to float*
  %4951 = load float, float* %4950, align 4
  %4952 = insertelement <4 x float> zeroinitializer, float %4951, i32 0
  %4953 = insertelement <4 x float> %4952, float 0.000000e+00, i32 1
  %4954 = insertelement <4 x float> %4953, float 0.000000e+00, i32 2
  %4955 = insertelement <4 x float> %4954, float 0.000000e+00, i32 3
  %4956 = getelementptr inbounds float, float* %0, i64 10
  %4957 = load float, float* %4956, align 4
  %4958 = insertelement <4 x float> zeroinitializer, float %4957, i32 0
  %4959 = insertelement <4 x float> %4958, float 0.000000e+00, i32 1
  %4960 = insertelement <4 x float> %4959, float 0.000000e+00, i32 2
  %4961 = insertelement <4 x float> %4960, float 0.000000e+00, i32 3
  %4962 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4955, <4 x float> %4961, <4 x float> %4947)
  %4963 = extractelement <4 x float> %4962, i32 0
  %4964 = getelementptr inbounds float, float* %2, i64 10
  store float %4963, float* %4964, align 4
  %4965 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4966 = getelementptr inbounds i8, i8* %4965, i64 32
  %4967 = bitcast i8* %4966 to float*
  %4968 = load float, float* %4967, align 4
  %4969 = insertelement <4 x float> zeroinitializer, float %4968, i32 0
  %4970 = insertelement <4 x float> %4969, float 1.000000e+00, i32 1
  %4971 = insertelement <4 x float> %4970, float 1.000000e+00, i32 2
  %4972 = insertelement <4 x float> %4971, float 1.000000e+00, i32 3
  %4973 = getelementptr inbounds float, float* %0, i64 2
  %4974 = load float, float* %4973, align 4
  %4975 = insertelement <4 x float> zeroinitializer, float %4974, i32 0
  %4976 = insertelement <4 x float> %4975, float 0.000000e+00, i32 1
  %4977 = insertelement <4 x float> %4976, float 0.000000e+00, i32 2
  %4978 = insertelement <4 x float> %4977, float 0.000000e+00, i32 3
  %4979 = fmul <4 x float> %4972, %4978
  %4980 = fadd <4 x float> %4979, zeroinitializer
  %4981 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4982 = getelementptr inbounds i8, i8* %4981, i64 36
  %4983 = bitcast i8* %4982 to float*
  %4984 = load float, float* %4983, align 4
  %4985 = insertelement <4 x float> zeroinitializer, float %4984, i32 0
  %4986 = insertelement <4 x float> %4985, float 1.000000e+00, i32 1
  %4987 = insertelement <4 x float> %4986, float 1.000000e+00, i32 2
  %4988 = insertelement <4 x float> %4987, float 1.000000e+00, i32 3
  %4989 = getelementptr inbounds float, float* %0, i64 6
  %4990 = load float, float* %4989, align 4
  %4991 = insertelement <4 x float> zeroinitializer, float %4990, i32 0
  %4992 = insertelement <4 x float> %4991, float 0.000000e+00, i32 1
  %4993 = insertelement <4 x float> %4992, float 0.000000e+00, i32 2
  %4994 = insertelement <4 x float> %4993, float 0.000000e+00, i32 3
  %4995 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4988, <4 x float> %4994, <4 x float> %4980)
  %4996 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4997 = getelementptr inbounds i8, i8* %4996, i64 40
  %4998 = bitcast i8* %4997 to float*
  %4999 = load float, float* %4998, align 4
  %5000 = insertelement <4 x float> zeroinitializer, float %4999, i32 0
  %5001 = insertelement <4 x float> %5000, float 1.000000e+00, i32 1
  %5002 = insertelement <4 x float> %5001, float 1.000000e+00, i32 2
  %5003 = insertelement <4 x float> %5002, float 1.000000e+00, i32 3
  %5004 = getelementptr inbounds float, float* %0, i64 10
  %5005 = load float, float* %5004, align 4
  %5006 = insertelement <4 x float> zeroinitializer, float %5005, i32 0
  %5007 = insertelement <4 x float> %5006, float 0.000000e+00, i32 1
  %5008 = insertelement <4 x float> %5007, float 0.000000e+00, i32 2
  %5009 = insertelement <4 x float> %5008, float 0.000000e+00, i32 3
  %5010 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5003, <4 x float> %5009, <4 x float> %4995)
  %5011 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5012 = getelementptr inbounds i8, i8* %5011, i64 44
  %5013 = bitcast i8* %5012 to float*
  %5014 = load float, float* %5013, align 4
  %5015 = insertelement <4 x float> zeroinitializer, float %5014, i32 0
  %5016 = insertelement <4 x float> %5015, float 0.000000e+00, i32 1
  %5017 = insertelement <4 x float> %5016, float 0.000000e+00, i32 2
  %5018 = insertelement <4 x float> %5017, float 0.000000e+00, i32 3
  %5019 = getelementptr inbounds float, float* %0, i64 14
  %5020 = load float, float* %5019, align 4
  %5021 = insertelement <4 x float> zeroinitializer, float %5020, i32 0
  %5022 = insertelement <4 x float> %5021, float 0.000000e+00, i32 1
  %5023 = insertelement <4 x float> %5022, float 0.000000e+00, i32 2
  %5024 = insertelement <4 x float> %5023, float 0.000000e+00, i32 3
  %5025 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5018, <4 x float> %5024, <4 x float> %5010)
  %5026 = extractelement <4 x float> %5025, i32 0
  %5027 = getelementptr inbounds float, float* %2, i64 10
  store float %5026, float* %5027, align 4
  %5028 = extractelement <4 x float> %5025, i32 1
  %5029 = getelementptr inbounds float, float* %2, i64 11
  store float %5028, float* %5029, align 4
  %5030 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5031 = getelementptr inbounds i8, i8* %5030, i64 32
  %5032 = bitcast i8* %5031 to float*
  %5033 = load float, float* %5032, align 4
  %5034 = insertelement <4 x float> zeroinitializer, float %5033, i32 0
  %5035 = insertelement <4 x float> %5034, float 0.000000e+00, i32 1
  %5036 = insertelement <4 x float> %5035, float 0.000000e+00, i32 2
  %5037 = insertelement <4 x float> %5036, float 0.000000e+00, i32 3
  %5038 = getelementptr inbounds float, float* %0, i64 3
  %5039 = load float, float* %5038, align 4
  %5040 = insertelement <4 x float> zeroinitializer, float %5039, i32 0
  %5041 = insertelement <4 x float> %5040, float 0.000000e+00, i32 1
  %5042 = insertelement <4 x float> %5041, float 0.000000e+00, i32 2
  %5043 = insertelement <4 x float> %5042, float 0.000000e+00, i32 3
  %5044 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5037, <4 x float> %5043, <4 x float> zeroinitializer)
  %5045 = extractelement <4 x float> %5044, i32 0
  %5046 = getelementptr inbounds float, float* %2, i64 11
  store float %5045, float* %5046, align 4
  %5047 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5048 = getelementptr inbounds i8, i8* %5047, i64 32
  %5049 = bitcast i8* %5048 to float*
  %5050 = load float, float* %5049, align 4
  %5051 = insertelement <4 x float> zeroinitializer, float %5050, i32 0
  %5052 = insertelement <4 x float> %5051, float 1.000000e+00, i32 1
  %5053 = insertelement <4 x float> %5052, float 1.000000e+00, i32 2
  %5054 = insertelement <4 x float> %5053, float 1.000000e+00, i32 3
  %5055 = getelementptr inbounds float, float* %0, i64 3
  %5056 = load float, float* %5055, align 4
  %5057 = insertelement <4 x float> zeroinitializer, float %5056, i32 0
  %5058 = insertelement <4 x float> %5057, float 0.000000e+00, i32 1
  %5059 = insertelement <4 x float> %5058, float 0.000000e+00, i32 2
  %5060 = insertelement <4 x float> %5059, float 0.000000e+00, i32 3
  %5061 = fmul <4 x float> %5054, %5060
  %5062 = fadd <4 x float> %5061, zeroinitializer
  %5063 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5064 = getelementptr inbounds i8, i8* %5063, i64 36
  %5065 = bitcast i8* %5064 to float*
  %5066 = load float, float* %5065, align 4
  %5067 = insertelement <4 x float> zeroinitializer, float %5066, i32 0
  %5068 = insertelement <4 x float> %5067, float 0.000000e+00, i32 1
  %5069 = insertelement <4 x float> %5068, float 0.000000e+00, i32 2
  %5070 = insertelement <4 x float> %5069, float 0.000000e+00, i32 3
  %5071 = getelementptr inbounds float, float* %0, i64 7
  %5072 = load float, float* %5071, align 4
  %5073 = insertelement <4 x float> zeroinitializer, float %5072, i32 0
  %5074 = insertelement <4 x float> %5073, float 0.000000e+00, i32 1
  %5075 = insertelement <4 x float> %5074, float 0.000000e+00, i32 2
  %5076 = insertelement <4 x float> %5075, float 0.000000e+00, i32 3
  %5077 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5070, <4 x float> %5076, <4 x float> %5062)
  %5078 = extractelement <4 x float> %5077, i32 0
  %5079 = getelementptr inbounds float, float* %2, i64 11
  store float %5078, float* %5079, align 4
  %5080 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5081 = getelementptr inbounds i8, i8* %5080, i64 32
  %5082 = bitcast i8* %5081 to float*
  %5083 = load float, float* %5082, align 4
  %5084 = insertelement <4 x float> zeroinitializer, float %5083, i32 0
  %5085 = insertelement <4 x float> %5084, float 1.000000e+00, i32 1
  %5086 = insertelement <4 x float> %5085, float 1.000000e+00, i32 2
  %5087 = insertelement <4 x float> %5086, float 1.000000e+00, i32 3
  %5088 = getelementptr inbounds float, float* %0, i64 3
  %5089 = load float, float* %5088, align 4
  %5090 = insertelement <4 x float> zeroinitializer, float %5089, i32 0
  %5091 = insertelement <4 x float> %5090, float 0.000000e+00, i32 1
  %5092 = insertelement <4 x float> %5091, float 0.000000e+00, i32 2
  %5093 = insertelement <4 x float> %5092, float 0.000000e+00, i32 3
  %5094 = fmul <4 x float> %5087, %5093
  %5095 = fadd <4 x float> %5094, zeroinitializer
  %5096 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5097 = getelementptr inbounds i8, i8* %5096, i64 36
  %5098 = bitcast i8* %5097 to float*
  %5099 = load float, float* %5098, align 4
  %5100 = insertelement <4 x float> zeroinitializer, float %5099, i32 0
  %5101 = insertelement <4 x float> %5100, float 1.000000e+00, i32 1
  %5102 = insertelement <4 x float> %5101, float 1.000000e+00, i32 2
  %5103 = insertelement <4 x float> %5102, float 1.000000e+00, i32 3
  %5104 = getelementptr inbounds float, float* %0, i64 7
  %5105 = load float, float* %5104, align 4
  %5106 = insertelement <4 x float> zeroinitializer, float %5105, i32 0
  %5107 = insertelement <4 x float> %5106, float 0.000000e+00, i32 1
  %5108 = insertelement <4 x float> %5107, float 0.000000e+00, i32 2
  %5109 = insertelement <4 x float> %5108, float 0.000000e+00, i32 3
  %5110 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5103, <4 x float> %5109, <4 x float> %5095)
  %5111 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5112 = getelementptr inbounds i8, i8* %5111, i64 40
  %5113 = bitcast i8* %5112 to float*
  %5114 = load float, float* %5113, align 4
  %5115 = insertelement <4 x float> zeroinitializer, float %5114, i32 0
  %5116 = insertelement <4 x float> %5115, float 0.000000e+00, i32 1
  %5117 = insertelement <4 x float> %5116, float 0.000000e+00, i32 2
  %5118 = insertelement <4 x float> %5117, float 0.000000e+00, i32 3
  %5119 = getelementptr inbounds float, float* %0, i64 11
  %5120 = load float, float* %5119, align 4
  %5121 = insertelement <4 x float> zeroinitializer, float %5120, i32 0
  %5122 = insertelement <4 x float> %5121, float 0.000000e+00, i32 1
  %5123 = insertelement <4 x float> %5122, float 0.000000e+00, i32 2
  %5124 = insertelement <4 x float> %5123, float 0.000000e+00, i32 3
  %5125 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5118, <4 x float> %5124, <4 x float> %5110)
  %5126 = extractelement <4 x float> %5125, i32 0
  %5127 = getelementptr inbounds float, float* %2, i64 11
  store float %5126, float* %5127, align 4
  %5128 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5129 = getelementptr inbounds i8, i8* %5128, i64 32
  %5130 = bitcast i8* %5129 to float*
  %5131 = load float, float* %5130, align 4
  %5132 = insertelement <4 x float> zeroinitializer, float %5131, i32 0
  %5133 = insertelement <4 x float> %5132, float 1.000000e+00, i32 1
  %5134 = insertelement <4 x float> %5133, float 1.000000e+00, i32 2
  %5135 = insertelement <4 x float> %5134, float 1.000000e+00, i32 3
  %5136 = getelementptr inbounds float, float* %0, i64 3
  %5137 = load float, float* %5136, align 4
  %5138 = insertelement <4 x float> zeroinitializer, float %5137, i32 0
  %5139 = insertelement <4 x float> %5138, float 0.000000e+00, i32 1
  %5140 = insertelement <4 x float> %5139, float 0.000000e+00, i32 2
  %5141 = insertelement <4 x float> %5140, float 0.000000e+00, i32 3
  %5142 = fmul <4 x float> %5135, %5141
  %5143 = fadd <4 x float> %5142, zeroinitializer
  %5144 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5145 = getelementptr inbounds i8, i8* %5144, i64 36
  %5146 = bitcast i8* %5145 to float*
  %5147 = load float, float* %5146, align 4
  %5148 = insertelement <4 x float> zeroinitializer, float %5147, i32 0
  %5149 = insertelement <4 x float> %5148, float 1.000000e+00, i32 1
  %5150 = insertelement <4 x float> %5149, float 1.000000e+00, i32 2
  %5151 = insertelement <4 x float> %5150, float 1.000000e+00, i32 3
  %5152 = getelementptr inbounds float, float* %0, i64 7
  %5153 = load float, float* %5152, align 4
  %5154 = insertelement <4 x float> zeroinitializer, float %5153, i32 0
  %5155 = insertelement <4 x float> %5154, float 0.000000e+00, i32 1
  %5156 = insertelement <4 x float> %5155, float 0.000000e+00, i32 2
  %5157 = insertelement <4 x float> %5156, float 0.000000e+00, i32 3
  %5158 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5151, <4 x float> %5157, <4 x float> %5143)
  %5159 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5160 = getelementptr inbounds i8, i8* %5159, i64 40
  %5161 = bitcast i8* %5160 to float*
  %5162 = load float, float* %5161, align 4
  %5163 = insertelement <4 x float> zeroinitializer, float %5162, i32 0
  %5164 = insertelement <4 x float> %5163, float 1.000000e+00, i32 1
  %5165 = insertelement <4 x float> %5164, float 1.000000e+00, i32 2
  %5166 = insertelement <4 x float> %5165, float 1.000000e+00, i32 3
  %5167 = getelementptr inbounds float, float* %0, i64 11
  %5168 = load float, float* %5167, align 4
  %5169 = insertelement <4 x float> zeroinitializer, float %5168, i32 0
  %5170 = insertelement <4 x float> %5169, float 0.000000e+00, i32 1
  %5171 = insertelement <4 x float> %5170, float 0.000000e+00, i32 2
  %5172 = insertelement <4 x float> %5171, float 0.000000e+00, i32 3
  %5173 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5166, <4 x float> %5172, <4 x float> %5158)
  %5174 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5175 = getelementptr inbounds i8, i8* %5174, i64 44
  %5176 = bitcast i8* %5175 to float*
  %5177 = load float, float* %5176, align 4
  %5178 = insertelement <4 x float> zeroinitializer, float %5177, i32 0
  %5179 = insertelement <4 x float> %5178, float 0.000000e+00, i32 1
  %5180 = insertelement <4 x float> %5179, float 0.000000e+00, i32 2
  %5181 = insertelement <4 x float> %5180, float 0.000000e+00, i32 3
  %5182 = getelementptr inbounds float, float* %0, i64 15
  %5183 = load float, float* %5182, align 4
  %5184 = insertelement <4 x float> zeroinitializer, float %5183, i32 0
  %5185 = insertelement <4 x float> %5184, float 0.000000e+00, i32 1
  %5186 = insertelement <4 x float> %5185, float 0.000000e+00, i32 2
  %5187 = insertelement <4 x float> %5186, float 0.000000e+00, i32 3
  %5188 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5181, <4 x float> %5187, <4 x float> %5173)
  %5189 = extractelement <4 x float> %5188, i32 0
  %5190 = getelementptr inbounds float, float* %2, i64 11
  store float %5189, float* %5190, align 4
  %5191 = getelementptr inbounds float, float* %2, i64 12
  store float 0.000000e+00, float* %5191, align 4
  %5192 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5193 = getelementptr inbounds i8, i8* %5192, i64 48
  %5194 = bitcast i8* %5193 to float*
  %5195 = load float, float* %5194, align 4
  %5196 = insertelement <4 x float> zeroinitializer, float %5195, i32 0
  %5197 = insertelement <4 x float> %5196, float 0.000000e+00, i32 1
  %5198 = insertelement <4 x float> %5197, float 0.000000e+00, i32 2
  %5199 = insertelement <4 x float> %5198, float 0.000000e+00, i32 3
  %5200 = load float, float* %0, align 4
  %5201 = insertelement <4 x float> zeroinitializer, float %5200, i32 0
  %5202 = insertelement <4 x float> %5201, float 0.000000e+00, i32 1
  %5203 = insertelement <4 x float> %5202, float 0.000000e+00, i32 2
  %5204 = insertelement <4 x float> %5203, float 0.000000e+00, i32 3
  %5205 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5199, <4 x float> %5204, <4 x float> zeroinitializer)
  %5206 = extractelement <4 x float> %5205, i32 0
  %5207 = getelementptr inbounds float, float* %2, i64 12
  store float %5206, float* %5207, align 4
  %5208 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5209 = getelementptr inbounds i8, i8* %5208, i64 48
  %5210 = bitcast i8* %5209 to float*
  %5211 = load float, float* %5210, align 4
  %5212 = insertelement <4 x float> zeroinitializer, float %5211, i32 0
  %5213 = insertelement <4 x float> %5212, float 1.000000e+00, i32 1
  %5214 = insertelement <4 x float> %5213, float 1.000000e+00, i32 2
  %5215 = insertelement <4 x float> %5214, float 1.000000e+00, i32 3
  %5216 = load float, float* %0, align 4
  %5217 = insertelement <4 x float> zeroinitializer, float %5216, i32 0
  %5218 = insertelement <4 x float> %5217, float 0.000000e+00, i32 1
  %5219 = insertelement <4 x float> %5218, float 0.000000e+00, i32 2
  %5220 = insertelement <4 x float> %5219, float 0.000000e+00, i32 3
  %5221 = fmul <4 x float> %5215, %5220
  %5222 = fadd <4 x float> %5221, zeroinitializer
  %5223 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5224 = getelementptr inbounds i8, i8* %5223, i64 52
  %5225 = bitcast i8* %5224 to float*
  %5226 = load float, float* %5225, align 4
  %5227 = insertelement <4 x float> zeroinitializer, float %5226, i32 0
  %5228 = insertelement <4 x float> %5227, float 0.000000e+00, i32 1
  %5229 = insertelement <4 x float> %5228, float 0.000000e+00, i32 2
  %5230 = insertelement <4 x float> %5229, float 0.000000e+00, i32 3
  %5231 = getelementptr inbounds float, float* %0, i64 4
  %5232 = load float, float* %5231, align 4
  %5233 = insertelement <4 x float> zeroinitializer, float %5232, i32 0
  %5234 = insertelement <4 x float> %5233, float 0.000000e+00, i32 1
  %5235 = insertelement <4 x float> %5234, float 0.000000e+00, i32 2
  %5236 = insertelement <4 x float> %5235, float 0.000000e+00, i32 3
  %5237 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5230, <4 x float> %5236, <4 x float> %5222)
  %5238 = extractelement <4 x float> %5237, i32 0
  %5239 = getelementptr inbounds float, float* %2, i64 12
  store float %5238, float* %5239, align 4
  %5240 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5241 = getelementptr inbounds i8, i8* %5240, i64 48
  %5242 = bitcast i8* %5241 to float*
  %5243 = load float, float* %5242, align 4
  %5244 = insertelement <4 x float> zeroinitializer, float %5243, i32 0
  %5245 = insertelement <4 x float> %5244, float 1.000000e+00, i32 1
  %5246 = insertelement <4 x float> %5245, float 1.000000e+00, i32 2
  %5247 = insertelement <4 x float> %5246, float 1.000000e+00, i32 3
  %5248 = load float, float* %0, align 4
  %5249 = insertelement <4 x float> zeroinitializer, float %5248, i32 0
  %5250 = insertelement <4 x float> %5249, float 0.000000e+00, i32 1
  %5251 = insertelement <4 x float> %5250, float 0.000000e+00, i32 2
  %5252 = insertelement <4 x float> %5251, float 0.000000e+00, i32 3
  %5253 = fmul <4 x float> %5247, %5252
  %5254 = fadd <4 x float> %5253, zeroinitializer
  %5255 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5256 = getelementptr inbounds i8, i8* %5255, i64 52
  %5257 = bitcast i8* %5256 to float*
  %5258 = load float, float* %5257, align 4
  %5259 = insertelement <4 x float> zeroinitializer, float %5258, i32 0
  %5260 = insertelement <4 x float> %5259, float 1.000000e+00, i32 1
  %5261 = insertelement <4 x float> %5260, float 1.000000e+00, i32 2
  %5262 = insertelement <4 x float> %5261, float 1.000000e+00, i32 3
  %5263 = getelementptr inbounds float, float* %0, i64 4
  %5264 = load float, float* %5263, align 4
  %5265 = insertelement <4 x float> zeroinitializer, float %5264, i32 0
  %5266 = insertelement <4 x float> %5265, float 0.000000e+00, i32 1
  %5267 = insertelement <4 x float> %5266, float 0.000000e+00, i32 2
  %5268 = insertelement <4 x float> %5267, float 0.000000e+00, i32 3
  %5269 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5262, <4 x float> %5268, <4 x float> %5254)
  %5270 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5271 = getelementptr inbounds i8, i8* %5270, i64 56
  %5272 = bitcast i8* %5271 to float*
  %5273 = load float, float* %5272, align 4
  %5274 = insertelement <4 x float> zeroinitializer, float %5273, i32 0
  %5275 = insertelement <4 x float> %5274, float 0.000000e+00, i32 1
  %5276 = insertelement <4 x float> %5275, float 0.000000e+00, i32 2
  %5277 = insertelement <4 x float> %5276, float 0.000000e+00, i32 3
  %5278 = getelementptr inbounds float, float* %0, i64 8
  %5279 = load float, float* %5278, align 4
  %5280 = insertelement <4 x float> zeroinitializer, float %5279, i32 0
  %5281 = insertelement <4 x float> %5280, float 0.000000e+00, i32 1
  %5282 = insertelement <4 x float> %5281, float 0.000000e+00, i32 2
  %5283 = insertelement <4 x float> %5282, float 0.000000e+00, i32 3
  %5284 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5277, <4 x float> %5283, <4 x float> %5269)
  %5285 = extractelement <4 x float> %5284, i32 0
  %5286 = getelementptr inbounds float, float* %2, i64 12
  store float %5285, float* %5286, align 4
  %5287 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5288 = getelementptr inbounds i8, i8* %5287, i64 48
  %5289 = bitcast i8* %5288 to float*
  %5290 = load float, float* %5289, align 4
  %5291 = insertelement <4 x float> zeroinitializer, float %5290, i32 0
  %5292 = insertelement <4 x float> %5291, float 1.000000e+00, i32 1
  %5293 = insertelement <4 x float> %5292, float 1.000000e+00, i32 2
  %5294 = insertelement <4 x float> %5293, float 1.000000e+00, i32 3
  %5295 = load float, float* %0, align 4
  %5296 = insertelement <4 x float> zeroinitializer, float %5295, i32 0
  %5297 = insertelement <4 x float> %5296, float 0.000000e+00, i32 1
  %5298 = insertelement <4 x float> %5297, float 0.000000e+00, i32 2
  %5299 = insertelement <4 x float> %5298, float 0.000000e+00, i32 3
  %5300 = fmul <4 x float> %5294, %5299
  %5301 = fadd <4 x float> %5300, zeroinitializer
  %5302 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5303 = getelementptr inbounds i8, i8* %5302, i64 52
  %5304 = bitcast i8* %5303 to float*
  %5305 = load float, float* %5304, align 4
  %5306 = insertelement <4 x float> zeroinitializer, float %5305, i32 0
  %5307 = insertelement <4 x float> %5306, float 1.000000e+00, i32 1
  %5308 = insertelement <4 x float> %5307, float 1.000000e+00, i32 2
  %5309 = insertelement <4 x float> %5308, float 1.000000e+00, i32 3
  %5310 = getelementptr inbounds float, float* %0, i64 4
  %5311 = load float, float* %5310, align 4
  %5312 = insertelement <4 x float> zeroinitializer, float %5311, i32 0
  %5313 = insertelement <4 x float> %5312, float 0.000000e+00, i32 1
  %5314 = insertelement <4 x float> %5313, float 0.000000e+00, i32 2
  %5315 = insertelement <4 x float> %5314, float 0.000000e+00, i32 3
  %5316 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5309, <4 x float> %5315, <4 x float> %5301)
  %5317 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5318 = getelementptr inbounds i8, i8* %5317, i64 56
  %5319 = bitcast i8* %5318 to float*
  %5320 = load float, float* %5319, align 4
  %5321 = insertelement <4 x float> zeroinitializer, float %5320, i32 0
  %5322 = insertelement <4 x float> %5321, float 1.000000e+00, i32 1
  %5323 = insertelement <4 x float> %5322, float 1.000000e+00, i32 2
  %5324 = insertelement <4 x float> %5323, float 1.000000e+00, i32 3
  %5325 = getelementptr inbounds float, float* %0, i64 8
  %5326 = load float, float* %5325, align 4
  %5327 = insertelement <4 x float> zeroinitializer, float %5326, i32 0
  %5328 = insertelement <4 x float> %5327, float 0.000000e+00, i32 1
  %5329 = insertelement <4 x float> %5328, float 0.000000e+00, i32 2
  %5330 = insertelement <4 x float> %5329, float 0.000000e+00, i32 3
  %5331 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5324, <4 x float> %5330, <4 x float> %5316)
  %5332 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5333 = getelementptr inbounds i8, i8* %5332, i64 60
  %5334 = bitcast i8* %5333 to float*
  %5335 = load float, float* %5334, align 4
  %5336 = insertelement <4 x float> zeroinitializer, float %5335, i32 0
  %5337 = insertelement <4 x float> %5336, float 0.000000e+00, i32 1
  %5338 = insertelement <4 x float> %5337, float 0.000000e+00, i32 2
  %5339 = insertelement <4 x float> %5338, float 0.000000e+00, i32 3
  %5340 = getelementptr inbounds float, float* %0, i64 12
  %5341 = load float, float* %5340, align 4
  %5342 = insertelement <4 x float> zeroinitializer, float %5341, i32 0
  %5343 = insertelement <4 x float> %5342, float 0.000000e+00, i32 1
  %5344 = insertelement <4 x float> %5343, float 0.000000e+00, i32 2
  %5345 = insertelement <4 x float> %5344, float 0.000000e+00, i32 3
  %5346 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5339, <4 x float> %5345, <4 x float> %5331)
  %5347 = extractelement <4 x float> %5346, i32 0
  %5348 = getelementptr inbounds float, float* %2, i64 12
  store float %5347, float* %5348, align 4
  %5349 = extractelement <4 x float> %5346, i32 1
  %5350 = getelementptr inbounds float, float* %2, i64 13
  store float %5349, float* %5350, align 4
  %5351 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5352 = getelementptr inbounds i8, i8* %5351, i64 48
  %5353 = bitcast i8* %5352 to float*
  %5354 = load float, float* %5353, align 4
  %5355 = insertelement <4 x float> zeroinitializer, float %5354, i32 0
  %5356 = insertelement <4 x float> %5355, float 0.000000e+00, i32 1
  %5357 = insertelement <4 x float> %5356, float 0.000000e+00, i32 2
  %5358 = insertelement <4 x float> %5357, float 0.000000e+00, i32 3
  %5359 = getelementptr inbounds float, float* %0, i64 1
  %5360 = load float, float* %5359, align 4
  %5361 = insertelement <4 x float> zeroinitializer, float %5360, i32 0
  %5362 = insertelement <4 x float> %5361, float 0.000000e+00, i32 1
  %5363 = insertelement <4 x float> %5362, float 0.000000e+00, i32 2
  %5364 = insertelement <4 x float> %5363, float 0.000000e+00, i32 3
  %5365 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5358, <4 x float> %5364, <4 x float> zeroinitializer)
  %5366 = extractelement <4 x float> %5365, i32 0
  %5367 = getelementptr inbounds float, float* %2, i64 13
  store float %5366, float* %5367, align 4
  %5368 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5369 = getelementptr inbounds i8, i8* %5368, i64 48
  %5370 = bitcast i8* %5369 to float*
  %5371 = load float, float* %5370, align 4
  %5372 = insertelement <4 x float> zeroinitializer, float %5371, i32 0
  %5373 = insertelement <4 x float> %5372, float 1.000000e+00, i32 1
  %5374 = insertelement <4 x float> %5373, float 1.000000e+00, i32 2
  %5375 = insertelement <4 x float> %5374, float 1.000000e+00, i32 3
  %5376 = getelementptr inbounds float, float* %0, i64 1
  %5377 = load float, float* %5376, align 4
  %5378 = insertelement <4 x float> zeroinitializer, float %5377, i32 0
  %5379 = insertelement <4 x float> %5378, float 0.000000e+00, i32 1
  %5380 = insertelement <4 x float> %5379, float 0.000000e+00, i32 2
  %5381 = insertelement <4 x float> %5380, float 0.000000e+00, i32 3
  %5382 = fmul <4 x float> %5375, %5381
  %5383 = fadd <4 x float> %5382, zeroinitializer
  %5384 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5385 = getelementptr inbounds i8, i8* %5384, i64 52
  %5386 = bitcast i8* %5385 to float*
  %5387 = load float, float* %5386, align 4
  %5388 = insertelement <4 x float> zeroinitializer, float %5387, i32 0
  %5389 = insertelement <4 x float> %5388, float 0.000000e+00, i32 1
  %5390 = insertelement <4 x float> %5389, float 0.000000e+00, i32 2
  %5391 = insertelement <4 x float> %5390, float 0.000000e+00, i32 3
  %5392 = getelementptr inbounds float, float* %0, i64 5
  %5393 = load float, float* %5392, align 4
  %5394 = insertelement <4 x float> zeroinitializer, float %5393, i32 0
  %5395 = insertelement <4 x float> %5394, float 0.000000e+00, i32 1
  %5396 = insertelement <4 x float> %5395, float 0.000000e+00, i32 2
  %5397 = insertelement <4 x float> %5396, float 0.000000e+00, i32 3
  %5398 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5391, <4 x float> %5397, <4 x float> %5383)
  %5399 = extractelement <4 x float> %5398, i32 0
  %5400 = getelementptr inbounds float, float* %2, i64 13
  store float %5399, float* %5400, align 4
  %5401 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5402 = getelementptr inbounds i8, i8* %5401, i64 48
  %5403 = bitcast i8* %5402 to float*
  %5404 = load float, float* %5403, align 4
  %5405 = insertelement <4 x float> zeroinitializer, float %5404, i32 0
  %5406 = insertelement <4 x float> %5405, float 1.000000e+00, i32 1
  %5407 = insertelement <4 x float> %5406, float 1.000000e+00, i32 2
  %5408 = insertelement <4 x float> %5407, float 1.000000e+00, i32 3
  %5409 = getelementptr inbounds float, float* %0, i64 1
  %5410 = load float, float* %5409, align 4
  %5411 = insertelement <4 x float> zeroinitializer, float %5410, i32 0
  %5412 = insertelement <4 x float> %5411, float 0.000000e+00, i32 1
  %5413 = insertelement <4 x float> %5412, float 0.000000e+00, i32 2
  %5414 = insertelement <4 x float> %5413, float 0.000000e+00, i32 3
  %5415 = fmul <4 x float> %5408, %5414
  %5416 = fadd <4 x float> %5415, zeroinitializer
  %5417 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5418 = getelementptr inbounds i8, i8* %5417, i64 52
  %5419 = bitcast i8* %5418 to float*
  %5420 = load float, float* %5419, align 4
  %5421 = insertelement <4 x float> zeroinitializer, float %5420, i32 0
  %5422 = insertelement <4 x float> %5421, float 1.000000e+00, i32 1
  %5423 = insertelement <4 x float> %5422, float 1.000000e+00, i32 2
  %5424 = insertelement <4 x float> %5423, float 1.000000e+00, i32 3
  %5425 = getelementptr inbounds float, float* %0, i64 5
  %5426 = load float, float* %5425, align 4
  %5427 = insertelement <4 x float> zeroinitializer, float %5426, i32 0
  %5428 = insertelement <4 x float> %5427, float 0.000000e+00, i32 1
  %5429 = insertelement <4 x float> %5428, float 0.000000e+00, i32 2
  %5430 = insertelement <4 x float> %5429, float 0.000000e+00, i32 3
  %5431 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5424, <4 x float> %5430, <4 x float> %5416)
  %5432 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5433 = getelementptr inbounds i8, i8* %5432, i64 56
  %5434 = bitcast i8* %5433 to float*
  %5435 = load float, float* %5434, align 4
  %5436 = insertelement <4 x float> zeroinitializer, float %5435, i32 0
  %5437 = insertelement <4 x float> %5436, float 0.000000e+00, i32 1
  %5438 = insertelement <4 x float> %5437, float 0.000000e+00, i32 2
  %5439 = insertelement <4 x float> %5438, float 0.000000e+00, i32 3
  %5440 = getelementptr inbounds float, float* %0, i64 9
  %5441 = load float, float* %5440, align 4
  %5442 = insertelement <4 x float> zeroinitializer, float %5441, i32 0
  %5443 = insertelement <4 x float> %5442, float 0.000000e+00, i32 1
  %5444 = insertelement <4 x float> %5443, float 0.000000e+00, i32 2
  %5445 = insertelement <4 x float> %5444, float 0.000000e+00, i32 3
  %5446 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5439, <4 x float> %5445, <4 x float> %5431)
  %5447 = extractelement <4 x float> %5446, i32 0
  %5448 = getelementptr inbounds float, float* %2, i64 13
  store float %5447, float* %5448, align 4
  %5449 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5450 = getelementptr inbounds i8, i8* %5449, i64 48
  %5451 = bitcast i8* %5450 to float*
  %5452 = load float, float* %5451, align 4
  %5453 = insertelement <4 x float> zeroinitializer, float %5452, i32 0
  %5454 = insertelement <4 x float> %5453, float 1.000000e+00, i32 1
  %5455 = insertelement <4 x float> %5454, float 1.000000e+00, i32 2
  %5456 = insertelement <4 x float> %5455, float 1.000000e+00, i32 3
  %5457 = getelementptr inbounds float, float* %0, i64 1
  %5458 = load float, float* %5457, align 4
  %5459 = insertelement <4 x float> zeroinitializer, float %5458, i32 0
  %5460 = insertelement <4 x float> %5459, float 0.000000e+00, i32 1
  %5461 = insertelement <4 x float> %5460, float 0.000000e+00, i32 2
  %5462 = insertelement <4 x float> %5461, float 0.000000e+00, i32 3
  %5463 = fmul <4 x float> %5456, %5462
  %5464 = fadd <4 x float> %5463, zeroinitializer
  %5465 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5466 = getelementptr inbounds i8, i8* %5465, i64 52
  %5467 = bitcast i8* %5466 to float*
  %5468 = load float, float* %5467, align 4
  %5469 = insertelement <4 x float> zeroinitializer, float %5468, i32 0
  %5470 = insertelement <4 x float> %5469, float 1.000000e+00, i32 1
  %5471 = insertelement <4 x float> %5470, float 1.000000e+00, i32 2
  %5472 = insertelement <4 x float> %5471, float 1.000000e+00, i32 3
  %5473 = getelementptr inbounds float, float* %0, i64 5
  %5474 = load float, float* %5473, align 4
  %5475 = insertelement <4 x float> zeroinitializer, float %5474, i32 0
  %5476 = insertelement <4 x float> %5475, float 0.000000e+00, i32 1
  %5477 = insertelement <4 x float> %5476, float 0.000000e+00, i32 2
  %5478 = insertelement <4 x float> %5477, float 0.000000e+00, i32 3
  %5479 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5472, <4 x float> %5478, <4 x float> %5464)
  %5480 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5481 = getelementptr inbounds i8, i8* %5480, i64 56
  %5482 = bitcast i8* %5481 to float*
  %5483 = load float, float* %5482, align 4
  %5484 = insertelement <4 x float> zeroinitializer, float %5483, i32 0
  %5485 = insertelement <4 x float> %5484, float 1.000000e+00, i32 1
  %5486 = insertelement <4 x float> %5485, float 1.000000e+00, i32 2
  %5487 = insertelement <4 x float> %5486, float 1.000000e+00, i32 3
  %5488 = getelementptr inbounds float, float* %0, i64 9
  %5489 = load float, float* %5488, align 4
  %5490 = insertelement <4 x float> zeroinitializer, float %5489, i32 0
  %5491 = insertelement <4 x float> %5490, float 0.000000e+00, i32 1
  %5492 = insertelement <4 x float> %5491, float 0.000000e+00, i32 2
  %5493 = insertelement <4 x float> %5492, float 0.000000e+00, i32 3
  %5494 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5487, <4 x float> %5493, <4 x float> %5479)
  %5495 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5496 = getelementptr inbounds i8, i8* %5495, i64 60
  %5497 = bitcast i8* %5496 to float*
  %5498 = load float, float* %5497, align 4
  %5499 = insertelement <4 x float> zeroinitializer, float %5498, i32 0
  %5500 = insertelement <4 x float> %5499, float 0.000000e+00, i32 1
  %5501 = insertelement <4 x float> %5500, float 0.000000e+00, i32 2
  %5502 = insertelement <4 x float> %5501, float 0.000000e+00, i32 3
  %5503 = getelementptr inbounds float, float* %0, i64 13
  %5504 = load float, float* %5503, align 4
  %5505 = insertelement <4 x float> zeroinitializer, float %5504, i32 0
  %5506 = insertelement <4 x float> %5505, float 0.000000e+00, i32 1
  %5507 = insertelement <4 x float> %5506, float 0.000000e+00, i32 2
  %5508 = insertelement <4 x float> %5507, float 0.000000e+00, i32 3
  %5509 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5502, <4 x float> %5508, <4 x float> %5494)
  %5510 = extractelement <4 x float> %5509, i32 0
  %5511 = getelementptr inbounds float, float* %2, i64 13
  store float %5510, float* %5511, align 4
  %5512 = extractelement <4 x float> %5509, i32 1
  %5513 = getelementptr inbounds float, float* %2, i64 14
  store float %5512, float* %5513, align 4
  %5514 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5515 = getelementptr inbounds i8, i8* %5514, i64 48
  %5516 = bitcast i8* %5515 to float*
  %5517 = load float, float* %5516, align 4
  %5518 = insertelement <4 x float> zeroinitializer, float %5517, i32 0
  %5519 = insertelement <4 x float> %5518, float 0.000000e+00, i32 1
  %5520 = insertelement <4 x float> %5519, float 0.000000e+00, i32 2
  %5521 = insertelement <4 x float> %5520, float 0.000000e+00, i32 3
  %5522 = getelementptr inbounds float, float* %0, i64 2
  %5523 = load float, float* %5522, align 4
  %5524 = insertelement <4 x float> zeroinitializer, float %5523, i32 0
  %5525 = insertelement <4 x float> %5524, float 0.000000e+00, i32 1
  %5526 = insertelement <4 x float> %5525, float 0.000000e+00, i32 2
  %5527 = insertelement <4 x float> %5526, float 0.000000e+00, i32 3
  %5528 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5521, <4 x float> %5527, <4 x float> zeroinitializer)
  %5529 = extractelement <4 x float> %5528, i32 0
  %5530 = getelementptr inbounds float, float* %2, i64 14
  store float %5529, float* %5530, align 4
  %5531 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5532 = getelementptr inbounds i8, i8* %5531, i64 48
  %5533 = bitcast i8* %5532 to float*
  %5534 = load float, float* %5533, align 4
  %5535 = insertelement <4 x float> zeroinitializer, float %5534, i32 0
  %5536 = insertelement <4 x float> %5535, float 1.000000e+00, i32 1
  %5537 = insertelement <4 x float> %5536, float 1.000000e+00, i32 2
  %5538 = insertelement <4 x float> %5537, float 1.000000e+00, i32 3
  %5539 = getelementptr inbounds float, float* %0, i64 2
  %5540 = load float, float* %5539, align 4
  %5541 = insertelement <4 x float> zeroinitializer, float %5540, i32 0
  %5542 = insertelement <4 x float> %5541, float 0.000000e+00, i32 1
  %5543 = insertelement <4 x float> %5542, float 0.000000e+00, i32 2
  %5544 = insertelement <4 x float> %5543, float 0.000000e+00, i32 3
  %5545 = fmul <4 x float> %5538, %5544
  %5546 = fadd <4 x float> %5545, zeroinitializer
  %5547 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5548 = getelementptr inbounds i8, i8* %5547, i64 52
  %5549 = bitcast i8* %5548 to float*
  %5550 = load float, float* %5549, align 4
  %5551 = insertelement <4 x float> zeroinitializer, float %5550, i32 0
  %5552 = insertelement <4 x float> %5551, float 0.000000e+00, i32 1
  %5553 = insertelement <4 x float> %5552, float 0.000000e+00, i32 2
  %5554 = insertelement <4 x float> %5553, float 0.000000e+00, i32 3
  %5555 = getelementptr inbounds float, float* %0, i64 6
  %5556 = load float, float* %5555, align 4
  %5557 = insertelement <4 x float> zeroinitializer, float %5556, i32 0
  %5558 = insertelement <4 x float> %5557, float 0.000000e+00, i32 1
  %5559 = insertelement <4 x float> %5558, float 0.000000e+00, i32 2
  %5560 = insertelement <4 x float> %5559, float 0.000000e+00, i32 3
  %5561 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5554, <4 x float> %5560, <4 x float> %5546)
  %5562 = extractelement <4 x float> %5561, i32 0
  %5563 = getelementptr inbounds float, float* %2, i64 14
  store float %5562, float* %5563, align 4
  %5564 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5565 = getelementptr inbounds i8, i8* %5564, i64 48
  %5566 = bitcast i8* %5565 to float*
  %5567 = load float, float* %5566, align 4
  %5568 = insertelement <4 x float> zeroinitializer, float %5567, i32 0
  %5569 = insertelement <4 x float> %5568, float 1.000000e+00, i32 1
  %5570 = insertelement <4 x float> %5569, float 1.000000e+00, i32 2
  %5571 = insertelement <4 x float> %5570, float 1.000000e+00, i32 3
  %5572 = getelementptr inbounds float, float* %0, i64 2
  %5573 = load float, float* %5572, align 4
  %5574 = insertelement <4 x float> zeroinitializer, float %5573, i32 0
  %5575 = insertelement <4 x float> %5574, float 0.000000e+00, i32 1
  %5576 = insertelement <4 x float> %5575, float 0.000000e+00, i32 2
  %5577 = insertelement <4 x float> %5576, float 0.000000e+00, i32 3
  %5578 = fmul <4 x float> %5571, %5577
  %5579 = fadd <4 x float> %5578, zeroinitializer
  %5580 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5581 = getelementptr inbounds i8, i8* %5580, i64 52
  %5582 = bitcast i8* %5581 to float*
  %5583 = load float, float* %5582, align 4
  %5584 = insertelement <4 x float> zeroinitializer, float %5583, i32 0
  %5585 = insertelement <4 x float> %5584, float 1.000000e+00, i32 1
  %5586 = insertelement <4 x float> %5585, float 1.000000e+00, i32 2
  %5587 = insertelement <4 x float> %5586, float 1.000000e+00, i32 3
  %5588 = getelementptr inbounds float, float* %0, i64 6
  %5589 = load float, float* %5588, align 4
  %5590 = insertelement <4 x float> zeroinitializer, float %5589, i32 0
  %5591 = insertelement <4 x float> %5590, float 0.000000e+00, i32 1
  %5592 = insertelement <4 x float> %5591, float 0.000000e+00, i32 2
  %5593 = insertelement <4 x float> %5592, float 0.000000e+00, i32 3
  %5594 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5587, <4 x float> %5593, <4 x float> %5579)
  %5595 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5596 = getelementptr inbounds i8, i8* %5595, i64 56
  %5597 = bitcast i8* %5596 to float*
  %5598 = load float, float* %5597, align 4
  %5599 = insertelement <4 x float> zeroinitializer, float %5598, i32 0
  %5600 = insertelement <4 x float> %5599, float 0.000000e+00, i32 1
  %5601 = insertelement <4 x float> %5600, float 0.000000e+00, i32 2
  %5602 = insertelement <4 x float> %5601, float 0.000000e+00, i32 3
  %5603 = getelementptr inbounds float, float* %0, i64 10
  %5604 = load float, float* %5603, align 4
  %5605 = insertelement <4 x float> zeroinitializer, float %5604, i32 0
  %5606 = insertelement <4 x float> %5605, float 0.000000e+00, i32 1
  %5607 = insertelement <4 x float> %5606, float 0.000000e+00, i32 2
  %5608 = insertelement <4 x float> %5607, float 0.000000e+00, i32 3
  %5609 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5602, <4 x float> %5608, <4 x float> %5594)
  %5610 = extractelement <4 x float> %5609, i32 0
  %5611 = getelementptr inbounds float, float* %2, i64 14
  store float %5610, float* %5611, align 4
  %5612 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5613 = getelementptr inbounds i8, i8* %5612, i64 48
  %5614 = bitcast i8* %5613 to float*
  %5615 = load float, float* %5614, align 4
  %5616 = insertelement <4 x float> zeroinitializer, float %5615, i32 0
  %5617 = insertelement <4 x float> %5616, float 1.000000e+00, i32 1
  %5618 = insertelement <4 x float> %5617, float 1.000000e+00, i32 2
  %5619 = insertelement <4 x float> %5618, float 1.000000e+00, i32 3
  %5620 = getelementptr inbounds float, float* %0, i64 2
  %5621 = load float, float* %5620, align 4
  %5622 = insertelement <4 x float> zeroinitializer, float %5621, i32 0
  %5623 = insertelement <4 x float> %5622, float 0.000000e+00, i32 1
  %5624 = insertelement <4 x float> %5623, float 0.000000e+00, i32 2
  %5625 = insertelement <4 x float> %5624, float 0.000000e+00, i32 3
  %5626 = fmul <4 x float> %5619, %5625
  %5627 = fadd <4 x float> %5626, zeroinitializer
  %5628 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5629 = getelementptr inbounds i8, i8* %5628, i64 52
  %5630 = bitcast i8* %5629 to float*
  %5631 = load float, float* %5630, align 4
  %5632 = insertelement <4 x float> zeroinitializer, float %5631, i32 0
  %5633 = insertelement <4 x float> %5632, float 1.000000e+00, i32 1
  %5634 = insertelement <4 x float> %5633, float 1.000000e+00, i32 2
  %5635 = insertelement <4 x float> %5634, float 1.000000e+00, i32 3
  %5636 = getelementptr inbounds float, float* %0, i64 6
  %5637 = load float, float* %5636, align 4
  %5638 = insertelement <4 x float> zeroinitializer, float %5637, i32 0
  %5639 = insertelement <4 x float> %5638, float 0.000000e+00, i32 1
  %5640 = insertelement <4 x float> %5639, float 0.000000e+00, i32 2
  %5641 = insertelement <4 x float> %5640, float 0.000000e+00, i32 3
  %5642 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5635, <4 x float> %5641, <4 x float> %5627)
  %5643 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5644 = getelementptr inbounds i8, i8* %5643, i64 56
  %5645 = bitcast i8* %5644 to float*
  %5646 = load float, float* %5645, align 4
  %5647 = insertelement <4 x float> zeroinitializer, float %5646, i32 0
  %5648 = insertelement <4 x float> %5647, float 1.000000e+00, i32 1
  %5649 = insertelement <4 x float> %5648, float 1.000000e+00, i32 2
  %5650 = insertelement <4 x float> %5649, float 1.000000e+00, i32 3
  %5651 = getelementptr inbounds float, float* %0, i64 10
  %5652 = load float, float* %5651, align 4
  %5653 = insertelement <4 x float> zeroinitializer, float %5652, i32 0
  %5654 = insertelement <4 x float> %5653, float 0.000000e+00, i32 1
  %5655 = insertelement <4 x float> %5654, float 0.000000e+00, i32 2
  %5656 = insertelement <4 x float> %5655, float 0.000000e+00, i32 3
  %5657 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5650, <4 x float> %5656, <4 x float> %5642)
  %5658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5659 = getelementptr inbounds i8, i8* %5658, i64 60
  %5660 = bitcast i8* %5659 to float*
  %5661 = load float, float* %5660, align 4
  %5662 = insertelement <4 x float> zeroinitializer, float %5661, i32 0
  %5663 = insertelement <4 x float> %5662, float 0.000000e+00, i32 1
  %5664 = insertelement <4 x float> %5663, float 0.000000e+00, i32 2
  %5665 = insertelement <4 x float> %5664, float 0.000000e+00, i32 3
  %5666 = getelementptr inbounds float, float* %0, i64 14
  %5667 = load float, float* %5666, align 4
  %5668 = insertelement <4 x float> zeroinitializer, float %5667, i32 0
  %5669 = insertelement <4 x float> %5668, float 0.000000e+00, i32 1
  %5670 = insertelement <4 x float> %5669, float 0.000000e+00, i32 2
  %5671 = insertelement <4 x float> %5670, float 0.000000e+00, i32 3
  %5672 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5665, <4 x float> %5671, <4 x float> %5657)
  %5673 = extractelement <4 x float> %5672, i32 0
  %5674 = getelementptr inbounds float, float* %2, i64 14
  store float %5673, float* %5674, align 4
  %5675 = extractelement <4 x float> %5672, i32 1
  %5676 = getelementptr inbounds float, float* %2, i64 15
  store float %5675, float* %5676, align 4
  %5677 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5678 = getelementptr inbounds i8, i8* %5677, i64 48
  %5679 = bitcast i8* %5678 to float*
  %5680 = load float, float* %5679, align 4
  %5681 = insertelement <4 x float> zeroinitializer, float %5680, i32 0
  %5682 = insertelement <4 x float> %5681, float 0.000000e+00, i32 1
  %5683 = insertelement <4 x float> %5682, float 0.000000e+00, i32 2
  %5684 = insertelement <4 x float> %5683, float 0.000000e+00, i32 3
  %5685 = getelementptr inbounds float, float* %0, i64 3
  %5686 = load float, float* %5685, align 4
  %5687 = insertelement <4 x float> zeroinitializer, float %5686, i32 0
  %5688 = insertelement <4 x float> %5687, float 0.000000e+00, i32 1
  %5689 = insertelement <4 x float> %5688, float 0.000000e+00, i32 2
  %5690 = insertelement <4 x float> %5689, float 0.000000e+00, i32 3
  %5691 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5684, <4 x float> %5690, <4 x float> zeroinitializer)
  %5692 = extractelement <4 x float> %5691, i32 0
  %5693 = getelementptr inbounds float, float* %2, i64 15
  store float %5692, float* %5693, align 4
  %5694 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5695 = getelementptr inbounds i8, i8* %5694, i64 48
  %5696 = bitcast i8* %5695 to float*
  %5697 = load float, float* %5696, align 4
  %5698 = insertelement <4 x float> zeroinitializer, float %5697, i32 0
  %5699 = insertelement <4 x float> %5698, float 1.000000e+00, i32 1
  %5700 = insertelement <4 x float> %5699, float 1.000000e+00, i32 2
  %5701 = insertelement <4 x float> %5700, float 1.000000e+00, i32 3
  %5702 = getelementptr inbounds float, float* %0, i64 3
  %5703 = load float, float* %5702, align 4
  %5704 = insertelement <4 x float> zeroinitializer, float %5703, i32 0
  %5705 = insertelement <4 x float> %5704, float 0.000000e+00, i32 1
  %5706 = insertelement <4 x float> %5705, float 0.000000e+00, i32 2
  %5707 = insertelement <4 x float> %5706, float 0.000000e+00, i32 3
  %5708 = fmul <4 x float> %5701, %5707
  %5709 = fadd <4 x float> %5708, zeroinitializer
  %5710 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5711 = getelementptr inbounds i8, i8* %5710, i64 52
  %5712 = bitcast i8* %5711 to float*
  %5713 = load float, float* %5712, align 4
  %5714 = insertelement <4 x float> zeroinitializer, float %5713, i32 0
  %5715 = insertelement <4 x float> %5714, float 0.000000e+00, i32 1
  %5716 = insertelement <4 x float> %5715, float 0.000000e+00, i32 2
  %5717 = insertelement <4 x float> %5716, float 0.000000e+00, i32 3
  %5718 = getelementptr inbounds float, float* %0, i64 7
  %5719 = load float, float* %5718, align 4
  %5720 = insertelement <4 x float> zeroinitializer, float %5719, i32 0
  %5721 = insertelement <4 x float> %5720, float 0.000000e+00, i32 1
  %5722 = insertelement <4 x float> %5721, float 0.000000e+00, i32 2
  %5723 = insertelement <4 x float> %5722, float 0.000000e+00, i32 3
  %5724 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5717, <4 x float> %5723, <4 x float> %5709)
  %5725 = extractelement <4 x float> %5724, i32 0
  %5726 = getelementptr inbounds float, float* %2, i64 15
  store float %5725, float* %5726, align 4
  %5727 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5728 = getelementptr inbounds i8, i8* %5727, i64 48
  %5729 = bitcast i8* %5728 to float*
  %5730 = load float, float* %5729, align 4
  %5731 = insertelement <4 x float> zeroinitializer, float %5730, i32 0
  %5732 = insertelement <4 x float> %5731, float 1.000000e+00, i32 1
  %5733 = insertelement <4 x float> %5732, float 1.000000e+00, i32 2
  %5734 = insertelement <4 x float> %5733, float 1.000000e+00, i32 3
  %5735 = getelementptr inbounds float, float* %0, i64 3
  %5736 = load float, float* %5735, align 4
  %5737 = insertelement <4 x float> zeroinitializer, float %5736, i32 0
  %5738 = insertelement <4 x float> %5737, float 0.000000e+00, i32 1
  %5739 = insertelement <4 x float> %5738, float 0.000000e+00, i32 2
  %5740 = insertelement <4 x float> %5739, float 0.000000e+00, i32 3
  %5741 = fmul <4 x float> %5734, %5740
  %5742 = fadd <4 x float> %5741, zeroinitializer
  %5743 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5744 = getelementptr inbounds i8, i8* %5743, i64 52
  %5745 = bitcast i8* %5744 to float*
  %5746 = load float, float* %5745, align 4
  %5747 = insertelement <4 x float> zeroinitializer, float %5746, i32 0
  %5748 = insertelement <4 x float> %5747, float 1.000000e+00, i32 1
  %5749 = insertelement <4 x float> %5748, float 1.000000e+00, i32 2
  %5750 = insertelement <4 x float> %5749, float 1.000000e+00, i32 3
  %5751 = getelementptr inbounds float, float* %0, i64 7
  %5752 = load float, float* %5751, align 4
  %5753 = insertelement <4 x float> zeroinitializer, float %5752, i32 0
  %5754 = insertelement <4 x float> %5753, float 0.000000e+00, i32 1
  %5755 = insertelement <4 x float> %5754, float 0.000000e+00, i32 2
  %5756 = insertelement <4 x float> %5755, float 0.000000e+00, i32 3
  %5757 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5750, <4 x float> %5756, <4 x float> %5742)
  %5758 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5759 = getelementptr inbounds i8, i8* %5758, i64 56
  %5760 = bitcast i8* %5759 to float*
  %5761 = load float, float* %5760, align 4
  %5762 = insertelement <4 x float> zeroinitializer, float %5761, i32 0
  %5763 = insertelement <4 x float> %5762, float 0.000000e+00, i32 1
  %5764 = insertelement <4 x float> %5763, float 0.000000e+00, i32 2
  %5765 = insertelement <4 x float> %5764, float 0.000000e+00, i32 3
  %5766 = getelementptr inbounds float, float* %0, i64 11
  %5767 = load float, float* %5766, align 4
  %5768 = insertelement <4 x float> zeroinitializer, float %5767, i32 0
  %5769 = insertelement <4 x float> %5768, float 0.000000e+00, i32 1
  %5770 = insertelement <4 x float> %5769, float 0.000000e+00, i32 2
  %5771 = insertelement <4 x float> %5770, float 0.000000e+00, i32 3
  %5772 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5765, <4 x float> %5771, <4 x float> %5757)
  %5773 = extractelement <4 x float> %5772, i32 0
  %5774 = getelementptr inbounds float, float* %2, i64 15
  store float %5773, float* %5774, align 4
  %5775 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5776 = getelementptr inbounds i8, i8* %5775, i64 48
  %5777 = bitcast i8* %5776 to float*
  %5778 = load float, float* %5777, align 4
  %5779 = insertelement <4 x float> zeroinitializer, float %5778, i32 0
  %5780 = insertelement <4 x float> %5779, float 1.000000e+00, i32 1
  %5781 = insertelement <4 x float> %5780, float 1.000000e+00, i32 2
  %5782 = insertelement <4 x float> %5781, float 1.000000e+00, i32 3
  %5783 = getelementptr inbounds float, float* %0, i64 3
  %5784 = load float, float* %5783, align 4
  %5785 = insertelement <4 x float> zeroinitializer, float %5784, i32 0
  %5786 = insertelement <4 x float> %5785, float 0.000000e+00, i32 1
  %5787 = insertelement <4 x float> %5786, float 0.000000e+00, i32 2
  %5788 = insertelement <4 x float> %5787, float 0.000000e+00, i32 3
  %5789 = fmul <4 x float> %5782, %5788
  %5790 = fadd <4 x float> %5789, zeroinitializer
  %5791 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5792 = getelementptr inbounds i8, i8* %5791, i64 52
  %5793 = bitcast i8* %5792 to float*
  %5794 = load float, float* %5793, align 4
  %5795 = insertelement <4 x float> zeroinitializer, float %5794, i32 0
  %5796 = insertelement <4 x float> %5795, float 1.000000e+00, i32 1
  %5797 = insertelement <4 x float> %5796, float 1.000000e+00, i32 2
  %5798 = insertelement <4 x float> %5797, float 1.000000e+00, i32 3
  %5799 = getelementptr inbounds float, float* %0, i64 7
  %5800 = load float, float* %5799, align 4
  %5801 = insertelement <4 x float> zeroinitializer, float %5800, i32 0
  %5802 = insertelement <4 x float> %5801, float 0.000000e+00, i32 1
  %5803 = insertelement <4 x float> %5802, float 0.000000e+00, i32 2
  %5804 = insertelement <4 x float> %5803, float 0.000000e+00, i32 3
  %5805 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5798, <4 x float> %5804, <4 x float> %5790)
  %5806 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5807 = getelementptr inbounds i8, i8* %5806, i64 56
  %5808 = bitcast i8* %5807 to float*
  %5809 = load float, float* %5808, align 4
  %5810 = insertelement <4 x float> zeroinitializer, float %5809, i32 0
  %5811 = insertelement <4 x float> %5810, float 1.000000e+00, i32 1
  %5812 = insertelement <4 x float> %5811, float 1.000000e+00, i32 2
  %5813 = insertelement <4 x float> %5812, float 1.000000e+00, i32 3
  %5814 = getelementptr inbounds float, float* %0, i64 11
  %5815 = load float, float* %5814, align 4
  %5816 = insertelement <4 x float> zeroinitializer, float %5815, i32 0
  %5817 = insertelement <4 x float> %5816, float 0.000000e+00, i32 1
  %5818 = insertelement <4 x float> %5817, float 0.000000e+00, i32 2
  %5819 = insertelement <4 x float> %5818, float 0.000000e+00, i32 3
  %5820 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5813, <4 x float> %5819, <4 x float> %5805)
  %5821 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5822 = getelementptr inbounds i8, i8* %5821, i64 60
  %5823 = bitcast i8* %5822 to float*
  %5824 = load float, float* %5823, align 4
  %5825 = insertelement <4 x float> zeroinitializer, float %5824, i32 0
  %5826 = insertelement <4 x float> %5825, float 0.000000e+00, i32 1
  %5827 = insertelement <4 x float> %5826, float 0.000000e+00, i32 2
  %5828 = insertelement <4 x float> %5827, float 0.000000e+00, i32 3
  %5829 = getelementptr inbounds float, float* %0, i64 15
  %5830 = load float, float* %5829, align 4
  %5831 = insertelement <4 x float> zeroinitializer, float %5830, i32 0
  %5832 = insertelement <4 x float> %5831, float 0.000000e+00, i32 1
  %5833 = insertelement <4 x float> %5832, float 0.000000e+00, i32 2
  %5834 = insertelement <4 x float> %5833, float 0.000000e+00, i32 3
  %5835 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5828, <4 x float> %5834, <4 x float> %5820)
  %5836 = extractelement <4 x float> %5835, i32 0
  %5837 = getelementptr inbounds float, float* %2, i64 15
  store float %5836, float* %5837, align 4
  %5838 = getelementptr inbounds float, float* %2, i64 5
  %5839 = bitcast float* %5838 to i32*
  %5840 = load i32, i32* %5839, align 4
  %5841 = sitofp i32 %5840 to float
  %5842 = insertelement <4 x float> zeroinitializer, float %5841, i32 0
  %5843 = insertelement <4 x float> %5842, float 0.000000e+00, i32 1
  %5844 = insertelement <4 x float> %5843, float 0.000000e+00, i32 2
  %5845 = insertelement <4 x float> %5844, float 0.000000e+00, i32 3
  %5846 = extractelement <4 x float> %5845, i32 0
  %5847 = fptosi float %5846 to i32
  %5848 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5849 = bitcast i8* %5848 to i32*
  store i32 %5847, i32* %5849, align 4
  %5850 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5851 = getelementptr inbounds i8, i8* %5850, i64 20
  %5852 = bitcast i8* %5851 to i32*
  %5853 = load i32, i32* %5852, align 4
  %5854 = sitofp i32 %5853 to float
  %5855 = insertelement <4 x float> zeroinitializer, float %5854, i32 0
  %5856 = insertelement <4 x float> %5855, float 0.000000e+00, i32 1
  %5857 = insertelement <4 x float> %5856, float 0.000000e+00, i32 2
  %5858 = insertelement <4 x float> %5857, float 0.000000e+00, i32 3
  %5859 = extractelement <4 x float> %5858, i32 0
  %5860 = fptosi float %5859 to i32
  %5861 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5862 = bitcast i8* %5861 to i32*
  store i32 %5860, i32* %5862, align 4
  %5863 = getelementptr inbounds float, float* %2, i64 9
  %5864 = bitcast float* %5863 to i32*
  %5865 = load i32, i32* %5864, align 4
  %5866 = sitofp i32 %5865 to float
  %5867 = insertelement <4 x float> zeroinitializer, float %5866, i32 0
  %5868 = insertelement <4 x float> %5867, float 0.000000e+00, i32 1
  %5869 = insertelement <4 x float> %5868, float 0.000000e+00, i32 2
  %5870 = insertelement <4 x float> %5869, float 0.000000e+00, i32 3
  %5871 = extractelement <4 x float> %5870, i32 0
  %5872 = fptosi float %5871 to i32
  %5873 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5874 = getelementptr inbounds i8, i8* %5873, i64 4
  %5875 = bitcast i8* %5874 to i32*
  store i32 %5872, i32* %5875, align 4
  %5876 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5877 = getelementptr inbounds i8, i8* %5876, i64 36
  %5878 = bitcast i8* %5877 to i32*
  %5879 = load i32, i32* %5878, align 4
  %5880 = sitofp i32 %5879 to float
  %5881 = insertelement <4 x float> zeroinitializer, float %5880, i32 0
  %5882 = insertelement <4 x float> %5881, float 0.000000e+00, i32 1
  %5883 = insertelement <4 x float> %5882, float 0.000000e+00, i32 2
  %5884 = insertelement <4 x float> %5883, float 0.000000e+00, i32 3
  %5885 = extractelement <4 x float> %5884, i32 0
  %5886 = fptosi float %5885 to i32
  %5887 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5888 = getelementptr inbounds i8, i8* %5887, i64 4
  %5889 = bitcast i8* %5888 to i32*
  store i32 %5886, i32* %5889, align 4
  %5890 = getelementptr inbounds float, float* %2, i64 13
  %5891 = bitcast float* %5890 to i32*
  %5892 = load i32, i32* %5891, align 4
  %5893 = sitofp i32 %5892 to float
  %5894 = insertelement <4 x float> zeroinitializer, float %5893, i32 0
  %5895 = insertelement <4 x float> %5894, float 0.000000e+00, i32 1
  %5896 = insertelement <4 x float> %5895, float 0.000000e+00, i32 2
  %5897 = insertelement <4 x float> %5896, float 0.000000e+00, i32 3
  %5898 = extractelement <4 x float> %5897, i32 0
  %5899 = fptosi float %5898 to i32
  %5900 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5901 = getelementptr inbounds i8, i8* %5900, i64 8
  %5902 = bitcast i8* %5901 to i32*
  store i32 %5899, i32* %5902, align 4
  %5903 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5904 = getelementptr inbounds i8, i8* %5903, i64 52
  %5905 = bitcast i8* %5904 to i32*
  %5906 = load i32, i32* %5905, align 4
  %5907 = sitofp i32 %5906 to float
  %5908 = insertelement <4 x float> zeroinitializer, float %5907, i32 0
  %5909 = insertelement <4 x float> %5908, float 0.000000e+00, i32 1
  %5910 = insertelement <4 x float> %5909, float 0.000000e+00, i32 2
  %5911 = insertelement <4 x float> %5910, float 0.000000e+00, i32 3
  %5912 = extractelement <4 x float> %5911, i32 0
  %5913 = fptosi float %5912 to i32
  %5914 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5915 = getelementptr inbounds i8, i8* %5914, i64 8
  %5916 = bitcast i8* %5915 to i32*
  store i32 %5913, i32* %5916, align 4
  %5917 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5918 = bitcast i8* %5917 to float*
  %5919 = load float, float* %5918, align 4
  %5920 = insertelement <4 x float> zeroinitializer, float %5919, i32 0
  %5921 = insertelement <4 x float> %5920, float 0.000000e+00, i32 1
  %5922 = insertelement <4 x float> %5921, float 0.000000e+00, i32 2
  %5923 = insertelement <4 x float> %5922, float 0.000000e+00, i32 3
  %5924 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5925 = getelementptr inbounds i8, i8* %5924, i64 8
  %5926 = bitcast i8* %5925 to float*
  %5927 = load float, float* %5926, align 4
  %5928 = insertelement <4 x float> zeroinitializer, float %5927, i32 0
  %5929 = insertelement <4 x float> %5928, float 1.000000e+00, i32 1
  %5930 = insertelement <4 x float> %5929, float 1.000000e+00, i32 2
  %5931 = insertelement <4 x float> %5930, float 1.000000e+00, i32 3
  %5932 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5933 = getelementptr inbounds i8, i8* %5932, i64 8
  %5934 = bitcast i8* %5933 to float*
  %5935 = load float, float* %5934, align 4
  %5936 = insertelement <4 x float> zeroinitializer, float %5935, i32 0
  %5937 = insertelement <4 x float> %5936, float 0.000000e+00, i32 1
  %5938 = insertelement <4 x float> %5937, float 0.000000e+00, i32 2
  %5939 = insertelement <4 x float> %5938, float 0.000000e+00, i32 3
  %5940 = fmul <4 x float> %5931, %5939
  %5941 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5942 = getelementptr inbounds i8, i8* %5941, i64 4
  %5943 = bitcast i8* %5942 to float*
  %5944 = load float, float* %5943, align 4
  %5945 = insertelement <4 x float> zeroinitializer, float %5944, i32 0
  %5946 = insertelement <4 x float> %5945, float 1.000000e+00, i32 1
  %5947 = insertelement <4 x float> %5946, float 1.000000e+00, i32 2
  %5948 = insertelement <4 x float> %5947, float 1.000000e+00, i32 3
  %5949 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5950 = getelementptr inbounds i8, i8* %5949, i64 4
  %5951 = bitcast i8* %5950 to float*
  %5952 = load float, float* %5951, align 4
  %5953 = insertelement <4 x float> zeroinitializer, float %5952, i32 0
  %5954 = insertelement <4 x float> %5953, float 0.000000e+00, i32 1
  %5955 = insertelement <4 x float> %5954, float 0.000000e+00, i32 2
  %5956 = insertelement <4 x float> %5955, float 0.000000e+00, i32 3
  %5957 = fmul <4 x float> %5948, %5956
  %5958 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5959 = bitcast i8* %5958 to float*
  %5960 = load float, float* %5959, align 4
  %5961 = insertelement <4 x float> zeroinitializer, float %5960, i32 0
  %5962 = insertelement <4 x float> %5961, float 1.000000e+00, i32 1
  %5963 = insertelement <4 x float> %5962, float 1.000000e+00, i32 2
  %5964 = insertelement <4 x float> %5963, float 1.000000e+00, i32 3
  %5965 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5966 = bitcast i8* %5965 to float*
  %5967 = load float, float* %5966, align 4
  %5968 = insertelement <4 x float> zeroinitializer, float %5967, i32 0
  %5969 = insertelement <4 x float> %5968, float 0.000000e+00, i32 1
  %5970 = insertelement <4 x float> %5969, float 0.000000e+00, i32 2
  %5971 = insertelement <4 x float> %5970, float 0.000000e+00, i32 3
  %5972 = fmul <4 x float> %5964, %5971
  %5973 = fadd <4 x float> %5972, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %5974 = fadd <4 x float> %5957, %5973
  %5975 = fadd <4 x float> %5940, %5974
  %5976 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %5975)
  %5977 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5978 = bitcast i8* %5977 to float*
  %5979 = load float, float* %5978, align 4
  %5980 = fcmp olt float %5979, 0.000000e+00
  %5981 = sext i1 %5980 to i32
  %5982 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5983 = bitcast i8* %5982 to float*
  %5984 = load float, float* %5983, align 4
  %5985 = fcmp ogt float %5984, 0.000000e+00
  %5986 = zext i1 %5985 to i32
  %5987 = add nsw i32 %5981, %5986
  %5988 = sitofp i32 %5987 to float
  %5989 = insertelement <4 x float> zeroinitializer, float %5988, i32 0
  %5990 = insertelement <4 x float> %5989, float 0.000000e+00, i32 1
  %5991 = insertelement <4 x float> %5990, float 0.000000e+00, i32 2
  %5992 = insertelement <4 x float> %5991, float 0.000000e+00, i32 3
  %5993 = fneg <4 x float> %5992
  %5994 = fmul <4 x float> %5976, %5993
  %5995 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %5996 = bitcast i8* %5995 to float*
  %5997 = load float, float* %5996, align 4
  %5998 = insertelement <4 x float> zeroinitializer, float %5997, i32 0
  %5999 = insertelement <4 x float> %5998, float 0.000000e+00, i32 1
  %6000 = insertelement <4 x float> %5999, float 0.000000e+00, i32 2
  %6001 = insertelement <4 x float> %6000, float 0.000000e+00, i32 3
  %6002 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5994, <4 x float> %6001, <4 x float> %5923)
  %6003 = extractelement <4 x float> %6002, i32 0
  %6004 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6005 = bitcast i8* %6004 to float*
  store float %6003, float* %6005, align 4
  %6006 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6007 = getelementptr inbounds i8, i8* %6006, i64 4
  %6008 = bitcast i8* %6007 to float*
  %6009 = load float, float* %6008, align 4
  %6010 = insertelement <4 x float> zeroinitializer, float %6009, i32 0
  %6011 = insertelement <4 x float> %6010, float 0.000000e+00, i32 1
  %6012 = insertelement <4 x float> %6011, float 0.000000e+00, i32 2
  %6013 = insertelement <4 x float> %6012, float 0.000000e+00, i32 3
  %6014 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6015 = getelementptr inbounds i8, i8* %6014, i64 8
  %6016 = bitcast i8* %6015 to float*
  %6017 = load float, float* %6016, align 4
  %6018 = insertelement <4 x float> zeroinitializer, float %6017, i32 0
  %6019 = insertelement <4 x float> %6018, float 1.000000e+00, i32 1
  %6020 = insertelement <4 x float> %6019, float 1.000000e+00, i32 2
  %6021 = insertelement <4 x float> %6020, float 1.000000e+00, i32 3
  %6022 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6023 = getelementptr inbounds i8, i8* %6022, i64 8
  %6024 = bitcast i8* %6023 to float*
  %6025 = load float, float* %6024, align 4
  %6026 = insertelement <4 x float> zeroinitializer, float %6025, i32 0
  %6027 = insertelement <4 x float> %6026, float 0.000000e+00, i32 1
  %6028 = insertelement <4 x float> %6027, float 0.000000e+00, i32 2
  %6029 = insertelement <4 x float> %6028, float 0.000000e+00, i32 3
  %6030 = fmul <4 x float> %6021, %6029
  %6031 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6032 = getelementptr inbounds i8, i8* %6031, i64 4
  %6033 = bitcast i8* %6032 to float*
  %6034 = load float, float* %6033, align 4
  %6035 = insertelement <4 x float> zeroinitializer, float %6034, i32 0
  %6036 = insertelement <4 x float> %6035, float 1.000000e+00, i32 1
  %6037 = insertelement <4 x float> %6036, float 1.000000e+00, i32 2
  %6038 = insertelement <4 x float> %6037, float 1.000000e+00, i32 3
  %6039 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6040 = getelementptr inbounds i8, i8* %6039, i64 4
  %6041 = bitcast i8* %6040 to float*
  %6042 = load float, float* %6041, align 4
  %6043 = insertelement <4 x float> zeroinitializer, float %6042, i32 0
  %6044 = insertelement <4 x float> %6043, float 0.000000e+00, i32 1
  %6045 = insertelement <4 x float> %6044, float 0.000000e+00, i32 2
  %6046 = insertelement <4 x float> %6045, float 0.000000e+00, i32 3
  %6047 = fmul <4 x float> %6038, %6046
  %6048 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6049 = bitcast i8* %6048 to float*
  %6050 = load float, float* %6049, align 4
  %6051 = insertelement <4 x float> zeroinitializer, float %6050, i32 0
  %6052 = insertelement <4 x float> %6051, float 1.000000e+00, i32 1
  %6053 = insertelement <4 x float> %6052, float 1.000000e+00, i32 2
  %6054 = insertelement <4 x float> %6053, float 1.000000e+00, i32 3
  %6055 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6056 = bitcast i8* %6055 to float*
  %6057 = load float, float* %6056, align 4
  %6058 = insertelement <4 x float> zeroinitializer, float %6057, i32 0
  %6059 = insertelement <4 x float> %6058, float 0.000000e+00, i32 1
  %6060 = insertelement <4 x float> %6059, float 0.000000e+00, i32 2
  %6061 = insertelement <4 x float> %6060, float 0.000000e+00, i32 3
  %6062 = fmul <4 x float> %6054, %6061
  %6063 = fadd <4 x float> %6062, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %6064 = fadd <4 x float> %6047, %6063
  %6065 = fadd <4 x float> %6030, %6064
  %6066 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %6065)
  %6067 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6068 = bitcast i8* %6067 to float*
  %6069 = load float, float* %6068, align 4
  %6070 = fcmp olt float %6069, 0.000000e+00
  %6071 = sext i1 %6070 to i32
  %6072 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6073 = bitcast i8* %6072 to float*
  %6074 = load float, float* %6073, align 4
  %6075 = fcmp ogt float %6074, 0.000000e+00
  %6076 = zext i1 %6075 to i32
  %6077 = add nsw i32 %6071, %6076
  %6078 = sitofp i32 %6077 to float
  %6079 = insertelement <4 x float> zeroinitializer, float %6078, i32 0
  %6080 = insertelement <4 x float> %6079, float 0.000000e+00, i32 1
  %6081 = insertelement <4 x float> %6080, float 0.000000e+00, i32 2
  %6082 = insertelement <4 x float> %6081, float 0.000000e+00, i32 3
  %6083 = fneg <4 x float> %6082
  %6084 = fmul <4 x float> %6066, %6083
  %6085 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6086 = getelementptr inbounds i8, i8* %6085, i64 4
  %6087 = bitcast i8* %6086 to float*
  %6088 = load float, float* %6087, align 4
  %6089 = insertelement <4 x float> zeroinitializer, float %6088, i32 0
  %6090 = insertelement <4 x float> %6089, float 0.000000e+00, i32 1
  %6091 = insertelement <4 x float> %6090, float 0.000000e+00, i32 2
  %6092 = insertelement <4 x float> %6091, float 0.000000e+00, i32 3
  %6093 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6084, <4 x float> %6092, <4 x float> %6013)
  %6094 = extractelement <4 x float> %6093, i32 0
  %6095 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6096 = getelementptr inbounds i8, i8* %6095, i64 4
  %6097 = bitcast i8* %6096 to float*
  store float %6094, float* %6097, align 4
  %6098 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6099 = getelementptr inbounds i8, i8* %6098, i64 8
  %6100 = bitcast i8* %6099 to float*
  %6101 = load float, float* %6100, align 4
  %6102 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6103 = getelementptr inbounds i8, i8* %6102, i64 8
  %6104 = bitcast i8* %6103 to float*
  %6105 = load float, float* %6104, align 4
  %6106 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6107 = getelementptr inbounds i8, i8* %6106, i64 8
  %6108 = bitcast i8* %6107 to float*
  %6109 = load float, float* %6108, align 4
  %6110 = fmul float %6105, %6109
  %6111 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6112 = getelementptr inbounds i8, i8* %6111, i64 4
  %6113 = bitcast i8* %6112 to float*
  %6114 = load float, float* %6113, align 4
  %6115 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6116 = getelementptr inbounds i8, i8* %6115, i64 4
  %6117 = bitcast i8* %6116 to float*
  %6118 = load float, float* %6117, align 4
  %6119 = fmul float %6114, %6118
  %6120 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6121 = bitcast i8* %6120 to float*
  %6122 = load float, float* %6121, align 4
  %6123 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6124 = bitcast i8* %6123 to float*
  %6125 = load float, float* %6124, align 4
  %6126 = fmul float %6122, %6125
  %6127 = fadd float %6126, 0.000000e+00
  %6128 = fadd float %6119, %6127
  %6129 = fadd float %6110, %6128
  %6130 = call float @llvm.sqrt.f32(float %6129)
  %6131 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6132 = bitcast i8* %6131 to float*
  %6133 = load float, float* %6132, align 4
  %6134 = fcmp olt float %6133, 0.000000e+00
  %6135 = sext i1 %6134 to i32
  %6136 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6137 = bitcast i8* %6136 to float*
  %6138 = load float, float* %6137, align 4
  %6139 = fcmp ogt float %6138, 0.000000e+00
  %6140 = zext i1 %6139 to i32
  %6141 = add nsw i32 %6135, %6140
  %6142 = sitofp i32 %6141 to float
  %6143 = fneg float %6142
  %6144 = fmul float %6130, %6143
  %6145 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6146 = getelementptr inbounds i8, i8* %6145, i64 8
  %6147 = bitcast i8* %6146 to float*
  %6148 = load float, float* %6147, align 4
  %6149 = fmul float %6144, %6148
  %6150 = fadd float %6101, %6149
  %6151 = insertelement <4 x float> zeroinitializer, float %6150, i32 0
  %6152 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6153 = bitcast i8* %6152 to float*
  %6154 = load float, float* %6153, align 4
  %6155 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6156 = getelementptr inbounds i8, i8* %6155, i64 8
  %6157 = bitcast i8* %6156 to float*
  %6158 = load float, float* %6157, align 4
  %6159 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6160 = getelementptr inbounds i8, i8* %6159, i64 8
  %6161 = bitcast i8* %6160 to float*
  %6162 = load float, float* %6161, align 4
  %6163 = fmul float %6158, %6162
  %6164 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6165 = getelementptr inbounds i8, i8* %6164, i64 4
  %6166 = bitcast i8* %6165 to float*
  %6167 = load float, float* %6166, align 4
  %6168 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6169 = getelementptr inbounds i8, i8* %6168, i64 4
  %6170 = bitcast i8* %6169 to float*
  %6171 = load float, float* %6170, align 4
  %6172 = fmul float %6167, %6171
  %6173 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6174 = bitcast i8* %6173 to float*
  %6175 = load float, float* %6174, align 4
  %6176 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6177 = bitcast i8* %6176 to float*
  %6178 = load float, float* %6177, align 4
  %6179 = fmul float %6175, %6178
  %6180 = fadd float %6179, 0.000000e+00
  %6181 = fadd float %6172, %6180
  %6182 = fadd float %6163, %6181
  %6183 = call float @llvm.sqrt.f32(float %6182)
  %6184 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6185 = bitcast i8* %6184 to float*
  %6186 = load float, float* %6185, align 4
  %6187 = fcmp olt float %6186, 0.000000e+00
  %6188 = sext i1 %6187 to i32
  %6189 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6190 = bitcast i8* %6189 to float*
  %6191 = load float, float* %6190, align 4
  %6192 = fcmp ogt float %6191, 0.000000e+00
  %6193 = zext i1 %6192 to i32
  %6194 = add nsw i32 %6188, %6193
  %6195 = sitofp i32 %6194 to float
  %6196 = fneg float %6195
  %6197 = fmul float %6183, %6196
  %6198 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6199 = bitcast i8* %6198 to float*
  %6200 = load float, float* %6199, align 4
  %6201 = fmul float %6197, %6200
  %6202 = fadd float %6154, %6201
  %6203 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6204 = getelementptr inbounds i8, i8* %6203, i64 8
  %6205 = bitcast i8* %6204 to float*
  %6206 = load float, float* %6205, align 4
  %6207 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6208 = getelementptr inbounds i8, i8* %6207, i64 8
  %6209 = bitcast i8* %6208 to float*
  %6210 = load float, float* %6209, align 4
  %6211 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6212 = getelementptr inbounds i8, i8* %6211, i64 8
  %6213 = bitcast i8* %6212 to float*
  %6214 = load float, float* %6213, align 4
  %6215 = fmul float %6210, %6214
  %6216 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6217 = getelementptr inbounds i8, i8* %6216, i64 4
  %6218 = bitcast i8* %6217 to float*
  %6219 = load float, float* %6218, align 4
  %6220 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6221 = getelementptr inbounds i8, i8* %6220, i64 4
  %6222 = bitcast i8* %6221 to float*
  %6223 = load float, float* %6222, align 4
  %6224 = fmul float %6219, %6223
  %6225 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6226 = bitcast i8* %6225 to float*
  %6227 = load float, float* %6226, align 4
  %6228 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6229 = bitcast i8* %6228 to float*
  %6230 = load float, float* %6229, align 4
  %6231 = fmul float %6227, %6230
  %6232 = fadd float %6231, 0.000000e+00
  %6233 = fadd float %6224, %6232
  %6234 = fadd float %6215, %6233
  %6235 = call float @llvm.sqrt.f32(float %6234)
  %6236 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6237 = bitcast i8* %6236 to float*
  %6238 = load float, float* %6237, align 4
  %6239 = fcmp olt float %6238, 0.000000e+00
  %6240 = sext i1 %6239 to i32
  %6241 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6242 = bitcast i8* %6241 to float*
  %6243 = load float, float* %6242, align 4
  %6244 = fcmp ogt float %6243, 0.000000e+00
  %6245 = zext i1 %6244 to i32
  %6246 = add nsw i32 %6240, %6245
  %6247 = sitofp i32 %6246 to float
  %6248 = fneg float %6247
  %6249 = fmul float %6235, %6248
  %6250 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6251 = getelementptr inbounds i8, i8* %6250, i64 8
  %6252 = bitcast i8* %6251 to float*
  %6253 = load float, float* %6252, align 4
  %6254 = fmul float %6249, %6253
  %6255 = fadd float %6206, %6254
  %6256 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6257 = getelementptr inbounds i8, i8* %6256, i64 8
  %6258 = bitcast i8* %6257 to float*
  %6259 = load float, float* %6258, align 4
  %6260 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6261 = getelementptr inbounds i8, i8* %6260, i64 8
  %6262 = bitcast i8* %6261 to float*
  %6263 = load float, float* %6262, align 4
  %6264 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6265 = getelementptr inbounds i8, i8* %6264, i64 8
  %6266 = bitcast i8* %6265 to float*
  %6267 = load float, float* %6266, align 4
  %6268 = fmul float %6263, %6267
  %6269 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6270 = getelementptr inbounds i8, i8* %6269, i64 4
  %6271 = bitcast i8* %6270 to float*
  %6272 = load float, float* %6271, align 4
  %6273 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6274 = getelementptr inbounds i8, i8* %6273, i64 4
  %6275 = bitcast i8* %6274 to float*
  %6276 = load float, float* %6275, align 4
  %6277 = fmul float %6272, %6276
  %6278 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6279 = bitcast i8* %6278 to float*
  %6280 = load float, float* %6279, align 4
  %6281 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6282 = bitcast i8* %6281 to float*
  %6283 = load float, float* %6282, align 4
  %6284 = fmul float %6280, %6283
  %6285 = fadd float %6284, 0.000000e+00
  %6286 = fadd float %6277, %6285
  %6287 = fadd float %6268, %6286
  %6288 = call float @llvm.sqrt.f32(float %6287)
  %6289 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6290 = bitcast i8* %6289 to float*
  %6291 = load float, float* %6290, align 4
  %6292 = fcmp olt float %6291, 0.000000e+00
  %6293 = sext i1 %6292 to i32
  %6294 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6295 = bitcast i8* %6294 to float*
  %6296 = load float, float* %6295, align 4
  %6297 = fcmp ogt float %6296, 0.000000e+00
  %6298 = zext i1 %6297 to i32
  %6299 = add nsw i32 %6293, %6298
  %6300 = sitofp i32 %6299 to float
  %6301 = fneg float %6300
  %6302 = fmul float %6288, %6301
  %6303 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6304 = getelementptr inbounds i8, i8* %6303, i64 8
  %6305 = bitcast i8* %6304 to float*
  %6306 = load float, float* %6305, align 4
  %6307 = fmul float %6302, %6306
  %6308 = fadd float %6259, %6307
  %6309 = fmul float %6255, %6308
  %6310 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6311 = getelementptr inbounds i8, i8* %6310, i64 4
  %6312 = bitcast i8* %6311 to float*
  %6313 = load float, float* %6312, align 4
  %6314 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6315 = getelementptr inbounds i8, i8* %6314, i64 8
  %6316 = bitcast i8* %6315 to float*
  %6317 = load float, float* %6316, align 4
  %6318 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6319 = getelementptr inbounds i8, i8* %6318, i64 8
  %6320 = bitcast i8* %6319 to float*
  %6321 = load float, float* %6320, align 4
  %6322 = fmul float %6317, %6321
  %6323 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6324 = getelementptr inbounds i8, i8* %6323, i64 4
  %6325 = bitcast i8* %6324 to float*
  %6326 = load float, float* %6325, align 4
  %6327 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6328 = getelementptr inbounds i8, i8* %6327, i64 4
  %6329 = bitcast i8* %6328 to float*
  %6330 = load float, float* %6329, align 4
  %6331 = fmul float %6326, %6330
  %6332 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6333 = bitcast i8* %6332 to float*
  %6334 = load float, float* %6333, align 4
  %6335 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6336 = bitcast i8* %6335 to float*
  %6337 = load float, float* %6336, align 4
  %6338 = fmul float %6334, %6337
  %6339 = fadd float %6338, 0.000000e+00
  %6340 = fadd float %6331, %6339
  %6341 = fadd float %6322, %6340
  %6342 = call float @llvm.sqrt.f32(float %6341)
  %6343 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6344 = bitcast i8* %6343 to float*
  %6345 = load float, float* %6344, align 4
  %6346 = fcmp olt float %6345, 0.000000e+00
  %6347 = sext i1 %6346 to i32
  %6348 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6349 = bitcast i8* %6348 to float*
  %6350 = load float, float* %6349, align 4
  %6351 = fcmp ogt float %6350, 0.000000e+00
  %6352 = zext i1 %6351 to i32
  %6353 = add nsw i32 %6347, %6352
  %6354 = sitofp i32 %6353 to float
  %6355 = fneg float %6354
  %6356 = fmul float %6342, %6355
  %6357 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6358 = getelementptr inbounds i8, i8* %6357, i64 4
  %6359 = bitcast i8* %6358 to float*
  %6360 = load float, float* %6359, align 4
  %6361 = fmul float %6356, %6360
  %6362 = fadd float %6313, %6361
  %6363 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6364 = getelementptr inbounds i8, i8* %6363, i64 4
  %6365 = bitcast i8* %6364 to float*
  %6366 = load float, float* %6365, align 4
  %6367 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6368 = getelementptr inbounds i8, i8* %6367, i64 8
  %6369 = bitcast i8* %6368 to float*
  %6370 = load float, float* %6369, align 4
  %6371 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6372 = getelementptr inbounds i8, i8* %6371, i64 8
  %6373 = bitcast i8* %6372 to float*
  %6374 = load float, float* %6373, align 4
  %6375 = fmul float %6370, %6374
  %6376 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6377 = getelementptr inbounds i8, i8* %6376, i64 4
  %6378 = bitcast i8* %6377 to float*
  %6379 = load float, float* %6378, align 4
  %6380 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6381 = getelementptr inbounds i8, i8* %6380, i64 4
  %6382 = bitcast i8* %6381 to float*
  %6383 = load float, float* %6382, align 4
  %6384 = fmul float %6379, %6383
  %6385 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6386 = bitcast i8* %6385 to float*
  %6387 = load float, float* %6386, align 4
  %6388 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6389 = bitcast i8* %6388 to float*
  %6390 = load float, float* %6389, align 4
  %6391 = fmul float %6387, %6390
  %6392 = fadd float %6391, 0.000000e+00
  %6393 = fadd float %6384, %6392
  %6394 = fadd float %6375, %6393
  %6395 = call float @llvm.sqrt.f32(float %6394)
  %6396 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6397 = bitcast i8* %6396 to float*
  %6398 = load float, float* %6397, align 4
  %6399 = fcmp olt float %6398, 0.000000e+00
  %6400 = sext i1 %6399 to i32
  %6401 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6402 = bitcast i8* %6401 to float*
  %6403 = load float, float* %6402, align 4
  %6404 = fcmp ogt float %6403, 0.000000e+00
  %6405 = zext i1 %6404 to i32
  %6406 = add nsw i32 %6400, %6405
  %6407 = sitofp i32 %6406 to float
  %6408 = fneg float %6407
  %6409 = fmul float %6395, %6408
  %6410 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6411 = getelementptr inbounds i8, i8* %6410, i64 4
  %6412 = bitcast i8* %6411 to float*
  %6413 = load float, float* %6412, align 4
  %6414 = fmul float %6409, %6413
  %6415 = fadd float %6366, %6414
  %6416 = fmul float %6362, %6415
  %6417 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6418 = bitcast i8* %6417 to float*
  %6419 = load float, float* %6418, align 4
  %6420 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6421 = getelementptr inbounds i8, i8* %6420, i64 8
  %6422 = bitcast i8* %6421 to float*
  %6423 = load float, float* %6422, align 4
  %6424 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6425 = getelementptr inbounds i8, i8* %6424, i64 8
  %6426 = bitcast i8* %6425 to float*
  %6427 = load float, float* %6426, align 4
  %6428 = fmul float %6423, %6427
  %6429 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6430 = getelementptr inbounds i8, i8* %6429, i64 4
  %6431 = bitcast i8* %6430 to float*
  %6432 = load float, float* %6431, align 4
  %6433 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6434 = getelementptr inbounds i8, i8* %6433, i64 4
  %6435 = bitcast i8* %6434 to float*
  %6436 = load float, float* %6435, align 4
  %6437 = fmul float %6432, %6436
  %6438 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6439 = bitcast i8* %6438 to float*
  %6440 = load float, float* %6439, align 4
  %6441 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6442 = bitcast i8* %6441 to float*
  %6443 = load float, float* %6442, align 4
  %6444 = fmul float %6440, %6443
  %6445 = fadd float %6444, 0.000000e+00
  %6446 = fadd float %6437, %6445
  %6447 = fadd float %6428, %6446
  %6448 = call float @llvm.sqrt.f32(float %6447)
  %6449 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6450 = bitcast i8* %6449 to float*
  %6451 = load float, float* %6450, align 4
  %6452 = fcmp olt float %6451, 0.000000e+00
  %6453 = sext i1 %6452 to i32
  %6454 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6455 = bitcast i8* %6454 to float*
  %6456 = load float, float* %6455, align 4
  %6457 = fcmp ogt float %6456, 0.000000e+00
  %6458 = zext i1 %6457 to i32
  %6459 = add nsw i32 %6453, %6458
  %6460 = sitofp i32 %6459 to float
  %6461 = fneg float %6460
  %6462 = fmul float %6448, %6461
  %6463 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6464 = bitcast i8* %6463 to float*
  %6465 = load float, float* %6464, align 4
  %6466 = fmul float %6462, %6465
  %6467 = fadd float %6419, %6466
  %6468 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6469 = bitcast i8* %6468 to float*
  %6470 = load float, float* %6469, align 4
  %6471 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6472 = getelementptr inbounds i8, i8* %6471, i64 8
  %6473 = bitcast i8* %6472 to float*
  %6474 = load float, float* %6473, align 4
  %6475 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6476 = getelementptr inbounds i8, i8* %6475, i64 8
  %6477 = bitcast i8* %6476 to float*
  %6478 = load float, float* %6477, align 4
  %6479 = fmul float %6474, %6478
  %6480 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6481 = getelementptr inbounds i8, i8* %6480, i64 4
  %6482 = bitcast i8* %6481 to float*
  %6483 = load float, float* %6482, align 4
  %6484 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6485 = getelementptr inbounds i8, i8* %6484, i64 4
  %6486 = bitcast i8* %6485 to float*
  %6487 = load float, float* %6486, align 4
  %6488 = fmul float %6483, %6487
  %6489 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6490 = bitcast i8* %6489 to float*
  %6491 = load float, float* %6490, align 4
  %6492 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6493 = bitcast i8* %6492 to float*
  %6494 = load float, float* %6493, align 4
  %6495 = fmul float %6491, %6494
  %6496 = fadd float %6495, 0.000000e+00
  %6497 = fadd float %6488, %6496
  %6498 = fadd float %6479, %6497
  %6499 = call float @llvm.sqrt.f32(float %6498)
  %6500 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6501 = bitcast i8* %6500 to float*
  %6502 = load float, float* %6501, align 4
  %6503 = fcmp olt float %6502, 0.000000e+00
  %6504 = sext i1 %6503 to i32
  %6505 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6506 = bitcast i8* %6505 to float*
  %6507 = load float, float* %6506, align 4
  %6508 = fcmp ogt float %6507, 0.000000e+00
  %6509 = zext i1 %6508 to i32
  %6510 = add nsw i32 %6504, %6509
  %6511 = sitofp i32 %6510 to float
  %6512 = fneg float %6511
  %6513 = fmul float %6499, %6512
  %6514 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6515 = bitcast i8* %6514 to float*
  %6516 = load float, float* %6515, align 4
  %6517 = fmul float %6513, %6516
  %6518 = fadd float %6470, %6517
  %6519 = fmul float %6467, %6518
  %6520 = fadd float %6519, 0.000000e+00
  %6521 = fadd float %6416, %6520
  %6522 = fadd float %6309, %6521
  %6523 = call float @llvm.sqrt.f32(float %6522)
  %6524 = fdiv float %6202, %6523
  %6525 = insertelement <4 x float> %6151, float %6524, i32 1
  %6526 = insertelement <4 x float> %6525, float 0.000000e+00, i32 2
  %6527 = insertelement <4 x float> %6526, float 0.000000e+00, i32 3
  %6528 = extractelement <4 x float> %6527, i32 0
  %6529 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6530 = getelementptr inbounds i8, i8* %6529, i64 8
  %6531 = bitcast i8* %6530 to float*
  store float %6528, float* %6531, align 4
  %6532 = extractelement <4 x float> %6527, i32 1
  %6533 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6534 = bitcast i8* %6533 to float*
  store float %6532, float* %6534, align 4
  %6535 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6536 = getelementptr inbounds i8, i8* %6535, i64 4
  %6537 = bitcast i8* %6536 to float*
  %6538 = load float, float* %6537, align 4
  %6539 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6540 = getelementptr inbounds i8, i8* %6539, i64 8
  %6541 = bitcast i8* %6540 to float*
  %6542 = load float, float* %6541, align 4
  %6543 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6544 = getelementptr inbounds i8, i8* %6543, i64 8
  %6545 = bitcast i8* %6544 to float*
  %6546 = load float, float* %6545, align 4
  %6547 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6548 = getelementptr inbounds i8, i8* %6547, i64 8
  %6549 = bitcast i8* %6548 to float*
  %6550 = load float, float* %6549, align 4
  %6551 = fmul float %6546, %6550
  %6552 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6553 = getelementptr inbounds i8, i8* %6552, i64 4
  %6554 = bitcast i8* %6553 to float*
  %6555 = load float, float* %6554, align 4
  %6556 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6557 = getelementptr inbounds i8, i8* %6556, i64 4
  %6558 = bitcast i8* %6557 to float*
  %6559 = load float, float* %6558, align 4
  %6560 = fmul float %6555, %6559
  %6561 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6562 = bitcast i8* %6561 to float*
  %6563 = load float, float* %6562, align 4
  %6564 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6565 = bitcast i8* %6564 to float*
  %6566 = load float, float* %6565, align 4
  %6567 = fmul float %6563, %6566
  %6568 = fadd float %6567, 0.000000e+00
  %6569 = fadd float %6560, %6568
  %6570 = fadd float %6551, %6569
  %6571 = call float @llvm.sqrt.f32(float %6570)
  %6572 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6573 = bitcast i8* %6572 to float*
  %6574 = load float, float* %6573, align 4
  %6575 = fcmp olt float %6574, 0.000000e+00
  %6576 = sext i1 %6575 to i32
  %6577 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6578 = bitcast i8* %6577 to float*
  %6579 = load float, float* %6578, align 4
  %6580 = fcmp ogt float %6579, 0.000000e+00
  %6581 = zext i1 %6580 to i32
  %6582 = add nsw i32 %6576, %6581
  %6583 = sitofp i32 %6582 to float
  %6584 = fneg float %6583
  %6585 = fmul float %6571, %6584
  %6586 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6587 = getelementptr inbounds i8, i8* %6586, i64 8
  %6588 = bitcast i8* %6587 to float*
  %6589 = load float, float* %6588, align 4
  %6590 = fmul float %6585, %6589
  %6591 = fadd float %6542, %6590
  %6592 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6593 = getelementptr inbounds i8, i8* %6592, i64 8
  %6594 = bitcast i8* %6593 to float*
  %6595 = load float, float* %6594, align 4
  %6596 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6597 = getelementptr inbounds i8, i8* %6596, i64 8
  %6598 = bitcast i8* %6597 to float*
  %6599 = load float, float* %6598, align 4
  %6600 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6601 = getelementptr inbounds i8, i8* %6600, i64 8
  %6602 = bitcast i8* %6601 to float*
  %6603 = load float, float* %6602, align 4
  %6604 = fmul float %6599, %6603
  %6605 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6606 = getelementptr inbounds i8, i8* %6605, i64 4
  %6607 = bitcast i8* %6606 to float*
  %6608 = load float, float* %6607, align 4
  %6609 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6610 = getelementptr inbounds i8, i8* %6609, i64 4
  %6611 = bitcast i8* %6610 to float*
  %6612 = load float, float* %6611, align 4
  %6613 = fmul float %6608, %6612
  %6614 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6615 = bitcast i8* %6614 to float*
  %6616 = load float, float* %6615, align 4
  %6617 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6618 = bitcast i8* %6617 to float*
  %6619 = load float, float* %6618, align 4
  %6620 = fmul float %6616, %6619
  %6621 = fadd float %6620, 0.000000e+00
  %6622 = fadd float %6613, %6621
  %6623 = fadd float %6604, %6622
  %6624 = call float @llvm.sqrt.f32(float %6623)
  %6625 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6626 = bitcast i8* %6625 to float*
  %6627 = load float, float* %6626, align 4
  %6628 = fcmp olt float %6627, 0.000000e+00
  %6629 = sext i1 %6628 to i32
  %6630 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6631 = bitcast i8* %6630 to float*
  %6632 = load float, float* %6631, align 4
  %6633 = fcmp ogt float %6632, 0.000000e+00
  %6634 = zext i1 %6633 to i32
  %6635 = add nsw i32 %6629, %6634
  %6636 = sitofp i32 %6635 to float
  %6637 = fneg float %6636
  %6638 = fmul float %6624, %6637
  %6639 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6640 = getelementptr inbounds i8, i8* %6639, i64 8
  %6641 = bitcast i8* %6640 to float*
  %6642 = load float, float* %6641, align 4
  %6643 = fmul float %6638, %6642
  %6644 = fadd float %6595, %6643
  %6645 = fmul float %6591, %6644
  %6646 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6647 = getelementptr inbounds i8, i8* %6646, i64 4
  %6648 = bitcast i8* %6647 to float*
  %6649 = load float, float* %6648, align 4
  %6650 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6651 = getelementptr inbounds i8, i8* %6650, i64 8
  %6652 = bitcast i8* %6651 to float*
  %6653 = load float, float* %6652, align 4
  %6654 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6655 = getelementptr inbounds i8, i8* %6654, i64 8
  %6656 = bitcast i8* %6655 to float*
  %6657 = load float, float* %6656, align 4
  %6658 = fmul float %6653, %6657
  %6659 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6660 = getelementptr inbounds i8, i8* %6659, i64 4
  %6661 = bitcast i8* %6660 to float*
  %6662 = load float, float* %6661, align 4
  %6663 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6664 = getelementptr inbounds i8, i8* %6663, i64 4
  %6665 = bitcast i8* %6664 to float*
  %6666 = load float, float* %6665, align 4
  %6667 = fmul float %6662, %6666
  %6668 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6669 = bitcast i8* %6668 to float*
  %6670 = load float, float* %6669, align 4
  %6671 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6672 = bitcast i8* %6671 to float*
  %6673 = load float, float* %6672, align 4
  %6674 = fmul float %6670, %6673
  %6675 = fadd float %6674, 0.000000e+00
  %6676 = fadd float %6667, %6675
  %6677 = fadd float %6658, %6676
  %6678 = call float @llvm.sqrt.f32(float %6677)
  %6679 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6680 = bitcast i8* %6679 to float*
  %6681 = load float, float* %6680, align 4
  %6682 = fcmp olt float %6681, 0.000000e+00
  %6683 = sext i1 %6682 to i32
  %6684 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6685 = bitcast i8* %6684 to float*
  %6686 = load float, float* %6685, align 4
  %6687 = fcmp ogt float %6686, 0.000000e+00
  %6688 = zext i1 %6687 to i32
  %6689 = add nsw i32 %6683, %6688
  %6690 = sitofp i32 %6689 to float
  %6691 = fneg float %6690
  %6692 = fmul float %6678, %6691
  %6693 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6694 = getelementptr inbounds i8, i8* %6693, i64 4
  %6695 = bitcast i8* %6694 to float*
  %6696 = load float, float* %6695, align 4
  %6697 = fmul float %6692, %6696
  %6698 = fadd float %6649, %6697
  %6699 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6700 = getelementptr inbounds i8, i8* %6699, i64 4
  %6701 = bitcast i8* %6700 to float*
  %6702 = load float, float* %6701, align 4
  %6703 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6704 = getelementptr inbounds i8, i8* %6703, i64 8
  %6705 = bitcast i8* %6704 to float*
  %6706 = load float, float* %6705, align 4
  %6707 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6708 = getelementptr inbounds i8, i8* %6707, i64 8
  %6709 = bitcast i8* %6708 to float*
  %6710 = load float, float* %6709, align 4
  %6711 = fmul float %6706, %6710
  %6712 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6713 = getelementptr inbounds i8, i8* %6712, i64 4
  %6714 = bitcast i8* %6713 to float*
  %6715 = load float, float* %6714, align 4
  %6716 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6717 = getelementptr inbounds i8, i8* %6716, i64 4
  %6718 = bitcast i8* %6717 to float*
  %6719 = load float, float* %6718, align 4
  %6720 = fmul float %6715, %6719
  %6721 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6722 = bitcast i8* %6721 to float*
  %6723 = load float, float* %6722, align 4
  %6724 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6725 = bitcast i8* %6724 to float*
  %6726 = load float, float* %6725, align 4
  %6727 = fmul float %6723, %6726
  %6728 = fadd float %6727, 0.000000e+00
  %6729 = fadd float %6720, %6728
  %6730 = fadd float %6711, %6729
  %6731 = call float @llvm.sqrt.f32(float %6730)
  %6732 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6733 = bitcast i8* %6732 to float*
  %6734 = load float, float* %6733, align 4
  %6735 = fcmp olt float %6734, 0.000000e+00
  %6736 = sext i1 %6735 to i32
  %6737 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6738 = bitcast i8* %6737 to float*
  %6739 = load float, float* %6738, align 4
  %6740 = fcmp ogt float %6739, 0.000000e+00
  %6741 = zext i1 %6740 to i32
  %6742 = add nsw i32 %6736, %6741
  %6743 = sitofp i32 %6742 to float
  %6744 = fneg float %6743
  %6745 = fmul float %6731, %6744
  %6746 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6747 = getelementptr inbounds i8, i8* %6746, i64 4
  %6748 = bitcast i8* %6747 to float*
  %6749 = load float, float* %6748, align 4
  %6750 = fmul float %6745, %6749
  %6751 = fadd float %6702, %6750
  %6752 = fmul float %6698, %6751
  %6753 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6754 = bitcast i8* %6753 to float*
  %6755 = load float, float* %6754, align 4
  %6756 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6757 = getelementptr inbounds i8, i8* %6756, i64 8
  %6758 = bitcast i8* %6757 to float*
  %6759 = load float, float* %6758, align 4
  %6760 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6761 = getelementptr inbounds i8, i8* %6760, i64 8
  %6762 = bitcast i8* %6761 to float*
  %6763 = load float, float* %6762, align 4
  %6764 = fmul float %6759, %6763
  %6765 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6766 = getelementptr inbounds i8, i8* %6765, i64 4
  %6767 = bitcast i8* %6766 to float*
  %6768 = load float, float* %6767, align 4
  %6769 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6770 = getelementptr inbounds i8, i8* %6769, i64 4
  %6771 = bitcast i8* %6770 to float*
  %6772 = load float, float* %6771, align 4
  %6773 = fmul float %6768, %6772
  %6774 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6775 = bitcast i8* %6774 to float*
  %6776 = load float, float* %6775, align 4
  %6777 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6778 = bitcast i8* %6777 to float*
  %6779 = load float, float* %6778, align 4
  %6780 = fmul float %6776, %6779
  %6781 = fadd float %6780, 0.000000e+00
  %6782 = fadd float %6773, %6781
  %6783 = fadd float %6764, %6782
  %6784 = call float @llvm.sqrt.f32(float %6783)
  %6785 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6786 = bitcast i8* %6785 to float*
  %6787 = load float, float* %6786, align 4
  %6788 = fcmp olt float %6787, 0.000000e+00
  %6789 = sext i1 %6788 to i32
  %6790 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6791 = bitcast i8* %6790 to float*
  %6792 = load float, float* %6791, align 4
  %6793 = fcmp ogt float %6792, 0.000000e+00
  %6794 = zext i1 %6793 to i32
  %6795 = add nsw i32 %6789, %6794
  %6796 = sitofp i32 %6795 to float
  %6797 = fneg float %6796
  %6798 = fmul float %6784, %6797
  %6799 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6800 = bitcast i8* %6799 to float*
  %6801 = load float, float* %6800, align 4
  %6802 = fmul float %6798, %6801
  %6803 = fadd float %6755, %6802
  %6804 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6805 = bitcast i8* %6804 to float*
  %6806 = load float, float* %6805, align 4
  %6807 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6808 = getelementptr inbounds i8, i8* %6807, i64 8
  %6809 = bitcast i8* %6808 to float*
  %6810 = load float, float* %6809, align 4
  %6811 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6812 = getelementptr inbounds i8, i8* %6811, i64 8
  %6813 = bitcast i8* %6812 to float*
  %6814 = load float, float* %6813, align 4
  %6815 = fmul float %6810, %6814
  %6816 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6817 = getelementptr inbounds i8, i8* %6816, i64 4
  %6818 = bitcast i8* %6817 to float*
  %6819 = load float, float* %6818, align 4
  %6820 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6821 = getelementptr inbounds i8, i8* %6820, i64 4
  %6822 = bitcast i8* %6821 to float*
  %6823 = load float, float* %6822, align 4
  %6824 = fmul float %6819, %6823
  %6825 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6826 = bitcast i8* %6825 to float*
  %6827 = load float, float* %6826, align 4
  %6828 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6829 = bitcast i8* %6828 to float*
  %6830 = load float, float* %6829, align 4
  %6831 = fmul float %6827, %6830
  %6832 = fadd float %6831, 0.000000e+00
  %6833 = fadd float %6824, %6832
  %6834 = fadd float %6815, %6833
  %6835 = call float @llvm.sqrt.f32(float %6834)
  %6836 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6837 = bitcast i8* %6836 to float*
  %6838 = load float, float* %6837, align 4
  %6839 = fcmp olt float %6838, 0.000000e+00
  %6840 = sext i1 %6839 to i32
  %6841 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6842 = bitcast i8* %6841 to float*
  %6843 = load float, float* %6842, align 4
  %6844 = fcmp ogt float %6843, 0.000000e+00
  %6845 = zext i1 %6844 to i32
  %6846 = add nsw i32 %6840, %6845
  %6847 = sitofp i32 %6846 to float
  %6848 = fneg float %6847
  %6849 = fmul float %6835, %6848
  %6850 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6851 = bitcast i8* %6850 to float*
  %6852 = load float, float* %6851, align 4
  %6853 = fmul float %6849, %6852
  %6854 = fadd float %6806, %6853
  %6855 = fmul float %6803, %6854
  %6856 = fadd float %6855, 0.000000e+00
  %6857 = fadd float %6752, %6856
  %6858 = fadd float %6645, %6857
  %6859 = call float @llvm.sqrt.f32(float %6858)
  %6860 = fdiv float %6538, %6859
  %6861 = insertelement <4 x float> zeroinitializer, float %6860, i32 0
  %6862 = insertelement <4 x float> %6861, float 0.000000e+00, i32 1
  %6863 = insertelement <4 x float> %6862, float 0.000000e+00, i32 2
  %6864 = insertelement <4 x float> %6863, float 0.000000e+00, i32 3
  %6865 = extractelement <4 x float> %6864, i32 0
  %6866 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6867 = getelementptr inbounds i8, i8* %6866, i64 4
  %6868 = bitcast i8* %6867 to float*
  store float %6865, float* %6868, align 4
  %6869 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6870 = getelementptr inbounds i8, i8* %6869, i64 8
  %6871 = bitcast i8* %6870 to float*
  %6872 = load float, float* %6871, align 4
  %6873 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6874 = getelementptr inbounds i8, i8* %6873, i64 8
  %6875 = bitcast i8* %6874 to float*
  %6876 = load float, float* %6875, align 4
  %6877 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6878 = getelementptr inbounds i8, i8* %6877, i64 8
  %6879 = bitcast i8* %6878 to float*
  %6880 = load float, float* %6879, align 4
  %6881 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6882 = getelementptr inbounds i8, i8* %6881, i64 8
  %6883 = bitcast i8* %6882 to float*
  %6884 = load float, float* %6883, align 4
  %6885 = fmul float %6880, %6884
  %6886 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6887 = getelementptr inbounds i8, i8* %6886, i64 4
  %6888 = bitcast i8* %6887 to float*
  %6889 = load float, float* %6888, align 4
  %6890 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6891 = getelementptr inbounds i8, i8* %6890, i64 4
  %6892 = bitcast i8* %6891 to float*
  %6893 = load float, float* %6892, align 4
  %6894 = fmul float %6889, %6893
  %6895 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6896 = bitcast i8* %6895 to float*
  %6897 = load float, float* %6896, align 4
  %6898 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6899 = bitcast i8* %6898 to float*
  %6900 = load float, float* %6899, align 4
  %6901 = fmul float %6897, %6900
  %6902 = fadd float %6901, 0.000000e+00
  %6903 = fadd float %6894, %6902
  %6904 = fadd float %6885, %6903
  %6905 = call float @llvm.sqrt.f32(float %6904)
  %6906 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6907 = bitcast i8* %6906 to float*
  %6908 = load float, float* %6907, align 4
  %6909 = fcmp olt float %6908, 0.000000e+00
  %6910 = sext i1 %6909 to i32
  %6911 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6912 = bitcast i8* %6911 to float*
  %6913 = load float, float* %6912, align 4
  %6914 = fcmp ogt float %6913, 0.000000e+00
  %6915 = zext i1 %6914 to i32
  %6916 = add nsw i32 %6910, %6915
  %6917 = sitofp i32 %6916 to float
  %6918 = fneg float %6917
  %6919 = fmul float %6905, %6918
  %6920 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6921 = getelementptr inbounds i8, i8* %6920, i64 8
  %6922 = bitcast i8* %6921 to float*
  %6923 = load float, float* %6922, align 4
  %6924 = fmul float %6919, %6923
  %6925 = fadd float %6876, %6924
  %6926 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6927 = getelementptr inbounds i8, i8* %6926, i64 8
  %6928 = bitcast i8* %6927 to float*
  %6929 = load float, float* %6928, align 4
  %6930 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6931 = getelementptr inbounds i8, i8* %6930, i64 8
  %6932 = bitcast i8* %6931 to float*
  %6933 = load float, float* %6932, align 4
  %6934 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6935 = getelementptr inbounds i8, i8* %6934, i64 8
  %6936 = bitcast i8* %6935 to float*
  %6937 = load float, float* %6936, align 4
  %6938 = fmul float %6933, %6937
  %6939 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6940 = getelementptr inbounds i8, i8* %6939, i64 4
  %6941 = bitcast i8* %6940 to float*
  %6942 = load float, float* %6941, align 4
  %6943 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6944 = getelementptr inbounds i8, i8* %6943, i64 4
  %6945 = bitcast i8* %6944 to float*
  %6946 = load float, float* %6945, align 4
  %6947 = fmul float %6942, %6946
  %6948 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6949 = bitcast i8* %6948 to float*
  %6950 = load float, float* %6949, align 4
  %6951 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6952 = bitcast i8* %6951 to float*
  %6953 = load float, float* %6952, align 4
  %6954 = fmul float %6950, %6953
  %6955 = fadd float %6954, 0.000000e+00
  %6956 = fadd float %6947, %6955
  %6957 = fadd float %6938, %6956
  %6958 = call float @llvm.sqrt.f32(float %6957)
  %6959 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6960 = bitcast i8* %6959 to float*
  %6961 = load float, float* %6960, align 4
  %6962 = fcmp olt float %6961, 0.000000e+00
  %6963 = sext i1 %6962 to i32
  %6964 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6965 = bitcast i8* %6964 to float*
  %6966 = load float, float* %6965, align 4
  %6967 = fcmp ogt float %6966, 0.000000e+00
  %6968 = zext i1 %6967 to i32
  %6969 = add nsw i32 %6963, %6968
  %6970 = sitofp i32 %6969 to float
  %6971 = fneg float %6970
  %6972 = fmul float %6958, %6971
  %6973 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6974 = getelementptr inbounds i8, i8* %6973, i64 8
  %6975 = bitcast i8* %6974 to float*
  %6976 = load float, float* %6975, align 4
  %6977 = fmul float %6972, %6976
  %6978 = fadd float %6929, %6977
  %6979 = fmul float %6925, %6978
  %6980 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6981 = getelementptr inbounds i8, i8* %6980, i64 4
  %6982 = bitcast i8* %6981 to float*
  %6983 = load float, float* %6982, align 4
  %6984 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6985 = getelementptr inbounds i8, i8* %6984, i64 8
  %6986 = bitcast i8* %6985 to float*
  %6987 = load float, float* %6986, align 4
  %6988 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6989 = getelementptr inbounds i8, i8* %6988, i64 8
  %6990 = bitcast i8* %6989 to float*
  %6991 = load float, float* %6990, align 4
  %6992 = fmul float %6987, %6991
  %6993 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6994 = getelementptr inbounds i8, i8* %6993, i64 4
  %6995 = bitcast i8* %6994 to float*
  %6996 = load float, float* %6995, align 4
  %6997 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %6998 = getelementptr inbounds i8, i8* %6997, i64 4
  %6999 = bitcast i8* %6998 to float*
  %7000 = load float, float* %6999, align 4
  %7001 = fmul float %6996, %7000
  %7002 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7003 = bitcast i8* %7002 to float*
  %7004 = load float, float* %7003, align 4
  %7005 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7006 = bitcast i8* %7005 to float*
  %7007 = load float, float* %7006, align 4
  %7008 = fmul float %7004, %7007
  %7009 = fadd float %7008, 0.000000e+00
  %7010 = fadd float %7001, %7009
  %7011 = fadd float %6992, %7010
  %7012 = call float @llvm.sqrt.f32(float %7011)
  %7013 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7014 = bitcast i8* %7013 to float*
  %7015 = load float, float* %7014, align 4
  %7016 = fcmp olt float %7015, 0.000000e+00
  %7017 = sext i1 %7016 to i32
  %7018 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7019 = bitcast i8* %7018 to float*
  %7020 = load float, float* %7019, align 4
  %7021 = fcmp ogt float %7020, 0.000000e+00
  %7022 = zext i1 %7021 to i32
  %7023 = add nsw i32 %7017, %7022
  %7024 = sitofp i32 %7023 to float
  %7025 = fneg float %7024
  %7026 = fmul float %7012, %7025
  %7027 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7028 = getelementptr inbounds i8, i8* %7027, i64 4
  %7029 = bitcast i8* %7028 to float*
  %7030 = load float, float* %7029, align 4
  %7031 = fmul float %7026, %7030
  %7032 = fadd float %6983, %7031
  %7033 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7034 = getelementptr inbounds i8, i8* %7033, i64 4
  %7035 = bitcast i8* %7034 to float*
  %7036 = load float, float* %7035, align 4
  %7037 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7038 = getelementptr inbounds i8, i8* %7037, i64 8
  %7039 = bitcast i8* %7038 to float*
  %7040 = load float, float* %7039, align 4
  %7041 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7042 = getelementptr inbounds i8, i8* %7041, i64 8
  %7043 = bitcast i8* %7042 to float*
  %7044 = load float, float* %7043, align 4
  %7045 = fmul float %7040, %7044
  %7046 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7047 = getelementptr inbounds i8, i8* %7046, i64 4
  %7048 = bitcast i8* %7047 to float*
  %7049 = load float, float* %7048, align 4
  %7050 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7051 = getelementptr inbounds i8, i8* %7050, i64 4
  %7052 = bitcast i8* %7051 to float*
  %7053 = load float, float* %7052, align 4
  %7054 = fmul float %7049, %7053
  %7055 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7056 = bitcast i8* %7055 to float*
  %7057 = load float, float* %7056, align 4
  %7058 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7059 = bitcast i8* %7058 to float*
  %7060 = load float, float* %7059, align 4
  %7061 = fmul float %7057, %7060
  %7062 = fadd float %7061, 0.000000e+00
  %7063 = fadd float %7054, %7062
  %7064 = fadd float %7045, %7063
  %7065 = call float @llvm.sqrt.f32(float %7064)
  %7066 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7067 = bitcast i8* %7066 to float*
  %7068 = load float, float* %7067, align 4
  %7069 = fcmp olt float %7068, 0.000000e+00
  %7070 = sext i1 %7069 to i32
  %7071 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7072 = bitcast i8* %7071 to float*
  %7073 = load float, float* %7072, align 4
  %7074 = fcmp ogt float %7073, 0.000000e+00
  %7075 = zext i1 %7074 to i32
  %7076 = add nsw i32 %7070, %7075
  %7077 = sitofp i32 %7076 to float
  %7078 = fneg float %7077
  %7079 = fmul float %7065, %7078
  %7080 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7081 = getelementptr inbounds i8, i8* %7080, i64 4
  %7082 = bitcast i8* %7081 to float*
  %7083 = load float, float* %7082, align 4
  %7084 = fmul float %7079, %7083
  %7085 = fadd float %7036, %7084
  %7086 = fmul float %7032, %7085
  %7087 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7088 = bitcast i8* %7087 to float*
  %7089 = load float, float* %7088, align 4
  %7090 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7091 = getelementptr inbounds i8, i8* %7090, i64 8
  %7092 = bitcast i8* %7091 to float*
  %7093 = load float, float* %7092, align 4
  %7094 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7095 = getelementptr inbounds i8, i8* %7094, i64 8
  %7096 = bitcast i8* %7095 to float*
  %7097 = load float, float* %7096, align 4
  %7098 = fmul float %7093, %7097
  %7099 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7100 = getelementptr inbounds i8, i8* %7099, i64 4
  %7101 = bitcast i8* %7100 to float*
  %7102 = load float, float* %7101, align 4
  %7103 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7104 = getelementptr inbounds i8, i8* %7103, i64 4
  %7105 = bitcast i8* %7104 to float*
  %7106 = load float, float* %7105, align 4
  %7107 = fmul float %7102, %7106
  %7108 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7109 = bitcast i8* %7108 to float*
  %7110 = load float, float* %7109, align 4
  %7111 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7112 = bitcast i8* %7111 to float*
  %7113 = load float, float* %7112, align 4
  %7114 = fmul float %7110, %7113
  %7115 = fadd float %7114, 0.000000e+00
  %7116 = fadd float %7107, %7115
  %7117 = fadd float %7098, %7116
  %7118 = call float @llvm.sqrt.f32(float %7117)
  %7119 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7120 = bitcast i8* %7119 to float*
  %7121 = load float, float* %7120, align 4
  %7122 = fcmp olt float %7121, 0.000000e+00
  %7123 = sext i1 %7122 to i32
  %7124 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7125 = bitcast i8* %7124 to float*
  %7126 = load float, float* %7125, align 4
  %7127 = fcmp ogt float %7126, 0.000000e+00
  %7128 = zext i1 %7127 to i32
  %7129 = add nsw i32 %7123, %7128
  %7130 = sitofp i32 %7129 to float
  %7131 = fneg float %7130
  %7132 = fmul float %7118, %7131
  %7133 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7134 = bitcast i8* %7133 to float*
  %7135 = load float, float* %7134, align 4
  %7136 = fmul float %7132, %7135
  %7137 = fadd float %7089, %7136
  %7138 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7139 = bitcast i8* %7138 to float*
  %7140 = load float, float* %7139, align 4
  %7141 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7142 = getelementptr inbounds i8, i8* %7141, i64 8
  %7143 = bitcast i8* %7142 to float*
  %7144 = load float, float* %7143, align 4
  %7145 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7146 = getelementptr inbounds i8, i8* %7145, i64 8
  %7147 = bitcast i8* %7146 to float*
  %7148 = load float, float* %7147, align 4
  %7149 = fmul float %7144, %7148
  %7150 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7151 = getelementptr inbounds i8, i8* %7150, i64 4
  %7152 = bitcast i8* %7151 to float*
  %7153 = load float, float* %7152, align 4
  %7154 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7155 = getelementptr inbounds i8, i8* %7154, i64 4
  %7156 = bitcast i8* %7155 to float*
  %7157 = load float, float* %7156, align 4
  %7158 = fmul float %7153, %7157
  %7159 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7160 = bitcast i8* %7159 to float*
  %7161 = load float, float* %7160, align 4
  %7162 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7163 = bitcast i8* %7162 to float*
  %7164 = load float, float* %7163, align 4
  %7165 = fmul float %7161, %7164
  %7166 = fadd float %7165, 0.000000e+00
  %7167 = fadd float %7158, %7166
  %7168 = fadd float %7149, %7167
  %7169 = call float @llvm.sqrt.f32(float %7168)
  %7170 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7171 = bitcast i8* %7170 to float*
  %7172 = load float, float* %7171, align 4
  %7173 = fcmp olt float %7172, 0.000000e+00
  %7174 = sext i1 %7173 to i32
  %7175 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7176 = bitcast i8* %7175 to float*
  %7177 = load float, float* %7176, align 4
  %7178 = fcmp ogt float %7177, 0.000000e+00
  %7179 = zext i1 %7178 to i32
  %7180 = add nsw i32 %7174, %7179
  %7181 = sitofp i32 %7180 to float
  %7182 = fneg float %7181
  %7183 = fmul float %7169, %7182
  %7184 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7185 = bitcast i8* %7184 to float*
  %7186 = load float, float* %7185, align 4
  %7187 = fmul float %7183, %7186
  %7188 = fadd float %7140, %7187
  %7189 = fmul float %7137, %7188
  %7190 = fadd float %7189, 0.000000e+00
  %7191 = fadd float %7086, %7190
  %7192 = fadd float %6979, %7191
  %7193 = call float @llvm.sqrt.f32(float %7192)
  %7194 = fdiv float %6872, %7193
  %7195 = insertelement <4 x float> zeroinitializer, float %7194, i32 0
  %7196 = insertelement <4 x float> %7195, float 0.000000e+00, i32 1
  %7197 = insertelement <4 x float> %7196, float 0.000000e+00, i32 2
  %7198 = insertelement <4 x float> %7197, float 0.000000e+00, i32 3
  %7199 = extractelement <4 x float> %7198, i32 0
  %7200 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7201 = getelementptr inbounds i8, i8* %7200, i64 8
  %7202 = bitcast i8* %7201 to float*
  store float %7199, float* %7202, align 4
  %7203 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7204 = bitcast i8* %7203 to float*
  %7205 = load float, float* %7204, align 4
  %7206 = insertelement <4 x float> zeroinitializer, float %7205, i32 0
  %7207 = insertelement <4 x float> %7206, float 1.000000e+00, i32 1
  %7208 = insertelement <4 x float> %7207, float 1.000000e+00, i32 2
  %7209 = insertelement <4 x float> %7208, float 1.000000e+00, i32 3
  %7210 = fmul <4 x float> %7209, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %7211 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7212 = bitcast i8* %7211 to float*
  %7213 = load float, float* %7212, align 4
  %7214 = insertelement <4 x float> zeroinitializer, float %7213, i32 0
  %7215 = insertelement <4 x float> %7214, float 0.000000e+00, i32 1
  %7216 = insertelement <4 x float> %7215, float 0.000000e+00, i32 2
  %7217 = insertelement <4 x float> %7216, float 0.000000e+00, i32 3
  %7218 = fmul <4 x float> %7210, %7217
  %7219 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %7218
  %7220 = extractelement <4 x float> %7219, i32 0
  %7221 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7222 = bitcast i8* %7221 to float*
  store float %7220, float* %7222, align 4
  %7223 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7224 = bitcast i8* %7223 to float*
  %7225 = load float, float* %7224, align 4
  %7226 = insertelement <4 x float> zeroinitializer, float %7225, i32 0
  %7227 = insertelement <4 x float> %7226, float 1.000000e+00, i32 1
  %7228 = insertelement <4 x float> %7227, float 1.000000e+00, i32 2
  %7229 = insertelement <4 x float> %7228, float 1.000000e+00, i32 3
  %7230 = fmul <4 x float> %7229, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %7231 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7232 = getelementptr inbounds i8, i8* %7231, i64 4
  %7233 = bitcast i8* %7232 to float*
  %7234 = load float, float* %7233, align 4
  %7235 = insertelement <4 x float> zeroinitializer, float %7234, i32 0
  %7236 = insertelement <4 x float> %7235, float 0.000000e+00, i32 1
  %7237 = insertelement <4 x float> %7236, float 0.000000e+00, i32 2
  %7238 = insertelement <4 x float> %7237, float 0.000000e+00, i32 3
  %7239 = fmul <4 x float> %7230, %7238
  %7240 = fsub <4 x float> zeroinitializer, %7239
  %7241 = extractelement <4 x float> %7240, i32 0
  %7242 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7243 = getelementptr inbounds i8, i8* %7242, i64 4
  %7244 = bitcast i8* %7243 to float*
  store float %7241, float* %7244, align 4
  %7245 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7246 = bitcast i8* %7245 to float*
  %7247 = load float, float* %7246, align 4
  %7248 = insertelement <4 x float> zeroinitializer, float %7247, i32 0
  %7249 = insertelement <4 x float> %7248, float 1.000000e+00, i32 1
  %7250 = insertelement <4 x float> %7249, float 1.000000e+00, i32 2
  %7251 = insertelement <4 x float> %7250, float 1.000000e+00, i32 3
  %7252 = fmul <4 x float> %7251, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %7253 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7254 = getelementptr inbounds i8, i8* %7253, i64 8
  %7255 = bitcast i8* %7254 to float*
  %7256 = load float, float* %7255, align 4
  %7257 = insertelement <4 x float> zeroinitializer, float %7256, i32 0
  %7258 = insertelement <4 x float> %7257, float 0.000000e+00, i32 1
  %7259 = insertelement <4 x float> %7258, float 0.000000e+00, i32 2
  %7260 = insertelement <4 x float> %7259, float 0.000000e+00, i32 3
  %7261 = fmul <4 x float> %7252, %7260
  %7262 = fsub <4 x float> zeroinitializer, %7261
  %7263 = extractelement <4 x float> %7262, i32 0
  %7264 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7265 = getelementptr inbounds i8, i8* %7264, i64 8
  %7266 = bitcast i8* %7265 to float*
  store float %7263, float* %7266, align 4
  %7267 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7268 = getelementptr inbounds i8, i8* %7267, i64 4
  %7269 = bitcast i8* %7268 to float*
  %7270 = load float, float* %7269, align 4
  %7271 = insertelement <4 x float> zeroinitializer, float %7270, i32 0
  %7272 = insertelement <4 x float> %7271, float 1.000000e+00, i32 1
  %7273 = insertelement <4 x float> %7272, float 1.000000e+00, i32 2
  %7274 = insertelement <4 x float> %7273, float 1.000000e+00, i32 3
  %7275 = fmul <4 x float> %7274, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %7276 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7277 = bitcast i8* %7276 to float*
  %7278 = load float, float* %7277, align 4
  %7279 = insertelement <4 x float> zeroinitializer, float %7278, i32 0
  %7280 = insertelement <4 x float> %7279, float 0.000000e+00, i32 1
  %7281 = insertelement <4 x float> %7280, float 0.000000e+00, i32 2
  %7282 = insertelement <4 x float> %7281, float 0.000000e+00, i32 3
  %7283 = fmul <4 x float> %7275, %7282
  %7284 = fsub <4 x float> zeroinitializer, %7283
  %7285 = extractelement <4 x float> %7284, i32 0
  %7286 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7287 = getelementptr inbounds i8, i8* %7286, i64 12
  %7288 = bitcast i8* %7287 to float*
  store float %7285, float* %7288, align 4
  %7289 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7290 = getelementptr inbounds i8, i8* %7289, i64 4
  %7291 = bitcast i8* %7290 to float*
  %7292 = load float, float* %7291, align 4
  %7293 = insertelement <4 x float> zeroinitializer, float %7292, i32 0
  %7294 = insertelement <4 x float> %7293, float 1.000000e+00, i32 1
  %7295 = insertelement <4 x float> %7294, float 1.000000e+00, i32 2
  %7296 = insertelement <4 x float> %7295, float 1.000000e+00, i32 3
  %7297 = fmul <4 x float> %7296, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %7298 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7299 = getelementptr inbounds i8, i8* %7298, i64 4
  %7300 = bitcast i8* %7299 to float*
  %7301 = load float, float* %7300, align 4
  %7302 = insertelement <4 x float> zeroinitializer, float %7301, i32 0
  %7303 = insertelement <4 x float> %7302, float 0.000000e+00, i32 1
  %7304 = insertelement <4 x float> %7303, float 0.000000e+00, i32 2
  %7305 = insertelement <4 x float> %7304, float 0.000000e+00, i32 3
  %7306 = fmul <4 x float> %7297, %7305
  %7307 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %7306
  %7308 = extractelement <4 x float> %7307, i32 0
  %7309 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7310 = getelementptr inbounds i8, i8* %7309, i64 16
  %7311 = bitcast i8* %7310 to float*
  store float %7308, float* %7311, align 4
  %7312 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7313 = getelementptr inbounds i8, i8* %7312, i64 4
  %7314 = bitcast i8* %7313 to float*
  %7315 = load float, float* %7314, align 4
  %7316 = insertelement <4 x float> zeroinitializer, float %7315, i32 0
  %7317 = insertelement <4 x float> %7316, float 1.000000e+00, i32 1
  %7318 = insertelement <4 x float> %7317, float 1.000000e+00, i32 2
  %7319 = insertelement <4 x float> %7318, float 1.000000e+00, i32 3
  %7320 = fmul <4 x float> %7319, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %7321 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7322 = getelementptr inbounds i8, i8* %7321, i64 8
  %7323 = bitcast i8* %7322 to float*
  %7324 = load float, float* %7323, align 4
  %7325 = insertelement <4 x float> zeroinitializer, float %7324, i32 0
  %7326 = insertelement <4 x float> %7325, float 0.000000e+00, i32 1
  %7327 = insertelement <4 x float> %7326, float 0.000000e+00, i32 2
  %7328 = insertelement <4 x float> %7327, float 0.000000e+00, i32 3
  %7329 = fmul <4 x float> %7320, %7328
  %7330 = fsub <4 x float> zeroinitializer, %7329
  %7331 = extractelement <4 x float> %7330, i32 0
  %7332 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7333 = getelementptr inbounds i8, i8* %7332, i64 20
  %7334 = bitcast i8* %7333 to float*
  store float %7331, float* %7334, align 4
  %7335 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7336 = getelementptr inbounds i8, i8* %7335, i64 8
  %7337 = bitcast i8* %7336 to float*
  %7338 = load float, float* %7337, align 4
  %7339 = insertelement <4 x float> zeroinitializer, float %7338, i32 0
  %7340 = insertelement <4 x float> %7339, float 1.000000e+00, i32 1
  %7341 = insertelement <4 x float> %7340, float 1.000000e+00, i32 2
  %7342 = insertelement <4 x float> %7341, float 1.000000e+00, i32 3
  %7343 = fmul <4 x float> %7342, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %7344 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7345 = bitcast i8* %7344 to float*
  %7346 = load float, float* %7345, align 4
  %7347 = insertelement <4 x float> zeroinitializer, float %7346, i32 0
  %7348 = insertelement <4 x float> %7347, float 0.000000e+00, i32 1
  %7349 = insertelement <4 x float> %7348, float 0.000000e+00, i32 2
  %7350 = insertelement <4 x float> %7349, float 0.000000e+00, i32 3
  %7351 = fmul <4 x float> %7343, %7350
  %7352 = fsub <4 x float> zeroinitializer, %7351
  %7353 = extractelement <4 x float> %7352, i32 0
  %7354 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7355 = getelementptr inbounds i8, i8* %7354, i64 24
  %7356 = bitcast i8* %7355 to float*
  store float %7353, float* %7356, align 4
  %7357 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7358 = getelementptr inbounds i8, i8* %7357, i64 8
  %7359 = bitcast i8* %7358 to float*
  %7360 = load float, float* %7359, align 4
  %7361 = insertelement <4 x float> zeroinitializer, float %7360, i32 0
  %7362 = insertelement <4 x float> %7361, float 1.000000e+00, i32 1
  %7363 = insertelement <4 x float> %7362, float 1.000000e+00, i32 2
  %7364 = insertelement <4 x float> %7363, float 1.000000e+00, i32 3
  %7365 = fmul <4 x float> %7364, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %7366 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7367 = getelementptr inbounds i8, i8* %7366, i64 4
  %7368 = bitcast i8* %7367 to float*
  %7369 = load float, float* %7368, align 4
  %7370 = insertelement <4 x float> zeroinitializer, float %7369, i32 0
  %7371 = insertelement <4 x float> %7370, float 0.000000e+00, i32 1
  %7372 = insertelement <4 x float> %7371, float 0.000000e+00, i32 2
  %7373 = insertelement <4 x float> %7372, float 0.000000e+00, i32 3
  %7374 = fmul <4 x float> %7365, %7373
  %7375 = fsub <4 x float> zeroinitializer, %7374
  %7376 = extractelement <4 x float> %7375, i32 0
  %7377 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7378 = getelementptr inbounds i8, i8* %7377, i64 28
  %7379 = bitcast i8* %7378 to float*
  store float %7376, float* %7379, align 4
  %7380 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7381 = getelementptr inbounds i8, i8* %7380, i64 8
  %7382 = bitcast i8* %7381 to float*
  %7383 = load float, float* %7382, align 4
  %7384 = fmul float %7383, 2.000000e+00
  %7385 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7386 = getelementptr inbounds i8, i8* %7385, i64 8
  %7387 = bitcast i8* %7386 to float*
  %7388 = load float, float* %7387, align 4
  %7389 = fmul float %7384, %7388
  %7390 = fsub float 1.000000e+00, %7389
  %7391 = insertelement <4 x float> zeroinitializer, float %7390, i32 0
  %7392 = insertelement <4 x float> %7391, float 1.000000e+00, i32 1
  %7393 = insertelement <4 x float> %7392, float 0.000000e+00, i32 2
  %7394 = insertelement <4 x float> %7393, float 0.000000e+00, i32 3
  %7395 = extractelement <4 x float> %7394, i32 0
  %7396 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7397 = getelementptr inbounds i8, i8* %7396, i64 32
  %7398 = bitcast i8* %7397 to float*
  store float %7395, float* %7398, align 4
  %7399 = extractelement <4 x float> %7394, i32 1
  %7400 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7401 = bitcast i8* %7400 to float*
  store float %7399, float* %7401, align 4
  %7402 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7403 = bitcast i8* %7402 to i32*
  %7404 = load i32, i32* %7403, align 4
  %7405 = sitofp i32 %7404 to float
  %7406 = insertelement <4 x float> zeroinitializer, float %7405, i32 0
  %7407 = insertelement <4 x float> %7406, float 0.000000e+00, i32 1
  %7408 = insertelement <4 x float> %7407, float 0.000000e+00, i32 2
  %7409 = insertelement <4 x float> %7408, float 0.000000e+00, i32 3
  %7410 = extractelement <4 x float> %7409, i32 0
  %7411 = fptosi float %7410 to i32
  %7412 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7413 = getelementptr inbounds i8, i8* %7412, i64 20
  %7414 = bitcast i8* %7413 to i32*
  store i32 %7411, i32* %7414, align 4
  %7415 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7416 = getelementptr inbounds i8, i8* %7415, i64 4
  %7417 = bitcast i8* %7416 to i32*
  %7418 = load i32, i32* %7417, align 4
  %7419 = sitofp i32 %7418 to float
  %7420 = insertelement <4 x float> zeroinitializer, float %7419, i32 0
  %7421 = insertelement <4 x float> %7420, float 0.000000e+00, i32 1
  %7422 = insertelement <4 x float> %7421, float 0.000000e+00, i32 2
  %7423 = insertelement <4 x float> %7422, float 0.000000e+00, i32 3
  %7424 = extractelement <4 x float> %7423, i32 0
  %7425 = fptosi float %7424 to i32
  %7426 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7427 = getelementptr inbounds i8, i8* %7426, i64 24
  %7428 = bitcast i8* %7427 to i32*
  store i32 %7425, i32* %7428, align 4
  %7429 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7430 = getelementptr inbounds i8, i8* %7429, i64 8
  %7431 = bitcast i8* %7430 to i32*
  %7432 = load i32, i32* %7431, align 4
  %7433 = sitofp i32 %7432 to float
  %7434 = insertelement <4 x float> zeroinitializer, float %7433, i32 0
  %7435 = insertelement <4 x float> %7434, float 0.000000e+00, i32 1
  %7436 = insertelement <4 x float> %7435, float 0.000000e+00, i32 2
  %7437 = insertelement <4 x float> %7436, float 0.000000e+00, i32 3
  %7438 = extractelement <4 x float> %7437, i32 0
  %7439 = fptosi float %7438 to i32
  %7440 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7441 = getelementptr inbounds i8, i8* %7440, i64 28
  %7442 = bitcast i8* %7441 to i32*
  store i32 %7439, i32* %7442, align 4
  %7443 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7444 = getelementptr inbounds i8, i8* %7443, i64 12
  %7445 = bitcast i8* %7444 to i32*
  %7446 = load i32, i32* %7445, align 4
  %7447 = sitofp i32 %7446 to float
  %7448 = insertelement <4 x float> zeroinitializer, float %7447, i32 0
  %7449 = insertelement <4 x float> %7448, float 0.000000e+00, i32 1
  %7450 = insertelement <4 x float> %7449, float 0.000000e+00, i32 2
  %7451 = insertelement <4 x float> %7450, float 0.000000e+00, i32 3
  %7452 = extractelement <4 x float> %7451, i32 0
  %7453 = fptosi float %7452 to i32
  %7454 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7455 = getelementptr inbounds i8, i8* %7454, i64 36
  %7456 = bitcast i8* %7455 to i32*
  store i32 %7453, i32* %7456, align 4
  %7457 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7458 = getelementptr inbounds i8, i8* %7457, i64 16
  %7459 = bitcast i8* %7458 to i32*
  %7460 = load i32, i32* %7459, align 4
  %7461 = sitofp i32 %7460 to float
  %7462 = insertelement <4 x float> zeroinitializer, float %7461, i32 0
  %7463 = insertelement <4 x float> %7462, float 0.000000e+00, i32 1
  %7464 = insertelement <4 x float> %7463, float 0.000000e+00, i32 2
  %7465 = insertelement <4 x float> %7464, float 0.000000e+00, i32 3
  %7466 = extractelement <4 x float> %7465, i32 0
  %7467 = fptosi float %7466 to i32
  %7468 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7469 = getelementptr inbounds i8, i8* %7468, i64 40
  %7470 = bitcast i8* %7469 to i32*
  store i32 %7467, i32* %7470, align 4
  %7471 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7472 = getelementptr inbounds i8, i8* %7471, i64 20
  %7473 = bitcast i8* %7472 to i32*
  %7474 = load i32, i32* %7473, align 4
  %7475 = sitofp i32 %7474 to float
  %7476 = insertelement <4 x float> zeroinitializer, float %7475, i32 0
  %7477 = insertelement <4 x float> %7476, float 0.000000e+00, i32 1
  %7478 = insertelement <4 x float> %7477, float 0.000000e+00, i32 2
  %7479 = insertelement <4 x float> %7478, float 0.000000e+00, i32 3
  %7480 = extractelement <4 x float> %7479, i32 0
  %7481 = fptosi float %7480 to i32
  %7482 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7483 = getelementptr inbounds i8, i8* %7482, i64 44
  %7484 = bitcast i8* %7483 to i32*
  store i32 %7481, i32* %7484, align 4
  %7485 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7486 = getelementptr inbounds i8, i8* %7485, i64 24
  %7487 = bitcast i8* %7486 to i32*
  %7488 = load i32, i32* %7487, align 4
  %7489 = sitofp i32 %7488 to float
  %7490 = insertelement <4 x float> zeroinitializer, float %7489, i32 0
  %7491 = insertelement <4 x float> %7490, float 0.000000e+00, i32 1
  %7492 = insertelement <4 x float> %7491, float 0.000000e+00, i32 2
  %7493 = insertelement <4 x float> %7492, float 0.000000e+00, i32 3
  %7494 = extractelement <4 x float> %7493, i32 0
  %7495 = fptosi float %7494 to i32
  %7496 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7497 = getelementptr inbounds i8, i8* %7496, i64 52
  %7498 = bitcast i8* %7497 to i32*
  store i32 %7495, i32* %7498, align 4
  %7499 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7500 = getelementptr inbounds i8, i8* %7499, i64 28
  %7501 = bitcast i8* %7500 to i32*
  %7502 = load i32, i32* %7501, align 4
  %7503 = sitofp i32 %7502 to float
  %7504 = insertelement <4 x float> zeroinitializer, float %7503, i32 0
  %7505 = insertelement <4 x float> %7504, float 0.000000e+00, i32 1
  %7506 = insertelement <4 x float> %7505, float 0.000000e+00, i32 2
  %7507 = insertelement <4 x float> %7506, float 0.000000e+00, i32 3
  %7508 = extractelement <4 x float> %7507, i32 0
  %7509 = fptosi float %7508 to i32
  %7510 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7511 = getelementptr inbounds i8, i8* %7510, i64 56
  %7512 = bitcast i8* %7511 to i32*
  store i32 %7509, i32* %7512, align 4
  %7513 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %7514 = getelementptr inbounds i8, i8* %7513, i64 32
  %7515 = bitcast i8* %7514 to i32*
  %7516 = load i32, i32* %7515, align 4
  %7517 = sitofp i32 %7516 to float
  %7518 = insertelement <4 x float> zeroinitializer, float %7517, i32 0
  %7519 = insertelement <4 x float> %7518, float 0.000000e+00, i32 1
  %7520 = insertelement <4 x float> %7519, float 0.000000e+00, i32 2
  %7521 = insertelement <4 x float> %7520, float 0.000000e+00, i32 3
  %7522 = extractelement <4 x float> %7521, i32 0
  %7523 = fptosi float %7522 to i32
  %7524 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7525 = getelementptr inbounds i8, i8* %7524, i64 60
  %7526 = bitcast i8* %7525 to i32*
  store i32 %7523, i32* %7526, align 4
  %7527 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7528 = bitcast i8* %7527 to float*
  %7529 = load float, float* %7528, align 4
  %7530 = insertelement <4 x float> zeroinitializer, float %7529, i32 0
  %7531 = insertelement <4 x float> %7530, float 0.000000e+00, i32 1
  %7532 = insertelement <4 x float> %7531, float 0.000000e+00, i32 2
  %7533 = insertelement <4 x float> %7532, float 0.000000e+00, i32 3
  %7534 = load float, float* %1, align 4
  %7535 = insertelement <4 x float> zeroinitializer, float %7534, i32 0
  %7536 = insertelement <4 x float> %7535, float 0.000000e+00, i32 1
  %7537 = insertelement <4 x float> %7536, float 0.000000e+00, i32 2
  %7538 = insertelement <4 x float> %7537, float 0.000000e+00, i32 3
  %7539 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7533, <4 x float> %7538, <4 x float> zeroinitializer)
  %7540 = extractelement <4 x float> %7539, i32 0
  %7541 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7542 = bitcast i8* %7541 to float*
  store float %7540, float* %7542, align 4
  %7543 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7544 = bitcast i8* %7543 to float*
  %7545 = load float, float* %7544, align 4
  %7546 = insertelement <4 x float> zeroinitializer, float %7545, i32 0
  %7547 = insertelement <4 x float> %7546, float 1.000000e+00, i32 1
  %7548 = insertelement <4 x float> %7547, float 1.000000e+00, i32 2
  %7549 = insertelement <4 x float> %7548, float 1.000000e+00, i32 3
  %7550 = load float, float* %1, align 4
  %7551 = insertelement <4 x float> zeroinitializer, float %7550, i32 0
  %7552 = insertelement <4 x float> %7551, float 0.000000e+00, i32 1
  %7553 = insertelement <4 x float> %7552, float 0.000000e+00, i32 2
  %7554 = insertelement <4 x float> %7553, float 0.000000e+00, i32 3
  %7555 = fmul <4 x float> %7549, %7554
  %7556 = fadd <4 x float> %7555, zeroinitializer
  %7557 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7558 = getelementptr inbounds i8, i8* %7557, i64 4
  %7559 = bitcast i8* %7558 to float*
  %7560 = load float, float* %7559, align 4
  %7561 = insertelement <4 x float> zeroinitializer, float %7560, i32 0
  %7562 = insertelement <4 x float> %7561, float 0.000000e+00, i32 1
  %7563 = insertelement <4 x float> %7562, float 0.000000e+00, i32 2
  %7564 = insertelement <4 x float> %7563, float 0.000000e+00, i32 3
  %7565 = getelementptr inbounds float, float* %1, i64 4
  %7566 = load float, float* %7565, align 4
  %7567 = insertelement <4 x float> zeroinitializer, float %7566, i32 0
  %7568 = insertelement <4 x float> %7567, float 0.000000e+00, i32 1
  %7569 = insertelement <4 x float> %7568, float 0.000000e+00, i32 2
  %7570 = insertelement <4 x float> %7569, float 0.000000e+00, i32 3
  %7571 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7564, <4 x float> %7570, <4 x float> %7556)
  %7572 = extractelement <4 x float> %7571, i32 0
  %7573 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7574 = bitcast i8* %7573 to float*
  store float %7572, float* %7574, align 4
  %7575 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7576 = bitcast i8* %7575 to float*
  %7577 = load float, float* %7576, align 4
  %7578 = insertelement <4 x float> zeroinitializer, float %7577, i32 0
  %7579 = insertelement <4 x float> %7578, float 1.000000e+00, i32 1
  %7580 = insertelement <4 x float> %7579, float 1.000000e+00, i32 2
  %7581 = insertelement <4 x float> %7580, float 1.000000e+00, i32 3
  %7582 = load float, float* %1, align 4
  %7583 = insertelement <4 x float> zeroinitializer, float %7582, i32 0
  %7584 = insertelement <4 x float> %7583, float 0.000000e+00, i32 1
  %7585 = insertelement <4 x float> %7584, float 0.000000e+00, i32 2
  %7586 = insertelement <4 x float> %7585, float 0.000000e+00, i32 3
  %7587 = fmul <4 x float> %7581, %7586
  %7588 = fadd <4 x float> %7587, zeroinitializer
  %7589 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7590 = getelementptr inbounds i8, i8* %7589, i64 4
  %7591 = bitcast i8* %7590 to float*
  %7592 = load float, float* %7591, align 4
  %7593 = insertelement <4 x float> zeroinitializer, float %7592, i32 0
  %7594 = insertelement <4 x float> %7593, float 1.000000e+00, i32 1
  %7595 = insertelement <4 x float> %7594, float 1.000000e+00, i32 2
  %7596 = insertelement <4 x float> %7595, float 1.000000e+00, i32 3
  %7597 = getelementptr inbounds float, float* %1, i64 4
  %7598 = load float, float* %7597, align 4
  %7599 = insertelement <4 x float> zeroinitializer, float %7598, i32 0
  %7600 = insertelement <4 x float> %7599, float 0.000000e+00, i32 1
  %7601 = insertelement <4 x float> %7600, float 0.000000e+00, i32 2
  %7602 = insertelement <4 x float> %7601, float 0.000000e+00, i32 3
  %7603 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7596, <4 x float> %7602, <4 x float> %7588)
  %7604 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7605 = getelementptr inbounds i8, i8* %7604, i64 8
  %7606 = bitcast i8* %7605 to float*
  %7607 = load float, float* %7606, align 4
  %7608 = insertelement <4 x float> zeroinitializer, float %7607, i32 0
  %7609 = insertelement <4 x float> %7608, float 0.000000e+00, i32 1
  %7610 = insertelement <4 x float> %7609, float 0.000000e+00, i32 2
  %7611 = insertelement <4 x float> %7610, float 0.000000e+00, i32 3
  %7612 = getelementptr inbounds float, float* %1, i64 8
  %7613 = load float, float* %7612, align 4
  %7614 = insertelement <4 x float> zeroinitializer, float %7613, i32 0
  %7615 = insertelement <4 x float> %7614, float 0.000000e+00, i32 1
  %7616 = insertelement <4 x float> %7615, float 0.000000e+00, i32 2
  %7617 = insertelement <4 x float> %7616, float 0.000000e+00, i32 3
  %7618 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7611, <4 x float> %7617, <4 x float> %7603)
  %7619 = extractelement <4 x float> %7618, i32 0
  %7620 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7621 = bitcast i8* %7620 to float*
  store float %7619, float* %7621, align 4
  %7622 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7623 = bitcast i8* %7622 to float*
  %7624 = load float, float* %7623, align 4
  %7625 = insertelement <4 x float> zeroinitializer, float %7624, i32 0
  %7626 = insertelement <4 x float> %7625, float 1.000000e+00, i32 1
  %7627 = insertelement <4 x float> %7626, float 1.000000e+00, i32 2
  %7628 = insertelement <4 x float> %7627, float 1.000000e+00, i32 3
  %7629 = load float, float* %1, align 4
  %7630 = insertelement <4 x float> zeroinitializer, float %7629, i32 0
  %7631 = insertelement <4 x float> %7630, float 0.000000e+00, i32 1
  %7632 = insertelement <4 x float> %7631, float 0.000000e+00, i32 2
  %7633 = insertelement <4 x float> %7632, float 0.000000e+00, i32 3
  %7634 = fmul <4 x float> %7628, %7633
  %7635 = fadd <4 x float> %7634, zeroinitializer
  %7636 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7637 = getelementptr inbounds i8, i8* %7636, i64 4
  %7638 = bitcast i8* %7637 to float*
  %7639 = load float, float* %7638, align 4
  %7640 = insertelement <4 x float> zeroinitializer, float %7639, i32 0
  %7641 = insertelement <4 x float> %7640, float 1.000000e+00, i32 1
  %7642 = insertelement <4 x float> %7641, float 1.000000e+00, i32 2
  %7643 = insertelement <4 x float> %7642, float 1.000000e+00, i32 3
  %7644 = getelementptr inbounds float, float* %1, i64 4
  %7645 = load float, float* %7644, align 4
  %7646 = insertelement <4 x float> zeroinitializer, float %7645, i32 0
  %7647 = insertelement <4 x float> %7646, float 0.000000e+00, i32 1
  %7648 = insertelement <4 x float> %7647, float 0.000000e+00, i32 2
  %7649 = insertelement <4 x float> %7648, float 0.000000e+00, i32 3
  %7650 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7643, <4 x float> %7649, <4 x float> %7635)
  %7651 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7652 = getelementptr inbounds i8, i8* %7651, i64 8
  %7653 = bitcast i8* %7652 to float*
  %7654 = load float, float* %7653, align 4
  %7655 = insertelement <4 x float> zeroinitializer, float %7654, i32 0
  %7656 = insertelement <4 x float> %7655, float 1.000000e+00, i32 1
  %7657 = insertelement <4 x float> %7656, float 1.000000e+00, i32 2
  %7658 = insertelement <4 x float> %7657, float 1.000000e+00, i32 3
  %7659 = getelementptr inbounds float, float* %1, i64 8
  %7660 = load float, float* %7659, align 4
  %7661 = insertelement <4 x float> zeroinitializer, float %7660, i32 0
  %7662 = insertelement <4 x float> %7661, float 0.000000e+00, i32 1
  %7663 = insertelement <4 x float> %7662, float 0.000000e+00, i32 2
  %7664 = insertelement <4 x float> %7663, float 0.000000e+00, i32 3
  %7665 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7658, <4 x float> %7664, <4 x float> %7650)
  %7666 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7667 = getelementptr inbounds i8, i8* %7666, i64 12
  %7668 = bitcast i8* %7667 to float*
  %7669 = load float, float* %7668, align 4
  %7670 = insertelement <4 x float> zeroinitializer, float %7669, i32 0
  %7671 = insertelement <4 x float> %7670, float 0.000000e+00, i32 1
  %7672 = insertelement <4 x float> %7671, float 0.000000e+00, i32 2
  %7673 = insertelement <4 x float> %7672, float 0.000000e+00, i32 3
  %7674 = getelementptr inbounds float, float* %1, i64 12
  %7675 = load float, float* %7674, align 4
  %7676 = insertelement <4 x float> zeroinitializer, float %7675, i32 0
  %7677 = insertelement <4 x float> %7676, float 0.000000e+00, i32 1
  %7678 = insertelement <4 x float> %7677, float 0.000000e+00, i32 2
  %7679 = insertelement <4 x float> %7678, float 0.000000e+00, i32 3
  %7680 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7673, <4 x float> %7679, <4 x float> %7665)
  %7681 = extractelement <4 x float> %7680, i32 0
  %7682 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7683 = bitcast i8* %7682 to float*
  store float %7681, float* %7683, align 4
  %7684 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7685 = bitcast i8* %7684 to float*
  %7686 = load float, float* %7685, align 4
  %7687 = insertelement <4 x float> zeroinitializer, float %7686, i32 0
  %7688 = insertelement <4 x float> %7687, float 0.000000e+00, i32 1
  %7689 = insertelement <4 x float> %7688, float 0.000000e+00, i32 2
  %7690 = insertelement <4 x float> %7689, float 0.000000e+00, i32 3
  %7691 = getelementptr inbounds float, float* %1, i64 1
  %7692 = load float, float* %7691, align 4
  %7693 = insertelement <4 x float> zeroinitializer, float %7692, i32 0
  %7694 = insertelement <4 x float> %7693, float 0.000000e+00, i32 1
  %7695 = insertelement <4 x float> %7694, float 0.000000e+00, i32 2
  %7696 = insertelement <4 x float> %7695, float 0.000000e+00, i32 3
  %7697 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7690, <4 x float> %7696, <4 x float> zeroinitializer)
  %7698 = extractelement <4 x float> %7697, i32 0
  %7699 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7700 = getelementptr inbounds i8, i8* %7699, i64 4
  %7701 = bitcast i8* %7700 to float*
  store float %7698, float* %7701, align 4
  %7702 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7703 = bitcast i8* %7702 to float*
  %7704 = load float, float* %7703, align 4
  %7705 = insertelement <4 x float> zeroinitializer, float %7704, i32 0
  %7706 = insertelement <4 x float> %7705, float 1.000000e+00, i32 1
  %7707 = insertelement <4 x float> %7706, float 1.000000e+00, i32 2
  %7708 = insertelement <4 x float> %7707, float 1.000000e+00, i32 3
  %7709 = getelementptr inbounds float, float* %1, i64 1
  %7710 = load float, float* %7709, align 4
  %7711 = insertelement <4 x float> zeroinitializer, float %7710, i32 0
  %7712 = insertelement <4 x float> %7711, float 0.000000e+00, i32 1
  %7713 = insertelement <4 x float> %7712, float 0.000000e+00, i32 2
  %7714 = insertelement <4 x float> %7713, float 0.000000e+00, i32 3
  %7715 = fmul <4 x float> %7708, %7714
  %7716 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7717 = getelementptr inbounds i8, i8* %7716, i64 4
  %7718 = bitcast i8* %7717 to float*
  %7719 = load float, float* %7718, align 4
  %7720 = insertelement <4 x float> zeroinitializer, float %7719, i32 0
  %7721 = insertelement <4 x float> %7720, float 0.000000e+00, i32 1
  %7722 = insertelement <4 x float> %7721, float 0.000000e+00, i32 2
  %7723 = insertelement <4 x float> %7722, float 0.000000e+00, i32 3
  %7724 = getelementptr inbounds float, float* %1, i64 5
  %7725 = load float, float* %7724, align 4
  %7726 = insertelement <4 x float> zeroinitializer, float %7725, i32 0
  %7727 = insertelement <4 x float> %7726, float 0.000000e+00, i32 1
  %7728 = insertelement <4 x float> %7727, float 0.000000e+00, i32 2
  %7729 = insertelement <4 x float> %7728, float 0.000000e+00, i32 3
  %7730 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7723, <4 x float> %7729, <4 x float> %7715)
  %7731 = extractelement <4 x float> %7730, i32 0
  %7732 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7733 = getelementptr inbounds i8, i8* %7732, i64 4
  %7734 = bitcast i8* %7733 to float*
  store float %7731, float* %7734, align 4
  %7735 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7736 = bitcast i8* %7735 to float*
  %7737 = load float, float* %7736, align 4
  %7738 = insertelement <4 x float> zeroinitializer, float %7737, i32 0
  %7739 = insertelement <4 x float> %7738, float 1.000000e+00, i32 1
  %7740 = insertelement <4 x float> %7739, float 1.000000e+00, i32 2
  %7741 = insertelement <4 x float> %7740, float 1.000000e+00, i32 3
  %7742 = getelementptr inbounds float, float* %1, i64 1
  %7743 = load float, float* %7742, align 4
  %7744 = insertelement <4 x float> zeroinitializer, float %7743, i32 0
  %7745 = insertelement <4 x float> %7744, float 0.000000e+00, i32 1
  %7746 = insertelement <4 x float> %7745, float 0.000000e+00, i32 2
  %7747 = insertelement <4 x float> %7746, float 0.000000e+00, i32 3
  %7748 = fmul <4 x float> %7741, %7747
  %7749 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7750 = getelementptr inbounds i8, i8* %7749, i64 4
  %7751 = bitcast i8* %7750 to float*
  %7752 = load float, float* %7751, align 4
  %7753 = insertelement <4 x float> zeroinitializer, float %7752, i32 0
  %7754 = insertelement <4 x float> %7753, float 1.000000e+00, i32 1
  %7755 = insertelement <4 x float> %7754, float 1.000000e+00, i32 2
  %7756 = insertelement <4 x float> %7755, float 1.000000e+00, i32 3
  %7757 = getelementptr inbounds float, float* %1, i64 5
  %7758 = load float, float* %7757, align 4
  %7759 = insertelement <4 x float> zeroinitializer, float %7758, i32 0
  %7760 = insertelement <4 x float> %7759, float 0.000000e+00, i32 1
  %7761 = insertelement <4 x float> %7760, float 0.000000e+00, i32 2
  %7762 = insertelement <4 x float> %7761, float 0.000000e+00, i32 3
  %7763 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7756, <4 x float> %7762, <4 x float> %7748)
  %7764 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7765 = getelementptr inbounds i8, i8* %7764, i64 8
  %7766 = bitcast i8* %7765 to float*
  %7767 = load float, float* %7766, align 4
  %7768 = insertelement <4 x float> zeroinitializer, float %7767, i32 0
  %7769 = insertelement <4 x float> %7768, float 0.000000e+00, i32 1
  %7770 = insertelement <4 x float> %7769, float 0.000000e+00, i32 2
  %7771 = insertelement <4 x float> %7770, float 0.000000e+00, i32 3
  %7772 = getelementptr inbounds float, float* %1, i64 9
  %7773 = load float, float* %7772, align 4
  %7774 = insertelement <4 x float> zeroinitializer, float %7773, i32 0
  %7775 = insertelement <4 x float> %7774, float 0.000000e+00, i32 1
  %7776 = insertelement <4 x float> %7775, float 0.000000e+00, i32 2
  %7777 = insertelement <4 x float> %7776, float 0.000000e+00, i32 3
  %7778 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7771, <4 x float> %7777, <4 x float> %7763)
  %7779 = extractelement <4 x float> %7778, i32 0
  %7780 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7781 = getelementptr inbounds i8, i8* %7780, i64 4
  %7782 = bitcast i8* %7781 to float*
  store float %7779, float* %7782, align 4
  %7783 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7784 = bitcast i8* %7783 to float*
  %7785 = load float, float* %7784, align 4
  %7786 = insertelement <4 x float> zeroinitializer, float %7785, i32 0
  %7787 = insertelement <4 x float> %7786, float 1.000000e+00, i32 1
  %7788 = insertelement <4 x float> %7787, float 1.000000e+00, i32 2
  %7789 = insertelement <4 x float> %7788, float 1.000000e+00, i32 3
  %7790 = getelementptr inbounds float, float* %1, i64 1
  %7791 = load float, float* %7790, align 4
  %7792 = insertelement <4 x float> zeroinitializer, float %7791, i32 0
  %7793 = insertelement <4 x float> %7792, float 0.000000e+00, i32 1
  %7794 = insertelement <4 x float> %7793, float 0.000000e+00, i32 2
  %7795 = insertelement <4 x float> %7794, float 0.000000e+00, i32 3
  %7796 = fmul <4 x float> %7789, %7795
  %7797 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7798 = getelementptr inbounds i8, i8* %7797, i64 4
  %7799 = bitcast i8* %7798 to float*
  %7800 = load float, float* %7799, align 4
  %7801 = insertelement <4 x float> zeroinitializer, float %7800, i32 0
  %7802 = insertelement <4 x float> %7801, float 1.000000e+00, i32 1
  %7803 = insertelement <4 x float> %7802, float 1.000000e+00, i32 2
  %7804 = insertelement <4 x float> %7803, float 1.000000e+00, i32 3
  %7805 = getelementptr inbounds float, float* %1, i64 5
  %7806 = load float, float* %7805, align 4
  %7807 = insertelement <4 x float> zeroinitializer, float %7806, i32 0
  %7808 = insertelement <4 x float> %7807, float 0.000000e+00, i32 1
  %7809 = insertelement <4 x float> %7808, float 0.000000e+00, i32 2
  %7810 = insertelement <4 x float> %7809, float 0.000000e+00, i32 3
  %7811 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7804, <4 x float> %7810, <4 x float> %7796)
  %7812 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7813 = getelementptr inbounds i8, i8* %7812, i64 8
  %7814 = bitcast i8* %7813 to float*
  %7815 = load float, float* %7814, align 4
  %7816 = insertelement <4 x float> zeroinitializer, float %7815, i32 0
  %7817 = insertelement <4 x float> %7816, float 1.000000e+00, i32 1
  %7818 = insertelement <4 x float> %7817, float 1.000000e+00, i32 2
  %7819 = insertelement <4 x float> %7818, float 1.000000e+00, i32 3
  %7820 = getelementptr inbounds float, float* %1, i64 9
  %7821 = load float, float* %7820, align 4
  %7822 = insertelement <4 x float> zeroinitializer, float %7821, i32 0
  %7823 = insertelement <4 x float> %7822, float 0.000000e+00, i32 1
  %7824 = insertelement <4 x float> %7823, float 0.000000e+00, i32 2
  %7825 = insertelement <4 x float> %7824, float 0.000000e+00, i32 3
  %7826 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7819, <4 x float> %7825, <4 x float> %7811)
  %7827 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7828 = getelementptr inbounds i8, i8* %7827, i64 12
  %7829 = bitcast i8* %7828 to float*
  %7830 = load float, float* %7829, align 4
  %7831 = insertelement <4 x float> zeroinitializer, float %7830, i32 0
  %7832 = insertelement <4 x float> %7831, float 0.000000e+00, i32 1
  %7833 = insertelement <4 x float> %7832, float 0.000000e+00, i32 2
  %7834 = insertelement <4 x float> %7833, float 0.000000e+00, i32 3
  %7835 = getelementptr inbounds float, float* %1, i64 13
  %7836 = load float, float* %7835, align 4
  %7837 = insertelement <4 x float> zeroinitializer, float %7836, i32 0
  %7838 = insertelement <4 x float> %7837, float 0.000000e+00, i32 1
  %7839 = insertelement <4 x float> %7838, float 0.000000e+00, i32 2
  %7840 = insertelement <4 x float> %7839, float 0.000000e+00, i32 3
  %7841 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7834, <4 x float> %7840, <4 x float> %7826)
  %7842 = extractelement <4 x float> %7841, i32 0
  %7843 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7844 = getelementptr inbounds i8, i8* %7843, i64 4
  %7845 = bitcast i8* %7844 to float*
  store float %7842, float* %7845, align 4
  %7846 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7847 = bitcast i8* %7846 to float*
  %7848 = load float, float* %7847, align 4
  %7849 = insertelement <4 x float> zeroinitializer, float %7848, i32 0
  %7850 = insertelement <4 x float> %7849, float 0.000000e+00, i32 1
  %7851 = insertelement <4 x float> %7850, float 0.000000e+00, i32 2
  %7852 = insertelement <4 x float> %7851, float 0.000000e+00, i32 3
  %7853 = getelementptr inbounds float, float* %1, i64 2
  %7854 = load float, float* %7853, align 4
  %7855 = insertelement <4 x float> zeroinitializer, float %7854, i32 0
  %7856 = insertelement <4 x float> %7855, float 0.000000e+00, i32 1
  %7857 = insertelement <4 x float> %7856, float 0.000000e+00, i32 2
  %7858 = insertelement <4 x float> %7857, float 0.000000e+00, i32 3
  %7859 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7852, <4 x float> %7858, <4 x float> zeroinitializer)
  %7860 = extractelement <4 x float> %7859, i32 0
  %7861 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7862 = getelementptr inbounds i8, i8* %7861, i64 8
  %7863 = bitcast i8* %7862 to float*
  store float %7860, float* %7863, align 4
  %7864 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7865 = bitcast i8* %7864 to float*
  %7866 = load float, float* %7865, align 4
  %7867 = insertelement <4 x float> zeroinitializer, float %7866, i32 0
  %7868 = insertelement <4 x float> %7867, float 1.000000e+00, i32 1
  %7869 = insertelement <4 x float> %7868, float 1.000000e+00, i32 2
  %7870 = insertelement <4 x float> %7869, float 1.000000e+00, i32 3
  %7871 = getelementptr inbounds float, float* %1, i64 2
  %7872 = load float, float* %7871, align 4
  %7873 = insertelement <4 x float> zeroinitializer, float %7872, i32 0
  %7874 = insertelement <4 x float> %7873, float 0.000000e+00, i32 1
  %7875 = insertelement <4 x float> %7874, float 0.000000e+00, i32 2
  %7876 = insertelement <4 x float> %7875, float 0.000000e+00, i32 3
  %7877 = fmul <4 x float> %7870, %7876
  %7878 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7879 = getelementptr inbounds i8, i8* %7878, i64 4
  %7880 = bitcast i8* %7879 to float*
  %7881 = load float, float* %7880, align 4
  %7882 = insertelement <4 x float> zeroinitializer, float %7881, i32 0
  %7883 = insertelement <4 x float> %7882, float 0.000000e+00, i32 1
  %7884 = insertelement <4 x float> %7883, float 0.000000e+00, i32 2
  %7885 = insertelement <4 x float> %7884, float 0.000000e+00, i32 3
  %7886 = getelementptr inbounds float, float* %1, i64 6
  %7887 = load float, float* %7886, align 4
  %7888 = insertelement <4 x float> zeroinitializer, float %7887, i32 0
  %7889 = insertelement <4 x float> %7888, float 0.000000e+00, i32 1
  %7890 = insertelement <4 x float> %7889, float 0.000000e+00, i32 2
  %7891 = insertelement <4 x float> %7890, float 0.000000e+00, i32 3
  %7892 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7885, <4 x float> %7891, <4 x float> %7877)
  %7893 = extractelement <4 x float> %7892, i32 0
  %7894 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7895 = getelementptr inbounds i8, i8* %7894, i64 8
  %7896 = bitcast i8* %7895 to float*
  store float %7893, float* %7896, align 4
  %7897 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7898 = bitcast i8* %7897 to float*
  %7899 = load float, float* %7898, align 4
  %7900 = insertelement <4 x float> zeroinitializer, float %7899, i32 0
  %7901 = insertelement <4 x float> %7900, float 1.000000e+00, i32 1
  %7902 = insertelement <4 x float> %7901, float 1.000000e+00, i32 2
  %7903 = insertelement <4 x float> %7902, float 1.000000e+00, i32 3
  %7904 = getelementptr inbounds float, float* %1, i64 2
  %7905 = load float, float* %7904, align 4
  %7906 = insertelement <4 x float> zeroinitializer, float %7905, i32 0
  %7907 = insertelement <4 x float> %7906, float 0.000000e+00, i32 1
  %7908 = insertelement <4 x float> %7907, float 0.000000e+00, i32 2
  %7909 = insertelement <4 x float> %7908, float 0.000000e+00, i32 3
  %7910 = fmul <4 x float> %7903, %7909
  %7911 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7912 = getelementptr inbounds i8, i8* %7911, i64 4
  %7913 = bitcast i8* %7912 to float*
  %7914 = load float, float* %7913, align 4
  %7915 = insertelement <4 x float> zeroinitializer, float %7914, i32 0
  %7916 = insertelement <4 x float> %7915, float 1.000000e+00, i32 1
  %7917 = insertelement <4 x float> %7916, float 1.000000e+00, i32 2
  %7918 = insertelement <4 x float> %7917, float 1.000000e+00, i32 3
  %7919 = getelementptr inbounds float, float* %1, i64 6
  %7920 = load float, float* %7919, align 4
  %7921 = insertelement <4 x float> zeroinitializer, float %7920, i32 0
  %7922 = insertelement <4 x float> %7921, float 0.000000e+00, i32 1
  %7923 = insertelement <4 x float> %7922, float 0.000000e+00, i32 2
  %7924 = insertelement <4 x float> %7923, float 0.000000e+00, i32 3
  %7925 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7918, <4 x float> %7924, <4 x float> %7910)
  %7926 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7927 = getelementptr inbounds i8, i8* %7926, i64 8
  %7928 = bitcast i8* %7927 to float*
  %7929 = load float, float* %7928, align 4
  %7930 = insertelement <4 x float> zeroinitializer, float %7929, i32 0
  %7931 = insertelement <4 x float> %7930, float 0.000000e+00, i32 1
  %7932 = insertelement <4 x float> %7931, float 0.000000e+00, i32 2
  %7933 = insertelement <4 x float> %7932, float 0.000000e+00, i32 3
  %7934 = getelementptr inbounds float, float* %1, i64 10
  %7935 = load float, float* %7934, align 4
  %7936 = insertelement <4 x float> zeroinitializer, float %7935, i32 0
  %7937 = insertelement <4 x float> %7936, float 0.000000e+00, i32 1
  %7938 = insertelement <4 x float> %7937, float 0.000000e+00, i32 2
  %7939 = insertelement <4 x float> %7938, float 0.000000e+00, i32 3
  %7940 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7933, <4 x float> %7939, <4 x float> %7925)
  %7941 = extractelement <4 x float> %7940, i32 0
  %7942 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7943 = getelementptr inbounds i8, i8* %7942, i64 8
  %7944 = bitcast i8* %7943 to float*
  store float %7941, float* %7944, align 4
  %7945 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7946 = bitcast i8* %7945 to float*
  %7947 = load float, float* %7946, align 4
  %7948 = insertelement <4 x float> zeroinitializer, float %7947, i32 0
  %7949 = insertelement <4 x float> %7948, float 1.000000e+00, i32 1
  %7950 = insertelement <4 x float> %7949, float 1.000000e+00, i32 2
  %7951 = insertelement <4 x float> %7950, float 1.000000e+00, i32 3
  %7952 = getelementptr inbounds float, float* %1, i64 2
  %7953 = load float, float* %7952, align 4
  %7954 = insertelement <4 x float> zeroinitializer, float %7953, i32 0
  %7955 = insertelement <4 x float> %7954, float 0.000000e+00, i32 1
  %7956 = insertelement <4 x float> %7955, float 0.000000e+00, i32 2
  %7957 = insertelement <4 x float> %7956, float 0.000000e+00, i32 3
  %7958 = fmul <4 x float> %7951, %7957
  %7959 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7960 = getelementptr inbounds i8, i8* %7959, i64 4
  %7961 = bitcast i8* %7960 to float*
  %7962 = load float, float* %7961, align 4
  %7963 = insertelement <4 x float> zeroinitializer, float %7962, i32 0
  %7964 = insertelement <4 x float> %7963, float 1.000000e+00, i32 1
  %7965 = insertelement <4 x float> %7964, float 1.000000e+00, i32 2
  %7966 = insertelement <4 x float> %7965, float 1.000000e+00, i32 3
  %7967 = getelementptr inbounds float, float* %1, i64 6
  %7968 = load float, float* %7967, align 4
  %7969 = insertelement <4 x float> zeroinitializer, float %7968, i32 0
  %7970 = insertelement <4 x float> %7969, float 0.000000e+00, i32 1
  %7971 = insertelement <4 x float> %7970, float 0.000000e+00, i32 2
  %7972 = insertelement <4 x float> %7971, float 0.000000e+00, i32 3
  %7973 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7966, <4 x float> %7972, <4 x float> %7958)
  %7974 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7975 = getelementptr inbounds i8, i8* %7974, i64 8
  %7976 = bitcast i8* %7975 to float*
  %7977 = load float, float* %7976, align 4
  %7978 = insertelement <4 x float> zeroinitializer, float %7977, i32 0
  %7979 = insertelement <4 x float> %7978, float 1.000000e+00, i32 1
  %7980 = insertelement <4 x float> %7979, float 1.000000e+00, i32 2
  %7981 = insertelement <4 x float> %7980, float 1.000000e+00, i32 3
  %7982 = getelementptr inbounds float, float* %1, i64 10
  %7983 = load float, float* %7982, align 4
  %7984 = insertelement <4 x float> zeroinitializer, float %7983, i32 0
  %7985 = insertelement <4 x float> %7984, float 0.000000e+00, i32 1
  %7986 = insertelement <4 x float> %7985, float 0.000000e+00, i32 2
  %7987 = insertelement <4 x float> %7986, float 0.000000e+00, i32 3
  %7988 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7981, <4 x float> %7987, <4 x float> %7973)
  %7989 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7990 = getelementptr inbounds i8, i8* %7989, i64 12
  %7991 = bitcast i8* %7990 to float*
  %7992 = load float, float* %7991, align 4
  %7993 = insertelement <4 x float> zeroinitializer, float %7992, i32 0
  %7994 = insertelement <4 x float> %7993, float 0.000000e+00, i32 1
  %7995 = insertelement <4 x float> %7994, float 0.000000e+00, i32 2
  %7996 = insertelement <4 x float> %7995, float 0.000000e+00, i32 3
  %7997 = getelementptr inbounds float, float* %1, i64 14
  %7998 = load float, float* %7997, align 4
  %7999 = insertelement <4 x float> zeroinitializer, float %7998, i32 0
  %8000 = insertelement <4 x float> %7999, float 0.000000e+00, i32 1
  %8001 = insertelement <4 x float> %8000, float 0.000000e+00, i32 2
  %8002 = insertelement <4 x float> %8001, float 0.000000e+00, i32 3
  %8003 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7996, <4 x float> %8002, <4 x float> %7988)
  %8004 = extractelement <4 x float> %8003, i32 0
  %8005 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8006 = getelementptr inbounds i8, i8* %8005, i64 8
  %8007 = bitcast i8* %8006 to float*
  store float %8004, float* %8007, align 4
  %8008 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8009 = bitcast i8* %8008 to float*
  %8010 = load float, float* %8009, align 4
  %8011 = insertelement <4 x float> zeroinitializer, float %8010, i32 0
  %8012 = insertelement <4 x float> %8011, float 0.000000e+00, i32 1
  %8013 = insertelement <4 x float> %8012, float 0.000000e+00, i32 2
  %8014 = insertelement <4 x float> %8013, float 0.000000e+00, i32 3
  %8015 = getelementptr inbounds float, float* %1, i64 3
  %8016 = load float, float* %8015, align 4
  %8017 = insertelement <4 x float> zeroinitializer, float %8016, i32 0
  %8018 = insertelement <4 x float> %8017, float 0.000000e+00, i32 1
  %8019 = insertelement <4 x float> %8018, float 0.000000e+00, i32 2
  %8020 = insertelement <4 x float> %8019, float 0.000000e+00, i32 3
  %8021 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8014, <4 x float> %8020, <4 x float> zeroinitializer)
  %8022 = extractelement <4 x float> %8021, i32 0
  %8023 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8024 = getelementptr inbounds i8, i8* %8023, i64 12
  %8025 = bitcast i8* %8024 to float*
  store float %8022, float* %8025, align 4
  %8026 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8027 = bitcast i8* %8026 to float*
  %8028 = load float, float* %8027, align 4
  %8029 = insertelement <4 x float> zeroinitializer, float %8028, i32 0
  %8030 = insertelement <4 x float> %8029, float 1.000000e+00, i32 1
  %8031 = insertelement <4 x float> %8030, float 1.000000e+00, i32 2
  %8032 = insertelement <4 x float> %8031, float 1.000000e+00, i32 3
  %8033 = getelementptr inbounds float, float* %1, i64 3
  %8034 = load float, float* %8033, align 4
  %8035 = insertelement <4 x float> zeroinitializer, float %8034, i32 0
  %8036 = insertelement <4 x float> %8035, float 0.000000e+00, i32 1
  %8037 = insertelement <4 x float> %8036, float 0.000000e+00, i32 2
  %8038 = insertelement <4 x float> %8037, float 0.000000e+00, i32 3
  %8039 = fmul <4 x float> %8032, %8038
  %8040 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8041 = getelementptr inbounds i8, i8* %8040, i64 4
  %8042 = bitcast i8* %8041 to float*
  %8043 = load float, float* %8042, align 4
  %8044 = insertelement <4 x float> zeroinitializer, float %8043, i32 0
  %8045 = insertelement <4 x float> %8044, float 0.000000e+00, i32 1
  %8046 = insertelement <4 x float> %8045, float 0.000000e+00, i32 2
  %8047 = insertelement <4 x float> %8046, float 0.000000e+00, i32 3
  %8048 = getelementptr inbounds float, float* %1, i64 7
  %8049 = load float, float* %8048, align 4
  %8050 = insertelement <4 x float> zeroinitializer, float %8049, i32 0
  %8051 = insertelement <4 x float> %8050, float 0.000000e+00, i32 1
  %8052 = insertelement <4 x float> %8051, float 0.000000e+00, i32 2
  %8053 = insertelement <4 x float> %8052, float 0.000000e+00, i32 3
  %8054 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8047, <4 x float> %8053, <4 x float> %8039)
  %8055 = extractelement <4 x float> %8054, i32 0
  %8056 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8057 = getelementptr inbounds i8, i8* %8056, i64 12
  %8058 = bitcast i8* %8057 to float*
  store float %8055, float* %8058, align 4
  %8059 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8060 = bitcast i8* %8059 to float*
  %8061 = load float, float* %8060, align 4
  %8062 = insertelement <4 x float> zeroinitializer, float %8061, i32 0
  %8063 = insertelement <4 x float> %8062, float 1.000000e+00, i32 1
  %8064 = insertelement <4 x float> %8063, float 1.000000e+00, i32 2
  %8065 = insertelement <4 x float> %8064, float 1.000000e+00, i32 3
  %8066 = getelementptr inbounds float, float* %1, i64 3
  %8067 = load float, float* %8066, align 4
  %8068 = insertelement <4 x float> zeroinitializer, float %8067, i32 0
  %8069 = insertelement <4 x float> %8068, float 0.000000e+00, i32 1
  %8070 = insertelement <4 x float> %8069, float 0.000000e+00, i32 2
  %8071 = insertelement <4 x float> %8070, float 0.000000e+00, i32 3
  %8072 = fmul <4 x float> %8065, %8071
  %8073 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8074 = getelementptr inbounds i8, i8* %8073, i64 4
  %8075 = bitcast i8* %8074 to float*
  %8076 = load float, float* %8075, align 4
  %8077 = insertelement <4 x float> zeroinitializer, float %8076, i32 0
  %8078 = insertelement <4 x float> %8077, float 1.000000e+00, i32 1
  %8079 = insertelement <4 x float> %8078, float 1.000000e+00, i32 2
  %8080 = insertelement <4 x float> %8079, float 1.000000e+00, i32 3
  %8081 = getelementptr inbounds float, float* %1, i64 7
  %8082 = load float, float* %8081, align 4
  %8083 = insertelement <4 x float> zeroinitializer, float %8082, i32 0
  %8084 = insertelement <4 x float> %8083, float 0.000000e+00, i32 1
  %8085 = insertelement <4 x float> %8084, float 0.000000e+00, i32 2
  %8086 = insertelement <4 x float> %8085, float 0.000000e+00, i32 3
  %8087 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8080, <4 x float> %8086, <4 x float> %8072)
  %8088 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8089 = getelementptr inbounds i8, i8* %8088, i64 8
  %8090 = bitcast i8* %8089 to float*
  %8091 = load float, float* %8090, align 4
  %8092 = insertelement <4 x float> zeroinitializer, float %8091, i32 0
  %8093 = insertelement <4 x float> %8092, float 0.000000e+00, i32 1
  %8094 = insertelement <4 x float> %8093, float 0.000000e+00, i32 2
  %8095 = insertelement <4 x float> %8094, float 0.000000e+00, i32 3
  %8096 = getelementptr inbounds float, float* %1, i64 11
  %8097 = load float, float* %8096, align 4
  %8098 = insertelement <4 x float> zeroinitializer, float %8097, i32 0
  %8099 = insertelement <4 x float> %8098, float 0.000000e+00, i32 1
  %8100 = insertelement <4 x float> %8099, float 0.000000e+00, i32 2
  %8101 = insertelement <4 x float> %8100, float 0.000000e+00, i32 3
  %8102 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8095, <4 x float> %8101, <4 x float> %8087)
  %8103 = extractelement <4 x float> %8102, i32 0
  %8104 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8105 = getelementptr inbounds i8, i8* %8104, i64 12
  %8106 = bitcast i8* %8105 to float*
  store float %8103, float* %8106, align 4
  %8107 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8108 = bitcast i8* %8107 to float*
  %8109 = load float, float* %8108, align 4
  %8110 = insertelement <4 x float> zeroinitializer, float %8109, i32 0
  %8111 = insertelement <4 x float> %8110, float 1.000000e+00, i32 1
  %8112 = insertelement <4 x float> %8111, float 1.000000e+00, i32 2
  %8113 = insertelement <4 x float> %8112, float 1.000000e+00, i32 3
  %8114 = getelementptr inbounds float, float* %1, i64 3
  %8115 = load float, float* %8114, align 4
  %8116 = insertelement <4 x float> zeroinitializer, float %8115, i32 0
  %8117 = insertelement <4 x float> %8116, float 0.000000e+00, i32 1
  %8118 = insertelement <4 x float> %8117, float 0.000000e+00, i32 2
  %8119 = insertelement <4 x float> %8118, float 0.000000e+00, i32 3
  %8120 = fmul <4 x float> %8113, %8119
  %8121 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8122 = getelementptr inbounds i8, i8* %8121, i64 4
  %8123 = bitcast i8* %8122 to float*
  %8124 = load float, float* %8123, align 4
  %8125 = insertelement <4 x float> zeroinitializer, float %8124, i32 0
  %8126 = insertelement <4 x float> %8125, float 1.000000e+00, i32 1
  %8127 = insertelement <4 x float> %8126, float 1.000000e+00, i32 2
  %8128 = insertelement <4 x float> %8127, float 1.000000e+00, i32 3
  %8129 = getelementptr inbounds float, float* %1, i64 7
  %8130 = load float, float* %8129, align 4
  %8131 = insertelement <4 x float> zeroinitializer, float %8130, i32 0
  %8132 = insertelement <4 x float> %8131, float 0.000000e+00, i32 1
  %8133 = insertelement <4 x float> %8132, float 0.000000e+00, i32 2
  %8134 = insertelement <4 x float> %8133, float 0.000000e+00, i32 3
  %8135 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8128, <4 x float> %8134, <4 x float> %8120)
  %8136 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8137 = getelementptr inbounds i8, i8* %8136, i64 8
  %8138 = bitcast i8* %8137 to float*
  %8139 = load float, float* %8138, align 4
  %8140 = insertelement <4 x float> zeroinitializer, float %8139, i32 0
  %8141 = insertelement <4 x float> %8140, float 1.000000e+00, i32 1
  %8142 = insertelement <4 x float> %8141, float 1.000000e+00, i32 2
  %8143 = insertelement <4 x float> %8142, float 1.000000e+00, i32 3
  %8144 = getelementptr inbounds float, float* %1, i64 11
  %8145 = load float, float* %8144, align 4
  %8146 = insertelement <4 x float> zeroinitializer, float %8145, i32 0
  %8147 = insertelement <4 x float> %8146, float 0.000000e+00, i32 1
  %8148 = insertelement <4 x float> %8147, float 0.000000e+00, i32 2
  %8149 = insertelement <4 x float> %8148, float 0.000000e+00, i32 3
  %8150 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8143, <4 x float> %8149, <4 x float> %8135)
  %8151 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8152 = getelementptr inbounds i8, i8* %8151, i64 12
  %8153 = bitcast i8* %8152 to float*
  %8154 = load float, float* %8153, align 4
  %8155 = insertelement <4 x float> zeroinitializer, float %8154, i32 0
  %8156 = insertelement <4 x float> %8155, float 0.000000e+00, i32 1
  %8157 = insertelement <4 x float> %8156, float 0.000000e+00, i32 2
  %8158 = insertelement <4 x float> %8157, float 0.000000e+00, i32 3
  %8159 = getelementptr inbounds float, float* %1, i64 15
  %8160 = load float, float* %8159, align 4
  %8161 = insertelement <4 x float> zeroinitializer, float %8160, i32 0
  %8162 = insertelement <4 x float> %8161, float 0.000000e+00, i32 1
  %8163 = insertelement <4 x float> %8162, float 0.000000e+00, i32 2
  %8164 = insertelement <4 x float> %8163, float 0.000000e+00, i32 3
  %8165 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8158, <4 x float> %8164, <4 x float> %8150)
  %8166 = extractelement <4 x float> %8165, i32 0
  %8167 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8168 = getelementptr inbounds i8, i8* %8167, i64 12
  %8169 = bitcast i8* %8168 to float*
  store float %8166, float* %8169, align 4
  %8170 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8171 = getelementptr inbounds i8, i8* %8170, i64 16
  %8172 = bitcast i8* %8171 to float*
  %8173 = load float, float* %8172, align 4
  %8174 = insertelement <4 x float> zeroinitializer, float %8173, i32 0
  %8175 = insertelement <4 x float> %8174, float 0.000000e+00, i32 1
  %8176 = insertelement <4 x float> %8175, float 0.000000e+00, i32 2
  %8177 = insertelement <4 x float> %8176, float 0.000000e+00, i32 3
  %8178 = load float, float* %1, align 4
  %8179 = insertelement <4 x float> zeroinitializer, float %8178, i32 0
  %8180 = insertelement <4 x float> %8179, float 0.000000e+00, i32 1
  %8181 = insertelement <4 x float> %8180, float 0.000000e+00, i32 2
  %8182 = insertelement <4 x float> %8181, float 0.000000e+00, i32 3
  %8183 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8177, <4 x float> %8182, <4 x float> zeroinitializer)
  %8184 = extractelement <4 x float> %8183, i32 0
  %8185 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8186 = getelementptr inbounds i8, i8* %8185, i64 16
  %8187 = bitcast i8* %8186 to float*
  store float %8184, float* %8187, align 4
  %8188 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8189 = getelementptr inbounds i8, i8* %8188, i64 16
  %8190 = bitcast i8* %8189 to float*
  %8191 = load float, float* %8190, align 4
  %8192 = insertelement <4 x float> zeroinitializer, float %8191, i32 0
  %8193 = insertelement <4 x float> %8192, float 1.000000e+00, i32 1
  %8194 = insertelement <4 x float> %8193, float 1.000000e+00, i32 2
  %8195 = insertelement <4 x float> %8194, float 1.000000e+00, i32 3
  %8196 = load float, float* %1, align 4
  %8197 = insertelement <4 x float> zeroinitializer, float %8196, i32 0
  %8198 = insertelement <4 x float> %8197, float 0.000000e+00, i32 1
  %8199 = insertelement <4 x float> %8198, float 0.000000e+00, i32 2
  %8200 = insertelement <4 x float> %8199, float 0.000000e+00, i32 3
  %8201 = fmul <4 x float> %8195, %8200
  %8202 = fadd <4 x float> %8201, zeroinitializer
  %8203 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8204 = getelementptr inbounds i8, i8* %8203, i64 20
  %8205 = bitcast i8* %8204 to float*
  %8206 = load float, float* %8205, align 4
  %8207 = insertelement <4 x float> zeroinitializer, float %8206, i32 0
  %8208 = insertelement <4 x float> %8207, float 0.000000e+00, i32 1
  %8209 = insertelement <4 x float> %8208, float 0.000000e+00, i32 2
  %8210 = insertelement <4 x float> %8209, float 0.000000e+00, i32 3
  %8211 = getelementptr inbounds float, float* %1, i64 4
  %8212 = load float, float* %8211, align 4
  %8213 = insertelement <4 x float> zeroinitializer, float %8212, i32 0
  %8214 = insertelement <4 x float> %8213, float 0.000000e+00, i32 1
  %8215 = insertelement <4 x float> %8214, float 0.000000e+00, i32 2
  %8216 = insertelement <4 x float> %8215, float 0.000000e+00, i32 3
  %8217 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8210, <4 x float> %8216, <4 x float> %8202)
  %8218 = extractelement <4 x float> %8217, i32 0
  %8219 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8220 = getelementptr inbounds i8, i8* %8219, i64 16
  %8221 = bitcast i8* %8220 to float*
  store float %8218, float* %8221, align 4
  %8222 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8223 = getelementptr inbounds i8, i8* %8222, i64 16
  %8224 = bitcast i8* %8223 to float*
  %8225 = load float, float* %8224, align 4
  %8226 = insertelement <4 x float> zeroinitializer, float %8225, i32 0
  %8227 = insertelement <4 x float> %8226, float 1.000000e+00, i32 1
  %8228 = insertelement <4 x float> %8227, float 1.000000e+00, i32 2
  %8229 = insertelement <4 x float> %8228, float 1.000000e+00, i32 3
  %8230 = load float, float* %1, align 4
  %8231 = insertelement <4 x float> zeroinitializer, float %8230, i32 0
  %8232 = insertelement <4 x float> %8231, float 0.000000e+00, i32 1
  %8233 = insertelement <4 x float> %8232, float 0.000000e+00, i32 2
  %8234 = insertelement <4 x float> %8233, float 0.000000e+00, i32 3
  %8235 = fmul <4 x float> %8229, %8234
  %8236 = fadd <4 x float> %8235, zeroinitializer
  %8237 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8238 = getelementptr inbounds i8, i8* %8237, i64 20
  %8239 = bitcast i8* %8238 to float*
  %8240 = load float, float* %8239, align 4
  %8241 = insertelement <4 x float> zeroinitializer, float %8240, i32 0
  %8242 = insertelement <4 x float> %8241, float 1.000000e+00, i32 1
  %8243 = insertelement <4 x float> %8242, float 1.000000e+00, i32 2
  %8244 = insertelement <4 x float> %8243, float 1.000000e+00, i32 3
  %8245 = getelementptr inbounds float, float* %1, i64 4
  %8246 = load float, float* %8245, align 4
  %8247 = insertelement <4 x float> zeroinitializer, float %8246, i32 0
  %8248 = insertelement <4 x float> %8247, float 0.000000e+00, i32 1
  %8249 = insertelement <4 x float> %8248, float 0.000000e+00, i32 2
  %8250 = insertelement <4 x float> %8249, float 0.000000e+00, i32 3
  %8251 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8244, <4 x float> %8250, <4 x float> %8236)
  %8252 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8253 = getelementptr inbounds i8, i8* %8252, i64 24
  %8254 = bitcast i8* %8253 to float*
  %8255 = load float, float* %8254, align 4
  %8256 = insertelement <4 x float> zeroinitializer, float %8255, i32 0
  %8257 = insertelement <4 x float> %8256, float 0.000000e+00, i32 1
  %8258 = insertelement <4 x float> %8257, float 0.000000e+00, i32 2
  %8259 = insertelement <4 x float> %8258, float 0.000000e+00, i32 3
  %8260 = getelementptr inbounds float, float* %1, i64 8
  %8261 = load float, float* %8260, align 4
  %8262 = insertelement <4 x float> zeroinitializer, float %8261, i32 0
  %8263 = insertelement <4 x float> %8262, float 0.000000e+00, i32 1
  %8264 = insertelement <4 x float> %8263, float 0.000000e+00, i32 2
  %8265 = insertelement <4 x float> %8264, float 0.000000e+00, i32 3
  %8266 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8259, <4 x float> %8265, <4 x float> %8251)
  %8267 = extractelement <4 x float> %8266, i32 0
  %8268 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8269 = getelementptr inbounds i8, i8* %8268, i64 16
  %8270 = bitcast i8* %8269 to float*
  store float %8267, float* %8270, align 4
  %8271 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8272 = getelementptr inbounds i8, i8* %8271, i64 16
  %8273 = bitcast i8* %8272 to float*
  %8274 = load float, float* %8273, align 4
  %8275 = insertelement <4 x float> zeroinitializer, float %8274, i32 0
  %8276 = insertelement <4 x float> %8275, float 1.000000e+00, i32 1
  %8277 = insertelement <4 x float> %8276, float 1.000000e+00, i32 2
  %8278 = insertelement <4 x float> %8277, float 1.000000e+00, i32 3
  %8279 = load float, float* %1, align 4
  %8280 = insertelement <4 x float> zeroinitializer, float %8279, i32 0
  %8281 = insertelement <4 x float> %8280, float 0.000000e+00, i32 1
  %8282 = insertelement <4 x float> %8281, float 0.000000e+00, i32 2
  %8283 = insertelement <4 x float> %8282, float 0.000000e+00, i32 3
  %8284 = fmul <4 x float> %8278, %8283
  %8285 = fadd <4 x float> %8284, zeroinitializer
  %8286 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8287 = getelementptr inbounds i8, i8* %8286, i64 20
  %8288 = bitcast i8* %8287 to float*
  %8289 = load float, float* %8288, align 4
  %8290 = insertelement <4 x float> zeroinitializer, float %8289, i32 0
  %8291 = insertelement <4 x float> %8290, float 1.000000e+00, i32 1
  %8292 = insertelement <4 x float> %8291, float 1.000000e+00, i32 2
  %8293 = insertelement <4 x float> %8292, float 1.000000e+00, i32 3
  %8294 = getelementptr inbounds float, float* %1, i64 4
  %8295 = load float, float* %8294, align 4
  %8296 = insertelement <4 x float> zeroinitializer, float %8295, i32 0
  %8297 = insertelement <4 x float> %8296, float 0.000000e+00, i32 1
  %8298 = insertelement <4 x float> %8297, float 0.000000e+00, i32 2
  %8299 = insertelement <4 x float> %8298, float 0.000000e+00, i32 3
  %8300 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8293, <4 x float> %8299, <4 x float> %8285)
  %8301 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8302 = getelementptr inbounds i8, i8* %8301, i64 24
  %8303 = bitcast i8* %8302 to float*
  %8304 = load float, float* %8303, align 4
  %8305 = insertelement <4 x float> zeroinitializer, float %8304, i32 0
  %8306 = insertelement <4 x float> %8305, float 1.000000e+00, i32 1
  %8307 = insertelement <4 x float> %8306, float 1.000000e+00, i32 2
  %8308 = insertelement <4 x float> %8307, float 1.000000e+00, i32 3
  %8309 = getelementptr inbounds float, float* %1, i64 8
  %8310 = load float, float* %8309, align 4
  %8311 = insertelement <4 x float> zeroinitializer, float %8310, i32 0
  %8312 = insertelement <4 x float> %8311, float 0.000000e+00, i32 1
  %8313 = insertelement <4 x float> %8312, float 0.000000e+00, i32 2
  %8314 = insertelement <4 x float> %8313, float 0.000000e+00, i32 3
  %8315 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8308, <4 x float> %8314, <4 x float> %8300)
  %8316 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8317 = getelementptr inbounds i8, i8* %8316, i64 28
  %8318 = bitcast i8* %8317 to float*
  %8319 = load float, float* %8318, align 4
  %8320 = insertelement <4 x float> zeroinitializer, float %8319, i32 0
  %8321 = insertelement <4 x float> %8320, float 0.000000e+00, i32 1
  %8322 = insertelement <4 x float> %8321, float 0.000000e+00, i32 2
  %8323 = insertelement <4 x float> %8322, float 0.000000e+00, i32 3
  %8324 = getelementptr inbounds float, float* %1, i64 12
  %8325 = load float, float* %8324, align 4
  %8326 = insertelement <4 x float> zeroinitializer, float %8325, i32 0
  %8327 = insertelement <4 x float> %8326, float 0.000000e+00, i32 1
  %8328 = insertelement <4 x float> %8327, float 0.000000e+00, i32 2
  %8329 = insertelement <4 x float> %8328, float 0.000000e+00, i32 3
  %8330 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8323, <4 x float> %8329, <4 x float> %8315)
  %8331 = extractelement <4 x float> %8330, i32 0
  %8332 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8333 = getelementptr inbounds i8, i8* %8332, i64 16
  %8334 = bitcast i8* %8333 to float*
  store float %8331, float* %8334, align 4
  %8335 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8336 = getelementptr inbounds i8, i8* %8335, i64 16
  %8337 = bitcast i8* %8336 to float*
  %8338 = load float, float* %8337, align 4
  %8339 = insertelement <4 x float> zeroinitializer, float %8338, i32 0
  %8340 = insertelement <4 x float> %8339, float 0.000000e+00, i32 1
  %8341 = insertelement <4 x float> %8340, float 0.000000e+00, i32 2
  %8342 = insertelement <4 x float> %8341, float 0.000000e+00, i32 3
  %8343 = getelementptr inbounds float, float* %1, i64 1
  %8344 = load float, float* %8343, align 4
  %8345 = insertelement <4 x float> zeroinitializer, float %8344, i32 0
  %8346 = insertelement <4 x float> %8345, float 0.000000e+00, i32 1
  %8347 = insertelement <4 x float> %8346, float 0.000000e+00, i32 2
  %8348 = insertelement <4 x float> %8347, float 0.000000e+00, i32 3
  %8349 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8342, <4 x float> %8348, <4 x float> zeroinitializer)
  %8350 = extractelement <4 x float> %8349, i32 0
  %8351 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8352 = getelementptr inbounds i8, i8* %8351, i64 20
  %8353 = bitcast i8* %8352 to float*
  store float %8350, float* %8353, align 4
  %8354 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8355 = getelementptr inbounds i8, i8* %8354, i64 16
  %8356 = bitcast i8* %8355 to float*
  %8357 = load float, float* %8356, align 4
  %8358 = insertelement <4 x float> zeroinitializer, float %8357, i32 0
  %8359 = insertelement <4 x float> %8358, float 1.000000e+00, i32 1
  %8360 = insertelement <4 x float> %8359, float 1.000000e+00, i32 2
  %8361 = insertelement <4 x float> %8360, float 1.000000e+00, i32 3
  %8362 = getelementptr inbounds float, float* %1, i64 1
  %8363 = load float, float* %8362, align 4
  %8364 = insertelement <4 x float> zeroinitializer, float %8363, i32 0
  %8365 = insertelement <4 x float> %8364, float 0.000000e+00, i32 1
  %8366 = insertelement <4 x float> %8365, float 0.000000e+00, i32 2
  %8367 = insertelement <4 x float> %8366, float 0.000000e+00, i32 3
  %8368 = fmul <4 x float> %8361, %8367
  %8369 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8370 = getelementptr inbounds i8, i8* %8369, i64 20
  %8371 = bitcast i8* %8370 to float*
  %8372 = load float, float* %8371, align 4
  %8373 = insertelement <4 x float> zeroinitializer, float %8372, i32 0
  %8374 = insertelement <4 x float> %8373, float 0.000000e+00, i32 1
  %8375 = insertelement <4 x float> %8374, float 0.000000e+00, i32 2
  %8376 = insertelement <4 x float> %8375, float 0.000000e+00, i32 3
  %8377 = getelementptr inbounds float, float* %1, i64 5
  %8378 = load float, float* %8377, align 4
  %8379 = insertelement <4 x float> zeroinitializer, float %8378, i32 0
  %8380 = insertelement <4 x float> %8379, float 0.000000e+00, i32 1
  %8381 = insertelement <4 x float> %8380, float 0.000000e+00, i32 2
  %8382 = insertelement <4 x float> %8381, float 0.000000e+00, i32 3
  %8383 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8376, <4 x float> %8382, <4 x float> %8368)
  %8384 = extractelement <4 x float> %8383, i32 0
  %8385 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8386 = getelementptr inbounds i8, i8* %8385, i64 20
  %8387 = bitcast i8* %8386 to float*
  store float %8384, float* %8387, align 4
  %8388 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8389 = getelementptr inbounds i8, i8* %8388, i64 16
  %8390 = bitcast i8* %8389 to float*
  %8391 = load float, float* %8390, align 4
  %8392 = insertelement <4 x float> zeroinitializer, float %8391, i32 0
  %8393 = insertelement <4 x float> %8392, float 1.000000e+00, i32 1
  %8394 = insertelement <4 x float> %8393, float 1.000000e+00, i32 2
  %8395 = insertelement <4 x float> %8394, float 1.000000e+00, i32 3
  %8396 = getelementptr inbounds float, float* %1, i64 1
  %8397 = load float, float* %8396, align 4
  %8398 = insertelement <4 x float> zeroinitializer, float %8397, i32 0
  %8399 = insertelement <4 x float> %8398, float 0.000000e+00, i32 1
  %8400 = insertelement <4 x float> %8399, float 0.000000e+00, i32 2
  %8401 = insertelement <4 x float> %8400, float 0.000000e+00, i32 3
  %8402 = fmul <4 x float> %8395, %8401
  %8403 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8404 = getelementptr inbounds i8, i8* %8403, i64 20
  %8405 = bitcast i8* %8404 to float*
  %8406 = load float, float* %8405, align 4
  %8407 = insertelement <4 x float> zeroinitializer, float %8406, i32 0
  %8408 = insertelement <4 x float> %8407, float 1.000000e+00, i32 1
  %8409 = insertelement <4 x float> %8408, float 1.000000e+00, i32 2
  %8410 = insertelement <4 x float> %8409, float 1.000000e+00, i32 3
  %8411 = getelementptr inbounds float, float* %1, i64 5
  %8412 = load float, float* %8411, align 4
  %8413 = insertelement <4 x float> zeroinitializer, float %8412, i32 0
  %8414 = insertelement <4 x float> %8413, float 0.000000e+00, i32 1
  %8415 = insertelement <4 x float> %8414, float 0.000000e+00, i32 2
  %8416 = insertelement <4 x float> %8415, float 0.000000e+00, i32 3
  %8417 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8410, <4 x float> %8416, <4 x float> %8402)
  %8418 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8419 = getelementptr inbounds i8, i8* %8418, i64 24
  %8420 = bitcast i8* %8419 to float*
  %8421 = load float, float* %8420, align 4
  %8422 = insertelement <4 x float> zeroinitializer, float %8421, i32 0
  %8423 = insertelement <4 x float> %8422, float 0.000000e+00, i32 1
  %8424 = insertelement <4 x float> %8423, float 0.000000e+00, i32 2
  %8425 = insertelement <4 x float> %8424, float 0.000000e+00, i32 3
  %8426 = getelementptr inbounds float, float* %1, i64 9
  %8427 = load float, float* %8426, align 4
  %8428 = insertelement <4 x float> zeroinitializer, float %8427, i32 0
  %8429 = insertelement <4 x float> %8428, float 0.000000e+00, i32 1
  %8430 = insertelement <4 x float> %8429, float 0.000000e+00, i32 2
  %8431 = insertelement <4 x float> %8430, float 0.000000e+00, i32 3
  %8432 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8425, <4 x float> %8431, <4 x float> %8417)
  %8433 = extractelement <4 x float> %8432, i32 0
  %8434 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8435 = getelementptr inbounds i8, i8* %8434, i64 20
  %8436 = bitcast i8* %8435 to float*
  store float %8433, float* %8436, align 4
  %8437 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8438 = getelementptr inbounds i8, i8* %8437, i64 16
  %8439 = bitcast i8* %8438 to float*
  %8440 = load float, float* %8439, align 4
  %8441 = insertelement <4 x float> zeroinitializer, float %8440, i32 0
  %8442 = insertelement <4 x float> %8441, float 1.000000e+00, i32 1
  %8443 = insertelement <4 x float> %8442, float 1.000000e+00, i32 2
  %8444 = insertelement <4 x float> %8443, float 1.000000e+00, i32 3
  %8445 = getelementptr inbounds float, float* %1, i64 1
  %8446 = load float, float* %8445, align 4
  %8447 = insertelement <4 x float> zeroinitializer, float %8446, i32 0
  %8448 = insertelement <4 x float> %8447, float 0.000000e+00, i32 1
  %8449 = insertelement <4 x float> %8448, float 0.000000e+00, i32 2
  %8450 = insertelement <4 x float> %8449, float 0.000000e+00, i32 3
  %8451 = fmul <4 x float> %8444, %8450
  %8452 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8453 = getelementptr inbounds i8, i8* %8452, i64 20
  %8454 = bitcast i8* %8453 to float*
  %8455 = load float, float* %8454, align 4
  %8456 = insertelement <4 x float> zeroinitializer, float %8455, i32 0
  %8457 = insertelement <4 x float> %8456, float 1.000000e+00, i32 1
  %8458 = insertelement <4 x float> %8457, float 1.000000e+00, i32 2
  %8459 = insertelement <4 x float> %8458, float 1.000000e+00, i32 3
  %8460 = getelementptr inbounds float, float* %1, i64 5
  %8461 = load float, float* %8460, align 4
  %8462 = insertelement <4 x float> zeroinitializer, float %8461, i32 0
  %8463 = insertelement <4 x float> %8462, float 0.000000e+00, i32 1
  %8464 = insertelement <4 x float> %8463, float 0.000000e+00, i32 2
  %8465 = insertelement <4 x float> %8464, float 0.000000e+00, i32 3
  %8466 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8459, <4 x float> %8465, <4 x float> %8451)
  %8467 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8468 = getelementptr inbounds i8, i8* %8467, i64 24
  %8469 = bitcast i8* %8468 to float*
  %8470 = load float, float* %8469, align 4
  %8471 = insertelement <4 x float> zeroinitializer, float %8470, i32 0
  %8472 = insertelement <4 x float> %8471, float 1.000000e+00, i32 1
  %8473 = insertelement <4 x float> %8472, float 1.000000e+00, i32 2
  %8474 = insertelement <4 x float> %8473, float 1.000000e+00, i32 3
  %8475 = getelementptr inbounds float, float* %1, i64 9
  %8476 = load float, float* %8475, align 4
  %8477 = insertelement <4 x float> zeroinitializer, float %8476, i32 0
  %8478 = insertelement <4 x float> %8477, float 0.000000e+00, i32 1
  %8479 = insertelement <4 x float> %8478, float 0.000000e+00, i32 2
  %8480 = insertelement <4 x float> %8479, float 0.000000e+00, i32 3
  %8481 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8474, <4 x float> %8480, <4 x float> %8466)
  %8482 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8483 = getelementptr inbounds i8, i8* %8482, i64 28
  %8484 = bitcast i8* %8483 to float*
  %8485 = load float, float* %8484, align 4
  %8486 = insertelement <4 x float> zeroinitializer, float %8485, i32 0
  %8487 = insertelement <4 x float> %8486, float 0.000000e+00, i32 1
  %8488 = insertelement <4 x float> %8487, float 0.000000e+00, i32 2
  %8489 = insertelement <4 x float> %8488, float 0.000000e+00, i32 3
  %8490 = getelementptr inbounds float, float* %1, i64 13
  %8491 = load float, float* %8490, align 4
  %8492 = insertelement <4 x float> zeroinitializer, float %8491, i32 0
  %8493 = insertelement <4 x float> %8492, float 0.000000e+00, i32 1
  %8494 = insertelement <4 x float> %8493, float 0.000000e+00, i32 2
  %8495 = insertelement <4 x float> %8494, float 0.000000e+00, i32 3
  %8496 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8489, <4 x float> %8495, <4 x float> %8481)
  %8497 = extractelement <4 x float> %8496, i32 0
  %8498 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8499 = getelementptr inbounds i8, i8* %8498, i64 20
  %8500 = bitcast i8* %8499 to float*
  store float %8497, float* %8500, align 4
  %8501 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8502 = getelementptr inbounds i8, i8* %8501, i64 16
  %8503 = bitcast i8* %8502 to float*
  %8504 = load float, float* %8503, align 4
  %8505 = insertelement <4 x float> zeroinitializer, float %8504, i32 0
  %8506 = insertelement <4 x float> %8505, float 0.000000e+00, i32 1
  %8507 = insertelement <4 x float> %8506, float 0.000000e+00, i32 2
  %8508 = insertelement <4 x float> %8507, float 0.000000e+00, i32 3
  %8509 = getelementptr inbounds float, float* %1, i64 2
  %8510 = load float, float* %8509, align 4
  %8511 = insertelement <4 x float> zeroinitializer, float %8510, i32 0
  %8512 = insertelement <4 x float> %8511, float 0.000000e+00, i32 1
  %8513 = insertelement <4 x float> %8512, float 0.000000e+00, i32 2
  %8514 = insertelement <4 x float> %8513, float 0.000000e+00, i32 3
  %8515 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8508, <4 x float> %8514, <4 x float> zeroinitializer)
  %8516 = extractelement <4 x float> %8515, i32 0
  %8517 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8518 = getelementptr inbounds i8, i8* %8517, i64 24
  %8519 = bitcast i8* %8518 to float*
  store float %8516, float* %8519, align 4
  %8520 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8521 = getelementptr inbounds i8, i8* %8520, i64 16
  %8522 = bitcast i8* %8521 to float*
  %8523 = load float, float* %8522, align 4
  %8524 = insertelement <4 x float> zeroinitializer, float %8523, i32 0
  %8525 = insertelement <4 x float> %8524, float 1.000000e+00, i32 1
  %8526 = insertelement <4 x float> %8525, float 1.000000e+00, i32 2
  %8527 = insertelement <4 x float> %8526, float 1.000000e+00, i32 3
  %8528 = getelementptr inbounds float, float* %1, i64 2
  %8529 = load float, float* %8528, align 4
  %8530 = insertelement <4 x float> zeroinitializer, float %8529, i32 0
  %8531 = insertelement <4 x float> %8530, float 0.000000e+00, i32 1
  %8532 = insertelement <4 x float> %8531, float 0.000000e+00, i32 2
  %8533 = insertelement <4 x float> %8532, float 0.000000e+00, i32 3
  %8534 = fmul <4 x float> %8527, %8533
  %8535 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8536 = getelementptr inbounds i8, i8* %8535, i64 20
  %8537 = bitcast i8* %8536 to float*
  %8538 = load float, float* %8537, align 4
  %8539 = insertelement <4 x float> zeroinitializer, float %8538, i32 0
  %8540 = insertelement <4 x float> %8539, float 0.000000e+00, i32 1
  %8541 = insertelement <4 x float> %8540, float 0.000000e+00, i32 2
  %8542 = insertelement <4 x float> %8541, float 0.000000e+00, i32 3
  %8543 = getelementptr inbounds float, float* %1, i64 6
  %8544 = load float, float* %8543, align 4
  %8545 = insertelement <4 x float> zeroinitializer, float %8544, i32 0
  %8546 = insertelement <4 x float> %8545, float 0.000000e+00, i32 1
  %8547 = insertelement <4 x float> %8546, float 0.000000e+00, i32 2
  %8548 = insertelement <4 x float> %8547, float 0.000000e+00, i32 3
  %8549 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8542, <4 x float> %8548, <4 x float> %8534)
  %8550 = extractelement <4 x float> %8549, i32 0
  %8551 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8552 = getelementptr inbounds i8, i8* %8551, i64 24
  %8553 = bitcast i8* %8552 to float*
  store float %8550, float* %8553, align 4
  %8554 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8555 = getelementptr inbounds i8, i8* %8554, i64 16
  %8556 = bitcast i8* %8555 to float*
  %8557 = load float, float* %8556, align 4
  %8558 = insertelement <4 x float> zeroinitializer, float %8557, i32 0
  %8559 = insertelement <4 x float> %8558, float 1.000000e+00, i32 1
  %8560 = insertelement <4 x float> %8559, float 1.000000e+00, i32 2
  %8561 = insertelement <4 x float> %8560, float 1.000000e+00, i32 3
  %8562 = getelementptr inbounds float, float* %1, i64 2
  %8563 = load float, float* %8562, align 4
  %8564 = insertelement <4 x float> zeroinitializer, float %8563, i32 0
  %8565 = insertelement <4 x float> %8564, float 0.000000e+00, i32 1
  %8566 = insertelement <4 x float> %8565, float 0.000000e+00, i32 2
  %8567 = insertelement <4 x float> %8566, float 0.000000e+00, i32 3
  %8568 = fmul <4 x float> %8561, %8567
  %8569 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8570 = getelementptr inbounds i8, i8* %8569, i64 20
  %8571 = bitcast i8* %8570 to float*
  %8572 = load float, float* %8571, align 4
  %8573 = insertelement <4 x float> zeroinitializer, float %8572, i32 0
  %8574 = insertelement <4 x float> %8573, float 1.000000e+00, i32 1
  %8575 = insertelement <4 x float> %8574, float 1.000000e+00, i32 2
  %8576 = insertelement <4 x float> %8575, float 1.000000e+00, i32 3
  %8577 = getelementptr inbounds float, float* %1, i64 6
  %8578 = load float, float* %8577, align 4
  %8579 = insertelement <4 x float> zeroinitializer, float %8578, i32 0
  %8580 = insertelement <4 x float> %8579, float 0.000000e+00, i32 1
  %8581 = insertelement <4 x float> %8580, float 0.000000e+00, i32 2
  %8582 = insertelement <4 x float> %8581, float 0.000000e+00, i32 3
  %8583 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8576, <4 x float> %8582, <4 x float> %8568)
  %8584 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8585 = getelementptr inbounds i8, i8* %8584, i64 24
  %8586 = bitcast i8* %8585 to float*
  %8587 = load float, float* %8586, align 4
  %8588 = insertelement <4 x float> zeroinitializer, float %8587, i32 0
  %8589 = insertelement <4 x float> %8588, float 0.000000e+00, i32 1
  %8590 = insertelement <4 x float> %8589, float 0.000000e+00, i32 2
  %8591 = insertelement <4 x float> %8590, float 0.000000e+00, i32 3
  %8592 = getelementptr inbounds float, float* %1, i64 10
  %8593 = load float, float* %8592, align 4
  %8594 = insertelement <4 x float> zeroinitializer, float %8593, i32 0
  %8595 = insertelement <4 x float> %8594, float 0.000000e+00, i32 1
  %8596 = insertelement <4 x float> %8595, float 0.000000e+00, i32 2
  %8597 = insertelement <4 x float> %8596, float 0.000000e+00, i32 3
  %8598 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8591, <4 x float> %8597, <4 x float> %8583)
  %8599 = extractelement <4 x float> %8598, i32 0
  %8600 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8601 = getelementptr inbounds i8, i8* %8600, i64 24
  %8602 = bitcast i8* %8601 to float*
  store float %8599, float* %8602, align 4
  %8603 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8604 = getelementptr inbounds i8, i8* %8603, i64 16
  %8605 = bitcast i8* %8604 to float*
  %8606 = load float, float* %8605, align 4
  %8607 = insertelement <4 x float> zeroinitializer, float %8606, i32 0
  %8608 = insertelement <4 x float> %8607, float 1.000000e+00, i32 1
  %8609 = insertelement <4 x float> %8608, float 1.000000e+00, i32 2
  %8610 = insertelement <4 x float> %8609, float 1.000000e+00, i32 3
  %8611 = getelementptr inbounds float, float* %1, i64 2
  %8612 = load float, float* %8611, align 4
  %8613 = insertelement <4 x float> zeroinitializer, float %8612, i32 0
  %8614 = insertelement <4 x float> %8613, float 0.000000e+00, i32 1
  %8615 = insertelement <4 x float> %8614, float 0.000000e+00, i32 2
  %8616 = insertelement <4 x float> %8615, float 0.000000e+00, i32 3
  %8617 = fmul <4 x float> %8610, %8616
  %8618 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8619 = getelementptr inbounds i8, i8* %8618, i64 20
  %8620 = bitcast i8* %8619 to float*
  %8621 = load float, float* %8620, align 4
  %8622 = insertelement <4 x float> zeroinitializer, float %8621, i32 0
  %8623 = insertelement <4 x float> %8622, float 1.000000e+00, i32 1
  %8624 = insertelement <4 x float> %8623, float 1.000000e+00, i32 2
  %8625 = insertelement <4 x float> %8624, float 1.000000e+00, i32 3
  %8626 = getelementptr inbounds float, float* %1, i64 6
  %8627 = load float, float* %8626, align 4
  %8628 = insertelement <4 x float> zeroinitializer, float %8627, i32 0
  %8629 = insertelement <4 x float> %8628, float 0.000000e+00, i32 1
  %8630 = insertelement <4 x float> %8629, float 0.000000e+00, i32 2
  %8631 = insertelement <4 x float> %8630, float 0.000000e+00, i32 3
  %8632 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8625, <4 x float> %8631, <4 x float> %8617)
  %8633 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8634 = getelementptr inbounds i8, i8* %8633, i64 24
  %8635 = bitcast i8* %8634 to float*
  %8636 = load float, float* %8635, align 4
  %8637 = insertelement <4 x float> zeroinitializer, float %8636, i32 0
  %8638 = insertelement <4 x float> %8637, float 1.000000e+00, i32 1
  %8639 = insertelement <4 x float> %8638, float 1.000000e+00, i32 2
  %8640 = insertelement <4 x float> %8639, float 1.000000e+00, i32 3
  %8641 = getelementptr inbounds float, float* %1, i64 10
  %8642 = load float, float* %8641, align 4
  %8643 = insertelement <4 x float> zeroinitializer, float %8642, i32 0
  %8644 = insertelement <4 x float> %8643, float 0.000000e+00, i32 1
  %8645 = insertelement <4 x float> %8644, float 0.000000e+00, i32 2
  %8646 = insertelement <4 x float> %8645, float 0.000000e+00, i32 3
  %8647 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8640, <4 x float> %8646, <4 x float> %8632)
  %8648 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8649 = getelementptr inbounds i8, i8* %8648, i64 28
  %8650 = bitcast i8* %8649 to float*
  %8651 = load float, float* %8650, align 4
  %8652 = insertelement <4 x float> zeroinitializer, float %8651, i32 0
  %8653 = insertelement <4 x float> %8652, float 0.000000e+00, i32 1
  %8654 = insertelement <4 x float> %8653, float 0.000000e+00, i32 2
  %8655 = insertelement <4 x float> %8654, float 0.000000e+00, i32 3
  %8656 = getelementptr inbounds float, float* %1, i64 14
  %8657 = load float, float* %8656, align 4
  %8658 = insertelement <4 x float> zeroinitializer, float %8657, i32 0
  %8659 = insertelement <4 x float> %8658, float 0.000000e+00, i32 1
  %8660 = insertelement <4 x float> %8659, float 0.000000e+00, i32 2
  %8661 = insertelement <4 x float> %8660, float 0.000000e+00, i32 3
  %8662 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8655, <4 x float> %8661, <4 x float> %8647)
  %8663 = extractelement <4 x float> %8662, i32 0
  %8664 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8665 = getelementptr inbounds i8, i8* %8664, i64 24
  %8666 = bitcast i8* %8665 to float*
  store float %8663, float* %8666, align 4
  %8667 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8668 = getelementptr inbounds i8, i8* %8667, i64 16
  %8669 = bitcast i8* %8668 to float*
  %8670 = load float, float* %8669, align 4
  %8671 = insertelement <4 x float> zeroinitializer, float %8670, i32 0
  %8672 = insertelement <4 x float> %8671, float 0.000000e+00, i32 1
  %8673 = insertelement <4 x float> %8672, float 0.000000e+00, i32 2
  %8674 = insertelement <4 x float> %8673, float 0.000000e+00, i32 3
  %8675 = getelementptr inbounds float, float* %1, i64 3
  %8676 = load float, float* %8675, align 4
  %8677 = insertelement <4 x float> zeroinitializer, float %8676, i32 0
  %8678 = insertelement <4 x float> %8677, float 0.000000e+00, i32 1
  %8679 = insertelement <4 x float> %8678, float 0.000000e+00, i32 2
  %8680 = insertelement <4 x float> %8679, float 0.000000e+00, i32 3
  %8681 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8674, <4 x float> %8680, <4 x float> zeroinitializer)
  %8682 = extractelement <4 x float> %8681, i32 0
  %8683 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8684 = getelementptr inbounds i8, i8* %8683, i64 28
  %8685 = bitcast i8* %8684 to float*
  store float %8682, float* %8685, align 4
  %8686 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8687 = getelementptr inbounds i8, i8* %8686, i64 16
  %8688 = bitcast i8* %8687 to float*
  %8689 = load float, float* %8688, align 4
  %8690 = insertelement <4 x float> zeroinitializer, float %8689, i32 0
  %8691 = insertelement <4 x float> %8690, float 1.000000e+00, i32 1
  %8692 = insertelement <4 x float> %8691, float 1.000000e+00, i32 2
  %8693 = insertelement <4 x float> %8692, float 1.000000e+00, i32 3
  %8694 = getelementptr inbounds float, float* %1, i64 3
  %8695 = load float, float* %8694, align 4
  %8696 = insertelement <4 x float> zeroinitializer, float %8695, i32 0
  %8697 = insertelement <4 x float> %8696, float 0.000000e+00, i32 1
  %8698 = insertelement <4 x float> %8697, float 0.000000e+00, i32 2
  %8699 = insertelement <4 x float> %8698, float 0.000000e+00, i32 3
  %8700 = fmul <4 x float> %8693, %8699
  %8701 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8702 = getelementptr inbounds i8, i8* %8701, i64 20
  %8703 = bitcast i8* %8702 to float*
  %8704 = load float, float* %8703, align 4
  %8705 = insertelement <4 x float> zeroinitializer, float %8704, i32 0
  %8706 = insertelement <4 x float> %8705, float 0.000000e+00, i32 1
  %8707 = insertelement <4 x float> %8706, float 0.000000e+00, i32 2
  %8708 = insertelement <4 x float> %8707, float 0.000000e+00, i32 3
  %8709 = getelementptr inbounds float, float* %1, i64 7
  %8710 = load float, float* %8709, align 4
  %8711 = insertelement <4 x float> zeroinitializer, float %8710, i32 0
  %8712 = insertelement <4 x float> %8711, float 0.000000e+00, i32 1
  %8713 = insertelement <4 x float> %8712, float 0.000000e+00, i32 2
  %8714 = insertelement <4 x float> %8713, float 0.000000e+00, i32 3
  %8715 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8708, <4 x float> %8714, <4 x float> %8700)
  %8716 = extractelement <4 x float> %8715, i32 0
  %8717 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8718 = getelementptr inbounds i8, i8* %8717, i64 28
  %8719 = bitcast i8* %8718 to float*
  store float %8716, float* %8719, align 4
  %8720 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8721 = getelementptr inbounds i8, i8* %8720, i64 16
  %8722 = bitcast i8* %8721 to float*
  %8723 = load float, float* %8722, align 4
  %8724 = insertelement <4 x float> zeroinitializer, float %8723, i32 0
  %8725 = insertelement <4 x float> %8724, float 1.000000e+00, i32 1
  %8726 = insertelement <4 x float> %8725, float 1.000000e+00, i32 2
  %8727 = insertelement <4 x float> %8726, float 1.000000e+00, i32 3
  %8728 = getelementptr inbounds float, float* %1, i64 3
  %8729 = load float, float* %8728, align 4
  %8730 = insertelement <4 x float> zeroinitializer, float %8729, i32 0
  %8731 = insertelement <4 x float> %8730, float 0.000000e+00, i32 1
  %8732 = insertelement <4 x float> %8731, float 0.000000e+00, i32 2
  %8733 = insertelement <4 x float> %8732, float 0.000000e+00, i32 3
  %8734 = fmul <4 x float> %8727, %8733
  %8735 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8736 = getelementptr inbounds i8, i8* %8735, i64 20
  %8737 = bitcast i8* %8736 to float*
  %8738 = load float, float* %8737, align 4
  %8739 = insertelement <4 x float> zeroinitializer, float %8738, i32 0
  %8740 = insertelement <4 x float> %8739, float 1.000000e+00, i32 1
  %8741 = insertelement <4 x float> %8740, float 1.000000e+00, i32 2
  %8742 = insertelement <4 x float> %8741, float 1.000000e+00, i32 3
  %8743 = getelementptr inbounds float, float* %1, i64 7
  %8744 = load float, float* %8743, align 4
  %8745 = insertelement <4 x float> zeroinitializer, float %8744, i32 0
  %8746 = insertelement <4 x float> %8745, float 0.000000e+00, i32 1
  %8747 = insertelement <4 x float> %8746, float 0.000000e+00, i32 2
  %8748 = insertelement <4 x float> %8747, float 0.000000e+00, i32 3
  %8749 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8742, <4 x float> %8748, <4 x float> %8734)
  %8750 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8751 = getelementptr inbounds i8, i8* %8750, i64 24
  %8752 = bitcast i8* %8751 to float*
  %8753 = load float, float* %8752, align 4
  %8754 = insertelement <4 x float> zeroinitializer, float %8753, i32 0
  %8755 = insertelement <4 x float> %8754, float 0.000000e+00, i32 1
  %8756 = insertelement <4 x float> %8755, float 0.000000e+00, i32 2
  %8757 = insertelement <4 x float> %8756, float 0.000000e+00, i32 3
  %8758 = getelementptr inbounds float, float* %1, i64 11
  %8759 = load float, float* %8758, align 4
  %8760 = insertelement <4 x float> zeroinitializer, float %8759, i32 0
  %8761 = insertelement <4 x float> %8760, float 0.000000e+00, i32 1
  %8762 = insertelement <4 x float> %8761, float 0.000000e+00, i32 2
  %8763 = insertelement <4 x float> %8762, float 0.000000e+00, i32 3
  %8764 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8757, <4 x float> %8763, <4 x float> %8749)
  %8765 = extractelement <4 x float> %8764, i32 0
  %8766 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8767 = getelementptr inbounds i8, i8* %8766, i64 28
  %8768 = bitcast i8* %8767 to float*
  store float %8765, float* %8768, align 4
  %8769 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8770 = getelementptr inbounds i8, i8* %8769, i64 16
  %8771 = bitcast i8* %8770 to float*
  %8772 = load float, float* %8771, align 4
  %8773 = insertelement <4 x float> zeroinitializer, float %8772, i32 0
  %8774 = insertelement <4 x float> %8773, float 1.000000e+00, i32 1
  %8775 = insertelement <4 x float> %8774, float 1.000000e+00, i32 2
  %8776 = insertelement <4 x float> %8775, float 1.000000e+00, i32 3
  %8777 = getelementptr inbounds float, float* %1, i64 3
  %8778 = load float, float* %8777, align 4
  %8779 = insertelement <4 x float> zeroinitializer, float %8778, i32 0
  %8780 = insertelement <4 x float> %8779, float 0.000000e+00, i32 1
  %8781 = insertelement <4 x float> %8780, float 0.000000e+00, i32 2
  %8782 = insertelement <4 x float> %8781, float 0.000000e+00, i32 3
  %8783 = fmul <4 x float> %8776, %8782
  %8784 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8785 = getelementptr inbounds i8, i8* %8784, i64 20
  %8786 = bitcast i8* %8785 to float*
  %8787 = load float, float* %8786, align 4
  %8788 = insertelement <4 x float> zeroinitializer, float %8787, i32 0
  %8789 = insertelement <4 x float> %8788, float 1.000000e+00, i32 1
  %8790 = insertelement <4 x float> %8789, float 1.000000e+00, i32 2
  %8791 = insertelement <4 x float> %8790, float 1.000000e+00, i32 3
  %8792 = getelementptr inbounds float, float* %1, i64 7
  %8793 = load float, float* %8792, align 4
  %8794 = insertelement <4 x float> zeroinitializer, float %8793, i32 0
  %8795 = insertelement <4 x float> %8794, float 0.000000e+00, i32 1
  %8796 = insertelement <4 x float> %8795, float 0.000000e+00, i32 2
  %8797 = insertelement <4 x float> %8796, float 0.000000e+00, i32 3
  %8798 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8791, <4 x float> %8797, <4 x float> %8783)
  %8799 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8800 = getelementptr inbounds i8, i8* %8799, i64 24
  %8801 = bitcast i8* %8800 to float*
  %8802 = load float, float* %8801, align 4
  %8803 = insertelement <4 x float> zeroinitializer, float %8802, i32 0
  %8804 = insertelement <4 x float> %8803, float 1.000000e+00, i32 1
  %8805 = insertelement <4 x float> %8804, float 1.000000e+00, i32 2
  %8806 = insertelement <4 x float> %8805, float 1.000000e+00, i32 3
  %8807 = getelementptr inbounds float, float* %1, i64 11
  %8808 = load float, float* %8807, align 4
  %8809 = insertelement <4 x float> zeroinitializer, float %8808, i32 0
  %8810 = insertelement <4 x float> %8809, float 0.000000e+00, i32 1
  %8811 = insertelement <4 x float> %8810, float 0.000000e+00, i32 2
  %8812 = insertelement <4 x float> %8811, float 0.000000e+00, i32 3
  %8813 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8806, <4 x float> %8812, <4 x float> %8798)
  %8814 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8815 = getelementptr inbounds i8, i8* %8814, i64 28
  %8816 = bitcast i8* %8815 to float*
  %8817 = load float, float* %8816, align 4
  %8818 = insertelement <4 x float> zeroinitializer, float %8817, i32 0
  %8819 = insertelement <4 x float> %8818, float 0.000000e+00, i32 1
  %8820 = insertelement <4 x float> %8819, float 0.000000e+00, i32 2
  %8821 = insertelement <4 x float> %8820, float 0.000000e+00, i32 3
  %8822 = getelementptr inbounds float, float* %1, i64 15
  %8823 = load float, float* %8822, align 4
  %8824 = insertelement <4 x float> zeroinitializer, float %8823, i32 0
  %8825 = insertelement <4 x float> %8824, float 0.000000e+00, i32 1
  %8826 = insertelement <4 x float> %8825, float 0.000000e+00, i32 2
  %8827 = insertelement <4 x float> %8826, float 0.000000e+00, i32 3
  %8828 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8821, <4 x float> %8827, <4 x float> %8813)
  %8829 = extractelement <4 x float> %8828, i32 0
  %8830 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8831 = getelementptr inbounds i8, i8* %8830, i64 28
  %8832 = bitcast i8* %8831 to float*
  store float %8829, float* %8832, align 4
  %8833 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8834 = getelementptr inbounds i8, i8* %8833, i64 32
  %8835 = bitcast i8* %8834 to float*
  %8836 = load float, float* %8835, align 4
  %8837 = insertelement <4 x float> zeroinitializer, float %8836, i32 0
  %8838 = insertelement <4 x float> %8837, float 0.000000e+00, i32 1
  %8839 = insertelement <4 x float> %8838, float 0.000000e+00, i32 2
  %8840 = insertelement <4 x float> %8839, float 0.000000e+00, i32 3
  %8841 = load float, float* %1, align 4
  %8842 = insertelement <4 x float> zeroinitializer, float %8841, i32 0
  %8843 = insertelement <4 x float> %8842, float 0.000000e+00, i32 1
  %8844 = insertelement <4 x float> %8843, float 0.000000e+00, i32 2
  %8845 = insertelement <4 x float> %8844, float 0.000000e+00, i32 3
  %8846 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8840, <4 x float> %8845, <4 x float> zeroinitializer)
  %8847 = extractelement <4 x float> %8846, i32 0
  %8848 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8849 = getelementptr inbounds i8, i8* %8848, i64 32
  %8850 = bitcast i8* %8849 to float*
  store float %8847, float* %8850, align 4
  %8851 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8852 = getelementptr inbounds i8, i8* %8851, i64 32
  %8853 = bitcast i8* %8852 to float*
  %8854 = load float, float* %8853, align 4
  %8855 = insertelement <4 x float> zeroinitializer, float %8854, i32 0
  %8856 = insertelement <4 x float> %8855, float 1.000000e+00, i32 1
  %8857 = insertelement <4 x float> %8856, float 1.000000e+00, i32 2
  %8858 = insertelement <4 x float> %8857, float 1.000000e+00, i32 3
  %8859 = load float, float* %1, align 4
  %8860 = insertelement <4 x float> zeroinitializer, float %8859, i32 0
  %8861 = insertelement <4 x float> %8860, float 0.000000e+00, i32 1
  %8862 = insertelement <4 x float> %8861, float 0.000000e+00, i32 2
  %8863 = insertelement <4 x float> %8862, float 0.000000e+00, i32 3
  %8864 = fmul <4 x float> %8858, %8863
  %8865 = fadd <4 x float> %8864, zeroinitializer
  %8866 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8867 = getelementptr inbounds i8, i8* %8866, i64 36
  %8868 = bitcast i8* %8867 to float*
  %8869 = load float, float* %8868, align 4
  %8870 = insertelement <4 x float> zeroinitializer, float %8869, i32 0
  %8871 = insertelement <4 x float> %8870, float 0.000000e+00, i32 1
  %8872 = insertelement <4 x float> %8871, float 0.000000e+00, i32 2
  %8873 = insertelement <4 x float> %8872, float 0.000000e+00, i32 3
  %8874 = getelementptr inbounds float, float* %1, i64 4
  %8875 = load float, float* %8874, align 4
  %8876 = insertelement <4 x float> zeroinitializer, float %8875, i32 0
  %8877 = insertelement <4 x float> %8876, float 0.000000e+00, i32 1
  %8878 = insertelement <4 x float> %8877, float 0.000000e+00, i32 2
  %8879 = insertelement <4 x float> %8878, float 0.000000e+00, i32 3
  %8880 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8873, <4 x float> %8879, <4 x float> %8865)
  %8881 = extractelement <4 x float> %8880, i32 0
  %8882 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8883 = getelementptr inbounds i8, i8* %8882, i64 32
  %8884 = bitcast i8* %8883 to float*
  store float %8881, float* %8884, align 4
  %8885 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8886 = getelementptr inbounds i8, i8* %8885, i64 32
  %8887 = bitcast i8* %8886 to float*
  %8888 = load float, float* %8887, align 4
  %8889 = insertelement <4 x float> zeroinitializer, float %8888, i32 0
  %8890 = insertelement <4 x float> %8889, float 1.000000e+00, i32 1
  %8891 = insertelement <4 x float> %8890, float 1.000000e+00, i32 2
  %8892 = insertelement <4 x float> %8891, float 1.000000e+00, i32 3
  %8893 = load float, float* %1, align 4
  %8894 = insertelement <4 x float> zeroinitializer, float %8893, i32 0
  %8895 = insertelement <4 x float> %8894, float 0.000000e+00, i32 1
  %8896 = insertelement <4 x float> %8895, float 0.000000e+00, i32 2
  %8897 = insertelement <4 x float> %8896, float 0.000000e+00, i32 3
  %8898 = fmul <4 x float> %8892, %8897
  %8899 = fadd <4 x float> %8898, zeroinitializer
  %8900 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8901 = getelementptr inbounds i8, i8* %8900, i64 36
  %8902 = bitcast i8* %8901 to float*
  %8903 = load float, float* %8902, align 4
  %8904 = insertelement <4 x float> zeroinitializer, float %8903, i32 0
  %8905 = insertelement <4 x float> %8904, float 1.000000e+00, i32 1
  %8906 = insertelement <4 x float> %8905, float 1.000000e+00, i32 2
  %8907 = insertelement <4 x float> %8906, float 1.000000e+00, i32 3
  %8908 = getelementptr inbounds float, float* %1, i64 4
  %8909 = load float, float* %8908, align 4
  %8910 = insertelement <4 x float> zeroinitializer, float %8909, i32 0
  %8911 = insertelement <4 x float> %8910, float 0.000000e+00, i32 1
  %8912 = insertelement <4 x float> %8911, float 0.000000e+00, i32 2
  %8913 = insertelement <4 x float> %8912, float 0.000000e+00, i32 3
  %8914 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8907, <4 x float> %8913, <4 x float> %8899)
  %8915 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8916 = getelementptr inbounds i8, i8* %8915, i64 40
  %8917 = bitcast i8* %8916 to float*
  %8918 = load float, float* %8917, align 4
  %8919 = insertelement <4 x float> zeroinitializer, float %8918, i32 0
  %8920 = insertelement <4 x float> %8919, float 0.000000e+00, i32 1
  %8921 = insertelement <4 x float> %8920, float 0.000000e+00, i32 2
  %8922 = insertelement <4 x float> %8921, float 0.000000e+00, i32 3
  %8923 = getelementptr inbounds float, float* %1, i64 8
  %8924 = load float, float* %8923, align 4
  %8925 = insertelement <4 x float> zeroinitializer, float %8924, i32 0
  %8926 = insertelement <4 x float> %8925, float 0.000000e+00, i32 1
  %8927 = insertelement <4 x float> %8926, float 0.000000e+00, i32 2
  %8928 = insertelement <4 x float> %8927, float 0.000000e+00, i32 3
  %8929 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8922, <4 x float> %8928, <4 x float> %8914)
  %8930 = extractelement <4 x float> %8929, i32 0
  %8931 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8932 = getelementptr inbounds i8, i8* %8931, i64 32
  %8933 = bitcast i8* %8932 to float*
  store float %8930, float* %8933, align 4
  %8934 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8935 = getelementptr inbounds i8, i8* %8934, i64 32
  %8936 = bitcast i8* %8935 to float*
  %8937 = load float, float* %8936, align 4
  %8938 = insertelement <4 x float> zeroinitializer, float %8937, i32 0
  %8939 = insertelement <4 x float> %8938, float 1.000000e+00, i32 1
  %8940 = insertelement <4 x float> %8939, float 1.000000e+00, i32 2
  %8941 = insertelement <4 x float> %8940, float 1.000000e+00, i32 3
  %8942 = load float, float* %1, align 4
  %8943 = insertelement <4 x float> zeroinitializer, float %8942, i32 0
  %8944 = insertelement <4 x float> %8943, float 0.000000e+00, i32 1
  %8945 = insertelement <4 x float> %8944, float 0.000000e+00, i32 2
  %8946 = insertelement <4 x float> %8945, float 0.000000e+00, i32 3
  %8947 = fmul <4 x float> %8941, %8946
  %8948 = fadd <4 x float> %8947, zeroinitializer
  %8949 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8950 = getelementptr inbounds i8, i8* %8949, i64 36
  %8951 = bitcast i8* %8950 to float*
  %8952 = load float, float* %8951, align 4
  %8953 = insertelement <4 x float> zeroinitializer, float %8952, i32 0
  %8954 = insertelement <4 x float> %8953, float 1.000000e+00, i32 1
  %8955 = insertelement <4 x float> %8954, float 1.000000e+00, i32 2
  %8956 = insertelement <4 x float> %8955, float 1.000000e+00, i32 3
  %8957 = getelementptr inbounds float, float* %1, i64 4
  %8958 = load float, float* %8957, align 4
  %8959 = insertelement <4 x float> zeroinitializer, float %8958, i32 0
  %8960 = insertelement <4 x float> %8959, float 0.000000e+00, i32 1
  %8961 = insertelement <4 x float> %8960, float 0.000000e+00, i32 2
  %8962 = insertelement <4 x float> %8961, float 0.000000e+00, i32 3
  %8963 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8956, <4 x float> %8962, <4 x float> %8948)
  %8964 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8965 = getelementptr inbounds i8, i8* %8964, i64 40
  %8966 = bitcast i8* %8965 to float*
  %8967 = load float, float* %8966, align 4
  %8968 = insertelement <4 x float> zeroinitializer, float %8967, i32 0
  %8969 = insertelement <4 x float> %8968, float 1.000000e+00, i32 1
  %8970 = insertelement <4 x float> %8969, float 1.000000e+00, i32 2
  %8971 = insertelement <4 x float> %8970, float 1.000000e+00, i32 3
  %8972 = getelementptr inbounds float, float* %1, i64 8
  %8973 = load float, float* %8972, align 4
  %8974 = insertelement <4 x float> zeroinitializer, float %8973, i32 0
  %8975 = insertelement <4 x float> %8974, float 0.000000e+00, i32 1
  %8976 = insertelement <4 x float> %8975, float 0.000000e+00, i32 2
  %8977 = insertelement <4 x float> %8976, float 0.000000e+00, i32 3
  %8978 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8971, <4 x float> %8977, <4 x float> %8963)
  %8979 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8980 = getelementptr inbounds i8, i8* %8979, i64 44
  %8981 = bitcast i8* %8980 to float*
  %8982 = load float, float* %8981, align 4
  %8983 = insertelement <4 x float> zeroinitializer, float %8982, i32 0
  %8984 = insertelement <4 x float> %8983, float 0.000000e+00, i32 1
  %8985 = insertelement <4 x float> %8984, float 0.000000e+00, i32 2
  %8986 = insertelement <4 x float> %8985, float 0.000000e+00, i32 3
  %8987 = getelementptr inbounds float, float* %1, i64 12
  %8988 = load float, float* %8987, align 4
  %8989 = insertelement <4 x float> zeroinitializer, float %8988, i32 0
  %8990 = insertelement <4 x float> %8989, float 0.000000e+00, i32 1
  %8991 = insertelement <4 x float> %8990, float 0.000000e+00, i32 2
  %8992 = insertelement <4 x float> %8991, float 0.000000e+00, i32 3
  %8993 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8986, <4 x float> %8992, <4 x float> %8978)
  %8994 = extractelement <4 x float> %8993, i32 0
  %8995 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8996 = getelementptr inbounds i8, i8* %8995, i64 32
  %8997 = bitcast i8* %8996 to float*
  store float %8994, float* %8997, align 4
  %8998 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8999 = getelementptr inbounds i8, i8* %8998, i64 32
  %9000 = bitcast i8* %8999 to float*
  %9001 = load float, float* %9000, align 4
  %9002 = insertelement <4 x float> zeroinitializer, float %9001, i32 0
  %9003 = insertelement <4 x float> %9002, float 0.000000e+00, i32 1
  %9004 = insertelement <4 x float> %9003, float 0.000000e+00, i32 2
  %9005 = insertelement <4 x float> %9004, float 0.000000e+00, i32 3
  %9006 = getelementptr inbounds float, float* %1, i64 1
  %9007 = load float, float* %9006, align 4
  %9008 = insertelement <4 x float> zeroinitializer, float %9007, i32 0
  %9009 = insertelement <4 x float> %9008, float 0.000000e+00, i32 1
  %9010 = insertelement <4 x float> %9009, float 0.000000e+00, i32 2
  %9011 = insertelement <4 x float> %9010, float 0.000000e+00, i32 3
  %9012 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9005, <4 x float> %9011, <4 x float> zeroinitializer)
  %9013 = extractelement <4 x float> %9012, i32 0
  %9014 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9015 = getelementptr inbounds i8, i8* %9014, i64 36
  %9016 = bitcast i8* %9015 to float*
  store float %9013, float* %9016, align 4
  %9017 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9018 = getelementptr inbounds i8, i8* %9017, i64 32
  %9019 = bitcast i8* %9018 to float*
  %9020 = load float, float* %9019, align 4
  %9021 = insertelement <4 x float> zeroinitializer, float %9020, i32 0
  %9022 = insertelement <4 x float> %9021, float 1.000000e+00, i32 1
  %9023 = insertelement <4 x float> %9022, float 1.000000e+00, i32 2
  %9024 = insertelement <4 x float> %9023, float 1.000000e+00, i32 3
  %9025 = getelementptr inbounds float, float* %1, i64 1
  %9026 = load float, float* %9025, align 4
  %9027 = insertelement <4 x float> zeroinitializer, float %9026, i32 0
  %9028 = insertelement <4 x float> %9027, float 0.000000e+00, i32 1
  %9029 = insertelement <4 x float> %9028, float 0.000000e+00, i32 2
  %9030 = insertelement <4 x float> %9029, float 0.000000e+00, i32 3
  %9031 = fmul <4 x float> %9024, %9030
  %9032 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9033 = getelementptr inbounds i8, i8* %9032, i64 36
  %9034 = bitcast i8* %9033 to float*
  %9035 = load float, float* %9034, align 4
  %9036 = insertelement <4 x float> zeroinitializer, float %9035, i32 0
  %9037 = insertelement <4 x float> %9036, float 0.000000e+00, i32 1
  %9038 = insertelement <4 x float> %9037, float 0.000000e+00, i32 2
  %9039 = insertelement <4 x float> %9038, float 0.000000e+00, i32 3
  %9040 = getelementptr inbounds float, float* %1, i64 5
  %9041 = load float, float* %9040, align 4
  %9042 = insertelement <4 x float> zeroinitializer, float %9041, i32 0
  %9043 = insertelement <4 x float> %9042, float 0.000000e+00, i32 1
  %9044 = insertelement <4 x float> %9043, float 0.000000e+00, i32 2
  %9045 = insertelement <4 x float> %9044, float 0.000000e+00, i32 3
  %9046 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9039, <4 x float> %9045, <4 x float> %9031)
  %9047 = extractelement <4 x float> %9046, i32 0
  %9048 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9049 = getelementptr inbounds i8, i8* %9048, i64 36
  %9050 = bitcast i8* %9049 to float*
  store float %9047, float* %9050, align 4
  %9051 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9052 = getelementptr inbounds i8, i8* %9051, i64 32
  %9053 = bitcast i8* %9052 to float*
  %9054 = load float, float* %9053, align 4
  %9055 = insertelement <4 x float> zeroinitializer, float %9054, i32 0
  %9056 = insertelement <4 x float> %9055, float 1.000000e+00, i32 1
  %9057 = insertelement <4 x float> %9056, float 1.000000e+00, i32 2
  %9058 = insertelement <4 x float> %9057, float 1.000000e+00, i32 3
  %9059 = getelementptr inbounds float, float* %1, i64 1
  %9060 = load float, float* %9059, align 4
  %9061 = insertelement <4 x float> zeroinitializer, float %9060, i32 0
  %9062 = insertelement <4 x float> %9061, float 0.000000e+00, i32 1
  %9063 = insertelement <4 x float> %9062, float 0.000000e+00, i32 2
  %9064 = insertelement <4 x float> %9063, float 0.000000e+00, i32 3
  %9065 = fmul <4 x float> %9058, %9064
  %9066 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9067 = getelementptr inbounds i8, i8* %9066, i64 36
  %9068 = bitcast i8* %9067 to float*
  %9069 = load float, float* %9068, align 4
  %9070 = insertelement <4 x float> zeroinitializer, float %9069, i32 0
  %9071 = insertelement <4 x float> %9070, float 1.000000e+00, i32 1
  %9072 = insertelement <4 x float> %9071, float 1.000000e+00, i32 2
  %9073 = insertelement <4 x float> %9072, float 1.000000e+00, i32 3
  %9074 = getelementptr inbounds float, float* %1, i64 5
  %9075 = load float, float* %9074, align 4
  %9076 = insertelement <4 x float> zeroinitializer, float %9075, i32 0
  %9077 = insertelement <4 x float> %9076, float 0.000000e+00, i32 1
  %9078 = insertelement <4 x float> %9077, float 0.000000e+00, i32 2
  %9079 = insertelement <4 x float> %9078, float 0.000000e+00, i32 3
  %9080 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9073, <4 x float> %9079, <4 x float> %9065)
  %9081 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9082 = getelementptr inbounds i8, i8* %9081, i64 40
  %9083 = bitcast i8* %9082 to float*
  %9084 = load float, float* %9083, align 4
  %9085 = insertelement <4 x float> zeroinitializer, float %9084, i32 0
  %9086 = insertelement <4 x float> %9085, float 0.000000e+00, i32 1
  %9087 = insertelement <4 x float> %9086, float 0.000000e+00, i32 2
  %9088 = insertelement <4 x float> %9087, float 0.000000e+00, i32 3
  %9089 = getelementptr inbounds float, float* %1, i64 9
  %9090 = load float, float* %9089, align 4
  %9091 = insertelement <4 x float> zeroinitializer, float %9090, i32 0
  %9092 = insertelement <4 x float> %9091, float 0.000000e+00, i32 1
  %9093 = insertelement <4 x float> %9092, float 0.000000e+00, i32 2
  %9094 = insertelement <4 x float> %9093, float 0.000000e+00, i32 3
  %9095 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9088, <4 x float> %9094, <4 x float> %9080)
  %9096 = extractelement <4 x float> %9095, i32 0
  %9097 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9098 = getelementptr inbounds i8, i8* %9097, i64 36
  %9099 = bitcast i8* %9098 to float*
  store float %9096, float* %9099, align 4
  %9100 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9101 = getelementptr inbounds i8, i8* %9100, i64 32
  %9102 = bitcast i8* %9101 to float*
  %9103 = load float, float* %9102, align 4
  %9104 = insertelement <4 x float> zeroinitializer, float %9103, i32 0
  %9105 = insertelement <4 x float> %9104, float 1.000000e+00, i32 1
  %9106 = insertelement <4 x float> %9105, float 1.000000e+00, i32 2
  %9107 = insertelement <4 x float> %9106, float 1.000000e+00, i32 3
  %9108 = getelementptr inbounds float, float* %1, i64 1
  %9109 = load float, float* %9108, align 4
  %9110 = insertelement <4 x float> zeroinitializer, float %9109, i32 0
  %9111 = insertelement <4 x float> %9110, float 0.000000e+00, i32 1
  %9112 = insertelement <4 x float> %9111, float 0.000000e+00, i32 2
  %9113 = insertelement <4 x float> %9112, float 0.000000e+00, i32 3
  %9114 = fmul <4 x float> %9107, %9113
  %9115 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9116 = getelementptr inbounds i8, i8* %9115, i64 36
  %9117 = bitcast i8* %9116 to float*
  %9118 = load float, float* %9117, align 4
  %9119 = insertelement <4 x float> zeroinitializer, float %9118, i32 0
  %9120 = insertelement <4 x float> %9119, float 1.000000e+00, i32 1
  %9121 = insertelement <4 x float> %9120, float 1.000000e+00, i32 2
  %9122 = insertelement <4 x float> %9121, float 1.000000e+00, i32 3
  %9123 = getelementptr inbounds float, float* %1, i64 5
  %9124 = load float, float* %9123, align 4
  %9125 = insertelement <4 x float> zeroinitializer, float %9124, i32 0
  %9126 = insertelement <4 x float> %9125, float 0.000000e+00, i32 1
  %9127 = insertelement <4 x float> %9126, float 0.000000e+00, i32 2
  %9128 = insertelement <4 x float> %9127, float 0.000000e+00, i32 3
  %9129 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9122, <4 x float> %9128, <4 x float> %9114)
  %9130 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9131 = getelementptr inbounds i8, i8* %9130, i64 40
  %9132 = bitcast i8* %9131 to float*
  %9133 = load float, float* %9132, align 4
  %9134 = insertelement <4 x float> zeroinitializer, float %9133, i32 0
  %9135 = insertelement <4 x float> %9134, float 1.000000e+00, i32 1
  %9136 = insertelement <4 x float> %9135, float 1.000000e+00, i32 2
  %9137 = insertelement <4 x float> %9136, float 1.000000e+00, i32 3
  %9138 = getelementptr inbounds float, float* %1, i64 9
  %9139 = load float, float* %9138, align 4
  %9140 = insertelement <4 x float> zeroinitializer, float %9139, i32 0
  %9141 = insertelement <4 x float> %9140, float 0.000000e+00, i32 1
  %9142 = insertelement <4 x float> %9141, float 0.000000e+00, i32 2
  %9143 = insertelement <4 x float> %9142, float 0.000000e+00, i32 3
  %9144 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9137, <4 x float> %9143, <4 x float> %9129)
  %9145 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9146 = getelementptr inbounds i8, i8* %9145, i64 44
  %9147 = bitcast i8* %9146 to float*
  %9148 = load float, float* %9147, align 4
  %9149 = insertelement <4 x float> zeroinitializer, float %9148, i32 0
  %9150 = insertelement <4 x float> %9149, float 0.000000e+00, i32 1
  %9151 = insertelement <4 x float> %9150, float 0.000000e+00, i32 2
  %9152 = insertelement <4 x float> %9151, float 0.000000e+00, i32 3
  %9153 = getelementptr inbounds float, float* %1, i64 13
  %9154 = load float, float* %9153, align 4
  %9155 = insertelement <4 x float> zeroinitializer, float %9154, i32 0
  %9156 = insertelement <4 x float> %9155, float 0.000000e+00, i32 1
  %9157 = insertelement <4 x float> %9156, float 0.000000e+00, i32 2
  %9158 = insertelement <4 x float> %9157, float 0.000000e+00, i32 3
  %9159 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9152, <4 x float> %9158, <4 x float> %9144)
  %9160 = extractelement <4 x float> %9159, i32 0
  %9161 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9162 = getelementptr inbounds i8, i8* %9161, i64 36
  %9163 = bitcast i8* %9162 to float*
  store float %9160, float* %9163, align 4
  %9164 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9165 = getelementptr inbounds i8, i8* %9164, i64 32
  %9166 = bitcast i8* %9165 to float*
  %9167 = load float, float* %9166, align 4
  %9168 = insertelement <4 x float> zeroinitializer, float %9167, i32 0
  %9169 = insertelement <4 x float> %9168, float 0.000000e+00, i32 1
  %9170 = insertelement <4 x float> %9169, float 0.000000e+00, i32 2
  %9171 = insertelement <4 x float> %9170, float 0.000000e+00, i32 3
  %9172 = getelementptr inbounds float, float* %1, i64 2
  %9173 = load float, float* %9172, align 4
  %9174 = insertelement <4 x float> zeroinitializer, float %9173, i32 0
  %9175 = insertelement <4 x float> %9174, float 0.000000e+00, i32 1
  %9176 = insertelement <4 x float> %9175, float 0.000000e+00, i32 2
  %9177 = insertelement <4 x float> %9176, float 0.000000e+00, i32 3
  %9178 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9171, <4 x float> %9177, <4 x float> zeroinitializer)
  %9179 = extractelement <4 x float> %9178, i32 0
  %9180 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9181 = getelementptr inbounds i8, i8* %9180, i64 40
  %9182 = bitcast i8* %9181 to float*
  store float %9179, float* %9182, align 4
  %9183 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9184 = getelementptr inbounds i8, i8* %9183, i64 32
  %9185 = bitcast i8* %9184 to float*
  %9186 = load float, float* %9185, align 4
  %9187 = insertelement <4 x float> zeroinitializer, float %9186, i32 0
  %9188 = insertelement <4 x float> %9187, float 1.000000e+00, i32 1
  %9189 = insertelement <4 x float> %9188, float 1.000000e+00, i32 2
  %9190 = insertelement <4 x float> %9189, float 1.000000e+00, i32 3
  %9191 = getelementptr inbounds float, float* %1, i64 2
  %9192 = load float, float* %9191, align 4
  %9193 = insertelement <4 x float> zeroinitializer, float %9192, i32 0
  %9194 = insertelement <4 x float> %9193, float 0.000000e+00, i32 1
  %9195 = insertelement <4 x float> %9194, float 0.000000e+00, i32 2
  %9196 = insertelement <4 x float> %9195, float 0.000000e+00, i32 3
  %9197 = fmul <4 x float> %9190, %9196
  %9198 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9199 = getelementptr inbounds i8, i8* %9198, i64 36
  %9200 = bitcast i8* %9199 to float*
  %9201 = load float, float* %9200, align 4
  %9202 = insertelement <4 x float> zeroinitializer, float %9201, i32 0
  %9203 = insertelement <4 x float> %9202, float 0.000000e+00, i32 1
  %9204 = insertelement <4 x float> %9203, float 0.000000e+00, i32 2
  %9205 = insertelement <4 x float> %9204, float 0.000000e+00, i32 3
  %9206 = getelementptr inbounds float, float* %1, i64 6
  %9207 = load float, float* %9206, align 4
  %9208 = insertelement <4 x float> zeroinitializer, float %9207, i32 0
  %9209 = insertelement <4 x float> %9208, float 0.000000e+00, i32 1
  %9210 = insertelement <4 x float> %9209, float 0.000000e+00, i32 2
  %9211 = insertelement <4 x float> %9210, float 0.000000e+00, i32 3
  %9212 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9205, <4 x float> %9211, <4 x float> %9197)
  %9213 = extractelement <4 x float> %9212, i32 0
  %9214 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9215 = getelementptr inbounds i8, i8* %9214, i64 40
  %9216 = bitcast i8* %9215 to float*
  store float %9213, float* %9216, align 4
  %9217 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9218 = getelementptr inbounds i8, i8* %9217, i64 32
  %9219 = bitcast i8* %9218 to float*
  %9220 = load float, float* %9219, align 4
  %9221 = insertelement <4 x float> zeroinitializer, float %9220, i32 0
  %9222 = insertelement <4 x float> %9221, float 1.000000e+00, i32 1
  %9223 = insertelement <4 x float> %9222, float 1.000000e+00, i32 2
  %9224 = insertelement <4 x float> %9223, float 1.000000e+00, i32 3
  %9225 = getelementptr inbounds float, float* %1, i64 2
  %9226 = load float, float* %9225, align 4
  %9227 = insertelement <4 x float> zeroinitializer, float %9226, i32 0
  %9228 = insertelement <4 x float> %9227, float 0.000000e+00, i32 1
  %9229 = insertelement <4 x float> %9228, float 0.000000e+00, i32 2
  %9230 = insertelement <4 x float> %9229, float 0.000000e+00, i32 3
  %9231 = fmul <4 x float> %9224, %9230
  %9232 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9233 = getelementptr inbounds i8, i8* %9232, i64 36
  %9234 = bitcast i8* %9233 to float*
  %9235 = load float, float* %9234, align 4
  %9236 = insertelement <4 x float> zeroinitializer, float %9235, i32 0
  %9237 = insertelement <4 x float> %9236, float 1.000000e+00, i32 1
  %9238 = insertelement <4 x float> %9237, float 1.000000e+00, i32 2
  %9239 = insertelement <4 x float> %9238, float 1.000000e+00, i32 3
  %9240 = getelementptr inbounds float, float* %1, i64 6
  %9241 = load float, float* %9240, align 4
  %9242 = insertelement <4 x float> zeroinitializer, float %9241, i32 0
  %9243 = insertelement <4 x float> %9242, float 0.000000e+00, i32 1
  %9244 = insertelement <4 x float> %9243, float 0.000000e+00, i32 2
  %9245 = insertelement <4 x float> %9244, float 0.000000e+00, i32 3
  %9246 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9239, <4 x float> %9245, <4 x float> %9231)
  %9247 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9248 = getelementptr inbounds i8, i8* %9247, i64 40
  %9249 = bitcast i8* %9248 to float*
  %9250 = load float, float* %9249, align 4
  %9251 = insertelement <4 x float> zeroinitializer, float %9250, i32 0
  %9252 = insertelement <4 x float> %9251, float 0.000000e+00, i32 1
  %9253 = insertelement <4 x float> %9252, float 0.000000e+00, i32 2
  %9254 = insertelement <4 x float> %9253, float 0.000000e+00, i32 3
  %9255 = getelementptr inbounds float, float* %1, i64 10
  %9256 = load float, float* %9255, align 4
  %9257 = insertelement <4 x float> zeroinitializer, float %9256, i32 0
  %9258 = insertelement <4 x float> %9257, float 0.000000e+00, i32 1
  %9259 = insertelement <4 x float> %9258, float 0.000000e+00, i32 2
  %9260 = insertelement <4 x float> %9259, float 0.000000e+00, i32 3
  %9261 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9254, <4 x float> %9260, <4 x float> %9246)
  %9262 = extractelement <4 x float> %9261, i32 0
  %9263 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9264 = getelementptr inbounds i8, i8* %9263, i64 40
  %9265 = bitcast i8* %9264 to float*
  store float %9262, float* %9265, align 4
  %9266 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9267 = getelementptr inbounds i8, i8* %9266, i64 32
  %9268 = bitcast i8* %9267 to float*
  %9269 = load float, float* %9268, align 4
  %9270 = insertelement <4 x float> zeroinitializer, float %9269, i32 0
  %9271 = insertelement <4 x float> %9270, float 1.000000e+00, i32 1
  %9272 = insertelement <4 x float> %9271, float 1.000000e+00, i32 2
  %9273 = insertelement <4 x float> %9272, float 1.000000e+00, i32 3
  %9274 = getelementptr inbounds float, float* %1, i64 2
  %9275 = load float, float* %9274, align 4
  %9276 = insertelement <4 x float> zeroinitializer, float %9275, i32 0
  %9277 = insertelement <4 x float> %9276, float 0.000000e+00, i32 1
  %9278 = insertelement <4 x float> %9277, float 0.000000e+00, i32 2
  %9279 = insertelement <4 x float> %9278, float 0.000000e+00, i32 3
  %9280 = fmul <4 x float> %9273, %9279
  %9281 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9282 = getelementptr inbounds i8, i8* %9281, i64 36
  %9283 = bitcast i8* %9282 to float*
  %9284 = load float, float* %9283, align 4
  %9285 = insertelement <4 x float> zeroinitializer, float %9284, i32 0
  %9286 = insertelement <4 x float> %9285, float 1.000000e+00, i32 1
  %9287 = insertelement <4 x float> %9286, float 1.000000e+00, i32 2
  %9288 = insertelement <4 x float> %9287, float 1.000000e+00, i32 3
  %9289 = getelementptr inbounds float, float* %1, i64 6
  %9290 = load float, float* %9289, align 4
  %9291 = insertelement <4 x float> zeroinitializer, float %9290, i32 0
  %9292 = insertelement <4 x float> %9291, float 0.000000e+00, i32 1
  %9293 = insertelement <4 x float> %9292, float 0.000000e+00, i32 2
  %9294 = insertelement <4 x float> %9293, float 0.000000e+00, i32 3
  %9295 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9288, <4 x float> %9294, <4 x float> %9280)
  %9296 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9297 = getelementptr inbounds i8, i8* %9296, i64 40
  %9298 = bitcast i8* %9297 to float*
  %9299 = load float, float* %9298, align 4
  %9300 = insertelement <4 x float> zeroinitializer, float %9299, i32 0
  %9301 = insertelement <4 x float> %9300, float 1.000000e+00, i32 1
  %9302 = insertelement <4 x float> %9301, float 1.000000e+00, i32 2
  %9303 = insertelement <4 x float> %9302, float 1.000000e+00, i32 3
  %9304 = getelementptr inbounds float, float* %1, i64 10
  %9305 = load float, float* %9304, align 4
  %9306 = insertelement <4 x float> zeroinitializer, float %9305, i32 0
  %9307 = insertelement <4 x float> %9306, float 0.000000e+00, i32 1
  %9308 = insertelement <4 x float> %9307, float 0.000000e+00, i32 2
  %9309 = insertelement <4 x float> %9308, float 0.000000e+00, i32 3
  %9310 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9303, <4 x float> %9309, <4 x float> %9295)
  %9311 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9312 = getelementptr inbounds i8, i8* %9311, i64 44
  %9313 = bitcast i8* %9312 to float*
  %9314 = load float, float* %9313, align 4
  %9315 = insertelement <4 x float> zeroinitializer, float %9314, i32 0
  %9316 = insertelement <4 x float> %9315, float 0.000000e+00, i32 1
  %9317 = insertelement <4 x float> %9316, float 0.000000e+00, i32 2
  %9318 = insertelement <4 x float> %9317, float 0.000000e+00, i32 3
  %9319 = getelementptr inbounds float, float* %1, i64 14
  %9320 = load float, float* %9319, align 4
  %9321 = insertelement <4 x float> zeroinitializer, float %9320, i32 0
  %9322 = insertelement <4 x float> %9321, float 0.000000e+00, i32 1
  %9323 = insertelement <4 x float> %9322, float 0.000000e+00, i32 2
  %9324 = insertelement <4 x float> %9323, float 0.000000e+00, i32 3
  %9325 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9318, <4 x float> %9324, <4 x float> %9310)
  %9326 = extractelement <4 x float> %9325, i32 0
  %9327 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9328 = getelementptr inbounds i8, i8* %9327, i64 40
  %9329 = bitcast i8* %9328 to float*
  store float %9326, float* %9329, align 4
  %9330 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9331 = getelementptr inbounds i8, i8* %9330, i64 32
  %9332 = bitcast i8* %9331 to float*
  %9333 = load float, float* %9332, align 4
  %9334 = insertelement <4 x float> zeroinitializer, float %9333, i32 0
  %9335 = insertelement <4 x float> %9334, float 0.000000e+00, i32 1
  %9336 = insertelement <4 x float> %9335, float 0.000000e+00, i32 2
  %9337 = insertelement <4 x float> %9336, float 0.000000e+00, i32 3
  %9338 = getelementptr inbounds float, float* %1, i64 3
  %9339 = load float, float* %9338, align 4
  %9340 = insertelement <4 x float> zeroinitializer, float %9339, i32 0
  %9341 = insertelement <4 x float> %9340, float 0.000000e+00, i32 1
  %9342 = insertelement <4 x float> %9341, float 0.000000e+00, i32 2
  %9343 = insertelement <4 x float> %9342, float 0.000000e+00, i32 3
  %9344 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9337, <4 x float> %9343, <4 x float> zeroinitializer)
  %9345 = extractelement <4 x float> %9344, i32 0
  %9346 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9347 = getelementptr inbounds i8, i8* %9346, i64 44
  %9348 = bitcast i8* %9347 to float*
  store float %9345, float* %9348, align 4
  %9349 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9350 = getelementptr inbounds i8, i8* %9349, i64 32
  %9351 = bitcast i8* %9350 to float*
  %9352 = load float, float* %9351, align 4
  %9353 = insertelement <4 x float> zeroinitializer, float %9352, i32 0
  %9354 = insertelement <4 x float> %9353, float 1.000000e+00, i32 1
  %9355 = insertelement <4 x float> %9354, float 1.000000e+00, i32 2
  %9356 = insertelement <4 x float> %9355, float 1.000000e+00, i32 3
  %9357 = getelementptr inbounds float, float* %1, i64 3
  %9358 = load float, float* %9357, align 4
  %9359 = insertelement <4 x float> zeroinitializer, float %9358, i32 0
  %9360 = insertelement <4 x float> %9359, float 0.000000e+00, i32 1
  %9361 = insertelement <4 x float> %9360, float 0.000000e+00, i32 2
  %9362 = insertelement <4 x float> %9361, float 0.000000e+00, i32 3
  %9363 = fmul <4 x float> %9356, %9362
  %9364 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9365 = getelementptr inbounds i8, i8* %9364, i64 36
  %9366 = bitcast i8* %9365 to float*
  %9367 = load float, float* %9366, align 4
  %9368 = insertelement <4 x float> zeroinitializer, float %9367, i32 0
  %9369 = insertelement <4 x float> %9368, float 0.000000e+00, i32 1
  %9370 = insertelement <4 x float> %9369, float 0.000000e+00, i32 2
  %9371 = insertelement <4 x float> %9370, float 0.000000e+00, i32 3
  %9372 = getelementptr inbounds float, float* %1, i64 7
  %9373 = load float, float* %9372, align 4
  %9374 = insertelement <4 x float> zeroinitializer, float %9373, i32 0
  %9375 = insertelement <4 x float> %9374, float 0.000000e+00, i32 1
  %9376 = insertelement <4 x float> %9375, float 0.000000e+00, i32 2
  %9377 = insertelement <4 x float> %9376, float 0.000000e+00, i32 3
  %9378 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9371, <4 x float> %9377, <4 x float> %9363)
  %9379 = extractelement <4 x float> %9378, i32 0
  %9380 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9381 = getelementptr inbounds i8, i8* %9380, i64 44
  %9382 = bitcast i8* %9381 to float*
  store float %9379, float* %9382, align 4
  %9383 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9384 = getelementptr inbounds i8, i8* %9383, i64 32
  %9385 = bitcast i8* %9384 to float*
  %9386 = load float, float* %9385, align 4
  %9387 = insertelement <4 x float> zeroinitializer, float %9386, i32 0
  %9388 = insertelement <4 x float> %9387, float 1.000000e+00, i32 1
  %9389 = insertelement <4 x float> %9388, float 1.000000e+00, i32 2
  %9390 = insertelement <4 x float> %9389, float 1.000000e+00, i32 3
  %9391 = getelementptr inbounds float, float* %1, i64 3
  %9392 = load float, float* %9391, align 4
  %9393 = insertelement <4 x float> zeroinitializer, float %9392, i32 0
  %9394 = insertelement <4 x float> %9393, float 0.000000e+00, i32 1
  %9395 = insertelement <4 x float> %9394, float 0.000000e+00, i32 2
  %9396 = insertelement <4 x float> %9395, float 0.000000e+00, i32 3
  %9397 = fmul <4 x float> %9390, %9396
  %9398 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9399 = getelementptr inbounds i8, i8* %9398, i64 36
  %9400 = bitcast i8* %9399 to float*
  %9401 = load float, float* %9400, align 4
  %9402 = insertelement <4 x float> zeroinitializer, float %9401, i32 0
  %9403 = insertelement <4 x float> %9402, float 1.000000e+00, i32 1
  %9404 = insertelement <4 x float> %9403, float 1.000000e+00, i32 2
  %9405 = insertelement <4 x float> %9404, float 1.000000e+00, i32 3
  %9406 = getelementptr inbounds float, float* %1, i64 7
  %9407 = load float, float* %9406, align 4
  %9408 = insertelement <4 x float> zeroinitializer, float %9407, i32 0
  %9409 = insertelement <4 x float> %9408, float 0.000000e+00, i32 1
  %9410 = insertelement <4 x float> %9409, float 0.000000e+00, i32 2
  %9411 = insertelement <4 x float> %9410, float 0.000000e+00, i32 3
  %9412 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9405, <4 x float> %9411, <4 x float> %9397)
  %9413 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9414 = getelementptr inbounds i8, i8* %9413, i64 40
  %9415 = bitcast i8* %9414 to float*
  %9416 = load float, float* %9415, align 4
  %9417 = insertelement <4 x float> zeroinitializer, float %9416, i32 0
  %9418 = insertelement <4 x float> %9417, float 0.000000e+00, i32 1
  %9419 = insertelement <4 x float> %9418, float 0.000000e+00, i32 2
  %9420 = insertelement <4 x float> %9419, float 0.000000e+00, i32 3
  %9421 = getelementptr inbounds float, float* %1, i64 11
  %9422 = load float, float* %9421, align 4
  %9423 = insertelement <4 x float> zeroinitializer, float %9422, i32 0
  %9424 = insertelement <4 x float> %9423, float 0.000000e+00, i32 1
  %9425 = insertelement <4 x float> %9424, float 0.000000e+00, i32 2
  %9426 = insertelement <4 x float> %9425, float 0.000000e+00, i32 3
  %9427 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9420, <4 x float> %9426, <4 x float> %9412)
  %9428 = extractelement <4 x float> %9427, i32 0
  %9429 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9430 = getelementptr inbounds i8, i8* %9429, i64 44
  %9431 = bitcast i8* %9430 to float*
  store float %9428, float* %9431, align 4
  %9432 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9433 = getelementptr inbounds i8, i8* %9432, i64 32
  %9434 = bitcast i8* %9433 to float*
  %9435 = load float, float* %9434, align 4
  %9436 = insertelement <4 x float> zeroinitializer, float %9435, i32 0
  %9437 = insertelement <4 x float> %9436, float 1.000000e+00, i32 1
  %9438 = insertelement <4 x float> %9437, float 1.000000e+00, i32 2
  %9439 = insertelement <4 x float> %9438, float 1.000000e+00, i32 3
  %9440 = getelementptr inbounds float, float* %1, i64 3
  %9441 = load float, float* %9440, align 4
  %9442 = insertelement <4 x float> zeroinitializer, float %9441, i32 0
  %9443 = insertelement <4 x float> %9442, float 0.000000e+00, i32 1
  %9444 = insertelement <4 x float> %9443, float 0.000000e+00, i32 2
  %9445 = insertelement <4 x float> %9444, float 0.000000e+00, i32 3
  %9446 = fmul <4 x float> %9439, %9445
  %9447 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9448 = getelementptr inbounds i8, i8* %9447, i64 36
  %9449 = bitcast i8* %9448 to float*
  %9450 = load float, float* %9449, align 4
  %9451 = insertelement <4 x float> zeroinitializer, float %9450, i32 0
  %9452 = insertelement <4 x float> %9451, float 1.000000e+00, i32 1
  %9453 = insertelement <4 x float> %9452, float 1.000000e+00, i32 2
  %9454 = insertelement <4 x float> %9453, float 1.000000e+00, i32 3
  %9455 = getelementptr inbounds float, float* %1, i64 7
  %9456 = load float, float* %9455, align 4
  %9457 = insertelement <4 x float> zeroinitializer, float %9456, i32 0
  %9458 = insertelement <4 x float> %9457, float 0.000000e+00, i32 1
  %9459 = insertelement <4 x float> %9458, float 0.000000e+00, i32 2
  %9460 = insertelement <4 x float> %9459, float 0.000000e+00, i32 3
  %9461 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9454, <4 x float> %9460, <4 x float> %9446)
  %9462 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9463 = getelementptr inbounds i8, i8* %9462, i64 40
  %9464 = bitcast i8* %9463 to float*
  %9465 = load float, float* %9464, align 4
  %9466 = insertelement <4 x float> zeroinitializer, float %9465, i32 0
  %9467 = insertelement <4 x float> %9466, float 1.000000e+00, i32 1
  %9468 = insertelement <4 x float> %9467, float 1.000000e+00, i32 2
  %9469 = insertelement <4 x float> %9468, float 1.000000e+00, i32 3
  %9470 = getelementptr inbounds float, float* %1, i64 11
  %9471 = load float, float* %9470, align 4
  %9472 = insertelement <4 x float> zeroinitializer, float %9471, i32 0
  %9473 = insertelement <4 x float> %9472, float 0.000000e+00, i32 1
  %9474 = insertelement <4 x float> %9473, float 0.000000e+00, i32 2
  %9475 = insertelement <4 x float> %9474, float 0.000000e+00, i32 3
  %9476 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9469, <4 x float> %9475, <4 x float> %9461)
  %9477 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9478 = getelementptr inbounds i8, i8* %9477, i64 44
  %9479 = bitcast i8* %9478 to float*
  %9480 = load float, float* %9479, align 4
  %9481 = insertelement <4 x float> zeroinitializer, float %9480, i32 0
  %9482 = insertelement <4 x float> %9481, float 0.000000e+00, i32 1
  %9483 = insertelement <4 x float> %9482, float 0.000000e+00, i32 2
  %9484 = insertelement <4 x float> %9483, float 0.000000e+00, i32 3
  %9485 = getelementptr inbounds float, float* %1, i64 15
  %9486 = load float, float* %9485, align 4
  %9487 = insertelement <4 x float> zeroinitializer, float %9486, i32 0
  %9488 = insertelement <4 x float> %9487, float 0.000000e+00, i32 1
  %9489 = insertelement <4 x float> %9488, float 0.000000e+00, i32 2
  %9490 = insertelement <4 x float> %9489, float 0.000000e+00, i32 3
  %9491 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9484, <4 x float> %9490, <4 x float> %9476)
  %9492 = extractelement <4 x float> %9491, i32 0
  %9493 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9494 = getelementptr inbounds i8, i8* %9493, i64 44
  %9495 = bitcast i8* %9494 to float*
  store float %9492, float* %9495, align 4
  %9496 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9497 = getelementptr inbounds i8, i8* %9496, i64 48
  %9498 = bitcast i8* %9497 to float*
  %9499 = load float, float* %9498, align 4
  %9500 = insertelement <4 x float> zeroinitializer, float %9499, i32 0
  %9501 = insertelement <4 x float> %9500, float 0.000000e+00, i32 1
  %9502 = insertelement <4 x float> %9501, float 0.000000e+00, i32 2
  %9503 = insertelement <4 x float> %9502, float 0.000000e+00, i32 3
  %9504 = load float, float* %1, align 4
  %9505 = insertelement <4 x float> zeroinitializer, float %9504, i32 0
  %9506 = insertelement <4 x float> %9505, float 0.000000e+00, i32 1
  %9507 = insertelement <4 x float> %9506, float 0.000000e+00, i32 2
  %9508 = insertelement <4 x float> %9507, float 0.000000e+00, i32 3
  %9509 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9503, <4 x float> %9508, <4 x float> zeroinitializer)
  %9510 = extractelement <4 x float> %9509, i32 0
  %9511 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9512 = getelementptr inbounds i8, i8* %9511, i64 48
  %9513 = bitcast i8* %9512 to float*
  store float %9510, float* %9513, align 4
  %9514 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9515 = getelementptr inbounds i8, i8* %9514, i64 48
  %9516 = bitcast i8* %9515 to float*
  %9517 = load float, float* %9516, align 4
  %9518 = insertelement <4 x float> zeroinitializer, float %9517, i32 0
  %9519 = insertelement <4 x float> %9518, float 1.000000e+00, i32 1
  %9520 = insertelement <4 x float> %9519, float 1.000000e+00, i32 2
  %9521 = insertelement <4 x float> %9520, float 1.000000e+00, i32 3
  %9522 = load float, float* %1, align 4
  %9523 = insertelement <4 x float> zeroinitializer, float %9522, i32 0
  %9524 = insertelement <4 x float> %9523, float 0.000000e+00, i32 1
  %9525 = insertelement <4 x float> %9524, float 0.000000e+00, i32 2
  %9526 = insertelement <4 x float> %9525, float 0.000000e+00, i32 3
  %9527 = fmul <4 x float> %9521, %9526
  %9528 = fadd <4 x float> %9527, zeroinitializer
  %9529 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9530 = getelementptr inbounds i8, i8* %9529, i64 52
  %9531 = bitcast i8* %9530 to float*
  %9532 = load float, float* %9531, align 4
  %9533 = insertelement <4 x float> zeroinitializer, float %9532, i32 0
  %9534 = insertelement <4 x float> %9533, float 0.000000e+00, i32 1
  %9535 = insertelement <4 x float> %9534, float 0.000000e+00, i32 2
  %9536 = insertelement <4 x float> %9535, float 0.000000e+00, i32 3
  %9537 = getelementptr inbounds float, float* %1, i64 4
  %9538 = load float, float* %9537, align 4
  %9539 = insertelement <4 x float> zeroinitializer, float %9538, i32 0
  %9540 = insertelement <4 x float> %9539, float 0.000000e+00, i32 1
  %9541 = insertelement <4 x float> %9540, float 0.000000e+00, i32 2
  %9542 = insertelement <4 x float> %9541, float 0.000000e+00, i32 3
  %9543 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9536, <4 x float> %9542, <4 x float> %9528)
  %9544 = extractelement <4 x float> %9543, i32 0
  %9545 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9546 = getelementptr inbounds i8, i8* %9545, i64 48
  %9547 = bitcast i8* %9546 to float*
  store float %9544, float* %9547, align 4
  %9548 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9549 = getelementptr inbounds i8, i8* %9548, i64 48
  %9550 = bitcast i8* %9549 to float*
  %9551 = load float, float* %9550, align 4
  %9552 = insertelement <4 x float> zeroinitializer, float %9551, i32 0
  %9553 = insertelement <4 x float> %9552, float 1.000000e+00, i32 1
  %9554 = insertelement <4 x float> %9553, float 1.000000e+00, i32 2
  %9555 = insertelement <4 x float> %9554, float 1.000000e+00, i32 3
  %9556 = load float, float* %1, align 4
  %9557 = insertelement <4 x float> zeroinitializer, float %9556, i32 0
  %9558 = insertelement <4 x float> %9557, float 0.000000e+00, i32 1
  %9559 = insertelement <4 x float> %9558, float 0.000000e+00, i32 2
  %9560 = insertelement <4 x float> %9559, float 0.000000e+00, i32 3
  %9561 = fmul <4 x float> %9555, %9560
  %9562 = fadd <4 x float> %9561, zeroinitializer
  %9563 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9564 = getelementptr inbounds i8, i8* %9563, i64 52
  %9565 = bitcast i8* %9564 to float*
  %9566 = load float, float* %9565, align 4
  %9567 = insertelement <4 x float> zeroinitializer, float %9566, i32 0
  %9568 = insertelement <4 x float> %9567, float 1.000000e+00, i32 1
  %9569 = insertelement <4 x float> %9568, float 1.000000e+00, i32 2
  %9570 = insertelement <4 x float> %9569, float 1.000000e+00, i32 3
  %9571 = getelementptr inbounds float, float* %1, i64 4
  %9572 = load float, float* %9571, align 4
  %9573 = insertelement <4 x float> zeroinitializer, float %9572, i32 0
  %9574 = insertelement <4 x float> %9573, float 0.000000e+00, i32 1
  %9575 = insertelement <4 x float> %9574, float 0.000000e+00, i32 2
  %9576 = insertelement <4 x float> %9575, float 0.000000e+00, i32 3
  %9577 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9570, <4 x float> %9576, <4 x float> %9562)
  %9578 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9579 = getelementptr inbounds i8, i8* %9578, i64 56
  %9580 = bitcast i8* %9579 to float*
  %9581 = load float, float* %9580, align 4
  %9582 = insertelement <4 x float> zeroinitializer, float %9581, i32 0
  %9583 = insertelement <4 x float> %9582, float 0.000000e+00, i32 1
  %9584 = insertelement <4 x float> %9583, float 0.000000e+00, i32 2
  %9585 = insertelement <4 x float> %9584, float 0.000000e+00, i32 3
  %9586 = getelementptr inbounds float, float* %1, i64 8
  %9587 = load float, float* %9586, align 4
  %9588 = insertelement <4 x float> zeroinitializer, float %9587, i32 0
  %9589 = insertelement <4 x float> %9588, float 0.000000e+00, i32 1
  %9590 = insertelement <4 x float> %9589, float 0.000000e+00, i32 2
  %9591 = insertelement <4 x float> %9590, float 0.000000e+00, i32 3
  %9592 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9585, <4 x float> %9591, <4 x float> %9577)
  %9593 = extractelement <4 x float> %9592, i32 0
  %9594 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9595 = getelementptr inbounds i8, i8* %9594, i64 48
  %9596 = bitcast i8* %9595 to float*
  store float %9593, float* %9596, align 4
  %9597 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9598 = getelementptr inbounds i8, i8* %9597, i64 48
  %9599 = bitcast i8* %9598 to float*
  %9600 = load float, float* %9599, align 4
  %9601 = insertelement <4 x float> zeroinitializer, float %9600, i32 0
  %9602 = insertelement <4 x float> %9601, float 1.000000e+00, i32 1
  %9603 = insertelement <4 x float> %9602, float 1.000000e+00, i32 2
  %9604 = insertelement <4 x float> %9603, float 1.000000e+00, i32 3
  %9605 = load float, float* %1, align 4
  %9606 = insertelement <4 x float> zeroinitializer, float %9605, i32 0
  %9607 = insertelement <4 x float> %9606, float 0.000000e+00, i32 1
  %9608 = insertelement <4 x float> %9607, float 0.000000e+00, i32 2
  %9609 = insertelement <4 x float> %9608, float 0.000000e+00, i32 3
  %9610 = fmul <4 x float> %9604, %9609
  %9611 = fadd <4 x float> %9610, zeroinitializer
  %9612 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9613 = getelementptr inbounds i8, i8* %9612, i64 52
  %9614 = bitcast i8* %9613 to float*
  %9615 = load float, float* %9614, align 4
  %9616 = insertelement <4 x float> zeroinitializer, float %9615, i32 0
  %9617 = insertelement <4 x float> %9616, float 1.000000e+00, i32 1
  %9618 = insertelement <4 x float> %9617, float 1.000000e+00, i32 2
  %9619 = insertelement <4 x float> %9618, float 1.000000e+00, i32 3
  %9620 = getelementptr inbounds float, float* %1, i64 4
  %9621 = load float, float* %9620, align 4
  %9622 = insertelement <4 x float> zeroinitializer, float %9621, i32 0
  %9623 = insertelement <4 x float> %9622, float 0.000000e+00, i32 1
  %9624 = insertelement <4 x float> %9623, float 0.000000e+00, i32 2
  %9625 = insertelement <4 x float> %9624, float 0.000000e+00, i32 3
  %9626 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9619, <4 x float> %9625, <4 x float> %9611)
  %9627 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9628 = getelementptr inbounds i8, i8* %9627, i64 56
  %9629 = bitcast i8* %9628 to float*
  %9630 = load float, float* %9629, align 4
  %9631 = insertelement <4 x float> zeroinitializer, float %9630, i32 0
  %9632 = insertelement <4 x float> %9631, float 1.000000e+00, i32 1
  %9633 = insertelement <4 x float> %9632, float 1.000000e+00, i32 2
  %9634 = insertelement <4 x float> %9633, float 1.000000e+00, i32 3
  %9635 = getelementptr inbounds float, float* %1, i64 8
  %9636 = load float, float* %9635, align 4
  %9637 = insertelement <4 x float> zeroinitializer, float %9636, i32 0
  %9638 = insertelement <4 x float> %9637, float 0.000000e+00, i32 1
  %9639 = insertelement <4 x float> %9638, float 0.000000e+00, i32 2
  %9640 = insertelement <4 x float> %9639, float 0.000000e+00, i32 3
  %9641 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9634, <4 x float> %9640, <4 x float> %9626)
  %9642 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9643 = getelementptr inbounds i8, i8* %9642, i64 60
  %9644 = bitcast i8* %9643 to float*
  %9645 = load float, float* %9644, align 4
  %9646 = insertelement <4 x float> zeroinitializer, float %9645, i32 0
  %9647 = insertelement <4 x float> %9646, float 0.000000e+00, i32 1
  %9648 = insertelement <4 x float> %9647, float 0.000000e+00, i32 2
  %9649 = insertelement <4 x float> %9648, float 0.000000e+00, i32 3
  %9650 = getelementptr inbounds float, float* %1, i64 12
  %9651 = load float, float* %9650, align 4
  %9652 = insertelement <4 x float> zeroinitializer, float %9651, i32 0
  %9653 = insertelement <4 x float> %9652, float 0.000000e+00, i32 1
  %9654 = insertelement <4 x float> %9653, float 0.000000e+00, i32 2
  %9655 = insertelement <4 x float> %9654, float 0.000000e+00, i32 3
  %9656 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9649, <4 x float> %9655, <4 x float> %9641)
  %9657 = extractelement <4 x float> %9656, i32 0
  %9658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9659 = getelementptr inbounds i8, i8* %9658, i64 48
  %9660 = bitcast i8* %9659 to float*
  store float %9657, float* %9660, align 4
  %9661 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9662 = getelementptr inbounds i8, i8* %9661, i64 48
  %9663 = bitcast i8* %9662 to float*
  %9664 = load float, float* %9663, align 4
  %9665 = insertelement <4 x float> zeroinitializer, float %9664, i32 0
  %9666 = insertelement <4 x float> %9665, float 0.000000e+00, i32 1
  %9667 = insertelement <4 x float> %9666, float 0.000000e+00, i32 2
  %9668 = insertelement <4 x float> %9667, float 0.000000e+00, i32 3
  %9669 = getelementptr inbounds float, float* %1, i64 1
  %9670 = load float, float* %9669, align 4
  %9671 = insertelement <4 x float> zeroinitializer, float %9670, i32 0
  %9672 = insertelement <4 x float> %9671, float 0.000000e+00, i32 1
  %9673 = insertelement <4 x float> %9672, float 0.000000e+00, i32 2
  %9674 = insertelement <4 x float> %9673, float 0.000000e+00, i32 3
  %9675 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9668, <4 x float> %9674, <4 x float> zeroinitializer)
  %9676 = extractelement <4 x float> %9675, i32 0
  %9677 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9678 = getelementptr inbounds i8, i8* %9677, i64 52
  %9679 = bitcast i8* %9678 to float*
  store float %9676, float* %9679, align 4
  %9680 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9681 = getelementptr inbounds i8, i8* %9680, i64 48
  %9682 = bitcast i8* %9681 to float*
  %9683 = load float, float* %9682, align 4
  %9684 = insertelement <4 x float> zeroinitializer, float %9683, i32 0
  %9685 = insertelement <4 x float> %9684, float 1.000000e+00, i32 1
  %9686 = insertelement <4 x float> %9685, float 1.000000e+00, i32 2
  %9687 = insertelement <4 x float> %9686, float 1.000000e+00, i32 3
  %9688 = getelementptr inbounds float, float* %1, i64 1
  %9689 = load float, float* %9688, align 4
  %9690 = insertelement <4 x float> zeroinitializer, float %9689, i32 0
  %9691 = insertelement <4 x float> %9690, float 0.000000e+00, i32 1
  %9692 = insertelement <4 x float> %9691, float 0.000000e+00, i32 2
  %9693 = insertelement <4 x float> %9692, float 0.000000e+00, i32 3
  %9694 = fmul <4 x float> %9687, %9693
  %9695 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9696 = getelementptr inbounds i8, i8* %9695, i64 52
  %9697 = bitcast i8* %9696 to float*
  %9698 = load float, float* %9697, align 4
  %9699 = insertelement <4 x float> zeroinitializer, float %9698, i32 0
  %9700 = insertelement <4 x float> %9699, float 0.000000e+00, i32 1
  %9701 = insertelement <4 x float> %9700, float 0.000000e+00, i32 2
  %9702 = insertelement <4 x float> %9701, float 0.000000e+00, i32 3
  %9703 = getelementptr inbounds float, float* %1, i64 5
  %9704 = load float, float* %9703, align 4
  %9705 = insertelement <4 x float> zeroinitializer, float %9704, i32 0
  %9706 = insertelement <4 x float> %9705, float 0.000000e+00, i32 1
  %9707 = insertelement <4 x float> %9706, float 0.000000e+00, i32 2
  %9708 = insertelement <4 x float> %9707, float 0.000000e+00, i32 3
  %9709 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9702, <4 x float> %9708, <4 x float> %9694)
  %9710 = extractelement <4 x float> %9709, i32 0
  %9711 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9712 = getelementptr inbounds i8, i8* %9711, i64 52
  %9713 = bitcast i8* %9712 to float*
  store float %9710, float* %9713, align 4
  %9714 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9715 = getelementptr inbounds i8, i8* %9714, i64 48
  %9716 = bitcast i8* %9715 to float*
  %9717 = load float, float* %9716, align 4
  %9718 = insertelement <4 x float> zeroinitializer, float %9717, i32 0
  %9719 = insertelement <4 x float> %9718, float 1.000000e+00, i32 1
  %9720 = insertelement <4 x float> %9719, float 1.000000e+00, i32 2
  %9721 = insertelement <4 x float> %9720, float 1.000000e+00, i32 3
  %9722 = getelementptr inbounds float, float* %1, i64 1
  %9723 = load float, float* %9722, align 4
  %9724 = insertelement <4 x float> zeroinitializer, float %9723, i32 0
  %9725 = insertelement <4 x float> %9724, float 0.000000e+00, i32 1
  %9726 = insertelement <4 x float> %9725, float 0.000000e+00, i32 2
  %9727 = insertelement <4 x float> %9726, float 0.000000e+00, i32 3
  %9728 = fmul <4 x float> %9721, %9727
  %9729 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9730 = getelementptr inbounds i8, i8* %9729, i64 52
  %9731 = bitcast i8* %9730 to float*
  %9732 = load float, float* %9731, align 4
  %9733 = insertelement <4 x float> zeroinitializer, float %9732, i32 0
  %9734 = insertelement <4 x float> %9733, float 1.000000e+00, i32 1
  %9735 = insertelement <4 x float> %9734, float 1.000000e+00, i32 2
  %9736 = insertelement <4 x float> %9735, float 1.000000e+00, i32 3
  %9737 = getelementptr inbounds float, float* %1, i64 5
  %9738 = load float, float* %9737, align 4
  %9739 = insertelement <4 x float> zeroinitializer, float %9738, i32 0
  %9740 = insertelement <4 x float> %9739, float 0.000000e+00, i32 1
  %9741 = insertelement <4 x float> %9740, float 0.000000e+00, i32 2
  %9742 = insertelement <4 x float> %9741, float 0.000000e+00, i32 3
  %9743 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9736, <4 x float> %9742, <4 x float> %9728)
  %9744 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9745 = getelementptr inbounds i8, i8* %9744, i64 56
  %9746 = bitcast i8* %9745 to float*
  %9747 = load float, float* %9746, align 4
  %9748 = insertelement <4 x float> zeroinitializer, float %9747, i32 0
  %9749 = insertelement <4 x float> %9748, float 0.000000e+00, i32 1
  %9750 = insertelement <4 x float> %9749, float 0.000000e+00, i32 2
  %9751 = insertelement <4 x float> %9750, float 0.000000e+00, i32 3
  %9752 = getelementptr inbounds float, float* %1, i64 9
  %9753 = load float, float* %9752, align 4
  %9754 = insertelement <4 x float> zeroinitializer, float %9753, i32 0
  %9755 = insertelement <4 x float> %9754, float 0.000000e+00, i32 1
  %9756 = insertelement <4 x float> %9755, float 0.000000e+00, i32 2
  %9757 = insertelement <4 x float> %9756, float 0.000000e+00, i32 3
  %9758 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9751, <4 x float> %9757, <4 x float> %9743)
  %9759 = extractelement <4 x float> %9758, i32 0
  %9760 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9761 = getelementptr inbounds i8, i8* %9760, i64 52
  %9762 = bitcast i8* %9761 to float*
  store float %9759, float* %9762, align 4
  %9763 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9764 = getelementptr inbounds i8, i8* %9763, i64 48
  %9765 = bitcast i8* %9764 to float*
  %9766 = load float, float* %9765, align 4
  %9767 = insertelement <4 x float> zeroinitializer, float %9766, i32 0
  %9768 = insertelement <4 x float> %9767, float 1.000000e+00, i32 1
  %9769 = insertelement <4 x float> %9768, float 1.000000e+00, i32 2
  %9770 = insertelement <4 x float> %9769, float 1.000000e+00, i32 3
  %9771 = getelementptr inbounds float, float* %1, i64 1
  %9772 = load float, float* %9771, align 4
  %9773 = insertelement <4 x float> zeroinitializer, float %9772, i32 0
  %9774 = insertelement <4 x float> %9773, float 0.000000e+00, i32 1
  %9775 = insertelement <4 x float> %9774, float 0.000000e+00, i32 2
  %9776 = insertelement <4 x float> %9775, float 0.000000e+00, i32 3
  %9777 = fmul <4 x float> %9770, %9776
  %9778 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9779 = getelementptr inbounds i8, i8* %9778, i64 52
  %9780 = bitcast i8* %9779 to float*
  %9781 = load float, float* %9780, align 4
  %9782 = insertelement <4 x float> zeroinitializer, float %9781, i32 0
  %9783 = insertelement <4 x float> %9782, float 1.000000e+00, i32 1
  %9784 = insertelement <4 x float> %9783, float 1.000000e+00, i32 2
  %9785 = insertelement <4 x float> %9784, float 1.000000e+00, i32 3
  %9786 = getelementptr inbounds float, float* %1, i64 5
  %9787 = load float, float* %9786, align 4
  %9788 = insertelement <4 x float> zeroinitializer, float %9787, i32 0
  %9789 = insertelement <4 x float> %9788, float 0.000000e+00, i32 1
  %9790 = insertelement <4 x float> %9789, float 0.000000e+00, i32 2
  %9791 = insertelement <4 x float> %9790, float 0.000000e+00, i32 3
  %9792 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9785, <4 x float> %9791, <4 x float> %9777)
  %9793 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9794 = getelementptr inbounds i8, i8* %9793, i64 56
  %9795 = bitcast i8* %9794 to float*
  %9796 = load float, float* %9795, align 4
  %9797 = insertelement <4 x float> zeroinitializer, float %9796, i32 0
  %9798 = insertelement <4 x float> %9797, float 1.000000e+00, i32 1
  %9799 = insertelement <4 x float> %9798, float 1.000000e+00, i32 2
  %9800 = insertelement <4 x float> %9799, float 1.000000e+00, i32 3
  %9801 = getelementptr inbounds float, float* %1, i64 9
  %9802 = load float, float* %9801, align 4
  %9803 = insertelement <4 x float> zeroinitializer, float %9802, i32 0
  %9804 = insertelement <4 x float> %9803, float 0.000000e+00, i32 1
  %9805 = insertelement <4 x float> %9804, float 0.000000e+00, i32 2
  %9806 = insertelement <4 x float> %9805, float 0.000000e+00, i32 3
  %9807 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9800, <4 x float> %9806, <4 x float> %9792)
  %9808 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9809 = getelementptr inbounds i8, i8* %9808, i64 60
  %9810 = bitcast i8* %9809 to float*
  %9811 = load float, float* %9810, align 4
  %9812 = insertelement <4 x float> zeroinitializer, float %9811, i32 0
  %9813 = insertelement <4 x float> %9812, float 0.000000e+00, i32 1
  %9814 = insertelement <4 x float> %9813, float 0.000000e+00, i32 2
  %9815 = insertelement <4 x float> %9814, float 0.000000e+00, i32 3
  %9816 = getelementptr inbounds float, float* %1, i64 13
  %9817 = load float, float* %9816, align 4
  %9818 = insertelement <4 x float> zeroinitializer, float %9817, i32 0
  %9819 = insertelement <4 x float> %9818, float 0.000000e+00, i32 1
  %9820 = insertelement <4 x float> %9819, float 0.000000e+00, i32 2
  %9821 = insertelement <4 x float> %9820, float 0.000000e+00, i32 3
  %9822 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9815, <4 x float> %9821, <4 x float> %9807)
  %9823 = extractelement <4 x float> %9822, i32 0
  %9824 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9825 = getelementptr inbounds i8, i8* %9824, i64 52
  %9826 = bitcast i8* %9825 to float*
  store float %9823, float* %9826, align 4
  %9827 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9828 = getelementptr inbounds i8, i8* %9827, i64 48
  %9829 = bitcast i8* %9828 to float*
  %9830 = load float, float* %9829, align 4
  %9831 = insertelement <4 x float> zeroinitializer, float %9830, i32 0
  %9832 = insertelement <4 x float> %9831, float 0.000000e+00, i32 1
  %9833 = insertelement <4 x float> %9832, float 0.000000e+00, i32 2
  %9834 = insertelement <4 x float> %9833, float 0.000000e+00, i32 3
  %9835 = getelementptr inbounds float, float* %1, i64 2
  %9836 = load float, float* %9835, align 4
  %9837 = insertelement <4 x float> zeroinitializer, float %9836, i32 0
  %9838 = insertelement <4 x float> %9837, float 0.000000e+00, i32 1
  %9839 = insertelement <4 x float> %9838, float 0.000000e+00, i32 2
  %9840 = insertelement <4 x float> %9839, float 0.000000e+00, i32 3
  %9841 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9834, <4 x float> %9840, <4 x float> zeroinitializer)
  %9842 = extractelement <4 x float> %9841, i32 0
  %9843 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9844 = getelementptr inbounds i8, i8* %9843, i64 56
  %9845 = bitcast i8* %9844 to float*
  store float %9842, float* %9845, align 4
  %9846 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9847 = getelementptr inbounds i8, i8* %9846, i64 48
  %9848 = bitcast i8* %9847 to float*
  %9849 = load float, float* %9848, align 4
  %9850 = insertelement <4 x float> zeroinitializer, float %9849, i32 0
  %9851 = insertelement <4 x float> %9850, float 1.000000e+00, i32 1
  %9852 = insertelement <4 x float> %9851, float 1.000000e+00, i32 2
  %9853 = insertelement <4 x float> %9852, float 1.000000e+00, i32 3
  %9854 = getelementptr inbounds float, float* %1, i64 2
  %9855 = load float, float* %9854, align 4
  %9856 = insertelement <4 x float> zeroinitializer, float %9855, i32 0
  %9857 = insertelement <4 x float> %9856, float 0.000000e+00, i32 1
  %9858 = insertelement <4 x float> %9857, float 0.000000e+00, i32 2
  %9859 = insertelement <4 x float> %9858, float 0.000000e+00, i32 3
  %9860 = fmul <4 x float> %9853, %9859
  %9861 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9862 = getelementptr inbounds i8, i8* %9861, i64 52
  %9863 = bitcast i8* %9862 to float*
  %9864 = load float, float* %9863, align 4
  %9865 = insertelement <4 x float> zeroinitializer, float %9864, i32 0
  %9866 = insertelement <4 x float> %9865, float 0.000000e+00, i32 1
  %9867 = insertelement <4 x float> %9866, float 0.000000e+00, i32 2
  %9868 = insertelement <4 x float> %9867, float 0.000000e+00, i32 3
  %9869 = getelementptr inbounds float, float* %1, i64 6
  %9870 = load float, float* %9869, align 4
  %9871 = insertelement <4 x float> zeroinitializer, float %9870, i32 0
  %9872 = insertelement <4 x float> %9871, float 0.000000e+00, i32 1
  %9873 = insertelement <4 x float> %9872, float 0.000000e+00, i32 2
  %9874 = insertelement <4 x float> %9873, float 0.000000e+00, i32 3
  %9875 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9868, <4 x float> %9874, <4 x float> %9860)
  %9876 = extractelement <4 x float> %9875, i32 0
  %9877 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9878 = getelementptr inbounds i8, i8* %9877, i64 56
  %9879 = bitcast i8* %9878 to float*
  store float %9876, float* %9879, align 4
  %9880 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9881 = getelementptr inbounds i8, i8* %9880, i64 48
  %9882 = bitcast i8* %9881 to float*
  %9883 = load float, float* %9882, align 4
  %9884 = insertelement <4 x float> zeroinitializer, float %9883, i32 0
  %9885 = insertelement <4 x float> %9884, float 1.000000e+00, i32 1
  %9886 = insertelement <4 x float> %9885, float 1.000000e+00, i32 2
  %9887 = insertelement <4 x float> %9886, float 1.000000e+00, i32 3
  %9888 = getelementptr inbounds float, float* %1, i64 2
  %9889 = load float, float* %9888, align 4
  %9890 = insertelement <4 x float> zeroinitializer, float %9889, i32 0
  %9891 = insertelement <4 x float> %9890, float 0.000000e+00, i32 1
  %9892 = insertelement <4 x float> %9891, float 0.000000e+00, i32 2
  %9893 = insertelement <4 x float> %9892, float 0.000000e+00, i32 3
  %9894 = fmul <4 x float> %9887, %9893
  %9895 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9896 = getelementptr inbounds i8, i8* %9895, i64 52
  %9897 = bitcast i8* %9896 to float*
  %9898 = load float, float* %9897, align 4
  %9899 = insertelement <4 x float> zeroinitializer, float %9898, i32 0
  %9900 = insertelement <4 x float> %9899, float 1.000000e+00, i32 1
  %9901 = insertelement <4 x float> %9900, float 1.000000e+00, i32 2
  %9902 = insertelement <4 x float> %9901, float 1.000000e+00, i32 3
  %9903 = getelementptr inbounds float, float* %1, i64 6
  %9904 = load float, float* %9903, align 4
  %9905 = insertelement <4 x float> zeroinitializer, float %9904, i32 0
  %9906 = insertelement <4 x float> %9905, float 0.000000e+00, i32 1
  %9907 = insertelement <4 x float> %9906, float 0.000000e+00, i32 2
  %9908 = insertelement <4 x float> %9907, float 0.000000e+00, i32 3
  %9909 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9902, <4 x float> %9908, <4 x float> %9894)
  %9910 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9911 = getelementptr inbounds i8, i8* %9910, i64 56
  %9912 = bitcast i8* %9911 to float*
  %9913 = load float, float* %9912, align 4
  %9914 = insertelement <4 x float> zeroinitializer, float %9913, i32 0
  %9915 = insertelement <4 x float> %9914, float 0.000000e+00, i32 1
  %9916 = insertelement <4 x float> %9915, float 0.000000e+00, i32 2
  %9917 = insertelement <4 x float> %9916, float 0.000000e+00, i32 3
  %9918 = getelementptr inbounds float, float* %1, i64 10
  %9919 = load float, float* %9918, align 4
  %9920 = insertelement <4 x float> zeroinitializer, float %9919, i32 0
  %9921 = insertelement <4 x float> %9920, float 0.000000e+00, i32 1
  %9922 = insertelement <4 x float> %9921, float 0.000000e+00, i32 2
  %9923 = insertelement <4 x float> %9922, float 0.000000e+00, i32 3
  %9924 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9917, <4 x float> %9923, <4 x float> %9909)
  %9925 = extractelement <4 x float> %9924, i32 0
  %9926 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9927 = getelementptr inbounds i8, i8* %9926, i64 56
  %9928 = bitcast i8* %9927 to float*
  store float %9925, float* %9928, align 4
  %9929 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9930 = getelementptr inbounds i8, i8* %9929, i64 48
  %9931 = bitcast i8* %9930 to float*
  %9932 = load float, float* %9931, align 4
  %9933 = insertelement <4 x float> zeroinitializer, float %9932, i32 0
  %9934 = insertelement <4 x float> %9933, float 1.000000e+00, i32 1
  %9935 = insertelement <4 x float> %9934, float 1.000000e+00, i32 2
  %9936 = insertelement <4 x float> %9935, float 1.000000e+00, i32 3
  %9937 = getelementptr inbounds float, float* %1, i64 2
  %9938 = load float, float* %9937, align 4
  %9939 = insertelement <4 x float> zeroinitializer, float %9938, i32 0
  %9940 = insertelement <4 x float> %9939, float 0.000000e+00, i32 1
  %9941 = insertelement <4 x float> %9940, float 0.000000e+00, i32 2
  %9942 = insertelement <4 x float> %9941, float 0.000000e+00, i32 3
  %9943 = fmul <4 x float> %9936, %9942
  %9944 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9945 = getelementptr inbounds i8, i8* %9944, i64 52
  %9946 = bitcast i8* %9945 to float*
  %9947 = load float, float* %9946, align 4
  %9948 = insertelement <4 x float> zeroinitializer, float %9947, i32 0
  %9949 = insertelement <4 x float> %9948, float 1.000000e+00, i32 1
  %9950 = insertelement <4 x float> %9949, float 1.000000e+00, i32 2
  %9951 = insertelement <4 x float> %9950, float 1.000000e+00, i32 3
  %9952 = getelementptr inbounds float, float* %1, i64 6
  %9953 = load float, float* %9952, align 4
  %9954 = insertelement <4 x float> zeroinitializer, float %9953, i32 0
  %9955 = insertelement <4 x float> %9954, float 0.000000e+00, i32 1
  %9956 = insertelement <4 x float> %9955, float 0.000000e+00, i32 2
  %9957 = insertelement <4 x float> %9956, float 0.000000e+00, i32 3
  %9958 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9951, <4 x float> %9957, <4 x float> %9943)
  %9959 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9960 = getelementptr inbounds i8, i8* %9959, i64 56
  %9961 = bitcast i8* %9960 to float*
  %9962 = load float, float* %9961, align 4
  %9963 = insertelement <4 x float> zeroinitializer, float %9962, i32 0
  %9964 = insertelement <4 x float> %9963, float 1.000000e+00, i32 1
  %9965 = insertelement <4 x float> %9964, float 1.000000e+00, i32 2
  %9966 = insertelement <4 x float> %9965, float 1.000000e+00, i32 3
  %9967 = getelementptr inbounds float, float* %1, i64 10
  %9968 = load float, float* %9967, align 4
  %9969 = insertelement <4 x float> zeroinitializer, float %9968, i32 0
  %9970 = insertelement <4 x float> %9969, float 0.000000e+00, i32 1
  %9971 = insertelement <4 x float> %9970, float 0.000000e+00, i32 2
  %9972 = insertelement <4 x float> %9971, float 0.000000e+00, i32 3
  %9973 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9966, <4 x float> %9972, <4 x float> %9958)
  %9974 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9975 = getelementptr inbounds i8, i8* %9974, i64 60
  %9976 = bitcast i8* %9975 to float*
  %9977 = load float, float* %9976, align 4
  %9978 = insertelement <4 x float> zeroinitializer, float %9977, i32 0
  %9979 = insertelement <4 x float> %9978, float 0.000000e+00, i32 1
  %9980 = insertelement <4 x float> %9979, float 0.000000e+00, i32 2
  %9981 = insertelement <4 x float> %9980, float 0.000000e+00, i32 3
  %9982 = getelementptr inbounds float, float* %1, i64 14
  %9983 = load float, float* %9982, align 4
  %9984 = insertelement <4 x float> zeroinitializer, float %9983, i32 0
  %9985 = insertelement <4 x float> %9984, float 0.000000e+00, i32 1
  %9986 = insertelement <4 x float> %9985, float 0.000000e+00, i32 2
  %9987 = insertelement <4 x float> %9986, float 0.000000e+00, i32 3
  %9988 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9981, <4 x float> %9987, <4 x float> %9973)
  %9989 = extractelement <4 x float> %9988, i32 0
  %9990 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9991 = getelementptr inbounds i8, i8* %9990, i64 56
  %9992 = bitcast i8* %9991 to float*
  store float %9989, float* %9992, align 4
  %9993 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9994 = getelementptr inbounds i8, i8* %9993, i64 48
  %9995 = bitcast i8* %9994 to float*
  %9996 = load float, float* %9995, align 4
  %9997 = insertelement <4 x float> zeroinitializer, float %9996, i32 0
  %9998 = insertelement <4 x float> %9997, float 0.000000e+00, i32 1
  %9999 = insertelement <4 x float> %9998, float 0.000000e+00, i32 2
  %10000 = insertelement <4 x float> %9999, float 0.000000e+00, i32 3
  %10001 = getelementptr inbounds float, float* %1, i64 3
  %10002 = load float, float* %10001, align 4
  %10003 = insertelement <4 x float> zeroinitializer, float %10002, i32 0
  %10004 = insertelement <4 x float> %10003, float 0.000000e+00, i32 1
  %10005 = insertelement <4 x float> %10004, float 0.000000e+00, i32 2
  %10006 = insertelement <4 x float> %10005, float 0.000000e+00, i32 3
  %10007 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10000, <4 x float> %10006, <4 x float> zeroinitializer)
  %10008 = extractelement <4 x float> %10007, i32 0
  %10009 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10010 = getelementptr inbounds i8, i8* %10009, i64 60
  %10011 = bitcast i8* %10010 to float*
  store float %10008, float* %10011, align 4
  %10012 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10013 = getelementptr inbounds i8, i8* %10012, i64 48
  %10014 = bitcast i8* %10013 to float*
  %10015 = load float, float* %10014, align 4
  %10016 = insertelement <4 x float> zeroinitializer, float %10015, i32 0
  %10017 = insertelement <4 x float> %10016, float 1.000000e+00, i32 1
  %10018 = insertelement <4 x float> %10017, float 1.000000e+00, i32 2
  %10019 = insertelement <4 x float> %10018, float 1.000000e+00, i32 3
  %10020 = getelementptr inbounds float, float* %1, i64 3
  %10021 = load float, float* %10020, align 4
  %10022 = insertelement <4 x float> zeroinitializer, float %10021, i32 0
  %10023 = insertelement <4 x float> %10022, float 0.000000e+00, i32 1
  %10024 = insertelement <4 x float> %10023, float 0.000000e+00, i32 2
  %10025 = insertelement <4 x float> %10024, float 0.000000e+00, i32 3
  %10026 = fmul <4 x float> %10019, %10025
  %10027 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10028 = getelementptr inbounds i8, i8* %10027, i64 52
  %10029 = bitcast i8* %10028 to float*
  %10030 = load float, float* %10029, align 4
  %10031 = insertelement <4 x float> zeroinitializer, float %10030, i32 0
  %10032 = insertelement <4 x float> %10031, float 0.000000e+00, i32 1
  %10033 = insertelement <4 x float> %10032, float 0.000000e+00, i32 2
  %10034 = insertelement <4 x float> %10033, float 0.000000e+00, i32 3
  %10035 = getelementptr inbounds float, float* %1, i64 7
  %10036 = load float, float* %10035, align 4
  %10037 = insertelement <4 x float> zeroinitializer, float %10036, i32 0
  %10038 = insertelement <4 x float> %10037, float 0.000000e+00, i32 1
  %10039 = insertelement <4 x float> %10038, float 0.000000e+00, i32 2
  %10040 = insertelement <4 x float> %10039, float 0.000000e+00, i32 3
  %10041 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10034, <4 x float> %10040, <4 x float> %10026)
  %10042 = extractelement <4 x float> %10041, i32 0
  %10043 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10044 = getelementptr inbounds i8, i8* %10043, i64 60
  %10045 = bitcast i8* %10044 to float*
  store float %10042, float* %10045, align 4
  %10046 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10047 = getelementptr inbounds i8, i8* %10046, i64 48
  %10048 = bitcast i8* %10047 to float*
  %10049 = load float, float* %10048, align 4
  %10050 = insertelement <4 x float> zeroinitializer, float %10049, i32 0
  %10051 = insertelement <4 x float> %10050, float 1.000000e+00, i32 1
  %10052 = insertelement <4 x float> %10051, float 1.000000e+00, i32 2
  %10053 = insertelement <4 x float> %10052, float 1.000000e+00, i32 3
  %10054 = getelementptr inbounds float, float* %1, i64 3
  %10055 = load float, float* %10054, align 4
  %10056 = insertelement <4 x float> zeroinitializer, float %10055, i32 0
  %10057 = insertelement <4 x float> %10056, float 0.000000e+00, i32 1
  %10058 = insertelement <4 x float> %10057, float 0.000000e+00, i32 2
  %10059 = insertelement <4 x float> %10058, float 0.000000e+00, i32 3
  %10060 = fmul <4 x float> %10053, %10059
  %10061 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10062 = getelementptr inbounds i8, i8* %10061, i64 52
  %10063 = bitcast i8* %10062 to float*
  %10064 = load float, float* %10063, align 4
  %10065 = insertelement <4 x float> zeroinitializer, float %10064, i32 0
  %10066 = insertelement <4 x float> %10065, float 1.000000e+00, i32 1
  %10067 = insertelement <4 x float> %10066, float 1.000000e+00, i32 2
  %10068 = insertelement <4 x float> %10067, float 1.000000e+00, i32 3
  %10069 = getelementptr inbounds float, float* %1, i64 7
  %10070 = load float, float* %10069, align 4
  %10071 = insertelement <4 x float> zeroinitializer, float %10070, i32 0
  %10072 = insertelement <4 x float> %10071, float 0.000000e+00, i32 1
  %10073 = insertelement <4 x float> %10072, float 0.000000e+00, i32 2
  %10074 = insertelement <4 x float> %10073, float 0.000000e+00, i32 3
  %10075 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10068, <4 x float> %10074, <4 x float> %10060)
  %10076 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10077 = getelementptr inbounds i8, i8* %10076, i64 56
  %10078 = bitcast i8* %10077 to float*
  %10079 = load float, float* %10078, align 4
  %10080 = insertelement <4 x float> zeroinitializer, float %10079, i32 0
  %10081 = insertelement <4 x float> %10080, float 0.000000e+00, i32 1
  %10082 = insertelement <4 x float> %10081, float 0.000000e+00, i32 2
  %10083 = insertelement <4 x float> %10082, float 0.000000e+00, i32 3
  %10084 = getelementptr inbounds float, float* %1, i64 11
  %10085 = load float, float* %10084, align 4
  %10086 = insertelement <4 x float> zeroinitializer, float %10085, i32 0
  %10087 = insertelement <4 x float> %10086, float 0.000000e+00, i32 1
  %10088 = insertelement <4 x float> %10087, float 0.000000e+00, i32 2
  %10089 = insertelement <4 x float> %10088, float 0.000000e+00, i32 3
  %10090 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10083, <4 x float> %10089, <4 x float> %10075)
  %10091 = extractelement <4 x float> %10090, i32 0
  %10092 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10093 = getelementptr inbounds i8, i8* %10092, i64 60
  %10094 = bitcast i8* %10093 to float*
  store float %10091, float* %10094, align 4
  %10095 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10096 = getelementptr inbounds i8, i8* %10095, i64 48
  %10097 = bitcast i8* %10096 to float*
  %10098 = load float, float* %10097, align 4
  %10099 = insertelement <4 x float> zeroinitializer, float %10098, i32 0
  %10100 = insertelement <4 x float> %10099, float 1.000000e+00, i32 1
  %10101 = insertelement <4 x float> %10100, float 1.000000e+00, i32 2
  %10102 = insertelement <4 x float> %10101, float 1.000000e+00, i32 3
  %10103 = getelementptr inbounds float, float* %1, i64 3
  %10104 = load float, float* %10103, align 4
  %10105 = insertelement <4 x float> zeroinitializer, float %10104, i32 0
  %10106 = insertelement <4 x float> %10105, float 0.000000e+00, i32 1
  %10107 = insertelement <4 x float> %10106, float 0.000000e+00, i32 2
  %10108 = insertelement <4 x float> %10107, float 0.000000e+00, i32 3
  %10109 = fmul <4 x float> %10102, %10108
  %10110 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10111 = getelementptr inbounds i8, i8* %10110, i64 52
  %10112 = bitcast i8* %10111 to float*
  %10113 = load float, float* %10112, align 4
  %10114 = insertelement <4 x float> zeroinitializer, float %10113, i32 0
  %10115 = insertelement <4 x float> %10114, float 1.000000e+00, i32 1
  %10116 = insertelement <4 x float> %10115, float 1.000000e+00, i32 2
  %10117 = insertelement <4 x float> %10116, float 1.000000e+00, i32 3
  %10118 = getelementptr inbounds float, float* %1, i64 7
  %10119 = load float, float* %10118, align 4
  %10120 = insertelement <4 x float> zeroinitializer, float %10119, i32 0
  %10121 = insertelement <4 x float> %10120, float 0.000000e+00, i32 1
  %10122 = insertelement <4 x float> %10121, float 0.000000e+00, i32 2
  %10123 = insertelement <4 x float> %10122, float 0.000000e+00, i32 3
  %10124 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10117, <4 x float> %10123, <4 x float> %10109)
  %10125 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10126 = getelementptr inbounds i8, i8* %10125, i64 56
  %10127 = bitcast i8* %10126 to float*
  %10128 = load float, float* %10127, align 4
  %10129 = insertelement <4 x float> zeroinitializer, float %10128, i32 0
  %10130 = insertelement <4 x float> %10129, float 1.000000e+00, i32 1
  %10131 = insertelement <4 x float> %10130, float 1.000000e+00, i32 2
  %10132 = insertelement <4 x float> %10131, float 1.000000e+00, i32 3
  %10133 = getelementptr inbounds float, float* %1, i64 11
  %10134 = load float, float* %10133, align 4
  %10135 = insertelement <4 x float> zeroinitializer, float %10134, i32 0
  %10136 = insertelement <4 x float> %10135, float 0.000000e+00, i32 1
  %10137 = insertelement <4 x float> %10136, float 0.000000e+00, i32 2
  %10138 = insertelement <4 x float> %10137, float 0.000000e+00, i32 3
  %10139 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10132, <4 x float> %10138, <4 x float> %10124)
  %10140 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10141 = getelementptr inbounds i8, i8* %10140, i64 60
  %10142 = bitcast i8* %10141 to float*
  %10143 = load float, float* %10142, align 4
  %10144 = insertelement <4 x float> zeroinitializer, float %10143, i32 0
  %10145 = insertelement <4 x float> %10144, float 0.000000e+00, i32 1
  %10146 = insertelement <4 x float> %10145, float 0.000000e+00, i32 2
  %10147 = insertelement <4 x float> %10146, float 0.000000e+00, i32 3
  %10148 = getelementptr inbounds float, float* %1, i64 15
  %10149 = load float, float* %10148, align 4
  %10150 = insertelement <4 x float> zeroinitializer, float %10149, i32 0
  %10151 = insertelement <4 x float> %10150, float 0.000000e+00, i32 1
  %10152 = insertelement <4 x float> %10151, float 0.000000e+00, i32 2
  %10153 = insertelement <4 x float> %10152, float 0.000000e+00, i32 3
  %10154 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10147, <4 x float> %10153, <4 x float> %10139)
  %10155 = extractelement <4 x float> %10154, i32 0
  %10156 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10157 = getelementptr inbounds i8, i8* %10156, i64 60
  %10158 = bitcast i8* %10157 to float*
  store float %10155, float* %10158, align 4
  %10159 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10160 = bitcast i8* %10159 to float*
  %10161 = load float, float* %10160, align 4
  %10162 = insertelement <4 x float> zeroinitializer, float %10161, i32 0
  %10163 = insertelement <4 x float> %10162, float 0.000000e+00, i32 1
  %10164 = insertelement <4 x float> %10163, float 0.000000e+00, i32 2
  %10165 = insertelement <4 x float> %10164, float 0.000000e+00, i32 3
  %10166 = load float, float* %2, align 4
  %10167 = insertelement <4 x float> zeroinitializer, float %10166, i32 0
  %10168 = insertelement <4 x float> %10167, float 0.000000e+00, i32 1
  %10169 = insertelement <4 x float> %10168, float 0.000000e+00, i32 2
  %10170 = insertelement <4 x float> %10169, float 0.000000e+00, i32 3
  %10171 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10165, <4 x float> %10170, <4 x float> zeroinitializer)
  %10172 = extractelement <4 x float> %10171, i32 0
  %10173 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10174 = bitcast i8* %10173 to float*
  store float %10172, float* %10174, align 4
  %10175 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10176 = bitcast i8* %10175 to float*
  %10177 = load float, float* %10176, align 4
  %10178 = insertelement <4 x float> zeroinitializer, float %10177, i32 0
  %10179 = insertelement <4 x float> %10178, float 1.000000e+00, i32 1
  %10180 = insertelement <4 x float> %10179, float 1.000000e+00, i32 2
  %10181 = insertelement <4 x float> %10180, float 1.000000e+00, i32 3
  %10182 = load float, float* %2, align 4
  %10183 = insertelement <4 x float> zeroinitializer, float %10182, i32 0
  %10184 = insertelement <4 x float> %10183, float 0.000000e+00, i32 1
  %10185 = insertelement <4 x float> %10184, float 0.000000e+00, i32 2
  %10186 = insertelement <4 x float> %10185, float 0.000000e+00, i32 3
  %10187 = fmul <4 x float> %10181, %10186
  %10188 = fadd <4 x float> %10187, zeroinitializer
  %10189 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10190 = getelementptr inbounds i8, i8* %10189, i64 4
  %10191 = bitcast i8* %10190 to float*
  %10192 = load float, float* %10191, align 4
  %10193 = insertelement <4 x float> zeroinitializer, float %10192, i32 0
  %10194 = insertelement <4 x float> %10193, float 0.000000e+00, i32 1
  %10195 = insertelement <4 x float> %10194, float 0.000000e+00, i32 2
  %10196 = insertelement <4 x float> %10195, float 0.000000e+00, i32 3
  %10197 = getelementptr inbounds float, float* %2, i64 4
  %10198 = load float, float* %10197, align 4
  %10199 = insertelement <4 x float> zeroinitializer, float %10198, i32 0
  %10200 = insertelement <4 x float> %10199, float 0.000000e+00, i32 1
  %10201 = insertelement <4 x float> %10200, float 0.000000e+00, i32 2
  %10202 = insertelement <4 x float> %10201, float 0.000000e+00, i32 3
  %10203 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10196, <4 x float> %10202, <4 x float> %10188)
  %10204 = extractelement <4 x float> %10203, i32 0
  %10205 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10206 = bitcast i8* %10205 to float*
  store float %10204, float* %10206, align 4
  %10207 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10208 = bitcast i8* %10207 to float*
  %10209 = load float, float* %10208, align 4
  %10210 = insertelement <4 x float> zeroinitializer, float %10209, i32 0
  %10211 = insertelement <4 x float> %10210, float 1.000000e+00, i32 1
  %10212 = insertelement <4 x float> %10211, float 1.000000e+00, i32 2
  %10213 = insertelement <4 x float> %10212, float 1.000000e+00, i32 3
  %10214 = load float, float* %2, align 4
  %10215 = insertelement <4 x float> zeroinitializer, float %10214, i32 0
  %10216 = insertelement <4 x float> %10215, float 0.000000e+00, i32 1
  %10217 = insertelement <4 x float> %10216, float 0.000000e+00, i32 2
  %10218 = insertelement <4 x float> %10217, float 0.000000e+00, i32 3
  %10219 = fmul <4 x float> %10213, %10218
  %10220 = fadd <4 x float> %10219, zeroinitializer
  %10221 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10222 = getelementptr inbounds i8, i8* %10221, i64 4
  %10223 = bitcast i8* %10222 to float*
  %10224 = load float, float* %10223, align 4
  %10225 = insertelement <4 x float> zeroinitializer, float %10224, i32 0
  %10226 = insertelement <4 x float> %10225, float 1.000000e+00, i32 1
  %10227 = insertelement <4 x float> %10226, float 1.000000e+00, i32 2
  %10228 = insertelement <4 x float> %10227, float 1.000000e+00, i32 3
  %10229 = getelementptr inbounds float, float* %2, i64 4
  %10230 = load float, float* %10229, align 4
  %10231 = insertelement <4 x float> zeroinitializer, float %10230, i32 0
  %10232 = insertelement <4 x float> %10231, float 0.000000e+00, i32 1
  %10233 = insertelement <4 x float> %10232, float 0.000000e+00, i32 2
  %10234 = insertelement <4 x float> %10233, float 0.000000e+00, i32 3
  %10235 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10228, <4 x float> %10234, <4 x float> %10220)
  %10236 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10237 = getelementptr inbounds i8, i8* %10236, i64 8
  %10238 = bitcast i8* %10237 to float*
  %10239 = load float, float* %10238, align 4
  %10240 = insertelement <4 x float> zeroinitializer, float %10239, i32 0
  %10241 = insertelement <4 x float> %10240, float 0.000000e+00, i32 1
  %10242 = insertelement <4 x float> %10241, float 0.000000e+00, i32 2
  %10243 = insertelement <4 x float> %10242, float 0.000000e+00, i32 3
  %10244 = getelementptr inbounds float, float* %2, i64 8
  %10245 = load float, float* %10244, align 4
  %10246 = insertelement <4 x float> zeroinitializer, float %10245, i32 0
  %10247 = insertelement <4 x float> %10246, float 0.000000e+00, i32 1
  %10248 = insertelement <4 x float> %10247, float 0.000000e+00, i32 2
  %10249 = insertelement <4 x float> %10248, float 0.000000e+00, i32 3
  %10250 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10243, <4 x float> %10249, <4 x float> %10235)
  %10251 = extractelement <4 x float> %10250, i32 0
  %10252 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10253 = bitcast i8* %10252 to float*
  store float %10251, float* %10253, align 4
  %10254 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10255 = bitcast i8* %10254 to float*
  %10256 = load float, float* %10255, align 4
  %10257 = insertelement <4 x float> zeroinitializer, float %10256, i32 0
  %10258 = insertelement <4 x float> %10257, float 1.000000e+00, i32 1
  %10259 = insertelement <4 x float> %10258, float 1.000000e+00, i32 2
  %10260 = insertelement <4 x float> %10259, float 1.000000e+00, i32 3
  %10261 = load float, float* %2, align 4
  %10262 = insertelement <4 x float> zeroinitializer, float %10261, i32 0
  %10263 = insertelement <4 x float> %10262, float 0.000000e+00, i32 1
  %10264 = insertelement <4 x float> %10263, float 0.000000e+00, i32 2
  %10265 = insertelement <4 x float> %10264, float 0.000000e+00, i32 3
  %10266 = fmul <4 x float> %10260, %10265
  %10267 = fadd <4 x float> %10266, zeroinitializer
  %10268 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10269 = getelementptr inbounds i8, i8* %10268, i64 4
  %10270 = bitcast i8* %10269 to float*
  %10271 = load float, float* %10270, align 4
  %10272 = insertelement <4 x float> zeroinitializer, float %10271, i32 0
  %10273 = insertelement <4 x float> %10272, float 1.000000e+00, i32 1
  %10274 = insertelement <4 x float> %10273, float 1.000000e+00, i32 2
  %10275 = insertelement <4 x float> %10274, float 1.000000e+00, i32 3
  %10276 = getelementptr inbounds float, float* %2, i64 4
  %10277 = load float, float* %10276, align 4
  %10278 = insertelement <4 x float> zeroinitializer, float %10277, i32 0
  %10279 = insertelement <4 x float> %10278, float 0.000000e+00, i32 1
  %10280 = insertelement <4 x float> %10279, float 0.000000e+00, i32 2
  %10281 = insertelement <4 x float> %10280, float 0.000000e+00, i32 3
  %10282 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10275, <4 x float> %10281, <4 x float> %10267)
  %10283 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10284 = getelementptr inbounds i8, i8* %10283, i64 8
  %10285 = bitcast i8* %10284 to float*
  %10286 = load float, float* %10285, align 4
  %10287 = insertelement <4 x float> zeroinitializer, float %10286, i32 0
  %10288 = insertelement <4 x float> %10287, float 1.000000e+00, i32 1
  %10289 = insertelement <4 x float> %10288, float 1.000000e+00, i32 2
  %10290 = insertelement <4 x float> %10289, float 1.000000e+00, i32 3
  %10291 = getelementptr inbounds float, float* %2, i64 8
  %10292 = load float, float* %10291, align 4
  %10293 = insertelement <4 x float> zeroinitializer, float %10292, i32 0
  %10294 = insertelement <4 x float> %10293, float 0.000000e+00, i32 1
  %10295 = insertelement <4 x float> %10294, float 0.000000e+00, i32 2
  %10296 = insertelement <4 x float> %10295, float 0.000000e+00, i32 3
  %10297 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10290, <4 x float> %10296, <4 x float> %10282)
  %10298 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10299 = getelementptr inbounds i8, i8* %10298, i64 12
  %10300 = bitcast i8* %10299 to float*
  %10301 = load float, float* %10300, align 4
  %10302 = insertelement <4 x float> zeroinitializer, float %10301, i32 0
  %10303 = insertelement <4 x float> %10302, float 0.000000e+00, i32 1
  %10304 = insertelement <4 x float> %10303, float 0.000000e+00, i32 2
  %10305 = insertelement <4 x float> %10304, float 0.000000e+00, i32 3
  %10306 = getelementptr inbounds float, float* %2, i64 12
  %10307 = load float, float* %10306, align 4
  %10308 = insertelement <4 x float> zeroinitializer, float %10307, i32 0
  %10309 = insertelement <4 x float> %10308, float 0.000000e+00, i32 1
  %10310 = insertelement <4 x float> %10309, float 0.000000e+00, i32 2
  %10311 = insertelement <4 x float> %10310, float 0.000000e+00, i32 3
  %10312 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10305, <4 x float> %10311, <4 x float> %10297)
  %10313 = extractelement <4 x float> %10312, i32 0
  %10314 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10315 = bitcast i8* %10314 to float*
  store float %10313, float* %10315, align 4
  %10316 = extractelement <4 x float> %10312, i32 1
  %10317 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10318 = getelementptr inbounds i8, i8* %10317, i64 4
  %10319 = bitcast i8* %10318 to float*
  store float %10316, float* %10319, align 4
  %10320 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10321 = bitcast i8* %10320 to float*
  %10322 = load float, float* %10321, align 4
  %10323 = insertelement <4 x float> zeroinitializer, float %10322, i32 0
  %10324 = insertelement <4 x float> %10323, float 0.000000e+00, i32 1
  %10325 = insertelement <4 x float> %10324, float 0.000000e+00, i32 2
  %10326 = insertelement <4 x float> %10325, float 0.000000e+00, i32 3
  %10327 = getelementptr inbounds float, float* %2, i64 1
  %10328 = load float, float* %10327, align 4
  %10329 = insertelement <4 x float> zeroinitializer, float %10328, i32 0
  %10330 = insertelement <4 x float> %10329, float 0.000000e+00, i32 1
  %10331 = insertelement <4 x float> %10330, float 0.000000e+00, i32 2
  %10332 = insertelement <4 x float> %10331, float 0.000000e+00, i32 3
  %10333 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10326, <4 x float> %10332, <4 x float> zeroinitializer)
  %10334 = extractelement <4 x float> %10333, i32 0
  %10335 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10336 = getelementptr inbounds i8, i8* %10335, i64 4
  %10337 = bitcast i8* %10336 to float*
  store float %10334, float* %10337, align 4
  %10338 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10339 = bitcast i8* %10338 to float*
  %10340 = load float, float* %10339, align 4
  %10341 = insertelement <4 x float> zeroinitializer, float %10340, i32 0
  %10342 = insertelement <4 x float> %10341, float 1.000000e+00, i32 1
  %10343 = insertelement <4 x float> %10342, float 1.000000e+00, i32 2
  %10344 = insertelement <4 x float> %10343, float 1.000000e+00, i32 3
  %10345 = getelementptr inbounds float, float* %2, i64 1
  %10346 = load float, float* %10345, align 4
  %10347 = insertelement <4 x float> zeroinitializer, float %10346, i32 0
  %10348 = insertelement <4 x float> %10347, float 0.000000e+00, i32 1
  %10349 = insertelement <4 x float> %10348, float 0.000000e+00, i32 2
  %10350 = insertelement <4 x float> %10349, float 0.000000e+00, i32 3
  %10351 = fmul <4 x float> %10344, %10350
  %10352 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10353 = getelementptr inbounds i8, i8* %10352, i64 4
  %10354 = bitcast i8* %10353 to float*
  %10355 = load float, float* %10354, align 4
  %10356 = insertelement <4 x float> zeroinitializer, float %10355, i32 0
  %10357 = insertelement <4 x float> %10356, float 0.000000e+00, i32 1
  %10358 = insertelement <4 x float> %10357, float 0.000000e+00, i32 2
  %10359 = insertelement <4 x float> %10358, float 0.000000e+00, i32 3
  %10360 = getelementptr inbounds float, float* %2, i64 5
  %10361 = load float, float* %10360, align 4
  %10362 = insertelement <4 x float> zeroinitializer, float %10361, i32 0
  %10363 = insertelement <4 x float> %10362, float 0.000000e+00, i32 1
  %10364 = insertelement <4 x float> %10363, float 0.000000e+00, i32 2
  %10365 = insertelement <4 x float> %10364, float 0.000000e+00, i32 3
  %10366 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10359, <4 x float> %10365, <4 x float> %10351)
  %10367 = extractelement <4 x float> %10366, i32 0
  %10368 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10369 = getelementptr inbounds i8, i8* %10368, i64 4
  %10370 = bitcast i8* %10369 to float*
  store float %10367, float* %10370, align 4
  %10371 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10372 = bitcast i8* %10371 to float*
  %10373 = load float, float* %10372, align 4
  %10374 = insertelement <4 x float> zeroinitializer, float %10373, i32 0
  %10375 = insertelement <4 x float> %10374, float 1.000000e+00, i32 1
  %10376 = insertelement <4 x float> %10375, float 1.000000e+00, i32 2
  %10377 = insertelement <4 x float> %10376, float 1.000000e+00, i32 3
  %10378 = getelementptr inbounds float, float* %2, i64 1
  %10379 = load float, float* %10378, align 4
  %10380 = insertelement <4 x float> zeroinitializer, float %10379, i32 0
  %10381 = insertelement <4 x float> %10380, float 0.000000e+00, i32 1
  %10382 = insertelement <4 x float> %10381, float 0.000000e+00, i32 2
  %10383 = insertelement <4 x float> %10382, float 0.000000e+00, i32 3
  %10384 = fmul <4 x float> %10377, %10383
  %10385 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10386 = getelementptr inbounds i8, i8* %10385, i64 4
  %10387 = bitcast i8* %10386 to float*
  %10388 = load float, float* %10387, align 4
  %10389 = insertelement <4 x float> zeroinitializer, float %10388, i32 0
  %10390 = insertelement <4 x float> %10389, float 1.000000e+00, i32 1
  %10391 = insertelement <4 x float> %10390, float 1.000000e+00, i32 2
  %10392 = insertelement <4 x float> %10391, float 1.000000e+00, i32 3
  %10393 = getelementptr inbounds float, float* %2, i64 5
  %10394 = load float, float* %10393, align 4
  %10395 = insertelement <4 x float> zeroinitializer, float %10394, i32 0
  %10396 = insertelement <4 x float> %10395, float 0.000000e+00, i32 1
  %10397 = insertelement <4 x float> %10396, float 0.000000e+00, i32 2
  %10398 = insertelement <4 x float> %10397, float 0.000000e+00, i32 3
  %10399 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10392, <4 x float> %10398, <4 x float> %10384)
  %10400 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10401 = getelementptr inbounds i8, i8* %10400, i64 8
  %10402 = bitcast i8* %10401 to float*
  %10403 = load float, float* %10402, align 4
  %10404 = insertelement <4 x float> zeroinitializer, float %10403, i32 0
  %10405 = insertelement <4 x float> %10404, float 0.000000e+00, i32 1
  %10406 = insertelement <4 x float> %10405, float 0.000000e+00, i32 2
  %10407 = insertelement <4 x float> %10406, float 0.000000e+00, i32 3
  %10408 = getelementptr inbounds float, float* %2, i64 9
  %10409 = load float, float* %10408, align 4
  %10410 = insertelement <4 x float> zeroinitializer, float %10409, i32 0
  %10411 = insertelement <4 x float> %10410, float 0.000000e+00, i32 1
  %10412 = insertelement <4 x float> %10411, float 0.000000e+00, i32 2
  %10413 = insertelement <4 x float> %10412, float 0.000000e+00, i32 3
  %10414 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10407, <4 x float> %10413, <4 x float> %10399)
  %10415 = extractelement <4 x float> %10414, i32 0
  %10416 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10417 = getelementptr inbounds i8, i8* %10416, i64 4
  %10418 = bitcast i8* %10417 to float*
  store float %10415, float* %10418, align 4
  %10419 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10420 = bitcast i8* %10419 to float*
  %10421 = load float, float* %10420, align 4
  %10422 = insertelement <4 x float> zeroinitializer, float %10421, i32 0
  %10423 = insertelement <4 x float> %10422, float 1.000000e+00, i32 1
  %10424 = insertelement <4 x float> %10423, float 1.000000e+00, i32 2
  %10425 = insertelement <4 x float> %10424, float 1.000000e+00, i32 3
  %10426 = getelementptr inbounds float, float* %2, i64 1
  %10427 = load float, float* %10426, align 4
  %10428 = insertelement <4 x float> zeroinitializer, float %10427, i32 0
  %10429 = insertelement <4 x float> %10428, float 0.000000e+00, i32 1
  %10430 = insertelement <4 x float> %10429, float 0.000000e+00, i32 2
  %10431 = insertelement <4 x float> %10430, float 0.000000e+00, i32 3
  %10432 = fmul <4 x float> %10425, %10431
  %10433 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10434 = getelementptr inbounds i8, i8* %10433, i64 4
  %10435 = bitcast i8* %10434 to float*
  %10436 = load float, float* %10435, align 4
  %10437 = insertelement <4 x float> zeroinitializer, float %10436, i32 0
  %10438 = insertelement <4 x float> %10437, float 1.000000e+00, i32 1
  %10439 = insertelement <4 x float> %10438, float 1.000000e+00, i32 2
  %10440 = insertelement <4 x float> %10439, float 1.000000e+00, i32 3
  %10441 = getelementptr inbounds float, float* %2, i64 5
  %10442 = load float, float* %10441, align 4
  %10443 = insertelement <4 x float> zeroinitializer, float %10442, i32 0
  %10444 = insertelement <4 x float> %10443, float 0.000000e+00, i32 1
  %10445 = insertelement <4 x float> %10444, float 0.000000e+00, i32 2
  %10446 = insertelement <4 x float> %10445, float 0.000000e+00, i32 3
  %10447 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10440, <4 x float> %10446, <4 x float> %10432)
  %10448 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10449 = getelementptr inbounds i8, i8* %10448, i64 8
  %10450 = bitcast i8* %10449 to float*
  %10451 = load float, float* %10450, align 4
  %10452 = insertelement <4 x float> zeroinitializer, float %10451, i32 0
  %10453 = insertelement <4 x float> %10452, float 1.000000e+00, i32 1
  %10454 = insertelement <4 x float> %10453, float 1.000000e+00, i32 2
  %10455 = insertelement <4 x float> %10454, float 1.000000e+00, i32 3
  %10456 = getelementptr inbounds float, float* %2, i64 9
  %10457 = load float, float* %10456, align 4
  %10458 = insertelement <4 x float> zeroinitializer, float %10457, i32 0
  %10459 = insertelement <4 x float> %10458, float 0.000000e+00, i32 1
  %10460 = insertelement <4 x float> %10459, float 0.000000e+00, i32 2
  %10461 = insertelement <4 x float> %10460, float 0.000000e+00, i32 3
  %10462 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10455, <4 x float> %10461, <4 x float> %10447)
  %10463 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10464 = getelementptr inbounds i8, i8* %10463, i64 12
  %10465 = bitcast i8* %10464 to float*
  %10466 = load float, float* %10465, align 4
  %10467 = insertelement <4 x float> zeroinitializer, float %10466, i32 0
  %10468 = insertelement <4 x float> %10467, float 0.000000e+00, i32 1
  %10469 = insertelement <4 x float> %10468, float 0.000000e+00, i32 2
  %10470 = insertelement <4 x float> %10469, float 0.000000e+00, i32 3
  %10471 = getelementptr inbounds float, float* %2, i64 13
  %10472 = load float, float* %10471, align 4
  %10473 = insertelement <4 x float> zeroinitializer, float %10472, i32 0
  %10474 = insertelement <4 x float> %10473, float 0.000000e+00, i32 1
  %10475 = insertelement <4 x float> %10474, float 0.000000e+00, i32 2
  %10476 = insertelement <4 x float> %10475, float 0.000000e+00, i32 3
  %10477 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10470, <4 x float> %10476, <4 x float> %10462)
  %10478 = extractelement <4 x float> %10477, i32 0
  %10479 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10480 = getelementptr inbounds i8, i8* %10479, i64 4
  %10481 = bitcast i8* %10480 to float*
  store float %10478, float* %10481, align 4
  %10482 = extractelement <4 x float> %10477, i32 1
  %10483 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10484 = getelementptr inbounds i8, i8* %10483, i64 8
  %10485 = bitcast i8* %10484 to float*
  store float %10482, float* %10485, align 4
  %10486 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10487 = bitcast i8* %10486 to float*
  %10488 = load float, float* %10487, align 4
  %10489 = insertelement <4 x float> zeroinitializer, float %10488, i32 0
  %10490 = insertelement <4 x float> %10489, float 0.000000e+00, i32 1
  %10491 = insertelement <4 x float> %10490, float 0.000000e+00, i32 2
  %10492 = insertelement <4 x float> %10491, float 0.000000e+00, i32 3
  %10493 = getelementptr inbounds float, float* %2, i64 2
  %10494 = load float, float* %10493, align 4
  %10495 = insertelement <4 x float> zeroinitializer, float %10494, i32 0
  %10496 = insertelement <4 x float> %10495, float 0.000000e+00, i32 1
  %10497 = insertelement <4 x float> %10496, float 0.000000e+00, i32 2
  %10498 = insertelement <4 x float> %10497, float 0.000000e+00, i32 3
  %10499 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10492, <4 x float> %10498, <4 x float> zeroinitializer)
  %10500 = extractelement <4 x float> %10499, i32 0
  %10501 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10502 = getelementptr inbounds i8, i8* %10501, i64 8
  %10503 = bitcast i8* %10502 to float*
  store float %10500, float* %10503, align 4
  %10504 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10505 = bitcast i8* %10504 to float*
  %10506 = load float, float* %10505, align 4
  %10507 = insertelement <4 x float> zeroinitializer, float %10506, i32 0
  %10508 = insertelement <4 x float> %10507, float 1.000000e+00, i32 1
  %10509 = insertelement <4 x float> %10508, float 1.000000e+00, i32 2
  %10510 = insertelement <4 x float> %10509, float 1.000000e+00, i32 3
  %10511 = getelementptr inbounds float, float* %2, i64 2
  %10512 = load float, float* %10511, align 4
  %10513 = insertelement <4 x float> zeroinitializer, float %10512, i32 0
  %10514 = insertelement <4 x float> %10513, float 0.000000e+00, i32 1
  %10515 = insertelement <4 x float> %10514, float 0.000000e+00, i32 2
  %10516 = insertelement <4 x float> %10515, float 0.000000e+00, i32 3
  %10517 = fmul <4 x float> %10510, %10516
  %10518 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10519 = getelementptr inbounds i8, i8* %10518, i64 4
  %10520 = bitcast i8* %10519 to float*
  %10521 = load float, float* %10520, align 4
  %10522 = insertelement <4 x float> zeroinitializer, float %10521, i32 0
  %10523 = insertelement <4 x float> %10522, float 0.000000e+00, i32 1
  %10524 = insertelement <4 x float> %10523, float 0.000000e+00, i32 2
  %10525 = insertelement <4 x float> %10524, float 0.000000e+00, i32 3
  %10526 = getelementptr inbounds float, float* %2, i64 6
  %10527 = load float, float* %10526, align 4
  %10528 = insertelement <4 x float> zeroinitializer, float %10527, i32 0
  %10529 = insertelement <4 x float> %10528, float 0.000000e+00, i32 1
  %10530 = insertelement <4 x float> %10529, float 0.000000e+00, i32 2
  %10531 = insertelement <4 x float> %10530, float 0.000000e+00, i32 3
  %10532 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10525, <4 x float> %10531, <4 x float> %10517)
  %10533 = extractelement <4 x float> %10532, i32 0
  %10534 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10535 = getelementptr inbounds i8, i8* %10534, i64 8
  %10536 = bitcast i8* %10535 to float*
  store float %10533, float* %10536, align 4
  %10537 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10538 = bitcast i8* %10537 to float*
  %10539 = load float, float* %10538, align 4
  %10540 = insertelement <4 x float> zeroinitializer, float %10539, i32 0
  %10541 = insertelement <4 x float> %10540, float 1.000000e+00, i32 1
  %10542 = insertelement <4 x float> %10541, float 1.000000e+00, i32 2
  %10543 = insertelement <4 x float> %10542, float 1.000000e+00, i32 3
  %10544 = getelementptr inbounds float, float* %2, i64 2
  %10545 = load float, float* %10544, align 4
  %10546 = insertelement <4 x float> zeroinitializer, float %10545, i32 0
  %10547 = insertelement <4 x float> %10546, float 0.000000e+00, i32 1
  %10548 = insertelement <4 x float> %10547, float 0.000000e+00, i32 2
  %10549 = insertelement <4 x float> %10548, float 0.000000e+00, i32 3
  %10550 = fmul <4 x float> %10543, %10549
  %10551 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10552 = getelementptr inbounds i8, i8* %10551, i64 4
  %10553 = bitcast i8* %10552 to float*
  %10554 = load float, float* %10553, align 4
  %10555 = insertelement <4 x float> zeroinitializer, float %10554, i32 0
  %10556 = insertelement <4 x float> %10555, float 1.000000e+00, i32 1
  %10557 = insertelement <4 x float> %10556, float 1.000000e+00, i32 2
  %10558 = insertelement <4 x float> %10557, float 1.000000e+00, i32 3
  %10559 = getelementptr inbounds float, float* %2, i64 6
  %10560 = load float, float* %10559, align 4
  %10561 = insertelement <4 x float> zeroinitializer, float %10560, i32 0
  %10562 = insertelement <4 x float> %10561, float 0.000000e+00, i32 1
  %10563 = insertelement <4 x float> %10562, float 0.000000e+00, i32 2
  %10564 = insertelement <4 x float> %10563, float 0.000000e+00, i32 3
  %10565 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10558, <4 x float> %10564, <4 x float> %10550)
  %10566 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10567 = getelementptr inbounds i8, i8* %10566, i64 8
  %10568 = bitcast i8* %10567 to float*
  %10569 = load float, float* %10568, align 4
  %10570 = insertelement <4 x float> zeroinitializer, float %10569, i32 0
  %10571 = insertelement <4 x float> %10570, float 0.000000e+00, i32 1
  %10572 = insertelement <4 x float> %10571, float 0.000000e+00, i32 2
  %10573 = insertelement <4 x float> %10572, float 0.000000e+00, i32 3
  %10574 = getelementptr inbounds float, float* %2, i64 10
  %10575 = load float, float* %10574, align 4
  %10576 = insertelement <4 x float> zeroinitializer, float %10575, i32 0
  %10577 = insertelement <4 x float> %10576, float 0.000000e+00, i32 1
  %10578 = insertelement <4 x float> %10577, float 0.000000e+00, i32 2
  %10579 = insertelement <4 x float> %10578, float 0.000000e+00, i32 3
  %10580 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10573, <4 x float> %10579, <4 x float> %10565)
  %10581 = extractelement <4 x float> %10580, i32 0
  %10582 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10583 = getelementptr inbounds i8, i8* %10582, i64 8
  %10584 = bitcast i8* %10583 to float*
  store float %10581, float* %10584, align 4
  %10585 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10586 = bitcast i8* %10585 to float*
  %10587 = load float, float* %10586, align 4
  %10588 = insertelement <4 x float> zeroinitializer, float %10587, i32 0
  %10589 = insertelement <4 x float> %10588, float 1.000000e+00, i32 1
  %10590 = insertelement <4 x float> %10589, float 1.000000e+00, i32 2
  %10591 = insertelement <4 x float> %10590, float 1.000000e+00, i32 3
  %10592 = getelementptr inbounds float, float* %2, i64 2
  %10593 = load float, float* %10592, align 4
  %10594 = insertelement <4 x float> zeroinitializer, float %10593, i32 0
  %10595 = insertelement <4 x float> %10594, float 0.000000e+00, i32 1
  %10596 = insertelement <4 x float> %10595, float 0.000000e+00, i32 2
  %10597 = insertelement <4 x float> %10596, float 0.000000e+00, i32 3
  %10598 = fmul <4 x float> %10591, %10597
  %10599 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10600 = getelementptr inbounds i8, i8* %10599, i64 4
  %10601 = bitcast i8* %10600 to float*
  %10602 = load float, float* %10601, align 4
  %10603 = insertelement <4 x float> zeroinitializer, float %10602, i32 0
  %10604 = insertelement <4 x float> %10603, float 1.000000e+00, i32 1
  %10605 = insertelement <4 x float> %10604, float 1.000000e+00, i32 2
  %10606 = insertelement <4 x float> %10605, float 1.000000e+00, i32 3
  %10607 = getelementptr inbounds float, float* %2, i64 6
  %10608 = load float, float* %10607, align 4
  %10609 = insertelement <4 x float> zeroinitializer, float %10608, i32 0
  %10610 = insertelement <4 x float> %10609, float 0.000000e+00, i32 1
  %10611 = insertelement <4 x float> %10610, float 0.000000e+00, i32 2
  %10612 = insertelement <4 x float> %10611, float 0.000000e+00, i32 3
  %10613 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10606, <4 x float> %10612, <4 x float> %10598)
  %10614 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10615 = getelementptr inbounds i8, i8* %10614, i64 8
  %10616 = bitcast i8* %10615 to float*
  %10617 = load float, float* %10616, align 4
  %10618 = insertelement <4 x float> zeroinitializer, float %10617, i32 0
  %10619 = insertelement <4 x float> %10618, float 1.000000e+00, i32 1
  %10620 = insertelement <4 x float> %10619, float 1.000000e+00, i32 2
  %10621 = insertelement <4 x float> %10620, float 1.000000e+00, i32 3
  %10622 = getelementptr inbounds float, float* %2, i64 10
  %10623 = load float, float* %10622, align 4
  %10624 = insertelement <4 x float> zeroinitializer, float %10623, i32 0
  %10625 = insertelement <4 x float> %10624, float 0.000000e+00, i32 1
  %10626 = insertelement <4 x float> %10625, float 0.000000e+00, i32 2
  %10627 = insertelement <4 x float> %10626, float 0.000000e+00, i32 3
  %10628 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10621, <4 x float> %10627, <4 x float> %10613)
  %10629 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10630 = getelementptr inbounds i8, i8* %10629, i64 12
  %10631 = bitcast i8* %10630 to float*
  %10632 = load float, float* %10631, align 4
  %10633 = insertelement <4 x float> zeroinitializer, float %10632, i32 0
  %10634 = insertelement <4 x float> %10633, float 0.000000e+00, i32 1
  %10635 = insertelement <4 x float> %10634, float 0.000000e+00, i32 2
  %10636 = insertelement <4 x float> %10635, float 0.000000e+00, i32 3
  %10637 = getelementptr inbounds float, float* %2, i64 14
  %10638 = load float, float* %10637, align 4
  %10639 = insertelement <4 x float> zeroinitializer, float %10638, i32 0
  %10640 = insertelement <4 x float> %10639, float 0.000000e+00, i32 1
  %10641 = insertelement <4 x float> %10640, float 0.000000e+00, i32 2
  %10642 = insertelement <4 x float> %10641, float 0.000000e+00, i32 3
  %10643 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10636, <4 x float> %10642, <4 x float> %10628)
  %10644 = extractelement <4 x float> %10643, i32 0
  %10645 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10646 = getelementptr inbounds i8, i8* %10645, i64 8
  %10647 = bitcast i8* %10646 to float*
  store float %10644, float* %10647, align 4
  %10648 = extractelement <4 x float> %10643, i32 1
  %10649 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10650 = getelementptr inbounds i8, i8* %10649, i64 12
  %10651 = bitcast i8* %10650 to float*
  store float %10648, float* %10651, align 4
  %10652 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10653 = bitcast i8* %10652 to float*
  %10654 = load float, float* %10653, align 4
  %10655 = insertelement <4 x float> zeroinitializer, float %10654, i32 0
  %10656 = insertelement <4 x float> %10655, float 0.000000e+00, i32 1
  %10657 = insertelement <4 x float> %10656, float 0.000000e+00, i32 2
  %10658 = insertelement <4 x float> %10657, float 0.000000e+00, i32 3
  %10659 = getelementptr inbounds float, float* %2, i64 3
  %10660 = load float, float* %10659, align 4
  %10661 = insertelement <4 x float> zeroinitializer, float %10660, i32 0
  %10662 = insertelement <4 x float> %10661, float 0.000000e+00, i32 1
  %10663 = insertelement <4 x float> %10662, float 0.000000e+00, i32 2
  %10664 = insertelement <4 x float> %10663, float 0.000000e+00, i32 3
  %10665 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10658, <4 x float> %10664, <4 x float> zeroinitializer)
  %10666 = extractelement <4 x float> %10665, i32 0
  %10667 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10668 = getelementptr inbounds i8, i8* %10667, i64 12
  %10669 = bitcast i8* %10668 to float*
  store float %10666, float* %10669, align 4
  %10670 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10671 = bitcast i8* %10670 to float*
  %10672 = load float, float* %10671, align 4
  %10673 = insertelement <4 x float> zeroinitializer, float %10672, i32 0
  %10674 = insertelement <4 x float> %10673, float 1.000000e+00, i32 1
  %10675 = insertelement <4 x float> %10674, float 1.000000e+00, i32 2
  %10676 = insertelement <4 x float> %10675, float 1.000000e+00, i32 3
  %10677 = getelementptr inbounds float, float* %2, i64 3
  %10678 = load float, float* %10677, align 4
  %10679 = insertelement <4 x float> zeroinitializer, float %10678, i32 0
  %10680 = insertelement <4 x float> %10679, float 0.000000e+00, i32 1
  %10681 = insertelement <4 x float> %10680, float 0.000000e+00, i32 2
  %10682 = insertelement <4 x float> %10681, float 0.000000e+00, i32 3
  %10683 = fmul <4 x float> %10676, %10682
  %10684 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10685 = getelementptr inbounds i8, i8* %10684, i64 4
  %10686 = bitcast i8* %10685 to float*
  %10687 = load float, float* %10686, align 4
  %10688 = insertelement <4 x float> zeroinitializer, float %10687, i32 0
  %10689 = insertelement <4 x float> %10688, float 0.000000e+00, i32 1
  %10690 = insertelement <4 x float> %10689, float 0.000000e+00, i32 2
  %10691 = insertelement <4 x float> %10690, float 0.000000e+00, i32 3
  %10692 = getelementptr inbounds float, float* %2, i64 7
  %10693 = load float, float* %10692, align 4
  %10694 = insertelement <4 x float> zeroinitializer, float %10693, i32 0
  %10695 = insertelement <4 x float> %10694, float 0.000000e+00, i32 1
  %10696 = insertelement <4 x float> %10695, float 0.000000e+00, i32 2
  %10697 = insertelement <4 x float> %10696, float 0.000000e+00, i32 3
  %10698 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10691, <4 x float> %10697, <4 x float> %10683)
  %10699 = extractelement <4 x float> %10698, i32 0
  %10700 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10701 = getelementptr inbounds i8, i8* %10700, i64 12
  %10702 = bitcast i8* %10701 to float*
  store float %10699, float* %10702, align 4
  %10703 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10704 = bitcast i8* %10703 to float*
  %10705 = load float, float* %10704, align 4
  %10706 = insertelement <4 x float> zeroinitializer, float %10705, i32 0
  %10707 = insertelement <4 x float> %10706, float 1.000000e+00, i32 1
  %10708 = insertelement <4 x float> %10707, float 1.000000e+00, i32 2
  %10709 = insertelement <4 x float> %10708, float 1.000000e+00, i32 3
  %10710 = getelementptr inbounds float, float* %2, i64 3
  %10711 = load float, float* %10710, align 4
  %10712 = insertelement <4 x float> zeroinitializer, float %10711, i32 0
  %10713 = insertelement <4 x float> %10712, float 0.000000e+00, i32 1
  %10714 = insertelement <4 x float> %10713, float 0.000000e+00, i32 2
  %10715 = insertelement <4 x float> %10714, float 0.000000e+00, i32 3
  %10716 = fmul <4 x float> %10709, %10715
  %10717 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10718 = getelementptr inbounds i8, i8* %10717, i64 4
  %10719 = bitcast i8* %10718 to float*
  %10720 = load float, float* %10719, align 4
  %10721 = insertelement <4 x float> zeroinitializer, float %10720, i32 0
  %10722 = insertelement <4 x float> %10721, float 1.000000e+00, i32 1
  %10723 = insertelement <4 x float> %10722, float 1.000000e+00, i32 2
  %10724 = insertelement <4 x float> %10723, float 1.000000e+00, i32 3
  %10725 = getelementptr inbounds float, float* %2, i64 7
  %10726 = load float, float* %10725, align 4
  %10727 = insertelement <4 x float> zeroinitializer, float %10726, i32 0
  %10728 = insertelement <4 x float> %10727, float 0.000000e+00, i32 1
  %10729 = insertelement <4 x float> %10728, float 0.000000e+00, i32 2
  %10730 = insertelement <4 x float> %10729, float 0.000000e+00, i32 3
  %10731 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10724, <4 x float> %10730, <4 x float> %10716)
  %10732 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10733 = getelementptr inbounds i8, i8* %10732, i64 8
  %10734 = bitcast i8* %10733 to float*
  %10735 = load float, float* %10734, align 4
  %10736 = insertelement <4 x float> zeroinitializer, float %10735, i32 0
  %10737 = insertelement <4 x float> %10736, float 0.000000e+00, i32 1
  %10738 = insertelement <4 x float> %10737, float 0.000000e+00, i32 2
  %10739 = insertelement <4 x float> %10738, float 0.000000e+00, i32 3
  %10740 = getelementptr inbounds float, float* %2, i64 11
  %10741 = load float, float* %10740, align 4
  %10742 = insertelement <4 x float> zeroinitializer, float %10741, i32 0
  %10743 = insertelement <4 x float> %10742, float 0.000000e+00, i32 1
  %10744 = insertelement <4 x float> %10743, float 0.000000e+00, i32 2
  %10745 = insertelement <4 x float> %10744, float 0.000000e+00, i32 3
  %10746 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10739, <4 x float> %10745, <4 x float> %10731)
  %10747 = extractelement <4 x float> %10746, i32 0
  %10748 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10749 = getelementptr inbounds i8, i8* %10748, i64 12
  %10750 = bitcast i8* %10749 to float*
  store float %10747, float* %10750, align 4
  %10751 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10752 = bitcast i8* %10751 to float*
  %10753 = load float, float* %10752, align 4
  %10754 = insertelement <4 x float> zeroinitializer, float %10753, i32 0
  %10755 = insertelement <4 x float> %10754, float 1.000000e+00, i32 1
  %10756 = insertelement <4 x float> %10755, float 1.000000e+00, i32 2
  %10757 = insertelement <4 x float> %10756, float 1.000000e+00, i32 3
  %10758 = getelementptr inbounds float, float* %2, i64 3
  %10759 = load float, float* %10758, align 4
  %10760 = insertelement <4 x float> zeroinitializer, float %10759, i32 0
  %10761 = insertelement <4 x float> %10760, float 0.000000e+00, i32 1
  %10762 = insertelement <4 x float> %10761, float 0.000000e+00, i32 2
  %10763 = insertelement <4 x float> %10762, float 0.000000e+00, i32 3
  %10764 = fmul <4 x float> %10757, %10763
  %10765 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10766 = getelementptr inbounds i8, i8* %10765, i64 4
  %10767 = bitcast i8* %10766 to float*
  %10768 = load float, float* %10767, align 4
  %10769 = insertelement <4 x float> zeroinitializer, float %10768, i32 0
  %10770 = insertelement <4 x float> %10769, float 1.000000e+00, i32 1
  %10771 = insertelement <4 x float> %10770, float 1.000000e+00, i32 2
  %10772 = insertelement <4 x float> %10771, float 1.000000e+00, i32 3
  %10773 = getelementptr inbounds float, float* %2, i64 7
  %10774 = load float, float* %10773, align 4
  %10775 = insertelement <4 x float> zeroinitializer, float %10774, i32 0
  %10776 = insertelement <4 x float> %10775, float 0.000000e+00, i32 1
  %10777 = insertelement <4 x float> %10776, float 0.000000e+00, i32 2
  %10778 = insertelement <4 x float> %10777, float 0.000000e+00, i32 3
  %10779 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10772, <4 x float> %10778, <4 x float> %10764)
  %10780 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10781 = getelementptr inbounds i8, i8* %10780, i64 8
  %10782 = bitcast i8* %10781 to float*
  %10783 = load float, float* %10782, align 4
  %10784 = insertelement <4 x float> zeroinitializer, float %10783, i32 0
  %10785 = insertelement <4 x float> %10784, float 1.000000e+00, i32 1
  %10786 = insertelement <4 x float> %10785, float 1.000000e+00, i32 2
  %10787 = insertelement <4 x float> %10786, float 1.000000e+00, i32 3
  %10788 = getelementptr inbounds float, float* %2, i64 11
  %10789 = load float, float* %10788, align 4
  %10790 = insertelement <4 x float> zeroinitializer, float %10789, i32 0
  %10791 = insertelement <4 x float> %10790, float 0.000000e+00, i32 1
  %10792 = insertelement <4 x float> %10791, float 0.000000e+00, i32 2
  %10793 = insertelement <4 x float> %10792, float 0.000000e+00, i32 3
  %10794 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10787, <4 x float> %10793, <4 x float> %10779)
  %10795 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10796 = getelementptr inbounds i8, i8* %10795, i64 12
  %10797 = bitcast i8* %10796 to float*
  %10798 = load float, float* %10797, align 4
  %10799 = insertelement <4 x float> zeroinitializer, float %10798, i32 0
  %10800 = insertelement <4 x float> %10799, float 0.000000e+00, i32 1
  %10801 = insertelement <4 x float> %10800, float 0.000000e+00, i32 2
  %10802 = insertelement <4 x float> %10801, float 0.000000e+00, i32 3
  %10803 = getelementptr inbounds float, float* %2, i64 15
  %10804 = load float, float* %10803, align 4
  %10805 = insertelement <4 x float> zeroinitializer, float %10804, i32 0
  %10806 = insertelement <4 x float> %10805, float 0.000000e+00, i32 1
  %10807 = insertelement <4 x float> %10806, float 0.000000e+00, i32 2
  %10808 = insertelement <4 x float> %10807, float 0.000000e+00, i32 3
  %10809 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10802, <4 x float> %10808, <4 x float> %10794)
  %10810 = extractelement <4 x float> %10809, i32 0
  %10811 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10812 = getelementptr inbounds i8, i8* %10811, i64 12
  %10813 = bitcast i8* %10812 to float*
  store float %10810, float* %10813, align 4
  %10814 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10815 = getelementptr inbounds i8, i8* %10814, i64 16
  %10816 = bitcast i8* %10815 to float*
  %10817 = load float, float* %10816, align 4
  %10818 = insertelement <4 x float> zeroinitializer, float %10817, i32 0
  %10819 = insertelement <4 x float> %10818, float 0.000000e+00, i32 1
  %10820 = insertelement <4 x float> %10819, float 0.000000e+00, i32 2
  %10821 = insertelement <4 x float> %10820, float 0.000000e+00, i32 3
  %10822 = load float, float* %2, align 4
  %10823 = insertelement <4 x float> zeroinitializer, float %10822, i32 0
  %10824 = insertelement <4 x float> %10823, float 0.000000e+00, i32 1
  %10825 = insertelement <4 x float> %10824, float 0.000000e+00, i32 2
  %10826 = insertelement <4 x float> %10825, float 0.000000e+00, i32 3
  %10827 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10821, <4 x float> %10826, <4 x float> zeroinitializer)
  %10828 = extractelement <4 x float> %10827, i32 0
  %10829 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10830 = getelementptr inbounds i8, i8* %10829, i64 16
  %10831 = bitcast i8* %10830 to float*
  store float %10828, float* %10831, align 4
  %10832 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10833 = getelementptr inbounds i8, i8* %10832, i64 16
  %10834 = bitcast i8* %10833 to float*
  %10835 = load float, float* %10834, align 4
  %10836 = insertelement <4 x float> zeroinitializer, float %10835, i32 0
  %10837 = insertelement <4 x float> %10836, float 1.000000e+00, i32 1
  %10838 = insertelement <4 x float> %10837, float 1.000000e+00, i32 2
  %10839 = insertelement <4 x float> %10838, float 1.000000e+00, i32 3
  %10840 = load float, float* %2, align 4
  %10841 = insertelement <4 x float> zeroinitializer, float %10840, i32 0
  %10842 = insertelement <4 x float> %10841, float 0.000000e+00, i32 1
  %10843 = insertelement <4 x float> %10842, float 0.000000e+00, i32 2
  %10844 = insertelement <4 x float> %10843, float 0.000000e+00, i32 3
  %10845 = fmul <4 x float> %10839, %10844
  %10846 = fadd <4 x float> %10845, zeroinitializer
  %10847 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10848 = getelementptr inbounds i8, i8* %10847, i64 20
  %10849 = bitcast i8* %10848 to float*
  %10850 = load float, float* %10849, align 4
  %10851 = insertelement <4 x float> zeroinitializer, float %10850, i32 0
  %10852 = insertelement <4 x float> %10851, float 0.000000e+00, i32 1
  %10853 = insertelement <4 x float> %10852, float 0.000000e+00, i32 2
  %10854 = insertelement <4 x float> %10853, float 0.000000e+00, i32 3
  %10855 = getelementptr inbounds float, float* %2, i64 4
  %10856 = load float, float* %10855, align 4
  %10857 = insertelement <4 x float> zeroinitializer, float %10856, i32 0
  %10858 = insertelement <4 x float> %10857, float 0.000000e+00, i32 1
  %10859 = insertelement <4 x float> %10858, float 0.000000e+00, i32 2
  %10860 = insertelement <4 x float> %10859, float 0.000000e+00, i32 3
  %10861 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10854, <4 x float> %10860, <4 x float> %10846)
  %10862 = extractelement <4 x float> %10861, i32 0
  %10863 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10864 = getelementptr inbounds i8, i8* %10863, i64 16
  %10865 = bitcast i8* %10864 to float*
  store float %10862, float* %10865, align 4
  %10866 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10867 = getelementptr inbounds i8, i8* %10866, i64 16
  %10868 = bitcast i8* %10867 to float*
  %10869 = load float, float* %10868, align 4
  %10870 = insertelement <4 x float> zeroinitializer, float %10869, i32 0
  %10871 = insertelement <4 x float> %10870, float 1.000000e+00, i32 1
  %10872 = insertelement <4 x float> %10871, float 1.000000e+00, i32 2
  %10873 = insertelement <4 x float> %10872, float 1.000000e+00, i32 3
  %10874 = load float, float* %2, align 4
  %10875 = insertelement <4 x float> zeroinitializer, float %10874, i32 0
  %10876 = insertelement <4 x float> %10875, float 0.000000e+00, i32 1
  %10877 = insertelement <4 x float> %10876, float 0.000000e+00, i32 2
  %10878 = insertelement <4 x float> %10877, float 0.000000e+00, i32 3
  %10879 = fmul <4 x float> %10873, %10878
  %10880 = fadd <4 x float> %10879, zeroinitializer
  %10881 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10882 = getelementptr inbounds i8, i8* %10881, i64 20
  %10883 = bitcast i8* %10882 to float*
  %10884 = load float, float* %10883, align 4
  %10885 = insertelement <4 x float> zeroinitializer, float %10884, i32 0
  %10886 = insertelement <4 x float> %10885, float 1.000000e+00, i32 1
  %10887 = insertelement <4 x float> %10886, float 1.000000e+00, i32 2
  %10888 = insertelement <4 x float> %10887, float 1.000000e+00, i32 3
  %10889 = getelementptr inbounds float, float* %2, i64 4
  %10890 = load float, float* %10889, align 4
  %10891 = insertelement <4 x float> zeroinitializer, float %10890, i32 0
  %10892 = insertelement <4 x float> %10891, float 0.000000e+00, i32 1
  %10893 = insertelement <4 x float> %10892, float 0.000000e+00, i32 2
  %10894 = insertelement <4 x float> %10893, float 0.000000e+00, i32 3
  %10895 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10888, <4 x float> %10894, <4 x float> %10880)
  %10896 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10897 = getelementptr inbounds i8, i8* %10896, i64 24
  %10898 = bitcast i8* %10897 to float*
  %10899 = load float, float* %10898, align 4
  %10900 = insertelement <4 x float> zeroinitializer, float %10899, i32 0
  %10901 = insertelement <4 x float> %10900, float 0.000000e+00, i32 1
  %10902 = insertelement <4 x float> %10901, float 0.000000e+00, i32 2
  %10903 = insertelement <4 x float> %10902, float 0.000000e+00, i32 3
  %10904 = getelementptr inbounds float, float* %2, i64 8
  %10905 = load float, float* %10904, align 4
  %10906 = insertelement <4 x float> zeroinitializer, float %10905, i32 0
  %10907 = insertelement <4 x float> %10906, float 0.000000e+00, i32 1
  %10908 = insertelement <4 x float> %10907, float 0.000000e+00, i32 2
  %10909 = insertelement <4 x float> %10908, float 0.000000e+00, i32 3
  %10910 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10903, <4 x float> %10909, <4 x float> %10895)
  %10911 = extractelement <4 x float> %10910, i32 0
  %10912 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10913 = getelementptr inbounds i8, i8* %10912, i64 16
  %10914 = bitcast i8* %10913 to float*
  store float %10911, float* %10914, align 4
  %10915 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10916 = getelementptr inbounds i8, i8* %10915, i64 16
  %10917 = bitcast i8* %10916 to float*
  %10918 = load float, float* %10917, align 4
  %10919 = insertelement <4 x float> zeroinitializer, float %10918, i32 0
  %10920 = insertelement <4 x float> %10919, float 1.000000e+00, i32 1
  %10921 = insertelement <4 x float> %10920, float 1.000000e+00, i32 2
  %10922 = insertelement <4 x float> %10921, float 1.000000e+00, i32 3
  %10923 = load float, float* %2, align 4
  %10924 = insertelement <4 x float> zeroinitializer, float %10923, i32 0
  %10925 = insertelement <4 x float> %10924, float 0.000000e+00, i32 1
  %10926 = insertelement <4 x float> %10925, float 0.000000e+00, i32 2
  %10927 = insertelement <4 x float> %10926, float 0.000000e+00, i32 3
  %10928 = fmul <4 x float> %10922, %10927
  %10929 = fadd <4 x float> %10928, zeroinitializer
  %10930 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10931 = getelementptr inbounds i8, i8* %10930, i64 20
  %10932 = bitcast i8* %10931 to float*
  %10933 = load float, float* %10932, align 4
  %10934 = insertelement <4 x float> zeroinitializer, float %10933, i32 0
  %10935 = insertelement <4 x float> %10934, float 1.000000e+00, i32 1
  %10936 = insertelement <4 x float> %10935, float 1.000000e+00, i32 2
  %10937 = insertelement <4 x float> %10936, float 1.000000e+00, i32 3
  %10938 = getelementptr inbounds float, float* %2, i64 4
  %10939 = load float, float* %10938, align 4
  %10940 = insertelement <4 x float> zeroinitializer, float %10939, i32 0
  %10941 = insertelement <4 x float> %10940, float 0.000000e+00, i32 1
  %10942 = insertelement <4 x float> %10941, float 0.000000e+00, i32 2
  %10943 = insertelement <4 x float> %10942, float 0.000000e+00, i32 3
  %10944 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10937, <4 x float> %10943, <4 x float> %10929)
  %10945 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10946 = getelementptr inbounds i8, i8* %10945, i64 24
  %10947 = bitcast i8* %10946 to float*
  %10948 = load float, float* %10947, align 4
  %10949 = insertelement <4 x float> zeroinitializer, float %10948, i32 0
  %10950 = insertelement <4 x float> %10949, float 1.000000e+00, i32 1
  %10951 = insertelement <4 x float> %10950, float 1.000000e+00, i32 2
  %10952 = insertelement <4 x float> %10951, float 1.000000e+00, i32 3
  %10953 = getelementptr inbounds float, float* %2, i64 8
  %10954 = load float, float* %10953, align 4
  %10955 = insertelement <4 x float> zeroinitializer, float %10954, i32 0
  %10956 = insertelement <4 x float> %10955, float 0.000000e+00, i32 1
  %10957 = insertelement <4 x float> %10956, float 0.000000e+00, i32 2
  %10958 = insertelement <4 x float> %10957, float 0.000000e+00, i32 3
  %10959 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10952, <4 x float> %10958, <4 x float> %10944)
  %10960 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10961 = getelementptr inbounds i8, i8* %10960, i64 28
  %10962 = bitcast i8* %10961 to float*
  %10963 = load float, float* %10962, align 4
  %10964 = insertelement <4 x float> zeroinitializer, float %10963, i32 0
  %10965 = insertelement <4 x float> %10964, float 0.000000e+00, i32 1
  %10966 = insertelement <4 x float> %10965, float 0.000000e+00, i32 2
  %10967 = insertelement <4 x float> %10966, float 0.000000e+00, i32 3
  %10968 = getelementptr inbounds float, float* %2, i64 12
  %10969 = load float, float* %10968, align 4
  %10970 = insertelement <4 x float> zeroinitializer, float %10969, i32 0
  %10971 = insertelement <4 x float> %10970, float 0.000000e+00, i32 1
  %10972 = insertelement <4 x float> %10971, float 0.000000e+00, i32 2
  %10973 = insertelement <4 x float> %10972, float 0.000000e+00, i32 3
  %10974 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10967, <4 x float> %10973, <4 x float> %10959)
  %10975 = extractelement <4 x float> %10974, i32 0
  %10976 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10977 = getelementptr inbounds i8, i8* %10976, i64 16
  %10978 = bitcast i8* %10977 to float*
  store float %10975, float* %10978, align 4
  %10979 = extractelement <4 x float> %10974, i32 1
  %10980 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10981 = getelementptr inbounds i8, i8* %10980, i64 20
  %10982 = bitcast i8* %10981 to float*
  store float %10979, float* %10982, align 4
  %10983 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10984 = getelementptr inbounds i8, i8* %10983, i64 16
  %10985 = bitcast i8* %10984 to float*
  %10986 = load float, float* %10985, align 4
  %10987 = insertelement <4 x float> zeroinitializer, float %10986, i32 0
  %10988 = insertelement <4 x float> %10987, float 0.000000e+00, i32 1
  %10989 = insertelement <4 x float> %10988, float 0.000000e+00, i32 2
  %10990 = insertelement <4 x float> %10989, float 0.000000e+00, i32 3
  %10991 = getelementptr inbounds float, float* %2, i64 1
  %10992 = load float, float* %10991, align 4
  %10993 = insertelement <4 x float> zeroinitializer, float %10992, i32 0
  %10994 = insertelement <4 x float> %10993, float 0.000000e+00, i32 1
  %10995 = insertelement <4 x float> %10994, float 0.000000e+00, i32 2
  %10996 = insertelement <4 x float> %10995, float 0.000000e+00, i32 3
  %10997 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10990, <4 x float> %10996, <4 x float> zeroinitializer)
  %10998 = extractelement <4 x float> %10997, i32 0
  %10999 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11000 = getelementptr inbounds i8, i8* %10999, i64 20
  %11001 = bitcast i8* %11000 to float*
  store float %10998, float* %11001, align 4
  %11002 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11003 = getelementptr inbounds i8, i8* %11002, i64 16
  %11004 = bitcast i8* %11003 to float*
  %11005 = load float, float* %11004, align 4
  %11006 = insertelement <4 x float> zeroinitializer, float %11005, i32 0
  %11007 = insertelement <4 x float> %11006, float 1.000000e+00, i32 1
  %11008 = insertelement <4 x float> %11007, float 1.000000e+00, i32 2
  %11009 = insertelement <4 x float> %11008, float 1.000000e+00, i32 3
  %11010 = getelementptr inbounds float, float* %2, i64 1
  %11011 = load float, float* %11010, align 4
  %11012 = insertelement <4 x float> zeroinitializer, float %11011, i32 0
  %11013 = insertelement <4 x float> %11012, float 0.000000e+00, i32 1
  %11014 = insertelement <4 x float> %11013, float 0.000000e+00, i32 2
  %11015 = insertelement <4 x float> %11014, float 0.000000e+00, i32 3
  %11016 = fmul <4 x float> %11009, %11015
  %11017 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11018 = getelementptr inbounds i8, i8* %11017, i64 20
  %11019 = bitcast i8* %11018 to float*
  %11020 = load float, float* %11019, align 4
  %11021 = insertelement <4 x float> zeroinitializer, float %11020, i32 0
  %11022 = insertelement <4 x float> %11021, float 0.000000e+00, i32 1
  %11023 = insertelement <4 x float> %11022, float 0.000000e+00, i32 2
  %11024 = insertelement <4 x float> %11023, float 0.000000e+00, i32 3
  %11025 = getelementptr inbounds float, float* %2, i64 5
  %11026 = load float, float* %11025, align 4
  %11027 = insertelement <4 x float> zeroinitializer, float %11026, i32 0
  %11028 = insertelement <4 x float> %11027, float 0.000000e+00, i32 1
  %11029 = insertelement <4 x float> %11028, float 0.000000e+00, i32 2
  %11030 = insertelement <4 x float> %11029, float 0.000000e+00, i32 3
  %11031 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11024, <4 x float> %11030, <4 x float> %11016)
  %11032 = extractelement <4 x float> %11031, i32 0
  %11033 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11034 = getelementptr inbounds i8, i8* %11033, i64 20
  %11035 = bitcast i8* %11034 to float*
  store float %11032, float* %11035, align 4
  %11036 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11037 = getelementptr inbounds i8, i8* %11036, i64 16
  %11038 = bitcast i8* %11037 to float*
  %11039 = load float, float* %11038, align 4
  %11040 = insertelement <4 x float> zeroinitializer, float %11039, i32 0
  %11041 = insertelement <4 x float> %11040, float 1.000000e+00, i32 1
  %11042 = insertelement <4 x float> %11041, float 1.000000e+00, i32 2
  %11043 = insertelement <4 x float> %11042, float 1.000000e+00, i32 3
  %11044 = getelementptr inbounds float, float* %2, i64 1
  %11045 = load float, float* %11044, align 4
  %11046 = insertelement <4 x float> zeroinitializer, float %11045, i32 0
  %11047 = insertelement <4 x float> %11046, float 0.000000e+00, i32 1
  %11048 = insertelement <4 x float> %11047, float 0.000000e+00, i32 2
  %11049 = insertelement <4 x float> %11048, float 0.000000e+00, i32 3
  %11050 = fmul <4 x float> %11043, %11049
  %11051 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11052 = getelementptr inbounds i8, i8* %11051, i64 20
  %11053 = bitcast i8* %11052 to float*
  %11054 = load float, float* %11053, align 4
  %11055 = insertelement <4 x float> zeroinitializer, float %11054, i32 0
  %11056 = insertelement <4 x float> %11055, float 1.000000e+00, i32 1
  %11057 = insertelement <4 x float> %11056, float 1.000000e+00, i32 2
  %11058 = insertelement <4 x float> %11057, float 1.000000e+00, i32 3
  %11059 = getelementptr inbounds float, float* %2, i64 5
  %11060 = load float, float* %11059, align 4
  %11061 = insertelement <4 x float> zeroinitializer, float %11060, i32 0
  %11062 = insertelement <4 x float> %11061, float 0.000000e+00, i32 1
  %11063 = insertelement <4 x float> %11062, float 0.000000e+00, i32 2
  %11064 = insertelement <4 x float> %11063, float 0.000000e+00, i32 3
  %11065 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11058, <4 x float> %11064, <4 x float> %11050)
  %11066 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11067 = getelementptr inbounds i8, i8* %11066, i64 24
  %11068 = bitcast i8* %11067 to float*
  %11069 = load float, float* %11068, align 4
  %11070 = insertelement <4 x float> zeroinitializer, float %11069, i32 0
  %11071 = insertelement <4 x float> %11070, float 0.000000e+00, i32 1
  %11072 = insertelement <4 x float> %11071, float 0.000000e+00, i32 2
  %11073 = insertelement <4 x float> %11072, float 0.000000e+00, i32 3
  %11074 = getelementptr inbounds float, float* %2, i64 9
  %11075 = load float, float* %11074, align 4
  %11076 = insertelement <4 x float> zeroinitializer, float %11075, i32 0
  %11077 = insertelement <4 x float> %11076, float 0.000000e+00, i32 1
  %11078 = insertelement <4 x float> %11077, float 0.000000e+00, i32 2
  %11079 = insertelement <4 x float> %11078, float 0.000000e+00, i32 3
  %11080 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11073, <4 x float> %11079, <4 x float> %11065)
  %11081 = extractelement <4 x float> %11080, i32 0
  %11082 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11083 = getelementptr inbounds i8, i8* %11082, i64 20
  %11084 = bitcast i8* %11083 to float*
  store float %11081, float* %11084, align 4
  %11085 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11086 = getelementptr inbounds i8, i8* %11085, i64 16
  %11087 = bitcast i8* %11086 to float*
  %11088 = load float, float* %11087, align 4
  %11089 = insertelement <4 x float> zeroinitializer, float %11088, i32 0
  %11090 = insertelement <4 x float> %11089, float 1.000000e+00, i32 1
  %11091 = insertelement <4 x float> %11090, float 1.000000e+00, i32 2
  %11092 = insertelement <4 x float> %11091, float 1.000000e+00, i32 3
  %11093 = getelementptr inbounds float, float* %2, i64 1
  %11094 = load float, float* %11093, align 4
  %11095 = insertelement <4 x float> zeroinitializer, float %11094, i32 0
  %11096 = insertelement <4 x float> %11095, float 0.000000e+00, i32 1
  %11097 = insertelement <4 x float> %11096, float 0.000000e+00, i32 2
  %11098 = insertelement <4 x float> %11097, float 0.000000e+00, i32 3
  %11099 = fmul <4 x float> %11092, %11098
  %11100 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11101 = getelementptr inbounds i8, i8* %11100, i64 20
  %11102 = bitcast i8* %11101 to float*
  %11103 = load float, float* %11102, align 4
  %11104 = insertelement <4 x float> zeroinitializer, float %11103, i32 0
  %11105 = insertelement <4 x float> %11104, float 1.000000e+00, i32 1
  %11106 = insertelement <4 x float> %11105, float 1.000000e+00, i32 2
  %11107 = insertelement <4 x float> %11106, float 1.000000e+00, i32 3
  %11108 = getelementptr inbounds float, float* %2, i64 5
  %11109 = load float, float* %11108, align 4
  %11110 = insertelement <4 x float> zeroinitializer, float %11109, i32 0
  %11111 = insertelement <4 x float> %11110, float 0.000000e+00, i32 1
  %11112 = insertelement <4 x float> %11111, float 0.000000e+00, i32 2
  %11113 = insertelement <4 x float> %11112, float 0.000000e+00, i32 3
  %11114 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11107, <4 x float> %11113, <4 x float> %11099)
  %11115 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11116 = getelementptr inbounds i8, i8* %11115, i64 24
  %11117 = bitcast i8* %11116 to float*
  %11118 = load float, float* %11117, align 4
  %11119 = insertelement <4 x float> zeroinitializer, float %11118, i32 0
  %11120 = insertelement <4 x float> %11119, float 1.000000e+00, i32 1
  %11121 = insertelement <4 x float> %11120, float 1.000000e+00, i32 2
  %11122 = insertelement <4 x float> %11121, float 1.000000e+00, i32 3
  %11123 = getelementptr inbounds float, float* %2, i64 9
  %11124 = load float, float* %11123, align 4
  %11125 = insertelement <4 x float> zeroinitializer, float %11124, i32 0
  %11126 = insertelement <4 x float> %11125, float 0.000000e+00, i32 1
  %11127 = insertelement <4 x float> %11126, float 0.000000e+00, i32 2
  %11128 = insertelement <4 x float> %11127, float 0.000000e+00, i32 3
  %11129 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11122, <4 x float> %11128, <4 x float> %11114)
  %11130 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11131 = getelementptr inbounds i8, i8* %11130, i64 28
  %11132 = bitcast i8* %11131 to float*
  %11133 = load float, float* %11132, align 4
  %11134 = insertelement <4 x float> zeroinitializer, float %11133, i32 0
  %11135 = insertelement <4 x float> %11134, float 0.000000e+00, i32 1
  %11136 = insertelement <4 x float> %11135, float 0.000000e+00, i32 2
  %11137 = insertelement <4 x float> %11136, float 0.000000e+00, i32 3
  %11138 = getelementptr inbounds float, float* %2, i64 13
  %11139 = load float, float* %11138, align 4
  %11140 = insertelement <4 x float> zeroinitializer, float %11139, i32 0
  %11141 = insertelement <4 x float> %11140, float 0.000000e+00, i32 1
  %11142 = insertelement <4 x float> %11141, float 0.000000e+00, i32 2
  %11143 = insertelement <4 x float> %11142, float 0.000000e+00, i32 3
  %11144 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11137, <4 x float> %11143, <4 x float> %11129)
  %11145 = extractelement <4 x float> %11144, i32 0
  %11146 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11147 = getelementptr inbounds i8, i8* %11146, i64 20
  %11148 = bitcast i8* %11147 to float*
  store float %11145, float* %11148, align 4
  %11149 = extractelement <4 x float> %11144, i32 1
  %11150 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11151 = getelementptr inbounds i8, i8* %11150, i64 24
  %11152 = bitcast i8* %11151 to float*
  store float %11149, float* %11152, align 4
  %11153 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11154 = getelementptr inbounds i8, i8* %11153, i64 16
  %11155 = bitcast i8* %11154 to float*
  %11156 = load float, float* %11155, align 4
  %11157 = insertelement <4 x float> zeroinitializer, float %11156, i32 0
  %11158 = insertelement <4 x float> %11157, float 0.000000e+00, i32 1
  %11159 = insertelement <4 x float> %11158, float 0.000000e+00, i32 2
  %11160 = insertelement <4 x float> %11159, float 0.000000e+00, i32 3
  %11161 = getelementptr inbounds float, float* %2, i64 2
  %11162 = load float, float* %11161, align 4
  %11163 = insertelement <4 x float> zeroinitializer, float %11162, i32 0
  %11164 = insertelement <4 x float> %11163, float 0.000000e+00, i32 1
  %11165 = insertelement <4 x float> %11164, float 0.000000e+00, i32 2
  %11166 = insertelement <4 x float> %11165, float 0.000000e+00, i32 3
  %11167 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11160, <4 x float> %11166, <4 x float> zeroinitializer)
  %11168 = extractelement <4 x float> %11167, i32 0
  %11169 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11170 = getelementptr inbounds i8, i8* %11169, i64 24
  %11171 = bitcast i8* %11170 to float*
  store float %11168, float* %11171, align 4
  %11172 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11173 = getelementptr inbounds i8, i8* %11172, i64 16
  %11174 = bitcast i8* %11173 to float*
  %11175 = load float, float* %11174, align 4
  %11176 = insertelement <4 x float> zeroinitializer, float %11175, i32 0
  %11177 = insertelement <4 x float> %11176, float 1.000000e+00, i32 1
  %11178 = insertelement <4 x float> %11177, float 1.000000e+00, i32 2
  %11179 = insertelement <4 x float> %11178, float 1.000000e+00, i32 3
  %11180 = getelementptr inbounds float, float* %2, i64 2
  %11181 = load float, float* %11180, align 4
  %11182 = insertelement <4 x float> zeroinitializer, float %11181, i32 0
  %11183 = insertelement <4 x float> %11182, float 0.000000e+00, i32 1
  %11184 = insertelement <4 x float> %11183, float 0.000000e+00, i32 2
  %11185 = insertelement <4 x float> %11184, float 0.000000e+00, i32 3
  %11186 = fmul <4 x float> %11179, %11185
  %11187 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11188 = getelementptr inbounds i8, i8* %11187, i64 20
  %11189 = bitcast i8* %11188 to float*
  %11190 = load float, float* %11189, align 4
  %11191 = insertelement <4 x float> zeroinitializer, float %11190, i32 0
  %11192 = insertelement <4 x float> %11191, float 0.000000e+00, i32 1
  %11193 = insertelement <4 x float> %11192, float 0.000000e+00, i32 2
  %11194 = insertelement <4 x float> %11193, float 0.000000e+00, i32 3
  %11195 = getelementptr inbounds float, float* %2, i64 6
  %11196 = load float, float* %11195, align 4
  %11197 = insertelement <4 x float> zeroinitializer, float %11196, i32 0
  %11198 = insertelement <4 x float> %11197, float 0.000000e+00, i32 1
  %11199 = insertelement <4 x float> %11198, float 0.000000e+00, i32 2
  %11200 = insertelement <4 x float> %11199, float 0.000000e+00, i32 3
  %11201 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11194, <4 x float> %11200, <4 x float> %11186)
  %11202 = extractelement <4 x float> %11201, i32 0
  %11203 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11204 = getelementptr inbounds i8, i8* %11203, i64 24
  %11205 = bitcast i8* %11204 to float*
  store float %11202, float* %11205, align 4
  %11206 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11207 = getelementptr inbounds i8, i8* %11206, i64 16
  %11208 = bitcast i8* %11207 to float*
  %11209 = load float, float* %11208, align 4
  %11210 = insertelement <4 x float> zeroinitializer, float %11209, i32 0
  %11211 = insertelement <4 x float> %11210, float 1.000000e+00, i32 1
  %11212 = insertelement <4 x float> %11211, float 1.000000e+00, i32 2
  %11213 = insertelement <4 x float> %11212, float 1.000000e+00, i32 3
  %11214 = getelementptr inbounds float, float* %2, i64 2
  %11215 = load float, float* %11214, align 4
  %11216 = insertelement <4 x float> zeroinitializer, float %11215, i32 0
  %11217 = insertelement <4 x float> %11216, float 0.000000e+00, i32 1
  %11218 = insertelement <4 x float> %11217, float 0.000000e+00, i32 2
  %11219 = insertelement <4 x float> %11218, float 0.000000e+00, i32 3
  %11220 = fmul <4 x float> %11213, %11219
  %11221 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11222 = getelementptr inbounds i8, i8* %11221, i64 20
  %11223 = bitcast i8* %11222 to float*
  %11224 = load float, float* %11223, align 4
  %11225 = insertelement <4 x float> zeroinitializer, float %11224, i32 0
  %11226 = insertelement <4 x float> %11225, float 1.000000e+00, i32 1
  %11227 = insertelement <4 x float> %11226, float 1.000000e+00, i32 2
  %11228 = insertelement <4 x float> %11227, float 1.000000e+00, i32 3
  %11229 = getelementptr inbounds float, float* %2, i64 6
  %11230 = load float, float* %11229, align 4
  %11231 = insertelement <4 x float> zeroinitializer, float %11230, i32 0
  %11232 = insertelement <4 x float> %11231, float 0.000000e+00, i32 1
  %11233 = insertelement <4 x float> %11232, float 0.000000e+00, i32 2
  %11234 = insertelement <4 x float> %11233, float 0.000000e+00, i32 3
  %11235 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11228, <4 x float> %11234, <4 x float> %11220)
  %11236 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11237 = getelementptr inbounds i8, i8* %11236, i64 24
  %11238 = bitcast i8* %11237 to float*
  %11239 = load float, float* %11238, align 4
  %11240 = insertelement <4 x float> zeroinitializer, float %11239, i32 0
  %11241 = insertelement <4 x float> %11240, float 0.000000e+00, i32 1
  %11242 = insertelement <4 x float> %11241, float 0.000000e+00, i32 2
  %11243 = insertelement <4 x float> %11242, float 0.000000e+00, i32 3
  %11244 = getelementptr inbounds float, float* %2, i64 10
  %11245 = load float, float* %11244, align 4
  %11246 = insertelement <4 x float> zeroinitializer, float %11245, i32 0
  %11247 = insertelement <4 x float> %11246, float 0.000000e+00, i32 1
  %11248 = insertelement <4 x float> %11247, float 0.000000e+00, i32 2
  %11249 = insertelement <4 x float> %11248, float 0.000000e+00, i32 3
  %11250 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11243, <4 x float> %11249, <4 x float> %11235)
  %11251 = extractelement <4 x float> %11250, i32 0
  %11252 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11253 = getelementptr inbounds i8, i8* %11252, i64 24
  %11254 = bitcast i8* %11253 to float*
  store float %11251, float* %11254, align 4
  %11255 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11256 = getelementptr inbounds i8, i8* %11255, i64 16
  %11257 = bitcast i8* %11256 to float*
  %11258 = load float, float* %11257, align 4
  %11259 = insertelement <4 x float> zeroinitializer, float %11258, i32 0
  %11260 = insertelement <4 x float> %11259, float 1.000000e+00, i32 1
  %11261 = insertelement <4 x float> %11260, float 1.000000e+00, i32 2
  %11262 = insertelement <4 x float> %11261, float 1.000000e+00, i32 3
  %11263 = getelementptr inbounds float, float* %2, i64 2
  %11264 = load float, float* %11263, align 4
  %11265 = insertelement <4 x float> zeroinitializer, float %11264, i32 0
  %11266 = insertelement <4 x float> %11265, float 0.000000e+00, i32 1
  %11267 = insertelement <4 x float> %11266, float 0.000000e+00, i32 2
  %11268 = insertelement <4 x float> %11267, float 0.000000e+00, i32 3
  %11269 = fmul <4 x float> %11262, %11268
  %11270 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11271 = getelementptr inbounds i8, i8* %11270, i64 20
  %11272 = bitcast i8* %11271 to float*
  %11273 = load float, float* %11272, align 4
  %11274 = insertelement <4 x float> zeroinitializer, float %11273, i32 0
  %11275 = insertelement <4 x float> %11274, float 1.000000e+00, i32 1
  %11276 = insertelement <4 x float> %11275, float 1.000000e+00, i32 2
  %11277 = insertelement <4 x float> %11276, float 1.000000e+00, i32 3
  %11278 = getelementptr inbounds float, float* %2, i64 6
  %11279 = load float, float* %11278, align 4
  %11280 = insertelement <4 x float> zeroinitializer, float %11279, i32 0
  %11281 = insertelement <4 x float> %11280, float 0.000000e+00, i32 1
  %11282 = insertelement <4 x float> %11281, float 0.000000e+00, i32 2
  %11283 = insertelement <4 x float> %11282, float 0.000000e+00, i32 3
  %11284 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11277, <4 x float> %11283, <4 x float> %11269)
  %11285 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11286 = getelementptr inbounds i8, i8* %11285, i64 24
  %11287 = bitcast i8* %11286 to float*
  %11288 = load float, float* %11287, align 4
  %11289 = insertelement <4 x float> zeroinitializer, float %11288, i32 0
  %11290 = insertelement <4 x float> %11289, float 1.000000e+00, i32 1
  %11291 = insertelement <4 x float> %11290, float 1.000000e+00, i32 2
  %11292 = insertelement <4 x float> %11291, float 1.000000e+00, i32 3
  %11293 = getelementptr inbounds float, float* %2, i64 10
  %11294 = load float, float* %11293, align 4
  %11295 = insertelement <4 x float> zeroinitializer, float %11294, i32 0
  %11296 = insertelement <4 x float> %11295, float 0.000000e+00, i32 1
  %11297 = insertelement <4 x float> %11296, float 0.000000e+00, i32 2
  %11298 = insertelement <4 x float> %11297, float 0.000000e+00, i32 3
  %11299 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11292, <4 x float> %11298, <4 x float> %11284)
  %11300 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11301 = getelementptr inbounds i8, i8* %11300, i64 28
  %11302 = bitcast i8* %11301 to float*
  %11303 = load float, float* %11302, align 4
  %11304 = insertelement <4 x float> zeroinitializer, float %11303, i32 0
  %11305 = insertelement <4 x float> %11304, float 0.000000e+00, i32 1
  %11306 = insertelement <4 x float> %11305, float 0.000000e+00, i32 2
  %11307 = insertelement <4 x float> %11306, float 0.000000e+00, i32 3
  %11308 = getelementptr inbounds float, float* %2, i64 14
  %11309 = load float, float* %11308, align 4
  %11310 = insertelement <4 x float> zeroinitializer, float %11309, i32 0
  %11311 = insertelement <4 x float> %11310, float 0.000000e+00, i32 1
  %11312 = insertelement <4 x float> %11311, float 0.000000e+00, i32 2
  %11313 = insertelement <4 x float> %11312, float 0.000000e+00, i32 3
  %11314 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11307, <4 x float> %11313, <4 x float> %11299)
  %11315 = extractelement <4 x float> %11314, i32 0
  %11316 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11317 = getelementptr inbounds i8, i8* %11316, i64 24
  %11318 = bitcast i8* %11317 to float*
  store float %11315, float* %11318, align 4
  %11319 = extractelement <4 x float> %11314, i32 1
  %11320 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11321 = getelementptr inbounds i8, i8* %11320, i64 28
  %11322 = bitcast i8* %11321 to float*
  store float %11319, float* %11322, align 4
  %11323 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11324 = getelementptr inbounds i8, i8* %11323, i64 16
  %11325 = bitcast i8* %11324 to float*
  %11326 = load float, float* %11325, align 4
  %11327 = insertelement <4 x float> zeroinitializer, float %11326, i32 0
  %11328 = insertelement <4 x float> %11327, float 0.000000e+00, i32 1
  %11329 = insertelement <4 x float> %11328, float 0.000000e+00, i32 2
  %11330 = insertelement <4 x float> %11329, float 0.000000e+00, i32 3
  %11331 = getelementptr inbounds float, float* %2, i64 3
  %11332 = load float, float* %11331, align 4
  %11333 = insertelement <4 x float> zeroinitializer, float %11332, i32 0
  %11334 = insertelement <4 x float> %11333, float 0.000000e+00, i32 1
  %11335 = insertelement <4 x float> %11334, float 0.000000e+00, i32 2
  %11336 = insertelement <4 x float> %11335, float 0.000000e+00, i32 3
  %11337 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11330, <4 x float> %11336, <4 x float> zeroinitializer)
  %11338 = extractelement <4 x float> %11337, i32 0
  %11339 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11340 = getelementptr inbounds i8, i8* %11339, i64 28
  %11341 = bitcast i8* %11340 to float*
  store float %11338, float* %11341, align 4
  %11342 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11343 = getelementptr inbounds i8, i8* %11342, i64 16
  %11344 = bitcast i8* %11343 to float*
  %11345 = load float, float* %11344, align 4
  %11346 = insertelement <4 x float> zeroinitializer, float %11345, i32 0
  %11347 = insertelement <4 x float> %11346, float 1.000000e+00, i32 1
  %11348 = insertelement <4 x float> %11347, float 1.000000e+00, i32 2
  %11349 = insertelement <4 x float> %11348, float 1.000000e+00, i32 3
  %11350 = getelementptr inbounds float, float* %2, i64 3
  %11351 = load float, float* %11350, align 4
  %11352 = insertelement <4 x float> zeroinitializer, float %11351, i32 0
  %11353 = insertelement <4 x float> %11352, float 0.000000e+00, i32 1
  %11354 = insertelement <4 x float> %11353, float 0.000000e+00, i32 2
  %11355 = insertelement <4 x float> %11354, float 0.000000e+00, i32 3
  %11356 = fmul <4 x float> %11349, %11355
  %11357 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11358 = getelementptr inbounds i8, i8* %11357, i64 20
  %11359 = bitcast i8* %11358 to float*
  %11360 = load float, float* %11359, align 4
  %11361 = insertelement <4 x float> zeroinitializer, float %11360, i32 0
  %11362 = insertelement <4 x float> %11361, float 0.000000e+00, i32 1
  %11363 = insertelement <4 x float> %11362, float 0.000000e+00, i32 2
  %11364 = insertelement <4 x float> %11363, float 0.000000e+00, i32 3
  %11365 = getelementptr inbounds float, float* %2, i64 7
  %11366 = load float, float* %11365, align 4
  %11367 = insertelement <4 x float> zeroinitializer, float %11366, i32 0
  %11368 = insertelement <4 x float> %11367, float 0.000000e+00, i32 1
  %11369 = insertelement <4 x float> %11368, float 0.000000e+00, i32 2
  %11370 = insertelement <4 x float> %11369, float 0.000000e+00, i32 3
  %11371 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11364, <4 x float> %11370, <4 x float> %11356)
  %11372 = extractelement <4 x float> %11371, i32 0
  %11373 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11374 = getelementptr inbounds i8, i8* %11373, i64 28
  %11375 = bitcast i8* %11374 to float*
  store float %11372, float* %11375, align 4
  %11376 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11377 = getelementptr inbounds i8, i8* %11376, i64 16
  %11378 = bitcast i8* %11377 to float*
  %11379 = load float, float* %11378, align 4
  %11380 = insertelement <4 x float> zeroinitializer, float %11379, i32 0
  %11381 = insertelement <4 x float> %11380, float 1.000000e+00, i32 1
  %11382 = insertelement <4 x float> %11381, float 1.000000e+00, i32 2
  %11383 = insertelement <4 x float> %11382, float 1.000000e+00, i32 3
  %11384 = getelementptr inbounds float, float* %2, i64 3
  %11385 = load float, float* %11384, align 4
  %11386 = insertelement <4 x float> zeroinitializer, float %11385, i32 0
  %11387 = insertelement <4 x float> %11386, float 0.000000e+00, i32 1
  %11388 = insertelement <4 x float> %11387, float 0.000000e+00, i32 2
  %11389 = insertelement <4 x float> %11388, float 0.000000e+00, i32 3
  %11390 = fmul <4 x float> %11383, %11389
  %11391 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11392 = getelementptr inbounds i8, i8* %11391, i64 20
  %11393 = bitcast i8* %11392 to float*
  %11394 = load float, float* %11393, align 4
  %11395 = insertelement <4 x float> zeroinitializer, float %11394, i32 0
  %11396 = insertelement <4 x float> %11395, float 1.000000e+00, i32 1
  %11397 = insertelement <4 x float> %11396, float 1.000000e+00, i32 2
  %11398 = insertelement <4 x float> %11397, float 1.000000e+00, i32 3
  %11399 = getelementptr inbounds float, float* %2, i64 7
  %11400 = load float, float* %11399, align 4
  %11401 = insertelement <4 x float> zeroinitializer, float %11400, i32 0
  %11402 = insertelement <4 x float> %11401, float 0.000000e+00, i32 1
  %11403 = insertelement <4 x float> %11402, float 0.000000e+00, i32 2
  %11404 = insertelement <4 x float> %11403, float 0.000000e+00, i32 3
  %11405 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11398, <4 x float> %11404, <4 x float> %11390)
  %11406 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11407 = getelementptr inbounds i8, i8* %11406, i64 24
  %11408 = bitcast i8* %11407 to float*
  %11409 = load float, float* %11408, align 4
  %11410 = insertelement <4 x float> zeroinitializer, float %11409, i32 0
  %11411 = insertelement <4 x float> %11410, float 0.000000e+00, i32 1
  %11412 = insertelement <4 x float> %11411, float 0.000000e+00, i32 2
  %11413 = insertelement <4 x float> %11412, float 0.000000e+00, i32 3
  %11414 = getelementptr inbounds float, float* %2, i64 11
  %11415 = load float, float* %11414, align 4
  %11416 = insertelement <4 x float> zeroinitializer, float %11415, i32 0
  %11417 = insertelement <4 x float> %11416, float 0.000000e+00, i32 1
  %11418 = insertelement <4 x float> %11417, float 0.000000e+00, i32 2
  %11419 = insertelement <4 x float> %11418, float 0.000000e+00, i32 3
  %11420 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11413, <4 x float> %11419, <4 x float> %11405)
  %11421 = extractelement <4 x float> %11420, i32 0
  %11422 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11423 = getelementptr inbounds i8, i8* %11422, i64 28
  %11424 = bitcast i8* %11423 to float*
  store float %11421, float* %11424, align 4
  %11425 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11426 = getelementptr inbounds i8, i8* %11425, i64 16
  %11427 = bitcast i8* %11426 to float*
  %11428 = load float, float* %11427, align 4
  %11429 = insertelement <4 x float> zeroinitializer, float %11428, i32 0
  %11430 = insertelement <4 x float> %11429, float 1.000000e+00, i32 1
  %11431 = insertelement <4 x float> %11430, float 1.000000e+00, i32 2
  %11432 = insertelement <4 x float> %11431, float 1.000000e+00, i32 3
  %11433 = getelementptr inbounds float, float* %2, i64 3
  %11434 = load float, float* %11433, align 4
  %11435 = insertelement <4 x float> zeroinitializer, float %11434, i32 0
  %11436 = insertelement <4 x float> %11435, float 0.000000e+00, i32 1
  %11437 = insertelement <4 x float> %11436, float 0.000000e+00, i32 2
  %11438 = insertelement <4 x float> %11437, float 0.000000e+00, i32 3
  %11439 = fmul <4 x float> %11432, %11438
  %11440 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11441 = getelementptr inbounds i8, i8* %11440, i64 20
  %11442 = bitcast i8* %11441 to float*
  %11443 = load float, float* %11442, align 4
  %11444 = insertelement <4 x float> zeroinitializer, float %11443, i32 0
  %11445 = insertelement <4 x float> %11444, float 1.000000e+00, i32 1
  %11446 = insertelement <4 x float> %11445, float 1.000000e+00, i32 2
  %11447 = insertelement <4 x float> %11446, float 1.000000e+00, i32 3
  %11448 = getelementptr inbounds float, float* %2, i64 7
  %11449 = load float, float* %11448, align 4
  %11450 = insertelement <4 x float> zeroinitializer, float %11449, i32 0
  %11451 = insertelement <4 x float> %11450, float 0.000000e+00, i32 1
  %11452 = insertelement <4 x float> %11451, float 0.000000e+00, i32 2
  %11453 = insertelement <4 x float> %11452, float 0.000000e+00, i32 3
  %11454 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11447, <4 x float> %11453, <4 x float> %11439)
  %11455 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11456 = getelementptr inbounds i8, i8* %11455, i64 24
  %11457 = bitcast i8* %11456 to float*
  %11458 = load float, float* %11457, align 4
  %11459 = insertelement <4 x float> zeroinitializer, float %11458, i32 0
  %11460 = insertelement <4 x float> %11459, float 1.000000e+00, i32 1
  %11461 = insertelement <4 x float> %11460, float 1.000000e+00, i32 2
  %11462 = insertelement <4 x float> %11461, float 1.000000e+00, i32 3
  %11463 = getelementptr inbounds float, float* %2, i64 11
  %11464 = load float, float* %11463, align 4
  %11465 = insertelement <4 x float> zeroinitializer, float %11464, i32 0
  %11466 = insertelement <4 x float> %11465, float 0.000000e+00, i32 1
  %11467 = insertelement <4 x float> %11466, float 0.000000e+00, i32 2
  %11468 = insertelement <4 x float> %11467, float 0.000000e+00, i32 3
  %11469 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11462, <4 x float> %11468, <4 x float> %11454)
  %11470 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11471 = getelementptr inbounds i8, i8* %11470, i64 28
  %11472 = bitcast i8* %11471 to float*
  %11473 = load float, float* %11472, align 4
  %11474 = insertelement <4 x float> zeroinitializer, float %11473, i32 0
  %11475 = insertelement <4 x float> %11474, float 0.000000e+00, i32 1
  %11476 = insertelement <4 x float> %11475, float 0.000000e+00, i32 2
  %11477 = insertelement <4 x float> %11476, float 0.000000e+00, i32 3
  %11478 = getelementptr inbounds float, float* %2, i64 15
  %11479 = load float, float* %11478, align 4
  %11480 = insertelement <4 x float> zeroinitializer, float %11479, i32 0
  %11481 = insertelement <4 x float> %11480, float 0.000000e+00, i32 1
  %11482 = insertelement <4 x float> %11481, float 0.000000e+00, i32 2
  %11483 = insertelement <4 x float> %11482, float 0.000000e+00, i32 3
  %11484 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11477, <4 x float> %11483, <4 x float> %11469)
  %11485 = extractelement <4 x float> %11484, i32 0
  %11486 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11487 = getelementptr inbounds i8, i8* %11486, i64 28
  %11488 = bitcast i8* %11487 to float*
  store float %11485, float* %11488, align 4
  %11489 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11490 = getelementptr inbounds i8, i8* %11489, i64 32
  %11491 = bitcast i8* %11490 to float*
  %11492 = load float, float* %11491, align 4
  %11493 = insertelement <4 x float> zeroinitializer, float %11492, i32 0
  %11494 = insertelement <4 x float> %11493, float 0.000000e+00, i32 1
  %11495 = insertelement <4 x float> %11494, float 0.000000e+00, i32 2
  %11496 = insertelement <4 x float> %11495, float 0.000000e+00, i32 3
  %11497 = load float, float* %2, align 4
  %11498 = insertelement <4 x float> zeroinitializer, float %11497, i32 0
  %11499 = insertelement <4 x float> %11498, float 0.000000e+00, i32 1
  %11500 = insertelement <4 x float> %11499, float 0.000000e+00, i32 2
  %11501 = insertelement <4 x float> %11500, float 0.000000e+00, i32 3
  %11502 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11496, <4 x float> %11501, <4 x float> zeroinitializer)
  %11503 = extractelement <4 x float> %11502, i32 0
  %11504 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11505 = getelementptr inbounds i8, i8* %11504, i64 32
  %11506 = bitcast i8* %11505 to float*
  store float %11503, float* %11506, align 4
  %11507 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11508 = getelementptr inbounds i8, i8* %11507, i64 32
  %11509 = bitcast i8* %11508 to float*
  %11510 = load float, float* %11509, align 4
  %11511 = insertelement <4 x float> zeroinitializer, float %11510, i32 0
  %11512 = insertelement <4 x float> %11511, float 1.000000e+00, i32 1
  %11513 = insertelement <4 x float> %11512, float 1.000000e+00, i32 2
  %11514 = insertelement <4 x float> %11513, float 1.000000e+00, i32 3
  %11515 = load float, float* %2, align 4
  %11516 = insertelement <4 x float> zeroinitializer, float %11515, i32 0
  %11517 = insertelement <4 x float> %11516, float 0.000000e+00, i32 1
  %11518 = insertelement <4 x float> %11517, float 0.000000e+00, i32 2
  %11519 = insertelement <4 x float> %11518, float 0.000000e+00, i32 3
  %11520 = fmul <4 x float> %11514, %11519
  %11521 = fadd <4 x float> %11520, zeroinitializer
  %11522 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11523 = getelementptr inbounds i8, i8* %11522, i64 36
  %11524 = bitcast i8* %11523 to float*
  %11525 = load float, float* %11524, align 4
  %11526 = insertelement <4 x float> zeroinitializer, float %11525, i32 0
  %11527 = insertelement <4 x float> %11526, float 0.000000e+00, i32 1
  %11528 = insertelement <4 x float> %11527, float 0.000000e+00, i32 2
  %11529 = insertelement <4 x float> %11528, float 0.000000e+00, i32 3
  %11530 = getelementptr inbounds float, float* %2, i64 4
  %11531 = load float, float* %11530, align 4
  %11532 = insertelement <4 x float> zeroinitializer, float %11531, i32 0
  %11533 = insertelement <4 x float> %11532, float 0.000000e+00, i32 1
  %11534 = insertelement <4 x float> %11533, float 0.000000e+00, i32 2
  %11535 = insertelement <4 x float> %11534, float 0.000000e+00, i32 3
  %11536 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11529, <4 x float> %11535, <4 x float> %11521)
  %11537 = extractelement <4 x float> %11536, i32 0
  %11538 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11539 = getelementptr inbounds i8, i8* %11538, i64 32
  %11540 = bitcast i8* %11539 to float*
  store float %11537, float* %11540, align 4
  %11541 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11542 = getelementptr inbounds i8, i8* %11541, i64 32
  %11543 = bitcast i8* %11542 to float*
  %11544 = load float, float* %11543, align 4
  %11545 = insertelement <4 x float> zeroinitializer, float %11544, i32 0
  %11546 = insertelement <4 x float> %11545, float 1.000000e+00, i32 1
  %11547 = insertelement <4 x float> %11546, float 1.000000e+00, i32 2
  %11548 = insertelement <4 x float> %11547, float 1.000000e+00, i32 3
  %11549 = load float, float* %2, align 4
  %11550 = insertelement <4 x float> zeroinitializer, float %11549, i32 0
  %11551 = insertelement <4 x float> %11550, float 0.000000e+00, i32 1
  %11552 = insertelement <4 x float> %11551, float 0.000000e+00, i32 2
  %11553 = insertelement <4 x float> %11552, float 0.000000e+00, i32 3
  %11554 = fmul <4 x float> %11548, %11553
  %11555 = fadd <4 x float> %11554, zeroinitializer
  %11556 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11557 = getelementptr inbounds i8, i8* %11556, i64 36
  %11558 = bitcast i8* %11557 to float*
  %11559 = load float, float* %11558, align 4
  %11560 = insertelement <4 x float> zeroinitializer, float %11559, i32 0
  %11561 = insertelement <4 x float> %11560, float 1.000000e+00, i32 1
  %11562 = insertelement <4 x float> %11561, float 1.000000e+00, i32 2
  %11563 = insertelement <4 x float> %11562, float 1.000000e+00, i32 3
  %11564 = getelementptr inbounds float, float* %2, i64 4
  %11565 = load float, float* %11564, align 4
  %11566 = insertelement <4 x float> zeroinitializer, float %11565, i32 0
  %11567 = insertelement <4 x float> %11566, float 0.000000e+00, i32 1
  %11568 = insertelement <4 x float> %11567, float 0.000000e+00, i32 2
  %11569 = insertelement <4 x float> %11568, float 0.000000e+00, i32 3
  %11570 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11563, <4 x float> %11569, <4 x float> %11555)
  %11571 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11572 = getelementptr inbounds i8, i8* %11571, i64 40
  %11573 = bitcast i8* %11572 to float*
  %11574 = load float, float* %11573, align 4
  %11575 = insertelement <4 x float> zeroinitializer, float %11574, i32 0
  %11576 = insertelement <4 x float> %11575, float 0.000000e+00, i32 1
  %11577 = insertelement <4 x float> %11576, float 0.000000e+00, i32 2
  %11578 = insertelement <4 x float> %11577, float 0.000000e+00, i32 3
  %11579 = getelementptr inbounds float, float* %2, i64 8
  %11580 = load float, float* %11579, align 4
  %11581 = insertelement <4 x float> zeroinitializer, float %11580, i32 0
  %11582 = insertelement <4 x float> %11581, float 0.000000e+00, i32 1
  %11583 = insertelement <4 x float> %11582, float 0.000000e+00, i32 2
  %11584 = insertelement <4 x float> %11583, float 0.000000e+00, i32 3
  %11585 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11578, <4 x float> %11584, <4 x float> %11570)
  %11586 = extractelement <4 x float> %11585, i32 0
  %11587 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11588 = getelementptr inbounds i8, i8* %11587, i64 32
  %11589 = bitcast i8* %11588 to float*
  store float %11586, float* %11589, align 4
  %11590 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11591 = getelementptr inbounds i8, i8* %11590, i64 32
  %11592 = bitcast i8* %11591 to float*
  %11593 = load float, float* %11592, align 4
  %11594 = insertelement <4 x float> zeroinitializer, float %11593, i32 0
  %11595 = insertelement <4 x float> %11594, float 1.000000e+00, i32 1
  %11596 = insertelement <4 x float> %11595, float 1.000000e+00, i32 2
  %11597 = insertelement <4 x float> %11596, float 1.000000e+00, i32 3
  %11598 = load float, float* %2, align 4
  %11599 = insertelement <4 x float> zeroinitializer, float %11598, i32 0
  %11600 = insertelement <4 x float> %11599, float 0.000000e+00, i32 1
  %11601 = insertelement <4 x float> %11600, float 0.000000e+00, i32 2
  %11602 = insertelement <4 x float> %11601, float 0.000000e+00, i32 3
  %11603 = fmul <4 x float> %11597, %11602
  %11604 = fadd <4 x float> %11603, zeroinitializer
  %11605 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11606 = getelementptr inbounds i8, i8* %11605, i64 36
  %11607 = bitcast i8* %11606 to float*
  %11608 = load float, float* %11607, align 4
  %11609 = insertelement <4 x float> zeroinitializer, float %11608, i32 0
  %11610 = insertelement <4 x float> %11609, float 1.000000e+00, i32 1
  %11611 = insertelement <4 x float> %11610, float 1.000000e+00, i32 2
  %11612 = insertelement <4 x float> %11611, float 1.000000e+00, i32 3
  %11613 = getelementptr inbounds float, float* %2, i64 4
  %11614 = load float, float* %11613, align 4
  %11615 = insertelement <4 x float> zeroinitializer, float %11614, i32 0
  %11616 = insertelement <4 x float> %11615, float 0.000000e+00, i32 1
  %11617 = insertelement <4 x float> %11616, float 0.000000e+00, i32 2
  %11618 = insertelement <4 x float> %11617, float 0.000000e+00, i32 3
  %11619 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11612, <4 x float> %11618, <4 x float> %11604)
  %11620 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11621 = getelementptr inbounds i8, i8* %11620, i64 40
  %11622 = bitcast i8* %11621 to float*
  %11623 = load float, float* %11622, align 4
  %11624 = insertelement <4 x float> zeroinitializer, float %11623, i32 0
  %11625 = insertelement <4 x float> %11624, float 1.000000e+00, i32 1
  %11626 = insertelement <4 x float> %11625, float 1.000000e+00, i32 2
  %11627 = insertelement <4 x float> %11626, float 1.000000e+00, i32 3
  %11628 = getelementptr inbounds float, float* %2, i64 8
  %11629 = load float, float* %11628, align 4
  %11630 = insertelement <4 x float> zeroinitializer, float %11629, i32 0
  %11631 = insertelement <4 x float> %11630, float 0.000000e+00, i32 1
  %11632 = insertelement <4 x float> %11631, float 0.000000e+00, i32 2
  %11633 = insertelement <4 x float> %11632, float 0.000000e+00, i32 3
  %11634 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11627, <4 x float> %11633, <4 x float> %11619)
  %11635 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11636 = getelementptr inbounds i8, i8* %11635, i64 44
  %11637 = bitcast i8* %11636 to float*
  %11638 = load float, float* %11637, align 4
  %11639 = insertelement <4 x float> zeroinitializer, float %11638, i32 0
  %11640 = insertelement <4 x float> %11639, float 0.000000e+00, i32 1
  %11641 = insertelement <4 x float> %11640, float 0.000000e+00, i32 2
  %11642 = insertelement <4 x float> %11641, float 0.000000e+00, i32 3
  %11643 = getelementptr inbounds float, float* %2, i64 12
  %11644 = load float, float* %11643, align 4
  %11645 = insertelement <4 x float> zeroinitializer, float %11644, i32 0
  %11646 = insertelement <4 x float> %11645, float 0.000000e+00, i32 1
  %11647 = insertelement <4 x float> %11646, float 0.000000e+00, i32 2
  %11648 = insertelement <4 x float> %11647, float 0.000000e+00, i32 3
  %11649 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11642, <4 x float> %11648, <4 x float> %11634)
  %11650 = extractelement <4 x float> %11649, i32 0
  %11651 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11652 = getelementptr inbounds i8, i8* %11651, i64 32
  %11653 = bitcast i8* %11652 to float*
  store float %11650, float* %11653, align 4
  %11654 = extractelement <4 x float> %11649, i32 1
  %11655 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11656 = getelementptr inbounds i8, i8* %11655, i64 36
  %11657 = bitcast i8* %11656 to float*
  store float %11654, float* %11657, align 4
  %11658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11659 = getelementptr inbounds i8, i8* %11658, i64 32
  %11660 = bitcast i8* %11659 to float*
  %11661 = load float, float* %11660, align 4
  %11662 = insertelement <4 x float> zeroinitializer, float %11661, i32 0
  %11663 = insertelement <4 x float> %11662, float 0.000000e+00, i32 1
  %11664 = insertelement <4 x float> %11663, float 0.000000e+00, i32 2
  %11665 = insertelement <4 x float> %11664, float 0.000000e+00, i32 3
  %11666 = getelementptr inbounds float, float* %2, i64 1
  %11667 = load float, float* %11666, align 4
  %11668 = insertelement <4 x float> zeroinitializer, float %11667, i32 0
  %11669 = insertelement <4 x float> %11668, float 0.000000e+00, i32 1
  %11670 = insertelement <4 x float> %11669, float 0.000000e+00, i32 2
  %11671 = insertelement <4 x float> %11670, float 0.000000e+00, i32 3
  %11672 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11665, <4 x float> %11671, <4 x float> zeroinitializer)
  %11673 = extractelement <4 x float> %11672, i32 0
  %11674 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11675 = getelementptr inbounds i8, i8* %11674, i64 36
  %11676 = bitcast i8* %11675 to float*
  store float %11673, float* %11676, align 4
  %11677 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11678 = getelementptr inbounds i8, i8* %11677, i64 32
  %11679 = bitcast i8* %11678 to float*
  %11680 = load float, float* %11679, align 4
  %11681 = insertelement <4 x float> zeroinitializer, float %11680, i32 0
  %11682 = insertelement <4 x float> %11681, float 1.000000e+00, i32 1
  %11683 = insertelement <4 x float> %11682, float 1.000000e+00, i32 2
  %11684 = insertelement <4 x float> %11683, float 1.000000e+00, i32 3
  %11685 = getelementptr inbounds float, float* %2, i64 1
  %11686 = load float, float* %11685, align 4
  %11687 = insertelement <4 x float> zeroinitializer, float %11686, i32 0
  %11688 = insertelement <4 x float> %11687, float 0.000000e+00, i32 1
  %11689 = insertelement <4 x float> %11688, float 0.000000e+00, i32 2
  %11690 = insertelement <4 x float> %11689, float 0.000000e+00, i32 3
  %11691 = fmul <4 x float> %11684, %11690
  %11692 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11693 = getelementptr inbounds i8, i8* %11692, i64 36
  %11694 = bitcast i8* %11693 to float*
  %11695 = load float, float* %11694, align 4
  %11696 = insertelement <4 x float> zeroinitializer, float %11695, i32 0
  %11697 = insertelement <4 x float> %11696, float 0.000000e+00, i32 1
  %11698 = insertelement <4 x float> %11697, float 0.000000e+00, i32 2
  %11699 = insertelement <4 x float> %11698, float 0.000000e+00, i32 3
  %11700 = getelementptr inbounds float, float* %2, i64 5
  %11701 = load float, float* %11700, align 4
  %11702 = insertelement <4 x float> zeroinitializer, float %11701, i32 0
  %11703 = insertelement <4 x float> %11702, float 0.000000e+00, i32 1
  %11704 = insertelement <4 x float> %11703, float 0.000000e+00, i32 2
  %11705 = insertelement <4 x float> %11704, float 0.000000e+00, i32 3
  %11706 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11699, <4 x float> %11705, <4 x float> %11691)
  %11707 = extractelement <4 x float> %11706, i32 0
  %11708 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11709 = getelementptr inbounds i8, i8* %11708, i64 36
  %11710 = bitcast i8* %11709 to float*
  store float %11707, float* %11710, align 4
  %11711 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11712 = getelementptr inbounds i8, i8* %11711, i64 32
  %11713 = bitcast i8* %11712 to float*
  %11714 = load float, float* %11713, align 4
  %11715 = insertelement <4 x float> zeroinitializer, float %11714, i32 0
  %11716 = insertelement <4 x float> %11715, float 1.000000e+00, i32 1
  %11717 = insertelement <4 x float> %11716, float 1.000000e+00, i32 2
  %11718 = insertelement <4 x float> %11717, float 1.000000e+00, i32 3
  %11719 = getelementptr inbounds float, float* %2, i64 1
  %11720 = load float, float* %11719, align 4
  %11721 = insertelement <4 x float> zeroinitializer, float %11720, i32 0
  %11722 = insertelement <4 x float> %11721, float 0.000000e+00, i32 1
  %11723 = insertelement <4 x float> %11722, float 0.000000e+00, i32 2
  %11724 = insertelement <4 x float> %11723, float 0.000000e+00, i32 3
  %11725 = fmul <4 x float> %11718, %11724
  %11726 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11727 = getelementptr inbounds i8, i8* %11726, i64 36
  %11728 = bitcast i8* %11727 to float*
  %11729 = load float, float* %11728, align 4
  %11730 = insertelement <4 x float> zeroinitializer, float %11729, i32 0
  %11731 = insertelement <4 x float> %11730, float 1.000000e+00, i32 1
  %11732 = insertelement <4 x float> %11731, float 1.000000e+00, i32 2
  %11733 = insertelement <4 x float> %11732, float 1.000000e+00, i32 3
  %11734 = getelementptr inbounds float, float* %2, i64 5
  %11735 = load float, float* %11734, align 4
  %11736 = insertelement <4 x float> zeroinitializer, float %11735, i32 0
  %11737 = insertelement <4 x float> %11736, float 0.000000e+00, i32 1
  %11738 = insertelement <4 x float> %11737, float 0.000000e+00, i32 2
  %11739 = insertelement <4 x float> %11738, float 0.000000e+00, i32 3
  %11740 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11733, <4 x float> %11739, <4 x float> %11725)
  %11741 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11742 = getelementptr inbounds i8, i8* %11741, i64 40
  %11743 = bitcast i8* %11742 to float*
  %11744 = load float, float* %11743, align 4
  %11745 = insertelement <4 x float> zeroinitializer, float %11744, i32 0
  %11746 = insertelement <4 x float> %11745, float 0.000000e+00, i32 1
  %11747 = insertelement <4 x float> %11746, float 0.000000e+00, i32 2
  %11748 = insertelement <4 x float> %11747, float 0.000000e+00, i32 3
  %11749 = getelementptr inbounds float, float* %2, i64 9
  %11750 = load float, float* %11749, align 4
  %11751 = insertelement <4 x float> zeroinitializer, float %11750, i32 0
  %11752 = insertelement <4 x float> %11751, float 0.000000e+00, i32 1
  %11753 = insertelement <4 x float> %11752, float 0.000000e+00, i32 2
  %11754 = insertelement <4 x float> %11753, float 0.000000e+00, i32 3
  %11755 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11748, <4 x float> %11754, <4 x float> %11740)
  %11756 = extractelement <4 x float> %11755, i32 0
  %11757 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11758 = getelementptr inbounds i8, i8* %11757, i64 36
  %11759 = bitcast i8* %11758 to float*
  store float %11756, float* %11759, align 4
  %11760 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11761 = getelementptr inbounds i8, i8* %11760, i64 32
  %11762 = bitcast i8* %11761 to float*
  %11763 = load float, float* %11762, align 4
  %11764 = insertelement <4 x float> zeroinitializer, float %11763, i32 0
  %11765 = insertelement <4 x float> %11764, float 1.000000e+00, i32 1
  %11766 = insertelement <4 x float> %11765, float 1.000000e+00, i32 2
  %11767 = insertelement <4 x float> %11766, float 1.000000e+00, i32 3
  %11768 = getelementptr inbounds float, float* %2, i64 1
  %11769 = load float, float* %11768, align 4
  %11770 = insertelement <4 x float> zeroinitializer, float %11769, i32 0
  %11771 = insertelement <4 x float> %11770, float 0.000000e+00, i32 1
  %11772 = insertelement <4 x float> %11771, float 0.000000e+00, i32 2
  %11773 = insertelement <4 x float> %11772, float 0.000000e+00, i32 3
  %11774 = fmul <4 x float> %11767, %11773
  %11775 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11776 = getelementptr inbounds i8, i8* %11775, i64 36
  %11777 = bitcast i8* %11776 to float*
  %11778 = load float, float* %11777, align 4
  %11779 = insertelement <4 x float> zeroinitializer, float %11778, i32 0
  %11780 = insertelement <4 x float> %11779, float 1.000000e+00, i32 1
  %11781 = insertelement <4 x float> %11780, float 1.000000e+00, i32 2
  %11782 = insertelement <4 x float> %11781, float 1.000000e+00, i32 3
  %11783 = getelementptr inbounds float, float* %2, i64 5
  %11784 = load float, float* %11783, align 4
  %11785 = insertelement <4 x float> zeroinitializer, float %11784, i32 0
  %11786 = insertelement <4 x float> %11785, float 0.000000e+00, i32 1
  %11787 = insertelement <4 x float> %11786, float 0.000000e+00, i32 2
  %11788 = insertelement <4 x float> %11787, float 0.000000e+00, i32 3
  %11789 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11782, <4 x float> %11788, <4 x float> %11774)
  %11790 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11791 = getelementptr inbounds i8, i8* %11790, i64 40
  %11792 = bitcast i8* %11791 to float*
  %11793 = load float, float* %11792, align 4
  %11794 = insertelement <4 x float> zeroinitializer, float %11793, i32 0
  %11795 = insertelement <4 x float> %11794, float 1.000000e+00, i32 1
  %11796 = insertelement <4 x float> %11795, float 1.000000e+00, i32 2
  %11797 = insertelement <4 x float> %11796, float 1.000000e+00, i32 3
  %11798 = getelementptr inbounds float, float* %2, i64 9
  %11799 = load float, float* %11798, align 4
  %11800 = insertelement <4 x float> zeroinitializer, float %11799, i32 0
  %11801 = insertelement <4 x float> %11800, float 0.000000e+00, i32 1
  %11802 = insertelement <4 x float> %11801, float 0.000000e+00, i32 2
  %11803 = insertelement <4 x float> %11802, float 0.000000e+00, i32 3
  %11804 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11797, <4 x float> %11803, <4 x float> %11789)
  %11805 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11806 = getelementptr inbounds i8, i8* %11805, i64 44
  %11807 = bitcast i8* %11806 to float*
  %11808 = load float, float* %11807, align 4
  %11809 = insertelement <4 x float> zeroinitializer, float %11808, i32 0
  %11810 = insertelement <4 x float> %11809, float 0.000000e+00, i32 1
  %11811 = insertelement <4 x float> %11810, float 0.000000e+00, i32 2
  %11812 = insertelement <4 x float> %11811, float 0.000000e+00, i32 3
  %11813 = getelementptr inbounds float, float* %2, i64 13
  %11814 = load float, float* %11813, align 4
  %11815 = insertelement <4 x float> zeroinitializer, float %11814, i32 0
  %11816 = insertelement <4 x float> %11815, float 0.000000e+00, i32 1
  %11817 = insertelement <4 x float> %11816, float 0.000000e+00, i32 2
  %11818 = insertelement <4 x float> %11817, float 0.000000e+00, i32 3
  %11819 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11812, <4 x float> %11818, <4 x float> %11804)
  %11820 = extractelement <4 x float> %11819, i32 0
  %11821 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11822 = getelementptr inbounds i8, i8* %11821, i64 36
  %11823 = bitcast i8* %11822 to float*
  store float %11820, float* %11823, align 4
  %11824 = extractelement <4 x float> %11819, i32 1
  %11825 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11826 = getelementptr inbounds i8, i8* %11825, i64 40
  %11827 = bitcast i8* %11826 to float*
  store float %11824, float* %11827, align 4
  %11828 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11829 = getelementptr inbounds i8, i8* %11828, i64 32
  %11830 = bitcast i8* %11829 to float*
  %11831 = load float, float* %11830, align 4
  %11832 = insertelement <4 x float> zeroinitializer, float %11831, i32 0
  %11833 = insertelement <4 x float> %11832, float 0.000000e+00, i32 1
  %11834 = insertelement <4 x float> %11833, float 0.000000e+00, i32 2
  %11835 = insertelement <4 x float> %11834, float 0.000000e+00, i32 3
  %11836 = getelementptr inbounds float, float* %2, i64 2
  %11837 = load float, float* %11836, align 4
  %11838 = insertelement <4 x float> zeroinitializer, float %11837, i32 0
  %11839 = insertelement <4 x float> %11838, float 0.000000e+00, i32 1
  %11840 = insertelement <4 x float> %11839, float 0.000000e+00, i32 2
  %11841 = insertelement <4 x float> %11840, float 0.000000e+00, i32 3
  %11842 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11835, <4 x float> %11841, <4 x float> zeroinitializer)
  %11843 = extractelement <4 x float> %11842, i32 0
  %11844 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11845 = getelementptr inbounds i8, i8* %11844, i64 40
  %11846 = bitcast i8* %11845 to float*
  store float %11843, float* %11846, align 4
  %11847 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11848 = getelementptr inbounds i8, i8* %11847, i64 32
  %11849 = bitcast i8* %11848 to float*
  %11850 = load float, float* %11849, align 4
  %11851 = insertelement <4 x float> zeroinitializer, float %11850, i32 0
  %11852 = insertelement <4 x float> %11851, float 1.000000e+00, i32 1
  %11853 = insertelement <4 x float> %11852, float 1.000000e+00, i32 2
  %11854 = insertelement <4 x float> %11853, float 1.000000e+00, i32 3
  %11855 = getelementptr inbounds float, float* %2, i64 2
  %11856 = load float, float* %11855, align 4
  %11857 = insertelement <4 x float> zeroinitializer, float %11856, i32 0
  %11858 = insertelement <4 x float> %11857, float 0.000000e+00, i32 1
  %11859 = insertelement <4 x float> %11858, float 0.000000e+00, i32 2
  %11860 = insertelement <4 x float> %11859, float 0.000000e+00, i32 3
  %11861 = fmul <4 x float> %11854, %11860
  %11862 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11863 = getelementptr inbounds i8, i8* %11862, i64 36
  %11864 = bitcast i8* %11863 to float*
  %11865 = load float, float* %11864, align 4
  %11866 = insertelement <4 x float> zeroinitializer, float %11865, i32 0
  %11867 = insertelement <4 x float> %11866, float 0.000000e+00, i32 1
  %11868 = insertelement <4 x float> %11867, float 0.000000e+00, i32 2
  %11869 = insertelement <4 x float> %11868, float 0.000000e+00, i32 3
  %11870 = getelementptr inbounds float, float* %2, i64 6
  %11871 = load float, float* %11870, align 4
  %11872 = insertelement <4 x float> zeroinitializer, float %11871, i32 0
  %11873 = insertelement <4 x float> %11872, float 0.000000e+00, i32 1
  %11874 = insertelement <4 x float> %11873, float 0.000000e+00, i32 2
  %11875 = insertelement <4 x float> %11874, float 0.000000e+00, i32 3
  %11876 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11869, <4 x float> %11875, <4 x float> %11861)
  %11877 = extractelement <4 x float> %11876, i32 0
  %11878 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11879 = getelementptr inbounds i8, i8* %11878, i64 40
  %11880 = bitcast i8* %11879 to float*
  store float %11877, float* %11880, align 4
  %11881 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11882 = getelementptr inbounds i8, i8* %11881, i64 32
  %11883 = bitcast i8* %11882 to float*
  %11884 = load float, float* %11883, align 4
  %11885 = insertelement <4 x float> zeroinitializer, float %11884, i32 0
  %11886 = insertelement <4 x float> %11885, float 1.000000e+00, i32 1
  %11887 = insertelement <4 x float> %11886, float 1.000000e+00, i32 2
  %11888 = insertelement <4 x float> %11887, float 1.000000e+00, i32 3
  %11889 = getelementptr inbounds float, float* %2, i64 2
  %11890 = load float, float* %11889, align 4
  %11891 = insertelement <4 x float> zeroinitializer, float %11890, i32 0
  %11892 = insertelement <4 x float> %11891, float 0.000000e+00, i32 1
  %11893 = insertelement <4 x float> %11892, float 0.000000e+00, i32 2
  %11894 = insertelement <4 x float> %11893, float 0.000000e+00, i32 3
  %11895 = fmul <4 x float> %11888, %11894
  %11896 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11897 = getelementptr inbounds i8, i8* %11896, i64 36
  %11898 = bitcast i8* %11897 to float*
  %11899 = load float, float* %11898, align 4
  %11900 = insertelement <4 x float> zeroinitializer, float %11899, i32 0
  %11901 = insertelement <4 x float> %11900, float 1.000000e+00, i32 1
  %11902 = insertelement <4 x float> %11901, float 1.000000e+00, i32 2
  %11903 = insertelement <4 x float> %11902, float 1.000000e+00, i32 3
  %11904 = getelementptr inbounds float, float* %2, i64 6
  %11905 = load float, float* %11904, align 4
  %11906 = insertelement <4 x float> zeroinitializer, float %11905, i32 0
  %11907 = insertelement <4 x float> %11906, float 0.000000e+00, i32 1
  %11908 = insertelement <4 x float> %11907, float 0.000000e+00, i32 2
  %11909 = insertelement <4 x float> %11908, float 0.000000e+00, i32 3
  %11910 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11903, <4 x float> %11909, <4 x float> %11895)
  %11911 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11912 = getelementptr inbounds i8, i8* %11911, i64 40
  %11913 = bitcast i8* %11912 to float*
  %11914 = load float, float* %11913, align 4
  %11915 = insertelement <4 x float> zeroinitializer, float %11914, i32 0
  %11916 = insertelement <4 x float> %11915, float 0.000000e+00, i32 1
  %11917 = insertelement <4 x float> %11916, float 0.000000e+00, i32 2
  %11918 = insertelement <4 x float> %11917, float 0.000000e+00, i32 3
  %11919 = getelementptr inbounds float, float* %2, i64 10
  %11920 = load float, float* %11919, align 4
  %11921 = insertelement <4 x float> zeroinitializer, float %11920, i32 0
  %11922 = insertelement <4 x float> %11921, float 0.000000e+00, i32 1
  %11923 = insertelement <4 x float> %11922, float 0.000000e+00, i32 2
  %11924 = insertelement <4 x float> %11923, float 0.000000e+00, i32 3
  %11925 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11918, <4 x float> %11924, <4 x float> %11910)
  %11926 = extractelement <4 x float> %11925, i32 0
  %11927 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11928 = getelementptr inbounds i8, i8* %11927, i64 40
  %11929 = bitcast i8* %11928 to float*
  store float %11926, float* %11929, align 4
  %11930 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11931 = getelementptr inbounds i8, i8* %11930, i64 32
  %11932 = bitcast i8* %11931 to float*
  %11933 = load float, float* %11932, align 4
  %11934 = insertelement <4 x float> zeroinitializer, float %11933, i32 0
  %11935 = insertelement <4 x float> %11934, float 1.000000e+00, i32 1
  %11936 = insertelement <4 x float> %11935, float 1.000000e+00, i32 2
  %11937 = insertelement <4 x float> %11936, float 1.000000e+00, i32 3
  %11938 = getelementptr inbounds float, float* %2, i64 2
  %11939 = load float, float* %11938, align 4
  %11940 = insertelement <4 x float> zeroinitializer, float %11939, i32 0
  %11941 = insertelement <4 x float> %11940, float 0.000000e+00, i32 1
  %11942 = insertelement <4 x float> %11941, float 0.000000e+00, i32 2
  %11943 = insertelement <4 x float> %11942, float 0.000000e+00, i32 3
  %11944 = fmul <4 x float> %11937, %11943
  %11945 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11946 = getelementptr inbounds i8, i8* %11945, i64 36
  %11947 = bitcast i8* %11946 to float*
  %11948 = load float, float* %11947, align 4
  %11949 = insertelement <4 x float> zeroinitializer, float %11948, i32 0
  %11950 = insertelement <4 x float> %11949, float 1.000000e+00, i32 1
  %11951 = insertelement <4 x float> %11950, float 1.000000e+00, i32 2
  %11952 = insertelement <4 x float> %11951, float 1.000000e+00, i32 3
  %11953 = getelementptr inbounds float, float* %2, i64 6
  %11954 = load float, float* %11953, align 4
  %11955 = insertelement <4 x float> zeroinitializer, float %11954, i32 0
  %11956 = insertelement <4 x float> %11955, float 0.000000e+00, i32 1
  %11957 = insertelement <4 x float> %11956, float 0.000000e+00, i32 2
  %11958 = insertelement <4 x float> %11957, float 0.000000e+00, i32 3
  %11959 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11952, <4 x float> %11958, <4 x float> %11944)
  %11960 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11961 = getelementptr inbounds i8, i8* %11960, i64 40
  %11962 = bitcast i8* %11961 to float*
  %11963 = load float, float* %11962, align 4
  %11964 = insertelement <4 x float> zeroinitializer, float %11963, i32 0
  %11965 = insertelement <4 x float> %11964, float 1.000000e+00, i32 1
  %11966 = insertelement <4 x float> %11965, float 1.000000e+00, i32 2
  %11967 = insertelement <4 x float> %11966, float 1.000000e+00, i32 3
  %11968 = getelementptr inbounds float, float* %2, i64 10
  %11969 = load float, float* %11968, align 4
  %11970 = insertelement <4 x float> zeroinitializer, float %11969, i32 0
  %11971 = insertelement <4 x float> %11970, float 0.000000e+00, i32 1
  %11972 = insertelement <4 x float> %11971, float 0.000000e+00, i32 2
  %11973 = insertelement <4 x float> %11972, float 0.000000e+00, i32 3
  %11974 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11967, <4 x float> %11973, <4 x float> %11959)
  %11975 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11976 = getelementptr inbounds i8, i8* %11975, i64 44
  %11977 = bitcast i8* %11976 to float*
  %11978 = load float, float* %11977, align 4
  %11979 = insertelement <4 x float> zeroinitializer, float %11978, i32 0
  %11980 = insertelement <4 x float> %11979, float 0.000000e+00, i32 1
  %11981 = insertelement <4 x float> %11980, float 0.000000e+00, i32 2
  %11982 = insertelement <4 x float> %11981, float 0.000000e+00, i32 3
  %11983 = getelementptr inbounds float, float* %2, i64 14
  %11984 = load float, float* %11983, align 4
  %11985 = insertelement <4 x float> zeroinitializer, float %11984, i32 0
  %11986 = insertelement <4 x float> %11985, float 0.000000e+00, i32 1
  %11987 = insertelement <4 x float> %11986, float 0.000000e+00, i32 2
  %11988 = insertelement <4 x float> %11987, float 0.000000e+00, i32 3
  %11989 = call <4 x float> @llvm.fma.v4f32(<4 x float> %11982, <4 x float> %11988, <4 x float> %11974)
  %11990 = extractelement <4 x float> %11989, i32 0
  %11991 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11992 = getelementptr inbounds i8, i8* %11991, i64 40
  %11993 = bitcast i8* %11992 to float*
  store float %11990, float* %11993, align 4
  %11994 = extractelement <4 x float> %11989, i32 1
  %11995 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11996 = getelementptr inbounds i8, i8* %11995, i64 44
  %11997 = bitcast i8* %11996 to float*
  store float %11994, float* %11997, align 4
  %11998 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11999 = getelementptr inbounds i8, i8* %11998, i64 32
  %12000 = bitcast i8* %11999 to float*
  %12001 = load float, float* %12000, align 4
  %12002 = insertelement <4 x float> zeroinitializer, float %12001, i32 0
  %12003 = insertelement <4 x float> %12002, float 0.000000e+00, i32 1
  %12004 = insertelement <4 x float> %12003, float 0.000000e+00, i32 2
  %12005 = insertelement <4 x float> %12004, float 0.000000e+00, i32 3
  %12006 = getelementptr inbounds float, float* %2, i64 3
  %12007 = load float, float* %12006, align 4
  %12008 = insertelement <4 x float> zeroinitializer, float %12007, i32 0
  %12009 = insertelement <4 x float> %12008, float 0.000000e+00, i32 1
  %12010 = insertelement <4 x float> %12009, float 0.000000e+00, i32 2
  %12011 = insertelement <4 x float> %12010, float 0.000000e+00, i32 3
  %12012 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12005, <4 x float> %12011, <4 x float> zeroinitializer)
  %12013 = extractelement <4 x float> %12012, i32 0
  %12014 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12015 = getelementptr inbounds i8, i8* %12014, i64 44
  %12016 = bitcast i8* %12015 to float*
  store float %12013, float* %12016, align 4
  %12017 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12018 = getelementptr inbounds i8, i8* %12017, i64 32
  %12019 = bitcast i8* %12018 to float*
  %12020 = load float, float* %12019, align 4
  %12021 = insertelement <4 x float> zeroinitializer, float %12020, i32 0
  %12022 = insertelement <4 x float> %12021, float 1.000000e+00, i32 1
  %12023 = insertelement <4 x float> %12022, float 1.000000e+00, i32 2
  %12024 = insertelement <4 x float> %12023, float 1.000000e+00, i32 3
  %12025 = getelementptr inbounds float, float* %2, i64 3
  %12026 = load float, float* %12025, align 4
  %12027 = insertelement <4 x float> zeroinitializer, float %12026, i32 0
  %12028 = insertelement <4 x float> %12027, float 0.000000e+00, i32 1
  %12029 = insertelement <4 x float> %12028, float 0.000000e+00, i32 2
  %12030 = insertelement <4 x float> %12029, float 0.000000e+00, i32 3
  %12031 = fmul <4 x float> %12024, %12030
  %12032 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12033 = getelementptr inbounds i8, i8* %12032, i64 36
  %12034 = bitcast i8* %12033 to float*
  %12035 = load float, float* %12034, align 4
  %12036 = insertelement <4 x float> zeroinitializer, float %12035, i32 0
  %12037 = insertelement <4 x float> %12036, float 0.000000e+00, i32 1
  %12038 = insertelement <4 x float> %12037, float 0.000000e+00, i32 2
  %12039 = insertelement <4 x float> %12038, float 0.000000e+00, i32 3
  %12040 = getelementptr inbounds float, float* %2, i64 7
  %12041 = load float, float* %12040, align 4
  %12042 = insertelement <4 x float> zeroinitializer, float %12041, i32 0
  %12043 = insertelement <4 x float> %12042, float 0.000000e+00, i32 1
  %12044 = insertelement <4 x float> %12043, float 0.000000e+00, i32 2
  %12045 = insertelement <4 x float> %12044, float 0.000000e+00, i32 3
  %12046 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12039, <4 x float> %12045, <4 x float> %12031)
  %12047 = extractelement <4 x float> %12046, i32 0
  %12048 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12049 = getelementptr inbounds i8, i8* %12048, i64 44
  %12050 = bitcast i8* %12049 to float*
  store float %12047, float* %12050, align 4
  %12051 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12052 = getelementptr inbounds i8, i8* %12051, i64 32
  %12053 = bitcast i8* %12052 to float*
  %12054 = load float, float* %12053, align 4
  %12055 = insertelement <4 x float> zeroinitializer, float %12054, i32 0
  %12056 = insertelement <4 x float> %12055, float 1.000000e+00, i32 1
  %12057 = insertelement <4 x float> %12056, float 1.000000e+00, i32 2
  %12058 = insertelement <4 x float> %12057, float 1.000000e+00, i32 3
  %12059 = getelementptr inbounds float, float* %2, i64 3
  %12060 = load float, float* %12059, align 4
  %12061 = insertelement <4 x float> zeroinitializer, float %12060, i32 0
  %12062 = insertelement <4 x float> %12061, float 0.000000e+00, i32 1
  %12063 = insertelement <4 x float> %12062, float 0.000000e+00, i32 2
  %12064 = insertelement <4 x float> %12063, float 0.000000e+00, i32 3
  %12065 = fmul <4 x float> %12058, %12064
  %12066 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12067 = getelementptr inbounds i8, i8* %12066, i64 36
  %12068 = bitcast i8* %12067 to float*
  %12069 = load float, float* %12068, align 4
  %12070 = insertelement <4 x float> zeroinitializer, float %12069, i32 0
  %12071 = insertelement <4 x float> %12070, float 1.000000e+00, i32 1
  %12072 = insertelement <4 x float> %12071, float 1.000000e+00, i32 2
  %12073 = insertelement <4 x float> %12072, float 1.000000e+00, i32 3
  %12074 = getelementptr inbounds float, float* %2, i64 7
  %12075 = load float, float* %12074, align 4
  %12076 = insertelement <4 x float> zeroinitializer, float %12075, i32 0
  %12077 = insertelement <4 x float> %12076, float 0.000000e+00, i32 1
  %12078 = insertelement <4 x float> %12077, float 0.000000e+00, i32 2
  %12079 = insertelement <4 x float> %12078, float 0.000000e+00, i32 3
  %12080 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12073, <4 x float> %12079, <4 x float> %12065)
  %12081 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12082 = getelementptr inbounds i8, i8* %12081, i64 40
  %12083 = bitcast i8* %12082 to float*
  %12084 = load float, float* %12083, align 4
  %12085 = insertelement <4 x float> zeroinitializer, float %12084, i32 0
  %12086 = insertelement <4 x float> %12085, float 0.000000e+00, i32 1
  %12087 = insertelement <4 x float> %12086, float 0.000000e+00, i32 2
  %12088 = insertelement <4 x float> %12087, float 0.000000e+00, i32 3
  %12089 = getelementptr inbounds float, float* %2, i64 11
  %12090 = load float, float* %12089, align 4
  %12091 = insertelement <4 x float> zeroinitializer, float %12090, i32 0
  %12092 = insertelement <4 x float> %12091, float 0.000000e+00, i32 1
  %12093 = insertelement <4 x float> %12092, float 0.000000e+00, i32 2
  %12094 = insertelement <4 x float> %12093, float 0.000000e+00, i32 3
  %12095 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12088, <4 x float> %12094, <4 x float> %12080)
  %12096 = extractelement <4 x float> %12095, i32 0
  %12097 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12098 = getelementptr inbounds i8, i8* %12097, i64 44
  %12099 = bitcast i8* %12098 to float*
  store float %12096, float* %12099, align 4
  %12100 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12101 = getelementptr inbounds i8, i8* %12100, i64 32
  %12102 = bitcast i8* %12101 to float*
  %12103 = load float, float* %12102, align 4
  %12104 = insertelement <4 x float> zeroinitializer, float %12103, i32 0
  %12105 = insertelement <4 x float> %12104, float 1.000000e+00, i32 1
  %12106 = insertelement <4 x float> %12105, float 1.000000e+00, i32 2
  %12107 = insertelement <4 x float> %12106, float 1.000000e+00, i32 3
  %12108 = getelementptr inbounds float, float* %2, i64 3
  %12109 = load float, float* %12108, align 4
  %12110 = insertelement <4 x float> zeroinitializer, float %12109, i32 0
  %12111 = insertelement <4 x float> %12110, float 0.000000e+00, i32 1
  %12112 = insertelement <4 x float> %12111, float 0.000000e+00, i32 2
  %12113 = insertelement <4 x float> %12112, float 0.000000e+00, i32 3
  %12114 = fmul <4 x float> %12107, %12113
  %12115 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12116 = getelementptr inbounds i8, i8* %12115, i64 36
  %12117 = bitcast i8* %12116 to float*
  %12118 = load float, float* %12117, align 4
  %12119 = insertelement <4 x float> zeroinitializer, float %12118, i32 0
  %12120 = insertelement <4 x float> %12119, float 1.000000e+00, i32 1
  %12121 = insertelement <4 x float> %12120, float 1.000000e+00, i32 2
  %12122 = insertelement <4 x float> %12121, float 1.000000e+00, i32 3
  %12123 = getelementptr inbounds float, float* %2, i64 7
  %12124 = load float, float* %12123, align 4
  %12125 = insertelement <4 x float> zeroinitializer, float %12124, i32 0
  %12126 = insertelement <4 x float> %12125, float 0.000000e+00, i32 1
  %12127 = insertelement <4 x float> %12126, float 0.000000e+00, i32 2
  %12128 = insertelement <4 x float> %12127, float 0.000000e+00, i32 3
  %12129 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12122, <4 x float> %12128, <4 x float> %12114)
  %12130 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12131 = getelementptr inbounds i8, i8* %12130, i64 40
  %12132 = bitcast i8* %12131 to float*
  %12133 = load float, float* %12132, align 4
  %12134 = insertelement <4 x float> zeroinitializer, float %12133, i32 0
  %12135 = insertelement <4 x float> %12134, float 1.000000e+00, i32 1
  %12136 = insertelement <4 x float> %12135, float 1.000000e+00, i32 2
  %12137 = insertelement <4 x float> %12136, float 1.000000e+00, i32 3
  %12138 = getelementptr inbounds float, float* %2, i64 11
  %12139 = load float, float* %12138, align 4
  %12140 = insertelement <4 x float> zeroinitializer, float %12139, i32 0
  %12141 = insertelement <4 x float> %12140, float 0.000000e+00, i32 1
  %12142 = insertelement <4 x float> %12141, float 0.000000e+00, i32 2
  %12143 = insertelement <4 x float> %12142, float 0.000000e+00, i32 3
  %12144 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12137, <4 x float> %12143, <4 x float> %12129)
  %12145 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12146 = getelementptr inbounds i8, i8* %12145, i64 44
  %12147 = bitcast i8* %12146 to float*
  %12148 = load float, float* %12147, align 4
  %12149 = insertelement <4 x float> zeroinitializer, float %12148, i32 0
  %12150 = insertelement <4 x float> %12149, float 0.000000e+00, i32 1
  %12151 = insertelement <4 x float> %12150, float 0.000000e+00, i32 2
  %12152 = insertelement <4 x float> %12151, float 0.000000e+00, i32 3
  %12153 = getelementptr inbounds float, float* %2, i64 15
  %12154 = load float, float* %12153, align 4
  %12155 = insertelement <4 x float> zeroinitializer, float %12154, i32 0
  %12156 = insertelement <4 x float> %12155, float 0.000000e+00, i32 1
  %12157 = insertelement <4 x float> %12156, float 0.000000e+00, i32 2
  %12158 = insertelement <4 x float> %12157, float 0.000000e+00, i32 3
  %12159 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12152, <4 x float> %12158, <4 x float> %12144)
  %12160 = extractelement <4 x float> %12159, i32 0
  %12161 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12162 = getelementptr inbounds i8, i8* %12161, i64 44
  %12163 = bitcast i8* %12162 to float*
  store float %12160, float* %12163, align 4
  %12164 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12165 = getelementptr inbounds i8, i8* %12164, i64 48
  %12166 = bitcast i8* %12165 to float*
  %12167 = load float, float* %12166, align 4
  %12168 = insertelement <4 x float> zeroinitializer, float %12167, i32 0
  %12169 = insertelement <4 x float> %12168, float 0.000000e+00, i32 1
  %12170 = insertelement <4 x float> %12169, float 0.000000e+00, i32 2
  %12171 = insertelement <4 x float> %12170, float 0.000000e+00, i32 3
  %12172 = load float, float* %2, align 4
  %12173 = insertelement <4 x float> zeroinitializer, float %12172, i32 0
  %12174 = insertelement <4 x float> %12173, float 0.000000e+00, i32 1
  %12175 = insertelement <4 x float> %12174, float 0.000000e+00, i32 2
  %12176 = insertelement <4 x float> %12175, float 0.000000e+00, i32 3
  %12177 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12171, <4 x float> %12176, <4 x float> zeroinitializer)
  %12178 = extractelement <4 x float> %12177, i32 0
  %12179 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12180 = getelementptr inbounds i8, i8* %12179, i64 48
  %12181 = bitcast i8* %12180 to float*
  store float %12178, float* %12181, align 4
  %12182 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12183 = getelementptr inbounds i8, i8* %12182, i64 48
  %12184 = bitcast i8* %12183 to float*
  %12185 = load float, float* %12184, align 4
  %12186 = insertelement <4 x float> zeroinitializer, float %12185, i32 0
  %12187 = insertelement <4 x float> %12186, float 1.000000e+00, i32 1
  %12188 = insertelement <4 x float> %12187, float 1.000000e+00, i32 2
  %12189 = insertelement <4 x float> %12188, float 1.000000e+00, i32 3
  %12190 = load float, float* %2, align 4
  %12191 = insertelement <4 x float> zeroinitializer, float %12190, i32 0
  %12192 = insertelement <4 x float> %12191, float 0.000000e+00, i32 1
  %12193 = insertelement <4 x float> %12192, float 0.000000e+00, i32 2
  %12194 = insertelement <4 x float> %12193, float 0.000000e+00, i32 3
  %12195 = fmul <4 x float> %12189, %12194
  %12196 = fadd <4 x float> %12195, zeroinitializer
  %12197 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12198 = getelementptr inbounds i8, i8* %12197, i64 52
  %12199 = bitcast i8* %12198 to float*
  %12200 = load float, float* %12199, align 4
  %12201 = insertelement <4 x float> zeroinitializer, float %12200, i32 0
  %12202 = insertelement <4 x float> %12201, float 0.000000e+00, i32 1
  %12203 = insertelement <4 x float> %12202, float 0.000000e+00, i32 2
  %12204 = insertelement <4 x float> %12203, float 0.000000e+00, i32 3
  %12205 = getelementptr inbounds float, float* %2, i64 4
  %12206 = load float, float* %12205, align 4
  %12207 = insertelement <4 x float> zeroinitializer, float %12206, i32 0
  %12208 = insertelement <4 x float> %12207, float 0.000000e+00, i32 1
  %12209 = insertelement <4 x float> %12208, float 0.000000e+00, i32 2
  %12210 = insertelement <4 x float> %12209, float 0.000000e+00, i32 3
  %12211 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12204, <4 x float> %12210, <4 x float> %12196)
  %12212 = extractelement <4 x float> %12211, i32 0
  %12213 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12214 = getelementptr inbounds i8, i8* %12213, i64 48
  %12215 = bitcast i8* %12214 to float*
  store float %12212, float* %12215, align 4
  %12216 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12217 = getelementptr inbounds i8, i8* %12216, i64 48
  %12218 = bitcast i8* %12217 to float*
  %12219 = load float, float* %12218, align 4
  %12220 = insertelement <4 x float> zeroinitializer, float %12219, i32 0
  %12221 = insertelement <4 x float> %12220, float 1.000000e+00, i32 1
  %12222 = insertelement <4 x float> %12221, float 1.000000e+00, i32 2
  %12223 = insertelement <4 x float> %12222, float 1.000000e+00, i32 3
  %12224 = load float, float* %2, align 4
  %12225 = insertelement <4 x float> zeroinitializer, float %12224, i32 0
  %12226 = insertelement <4 x float> %12225, float 0.000000e+00, i32 1
  %12227 = insertelement <4 x float> %12226, float 0.000000e+00, i32 2
  %12228 = insertelement <4 x float> %12227, float 0.000000e+00, i32 3
  %12229 = fmul <4 x float> %12223, %12228
  %12230 = fadd <4 x float> %12229, zeroinitializer
  %12231 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12232 = getelementptr inbounds i8, i8* %12231, i64 52
  %12233 = bitcast i8* %12232 to float*
  %12234 = load float, float* %12233, align 4
  %12235 = insertelement <4 x float> zeroinitializer, float %12234, i32 0
  %12236 = insertelement <4 x float> %12235, float 1.000000e+00, i32 1
  %12237 = insertelement <4 x float> %12236, float 1.000000e+00, i32 2
  %12238 = insertelement <4 x float> %12237, float 1.000000e+00, i32 3
  %12239 = getelementptr inbounds float, float* %2, i64 4
  %12240 = load float, float* %12239, align 4
  %12241 = insertelement <4 x float> zeroinitializer, float %12240, i32 0
  %12242 = insertelement <4 x float> %12241, float 0.000000e+00, i32 1
  %12243 = insertelement <4 x float> %12242, float 0.000000e+00, i32 2
  %12244 = insertelement <4 x float> %12243, float 0.000000e+00, i32 3
  %12245 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12238, <4 x float> %12244, <4 x float> %12230)
  %12246 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12247 = getelementptr inbounds i8, i8* %12246, i64 56
  %12248 = bitcast i8* %12247 to float*
  %12249 = load float, float* %12248, align 4
  %12250 = insertelement <4 x float> zeroinitializer, float %12249, i32 0
  %12251 = insertelement <4 x float> %12250, float 0.000000e+00, i32 1
  %12252 = insertelement <4 x float> %12251, float 0.000000e+00, i32 2
  %12253 = insertelement <4 x float> %12252, float 0.000000e+00, i32 3
  %12254 = getelementptr inbounds float, float* %2, i64 8
  %12255 = load float, float* %12254, align 4
  %12256 = insertelement <4 x float> zeroinitializer, float %12255, i32 0
  %12257 = insertelement <4 x float> %12256, float 0.000000e+00, i32 1
  %12258 = insertelement <4 x float> %12257, float 0.000000e+00, i32 2
  %12259 = insertelement <4 x float> %12258, float 0.000000e+00, i32 3
  %12260 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12253, <4 x float> %12259, <4 x float> %12245)
  %12261 = extractelement <4 x float> %12260, i32 0
  %12262 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12263 = getelementptr inbounds i8, i8* %12262, i64 48
  %12264 = bitcast i8* %12263 to float*
  store float %12261, float* %12264, align 4
  %12265 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12266 = getelementptr inbounds i8, i8* %12265, i64 48
  %12267 = bitcast i8* %12266 to float*
  %12268 = load float, float* %12267, align 4
  %12269 = insertelement <4 x float> zeroinitializer, float %12268, i32 0
  %12270 = insertelement <4 x float> %12269, float 1.000000e+00, i32 1
  %12271 = insertelement <4 x float> %12270, float 1.000000e+00, i32 2
  %12272 = insertelement <4 x float> %12271, float 1.000000e+00, i32 3
  %12273 = load float, float* %2, align 4
  %12274 = insertelement <4 x float> zeroinitializer, float %12273, i32 0
  %12275 = insertelement <4 x float> %12274, float 0.000000e+00, i32 1
  %12276 = insertelement <4 x float> %12275, float 0.000000e+00, i32 2
  %12277 = insertelement <4 x float> %12276, float 0.000000e+00, i32 3
  %12278 = fmul <4 x float> %12272, %12277
  %12279 = fadd <4 x float> %12278, zeroinitializer
  %12280 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12281 = getelementptr inbounds i8, i8* %12280, i64 52
  %12282 = bitcast i8* %12281 to float*
  %12283 = load float, float* %12282, align 4
  %12284 = insertelement <4 x float> zeroinitializer, float %12283, i32 0
  %12285 = insertelement <4 x float> %12284, float 1.000000e+00, i32 1
  %12286 = insertelement <4 x float> %12285, float 1.000000e+00, i32 2
  %12287 = insertelement <4 x float> %12286, float 1.000000e+00, i32 3
  %12288 = getelementptr inbounds float, float* %2, i64 4
  %12289 = load float, float* %12288, align 4
  %12290 = insertelement <4 x float> zeroinitializer, float %12289, i32 0
  %12291 = insertelement <4 x float> %12290, float 0.000000e+00, i32 1
  %12292 = insertelement <4 x float> %12291, float 0.000000e+00, i32 2
  %12293 = insertelement <4 x float> %12292, float 0.000000e+00, i32 3
  %12294 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12287, <4 x float> %12293, <4 x float> %12279)
  %12295 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12296 = getelementptr inbounds i8, i8* %12295, i64 56
  %12297 = bitcast i8* %12296 to float*
  %12298 = load float, float* %12297, align 4
  %12299 = insertelement <4 x float> zeroinitializer, float %12298, i32 0
  %12300 = insertelement <4 x float> %12299, float 1.000000e+00, i32 1
  %12301 = insertelement <4 x float> %12300, float 1.000000e+00, i32 2
  %12302 = insertelement <4 x float> %12301, float 1.000000e+00, i32 3
  %12303 = getelementptr inbounds float, float* %2, i64 8
  %12304 = load float, float* %12303, align 4
  %12305 = insertelement <4 x float> zeroinitializer, float %12304, i32 0
  %12306 = insertelement <4 x float> %12305, float 0.000000e+00, i32 1
  %12307 = insertelement <4 x float> %12306, float 0.000000e+00, i32 2
  %12308 = insertelement <4 x float> %12307, float 0.000000e+00, i32 3
  %12309 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12302, <4 x float> %12308, <4 x float> %12294)
  %12310 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12311 = getelementptr inbounds i8, i8* %12310, i64 60
  %12312 = bitcast i8* %12311 to float*
  %12313 = load float, float* %12312, align 4
  %12314 = insertelement <4 x float> zeroinitializer, float %12313, i32 0
  %12315 = insertelement <4 x float> %12314, float 0.000000e+00, i32 1
  %12316 = insertelement <4 x float> %12315, float 0.000000e+00, i32 2
  %12317 = insertelement <4 x float> %12316, float 0.000000e+00, i32 3
  %12318 = getelementptr inbounds float, float* %2, i64 12
  %12319 = load float, float* %12318, align 4
  %12320 = insertelement <4 x float> zeroinitializer, float %12319, i32 0
  %12321 = insertelement <4 x float> %12320, float 0.000000e+00, i32 1
  %12322 = insertelement <4 x float> %12321, float 0.000000e+00, i32 2
  %12323 = insertelement <4 x float> %12322, float 0.000000e+00, i32 3
  %12324 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12317, <4 x float> %12323, <4 x float> %12309)
  %12325 = extractelement <4 x float> %12324, i32 0
  %12326 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12327 = getelementptr inbounds i8, i8* %12326, i64 48
  %12328 = bitcast i8* %12327 to float*
  store float %12325, float* %12328, align 4
  %12329 = extractelement <4 x float> %12324, i32 1
  %12330 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12331 = getelementptr inbounds i8, i8* %12330, i64 52
  %12332 = bitcast i8* %12331 to float*
  store float %12329, float* %12332, align 4
  %12333 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12334 = getelementptr inbounds i8, i8* %12333, i64 48
  %12335 = bitcast i8* %12334 to float*
  %12336 = load float, float* %12335, align 4
  %12337 = insertelement <4 x float> zeroinitializer, float %12336, i32 0
  %12338 = insertelement <4 x float> %12337, float 0.000000e+00, i32 1
  %12339 = insertelement <4 x float> %12338, float 0.000000e+00, i32 2
  %12340 = insertelement <4 x float> %12339, float 0.000000e+00, i32 3
  %12341 = getelementptr inbounds float, float* %2, i64 1
  %12342 = load float, float* %12341, align 4
  %12343 = insertelement <4 x float> zeroinitializer, float %12342, i32 0
  %12344 = insertelement <4 x float> %12343, float 0.000000e+00, i32 1
  %12345 = insertelement <4 x float> %12344, float 0.000000e+00, i32 2
  %12346 = insertelement <4 x float> %12345, float 0.000000e+00, i32 3
  %12347 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12340, <4 x float> %12346, <4 x float> zeroinitializer)
  %12348 = extractelement <4 x float> %12347, i32 0
  %12349 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12350 = getelementptr inbounds i8, i8* %12349, i64 52
  %12351 = bitcast i8* %12350 to float*
  store float %12348, float* %12351, align 4
  %12352 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12353 = getelementptr inbounds i8, i8* %12352, i64 48
  %12354 = bitcast i8* %12353 to float*
  %12355 = load float, float* %12354, align 4
  %12356 = insertelement <4 x float> zeroinitializer, float %12355, i32 0
  %12357 = insertelement <4 x float> %12356, float 1.000000e+00, i32 1
  %12358 = insertelement <4 x float> %12357, float 1.000000e+00, i32 2
  %12359 = insertelement <4 x float> %12358, float 1.000000e+00, i32 3
  %12360 = getelementptr inbounds float, float* %2, i64 1
  %12361 = load float, float* %12360, align 4
  %12362 = insertelement <4 x float> zeroinitializer, float %12361, i32 0
  %12363 = insertelement <4 x float> %12362, float 0.000000e+00, i32 1
  %12364 = insertelement <4 x float> %12363, float 0.000000e+00, i32 2
  %12365 = insertelement <4 x float> %12364, float 0.000000e+00, i32 3
  %12366 = fmul <4 x float> %12359, %12365
  %12367 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12368 = getelementptr inbounds i8, i8* %12367, i64 52
  %12369 = bitcast i8* %12368 to float*
  %12370 = load float, float* %12369, align 4
  %12371 = insertelement <4 x float> zeroinitializer, float %12370, i32 0
  %12372 = insertelement <4 x float> %12371, float 0.000000e+00, i32 1
  %12373 = insertelement <4 x float> %12372, float 0.000000e+00, i32 2
  %12374 = insertelement <4 x float> %12373, float 0.000000e+00, i32 3
  %12375 = getelementptr inbounds float, float* %2, i64 5
  %12376 = load float, float* %12375, align 4
  %12377 = insertelement <4 x float> zeroinitializer, float %12376, i32 0
  %12378 = insertelement <4 x float> %12377, float 0.000000e+00, i32 1
  %12379 = insertelement <4 x float> %12378, float 0.000000e+00, i32 2
  %12380 = insertelement <4 x float> %12379, float 0.000000e+00, i32 3
  %12381 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12374, <4 x float> %12380, <4 x float> %12366)
  %12382 = extractelement <4 x float> %12381, i32 0
  %12383 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12384 = getelementptr inbounds i8, i8* %12383, i64 52
  %12385 = bitcast i8* %12384 to float*
  store float %12382, float* %12385, align 4
  %12386 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12387 = getelementptr inbounds i8, i8* %12386, i64 48
  %12388 = bitcast i8* %12387 to float*
  %12389 = load float, float* %12388, align 4
  %12390 = insertelement <4 x float> zeroinitializer, float %12389, i32 0
  %12391 = insertelement <4 x float> %12390, float 1.000000e+00, i32 1
  %12392 = insertelement <4 x float> %12391, float 1.000000e+00, i32 2
  %12393 = insertelement <4 x float> %12392, float 1.000000e+00, i32 3
  %12394 = getelementptr inbounds float, float* %2, i64 1
  %12395 = load float, float* %12394, align 4
  %12396 = insertelement <4 x float> zeroinitializer, float %12395, i32 0
  %12397 = insertelement <4 x float> %12396, float 0.000000e+00, i32 1
  %12398 = insertelement <4 x float> %12397, float 0.000000e+00, i32 2
  %12399 = insertelement <4 x float> %12398, float 0.000000e+00, i32 3
  %12400 = fmul <4 x float> %12393, %12399
  %12401 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12402 = getelementptr inbounds i8, i8* %12401, i64 52
  %12403 = bitcast i8* %12402 to float*
  %12404 = load float, float* %12403, align 4
  %12405 = insertelement <4 x float> zeroinitializer, float %12404, i32 0
  %12406 = insertelement <4 x float> %12405, float 1.000000e+00, i32 1
  %12407 = insertelement <4 x float> %12406, float 1.000000e+00, i32 2
  %12408 = insertelement <4 x float> %12407, float 1.000000e+00, i32 3
  %12409 = getelementptr inbounds float, float* %2, i64 5
  %12410 = load float, float* %12409, align 4
  %12411 = insertelement <4 x float> zeroinitializer, float %12410, i32 0
  %12412 = insertelement <4 x float> %12411, float 0.000000e+00, i32 1
  %12413 = insertelement <4 x float> %12412, float 0.000000e+00, i32 2
  %12414 = insertelement <4 x float> %12413, float 0.000000e+00, i32 3
  %12415 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12408, <4 x float> %12414, <4 x float> %12400)
  %12416 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12417 = getelementptr inbounds i8, i8* %12416, i64 56
  %12418 = bitcast i8* %12417 to float*
  %12419 = load float, float* %12418, align 4
  %12420 = insertelement <4 x float> zeroinitializer, float %12419, i32 0
  %12421 = insertelement <4 x float> %12420, float 0.000000e+00, i32 1
  %12422 = insertelement <4 x float> %12421, float 0.000000e+00, i32 2
  %12423 = insertelement <4 x float> %12422, float 0.000000e+00, i32 3
  %12424 = getelementptr inbounds float, float* %2, i64 9
  %12425 = load float, float* %12424, align 4
  %12426 = insertelement <4 x float> zeroinitializer, float %12425, i32 0
  %12427 = insertelement <4 x float> %12426, float 0.000000e+00, i32 1
  %12428 = insertelement <4 x float> %12427, float 0.000000e+00, i32 2
  %12429 = insertelement <4 x float> %12428, float 0.000000e+00, i32 3
  %12430 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12423, <4 x float> %12429, <4 x float> %12415)
  %12431 = extractelement <4 x float> %12430, i32 0
  %12432 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12433 = getelementptr inbounds i8, i8* %12432, i64 52
  %12434 = bitcast i8* %12433 to float*
  store float %12431, float* %12434, align 4
  %12435 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12436 = getelementptr inbounds i8, i8* %12435, i64 48
  %12437 = bitcast i8* %12436 to float*
  %12438 = load float, float* %12437, align 4
  %12439 = insertelement <4 x float> zeroinitializer, float %12438, i32 0
  %12440 = insertelement <4 x float> %12439, float 1.000000e+00, i32 1
  %12441 = insertelement <4 x float> %12440, float 1.000000e+00, i32 2
  %12442 = insertelement <4 x float> %12441, float 1.000000e+00, i32 3
  %12443 = getelementptr inbounds float, float* %2, i64 1
  %12444 = load float, float* %12443, align 4
  %12445 = insertelement <4 x float> zeroinitializer, float %12444, i32 0
  %12446 = insertelement <4 x float> %12445, float 0.000000e+00, i32 1
  %12447 = insertelement <4 x float> %12446, float 0.000000e+00, i32 2
  %12448 = insertelement <4 x float> %12447, float 0.000000e+00, i32 3
  %12449 = fmul <4 x float> %12442, %12448
  %12450 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12451 = getelementptr inbounds i8, i8* %12450, i64 52
  %12452 = bitcast i8* %12451 to float*
  %12453 = load float, float* %12452, align 4
  %12454 = insertelement <4 x float> zeroinitializer, float %12453, i32 0
  %12455 = insertelement <4 x float> %12454, float 1.000000e+00, i32 1
  %12456 = insertelement <4 x float> %12455, float 1.000000e+00, i32 2
  %12457 = insertelement <4 x float> %12456, float 1.000000e+00, i32 3
  %12458 = getelementptr inbounds float, float* %2, i64 5
  %12459 = load float, float* %12458, align 4
  %12460 = insertelement <4 x float> zeroinitializer, float %12459, i32 0
  %12461 = insertelement <4 x float> %12460, float 0.000000e+00, i32 1
  %12462 = insertelement <4 x float> %12461, float 0.000000e+00, i32 2
  %12463 = insertelement <4 x float> %12462, float 0.000000e+00, i32 3
  %12464 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12457, <4 x float> %12463, <4 x float> %12449)
  %12465 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12466 = getelementptr inbounds i8, i8* %12465, i64 56
  %12467 = bitcast i8* %12466 to float*
  %12468 = load float, float* %12467, align 4
  %12469 = insertelement <4 x float> zeroinitializer, float %12468, i32 0
  %12470 = insertelement <4 x float> %12469, float 1.000000e+00, i32 1
  %12471 = insertelement <4 x float> %12470, float 1.000000e+00, i32 2
  %12472 = insertelement <4 x float> %12471, float 1.000000e+00, i32 3
  %12473 = getelementptr inbounds float, float* %2, i64 9
  %12474 = load float, float* %12473, align 4
  %12475 = insertelement <4 x float> zeroinitializer, float %12474, i32 0
  %12476 = insertelement <4 x float> %12475, float 0.000000e+00, i32 1
  %12477 = insertelement <4 x float> %12476, float 0.000000e+00, i32 2
  %12478 = insertelement <4 x float> %12477, float 0.000000e+00, i32 3
  %12479 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12472, <4 x float> %12478, <4 x float> %12464)
  %12480 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12481 = getelementptr inbounds i8, i8* %12480, i64 60
  %12482 = bitcast i8* %12481 to float*
  %12483 = load float, float* %12482, align 4
  %12484 = insertelement <4 x float> zeroinitializer, float %12483, i32 0
  %12485 = insertelement <4 x float> %12484, float 0.000000e+00, i32 1
  %12486 = insertelement <4 x float> %12485, float 0.000000e+00, i32 2
  %12487 = insertelement <4 x float> %12486, float 0.000000e+00, i32 3
  %12488 = getelementptr inbounds float, float* %2, i64 13
  %12489 = load float, float* %12488, align 4
  %12490 = insertelement <4 x float> zeroinitializer, float %12489, i32 0
  %12491 = insertelement <4 x float> %12490, float 0.000000e+00, i32 1
  %12492 = insertelement <4 x float> %12491, float 0.000000e+00, i32 2
  %12493 = insertelement <4 x float> %12492, float 0.000000e+00, i32 3
  %12494 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12487, <4 x float> %12493, <4 x float> %12479)
  %12495 = extractelement <4 x float> %12494, i32 0
  %12496 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12497 = getelementptr inbounds i8, i8* %12496, i64 52
  %12498 = bitcast i8* %12497 to float*
  store float %12495, float* %12498, align 4
  %12499 = extractelement <4 x float> %12494, i32 1
  %12500 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12501 = getelementptr inbounds i8, i8* %12500, i64 56
  %12502 = bitcast i8* %12501 to float*
  store float %12499, float* %12502, align 4
  %12503 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12504 = getelementptr inbounds i8, i8* %12503, i64 48
  %12505 = bitcast i8* %12504 to float*
  %12506 = load float, float* %12505, align 4
  %12507 = insertelement <4 x float> zeroinitializer, float %12506, i32 0
  %12508 = insertelement <4 x float> %12507, float 0.000000e+00, i32 1
  %12509 = insertelement <4 x float> %12508, float 0.000000e+00, i32 2
  %12510 = insertelement <4 x float> %12509, float 0.000000e+00, i32 3
  %12511 = getelementptr inbounds float, float* %2, i64 2
  %12512 = load float, float* %12511, align 4
  %12513 = insertelement <4 x float> zeroinitializer, float %12512, i32 0
  %12514 = insertelement <4 x float> %12513, float 0.000000e+00, i32 1
  %12515 = insertelement <4 x float> %12514, float 0.000000e+00, i32 2
  %12516 = insertelement <4 x float> %12515, float 0.000000e+00, i32 3
  %12517 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12510, <4 x float> %12516, <4 x float> zeroinitializer)
  %12518 = extractelement <4 x float> %12517, i32 0
  %12519 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12520 = getelementptr inbounds i8, i8* %12519, i64 56
  %12521 = bitcast i8* %12520 to float*
  store float %12518, float* %12521, align 4
  %12522 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12523 = getelementptr inbounds i8, i8* %12522, i64 48
  %12524 = bitcast i8* %12523 to float*
  %12525 = load float, float* %12524, align 4
  %12526 = insertelement <4 x float> zeroinitializer, float %12525, i32 0
  %12527 = insertelement <4 x float> %12526, float 1.000000e+00, i32 1
  %12528 = insertelement <4 x float> %12527, float 1.000000e+00, i32 2
  %12529 = insertelement <4 x float> %12528, float 1.000000e+00, i32 3
  %12530 = getelementptr inbounds float, float* %2, i64 2
  %12531 = load float, float* %12530, align 4
  %12532 = insertelement <4 x float> zeroinitializer, float %12531, i32 0
  %12533 = insertelement <4 x float> %12532, float 0.000000e+00, i32 1
  %12534 = insertelement <4 x float> %12533, float 0.000000e+00, i32 2
  %12535 = insertelement <4 x float> %12534, float 0.000000e+00, i32 3
  %12536 = fmul <4 x float> %12529, %12535
  %12537 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12538 = getelementptr inbounds i8, i8* %12537, i64 52
  %12539 = bitcast i8* %12538 to float*
  %12540 = load float, float* %12539, align 4
  %12541 = insertelement <4 x float> zeroinitializer, float %12540, i32 0
  %12542 = insertelement <4 x float> %12541, float 0.000000e+00, i32 1
  %12543 = insertelement <4 x float> %12542, float 0.000000e+00, i32 2
  %12544 = insertelement <4 x float> %12543, float 0.000000e+00, i32 3
  %12545 = getelementptr inbounds float, float* %2, i64 6
  %12546 = load float, float* %12545, align 4
  %12547 = insertelement <4 x float> zeroinitializer, float %12546, i32 0
  %12548 = insertelement <4 x float> %12547, float 0.000000e+00, i32 1
  %12549 = insertelement <4 x float> %12548, float 0.000000e+00, i32 2
  %12550 = insertelement <4 x float> %12549, float 0.000000e+00, i32 3
  %12551 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12544, <4 x float> %12550, <4 x float> %12536)
  %12552 = extractelement <4 x float> %12551, i32 0
  %12553 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12554 = getelementptr inbounds i8, i8* %12553, i64 56
  %12555 = bitcast i8* %12554 to float*
  store float %12552, float* %12555, align 4
  %12556 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12557 = getelementptr inbounds i8, i8* %12556, i64 48
  %12558 = bitcast i8* %12557 to float*
  %12559 = load float, float* %12558, align 4
  %12560 = insertelement <4 x float> zeroinitializer, float %12559, i32 0
  %12561 = insertelement <4 x float> %12560, float 1.000000e+00, i32 1
  %12562 = insertelement <4 x float> %12561, float 1.000000e+00, i32 2
  %12563 = insertelement <4 x float> %12562, float 1.000000e+00, i32 3
  %12564 = getelementptr inbounds float, float* %2, i64 2
  %12565 = load float, float* %12564, align 4
  %12566 = insertelement <4 x float> zeroinitializer, float %12565, i32 0
  %12567 = insertelement <4 x float> %12566, float 0.000000e+00, i32 1
  %12568 = insertelement <4 x float> %12567, float 0.000000e+00, i32 2
  %12569 = insertelement <4 x float> %12568, float 0.000000e+00, i32 3
  %12570 = fmul <4 x float> %12563, %12569
  %12571 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12572 = getelementptr inbounds i8, i8* %12571, i64 52
  %12573 = bitcast i8* %12572 to float*
  %12574 = load float, float* %12573, align 4
  %12575 = insertelement <4 x float> zeroinitializer, float %12574, i32 0
  %12576 = insertelement <4 x float> %12575, float 1.000000e+00, i32 1
  %12577 = insertelement <4 x float> %12576, float 1.000000e+00, i32 2
  %12578 = insertelement <4 x float> %12577, float 1.000000e+00, i32 3
  %12579 = getelementptr inbounds float, float* %2, i64 6
  %12580 = load float, float* %12579, align 4
  %12581 = insertelement <4 x float> zeroinitializer, float %12580, i32 0
  %12582 = insertelement <4 x float> %12581, float 0.000000e+00, i32 1
  %12583 = insertelement <4 x float> %12582, float 0.000000e+00, i32 2
  %12584 = insertelement <4 x float> %12583, float 0.000000e+00, i32 3
  %12585 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12578, <4 x float> %12584, <4 x float> %12570)
  %12586 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12587 = getelementptr inbounds i8, i8* %12586, i64 56
  %12588 = bitcast i8* %12587 to float*
  %12589 = load float, float* %12588, align 4
  %12590 = insertelement <4 x float> zeroinitializer, float %12589, i32 0
  %12591 = insertelement <4 x float> %12590, float 0.000000e+00, i32 1
  %12592 = insertelement <4 x float> %12591, float 0.000000e+00, i32 2
  %12593 = insertelement <4 x float> %12592, float 0.000000e+00, i32 3
  %12594 = getelementptr inbounds float, float* %2, i64 10
  %12595 = load float, float* %12594, align 4
  %12596 = insertelement <4 x float> zeroinitializer, float %12595, i32 0
  %12597 = insertelement <4 x float> %12596, float 0.000000e+00, i32 1
  %12598 = insertelement <4 x float> %12597, float 0.000000e+00, i32 2
  %12599 = insertelement <4 x float> %12598, float 0.000000e+00, i32 3
  %12600 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12593, <4 x float> %12599, <4 x float> %12585)
  %12601 = extractelement <4 x float> %12600, i32 0
  %12602 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12603 = getelementptr inbounds i8, i8* %12602, i64 56
  %12604 = bitcast i8* %12603 to float*
  store float %12601, float* %12604, align 4
  %12605 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12606 = getelementptr inbounds i8, i8* %12605, i64 48
  %12607 = bitcast i8* %12606 to float*
  %12608 = load float, float* %12607, align 4
  %12609 = insertelement <4 x float> zeroinitializer, float %12608, i32 0
  %12610 = insertelement <4 x float> %12609, float 1.000000e+00, i32 1
  %12611 = insertelement <4 x float> %12610, float 1.000000e+00, i32 2
  %12612 = insertelement <4 x float> %12611, float 1.000000e+00, i32 3
  %12613 = getelementptr inbounds float, float* %2, i64 2
  %12614 = load float, float* %12613, align 4
  %12615 = insertelement <4 x float> zeroinitializer, float %12614, i32 0
  %12616 = insertelement <4 x float> %12615, float 0.000000e+00, i32 1
  %12617 = insertelement <4 x float> %12616, float 0.000000e+00, i32 2
  %12618 = insertelement <4 x float> %12617, float 0.000000e+00, i32 3
  %12619 = fmul <4 x float> %12612, %12618
  %12620 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12621 = getelementptr inbounds i8, i8* %12620, i64 52
  %12622 = bitcast i8* %12621 to float*
  %12623 = load float, float* %12622, align 4
  %12624 = insertelement <4 x float> zeroinitializer, float %12623, i32 0
  %12625 = insertelement <4 x float> %12624, float 1.000000e+00, i32 1
  %12626 = insertelement <4 x float> %12625, float 1.000000e+00, i32 2
  %12627 = insertelement <4 x float> %12626, float 1.000000e+00, i32 3
  %12628 = getelementptr inbounds float, float* %2, i64 6
  %12629 = load float, float* %12628, align 4
  %12630 = insertelement <4 x float> zeroinitializer, float %12629, i32 0
  %12631 = insertelement <4 x float> %12630, float 0.000000e+00, i32 1
  %12632 = insertelement <4 x float> %12631, float 0.000000e+00, i32 2
  %12633 = insertelement <4 x float> %12632, float 0.000000e+00, i32 3
  %12634 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12627, <4 x float> %12633, <4 x float> %12619)
  %12635 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12636 = getelementptr inbounds i8, i8* %12635, i64 56
  %12637 = bitcast i8* %12636 to float*
  %12638 = load float, float* %12637, align 4
  %12639 = insertelement <4 x float> zeroinitializer, float %12638, i32 0
  %12640 = insertelement <4 x float> %12639, float 1.000000e+00, i32 1
  %12641 = insertelement <4 x float> %12640, float 1.000000e+00, i32 2
  %12642 = insertelement <4 x float> %12641, float 1.000000e+00, i32 3
  %12643 = getelementptr inbounds float, float* %2, i64 10
  %12644 = load float, float* %12643, align 4
  %12645 = insertelement <4 x float> zeroinitializer, float %12644, i32 0
  %12646 = insertelement <4 x float> %12645, float 0.000000e+00, i32 1
  %12647 = insertelement <4 x float> %12646, float 0.000000e+00, i32 2
  %12648 = insertelement <4 x float> %12647, float 0.000000e+00, i32 3
  %12649 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12642, <4 x float> %12648, <4 x float> %12634)
  %12650 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12651 = getelementptr inbounds i8, i8* %12650, i64 60
  %12652 = bitcast i8* %12651 to float*
  %12653 = load float, float* %12652, align 4
  %12654 = insertelement <4 x float> zeroinitializer, float %12653, i32 0
  %12655 = insertelement <4 x float> %12654, float 0.000000e+00, i32 1
  %12656 = insertelement <4 x float> %12655, float 0.000000e+00, i32 2
  %12657 = insertelement <4 x float> %12656, float 0.000000e+00, i32 3
  %12658 = getelementptr inbounds float, float* %2, i64 14
  %12659 = load float, float* %12658, align 4
  %12660 = insertelement <4 x float> zeroinitializer, float %12659, i32 0
  %12661 = insertelement <4 x float> %12660, float 0.000000e+00, i32 1
  %12662 = insertelement <4 x float> %12661, float 0.000000e+00, i32 2
  %12663 = insertelement <4 x float> %12662, float 0.000000e+00, i32 3
  %12664 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12657, <4 x float> %12663, <4 x float> %12649)
  %12665 = extractelement <4 x float> %12664, i32 0
  %12666 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12667 = getelementptr inbounds i8, i8* %12666, i64 56
  %12668 = bitcast i8* %12667 to float*
  store float %12665, float* %12668, align 4
  %12669 = extractelement <4 x float> %12664, i32 1
  %12670 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12671 = getelementptr inbounds i8, i8* %12670, i64 60
  %12672 = bitcast i8* %12671 to float*
  store float %12669, float* %12672, align 4
  %12673 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12674 = getelementptr inbounds i8, i8* %12673, i64 48
  %12675 = bitcast i8* %12674 to float*
  %12676 = load float, float* %12675, align 4
  %12677 = insertelement <4 x float> zeroinitializer, float %12676, i32 0
  %12678 = insertelement <4 x float> %12677, float 0.000000e+00, i32 1
  %12679 = insertelement <4 x float> %12678, float 0.000000e+00, i32 2
  %12680 = insertelement <4 x float> %12679, float 0.000000e+00, i32 3
  %12681 = getelementptr inbounds float, float* %2, i64 3
  %12682 = load float, float* %12681, align 4
  %12683 = insertelement <4 x float> zeroinitializer, float %12682, i32 0
  %12684 = insertelement <4 x float> %12683, float 0.000000e+00, i32 1
  %12685 = insertelement <4 x float> %12684, float 0.000000e+00, i32 2
  %12686 = insertelement <4 x float> %12685, float 0.000000e+00, i32 3
  %12687 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12680, <4 x float> %12686, <4 x float> zeroinitializer)
  %12688 = extractelement <4 x float> %12687, i32 0
  %12689 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12690 = getelementptr inbounds i8, i8* %12689, i64 60
  %12691 = bitcast i8* %12690 to float*
  store float %12688, float* %12691, align 4
  %12692 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12693 = getelementptr inbounds i8, i8* %12692, i64 48
  %12694 = bitcast i8* %12693 to float*
  %12695 = load float, float* %12694, align 4
  %12696 = insertelement <4 x float> zeroinitializer, float %12695, i32 0
  %12697 = insertelement <4 x float> %12696, float 1.000000e+00, i32 1
  %12698 = insertelement <4 x float> %12697, float 1.000000e+00, i32 2
  %12699 = insertelement <4 x float> %12698, float 1.000000e+00, i32 3
  %12700 = getelementptr inbounds float, float* %2, i64 3
  %12701 = load float, float* %12700, align 4
  %12702 = insertelement <4 x float> zeroinitializer, float %12701, i32 0
  %12703 = insertelement <4 x float> %12702, float 0.000000e+00, i32 1
  %12704 = insertelement <4 x float> %12703, float 0.000000e+00, i32 2
  %12705 = insertelement <4 x float> %12704, float 0.000000e+00, i32 3
  %12706 = fmul <4 x float> %12699, %12705
  %12707 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12708 = getelementptr inbounds i8, i8* %12707, i64 52
  %12709 = bitcast i8* %12708 to float*
  %12710 = load float, float* %12709, align 4
  %12711 = insertelement <4 x float> zeroinitializer, float %12710, i32 0
  %12712 = insertelement <4 x float> %12711, float 0.000000e+00, i32 1
  %12713 = insertelement <4 x float> %12712, float 0.000000e+00, i32 2
  %12714 = insertelement <4 x float> %12713, float 0.000000e+00, i32 3
  %12715 = getelementptr inbounds float, float* %2, i64 7
  %12716 = load float, float* %12715, align 4
  %12717 = insertelement <4 x float> zeroinitializer, float %12716, i32 0
  %12718 = insertelement <4 x float> %12717, float 0.000000e+00, i32 1
  %12719 = insertelement <4 x float> %12718, float 0.000000e+00, i32 2
  %12720 = insertelement <4 x float> %12719, float 0.000000e+00, i32 3
  %12721 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12714, <4 x float> %12720, <4 x float> %12706)
  %12722 = extractelement <4 x float> %12721, i32 0
  %12723 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12724 = getelementptr inbounds i8, i8* %12723, i64 60
  %12725 = bitcast i8* %12724 to float*
  store float %12722, float* %12725, align 4
  %12726 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12727 = getelementptr inbounds i8, i8* %12726, i64 48
  %12728 = bitcast i8* %12727 to float*
  %12729 = load float, float* %12728, align 4
  %12730 = insertelement <4 x float> zeroinitializer, float %12729, i32 0
  %12731 = insertelement <4 x float> %12730, float 1.000000e+00, i32 1
  %12732 = insertelement <4 x float> %12731, float 1.000000e+00, i32 2
  %12733 = insertelement <4 x float> %12732, float 1.000000e+00, i32 3
  %12734 = getelementptr inbounds float, float* %2, i64 3
  %12735 = load float, float* %12734, align 4
  %12736 = insertelement <4 x float> zeroinitializer, float %12735, i32 0
  %12737 = insertelement <4 x float> %12736, float 0.000000e+00, i32 1
  %12738 = insertelement <4 x float> %12737, float 0.000000e+00, i32 2
  %12739 = insertelement <4 x float> %12738, float 0.000000e+00, i32 3
  %12740 = fmul <4 x float> %12733, %12739
  %12741 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12742 = getelementptr inbounds i8, i8* %12741, i64 52
  %12743 = bitcast i8* %12742 to float*
  %12744 = load float, float* %12743, align 4
  %12745 = insertelement <4 x float> zeroinitializer, float %12744, i32 0
  %12746 = insertelement <4 x float> %12745, float 1.000000e+00, i32 1
  %12747 = insertelement <4 x float> %12746, float 1.000000e+00, i32 2
  %12748 = insertelement <4 x float> %12747, float 1.000000e+00, i32 3
  %12749 = getelementptr inbounds float, float* %2, i64 7
  %12750 = load float, float* %12749, align 4
  %12751 = insertelement <4 x float> zeroinitializer, float %12750, i32 0
  %12752 = insertelement <4 x float> %12751, float 0.000000e+00, i32 1
  %12753 = insertelement <4 x float> %12752, float 0.000000e+00, i32 2
  %12754 = insertelement <4 x float> %12753, float 0.000000e+00, i32 3
  %12755 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12748, <4 x float> %12754, <4 x float> %12740)
  %12756 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12757 = getelementptr inbounds i8, i8* %12756, i64 56
  %12758 = bitcast i8* %12757 to float*
  %12759 = load float, float* %12758, align 4
  %12760 = insertelement <4 x float> zeroinitializer, float %12759, i32 0
  %12761 = insertelement <4 x float> %12760, float 0.000000e+00, i32 1
  %12762 = insertelement <4 x float> %12761, float 0.000000e+00, i32 2
  %12763 = insertelement <4 x float> %12762, float 0.000000e+00, i32 3
  %12764 = getelementptr inbounds float, float* %2, i64 11
  %12765 = load float, float* %12764, align 4
  %12766 = insertelement <4 x float> zeroinitializer, float %12765, i32 0
  %12767 = insertelement <4 x float> %12766, float 0.000000e+00, i32 1
  %12768 = insertelement <4 x float> %12767, float 0.000000e+00, i32 2
  %12769 = insertelement <4 x float> %12768, float 0.000000e+00, i32 3
  %12770 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12763, <4 x float> %12769, <4 x float> %12755)
  %12771 = extractelement <4 x float> %12770, i32 0
  %12772 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12773 = getelementptr inbounds i8, i8* %12772, i64 60
  %12774 = bitcast i8* %12773 to float*
  store float %12771, float* %12774, align 4
  %12775 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12776 = getelementptr inbounds i8, i8* %12775, i64 48
  %12777 = bitcast i8* %12776 to float*
  %12778 = load float, float* %12777, align 4
  %12779 = insertelement <4 x float> zeroinitializer, float %12778, i32 0
  %12780 = insertelement <4 x float> %12779, float 1.000000e+00, i32 1
  %12781 = insertelement <4 x float> %12780, float 1.000000e+00, i32 2
  %12782 = insertelement <4 x float> %12781, float 1.000000e+00, i32 3
  %12783 = getelementptr inbounds float, float* %2, i64 3
  %12784 = load float, float* %12783, align 4
  %12785 = insertelement <4 x float> zeroinitializer, float %12784, i32 0
  %12786 = insertelement <4 x float> %12785, float 0.000000e+00, i32 1
  %12787 = insertelement <4 x float> %12786, float 0.000000e+00, i32 2
  %12788 = insertelement <4 x float> %12787, float 0.000000e+00, i32 3
  %12789 = fmul <4 x float> %12782, %12788
  %12790 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12791 = getelementptr inbounds i8, i8* %12790, i64 52
  %12792 = bitcast i8* %12791 to float*
  %12793 = load float, float* %12792, align 4
  %12794 = insertelement <4 x float> zeroinitializer, float %12793, i32 0
  %12795 = insertelement <4 x float> %12794, float 1.000000e+00, i32 1
  %12796 = insertelement <4 x float> %12795, float 1.000000e+00, i32 2
  %12797 = insertelement <4 x float> %12796, float 1.000000e+00, i32 3
  %12798 = getelementptr inbounds float, float* %2, i64 7
  %12799 = load float, float* %12798, align 4
  %12800 = insertelement <4 x float> zeroinitializer, float %12799, i32 0
  %12801 = insertelement <4 x float> %12800, float 0.000000e+00, i32 1
  %12802 = insertelement <4 x float> %12801, float 0.000000e+00, i32 2
  %12803 = insertelement <4 x float> %12802, float 0.000000e+00, i32 3
  %12804 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12797, <4 x float> %12803, <4 x float> %12789)
  %12805 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12806 = getelementptr inbounds i8, i8* %12805, i64 56
  %12807 = bitcast i8* %12806 to float*
  %12808 = load float, float* %12807, align 4
  %12809 = insertelement <4 x float> zeroinitializer, float %12808, i32 0
  %12810 = insertelement <4 x float> %12809, float 1.000000e+00, i32 1
  %12811 = insertelement <4 x float> %12810, float 1.000000e+00, i32 2
  %12812 = insertelement <4 x float> %12811, float 1.000000e+00, i32 3
  %12813 = getelementptr inbounds float, float* %2, i64 11
  %12814 = load float, float* %12813, align 4
  %12815 = insertelement <4 x float> zeroinitializer, float %12814, i32 0
  %12816 = insertelement <4 x float> %12815, float 0.000000e+00, i32 1
  %12817 = insertelement <4 x float> %12816, float 0.000000e+00, i32 2
  %12818 = insertelement <4 x float> %12817, float 0.000000e+00, i32 3
  %12819 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12812, <4 x float> %12818, <4 x float> %12804)
  %12820 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12821 = getelementptr inbounds i8, i8* %12820, i64 60
  %12822 = bitcast i8* %12821 to float*
  %12823 = load float, float* %12822, align 4
  %12824 = insertelement <4 x float> zeroinitializer, float %12823, i32 0
  %12825 = insertelement <4 x float> %12824, float 0.000000e+00, i32 1
  %12826 = insertelement <4 x float> %12825, float 0.000000e+00, i32 2
  %12827 = insertelement <4 x float> %12826, float 0.000000e+00, i32 3
  %12828 = getelementptr inbounds float, float* %2, i64 15
  %12829 = load float, float* %12828, align 4
  %12830 = insertelement <4 x float> zeroinitializer, float %12829, i32 0
  %12831 = insertelement <4 x float> %12830, float 0.000000e+00, i32 1
  %12832 = insertelement <4 x float> %12831, float 0.000000e+00, i32 2
  %12833 = insertelement <4 x float> %12832, float 0.000000e+00, i32 3
  %12834 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12827, <4 x float> %12833, <4 x float> %12819)
  %12835 = extractelement <4 x float> %12834, i32 0
  %12836 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12837 = getelementptr inbounds i8, i8* %12836, i64 60
  %12838 = bitcast i8* %12837 to float*
  store float %12835, float* %12838, align 4
  %12839 = getelementptr inbounds float, float* %2, i64 10
  %12840 = bitcast float* %12839 to i32*
  %12841 = load i32, i32* %12840, align 4
  %12842 = sitofp i32 %12841 to float
  %12843 = insertelement <4 x float> zeroinitializer, float %12842, i32 0
  %12844 = insertelement <4 x float> %12843, float 0.000000e+00, i32 1
  %12845 = insertelement <4 x float> %12844, float 0.000000e+00, i32 2
  %12846 = insertelement <4 x float> %12845, float 0.000000e+00, i32 3
  %12847 = extractelement <4 x float> %12846, i32 0
  %12848 = fptosi float %12847 to i32
  %12849 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12850 = bitcast i8* %12849 to i32*
  store i32 %12848, i32* %12850, align 4
  %12851 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12852 = getelementptr inbounds i8, i8* %12851, i64 40
  %12853 = bitcast i8* %12852 to i32*
  %12854 = load i32, i32* %12853, align 4
  %12855 = sitofp i32 %12854 to float
  %12856 = insertelement <4 x float> zeroinitializer, float %12855, i32 0
  %12857 = insertelement <4 x float> %12856, float 0.000000e+00, i32 1
  %12858 = insertelement <4 x float> %12857, float 0.000000e+00, i32 2
  %12859 = insertelement <4 x float> %12858, float 0.000000e+00, i32 3
  %12860 = extractelement <4 x float> %12859, i32 0
  %12861 = fptosi float %12860 to i32
  %12862 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12863 = bitcast i8* %12862 to i32*
  store i32 %12861, i32* %12863, align 4
  %12864 = getelementptr inbounds float, float* %2, i64 14
  %12865 = bitcast float* %12864 to i32*
  %12866 = load i32, i32* %12865, align 4
  %12867 = sitofp i32 %12866 to float
  %12868 = insertelement <4 x float> zeroinitializer, float %12867, i32 0
  %12869 = insertelement <4 x float> %12868, float 0.000000e+00, i32 1
  %12870 = insertelement <4 x float> %12869, float 0.000000e+00, i32 2
  %12871 = insertelement <4 x float> %12870, float 0.000000e+00, i32 3
  %12872 = extractelement <4 x float> %12871, i32 0
  %12873 = fptosi float %12872 to i32
  %12874 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12875 = getelementptr inbounds i8, i8* %12874, i64 4
  %12876 = bitcast i8* %12875 to i32*
  store i32 %12873, i32* %12876, align 4
  %12877 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12878 = getelementptr inbounds i8, i8* %12877, i64 56
  %12879 = bitcast i8* %12878 to i32*
  %12880 = load i32, i32* %12879, align 4
  %12881 = sitofp i32 %12880 to float
  %12882 = insertelement <4 x float> zeroinitializer, float %12881, i32 0
  %12883 = insertelement <4 x float> %12882, float 0.000000e+00, i32 1
  %12884 = insertelement <4 x float> %12883, float 0.000000e+00, i32 2
  %12885 = insertelement <4 x float> %12884, float 0.000000e+00, i32 3
  %12886 = extractelement <4 x float> %12885, i32 0
  %12887 = fptosi float %12886 to i32
  %12888 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12889 = getelementptr inbounds i8, i8* %12888, i64 4
  %12890 = bitcast i8* %12889 to i32*
  store i32 %12887, i32* %12890, align 4
  %12891 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12892 = bitcast i8* %12891 to float*
  %12893 = load float, float* %12892, align 4
  %12894 = insertelement <4 x float> zeroinitializer, float %12893, i32 0
  %12895 = insertelement <4 x float> %12894, float 0.000000e+00, i32 1
  %12896 = insertelement <4 x float> %12895, float 0.000000e+00, i32 2
  %12897 = insertelement <4 x float> %12896, float 0.000000e+00, i32 3
  %12898 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12899 = getelementptr inbounds i8, i8* %12898, i64 4
  %12900 = bitcast i8* %12899 to float*
  %12901 = load float, float* %12900, align 4
  %12902 = insertelement <4 x float> zeroinitializer, float %12901, i32 0
  %12903 = insertelement <4 x float> %12902, float 1.000000e+00, i32 1
  %12904 = insertelement <4 x float> %12903, float 1.000000e+00, i32 2
  %12905 = insertelement <4 x float> %12904, float 1.000000e+00, i32 3
  %12906 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12907 = getelementptr inbounds i8, i8* %12906, i64 4
  %12908 = bitcast i8* %12907 to float*
  %12909 = load float, float* %12908, align 4
  %12910 = insertelement <4 x float> zeroinitializer, float %12909, i32 0
  %12911 = insertelement <4 x float> %12910, float 0.000000e+00, i32 1
  %12912 = insertelement <4 x float> %12911, float 0.000000e+00, i32 2
  %12913 = insertelement <4 x float> %12912, float 0.000000e+00, i32 3
  %12914 = fmul <4 x float> %12905, %12913
  %12915 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12916 = bitcast i8* %12915 to float*
  %12917 = load float, float* %12916, align 4
  %12918 = insertelement <4 x float> zeroinitializer, float %12917, i32 0
  %12919 = insertelement <4 x float> %12918, float 1.000000e+00, i32 1
  %12920 = insertelement <4 x float> %12919, float 1.000000e+00, i32 2
  %12921 = insertelement <4 x float> %12920, float 1.000000e+00, i32 3
  %12922 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12923 = bitcast i8* %12922 to float*
  %12924 = load float, float* %12923, align 4
  %12925 = insertelement <4 x float> zeroinitializer, float %12924, i32 0
  %12926 = insertelement <4 x float> %12925, float 0.000000e+00, i32 1
  %12927 = insertelement <4 x float> %12926, float 0.000000e+00, i32 2
  %12928 = insertelement <4 x float> %12927, float 0.000000e+00, i32 3
  %12929 = fmul <4 x float> %12921, %12928
  %12930 = fadd <4 x float> %12929, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %12931 = fadd <4 x float> %12914, %12930
  %12932 = call <4 x float> @llvm.sqrt.v4f32(<4 x float> %12931)
  %12933 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12934 = bitcast i8* %12933 to float*
  %12935 = load float, float* %12934, align 4
  %12936 = fcmp olt float %12935, 0.000000e+00
  %12937 = sext i1 %12936 to i32
  %12938 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12939 = bitcast i8* %12938 to float*
  %12940 = load float, float* %12939, align 4
  %12941 = fcmp ogt float %12940, 0.000000e+00
  %12942 = zext i1 %12941 to i32
  %12943 = add nsw i32 %12937, %12942
  %12944 = sitofp i32 %12943 to float
  %12945 = insertelement <4 x float> zeroinitializer, float %12944, i32 0
  %12946 = insertelement <4 x float> %12945, float 0.000000e+00, i32 1
  %12947 = insertelement <4 x float> %12946, float 0.000000e+00, i32 2
  %12948 = insertelement <4 x float> %12947, float 0.000000e+00, i32 3
  %12949 = fneg <4 x float> %12948
  %12950 = fmul <4 x float> %12932, %12949
  %12951 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12952 = bitcast i8* %12951 to float*
  %12953 = load float, float* %12952, align 4
  %12954 = insertelement <4 x float> zeroinitializer, float %12953, i32 0
  %12955 = insertelement <4 x float> %12954, float 0.000000e+00, i32 1
  %12956 = insertelement <4 x float> %12955, float 0.000000e+00, i32 2
  %12957 = insertelement <4 x float> %12956, float 0.000000e+00, i32 3
  %12958 = call <4 x float> @llvm.fma.v4f32(<4 x float> %12950, <4 x float> %12957, <4 x float> %12897)
  %12959 = extractelement <4 x float> %12958, i32 0
  %12960 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12961 = bitcast i8* %12960 to float*
  store float %12959, float* %12961, align 4
  %12962 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12963 = getelementptr inbounds i8, i8* %12962, i64 4
  %12964 = bitcast i8* %12963 to float*
  %12965 = load float, float* %12964, align 4
  %12966 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12967 = getelementptr inbounds i8, i8* %12966, i64 4
  %12968 = bitcast i8* %12967 to float*
  %12969 = load float, float* %12968, align 4
  %12970 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12971 = getelementptr inbounds i8, i8* %12970, i64 4
  %12972 = bitcast i8* %12971 to float*
  %12973 = load float, float* %12972, align 4
  %12974 = fmul float %12969, %12973
  %12975 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12976 = bitcast i8* %12975 to float*
  %12977 = load float, float* %12976, align 4
  %12978 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12979 = bitcast i8* %12978 to float*
  %12980 = load float, float* %12979, align 4
  %12981 = fmul float %12977, %12980
  %12982 = fadd float %12981, 0.000000e+00
  %12983 = fadd float %12974, %12982
  %12984 = call float @llvm.sqrt.f32(float %12983)
  %12985 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12986 = bitcast i8* %12985 to float*
  %12987 = load float, float* %12986, align 4
  %12988 = fcmp olt float %12987, 0.000000e+00
  %12989 = sext i1 %12988 to i32
  %12990 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %12991 = bitcast i8* %12990 to float*
  %12992 = load float, float* %12991, align 4
  %12993 = fcmp ogt float %12992, 0.000000e+00
  %12994 = zext i1 %12993 to i32
  %12995 = add nsw i32 %12989, %12994
  %12996 = sitofp i32 %12995 to float
  %12997 = fneg float %12996
  %12998 = fmul float %12984, %12997
  %12999 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13000 = getelementptr inbounds i8, i8* %12999, i64 4
  %13001 = bitcast i8* %13000 to float*
  %13002 = load float, float* %13001, align 4
  %13003 = fmul float %12998, %13002
  %13004 = fadd float %12965, %13003
  %13005 = insertelement <4 x float> zeroinitializer, float %13004, i32 0
  %13006 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13007 = bitcast i8* %13006 to float*
  %13008 = load float, float* %13007, align 4
  %13009 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13010 = getelementptr inbounds i8, i8* %13009, i64 4
  %13011 = bitcast i8* %13010 to float*
  %13012 = load float, float* %13011, align 4
  %13013 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13014 = getelementptr inbounds i8, i8* %13013, i64 4
  %13015 = bitcast i8* %13014 to float*
  %13016 = load float, float* %13015, align 4
  %13017 = fmul float %13012, %13016
  %13018 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13019 = bitcast i8* %13018 to float*
  %13020 = load float, float* %13019, align 4
  %13021 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13022 = bitcast i8* %13021 to float*
  %13023 = load float, float* %13022, align 4
  %13024 = fmul float %13020, %13023
  %13025 = fadd float %13024, 0.000000e+00
  %13026 = fadd float %13017, %13025
  %13027 = call float @llvm.sqrt.f32(float %13026)
  %13028 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13029 = bitcast i8* %13028 to float*
  %13030 = load float, float* %13029, align 4
  %13031 = fcmp olt float %13030, 0.000000e+00
  %13032 = sext i1 %13031 to i32
  %13033 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13034 = bitcast i8* %13033 to float*
  %13035 = load float, float* %13034, align 4
  %13036 = fcmp ogt float %13035, 0.000000e+00
  %13037 = zext i1 %13036 to i32
  %13038 = add nsw i32 %13032, %13037
  %13039 = sitofp i32 %13038 to float
  %13040 = fneg float %13039
  %13041 = fmul float %13027, %13040
  %13042 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13043 = bitcast i8* %13042 to float*
  %13044 = load float, float* %13043, align 4
  %13045 = fmul float %13041, %13044
  %13046 = fadd float %13008, %13045
  %13047 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13048 = getelementptr inbounds i8, i8* %13047, i64 4
  %13049 = bitcast i8* %13048 to float*
  %13050 = load float, float* %13049, align 4
  %13051 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13052 = getelementptr inbounds i8, i8* %13051, i64 4
  %13053 = bitcast i8* %13052 to float*
  %13054 = load float, float* %13053, align 4
  %13055 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13056 = getelementptr inbounds i8, i8* %13055, i64 4
  %13057 = bitcast i8* %13056 to float*
  %13058 = load float, float* %13057, align 4
  %13059 = fmul float %13054, %13058
  %13060 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13061 = bitcast i8* %13060 to float*
  %13062 = load float, float* %13061, align 4
  %13063 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13064 = bitcast i8* %13063 to float*
  %13065 = load float, float* %13064, align 4
  %13066 = fmul float %13062, %13065
  %13067 = fadd float %13066, 0.000000e+00
  %13068 = fadd float %13059, %13067
  %13069 = call float @llvm.sqrt.f32(float %13068)
  %13070 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13071 = bitcast i8* %13070 to float*
  %13072 = load float, float* %13071, align 4
  %13073 = fcmp olt float %13072, 0.000000e+00
  %13074 = sext i1 %13073 to i32
  %13075 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13076 = bitcast i8* %13075 to float*
  %13077 = load float, float* %13076, align 4
  %13078 = fcmp ogt float %13077, 0.000000e+00
  %13079 = zext i1 %13078 to i32
  %13080 = add nsw i32 %13074, %13079
  %13081 = sitofp i32 %13080 to float
  %13082 = fneg float %13081
  %13083 = fmul float %13069, %13082
  %13084 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13085 = getelementptr inbounds i8, i8* %13084, i64 4
  %13086 = bitcast i8* %13085 to float*
  %13087 = load float, float* %13086, align 4
  %13088 = fmul float %13083, %13087
  %13089 = fadd float %13050, %13088
  %13090 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13091 = getelementptr inbounds i8, i8* %13090, i64 4
  %13092 = bitcast i8* %13091 to float*
  %13093 = load float, float* %13092, align 4
  %13094 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13095 = getelementptr inbounds i8, i8* %13094, i64 4
  %13096 = bitcast i8* %13095 to float*
  %13097 = load float, float* %13096, align 4
  %13098 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13099 = getelementptr inbounds i8, i8* %13098, i64 4
  %13100 = bitcast i8* %13099 to float*
  %13101 = load float, float* %13100, align 4
  %13102 = fmul float %13097, %13101
  %13103 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13104 = bitcast i8* %13103 to float*
  %13105 = load float, float* %13104, align 4
  %13106 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13107 = bitcast i8* %13106 to float*
  %13108 = load float, float* %13107, align 4
  %13109 = fmul float %13105, %13108
  %13110 = fadd float %13109, 0.000000e+00
  %13111 = fadd float %13102, %13110
  %13112 = call float @llvm.sqrt.f32(float %13111)
  %13113 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13114 = bitcast i8* %13113 to float*
  %13115 = load float, float* %13114, align 4
  %13116 = fcmp olt float %13115, 0.000000e+00
  %13117 = sext i1 %13116 to i32
  %13118 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13119 = bitcast i8* %13118 to float*
  %13120 = load float, float* %13119, align 4
  %13121 = fcmp ogt float %13120, 0.000000e+00
  %13122 = zext i1 %13121 to i32
  %13123 = add nsw i32 %13117, %13122
  %13124 = sitofp i32 %13123 to float
  %13125 = fneg float %13124
  %13126 = fmul float %13112, %13125
  %13127 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13128 = getelementptr inbounds i8, i8* %13127, i64 4
  %13129 = bitcast i8* %13128 to float*
  %13130 = load float, float* %13129, align 4
  %13131 = fmul float %13126, %13130
  %13132 = fadd float %13093, %13131
  %13133 = fmul float %13089, %13132
  %13134 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13135 = bitcast i8* %13134 to float*
  %13136 = load float, float* %13135, align 4
  %13137 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13138 = getelementptr inbounds i8, i8* %13137, i64 4
  %13139 = bitcast i8* %13138 to float*
  %13140 = load float, float* %13139, align 4
  %13141 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13142 = getelementptr inbounds i8, i8* %13141, i64 4
  %13143 = bitcast i8* %13142 to float*
  %13144 = load float, float* %13143, align 4
  %13145 = fmul float %13140, %13144
  %13146 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13147 = bitcast i8* %13146 to float*
  %13148 = load float, float* %13147, align 4
  %13149 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13150 = bitcast i8* %13149 to float*
  %13151 = load float, float* %13150, align 4
  %13152 = fmul float %13148, %13151
  %13153 = fadd float %13152, 0.000000e+00
  %13154 = fadd float %13145, %13153
  %13155 = call float @llvm.sqrt.f32(float %13154)
  %13156 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13157 = bitcast i8* %13156 to float*
  %13158 = load float, float* %13157, align 4
  %13159 = fcmp olt float %13158, 0.000000e+00
  %13160 = sext i1 %13159 to i32
  %13161 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13162 = bitcast i8* %13161 to float*
  %13163 = load float, float* %13162, align 4
  %13164 = fcmp ogt float %13163, 0.000000e+00
  %13165 = zext i1 %13164 to i32
  %13166 = add nsw i32 %13160, %13165
  %13167 = sitofp i32 %13166 to float
  %13168 = fneg float %13167
  %13169 = fmul float %13155, %13168
  %13170 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13171 = bitcast i8* %13170 to float*
  %13172 = load float, float* %13171, align 4
  %13173 = fmul float %13169, %13172
  %13174 = fadd float %13136, %13173
  %13175 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13176 = bitcast i8* %13175 to float*
  %13177 = load float, float* %13176, align 4
  %13178 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13179 = getelementptr inbounds i8, i8* %13178, i64 4
  %13180 = bitcast i8* %13179 to float*
  %13181 = load float, float* %13180, align 4
  %13182 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13183 = getelementptr inbounds i8, i8* %13182, i64 4
  %13184 = bitcast i8* %13183 to float*
  %13185 = load float, float* %13184, align 4
  %13186 = fmul float %13181, %13185
  %13187 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13188 = bitcast i8* %13187 to float*
  %13189 = load float, float* %13188, align 4
  %13190 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13191 = bitcast i8* %13190 to float*
  %13192 = load float, float* %13191, align 4
  %13193 = fmul float %13189, %13192
  %13194 = fadd float %13193, 0.000000e+00
  %13195 = fadd float %13186, %13194
  %13196 = call float @llvm.sqrt.f32(float %13195)
  %13197 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13198 = bitcast i8* %13197 to float*
  %13199 = load float, float* %13198, align 4
  %13200 = fcmp olt float %13199, 0.000000e+00
  %13201 = sext i1 %13200 to i32
  %13202 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13203 = bitcast i8* %13202 to float*
  %13204 = load float, float* %13203, align 4
  %13205 = fcmp ogt float %13204, 0.000000e+00
  %13206 = zext i1 %13205 to i32
  %13207 = add nsw i32 %13201, %13206
  %13208 = sitofp i32 %13207 to float
  %13209 = fneg float %13208
  %13210 = fmul float %13196, %13209
  %13211 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13212 = bitcast i8* %13211 to float*
  %13213 = load float, float* %13212, align 4
  %13214 = fmul float %13210, %13213
  %13215 = fadd float %13177, %13214
  %13216 = fmul float %13174, %13215
  %13217 = fadd float %13216, 0.000000e+00
  %13218 = fadd float %13133, %13217
  %13219 = call float @llvm.sqrt.f32(float %13218)
  %13220 = fdiv float %13046, %13219
  %13221 = insertelement <4 x float> %13005, float %13220, i32 1
  %13222 = insertelement <4 x float> %13221, float 0.000000e+00, i32 2
  %13223 = insertelement <4 x float> %13222, float 0.000000e+00, i32 3
  %13224 = extractelement <4 x float> %13223, i32 0
  %13225 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13226 = getelementptr inbounds i8, i8* %13225, i64 4
  %13227 = bitcast i8* %13226 to float*
  store float %13224, float* %13227, align 4
  %13228 = extractelement <4 x float> %13223, i32 1
  %13229 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13230 = bitcast i8* %13229 to float*
  store float %13228, float* %13230, align 4
  %13231 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13232 = getelementptr inbounds i8, i8* %13231, i64 4
  %13233 = bitcast i8* %13232 to float*
  %13234 = load float, float* %13233, align 4
  %13235 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13236 = getelementptr inbounds i8, i8* %13235, i64 4
  %13237 = bitcast i8* %13236 to float*
  %13238 = load float, float* %13237, align 4
  %13239 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13240 = getelementptr inbounds i8, i8* %13239, i64 4
  %13241 = bitcast i8* %13240 to float*
  %13242 = load float, float* %13241, align 4
  %13243 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13244 = getelementptr inbounds i8, i8* %13243, i64 4
  %13245 = bitcast i8* %13244 to float*
  %13246 = load float, float* %13245, align 4
  %13247 = fmul float %13242, %13246
  %13248 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13249 = bitcast i8* %13248 to float*
  %13250 = load float, float* %13249, align 4
  %13251 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13252 = bitcast i8* %13251 to float*
  %13253 = load float, float* %13252, align 4
  %13254 = fmul float %13250, %13253
  %13255 = fadd float %13254, 0.000000e+00
  %13256 = fadd float %13247, %13255
  %13257 = call float @llvm.sqrt.f32(float %13256)
  %13258 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13259 = bitcast i8* %13258 to float*
  %13260 = load float, float* %13259, align 4
  %13261 = fcmp olt float %13260, 0.000000e+00
  %13262 = sext i1 %13261 to i32
  %13263 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13264 = bitcast i8* %13263 to float*
  %13265 = load float, float* %13264, align 4
  %13266 = fcmp ogt float %13265, 0.000000e+00
  %13267 = zext i1 %13266 to i32
  %13268 = add nsw i32 %13262, %13267
  %13269 = sitofp i32 %13268 to float
  %13270 = fneg float %13269
  %13271 = fmul float %13257, %13270
  %13272 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13273 = getelementptr inbounds i8, i8* %13272, i64 4
  %13274 = bitcast i8* %13273 to float*
  %13275 = load float, float* %13274, align 4
  %13276 = fmul float %13271, %13275
  %13277 = fadd float %13238, %13276
  %13278 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13279 = getelementptr inbounds i8, i8* %13278, i64 4
  %13280 = bitcast i8* %13279 to float*
  %13281 = load float, float* %13280, align 4
  %13282 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13283 = getelementptr inbounds i8, i8* %13282, i64 4
  %13284 = bitcast i8* %13283 to float*
  %13285 = load float, float* %13284, align 4
  %13286 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13287 = getelementptr inbounds i8, i8* %13286, i64 4
  %13288 = bitcast i8* %13287 to float*
  %13289 = load float, float* %13288, align 4
  %13290 = fmul float %13285, %13289
  %13291 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13292 = bitcast i8* %13291 to float*
  %13293 = load float, float* %13292, align 4
  %13294 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13295 = bitcast i8* %13294 to float*
  %13296 = load float, float* %13295, align 4
  %13297 = fmul float %13293, %13296
  %13298 = fadd float %13297, 0.000000e+00
  %13299 = fadd float %13290, %13298
  %13300 = call float @llvm.sqrt.f32(float %13299)
  %13301 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13302 = bitcast i8* %13301 to float*
  %13303 = load float, float* %13302, align 4
  %13304 = fcmp olt float %13303, 0.000000e+00
  %13305 = sext i1 %13304 to i32
  %13306 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13307 = bitcast i8* %13306 to float*
  %13308 = load float, float* %13307, align 4
  %13309 = fcmp ogt float %13308, 0.000000e+00
  %13310 = zext i1 %13309 to i32
  %13311 = add nsw i32 %13305, %13310
  %13312 = sitofp i32 %13311 to float
  %13313 = fneg float %13312
  %13314 = fmul float %13300, %13313
  %13315 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13316 = getelementptr inbounds i8, i8* %13315, i64 4
  %13317 = bitcast i8* %13316 to float*
  %13318 = load float, float* %13317, align 4
  %13319 = fmul float %13314, %13318
  %13320 = fadd float %13281, %13319
  %13321 = fmul float %13277, %13320
  %13322 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13323 = bitcast i8* %13322 to float*
  %13324 = load float, float* %13323, align 4
  %13325 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13326 = getelementptr inbounds i8, i8* %13325, i64 4
  %13327 = bitcast i8* %13326 to float*
  %13328 = load float, float* %13327, align 4
  %13329 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13330 = getelementptr inbounds i8, i8* %13329, i64 4
  %13331 = bitcast i8* %13330 to float*
  %13332 = load float, float* %13331, align 4
  %13333 = fmul float %13328, %13332
  %13334 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13335 = bitcast i8* %13334 to float*
  %13336 = load float, float* %13335, align 4
  %13337 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13338 = bitcast i8* %13337 to float*
  %13339 = load float, float* %13338, align 4
  %13340 = fmul float %13336, %13339
  %13341 = fadd float %13340, 0.000000e+00
  %13342 = fadd float %13333, %13341
  %13343 = call float @llvm.sqrt.f32(float %13342)
  %13344 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13345 = bitcast i8* %13344 to float*
  %13346 = load float, float* %13345, align 4
  %13347 = fcmp olt float %13346, 0.000000e+00
  %13348 = sext i1 %13347 to i32
  %13349 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13350 = bitcast i8* %13349 to float*
  %13351 = load float, float* %13350, align 4
  %13352 = fcmp ogt float %13351, 0.000000e+00
  %13353 = zext i1 %13352 to i32
  %13354 = add nsw i32 %13348, %13353
  %13355 = sitofp i32 %13354 to float
  %13356 = fneg float %13355
  %13357 = fmul float %13343, %13356
  %13358 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13359 = bitcast i8* %13358 to float*
  %13360 = load float, float* %13359, align 4
  %13361 = fmul float %13357, %13360
  %13362 = fadd float %13324, %13361
  %13363 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13364 = bitcast i8* %13363 to float*
  %13365 = load float, float* %13364, align 4
  %13366 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13367 = getelementptr inbounds i8, i8* %13366, i64 4
  %13368 = bitcast i8* %13367 to float*
  %13369 = load float, float* %13368, align 4
  %13370 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13371 = getelementptr inbounds i8, i8* %13370, i64 4
  %13372 = bitcast i8* %13371 to float*
  %13373 = load float, float* %13372, align 4
  %13374 = fmul float %13369, %13373
  %13375 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13376 = bitcast i8* %13375 to float*
  %13377 = load float, float* %13376, align 4
  %13378 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13379 = bitcast i8* %13378 to float*
  %13380 = load float, float* %13379, align 4
  %13381 = fmul float %13377, %13380
  %13382 = fadd float %13381, 0.000000e+00
  %13383 = fadd float %13374, %13382
  %13384 = call float @llvm.sqrt.f32(float %13383)
  %13385 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13386 = bitcast i8* %13385 to float*
  %13387 = load float, float* %13386, align 4
  %13388 = fcmp olt float %13387, 0.000000e+00
  %13389 = sext i1 %13388 to i32
  %13390 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13391 = bitcast i8* %13390 to float*
  %13392 = load float, float* %13391, align 4
  %13393 = fcmp ogt float %13392, 0.000000e+00
  %13394 = zext i1 %13393 to i32
  %13395 = add nsw i32 %13389, %13394
  %13396 = sitofp i32 %13395 to float
  %13397 = fneg float %13396
  %13398 = fmul float %13384, %13397
  %13399 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13400 = bitcast i8* %13399 to float*
  %13401 = load float, float* %13400, align 4
  %13402 = fmul float %13398, %13401
  %13403 = fadd float %13365, %13402
  %13404 = fmul float %13362, %13403
  %13405 = fadd float %13404, 0.000000e+00
  %13406 = fadd float %13321, %13405
  %13407 = call float @llvm.sqrt.f32(float %13406)
  %13408 = fdiv float %13234, %13407
  %13409 = insertelement <4 x float> zeroinitializer, float %13408, i32 0
  %13410 = insertelement <4 x float> %13409, float 0.000000e+00, i32 1
  %13411 = insertelement <4 x float> %13410, float 0.000000e+00, i32 2
  %13412 = insertelement <4 x float> %13411, float 0.000000e+00, i32 3
  %13413 = extractelement <4 x float> %13412, i32 0
  %13414 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13415 = getelementptr inbounds i8, i8* %13414, i64 4
  %13416 = bitcast i8* %13415 to float*
  store float %13413, float* %13416, align 4
  %13417 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13418 = bitcast i8* %13417 to float*
  %13419 = load float, float* %13418, align 4
  %13420 = insertelement <4 x float> zeroinitializer, float %13419, i32 0
  %13421 = insertelement <4 x float> %13420, float 1.000000e+00, i32 1
  %13422 = insertelement <4 x float> %13421, float 1.000000e+00, i32 2
  %13423 = insertelement <4 x float> %13422, float 1.000000e+00, i32 3
  %13424 = fmul <4 x float> %13423, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %13425 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13426 = bitcast i8* %13425 to float*
  %13427 = load float, float* %13426, align 4
  %13428 = insertelement <4 x float> zeroinitializer, float %13427, i32 0
  %13429 = insertelement <4 x float> %13428, float 0.000000e+00, i32 1
  %13430 = insertelement <4 x float> %13429, float 0.000000e+00, i32 2
  %13431 = insertelement <4 x float> %13430, float 0.000000e+00, i32 3
  %13432 = fmul <4 x float> %13424, %13431
  %13433 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %13432
  %13434 = extractelement <4 x float> %13433, i32 0
  %13435 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %13436 = bitcast i8* %13435 to float*
  store float %13434, float* %13436, align 4
  %13437 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13438 = bitcast i8* %13437 to float*
  %13439 = load float, float* %13438, align 4
  %13440 = insertelement <4 x float> zeroinitializer, float %13439, i32 0
  %13441 = insertelement <4 x float> %13440, float 1.000000e+00, i32 1
  %13442 = insertelement <4 x float> %13441, float 1.000000e+00, i32 2
  %13443 = insertelement <4 x float> %13442, float 1.000000e+00, i32 3
  %13444 = fmul <4 x float> %13443, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %13445 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13446 = getelementptr inbounds i8, i8* %13445, i64 4
  %13447 = bitcast i8* %13446 to float*
  %13448 = load float, float* %13447, align 4
  %13449 = insertelement <4 x float> zeroinitializer, float %13448, i32 0
  %13450 = insertelement <4 x float> %13449, float 0.000000e+00, i32 1
  %13451 = insertelement <4 x float> %13450, float 0.000000e+00, i32 2
  %13452 = insertelement <4 x float> %13451, float 0.000000e+00, i32 3
  %13453 = fmul <4 x float> %13444, %13452
  %13454 = fsub <4 x float> zeroinitializer, %13453
  %13455 = extractelement <4 x float> %13454, i32 0
  %13456 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %13457 = getelementptr inbounds i8, i8* %13456, i64 4
  %13458 = bitcast i8* %13457 to float*
  store float %13455, float* %13458, align 4
  %13459 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13460 = getelementptr inbounds i8, i8* %13459, i64 4
  %13461 = bitcast i8* %13460 to float*
  %13462 = load float, float* %13461, align 4
  %13463 = insertelement <4 x float> zeroinitializer, float %13462, i32 0
  %13464 = insertelement <4 x float> %13463, float 1.000000e+00, i32 1
  %13465 = insertelement <4 x float> %13464, float 1.000000e+00, i32 2
  %13466 = insertelement <4 x float> %13465, float 1.000000e+00, i32 3
  %13467 = fmul <4 x float> %13466, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %13468 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13469 = bitcast i8* %13468 to float*
  %13470 = load float, float* %13469, align 4
  %13471 = insertelement <4 x float> zeroinitializer, float %13470, i32 0
  %13472 = insertelement <4 x float> %13471, float 0.000000e+00, i32 1
  %13473 = insertelement <4 x float> %13472, float 0.000000e+00, i32 2
  %13474 = insertelement <4 x float> %13473, float 0.000000e+00, i32 3
  %13475 = fmul <4 x float> %13467, %13474
  %13476 = fsub <4 x float> zeroinitializer, %13475
  %13477 = extractelement <4 x float> %13476, i32 0
  %13478 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %13479 = getelementptr inbounds i8, i8* %13478, i64 8
  %13480 = bitcast i8* %13479 to float*
  store float %13477, float* %13480, align 4
  %13481 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13482 = getelementptr inbounds i8, i8* %13481, i64 4
  %13483 = bitcast i8* %13482 to float*
  %13484 = load float, float* %13483, align 4
  %13485 = fmul float %13484, 2.000000e+00
  %13486 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %13487 = getelementptr inbounds i8, i8* %13486, i64 4
  %13488 = bitcast i8* %13487 to float*
  %13489 = load float, float* %13488, align 4
  %13490 = fmul float %13485, %13489
  %13491 = fsub float 1.000000e+00, %13490
  %13492 = insertelement <4 x float> zeroinitializer, float %13491, i32 0
  %13493 = insertelement <4 x float> %13492, float 1.000000e+00, i32 1
  %13494 = insertelement <4 x float> %13493, float 1.000000e+00, i32 2
  %13495 = insertelement <4 x float> %13494, float 0.000000e+00, i32 3
  %13496 = extractelement <4 x float> %13495, i32 0
  %13497 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %13498 = getelementptr inbounds i8, i8* %13497, i64 12
  %13499 = bitcast i8* %13498 to float*
  store float %13496, float* %13499, align 4
  %13500 = extractelement <4 x float> %13495, i32 1
  %13501 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13502 = bitcast i8* %13501 to float*
  store float %13500, float* %13502, align 4
  %13503 = extractelement <4 x float> %13495, i32 2
  %13504 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13505 = getelementptr inbounds i8, i8* %13504, i64 20
  %13506 = bitcast i8* %13505 to float*
  store float %13503, float* %13506, align 4
  %13507 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %13508 = bitcast i8* %13507 to i32*
  %13509 = load i32, i32* %13508, align 4
  %13510 = sitofp i32 %13509 to float
  %13511 = insertelement <4 x float> zeroinitializer, float %13510, i32 0
  %13512 = insertelement <4 x float> %13511, float 0.000000e+00, i32 1
  %13513 = insertelement <4 x float> %13512, float 0.000000e+00, i32 2
  %13514 = insertelement <4 x float> %13513, float 0.000000e+00, i32 3
  %13515 = extractelement <4 x float> %13514, i32 0
  %13516 = fptosi float %13515 to i32
  %13517 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13518 = getelementptr inbounds i8, i8* %13517, i64 40
  %13519 = bitcast i8* %13518 to i32*
  store i32 %13516, i32* %13519, align 4
  %13520 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %13521 = getelementptr inbounds i8, i8* %13520, i64 4
  %13522 = bitcast i8* %13521 to i32*
  %13523 = load i32, i32* %13522, align 4
  %13524 = sitofp i32 %13523 to float
  %13525 = insertelement <4 x float> zeroinitializer, float %13524, i32 0
  %13526 = insertelement <4 x float> %13525, float 0.000000e+00, i32 1
  %13527 = insertelement <4 x float> %13526, float 0.000000e+00, i32 2
  %13528 = insertelement <4 x float> %13527, float 0.000000e+00, i32 3
  %13529 = extractelement <4 x float> %13528, i32 0
  %13530 = fptosi float %13529 to i32
  %13531 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13532 = getelementptr inbounds i8, i8* %13531, i64 44
  %13533 = bitcast i8* %13532 to i32*
  store i32 %13530, i32* %13533, align 4
  %13534 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %13535 = getelementptr inbounds i8, i8* %13534, i64 8
  %13536 = bitcast i8* %13535 to i32*
  %13537 = load i32, i32* %13536, align 4
  %13538 = sitofp i32 %13537 to float
  %13539 = insertelement <4 x float> zeroinitializer, float %13538, i32 0
  %13540 = insertelement <4 x float> %13539, float 0.000000e+00, i32 1
  %13541 = insertelement <4 x float> %13540, float 0.000000e+00, i32 2
  %13542 = insertelement <4 x float> %13541, float 0.000000e+00, i32 3
  %13543 = extractelement <4 x float> %13542, i32 0
  %13544 = fptosi float %13543 to i32
  %13545 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13546 = getelementptr inbounds i8, i8* %13545, i64 56
  %13547 = bitcast i8* %13546 to i32*
  store i32 %13544, i32* %13547, align 4
  %13548 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %13549 = getelementptr inbounds i8, i8* %13548, i64 12
  %13550 = bitcast i8* %13549 to i32*
  %13551 = load i32, i32* %13550, align 4
  %13552 = sitofp i32 %13551 to float
  %13553 = insertelement <4 x float> zeroinitializer, float %13552, i32 0
  %13554 = insertelement <4 x float> %13553, float 0.000000e+00, i32 1
  %13555 = insertelement <4 x float> %13554, float 0.000000e+00, i32 2
  %13556 = insertelement <4 x float> %13555, float 0.000000e+00, i32 3
  %13557 = extractelement <4 x float> %13556, i32 0
  %13558 = fptosi float %13557 to i32
  %13559 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13560 = getelementptr inbounds i8, i8* %13559, i64 60
  %13561 = bitcast i8* %13560 to i32*
  store i32 %13558, i32* %13561, align 4
  %13562 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13563 = bitcast i8* %13562 to float*
  %13564 = load float, float* %13563, align 4
  %13565 = insertelement <4 x float> zeroinitializer, float %13564, i32 0
  %13566 = insertelement <4 x float> %13565, float 0.000000e+00, i32 1
  %13567 = insertelement <4 x float> %13566, float 0.000000e+00, i32 2
  %13568 = insertelement <4 x float> %13567, float 0.000000e+00, i32 3
  %13569 = load float, float* %1, align 4
  %13570 = insertelement <4 x float> zeroinitializer, float %13569, i32 0
  %13571 = insertelement <4 x float> %13570, float 0.000000e+00, i32 1
  %13572 = insertelement <4 x float> %13571, float 0.000000e+00, i32 2
  %13573 = insertelement <4 x float> %13572, float 0.000000e+00, i32 3
  %13574 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13568, <4 x float> %13573, <4 x float> zeroinitializer)
  %13575 = extractelement <4 x float> %13574, i32 0
  %13576 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13577 = bitcast i8* %13576 to float*
  store float %13575, float* %13577, align 4
  %13578 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13579 = bitcast i8* %13578 to float*
  %13580 = load float, float* %13579, align 4
  %13581 = insertelement <4 x float> zeroinitializer, float %13580, i32 0
  %13582 = insertelement <4 x float> %13581, float 1.000000e+00, i32 1
  %13583 = insertelement <4 x float> %13582, float 1.000000e+00, i32 2
  %13584 = insertelement <4 x float> %13583, float 1.000000e+00, i32 3
  %13585 = load float, float* %1, align 4
  %13586 = insertelement <4 x float> zeroinitializer, float %13585, i32 0
  %13587 = insertelement <4 x float> %13586, float 0.000000e+00, i32 1
  %13588 = insertelement <4 x float> %13587, float 0.000000e+00, i32 2
  %13589 = insertelement <4 x float> %13588, float 0.000000e+00, i32 3
  %13590 = fmul <4 x float> %13584, %13589
  %13591 = fadd <4 x float> %13590, zeroinitializer
  %13592 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13593 = getelementptr inbounds i8, i8* %13592, i64 4
  %13594 = bitcast i8* %13593 to float*
  %13595 = load float, float* %13594, align 4
  %13596 = insertelement <4 x float> zeroinitializer, float %13595, i32 0
  %13597 = insertelement <4 x float> %13596, float 0.000000e+00, i32 1
  %13598 = insertelement <4 x float> %13597, float 0.000000e+00, i32 2
  %13599 = insertelement <4 x float> %13598, float 0.000000e+00, i32 3
  %13600 = getelementptr inbounds float, float* %1, i64 4
  %13601 = load float, float* %13600, align 4
  %13602 = insertelement <4 x float> zeroinitializer, float %13601, i32 0
  %13603 = insertelement <4 x float> %13602, float 0.000000e+00, i32 1
  %13604 = insertelement <4 x float> %13603, float 0.000000e+00, i32 2
  %13605 = insertelement <4 x float> %13604, float 0.000000e+00, i32 3
  %13606 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13599, <4 x float> %13605, <4 x float> %13591)
  %13607 = extractelement <4 x float> %13606, i32 0
  %13608 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13609 = bitcast i8* %13608 to float*
  store float %13607, float* %13609, align 4
  %13610 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13611 = bitcast i8* %13610 to float*
  %13612 = load float, float* %13611, align 4
  %13613 = insertelement <4 x float> zeroinitializer, float %13612, i32 0
  %13614 = insertelement <4 x float> %13613, float 1.000000e+00, i32 1
  %13615 = insertelement <4 x float> %13614, float 1.000000e+00, i32 2
  %13616 = insertelement <4 x float> %13615, float 1.000000e+00, i32 3
  %13617 = load float, float* %1, align 4
  %13618 = insertelement <4 x float> zeroinitializer, float %13617, i32 0
  %13619 = insertelement <4 x float> %13618, float 0.000000e+00, i32 1
  %13620 = insertelement <4 x float> %13619, float 0.000000e+00, i32 2
  %13621 = insertelement <4 x float> %13620, float 0.000000e+00, i32 3
  %13622 = fmul <4 x float> %13616, %13621
  %13623 = fadd <4 x float> %13622, zeroinitializer
  %13624 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13625 = getelementptr inbounds i8, i8* %13624, i64 4
  %13626 = bitcast i8* %13625 to float*
  %13627 = load float, float* %13626, align 4
  %13628 = insertelement <4 x float> zeroinitializer, float %13627, i32 0
  %13629 = insertelement <4 x float> %13628, float 1.000000e+00, i32 1
  %13630 = insertelement <4 x float> %13629, float 1.000000e+00, i32 2
  %13631 = insertelement <4 x float> %13630, float 1.000000e+00, i32 3
  %13632 = getelementptr inbounds float, float* %1, i64 4
  %13633 = load float, float* %13632, align 4
  %13634 = insertelement <4 x float> zeroinitializer, float %13633, i32 0
  %13635 = insertelement <4 x float> %13634, float 0.000000e+00, i32 1
  %13636 = insertelement <4 x float> %13635, float 0.000000e+00, i32 2
  %13637 = insertelement <4 x float> %13636, float 0.000000e+00, i32 3
  %13638 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13631, <4 x float> %13637, <4 x float> %13623)
  %13639 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13640 = getelementptr inbounds i8, i8* %13639, i64 8
  %13641 = bitcast i8* %13640 to float*
  %13642 = load float, float* %13641, align 4
  %13643 = insertelement <4 x float> zeroinitializer, float %13642, i32 0
  %13644 = insertelement <4 x float> %13643, float 0.000000e+00, i32 1
  %13645 = insertelement <4 x float> %13644, float 0.000000e+00, i32 2
  %13646 = insertelement <4 x float> %13645, float 0.000000e+00, i32 3
  %13647 = getelementptr inbounds float, float* %1, i64 8
  %13648 = load float, float* %13647, align 4
  %13649 = insertelement <4 x float> zeroinitializer, float %13648, i32 0
  %13650 = insertelement <4 x float> %13649, float 0.000000e+00, i32 1
  %13651 = insertelement <4 x float> %13650, float 0.000000e+00, i32 2
  %13652 = insertelement <4 x float> %13651, float 0.000000e+00, i32 3
  %13653 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13646, <4 x float> %13652, <4 x float> %13638)
  %13654 = extractelement <4 x float> %13653, i32 0
  %13655 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13656 = bitcast i8* %13655 to float*
  store float %13654, float* %13656, align 4
  %13657 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13658 = bitcast i8* %13657 to float*
  %13659 = load float, float* %13658, align 4
  %13660 = insertelement <4 x float> zeroinitializer, float %13659, i32 0
  %13661 = insertelement <4 x float> %13660, float 1.000000e+00, i32 1
  %13662 = insertelement <4 x float> %13661, float 1.000000e+00, i32 2
  %13663 = insertelement <4 x float> %13662, float 1.000000e+00, i32 3
  %13664 = load float, float* %1, align 4
  %13665 = insertelement <4 x float> zeroinitializer, float %13664, i32 0
  %13666 = insertelement <4 x float> %13665, float 0.000000e+00, i32 1
  %13667 = insertelement <4 x float> %13666, float 0.000000e+00, i32 2
  %13668 = insertelement <4 x float> %13667, float 0.000000e+00, i32 3
  %13669 = fmul <4 x float> %13663, %13668
  %13670 = fadd <4 x float> %13669, zeroinitializer
  %13671 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13672 = getelementptr inbounds i8, i8* %13671, i64 4
  %13673 = bitcast i8* %13672 to float*
  %13674 = load float, float* %13673, align 4
  %13675 = insertelement <4 x float> zeroinitializer, float %13674, i32 0
  %13676 = insertelement <4 x float> %13675, float 1.000000e+00, i32 1
  %13677 = insertelement <4 x float> %13676, float 1.000000e+00, i32 2
  %13678 = insertelement <4 x float> %13677, float 1.000000e+00, i32 3
  %13679 = getelementptr inbounds float, float* %1, i64 4
  %13680 = load float, float* %13679, align 4
  %13681 = insertelement <4 x float> zeroinitializer, float %13680, i32 0
  %13682 = insertelement <4 x float> %13681, float 0.000000e+00, i32 1
  %13683 = insertelement <4 x float> %13682, float 0.000000e+00, i32 2
  %13684 = insertelement <4 x float> %13683, float 0.000000e+00, i32 3
  %13685 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13678, <4 x float> %13684, <4 x float> %13670)
  %13686 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13687 = getelementptr inbounds i8, i8* %13686, i64 8
  %13688 = bitcast i8* %13687 to float*
  %13689 = load float, float* %13688, align 4
  %13690 = insertelement <4 x float> zeroinitializer, float %13689, i32 0
  %13691 = insertelement <4 x float> %13690, float 1.000000e+00, i32 1
  %13692 = insertelement <4 x float> %13691, float 1.000000e+00, i32 2
  %13693 = insertelement <4 x float> %13692, float 1.000000e+00, i32 3
  %13694 = getelementptr inbounds float, float* %1, i64 8
  %13695 = load float, float* %13694, align 4
  %13696 = insertelement <4 x float> zeroinitializer, float %13695, i32 0
  %13697 = insertelement <4 x float> %13696, float 0.000000e+00, i32 1
  %13698 = insertelement <4 x float> %13697, float 0.000000e+00, i32 2
  %13699 = insertelement <4 x float> %13698, float 0.000000e+00, i32 3
  %13700 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13693, <4 x float> %13699, <4 x float> %13685)
  %13701 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13702 = getelementptr inbounds i8, i8* %13701, i64 12
  %13703 = bitcast i8* %13702 to float*
  %13704 = load float, float* %13703, align 4
  %13705 = insertelement <4 x float> zeroinitializer, float %13704, i32 0
  %13706 = insertelement <4 x float> %13705, float 0.000000e+00, i32 1
  %13707 = insertelement <4 x float> %13706, float 0.000000e+00, i32 2
  %13708 = insertelement <4 x float> %13707, float 0.000000e+00, i32 3
  %13709 = getelementptr inbounds float, float* %1, i64 12
  %13710 = load float, float* %13709, align 4
  %13711 = insertelement <4 x float> zeroinitializer, float %13710, i32 0
  %13712 = insertelement <4 x float> %13711, float 0.000000e+00, i32 1
  %13713 = insertelement <4 x float> %13712, float 0.000000e+00, i32 2
  %13714 = insertelement <4 x float> %13713, float 0.000000e+00, i32 3
  %13715 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13708, <4 x float> %13714, <4 x float> %13700)
  %13716 = extractelement <4 x float> %13715, i32 0
  %13717 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13718 = bitcast i8* %13717 to float*
  store float %13716, float* %13718, align 4
  %13719 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13720 = bitcast i8* %13719 to float*
  %13721 = load float, float* %13720, align 4
  %13722 = insertelement <4 x float> zeroinitializer, float %13721, i32 0
  %13723 = insertelement <4 x float> %13722, float 0.000000e+00, i32 1
  %13724 = insertelement <4 x float> %13723, float 0.000000e+00, i32 2
  %13725 = insertelement <4 x float> %13724, float 0.000000e+00, i32 3
  %13726 = getelementptr inbounds float, float* %1, i64 1
  %13727 = load float, float* %13726, align 4
  %13728 = insertelement <4 x float> zeroinitializer, float %13727, i32 0
  %13729 = insertelement <4 x float> %13728, float 0.000000e+00, i32 1
  %13730 = insertelement <4 x float> %13729, float 0.000000e+00, i32 2
  %13731 = insertelement <4 x float> %13730, float 0.000000e+00, i32 3
  %13732 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13725, <4 x float> %13731, <4 x float> zeroinitializer)
  %13733 = extractelement <4 x float> %13732, i32 0
  %13734 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13735 = getelementptr inbounds i8, i8* %13734, i64 4
  %13736 = bitcast i8* %13735 to float*
  store float %13733, float* %13736, align 4
  %13737 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13738 = bitcast i8* %13737 to float*
  %13739 = load float, float* %13738, align 4
  %13740 = insertelement <4 x float> zeroinitializer, float %13739, i32 0
  %13741 = insertelement <4 x float> %13740, float 1.000000e+00, i32 1
  %13742 = insertelement <4 x float> %13741, float 1.000000e+00, i32 2
  %13743 = insertelement <4 x float> %13742, float 1.000000e+00, i32 3
  %13744 = getelementptr inbounds float, float* %1, i64 1
  %13745 = load float, float* %13744, align 4
  %13746 = insertelement <4 x float> zeroinitializer, float %13745, i32 0
  %13747 = insertelement <4 x float> %13746, float 0.000000e+00, i32 1
  %13748 = insertelement <4 x float> %13747, float 0.000000e+00, i32 2
  %13749 = insertelement <4 x float> %13748, float 0.000000e+00, i32 3
  %13750 = fmul <4 x float> %13743, %13749
  %13751 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13752 = getelementptr inbounds i8, i8* %13751, i64 4
  %13753 = bitcast i8* %13752 to float*
  %13754 = load float, float* %13753, align 4
  %13755 = insertelement <4 x float> zeroinitializer, float %13754, i32 0
  %13756 = insertelement <4 x float> %13755, float 0.000000e+00, i32 1
  %13757 = insertelement <4 x float> %13756, float 0.000000e+00, i32 2
  %13758 = insertelement <4 x float> %13757, float 0.000000e+00, i32 3
  %13759 = getelementptr inbounds float, float* %1, i64 5
  %13760 = load float, float* %13759, align 4
  %13761 = insertelement <4 x float> zeroinitializer, float %13760, i32 0
  %13762 = insertelement <4 x float> %13761, float 0.000000e+00, i32 1
  %13763 = insertelement <4 x float> %13762, float 0.000000e+00, i32 2
  %13764 = insertelement <4 x float> %13763, float 0.000000e+00, i32 3
  %13765 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13758, <4 x float> %13764, <4 x float> %13750)
  %13766 = extractelement <4 x float> %13765, i32 0
  %13767 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13768 = getelementptr inbounds i8, i8* %13767, i64 4
  %13769 = bitcast i8* %13768 to float*
  store float %13766, float* %13769, align 4
  %13770 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13771 = bitcast i8* %13770 to float*
  %13772 = load float, float* %13771, align 4
  %13773 = insertelement <4 x float> zeroinitializer, float %13772, i32 0
  %13774 = insertelement <4 x float> %13773, float 1.000000e+00, i32 1
  %13775 = insertelement <4 x float> %13774, float 1.000000e+00, i32 2
  %13776 = insertelement <4 x float> %13775, float 1.000000e+00, i32 3
  %13777 = getelementptr inbounds float, float* %1, i64 1
  %13778 = load float, float* %13777, align 4
  %13779 = insertelement <4 x float> zeroinitializer, float %13778, i32 0
  %13780 = insertelement <4 x float> %13779, float 0.000000e+00, i32 1
  %13781 = insertelement <4 x float> %13780, float 0.000000e+00, i32 2
  %13782 = insertelement <4 x float> %13781, float 0.000000e+00, i32 3
  %13783 = fmul <4 x float> %13776, %13782
  %13784 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13785 = getelementptr inbounds i8, i8* %13784, i64 4
  %13786 = bitcast i8* %13785 to float*
  %13787 = load float, float* %13786, align 4
  %13788 = insertelement <4 x float> zeroinitializer, float %13787, i32 0
  %13789 = insertelement <4 x float> %13788, float 1.000000e+00, i32 1
  %13790 = insertelement <4 x float> %13789, float 1.000000e+00, i32 2
  %13791 = insertelement <4 x float> %13790, float 1.000000e+00, i32 3
  %13792 = getelementptr inbounds float, float* %1, i64 5
  %13793 = load float, float* %13792, align 4
  %13794 = insertelement <4 x float> zeroinitializer, float %13793, i32 0
  %13795 = insertelement <4 x float> %13794, float 0.000000e+00, i32 1
  %13796 = insertelement <4 x float> %13795, float 0.000000e+00, i32 2
  %13797 = insertelement <4 x float> %13796, float 0.000000e+00, i32 3
  %13798 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13791, <4 x float> %13797, <4 x float> %13783)
  %13799 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13800 = getelementptr inbounds i8, i8* %13799, i64 8
  %13801 = bitcast i8* %13800 to float*
  %13802 = load float, float* %13801, align 4
  %13803 = insertelement <4 x float> zeroinitializer, float %13802, i32 0
  %13804 = insertelement <4 x float> %13803, float 0.000000e+00, i32 1
  %13805 = insertelement <4 x float> %13804, float 0.000000e+00, i32 2
  %13806 = insertelement <4 x float> %13805, float 0.000000e+00, i32 3
  %13807 = getelementptr inbounds float, float* %1, i64 9
  %13808 = load float, float* %13807, align 4
  %13809 = insertelement <4 x float> zeroinitializer, float %13808, i32 0
  %13810 = insertelement <4 x float> %13809, float 0.000000e+00, i32 1
  %13811 = insertelement <4 x float> %13810, float 0.000000e+00, i32 2
  %13812 = insertelement <4 x float> %13811, float 0.000000e+00, i32 3
  %13813 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13806, <4 x float> %13812, <4 x float> %13798)
  %13814 = extractelement <4 x float> %13813, i32 0
  %13815 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13816 = getelementptr inbounds i8, i8* %13815, i64 4
  %13817 = bitcast i8* %13816 to float*
  store float %13814, float* %13817, align 4
  %13818 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13819 = bitcast i8* %13818 to float*
  %13820 = load float, float* %13819, align 4
  %13821 = insertelement <4 x float> zeroinitializer, float %13820, i32 0
  %13822 = insertelement <4 x float> %13821, float 1.000000e+00, i32 1
  %13823 = insertelement <4 x float> %13822, float 1.000000e+00, i32 2
  %13824 = insertelement <4 x float> %13823, float 1.000000e+00, i32 3
  %13825 = getelementptr inbounds float, float* %1, i64 1
  %13826 = load float, float* %13825, align 4
  %13827 = insertelement <4 x float> zeroinitializer, float %13826, i32 0
  %13828 = insertelement <4 x float> %13827, float 0.000000e+00, i32 1
  %13829 = insertelement <4 x float> %13828, float 0.000000e+00, i32 2
  %13830 = insertelement <4 x float> %13829, float 0.000000e+00, i32 3
  %13831 = fmul <4 x float> %13824, %13830
  %13832 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13833 = getelementptr inbounds i8, i8* %13832, i64 4
  %13834 = bitcast i8* %13833 to float*
  %13835 = load float, float* %13834, align 4
  %13836 = insertelement <4 x float> zeroinitializer, float %13835, i32 0
  %13837 = insertelement <4 x float> %13836, float 1.000000e+00, i32 1
  %13838 = insertelement <4 x float> %13837, float 1.000000e+00, i32 2
  %13839 = insertelement <4 x float> %13838, float 1.000000e+00, i32 3
  %13840 = getelementptr inbounds float, float* %1, i64 5
  %13841 = load float, float* %13840, align 4
  %13842 = insertelement <4 x float> zeroinitializer, float %13841, i32 0
  %13843 = insertelement <4 x float> %13842, float 0.000000e+00, i32 1
  %13844 = insertelement <4 x float> %13843, float 0.000000e+00, i32 2
  %13845 = insertelement <4 x float> %13844, float 0.000000e+00, i32 3
  %13846 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13839, <4 x float> %13845, <4 x float> %13831)
  %13847 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13848 = getelementptr inbounds i8, i8* %13847, i64 8
  %13849 = bitcast i8* %13848 to float*
  %13850 = load float, float* %13849, align 4
  %13851 = insertelement <4 x float> zeroinitializer, float %13850, i32 0
  %13852 = insertelement <4 x float> %13851, float 1.000000e+00, i32 1
  %13853 = insertelement <4 x float> %13852, float 1.000000e+00, i32 2
  %13854 = insertelement <4 x float> %13853, float 1.000000e+00, i32 3
  %13855 = getelementptr inbounds float, float* %1, i64 9
  %13856 = load float, float* %13855, align 4
  %13857 = insertelement <4 x float> zeroinitializer, float %13856, i32 0
  %13858 = insertelement <4 x float> %13857, float 0.000000e+00, i32 1
  %13859 = insertelement <4 x float> %13858, float 0.000000e+00, i32 2
  %13860 = insertelement <4 x float> %13859, float 0.000000e+00, i32 3
  %13861 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13854, <4 x float> %13860, <4 x float> %13846)
  %13862 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13863 = getelementptr inbounds i8, i8* %13862, i64 12
  %13864 = bitcast i8* %13863 to float*
  %13865 = load float, float* %13864, align 4
  %13866 = insertelement <4 x float> zeroinitializer, float %13865, i32 0
  %13867 = insertelement <4 x float> %13866, float 0.000000e+00, i32 1
  %13868 = insertelement <4 x float> %13867, float 0.000000e+00, i32 2
  %13869 = insertelement <4 x float> %13868, float 0.000000e+00, i32 3
  %13870 = getelementptr inbounds float, float* %1, i64 13
  %13871 = load float, float* %13870, align 4
  %13872 = insertelement <4 x float> zeroinitializer, float %13871, i32 0
  %13873 = insertelement <4 x float> %13872, float 0.000000e+00, i32 1
  %13874 = insertelement <4 x float> %13873, float 0.000000e+00, i32 2
  %13875 = insertelement <4 x float> %13874, float 0.000000e+00, i32 3
  %13876 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13869, <4 x float> %13875, <4 x float> %13861)
  %13877 = extractelement <4 x float> %13876, i32 0
  %13878 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13879 = getelementptr inbounds i8, i8* %13878, i64 4
  %13880 = bitcast i8* %13879 to float*
  store float %13877, float* %13880, align 4
  %13881 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13882 = bitcast i8* %13881 to float*
  %13883 = load float, float* %13882, align 4
  %13884 = insertelement <4 x float> zeroinitializer, float %13883, i32 0
  %13885 = insertelement <4 x float> %13884, float 0.000000e+00, i32 1
  %13886 = insertelement <4 x float> %13885, float 0.000000e+00, i32 2
  %13887 = insertelement <4 x float> %13886, float 0.000000e+00, i32 3
  %13888 = getelementptr inbounds float, float* %1, i64 2
  %13889 = load float, float* %13888, align 4
  %13890 = insertelement <4 x float> zeroinitializer, float %13889, i32 0
  %13891 = insertelement <4 x float> %13890, float 0.000000e+00, i32 1
  %13892 = insertelement <4 x float> %13891, float 0.000000e+00, i32 2
  %13893 = insertelement <4 x float> %13892, float 0.000000e+00, i32 3
  %13894 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13887, <4 x float> %13893, <4 x float> zeroinitializer)
  %13895 = extractelement <4 x float> %13894, i32 0
  %13896 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13897 = getelementptr inbounds i8, i8* %13896, i64 8
  %13898 = bitcast i8* %13897 to float*
  store float %13895, float* %13898, align 4
  %13899 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13900 = bitcast i8* %13899 to float*
  %13901 = load float, float* %13900, align 4
  %13902 = insertelement <4 x float> zeroinitializer, float %13901, i32 0
  %13903 = insertelement <4 x float> %13902, float 1.000000e+00, i32 1
  %13904 = insertelement <4 x float> %13903, float 1.000000e+00, i32 2
  %13905 = insertelement <4 x float> %13904, float 1.000000e+00, i32 3
  %13906 = getelementptr inbounds float, float* %1, i64 2
  %13907 = load float, float* %13906, align 4
  %13908 = insertelement <4 x float> zeroinitializer, float %13907, i32 0
  %13909 = insertelement <4 x float> %13908, float 0.000000e+00, i32 1
  %13910 = insertelement <4 x float> %13909, float 0.000000e+00, i32 2
  %13911 = insertelement <4 x float> %13910, float 0.000000e+00, i32 3
  %13912 = fmul <4 x float> %13905, %13911
  %13913 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13914 = getelementptr inbounds i8, i8* %13913, i64 4
  %13915 = bitcast i8* %13914 to float*
  %13916 = load float, float* %13915, align 4
  %13917 = insertelement <4 x float> zeroinitializer, float %13916, i32 0
  %13918 = insertelement <4 x float> %13917, float 0.000000e+00, i32 1
  %13919 = insertelement <4 x float> %13918, float 0.000000e+00, i32 2
  %13920 = insertelement <4 x float> %13919, float 0.000000e+00, i32 3
  %13921 = getelementptr inbounds float, float* %1, i64 6
  %13922 = load float, float* %13921, align 4
  %13923 = insertelement <4 x float> zeroinitializer, float %13922, i32 0
  %13924 = insertelement <4 x float> %13923, float 0.000000e+00, i32 1
  %13925 = insertelement <4 x float> %13924, float 0.000000e+00, i32 2
  %13926 = insertelement <4 x float> %13925, float 0.000000e+00, i32 3
  %13927 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13920, <4 x float> %13926, <4 x float> %13912)
  %13928 = extractelement <4 x float> %13927, i32 0
  %13929 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13930 = getelementptr inbounds i8, i8* %13929, i64 8
  %13931 = bitcast i8* %13930 to float*
  store float %13928, float* %13931, align 4
  %13932 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13933 = bitcast i8* %13932 to float*
  %13934 = load float, float* %13933, align 4
  %13935 = insertelement <4 x float> zeroinitializer, float %13934, i32 0
  %13936 = insertelement <4 x float> %13935, float 1.000000e+00, i32 1
  %13937 = insertelement <4 x float> %13936, float 1.000000e+00, i32 2
  %13938 = insertelement <4 x float> %13937, float 1.000000e+00, i32 3
  %13939 = getelementptr inbounds float, float* %1, i64 2
  %13940 = load float, float* %13939, align 4
  %13941 = insertelement <4 x float> zeroinitializer, float %13940, i32 0
  %13942 = insertelement <4 x float> %13941, float 0.000000e+00, i32 1
  %13943 = insertelement <4 x float> %13942, float 0.000000e+00, i32 2
  %13944 = insertelement <4 x float> %13943, float 0.000000e+00, i32 3
  %13945 = fmul <4 x float> %13938, %13944
  %13946 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13947 = getelementptr inbounds i8, i8* %13946, i64 4
  %13948 = bitcast i8* %13947 to float*
  %13949 = load float, float* %13948, align 4
  %13950 = insertelement <4 x float> zeroinitializer, float %13949, i32 0
  %13951 = insertelement <4 x float> %13950, float 1.000000e+00, i32 1
  %13952 = insertelement <4 x float> %13951, float 1.000000e+00, i32 2
  %13953 = insertelement <4 x float> %13952, float 1.000000e+00, i32 3
  %13954 = getelementptr inbounds float, float* %1, i64 6
  %13955 = load float, float* %13954, align 4
  %13956 = insertelement <4 x float> zeroinitializer, float %13955, i32 0
  %13957 = insertelement <4 x float> %13956, float 0.000000e+00, i32 1
  %13958 = insertelement <4 x float> %13957, float 0.000000e+00, i32 2
  %13959 = insertelement <4 x float> %13958, float 0.000000e+00, i32 3
  %13960 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13953, <4 x float> %13959, <4 x float> %13945)
  %13961 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13962 = getelementptr inbounds i8, i8* %13961, i64 8
  %13963 = bitcast i8* %13962 to float*
  %13964 = load float, float* %13963, align 4
  %13965 = insertelement <4 x float> zeroinitializer, float %13964, i32 0
  %13966 = insertelement <4 x float> %13965, float 0.000000e+00, i32 1
  %13967 = insertelement <4 x float> %13966, float 0.000000e+00, i32 2
  %13968 = insertelement <4 x float> %13967, float 0.000000e+00, i32 3
  %13969 = getelementptr inbounds float, float* %1, i64 10
  %13970 = load float, float* %13969, align 4
  %13971 = insertelement <4 x float> zeroinitializer, float %13970, i32 0
  %13972 = insertelement <4 x float> %13971, float 0.000000e+00, i32 1
  %13973 = insertelement <4 x float> %13972, float 0.000000e+00, i32 2
  %13974 = insertelement <4 x float> %13973, float 0.000000e+00, i32 3
  %13975 = call <4 x float> @llvm.fma.v4f32(<4 x float> %13968, <4 x float> %13974, <4 x float> %13960)
  %13976 = extractelement <4 x float> %13975, i32 0
  %13977 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13978 = getelementptr inbounds i8, i8* %13977, i64 8
  %13979 = bitcast i8* %13978 to float*
  store float %13976, float* %13979, align 4
  %13980 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13981 = bitcast i8* %13980 to float*
  %13982 = load float, float* %13981, align 4
  %13983 = insertelement <4 x float> zeroinitializer, float %13982, i32 0
  %13984 = insertelement <4 x float> %13983, float 1.000000e+00, i32 1
  %13985 = insertelement <4 x float> %13984, float 1.000000e+00, i32 2
  %13986 = insertelement <4 x float> %13985, float 1.000000e+00, i32 3
  %13987 = getelementptr inbounds float, float* %1, i64 2
  %13988 = load float, float* %13987, align 4
  %13989 = insertelement <4 x float> zeroinitializer, float %13988, i32 0
  %13990 = insertelement <4 x float> %13989, float 0.000000e+00, i32 1
  %13991 = insertelement <4 x float> %13990, float 0.000000e+00, i32 2
  %13992 = insertelement <4 x float> %13991, float 0.000000e+00, i32 3
  %13993 = fmul <4 x float> %13986, %13992
  %13994 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13995 = getelementptr inbounds i8, i8* %13994, i64 4
  %13996 = bitcast i8* %13995 to float*
  %13997 = load float, float* %13996, align 4
  %13998 = insertelement <4 x float> zeroinitializer, float %13997, i32 0
  %13999 = insertelement <4 x float> %13998, float 1.000000e+00, i32 1
  %14000 = insertelement <4 x float> %13999, float 1.000000e+00, i32 2
  %14001 = insertelement <4 x float> %14000, float 1.000000e+00, i32 3
  %14002 = getelementptr inbounds float, float* %1, i64 6
  %14003 = load float, float* %14002, align 4
  %14004 = insertelement <4 x float> zeroinitializer, float %14003, i32 0
  %14005 = insertelement <4 x float> %14004, float 0.000000e+00, i32 1
  %14006 = insertelement <4 x float> %14005, float 0.000000e+00, i32 2
  %14007 = insertelement <4 x float> %14006, float 0.000000e+00, i32 3
  %14008 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14001, <4 x float> %14007, <4 x float> %13993)
  %14009 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14010 = getelementptr inbounds i8, i8* %14009, i64 8
  %14011 = bitcast i8* %14010 to float*
  %14012 = load float, float* %14011, align 4
  %14013 = insertelement <4 x float> zeroinitializer, float %14012, i32 0
  %14014 = insertelement <4 x float> %14013, float 1.000000e+00, i32 1
  %14015 = insertelement <4 x float> %14014, float 1.000000e+00, i32 2
  %14016 = insertelement <4 x float> %14015, float 1.000000e+00, i32 3
  %14017 = getelementptr inbounds float, float* %1, i64 10
  %14018 = load float, float* %14017, align 4
  %14019 = insertelement <4 x float> zeroinitializer, float %14018, i32 0
  %14020 = insertelement <4 x float> %14019, float 0.000000e+00, i32 1
  %14021 = insertelement <4 x float> %14020, float 0.000000e+00, i32 2
  %14022 = insertelement <4 x float> %14021, float 0.000000e+00, i32 3
  %14023 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14016, <4 x float> %14022, <4 x float> %14008)
  %14024 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14025 = getelementptr inbounds i8, i8* %14024, i64 12
  %14026 = bitcast i8* %14025 to float*
  %14027 = load float, float* %14026, align 4
  %14028 = insertelement <4 x float> zeroinitializer, float %14027, i32 0
  %14029 = insertelement <4 x float> %14028, float 0.000000e+00, i32 1
  %14030 = insertelement <4 x float> %14029, float 0.000000e+00, i32 2
  %14031 = insertelement <4 x float> %14030, float 0.000000e+00, i32 3
  %14032 = getelementptr inbounds float, float* %1, i64 14
  %14033 = load float, float* %14032, align 4
  %14034 = insertelement <4 x float> zeroinitializer, float %14033, i32 0
  %14035 = insertelement <4 x float> %14034, float 0.000000e+00, i32 1
  %14036 = insertelement <4 x float> %14035, float 0.000000e+00, i32 2
  %14037 = insertelement <4 x float> %14036, float 0.000000e+00, i32 3
  %14038 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14031, <4 x float> %14037, <4 x float> %14023)
  %14039 = extractelement <4 x float> %14038, i32 0
  %14040 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14041 = getelementptr inbounds i8, i8* %14040, i64 8
  %14042 = bitcast i8* %14041 to float*
  store float %14039, float* %14042, align 4
  %14043 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14044 = bitcast i8* %14043 to float*
  %14045 = load float, float* %14044, align 4
  %14046 = insertelement <4 x float> zeroinitializer, float %14045, i32 0
  %14047 = insertelement <4 x float> %14046, float 0.000000e+00, i32 1
  %14048 = insertelement <4 x float> %14047, float 0.000000e+00, i32 2
  %14049 = insertelement <4 x float> %14048, float 0.000000e+00, i32 3
  %14050 = getelementptr inbounds float, float* %1, i64 3
  %14051 = load float, float* %14050, align 4
  %14052 = insertelement <4 x float> zeroinitializer, float %14051, i32 0
  %14053 = insertelement <4 x float> %14052, float 0.000000e+00, i32 1
  %14054 = insertelement <4 x float> %14053, float 0.000000e+00, i32 2
  %14055 = insertelement <4 x float> %14054, float 0.000000e+00, i32 3
  %14056 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14049, <4 x float> %14055, <4 x float> zeroinitializer)
  %14057 = extractelement <4 x float> %14056, i32 0
  %14058 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14059 = getelementptr inbounds i8, i8* %14058, i64 12
  %14060 = bitcast i8* %14059 to float*
  store float %14057, float* %14060, align 4
  %14061 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14062 = bitcast i8* %14061 to float*
  %14063 = load float, float* %14062, align 4
  %14064 = insertelement <4 x float> zeroinitializer, float %14063, i32 0
  %14065 = insertelement <4 x float> %14064, float 1.000000e+00, i32 1
  %14066 = insertelement <4 x float> %14065, float 1.000000e+00, i32 2
  %14067 = insertelement <4 x float> %14066, float 1.000000e+00, i32 3
  %14068 = getelementptr inbounds float, float* %1, i64 3
  %14069 = load float, float* %14068, align 4
  %14070 = insertelement <4 x float> zeroinitializer, float %14069, i32 0
  %14071 = insertelement <4 x float> %14070, float 0.000000e+00, i32 1
  %14072 = insertelement <4 x float> %14071, float 0.000000e+00, i32 2
  %14073 = insertelement <4 x float> %14072, float 0.000000e+00, i32 3
  %14074 = fmul <4 x float> %14067, %14073
  %14075 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14076 = getelementptr inbounds i8, i8* %14075, i64 4
  %14077 = bitcast i8* %14076 to float*
  %14078 = load float, float* %14077, align 4
  %14079 = insertelement <4 x float> zeroinitializer, float %14078, i32 0
  %14080 = insertelement <4 x float> %14079, float 0.000000e+00, i32 1
  %14081 = insertelement <4 x float> %14080, float 0.000000e+00, i32 2
  %14082 = insertelement <4 x float> %14081, float 0.000000e+00, i32 3
  %14083 = getelementptr inbounds float, float* %1, i64 7
  %14084 = load float, float* %14083, align 4
  %14085 = insertelement <4 x float> zeroinitializer, float %14084, i32 0
  %14086 = insertelement <4 x float> %14085, float 0.000000e+00, i32 1
  %14087 = insertelement <4 x float> %14086, float 0.000000e+00, i32 2
  %14088 = insertelement <4 x float> %14087, float 0.000000e+00, i32 3
  %14089 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14082, <4 x float> %14088, <4 x float> %14074)
  %14090 = extractelement <4 x float> %14089, i32 0
  %14091 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14092 = getelementptr inbounds i8, i8* %14091, i64 12
  %14093 = bitcast i8* %14092 to float*
  store float %14090, float* %14093, align 4
  %14094 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14095 = bitcast i8* %14094 to float*
  %14096 = load float, float* %14095, align 4
  %14097 = insertelement <4 x float> zeroinitializer, float %14096, i32 0
  %14098 = insertelement <4 x float> %14097, float 1.000000e+00, i32 1
  %14099 = insertelement <4 x float> %14098, float 1.000000e+00, i32 2
  %14100 = insertelement <4 x float> %14099, float 1.000000e+00, i32 3
  %14101 = getelementptr inbounds float, float* %1, i64 3
  %14102 = load float, float* %14101, align 4
  %14103 = insertelement <4 x float> zeroinitializer, float %14102, i32 0
  %14104 = insertelement <4 x float> %14103, float 0.000000e+00, i32 1
  %14105 = insertelement <4 x float> %14104, float 0.000000e+00, i32 2
  %14106 = insertelement <4 x float> %14105, float 0.000000e+00, i32 3
  %14107 = fmul <4 x float> %14100, %14106
  %14108 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14109 = getelementptr inbounds i8, i8* %14108, i64 4
  %14110 = bitcast i8* %14109 to float*
  %14111 = load float, float* %14110, align 4
  %14112 = insertelement <4 x float> zeroinitializer, float %14111, i32 0
  %14113 = insertelement <4 x float> %14112, float 1.000000e+00, i32 1
  %14114 = insertelement <4 x float> %14113, float 1.000000e+00, i32 2
  %14115 = insertelement <4 x float> %14114, float 1.000000e+00, i32 3
  %14116 = getelementptr inbounds float, float* %1, i64 7
  %14117 = load float, float* %14116, align 4
  %14118 = insertelement <4 x float> zeroinitializer, float %14117, i32 0
  %14119 = insertelement <4 x float> %14118, float 0.000000e+00, i32 1
  %14120 = insertelement <4 x float> %14119, float 0.000000e+00, i32 2
  %14121 = insertelement <4 x float> %14120, float 0.000000e+00, i32 3
  %14122 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14115, <4 x float> %14121, <4 x float> %14107)
  %14123 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14124 = getelementptr inbounds i8, i8* %14123, i64 8
  %14125 = bitcast i8* %14124 to float*
  %14126 = load float, float* %14125, align 4
  %14127 = insertelement <4 x float> zeroinitializer, float %14126, i32 0
  %14128 = insertelement <4 x float> %14127, float 0.000000e+00, i32 1
  %14129 = insertelement <4 x float> %14128, float 0.000000e+00, i32 2
  %14130 = insertelement <4 x float> %14129, float 0.000000e+00, i32 3
  %14131 = getelementptr inbounds float, float* %1, i64 11
  %14132 = load float, float* %14131, align 4
  %14133 = insertelement <4 x float> zeroinitializer, float %14132, i32 0
  %14134 = insertelement <4 x float> %14133, float 0.000000e+00, i32 1
  %14135 = insertelement <4 x float> %14134, float 0.000000e+00, i32 2
  %14136 = insertelement <4 x float> %14135, float 0.000000e+00, i32 3
  %14137 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14130, <4 x float> %14136, <4 x float> %14122)
  %14138 = extractelement <4 x float> %14137, i32 0
  %14139 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14140 = getelementptr inbounds i8, i8* %14139, i64 12
  %14141 = bitcast i8* %14140 to float*
  store float %14138, float* %14141, align 4
  %14142 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14143 = bitcast i8* %14142 to float*
  %14144 = load float, float* %14143, align 4
  %14145 = insertelement <4 x float> zeroinitializer, float %14144, i32 0
  %14146 = insertelement <4 x float> %14145, float 1.000000e+00, i32 1
  %14147 = insertelement <4 x float> %14146, float 1.000000e+00, i32 2
  %14148 = insertelement <4 x float> %14147, float 1.000000e+00, i32 3
  %14149 = getelementptr inbounds float, float* %1, i64 3
  %14150 = load float, float* %14149, align 4
  %14151 = insertelement <4 x float> zeroinitializer, float %14150, i32 0
  %14152 = insertelement <4 x float> %14151, float 0.000000e+00, i32 1
  %14153 = insertelement <4 x float> %14152, float 0.000000e+00, i32 2
  %14154 = insertelement <4 x float> %14153, float 0.000000e+00, i32 3
  %14155 = fmul <4 x float> %14148, %14154
  %14156 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14157 = getelementptr inbounds i8, i8* %14156, i64 4
  %14158 = bitcast i8* %14157 to float*
  %14159 = load float, float* %14158, align 4
  %14160 = insertelement <4 x float> zeroinitializer, float %14159, i32 0
  %14161 = insertelement <4 x float> %14160, float 1.000000e+00, i32 1
  %14162 = insertelement <4 x float> %14161, float 1.000000e+00, i32 2
  %14163 = insertelement <4 x float> %14162, float 1.000000e+00, i32 3
  %14164 = getelementptr inbounds float, float* %1, i64 7
  %14165 = load float, float* %14164, align 4
  %14166 = insertelement <4 x float> zeroinitializer, float %14165, i32 0
  %14167 = insertelement <4 x float> %14166, float 0.000000e+00, i32 1
  %14168 = insertelement <4 x float> %14167, float 0.000000e+00, i32 2
  %14169 = insertelement <4 x float> %14168, float 0.000000e+00, i32 3
  %14170 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14163, <4 x float> %14169, <4 x float> %14155)
  %14171 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14172 = getelementptr inbounds i8, i8* %14171, i64 8
  %14173 = bitcast i8* %14172 to float*
  %14174 = load float, float* %14173, align 4
  %14175 = insertelement <4 x float> zeroinitializer, float %14174, i32 0
  %14176 = insertelement <4 x float> %14175, float 1.000000e+00, i32 1
  %14177 = insertelement <4 x float> %14176, float 1.000000e+00, i32 2
  %14178 = insertelement <4 x float> %14177, float 1.000000e+00, i32 3
  %14179 = getelementptr inbounds float, float* %1, i64 11
  %14180 = load float, float* %14179, align 4
  %14181 = insertelement <4 x float> zeroinitializer, float %14180, i32 0
  %14182 = insertelement <4 x float> %14181, float 0.000000e+00, i32 1
  %14183 = insertelement <4 x float> %14182, float 0.000000e+00, i32 2
  %14184 = insertelement <4 x float> %14183, float 0.000000e+00, i32 3
  %14185 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14178, <4 x float> %14184, <4 x float> %14170)
  %14186 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14187 = getelementptr inbounds i8, i8* %14186, i64 12
  %14188 = bitcast i8* %14187 to float*
  %14189 = load float, float* %14188, align 4
  %14190 = insertelement <4 x float> zeroinitializer, float %14189, i32 0
  %14191 = insertelement <4 x float> %14190, float 0.000000e+00, i32 1
  %14192 = insertelement <4 x float> %14191, float 0.000000e+00, i32 2
  %14193 = insertelement <4 x float> %14192, float 0.000000e+00, i32 3
  %14194 = getelementptr inbounds float, float* %1, i64 15
  %14195 = load float, float* %14194, align 4
  %14196 = insertelement <4 x float> zeroinitializer, float %14195, i32 0
  %14197 = insertelement <4 x float> %14196, float 0.000000e+00, i32 1
  %14198 = insertelement <4 x float> %14197, float 0.000000e+00, i32 2
  %14199 = insertelement <4 x float> %14198, float 0.000000e+00, i32 3
  %14200 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14193, <4 x float> %14199, <4 x float> %14185)
  %14201 = extractelement <4 x float> %14200, i32 0
  %14202 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14203 = getelementptr inbounds i8, i8* %14202, i64 12
  %14204 = bitcast i8* %14203 to float*
  store float %14201, float* %14204, align 4
  %14205 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14206 = getelementptr inbounds i8, i8* %14205, i64 16
  %14207 = bitcast i8* %14206 to float*
  %14208 = load float, float* %14207, align 4
  %14209 = insertelement <4 x float> zeroinitializer, float %14208, i32 0
  %14210 = insertelement <4 x float> %14209, float 0.000000e+00, i32 1
  %14211 = insertelement <4 x float> %14210, float 0.000000e+00, i32 2
  %14212 = insertelement <4 x float> %14211, float 0.000000e+00, i32 3
  %14213 = load float, float* %1, align 4
  %14214 = insertelement <4 x float> zeroinitializer, float %14213, i32 0
  %14215 = insertelement <4 x float> %14214, float 0.000000e+00, i32 1
  %14216 = insertelement <4 x float> %14215, float 0.000000e+00, i32 2
  %14217 = insertelement <4 x float> %14216, float 0.000000e+00, i32 3
  %14218 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14212, <4 x float> %14217, <4 x float> zeroinitializer)
  %14219 = extractelement <4 x float> %14218, i32 0
  %14220 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14221 = getelementptr inbounds i8, i8* %14220, i64 16
  %14222 = bitcast i8* %14221 to float*
  store float %14219, float* %14222, align 4
  %14223 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14224 = getelementptr inbounds i8, i8* %14223, i64 16
  %14225 = bitcast i8* %14224 to float*
  %14226 = load float, float* %14225, align 4
  %14227 = insertelement <4 x float> zeroinitializer, float %14226, i32 0
  %14228 = insertelement <4 x float> %14227, float 1.000000e+00, i32 1
  %14229 = insertelement <4 x float> %14228, float 1.000000e+00, i32 2
  %14230 = insertelement <4 x float> %14229, float 1.000000e+00, i32 3
  %14231 = load float, float* %1, align 4
  %14232 = insertelement <4 x float> zeroinitializer, float %14231, i32 0
  %14233 = insertelement <4 x float> %14232, float 0.000000e+00, i32 1
  %14234 = insertelement <4 x float> %14233, float 0.000000e+00, i32 2
  %14235 = insertelement <4 x float> %14234, float 0.000000e+00, i32 3
  %14236 = fmul <4 x float> %14230, %14235
  %14237 = fadd <4 x float> %14236, zeroinitializer
  %14238 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14239 = getelementptr inbounds i8, i8* %14238, i64 20
  %14240 = bitcast i8* %14239 to float*
  %14241 = load float, float* %14240, align 4
  %14242 = insertelement <4 x float> zeroinitializer, float %14241, i32 0
  %14243 = insertelement <4 x float> %14242, float 0.000000e+00, i32 1
  %14244 = insertelement <4 x float> %14243, float 0.000000e+00, i32 2
  %14245 = insertelement <4 x float> %14244, float 0.000000e+00, i32 3
  %14246 = getelementptr inbounds float, float* %1, i64 4
  %14247 = load float, float* %14246, align 4
  %14248 = insertelement <4 x float> zeroinitializer, float %14247, i32 0
  %14249 = insertelement <4 x float> %14248, float 0.000000e+00, i32 1
  %14250 = insertelement <4 x float> %14249, float 0.000000e+00, i32 2
  %14251 = insertelement <4 x float> %14250, float 0.000000e+00, i32 3
  %14252 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14245, <4 x float> %14251, <4 x float> %14237)
  %14253 = extractelement <4 x float> %14252, i32 0
  %14254 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14255 = getelementptr inbounds i8, i8* %14254, i64 16
  %14256 = bitcast i8* %14255 to float*
  store float %14253, float* %14256, align 4
  %14257 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14258 = getelementptr inbounds i8, i8* %14257, i64 16
  %14259 = bitcast i8* %14258 to float*
  %14260 = load float, float* %14259, align 4
  %14261 = insertelement <4 x float> zeroinitializer, float %14260, i32 0
  %14262 = insertelement <4 x float> %14261, float 1.000000e+00, i32 1
  %14263 = insertelement <4 x float> %14262, float 1.000000e+00, i32 2
  %14264 = insertelement <4 x float> %14263, float 1.000000e+00, i32 3
  %14265 = load float, float* %1, align 4
  %14266 = insertelement <4 x float> zeroinitializer, float %14265, i32 0
  %14267 = insertelement <4 x float> %14266, float 0.000000e+00, i32 1
  %14268 = insertelement <4 x float> %14267, float 0.000000e+00, i32 2
  %14269 = insertelement <4 x float> %14268, float 0.000000e+00, i32 3
  %14270 = fmul <4 x float> %14264, %14269
  %14271 = fadd <4 x float> %14270, zeroinitializer
  %14272 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14273 = getelementptr inbounds i8, i8* %14272, i64 20
  %14274 = bitcast i8* %14273 to float*
  %14275 = load float, float* %14274, align 4
  %14276 = insertelement <4 x float> zeroinitializer, float %14275, i32 0
  %14277 = insertelement <4 x float> %14276, float 1.000000e+00, i32 1
  %14278 = insertelement <4 x float> %14277, float 1.000000e+00, i32 2
  %14279 = insertelement <4 x float> %14278, float 1.000000e+00, i32 3
  %14280 = getelementptr inbounds float, float* %1, i64 4
  %14281 = load float, float* %14280, align 4
  %14282 = insertelement <4 x float> zeroinitializer, float %14281, i32 0
  %14283 = insertelement <4 x float> %14282, float 0.000000e+00, i32 1
  %14284 = insertelement <4 x float> %14283, float 0.000000e+00, i32 2
  %14285 = insertelement <4 x float> %14284, float 0.000000e+00, i32 3
  %14286 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14279, <4 x float> %14285, <4 x float> %14271)
  %14287 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14288 = getelementptr inbounds i8, i8* %14287, i64 24
  %14289 = bitcast i8* %14288 to float*
  %14290 = load float, float* %14289, align 4
  %14291 = insertelement <4 x float> zeroinitializer, float %14290, i32 0
  %14292 = insertelement <4 x float> %14291, float 0.000000e+00, i32 1
  %14293 = insertelement <4 x float> %14292, float 0.000000e+00, i32 2
  %14294 = insertelement <4 x float> %14293, float 0.000000e+00, i32 3
  %14295 = getelementptr inbounds float, float* %1, i64 8
  %14296 = load float, float* %14295, align 4
  %14297 = insertelement <4 x float> zeroinitializer, float %14296, i32 0
  %14298 = insertelement <4 x float> %14297, float 0.000000e+00, i32 1
  %14299 = insertelement <4 x float> %14298, float 0.000000e+00, i32 2
  %14300 = insertelement <4 x float> %14299, float 0.000000e+00, i32 3
  %14301 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14294, <4 x float> %14300, <4 x float> %14286)
  %14302 = extractelement <4 x float> %14301, i32 0
  %14303 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14304 = getelementptr inbounds i8, i8* %14303, i64 16
  %14305 = bitcast i8* %14304 to float*
  store float %14302, float* %14305, align 4
  %14306 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14307 = getelementptr inbounds i8, i8* %14306, i64 16
  %14308 = bitcast i8* %14307 to float*
  %14309 = load float, float* %14308, align 4
  %14310 = insertelement <4 x float> zeroinitializer, float %14309, i32 0
  %14311 = insertelement <4 x float> %14310, float 1.000000e+00, i32 1
  %14312 = insertelement <4 x float> %14311, float 1.000000e+00, i32 2
  %14313 = insertelement <4 x float> %14312, float 1.000000e+00, i32 3
  %14314 = load float, float* %1, align 4
  %14315 = insertelement <4 x float> zeroinitializer, float %14314, i32 0
  %14316 = insertelement <4 x float> %14315, float 0.000000e+00, i32 1
  %14317 = insertelement <4 x float> %14316, float 0.000000e+00, i32 2
  %14318 = insertelement <4 x float> %14317, float 0.000000e+00, i32 3
  %14319 = fmul <4 x float> %14313, %14318
  %14320 = fadd <4 x float> %14319, zeroinitializer
  %14321 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14322 = getelementptr inbounds i8, i8* %14321, i64 20
  %14323 = bitcast i8* %14322 to float*
  %14324 = load float, float* %14323, align 4
  %14325 = insertelement <4 x float> zeroinitializer, float %14324, i32 0
  %14326 = insertelement <4 x float> %14325, float 1.000000e+00, i32 1
  %14327 = insertelement <4 x float> %14326, float 1.000000e+00, i32 2
  %14328 = insertelement <4 x float> %14327, float 1.000000e+00, i32 3
  %14329 = getelementptr inbounds float, float* %1, i64 4
  %14330 = load float, float* %14329, align 4
  %14331 = insertelement <4 x float> zeroinitializer, float %14330, i32 0
  %14332 = insertelement <4 x float> %14331, float 0.000000e+00, i32 1
  %14333 = insertelement <4 x float> %14332, float 0.000000e+00, i32 2
  %14334 = insertelement <4 x float> %14333, float 0.000000e+00, i32 3
  %14335 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14328, <4 x float> %14334, <4 x float> %14320)
  %14336 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14337 = getelementptr inbounds i8, i8* %14336, i64 24
  %14338 = bitcast i8* %14337 to float*
  %14339 = load float, float* %14338, align 4
  %14340 = insertelement <4 x float> zeroinitializer, float %14339, i32 0
  %14341 = insertelement <4 x float> %14340, float 1.000000e+00, i32 1
  %14342 = insertelement <4 x float> %14341, float 1.000000e+00, i32 2
  %14343 = insertelement <4 x float> %14342, float 1.000000e+00, i32 3
  %14344 = getelementptr inbounds float, float* %1, i64 8
  %14345 = load float, float* %14344, align 4
  %14346 = insertelement <4 x float> zeroinitializer, float %14345, i32 0
  %14347 = insertelement <4 x float> %14346, float 0.000000e+00, i32 1
  %14348 = insertelement <4 x float> %14347, float 0.000000e+00, i32 2
  %14349 = insertelement <4 x float> %14348, float 0.000000e+00, i32 3
  %14350 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14343, <4 x float> %14349, <4 x float> %14335)
  %14351 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14352 = getelementptr inbounds i8, i8* %14351, i64 28
  %14353 = bitcast i8* %14352 to float*
  %14354 = load float, float* %14353, align 4
  %14355 = insertelement <4 x float> zeroinitializer, float %14354, i32 0
  %14356 = insertelement <4 x float> %14355, float 0.000000e+00, i32 1
  %14357 = insertelement <4 x float> %14356, float 0.000000e+00, i32 2
  %14358 = insertelement <4 x float> %14357, float 0.000000e+00, i32 3
  %14359 = getelementptr inbounds float, float* %1, i64 12
  %14360 = load float, float* %14359, align 4
  %14361 = insertelement <4 x float> zeroinitializer, float %14360, i32 0
  %14362 = insertelement <4 x float> %14361, float 0.000000e+00, i32 1
  %14363 = insertelement <4 x float> %14362, float 0.000000e+00, i32 2
  %14364 = insertelement <4 x float> %14363, float 0.000000e+00, i32 3
  %14365 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14358, <4 x float> %14364, <4 x float> %14350)
  %14366 = extractelement <4 x float> %14365, i32 0
  %14367 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14368 = getelementptr inbounds i8, i8* %14367, i64 16
  %14369 = bitcast i8* %14368 to float*
  store float %14366, float* %14369, align 4
  %14370 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14371 = getelementptr inbounds i8, i8* %14370, i64 16
  %14372 = bitcast i8* %14371 to float*
  %14373 = load float, float* %14372, align 4
  %14374 = insertelement <4 x float> zeroinitializer, float %14373, i32 0
  %14375 = insertelement <4 x float> %14374, float 0.000000e+00, i32 1
  %14376 = insertelement <4 x float> %14375, float 0.000000e+00, i32 2
  %14377 = insertelement <4 x float> %14376, float 0.000000e+00, i32 3
  %14378 = getelementptr inbounds float, float* %1, i64 1
  %14379 = load float, float* %14378, align 4
  %14380 = insertelement <4 x float> zeroinitializer, float %14379, i32 0
  %14381 = insertelement <4 x float> %14380, float 0.000000e+00, i32 1
  %14382 = insertelement <4 x float> %14381, float 0.000000e+00, i32 2
  %14383 = insertelement <4 x float> %14382, float 0.000000e+00, i32 3
  %14384 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14377, <4 x float> %14383, <4 x float> zeroinitializer)
  %14385 = extractelement <4 x float> %14384, i32 0
  %14386 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14387 = getelementptr inbounds i8, i8* %14386, i64 20
  %14388 = bitcast i8* %14387 to float*
  store float %14385, float* %14388, align 4
  %14389 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14390 = getelementptr inbounds i8, i8* %14389, i64 16
  %14391 = bitcast i8* %14390 to float*
  %14392 = load float, float* %14391, align 4
  %14393 = insertelement <4 x float> zeroinitializer, float %14392, i32 0
  %14394 = insertelement <4 x float> %14393, float 1.000000e+00, i32 1
  %14395 = insertelement <4 x float> %14394, float 1.000000e+00, i32 2
  %14396 = insertelement <4 x float> %14395, float 1.000000e+00, i32 3
  %14397 = getelementptr inbounds float, float* %1, i64 1
  %14398 = load float, float* %14397, align 4
  %14399 = insertelement <4 x float> zeroinitializer, float %14398, i32 0
  %14400 = insertelement <4 x float> %14399, float 0.000000e+00, i32 1
  %14401 = insertelement <4 x float> %14400, float 0.000000e+00, i32 2
  %14402 = insertelement <4 x float> %14401, float 0.000000e+00, i32 3
  %14403 = fmul <4 x float> %14396, %14402
  %14404 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14405 = getelementptr inbounds i8, i8* %14404, i64 20
  %14406 = bitcast i8* %14405 to float*
  %14407 = load float, float* %14406, align 4
  %14408 = insertelement <4 x float> zeroinitializer, float %14407, i32 0
  %14409 = insertelement <4 x float> %14408, float 0.000000e+00, i32 1
  %14410 = insertelement <4 x float> %14409, float 0.000000e+00, i32 2
  %14411 = insertelement <4 x float> %14410, float 0.000000e+00, i32 3
  %14412 = getelementptr inbounds float, float* %1, i64 5
  %14413 = load float, float* %14412, align 4
  %14414 = insertelement <4 x float> zeroinitializer, float %14413, i32 0
  %14415 = insertelement <4 x float> %14414, float 0.000000e+00, i32 1
  %14416 = insertelement <4 x float> %14415, float 0.000000e+00, i32 2
  %14417 = insertelement <4 x float> %14416, float 0.000000e+00, i32 3
  %14418 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14411, <4 x float> %14417, <4 x float> %14403)
  %14419 = extractelement <4 x float> %14418, i32 0
  %14420 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14421 = getelementptr inbounds i8, i8* %14420, i64 20
  %14422 = bitcast i8* %14421 to float*
  store float %14419, float* %14422, align 4
  %14423 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14424 = getelementptr inbounds i8, i8* %14423, i64 16
  %14425 = bitcast i8* %14424 to float*
  %14426 = load float, float* %14425, align 4
  %14427 = insertelement <4 x float> zeroinitializer, float %14426, i32 0
  %14428 = insertelement <4 x float> %14427, float 1.000000e+00, i32 1
  %14429 = insertelement <4 x float> %14428, float 1.000000e+00, i32 2
  %14430 = insertelement <4 x float> %14429, float 1.000000e+00, i32 3
  %14431 = getelementptr inbounds float, float* %1, i64 1
  %14432 = load float, float* %14431, align 4
  %14433 = insertelement <4 x float> zeroinitializer, float %14432, i32 0
  %14434 = insertelement <4 x float> %14433, float 0.000000e+00, i32 1
  %14435 = insertelement <4 x float> %14434, float 0.000000e+00, i32 2
  %14436 = insertelement <4 x float> %14435, float 0.000000e+00, i32 3
  %14437 = fmul <4 x float> %14430, %14436
  %14438 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14439 = getelementptr inbounds i8, i8* %14438, i64 20
  %14440 = bitcast i8* %14439 to float*
  %14441 = load float, float* %14440, align 4
  %14442 = insertelement <4 x float> zeroinitializer, float %14441, i32 0
  %14443 = insertelement <4 x float> %14442, float 1.000000e+00, i32 1
  %14444 = insertelement <4 x float> %14443, float 1.000000e+00, i32 2
  %14445 = insertelement <4 x float> %14444, float 1.000000e+00, i32 3
  %14446 = getelementptr inbounds float, float* %1, i64 5
  %14447 = load float, float* %14446, align 4
  %14448 = insertelement <4 x float> zeroinitializer, float %14447, i32 0
  %14449 = insertelement <4 x float> %14448, float 0.000000e+00, i32 1
  %14450 = insertelement <4 x float> %14449, float 0.000000e+00, i32 2
  %14451 = insertelement <4 x float> %14450, float 0.000000e+00, i32 3
  %14452 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14445, <4 x float> %14451, <4 x float> %14437)
  %14453 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14454 = getelementptr inbounds i8, i8* %14453, i64 24
  %14455 = bitcast i8* %14454 to float*
  %14456 = load float, float* %14455, align 4
  %14457 = insertelement <4 x float> zeroinitializer, float %14456, i32 0
  %14458 = insertelement <4 x float> %14457, float 0.000000e+00, i32 1
  %14459 = insertelement <4 x float> %14458, float 0.000000e+00, i32 2
  %14460 = insertelement <4 x float> %14459, float 0.000000e+00, i32 3
  %14461 = getelementptr inbounds float, float* %1, i64 9
  %14462 = load float, float* %14461, align 4
  %14463 = insertelement <4 x float> zeroinitializer, float %14462, i32 0
  %14464 = insertelement <4 x float> %14463, float 0.000000e+00, i32 1
  %14465 = insertelement <4 x float> %14464, float 0.000000e+00, i32 2
  %14466 = insertelement <4 x float> %14465, float 0.000000e+00, i32 3
  %14467 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14460, <4 x float> %14466, <4 x float> %14452)
  %14468 = extractelement <4 x float> %14467, i32 0
  %14469 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14470 = getelementptr inbounds i8, i8* %14469, i64 20
  %14471 = bitcast i8* %14470 to float*
  store float %14468, float* %14471, align 4
  %14472 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14473 = getelementptr inbounds i8, i8* %14472, i64 16
  %14474 = bitcast i8* %14473 to float*
  %14475 = load float, float* %14474, align 4
  %14476 = insertelement <4 x float> zeroinitializer, float %14475, i32 0
  %14477 = insertelement <4 x float> %14476, float 1.000000e+00, i32 1
  %14478 = insertelement <4 x float> %14477, float 1.000000e+00, i32 2
  %14479 = insertelement <4 x float> %14478, float 1.000000e+00, i32 3
  %14480 = getelementptr inbounds float, float* %1, i64 1
  %14481 = load float, float* %14480, align 4
  %14482 = insertelement <4 x float> zeroinitializer, float %14481, i32 0
  %14483 = insertelement <4 x float> %14482, float 0.000000e+00, i32 1
  %14484 = insertelement <4 x float> %14483, float 0.000000e+00, i32 2
  %14485 = insertelement <4 x float> %14484, float 0.000000e+00, i32 3
  %14486 = fmul <4 x float> %14479, %14485
  %14487 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14488 = getelementptr inbounds i8, i8* %14487, i64 20
  %14489 = bitcast i8* %14488 to float*
  %14490 = load float, float* %14489, align 4
  %14491 = insertelement <4 x float> zeroinitializer, float %14490, i32 0
  %14492 = insertelement <4 x float> %14491, float 1.000000e+00, i32 1
  %14493 = insertelement <4 x float> %14492, float 1.000000e+00, i32 2
  %14494 = insertelement <4 x float> %14493, float 1.000000e+00, i32 3
  %14495 = getelementptr inbounds float, float* %1, i64 5
  %14496 = load float, float* %14495, align 4
  %14497 = insertelement <4 x float> zeroinitializer, float %14496, i32 0
  %14498 = insertelement <4 x float> %14497, float 0.000000e+00, i32 1
  %14499 = insertelement <4 x float> %14498, float 0.000000e+00, i32 2
  %14500 = insertelement <4 x float> %14499, float 0.000000e+00, i32 3
  %14501 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14494, <4 x float> %14500, <4 x float> %14486)
  %14502 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14503 = getelementptr inbounds i8, i8* %14502, i64 24
  %14504 = bitcast i8* %14503 to float*
  %14505 = load float, float* %14504, align 4
  %14506 = insertelement <4 x float> zeroinitializer, float %14505, i32 0
  %14507 = insertelement <4 x float> %14506, float 1.000000e+00, i32 1
  %14508 = insertelement <4 x float> %14507, float 1.000000e+00, i32 2
  %14509 = insertelement <4 x float> %14508, float 1.000000e+00, i32 3
  %14510 = getelementptr inbounds float, float* %1, i64 9
  %14511 = load float, float* %14510, align 4
  %14512 = insertelement <4 x float> zeroinitializer, float %14511, i32 0
  %14513 = insertelement <4 x float> %14512, float 0.000000e+00, i32 1
  %14514 = insertelement <4 x float> %14513, float 0.000000e+00, i32 2
  %14515 = insertelement <4 x float> %14514, float 0.000000e+00, i32 3
  %14516 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14509, <4 x float> %14515, <4 x float> %14501)
  %14517 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14518 = getelementptr inbounds i8, i8* %14517, i64 28
  %14519 = bitcast i8* %14518 to float*
  %14520 = load float, float* %14519, align 4
  %14521 = insertelement <4 x float> zeroinitializer, float %14520, i32 0
  %14522 = insertelement <4 x float> %14521, float 0.000000e+00, i32 1
  %14523 = insertelement <4 x float> %14522, float 0.000000e+00, i32 2
  %14524 = insertelement <4 x float> %14523, float 0.000000e+00, i32 3
  %14525 = getelementptr inbounds float, float* %1, i64 13
  %14526 = load float, float* %14525, align 4
  %14527 = insertelement <4 x float> zeroinitializer, float %14526, i32 0
  %14528 = insertelement <4 x float> %14527, float 0.000000e+00, i32 1
  %14529 = insertelement <4 x float> %14528, float 0.000000e+00, i32 2
  %14530 = insertelement <4 x float> %14529, float 0.000000e+00, i32 3
  %14531 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14524, <4 x float> %14530, <4 x float> %14516)
  %14532 = extractelement <4 x float> %14531, i32 0
  %14533 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14534 = getelementptr inbounds i8, i8* %14533, i64 20
  %14535 = bitcast i8* %14534 to float*
  store float %14532, float* %14535, align 4
  %14536 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14537 = getelementptr inbounds i8, i8* %14536, i64 16
  %14538 = bitcast i8* %14537 to float*
  %14539 = load float, float* %14538, align 4
  %14540 = insertelement <4 x float> zeroinitializer, float %14539, i32 0
  %14541 = insertelement <4 x float> %14540, float 0.000000e+00, i32 1
  %14542 = insertelement <4 x float> %14541, float 0.000000e+00, i32 2
  %14543 = insertelement <4 x float> %14542, float 0.000000e+00, i32 3
  %14544 = getelementptr inbounds float, float* %1, i64 2
  %14545 = load float, float* %14544, align 4
  %14546 = insertelement <4 x float> zeroinitializer, float %14545, i32 0
  %14547 = insertelement <4 x float> %14546, float 0.000000e+00, i32 1
  %14548 = insertelement <4 x float> %14547, float 0.000000e+00, i32 2
  %14549 = insertelement <4 x float> %14548, float 0.000000e+00, i32 3
  %14550 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14543, <4 x float> %14549, <4 x float> zeroinitializer)
  %14551 = extractelement <4 x float> %14550, i32 0
  %14552 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14553 = getelementptr inbounds i8, i8* %14552, i64 24
  %14554 = bitcast i8* %14553 to float*
  store float %14551, float* %14554, align 4
  %14555 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14556 = getelementptr inbounds i8, i8* %14555, i64 16
  %14557 = bitcast i8* %14556 to float*
  %14558 = load float, float* %14557, align 4
  %14559 = insertelement <4 x float> zeroinitializer, float %14558, i32 0
  %14560 = insertelement <4 x float> %14559, float 1.000000e+00, i32 1
  %14561 = insertelement <4 x float> %14560, float 1.000000e+00, i32 2
  %14562 = insertelement <4 x float> %14561, float 1.000000e+00, i32 3
  %14563 = getelementptr inbounds float, float* %1, i64 2
  %14564 = load float, float* %14563, align 4
  %14565 = insertelement <4 x float> zeroinitializer, float %14564, i32 0
  %14566 = insertelement <4 x float> %14565, float 0.000000e+00, i32 1
  %14567 = insertelement <4 x float> %14566, float 0.000000e+00, i32 2
  %14568 = insertelement <4 x float> %14567, float 0.000000e+00, i32 3
  %14569 = fmul <4 x float> %14562, %14568
  %14570 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14571 = getelementptr inbounds i8, i8* %14570, i64 20
  %14572 = bitcast i8* %14571 to float*
  %14573 = load float, float* %14572, align 4
  %14574 = insertelement <4 x float> zeroinitializer, float %14573, i32 0
  %14575 = insertelement <4 x float> %14574, float 0.000000e+00, i32 1
  %14576 = insertelement <4 x float> %14575, float 0.000000e+00, i32 2
  %14577 = insertelement <4 x float> %14576, float 0.000000e+00, i32 3
  %14578 = getelementptr inbounds float, float* %1, i64 6
  %14579 = load float, float* %14578, align 4
  %14580 = insertelement <4 x float> zeroinitializer, float %14579, i32 0
  %14581 = insertelement <4 x float> %14580, float 0.000000e+00, i32 1
  %14582 = insertelement <4 x float> %14581, float 0.000000e+00, i32 2
  %14583 = insertelement <4 x float> %14582, float 0.000000e+00, i32 3
  %14584 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14577, <4 x float> %14583, <4 x float> %14569)
  %14585 = extractelement <4 x float> %14584, i32 0
  %14586 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14587 = getelementptr inbounds i8, i8* %14586, i64 24
  %14588 = bitcast i8* %14587 to float*
  store float %14585, float* %14588, align 4
  %14589 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14590 = getelementptr inbounds i8, i8* %14589, i64 16
  %14591 = bitcast i8* %14590 to float*
  %14592 = load float, float* %14591, align 4
  %14593 = insertelement <4 x float> zeroinitializer, float %14592, i32 0
  %14594 = insertelement <4 x float> %14593, float 1.000000e+00, i32 1
  %14595 = insertelement <4 x float> %14594, float 1.000000e+00, i32 2
  %14596 = insertelement <4 x float> %14595, float 1.000000e+00, i32 3
  %14597 = getelementptr inbounds float, float* %1, i64 2
  %14598 = load float, float* %14597, align 4
  %14599 = insertelement <4 x float> zeroinitializer, float %14598, i32 0
  %14600 = insertelement <4 x float> %14599, float 0.000000e+00, i32 1
  %14601 = insertelement <4 x float> %14600, float 0.000000e+00, i32 2
  %14602 = insertelement <4 x float> %14601, float 0.000000e+00, i32 3
  %14603 = fmul <4 x float> %14596, %14602
  %14604 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14605 = getelementptr inbounds i8, i8* %14604, i64 20
  %14606 = bitcast i8* %14605 to float*
  %14607 = load float, float* %14606, align 4
  %14608 = insertelement <4 x float> zeroinitializer, float %14607, i32 0
  %14609 = insertelement <4 x float> %14608, float 1.000000e+00, i32 1
  %14610 = insertelement <4 x float> %14609, float 1.000000e+00, i32 2
  %14611 = insertelement <4 x float> %14610, float 1.000000e+00, i32 3
  %14612 = getelementptr inbounds float, float* %1, i64 6
  %14613 = load float, float* %14612, align 4
  %14614 = insertelement <4 x float> zeroinitializer, float %14613, i32 0
  %14615 = insertelement <4 x float> %14614, float 0.000000e+00, i32 1
  %14616 = insertelement <4 x float> %14615, float 0.000000e+00, i32 2
  %14617 = insertelement <4 x float> %14616, float 0.000000e+00, i32 3
  %14618 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14611, <4 x float> %14617, <4 x float> %14603)
  %14619 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14620 = getelementptr inbounds i8, i8* %14619, i64 24
  %14621 = bitcast i8* %14620 to float*
  %14622 = load float, float* %14621, align 4
  %14623 = insertelement <4 x float> zeroinitializer, float %14622, i32 0
  %14624 = insertelement <4 x float> %14623, float 0.000000e+00, i32 1
  %14625 = insertelement <4 x float> %14624, float 0.000000e+00, i32 2
  %14626 = insertelement <4 x float> %14625, float 0.000000e+00, i32 3
  %14627 = getelementptr inbounds float, float* %1, i64 10
  %14628 = load float, float* %14627, align 4
  %14629 = insertelement <4 x float> zeroinitializer, float %14628, i32 0
  %14630 = insertelement <4 x float> %14629, float 0.000000e+00, i32 1
  %14631 = insertelement <4 x float> %14630, float 0.000000e+00, i32 2
  %14632 = insertelement <4 x float> %14631, float 0.000000e+00, i32 3
  %14633 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14626, <4 x float> %14632, <4 x float> %14618)
  %14634 = extractelement <4 x float> %14633, i32 0
  %14635 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14636 = getelementptr inbounds i8, i8* %14635, i64 24
  %14637 = bitcast i8* %14636 to float*
  store float %14634, float* %14637, align 4
  %14638 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14639 = getelementptr inbounds i8, i8* %14638, i64 16
  %14640 = bitcast i8* %14639 to float*
  %14641 = load float, float* %14640, align 4
  %14642 = insertelement <4 x float> zeroinitializer, float %14641, i32 0
  %14643 = insertelement <4 x float> %14642, float 1.000000e+00, i32 1
  %14644 = insertelement <4 x float> %14643, float 1.000000e+00, i32 2
  %14645 = insertelement <4 x float> %14644, float 1.000000e+00, i32 3
  %14646 = getelementptr inbounds float, float* %1, i64 2
  %14647 = load float, float* %14646, align 4
  %14648 = insertelement <4 x float> zeroinitializer, float %14647, i32 0
  %14649 = insertelement <4 x float> %14648, float 0.000000e+00, i32 1
  %14650 = insertelement <4 x float> %14649, float 0.000000e+00, i32 2
  %14651 = insertelement <4 x float> %14650, float 0.000000e+00, i32 3
  %14652 = fmul <4 x float> %14645, %14651
  %14653 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14654 = getelementptr inbounds i8, i8* %14653, i64 20
  %14655 = bitcast i8* %14654 to float*
  %14656 = load float, float* %14655, align 4
  %14657 = insertelement <4 x float> zeroinitializer, float %14656, i32 0
  %14658 = insertelement <4 x float> %14657, float 1.000000e+00, i32 1
  %14659 = insertelement <4 x float> %14658, float 1.000000e+00, i32 2
  %14660 = insertelement <4 x float> %14659, float 1.000000e+00, i32 3
  %14661 = getelementptr inbounds float, float* %1, i64 6
  %14662 = load float, float* %14661, align 4
  %14663 = insertelement <4 x float> zeroinitializer, float %14662, i32 0
  %14664 = insertelement <4 x float> %14663, float 0.000000e+00, i32 1
  %14665 = insertelement <4 x float> %14664, float 0.000000e+00, i32 2
  %14666 = insertelement <4 x float> %14665, float 0.000000e+00, i32 3
  %14667 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14660, <4 x float> %14666, <4 x float> %14652)
  %14668 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14669 = getelementptr inbounds i8, i8* %14668, i64 24
  %14670 = bitcast i8* %14669 to float*
  %14671 = load float, float* %14670, align 4
  %14672 = insertelement <4 x float> zeroinitializer, float %14671, i32 0
  %14673 = insertelement <4 x float> %14672, float 1.000000e+00, i32 1
  %14674 = insertelement <4 x float> %14673, float 1.000000e+00, i32 2
  %14675 = insertelement <4 x float> %14674, float 1.000000e+00, i32 3
  %14676 = getelementptr inbounds float, float* %1, i64 10
  %14677 = load float, float* %14676, align 4
  %14678 = insertelement <4 x float> zeroinitializer, float %14677, i32 0
  %14679 = insertelement <4 x float> %14678, float 0.000000e+00, i32 1
  %14680 = insertelement <4 x float> %14679, float 0.000000e+00, i32 2
  %14681 = insertelement <4 x float> %14680, float 0.000000e+00, i32 3
  %14682 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14675, <4 x float> %14681, <4 x float> %14667)
  %14683 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14684 = getelementptr inbounds i8, i8* %14683, i64 28
  %14685 = bitcast i8* %14684 to float*
  %14686 = load float, float* %14685, align 4
  %14687 = insertelement <4 x float> zeroinitializer, float %14686, i32 0
  %14688 = insertelement <4 x float> %14687, float 0.000000e+00, i32 1
  %14689 = insertelement <4 x float> %14688, float 0.000000e+00, i32 2
  %14690 = insertelement <4 x float> %14689, float 0.000000e+00, i32 3
  %14691 = getelementptr inbounds float, float* %1, i64 14
  %14692 = load float, float* %14691, align 4
  %14693 = insertelement <4 x float> zeroinitializer, float %14692, i32 0
  %14694 = insertelement <4 x float> %14693, float 0.000000e+00, i32 1
  %14695 = insertelement <4 x float> %14694, float 0.000000e+00, i32 2
  %14696 = insertelement <4 x float> %14695, float 0.000000e+00, i32 3
  %14697 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14690, <4 x float> %14696, <4 x float> %14682)
  %14698 = extractelement <4 x float> %14697, i32 0
  %14699 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14700 = getelementptr inbounds i8, i8* %14699, i64 24
  %14701 = bitcast i8* %14700 to float*
  store float %14698, float* %14701, align 4
  %14702 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14703 = getelementptr inbounds i8, i8* %14702, i64 16
  %14704 = bitcast i8* %14703 to float*
  %14705 = load float, float* %14704, align 4
  %14706 = insertelement <4 x float> zeroinitializer, float %14705, i32 0
  %14707 = insertelement <4 x float> %14706, float 0.000000e+00, i32 1
  %14708 = insertelement <4 x float> %14707, float 0.000000e+00, i32 2
  %14709 = insertelement <4 x float> %14708, float 0.000000e+00, i32 3
  %14710 = getelementptr inbounds float, float* %1, i64 3
  %14711 = load float, float* %14710, align 4
  %14712 = insertelement <4 x float> zeroinitializer, float %14711, i32 0
  %14713 = insertelement <4 x float> %14712, float 0.000000e+00, i32 1
  %14714 = insertelement <4 x float> %14713, float 0.000000e+00, i32 2
  %14715 = insertelement <4 x float> %14714, float 0.000000e+00, i32 3
  %14716 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14709, <4 x float> %14715, <4 x float> zeroinitializer)
  %14717 = extractelement <4 x float> %14716, i32 0
  %14718 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14719 = getelementptr inbounds i8, i8* %14718, i64 28
  %14720 = bitcast i8* %14719 to float*
  store float %14717, float* %14720, align 4
  %14721 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14722 = getelementptr inbounds i8, i8* %14721, i64 16
  %14723 = bitcast i8* %14722 to float*
  %14724 = load float, float* %14723, align 4
  %14725 = insertelement <4 x float> zeroinitializer, float %14724, i32 0
  %14726 = insertelement <4 x float> %14725, float 1.000000e+00, i32 1
  %14727 = insertelement <4 x float> %14726, float 1.000000e+00, i32 2
  %14728 = insertelement <4 x float> %14727, float 1.000000e+00, i32 3
  %14729 = getelementptr inbounds float, float* %1, i64 3
  %14730 = load float, float* %14729, align 4
  %14731 = insertelement <4 x float> zeroinitializer, float %14730, i32 0
  %14732 = insertelement <4 x float> %14731, float 0.000000e+00, i32 1
  %14733 = insertelement <4 x float> %14732, float 0.000000e+00, i32 2
  %14734 = insertelement <4 x float> %14733, float 0.000000e+00, i32 3
  %14735 = fmul <4 x float> %14728, %14734
  %14736 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14737 = getelementptr inbounds i8, i8* %14736, i64 20
  %14738 = bitcast i8* %14737 to float*
  %14739 = load float, float* %14738, align 4
  %14740 = insertelement <4 x float> zeroinitializer, float %14739, i32 0
  %14741 = insertelement <4 x float> %14740, float 0.000000e+00, i32 1
  %14742 = insertelement <4 x float> %14741, float 0.000000e+00, i32 2
  %14743 = insertelement <4 x float> %14742, float 0.000000e+00, i32 3
  %14744 = getelementptr inbounds float, float* %1, i64 7
  %14745 = load float, float* %14744, align 4
  %14746 = insertelement <4 x float> zeroinitializer, float %14745, i32 0
  %14747 = insertelement <4 x float> %14746, float 0.000000e+00, i32 1
  %14748 = insertelement <4 x float> %14747, float 0.000000e+00, i32 2
  %14749 = insertelement <4 x float> %14748, float 0.000000e+00, i32 3
  %14750 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14743, <4 x float> %14749, <4 x float> %14735)
  %14751 = extractelement <4 x float> %14750, i32 0
  %14752 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14753 = getelementptr inbounds i8, i8* %14752, i64 28
  %14754 = bitcast i8* %14753 to float*
  store float %14751, float* %14754, align 4
  %14755 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14756 = getelementptr inbounds i8, i8* %14755, i64 16
  %14757 = bitcast i8* %14756 to float*
  %14758 = load float, float* %14757, align 4
  %14759 = insertelement <4 x float> zeroinitializer, float %14758, i32 0
  %14760 = insertelement <4 x float> %14759, float 1.000000e+00, i32 1
  %14761 = insertelement <4 x float> %14760, float 1.000000e+00, i32 2
  %14762 = insertelement <4 x float> %14761, float 1.000000e+00, i32 3
  %14763 = getelementptr inbounds float, float* %1, i64 3
  %14764 = load float, float* %14763, align 4
  %14765 = insertelement <4 x float> zeroinitializer, float %14764, i32 0
  %14766 = insertelement <4 x float> %14765, float 0.000000e+00, i32 1
  %14767 = insertelement <4 x float> %14766, float 0.000000e+00, i32 2
  %14768 = insertelement <4 x float> %14767, float 0.000000e+00, i32 3
  %14769 = fmul <4 x float> %14762, %14768
  %14770 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14771 = getelementptr inbounds i8, i8* %14770, i64 20
  %14772 = bitcast i8* %14771 to float*
  %14773 = load float, float* %14772, align 4
  %14774 = insertelement <4 x float> zeroinitializer, float %14773, i32 0
  %14775 = insertelement <4 x float> %14774, float 1.000000e+00, i32 1
  %14776 = insertelement <4 x float> %14775, float 1.000000e+00, i32 2
  %14777 = insertelement <4 x float> %14776, float 1.000000e+00, i32 3
  %14778 = getelementptr inbounds float, float* %1, i64 7
  %14779 = load float, float* %14778, align 4
  %14780 = insertelement <4 x float> zeroinitializer, float %14779, i32 0
  %14781 = insertelement <4 x float> %14780, float 0.000000e+00, i32 1
  %14782 = insertelement <4 x float> %14781, float 0.000000e+00, i32 2
  %14783 = insertelement <4 x float> %14782, float 0.000000e+00, i32 3
  %14784 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14777, <4 x float> %14783, <4 x float> %14769)
  %14785 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14786 = getelementptr inbounds i8, i8* %14785, i64 24
  %14787 = bitcast i8* %14786 to float*
  %14788 = load float, float* %14787, align 4
  %14789 = insertelement <4 x float> zeroinitializer, float %14788, i32 0
  %14790 = insertelement <4 x float> %14789, float 0.000000e+00, i32 1
  %14791 = insertelement <4 x float> %14790, float 0.000000e+00, i32 2
  %14792 = insertelement <4 x float> %14791, float 0.000000e+00, i32 3
  %14793 = getelementptr inbounds float, float* %1, i64 11
  %14794 = load float, float* %14793, align 4
  %14795 = insertelement <4 x float> zeroinitializer, float %14794, i32 0
  %14796 = insertelement <4 x float> %14795, float 0.000000e+00, i32 1
  %14797 = insertelement <4 x float> %14796, float 0.000000e+00, i32 2
  %14798 = insertelement <4 x float> %14797, float 0.000000e+00, i32 3
  %14799 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14792, <4 x float> %14798, <4 x float> %14784)
  %14800 = extractelement <4 x float> %14799, i32 0
  %14801 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14802 = getelementptr inbounds i8, i8* %14801, i64 28
  %14803 = bitcast i8* %14802 to float*
  store float %14800, float* %14803, align 4
  %14804 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14805 = getelementptr inbounds i8, i8* %14804, i64 16
  %14806 = bitcast i8* %14805 to float*
  %14807 = load float, float* %14806, align 4
  %14808 = insertelement <4 x float> zeroinitializer, float %14807, i32 0
  %14809 = insertelement <4 x float> %14808, float 1.000000e+00, i32 1
  %14810 = insertelement <4 x float> %14809, float 1.000000e+00, i32 2
  %14811 = insertelement <4 x float> %14810, float 1.000000e+00, i32 3
  %14812 = getelementptr inbounds float, float* %1, i64 3
  %14813 = load float, float* %14812, align 4
  %14814 = insertelement <4 x float> zeroinitializer, float %14813, i32 0
  %14815 = insertelement <4 x float> %14814, float 0.000000e+00, i32 1
  %14816 = insertelement <4 x float> %14815, float 0.000000e+00, i32 2
  %14817 = insertelement <4 x float> %14816, float 0.000000e+00, i32 3
  %14818 = fmul <4 x float> %14811, %14817
  %14819 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14820 = getelementptr inbounds i8, i8* %14819, i64 20
  %14821 = bitcast i8* %14820 to float*
  %14822 = load float, float* %14821, align 4
  %14823 = insertelement <4 x float> zeroinitializer, float %14822, i32 0
  %14824 = insertelement <4 x float> %14823, float 1.000000e+00, i32 1
  %14825 = insertelement <4 x float> %14824, float 1.000000e+00, i32 2
  %14826 = insertelement <4 x float> %14825, float 1.000000e+00, i32 3
  %14827 = getelementptr inbounds float, float* %1, i64 7
  %14828 = load float, float* %14827, align 4
  %14829 = insertelement <4 x float> zeroinitializer, float %14828, i32 0
  %14830 = insertelement <4 x float> %14829, float 0.000000e+00, i32 1
  %14831 = insertelement <4 x float> %14830, float 0.000000e+00, i32 2
  %14832 = insertelement <4 x float> %14831, float 0.000000e+00, i32 3
  %14833 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14826, <4 x float> %14832, <4 x float> %14818)
  %14834 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14835 = getelementptr inbounds i8, i8* %14834, i64 24
  %14836 = bitcast i8* %14835 to float*
  %14837 = load float, float* %14836, align 4
  %14838 = insertelement <4 x float> zeroinitializer, float %14837, i32 0
  %14839 = insertelement <4 x float> %14838, float 1.000000e+00, i32 1
  %14840 = insertelement <4 x float> %14839, float 1.000000e+00, i32 2
  %14841 = insertelement <4 x float> %14840, float 1.000000e+00, i32 3
  %14842 = getelementptr inbounds float, float* %1, i64 11
  %14843 = load float, float* %14842, align 4
  %14844 = insertelement <4 x float> zeroinitializer, float %14843, i32 0
  %14845 = insertelement <4 x float> %14844, float 0.000000e+00, i32 1
  %14846 = insertelement <4 x float> %14845, float 0.000000e+00, i32 2
  %14847 = insertelement <4 x float> %14846, float 0.000000e+00, i32 3
  %14848 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14841, <4 x float> %14847, <4 x float> %14833)
  %14849 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14850 = getelementptr inbounds i8, i8* %14849, i64 28
  %14851 = bitcast i8* %14850 to float*
  %14852 = load float, float* %14851, align 4
  %14853 = insertelement <4 x float> zeroinitializer, float %14852, i32 0
  %14854 = insertelement <4 x float> %14853, float 0.000000e+00, i32 1
  %14855 = insertelement <4 x float> %14854, float 0.000000e+00, i32 2
  %14856 = insertelement <4 x float> %14855, float 0.000000e+00, i32 3
  %14857 = getelementptr inbounds float, float* %1, i64 15
  %14858 = load float, float* %14857, align 4
  %14859 = insertelement <4 x float> zeroinitializer, float %14858, i32 0
  %14860 = insertelement <4 x float> %14859, float 0.000000e+00, i32 1
  %14861 = insertelement <4 x float> %14860, float 0.000000e+00, i32 2
  %14862 = insertelement <4 x float> %14861, float 0.000000e+00, i32 3
  %14863 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14856, <4 x float> %14862, <4 x float> %14848)
  %14864 = extractelement <4 x float> %14863, i32 0
  %14865 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14866 = getelementptr inbounds i8, i8* %14865, i64 28
  %14867 = bitcast i8* %14866 to float*
  store float %14864, float* %14867, align 4
  %14868 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14869 = getelementptr inbounds i8, i8* %14868, i64 32
  %14870 = bitcast i8* %14869 to float*
  %14871 = load float, float* %14870, align 4
  %14872 = insertelement <4 x float> zeroinitializer, float %14871, i32 0
  %14873 = insertelement <4 x float> %14872, float 0.000000e+00, i32 1
  %14874 = insertelement <4 x float> %14873, float 0.000000e+00, i32 2
  %14875 = insertelement <4 x float> %14874, float 0.000000e+00, i32 3
  %14876 = load float, float* %1, align 4
  %14877 = insertelement <4 x float> zeroinitializer, float %14876, i32 0
  %14878 = insertelement <4 x float> %14877, float 0.000000e+00, i32 1
  %14879 = insertelement <4 x float> %14878, float 0.000000e+00, i32 2
  %14880 = insertelement <4 x float> %14879, float 0.000000e+00, i32 3
  %14881 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14875, <4 x float> %14880, <4 x float> zeroinitializer)
  %14882 = extractelement <4 x float> %14881, i32 0
  %14883 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14884 = getelementptr inbounds i8, i8* %14883, i64 32
  %14885 = bitcast i8* %14884 to float*
  store float %14882, float* %14885, align 4
  %14886 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14887 = getelementptr inbounds i8, i8* %14886, i64 32
  %14888 = bitcast i8* %14887 to float*
  %14889 = load float, float* %14888, align 4
  %14890 = insertelement <4 x float> zeroinitializer, float %14889, i32 0
  %14891 = insertelement <4 x float> %14890, float 1.000000e+00, i32 1
  %14892 = insertelement <4 x float> %14891, float 1.000000e+00, i32 2
  %14893 = insertelement <4 x float> %14892, float 1.000000e+00, i32 3
  %14894 = load float, float* %1, align 4
  %14895 = insertelement <4 x float> zeroinitializer, float %14894, i32 0
  %14896 = insertelement <4 x float> %14895, float 0.000000e+00, i32 1
  %14897 = insertelement <4 x float> %14896, float 0.000000e+00, i32 2
  %14898 = insertelement <4 x float> %14897, float 0.000000e+00, i32 3
  %14899 = fmul <4 x float> %14893, %14898
  %14900 = fadd <4 x float> %14899, zeroinitializer
  %14901 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14902 = getelementptr inbounds i8, i8* %14901, i64 36
  %14903 = bitcast i8* %14902 to float*
  %14904 = load float, float* %14903, align 4
  %14905 = insertelement <4 x float> zeroinitializer, float %14904, i32 0
  %14906 = insertelement <4 x float> %14905, float 0.000000e+00, i32 1
  %14907 = insertelement <4 x float> %14906, float 0.000000e+00, i32 2
  %14908 = insertelement <4 x float> %14907, float 0.000000e+00, i32 3
  %14909 = getelementptr inbounds float, float* %1, i64 4
  %14910 = load float, float* %14909, align 4
  %14911 = insertelement <4 x float> zeroinitializer, float %14910, i32 0
  %14912 = insertelement <4 x float> %14911, float 0.000000e+00, i32 1
  %14913 = insertelement <4 x float> %14912, float 0.000000e+00, i32 2
  %14914 = insertelement <4 x float> %14913, float 0.000000e+00, i32 3
  %14915 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14908, <4 x float> %14914, <4 x float> %14900)
  %14916 = extractelement <4 x float> %14915, i32 0
  %14917 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14918 = getelementptr inbounds i8, i8* %14917, i64 32
  %14919 = bitcast i8* %14918 to float*
  store float %14916, float* %14919, align 4
  %14920 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14921 = getelementptr inbounds i8, i8* %14920, i64 32
  %14922 = bitcast i8* %14921 to float*
  %14923 = load float, float* %14922, align 4
  %14924 = insertelement <4 x float> zeroinitializer, float %14923, i32 0
  %14925 = insertelement <4 x float> %14924, float 1.000000e+00, i32 1
  %14926 = insertelement <4 x float> %14925, float 1.000000e+00, i32 2
  %14927 = insertelement <4 x float> %14926, float 1.000000e+00, i32 3
  %14928 = load float, float* %1, align 4
  %14929 = insertelement <4 x float> zeroinitializer, float %14928, i32 0
  %14930 = insertelement <4 x float> %14929, float 0.000000e+00, i32 1
  %14931 = insertelement <4 x float> %14930, float 0.000000e+00, i32 2
  %14932 = insertelement <4 x float> %14931, float 0.000000e+00, i32 3
  %14933 = fmul <4 x float> %14927, %14932
  %14934 = fadd <4 x float> %14933, zeroinitializer
  %14935 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14936 = getelementptr inbounds i8, i8* %14935, i64 36
  %14937 = bitcast i8* %14936 to float*
  %14938 = load float, float* %14937, align 4
  %14939 = insertelement <4 x float> zeroinitializer, float %14938, i32 0
  %14940 = insertelement <4 x float> %14939, float 1.000000e+00, i32 1
  %14941 = insertelement <4 x float> %14940, float 1.000000e+00, i32 2
  %14942 = insertelement <4 x float> %14941, float 1.000000e+00, i32 3
  %14943 = getelementptr inbounds float, float* %1, i64 4
  %14944 = load float, float* %14943, align 4
  %14945 = insertelement <4 x float> zeroinitializer, float %14944, i32 0
  %14946 = insertelement <4 x float> %14945, float 0.000000e+00, i32 1
  %14947 = insertelement <4 x float> %14946, float 0.000000e+00, i32 2
  %14948 = insertelement <4 x float> %14947, float 0.000000e+00, i32 3
  %14949 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14942, <4 x float> %14948, <4 x float> %14934)
  %14950 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14951 = getelementptr inbounds i8, i8* %14950, i64 40
  %14952 = bitcast i8* %14951 to float*
  %14953 = load float, float* %14952, align 4
  %14954 = insertelement <4 x float> zeroinitializer, float %14953, i32 0
  %14955 = insertelement <4 x float> %14954, float 0.000000e+00, i32 1
  %14956 = insertelement <4 x float> %14955, float 0.000000e+00, i32 2
  %14957 = insertelement <4 x float> %14956, float 0.000000e+00, i32 3
  %14958 = getelementptr inbounds float, float* %1, i64 8
  %14959 = load float, float* %14958, align 4
  %14960 = insertelement <4 x float> zeroinitializer, float %14959, i32 0
  %14961 = insertelement <4 x float> %14960, float 0.000000e+00, i32 1
  %14962 = insertelement <4 x float> %14961, float 0.000000e+00, i32 2
  %14963 = insertelement <4 x float> %14962, float 0.000000e+00, i32 3
  %14964 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14957, <4 x float> %14963, <4 x float> %14949)
  %14965 = extractelement <4 x float> %14964, i32 0
  %14966 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14967 = getelementptr inbounds i8, i8* %14966, i64 32
  %14968 = bitcast i8* %14967 to float*
  store float %14965, float* %14968, align 4
  %14969 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14970 = getelementptr inbounds i8, i8* %14969, i64 32
  %14971 = bitcast i8* %14970 to float*
  %14972 = load float, float* %14971, align 4
  %14973 = insertelement <4 x float> zeroinitializer, float %14972, i32 0
  %14974 = insertelement <4 x float> %14973, float 1.000000e+00, i32 1
  %14975 = insertelement <4 x float> %14974, float 1.000000e+00, i32 2
  %14976 = insertelement <4 x float> %14975, float 1.000000e+00, i32 3
  %14977 = load float, float* %1, align 4
  %14978 = insertelement <4 x float> zeroinitializer, float %14977, i32 0
  %14979 = insertelement <4 x float> %14978, float 0.000000e+00, i32 1
  %14980 = insertelement <4 x float> %14979, float 0.000000e+00, i32 2
  %14981 = insertelement <4 x float> %14980, float 0.000000e+00, i32 3
  %14982 = fmul <4 x float> %14976, %14981
  %14983 = fadd <4 x float> %14982, zeroinitializer
  %14984 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14985 = getelementptr inbounds i8, i8* %14984, i64 36
  %14986 = bitcast i8* %14985 to float*
  %14987 = load float, float* %14986, align 4
  %14988 = insertelement <4 x float> zeroinitializer, float %14987, i32 0
  %14989 = insertelement <4 x float> %14988, float 1.000000e+00, i32 1
  %14990 = insertelement <4 x float> %14989, float 1.000000e+00, i32 2
  %14991 = insertelement <4 x float> %14990, float 1.000000e+00, i32 3
  %14992 = getelementptr inbounds float, float* %1, i64 4
  %14993 = load float, float* %14992, align 4
  %14994 = insertelement <4 x float> zeroinitializer, float %14993, i32 0
  %14995 = insertelement <4 x float> %14994, float 0.000000e+00, i32 1
  %14996 = insertelement <4 x float> %14995, float 0.000000e+00, i32 2
  %14997 = insertelement <4 x float> %14996, float 0.000000e+00, i32 3
  %14998 = call <4 x float> @llvm.fma.v4f32(<4 x float> %14991, <4 x float> %14997, <4 x float> %14983)
  %14999 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15000 = getelementptr inbounds i8, i8* %14999, i64 40
  %15001 = bitcast i8* %15000 to float*
  %15002 = load float, float* %15001, align 4
  %15003 = insertelement <4 x float> zeroinitializer, float %15002, i32 0
  %15004 = insertelement <4 x float> %15003, float 1.000000e+00, i32 1
  %15005 = insertelement <4 x float> %15004, float 1.000000e+00, i32 2
  %15006 = insertelement <4 x float> %15005, float 1.000000e+00, i32 3
  %15007 = getelementptr inbounds float, float* %1, i64 8
  %15008 = load float, float* %15007, align 4
  %15009 = insertelement <4 x float> zeroinitializer, float %15008, i32 0
  %15010 = insertelement <4 x float> %15009, float 0.000000e+00, i32 1
  %15011 = insertelement <4 x float> %15010, float 0.000000e+00, i32 2
  %15012 = insertelement <4 x float> %15011, float 0.000000e+00, i32 3
  %15013 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15006, <4 x float> %15012, <4 x float> %14998)
  %15014 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15015 = getelementptr inbounds i8, i8* %15014, i64 44
  %15016 = bitcast i8* %15015 to float*
  %15017 = load float, float* %15016, align 4
  %15018 = insertelement <4 x float> zeroinitializer, float %15017, i32 0
  %15019 = insertelement <4 x float> %15018, float 0.000000e+00, i32 1
  %15020 = insertelement <4 x float> %15019, float 0.000000e+00, i32 2
  %15021 = insertelement <4 x float> %15020, float 0.000000e+00, i32 3
  %15022 = getelementptr inbounds float, float* %1, i64 12
  %15023 = load float, float* %15022, align 4
  %15024 = insertelement <4 x float> zeroinitializer, float %15023, i32 0
  %15025 = insertelement <4 x float> %15024, float 0.000000e+00, i32 1
  %15026 = insertelement <4 x float> %15025, float 0.000000e+00, i32 2
  %15027 = insertelement <4 x float> %15026, float 0.000000e+00, i32 3
  %15028 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15021, <4 x float> %15027, <4 x float> %15013)
  %15029 = extractelement <4 x float> %15028, i32 0
  %15030 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15031 = getelementptr inbounds i8, i8* %15030, i64 32
  %15032 = bitcast i8* %15031 to float*
  store float %15029, float* %15032, align 4
  %15033 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15034 = getelementptr inbounds i8, i8* %15033, i64 32
  %15035 = bitcast i8* %15034 to float*
  %15036 = load float, float* %15035, align 4
  %15037 = insertelement <4 x float> zeroinitializer, float %15036, i32 0
  %15038 = insertelement <4 x float> %15037, float 0.000000e+00, i32 1
  %15039 = insertelement <4 x float> %15038, float 0.000000e+00, i32 2
  %15040 = insertelement <4 x float> %15039, float 0.000000e+00, i32 3
  %15041 = getelementptr inbounds float, float* %1, i64 1
  %15042 = load float, float* %15041, align 4
  %15043 = insertelement <4 x float> zeroinitializer, float %15042, i32 0
  %15044 = insertelement <4 x float> %15043, float 0.000000e+00, i32 1
  %15045 = insertelement <4 x float> %15044, float 0.000000e+00, i32 2
  %15046 = insertelement <4 x float> %15045, float 0.000000e+00, i32 3
  %15047 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15040, <4 x float> %15046, <4 x float> zeroinitializer)
  %15048 = extractelement <4 x float> %15047, i32 0
  %15049 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15050 = getelementptr inbounds i8, i8* %15049, i64 36
  %15051 = bitcast i8* %15050 to float*
  store float %15048, float* %15051, align 4
  %15052 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15053 = getelementptr inbounds i8, i8* %15052, i64 32
  %15054 = bitcast i8* %15053 to float*
  %15055 = load float, float* %15054, align 4
  %15056 = insertelement <4 x float> zeroinitializer, float %15055, i32 0
  %15057 = insertelement <4 x float> %15056, float 1.000000e+00, i32 1
  %15058 = insertelement <4 x float> %15057, float 1.000000e+00, i32 2
  %15059 = insertelement <4 x float> %15058, float 1.000000e+00, i32 3
  %15060 = getelementptr inbounds float, float* %1, i64 1
  %15061 = load float, float* %15060, align 4
  %15062 = insertelement <4 x float> zeroinitializer, float %15061, i32 0
  %15063 = insertelement <4 x float> %15062, float 0.000000e+00, i32 1
  %15064 = insertelement <4 x float> %15063, float 0.000000e+00, i32 2
  %15065 = insertelement <4 x float> %15064, float 0.000000e+00, i32 3
  %15066 = fmul <4 x float> %15059, %15065
  %15067 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15068 = getelementptr inbounds i8, i8* %15067, i64 36
  %15069 = bitcast i8* %15068 to float*
  %15070 = load float, float* %15069, align 4
  %15071 = insertelement <4 x float> zeroinitializer, float %15070, i32 0
  %15072 = insertelement <4 x float> %15071, float 0.000000e+00, i32 1
  %15073 = insertelement <4 x float> %15072, float 0.000000e+00, i32 2
  %15074 = insertelement <4 x float> %15073, float 0.000000e+00, i32 3
  %15075 = getelementptr inbounds float, float* %1, i64 5
  %15076 = load float, float* %15075, align 4
  %15077 = insertelement <4 x float> zeroinitializer, float %15076, i32 0
  %15078 = insertelement <4 x float> %15077, float 0.000000e+00, i32 1
  %15079 = insertelement <4 x float> %15078, float 0.000000e+00, i32 2
  %15080 = insertelement <4 x float> %15079, float 0.000000e+00, i32 3
  %15081 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15074, <4 x float> %15080, <4 x float> %15066)
  %15082 = extractelement <4 x float> %15081, i32 0
  %15083 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15084 = getelementptr inbounds i8, i8* %15083, i64 36
  %15085 = bitcast i8* %15084 to float*
  store float %15082, float* %15085, align 4
  %15086 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15087 = getelementptr inbounds i8, i8* %15086, i64 32
  %15088 = bitcast i8* %15087 to float*
  %15089 = load float, float* %15088, align 4
  %15090 = insertelement <4 x float> zeroinitializer, float %15089, i32 0
  %15091 = insertelement <4 x float> %15090, float 1.000000e+00, i32 1
  %15092 = insertelement <4 x float> %15091, float 1.000000e+00, i32 2
  %15093 = insertelement <4 x float> %15092, float 1.000000e+00, i32 3
  %15094 = getelementptr inbounds float, float* %1, i64 1
  %15095 = load float, float* %15094, align 4
  %15096 = insertelement <4 x float> zeroinitializer, float %15095, i32 0
  %15097 = insertelement <4 x float> %15096, float 0.000000e+00, i32 1
  %15098 = insertelement <4 x float> %15097, float 0.000000e+00, i32 2
  %15099 = insertelement <4 x float> %15098, float 0.000000e+00, i32 3
  %15100 = fmul <4 x float> %15093, %15099
  %15101 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15102 = getelementptr inbounds i8, i8* %15101, i64 36
  %15103 = bitcast i8* %15102 to float*
  %15104 = load float, float* %15103, align 4
  %15105 = insertelement <4 x float> zeroinitializer, float %15104, i32 0
  %15106 = insertelement <4 x float> %15105, float 1.000000e+00, i32 1
  %15107 = insertelement <4 x float> %15106, float 1.000000e+00, i32 2
  %15108 = insertelement <4 x float> %15107, float 1.000000e+00, i32 3
  %15109 = getelementptr inbounds float, float* %1, i64 5
  %15110 = load float, float* %15109, align 4
  %15111 = insertelement <4 x float> zeroinitializer, float %15110, i32 0
  %15112 = insertelement <4 x float> %15111, float 0.000000e+00, i32 1
  %15113 = insertelement <4 x float> %15112, float 0.000000e+00, i32 2
  %15114 = insertelement <4 x float> %15113, float 0.000000e+00, i32 3
  %15115 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15108, <4 x float> %15114, <4 x float> %15100)
  %15116 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15117 = getelementptr inbounds i8, i8* %15116, i64 40
  %15118 = bitcast i8* %15117 to float*
  %15119 = load float, float* %15118, align 4
  %15120 = insertelement <4 x float> zeroinitializer, float %15119, i32 0
  %15121 = insertelement <4 x float> %15120, float 0.000000e+00, i32 1
  %15122 = insertelement <4 x float> %15121, float 0.000000e+00, i32 2
  %15123 = insertelement <4 x float> %15122, float 0.000000e+00, i32 3
  %15124 = getelementptr inbounds float, float* %1, i64 9
  %15125 = load float, float* %15124, align 4
  %15126 = insertelement <4 x float> zeroinitializer, float %15125, i32 0
  %15127 = insertelement <4 x float> %15126, float 0.000000e+00, i32 1
  %15128 = insertelement <4 x float> %15127, float 0.000000e+00, i32 2
  %15129 = insertelement <4 x float> %15128, float 0.000000e+00, i32 3
  %15130 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15123, <4 x float> %15129, <4 x float> %15115)
  %15131 = extractelement <4 x float> %15130, i32 0
  %15132 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15133 = getelementptr inbounds i8, i8* %15132, i64 36
  %15134 = bitcast i8* %15133 to float*
  store float %15131, float* %15134, align 4
  %15135 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15136 = getelementptr inbounds i8, i8* %15135, i64 32
  %15137 = bitcast i8* %15136 to float*
  %15138 = load float, float* %15137, align 4
  %15139 = insertelement <4 x float> zeroinitializer, float %15138, i32 0
  %15140 = insertelement <4 x float> %15139, float 1.000000e+00, i32 1
  %15141 = insertelement <4 x float> %15140, float 1.000000e+00, i32 2
  %15142 = insertelement <4 x float> %15141, float 1.000000e+00, i32 3
  %15143 = getelementptr inbounds float, float* %1, i64 1
  %15144 = load float, float* %15143, align 4
  %15145 = insertelement <4 x float> zeroinitializer, float %15144, i32 0
  %15146 = insertelement <4 x float> %15145, float 0.000000e+00, i32 1
  %15147 = insertelement <4 x float> %15146, float 0.000000e+00, i32 2
  %15148 = insertelement <4 x float> %15147, float 0.000000e+00, i32 3
  %15149 = fmul <4 x float> %15142, %15148
  %15150 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15151 = getelementptr inbounds i8, i8* %15150, i64 36
  %15152 = bitcast i8* %15151 to float*
  %15153 = load float, float* %15152, align 4
  %15154 = insertelement <4 x float> zeroinitializer, float %15153, i32 0
  %15155 = insertelement <4 x float> %15154, float 1.000000e+00, i32 1
  %15156 = insertelement <4 x float> %15155, float 1.000000e+00, i32 2
  %15157 = insertelement <4 x float> %15156, float 1.000000e+00, i32 3
  %15158 = getelementptr inbounds float, float* %1, i64 5
  %15159 = load float, float* %15158, align 4
  %15160 = insertelement <4 x float> zeroinitializer, float %15159, i32 0
  %15161 = insertelement <4 x float> %15160, float 0.000000e+00, i32 1
  %15162 = insertelement <4 x float> %15161, float 0.000000e+00, i32 2
  %15163 = insertelement <4 x float> %15162, float 0.000000e+00, i32 3
  %15164 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15157, <4 x float> %15163, <4 x float> %15149)
  %15165 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15166 = getelementptr inbounds i8, i8* %15165, i64 40
  %15167 = bitcast i8* %15166 to float*
  %15168 = load float, float* %15167, align 4
  %15169 = insertelement <4 x float> zeroinitializer, float %15168, i32 0
  %15170 = insertelement <4 x float> %15169, float 1.000000e+00, i32 1
  %15171 = insertelement <4 x float> %15170, float 1.000000e+00, i32 2
  %15172 = insertelement <4 x float> %15171, float 1.000000e+00, i32 3
  %15173 = getelementptr inbounds float, float* %1, i64 9
  %15174 = load float, float* %15173, align 4
  %15175 = insertelement <4 x float> zeroinitializer, float %15174, i32 0
  %15176 = insertelement <4 x float> %15175, float 0.000000e+00, i32 1
  %15177 = insertelement <4 x float> %15176, float 0.000000e+00, i32 2
  %15178 = insertelement <4 x float> %15177, float 0.000000e+00, i32 3
  %15179 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15172, <4 x float> %15178, <4 x float> %15164)
  %15180 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15181 = getelementptr inbounds i8, i8* %15180, i64 44
  %15182 = bitcast i8* %15181 to float*
  %15183 = load float, float* %15182, align 4
  %15184 = insertelement <4 x float> zeroinitializer, float %15183, i32 0
  %15185 = insertelement <4 x float> %15184, float 0.000000e+00, i32 1
  %15186 = insertelement <4 x float> %15185, float 0.000000e+00, i32 2
  %15187 = insertelement <4 x float> %15186, float 0.000000e+00, i32 3
  %15188 = getelementptr inbounds float, float* %1, i64 13
  %15189 = load float, float* %15188, align 4
  %15190 = insertelement <4 x float> zeroinitializer, float %15189, i32 0
  %15191 = insertelement <4 x float> %15190, float 0.000000e+00, i32 1
  %15192 = insertelement <4 x float> %15191, float 0.000000e+00, i32 2
  %15193 = insertelement <4 x float> %15192, float 0.000000e+00, i32 3
  %15194 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15187, <4 x float> %15193, <4 x float> %15179)
  %15195 = extractelement <4 x float> %15194, i32 0
  %15196 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15197 = getelementptr inbounds i8, i8* %15196, i64 36
  %15198 = bitcast i8* %15197 to float*
  store float %15195, float* %15198, align 4
  %15199 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15200 = getelementptr inbounds i8, i8* %15199, i64 32
  %15201 = bitcast i8* %15200 to float*
  %15202 = load float, float* %15201, align 4
  %15203 = insertelement <4 x float> zeroinitializer, float %15202, i32 0
  %15204 = insertelement <4 x float> %15203, float 0.000000e+00, i32 1
  %15205 = insertelement <4 x float> %15204, float 0.000000e+00, i32 2
  %15206 = insertelement <4 x float> %15205, float 0.000000e+00, i32 3
  %15207 = getelementptr inbounds float, float* %1, i64 2
  %15208 = load float, float* %15207, align 4
  %15209 = insertelement <4 x float> zeroinitializer, float %15208, i32 0
  %15210 = insertelement <4 x float> %15209, float 0.000000e+00, i32 1
  %15211 = insertelement <4 x float> %15210, float 0.000000e+00, i32 2
  %15212 = insertelement <4 x float> %15211, float 0.000000e+00, i32 3
  %15213 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15206, <4 x float> %15212, <4 x float> zeroinitializer)
  %15214 = extractelement <4 x float> %15213, i32 0
  %15215 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15216 = getelementptr inbounds i8, i8* %15215, i64 40
  %15217 = bitcast i8* %15216 to float*
  store float %15214, float* %15217, align 4
  %15218 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15219 = getelementptr inbounds i8, i8* %15218, i64 32
  %15220 = bitcast i8* %15219 to float*
  %15221 = load float, float* %15220, align 4
  %15222 = insertelement <4 x float> zeroinitializer, float %15221, i32 0
  %15223 = insertelement <4 x float> %15222, float 1.000000e+00, i32 1
  %15224 = insertelement <4 x float> %15223, float 1.000000e+00, i32 2
  %15225 = insertelement <4 x float> %15224, float 1.000000e+00, i32 3
  %15226 = getelementptr inbounds float, float* %1, i64 2
  %15227 = load float, float* %15226, align 4
  %15228 = insertelement <4 x float> zeroinitializer, float %15227, i32 0
  %15229 = insertelement <4 x float> %15228, float 0.000000e+00, i32 1
  %15230 = insertelement <4 x float> %15229, float 0.000000e+00, i32 2
  %15231 = insertelement <4 x float> %15230, float 0.000000e+00, i32 3
  %15232 = fmul <4 x float> %15225, %15231
  %15233 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15234 = getelementptr inbounds i8, i8* %15233, i64 36
  %15235 = bitcast i8* %15234 to float*
  %15236 = load float, float* %15235, align 4
  %15237 = insertelement <4 x float> zeroinitializer, float %15236, i32 0
  %15238 = insertelement <4 x float> %15237, float 0.000000e+00, i32 1
  %15239 = insertelement <4 x float> %15238, float 0.000000e+00, i32 2
  %15240 = insertelement <4 x float> %15239, float 0.000000e+00, i32 3
  %15241 = getelementptr inbounds float, float* %1, i64 6
  %15242 = load float, float* %15241, align 4
  %15243 = insertelement <4 x float> zeroinitializer, float %15242, i32 0
  %15244 = insertelement <4 x float> %15243, float 0.000000e+00, i32 1
  %15245 = insertelement <4 x float> %15244, float 0.000000e+00, i32 2
  %15246 = insertelement <4 x float> %15245, float 0.000000e+00, i32 3
  %15247 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15240, <4 x float> %15246, <4 x float> %15232)
  %15248 = extractelement <4 x float> %15247, i32 0
  %15249 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15250 = getelementptr inbounds i8, i8* %15249, i64 40
  %15251 = bitcast i8* %15250 to float*
  store float %15248, float* %15251, align 4
  %15252 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15253 = getelementptr inbounds i8, i8* %15252, i64 32
  %15254 = bitcast i8* %15253 to float*
  %15255 = load float, float* %15254, align 4
  %15256 = insertelement <4 x float> zeroinitializer, float %15255, i32 0
  %15257 = insertelement <4 x float> %15256, float 1.000000e+00, i32 1
  %15258 = insertelement <4 x float> %15257, float 1.000000e+00, i32 2
  %15259 = insertelement <4 x float> %15258, float 1.000000e+00, i32 3
  %15260 = getelementptr inbounds float, float* %1, i64 2
  %15261 = load float, float* %15260, align 4
  %15262 = insertelement <4 x float> zeroinitializer, float %15261, i32 0
  %15263 = insertelement <4 x float> %15262, float 0.000000e+00, i32 1
  %15264 = insertelement <4 x float> %15263, float 0.000000e+00, i32 2
  %15265 = insertelement <4 x float> %15264, float 0.000000e+00, i32 3
  %15266 = fmul <4 x float> %15259, %15265
  %15267 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15268 = getelementptr inbounds i8, i8* %15267, i64 36
  %15269 = bitcast i8* %15268 to float*
  %15270 = load float, float* %15269, align 4
  %15271 = insertelement <4 x float> zeroinitializer, float %15270, i32 0
  %15272 = insertelement <4 x float> %15271, float 1.000000e+00, i32 1
  %15273 = insertelement <4 x float> %15272, float 1.000000e+00, i32 2
  %15274 = insertelement <4 x float> %15273, float 1.000000e+00, i32 3
  %15275 = getelementptr inbounds float, float* %1, i64 6
  %15276 = load float, float* %15275, align 4
  %15277 = insertelement <4 x float> zeroinitializer, float %15276, i32 0
  %15278 = insertelement <4 x float> %15277, float 0.000000e+00, i32 1
  %15279 = insertelement <4 x float> %15278, float 0.000000e+00, i32 2
  %15280 = insertelement <4 x float> %15279, float 0.000000e+00, i32 3
  %15281 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15274, <4 x float> %15280, <4 x float> %15266)
  %15282 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15283 = getelementptr inbounds i8, i8* %15282, i64 40
  %15284 = bitcast i8* %15283 to float*
  %15285 = load float, float* %15284, align 4
  %15286 = insertelement <4 x float> zeroinitializer, float %15285, i32 0
  %15287 = insertelement <4 x float> %15286, float 0.000000e+00, i32 1
  %15288 = insertelement <4 x float> %15287, float 0.000000e+00, i32 2
  %15289 = insertelement <4 x float> %15288, float 0.000000e+00, i32 3
  %15290 = getelementptr inbounds float, float* %1, i64 10
  %15291 = load float, float* %15290, align 4
  %15292 = insertelement <4 x float> zeroinitializer, float %15291, i32 0
  %15293 = insertelement <4 x float> %15292, float 0.000000e+00, i32 1
  %15294 = insertelement <4 x float> %15293, float 0.000000e+00, i32 2
  %15295 = insertelement <4 x float> %15294, float 0.000000e+00, i32 3
  %15296 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15289, <4 x float> %15295, <4 x float> %15281)
  %15297 = extractelement <4 x float> %15296, i32 0
  %15298 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15299 = getelementptr inbounds i8, i8* %15298, i64 40
  %15300 = bitcast i8* %15299 to float*
  store float %15297, float* %15300, align 4
  %15301 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15302 = getelementptr inbounds i8, i8* %15301, i64 32
  %15303 = bitcast i8* %15302 to float*
  %15304 = load float, float* %15303, align 4
  %15305 = insertelement <4 x float> zeroinitializer, float %15304, i32 0
  %15306 = insertelement <4 x float> %15305, float 1.000000e+00, i32 1
  %15307 = insertelement <4 x float> %15306, float 1.000000e+00, i32 2
  %15308 = insertelement <4 x float> %15307, float 1.000000e+00, i32 3
  %15309 = getelementptr inbounds float, float* %1, i64 2
  %15310 = load float, float* %15309, align 4
  %15311 = insertelement <4 x float> zeroinitializer, float %15310, i32 0
  %15312 = insertelement <4 x float> %15311, float 0.000000e+00, i32 1
  %15313 = insertelement <4 x float> %15312, float 0.000000e+00, i32 2
  %15314 = insertelement <4 x float> %15313, float 0.000000e+00, i32 3
  %15315 = fmul <4 x float> %15308, %15314
  %15316 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15317 = getelementptr inbounds i8, i8* %15316, i64 36
  %15318 = bitcast i8* %15317 to float*
  %15319 = load float, float* %15318, align 4
  %15320 = insertelement <4 x float> zeroinitializer, float %15319, i32 0
  %15321 = insertelement <4 x float> %15320, float 1.000000e+00, i32 1
  %15322 = insertelement <4 x float> %15321, float 1.000000e+00, i32 2
  %15323 = insertelement <4 x float> %15322, float 1.000000e+00, i32 3
  %15324 = getelementptr inbounds float, float* %1, i64 6
  %15325 = load float, float* %15324, align 4
  %15326 = insertelement <4 x float> zeroinitializer, float %15325, i32 0
  %15327 = insertelement <4 x float> %15326, float 0.000000e+00, i32 1
  %15328 = insertelement <4 x float> %15327, float 0.000000e+00, i32 2
  %15329 = insertelement <4 x float> %15328, float 0.000000e+00, i32 3
  %15330 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15323, <4 x float> %15329, <4 x float> %15315)
  %15331 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15332 = getelementptr inbounds i8, i8* %15331, i64 40
  %15333 = bitcast i8* %15332 to float*
  %15334 = load float, float* %15333, align 4
  %15335 = insertelement <4 x float> zeroinitializer, float %15334, i32 0
  %15336 = insertelement <4 x float> %15335, float 1.000000e+00, i32 1
  %15337 = insertelement <4 x float> %15336, float 1.000000e+00, i32 2
  %15338 = insertelement <4 x float> %15337, float 1.000000e+00, i32 3
  %15339 = getelementptr inbounds float, float* %1, i64 10
  %15340 = load float, float* %15339, align 4
  %15341 = insertelement <4 x float> zeroinitializer, float %15340, i32 0
  %15342 = insertelement <4 x float> %15341, float 0.000000e+00, i32 1
  %15343 = insertelement <4 x float> %15342, float 0.000000e+00, i32 2
  %15344 = insertelement <4 x float> %15343, float 0.000000e+00, i32 3
  %15345 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15338, <4 x float> %15344, <4 x float> %15330)
  %15346 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15347 = getelementptr inbounds i8, i8* %15346, i64 44
  %15348 = bitcast i8* %15347 to float*
  %15349 = load float, float* %15348, align 4
  %15350 = insertelement <4 x float> zeroinitializer, float %15349, i32 0
  %15351 = insertelement <4 x float> %15350, float 0.000000e+00, i32 1
  %15352 = insertelement <4 x float> %15351, float 0.000000e+00, i32 2
  %15353 = insertelement <4 x float> %15352, float 0.000000e+00, i32 3
  %15354 = getelementptr inbounds float, float* %1, i64 14
  %15355 = load float, float* %15354, align 4
  %15356 = insertelement <4 x float> zeroinitializer, float %15355, i32 0
  %15357 = insertelement <4 x float> %15356, float 0.000000e+00, i32 1
  %15358 = insertelement <4 x float> %15357, float 0.000000e+00, i32 2
  %15359 = insertelement <4 x float> %15358, float 0.000000e+00, i32 3
  %15360 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15353, <4 x float> %15359, <4 x float> %15345)
  %15361 = extractelement <4 x float> %15360, i32 0
  %15362 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15363 = getelementptr inbounds i8, i8* %15362, i64 40
  %15364 = bitcast i8* %15363 to float*
  store float %15361, float* %15364, align 4
  %15365 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15366 = getelementptr inbounds i8, i8* %15365, i64 32
  %15367 = bitcast i8* %15366 to float*
  %15368 = load float, float* %15367, align 4
  %15369 = insertelement <4 x float> zeroinitializer, float %15368, i32 0
  %15370 = insertelement <4 x float> %15369, float 0.000000e+00, i32 1
  %15371 = insertelement <4 x float> %15370, float 0.000000e+00, i32 2
  %15372 = insertelement <4 x float> %15371, float 0.000000e+00, i32 3
  %15373 = getelementptr inbounds float, float* %1, i64 3
  %15374 = load float, float* %15373, align 4
  %15375 = insertelement <4 x float> zeroinitializer, float %15374, i32 0
  %15376 = insertelement <4 x float> %15375, float 0.000000e+00, i32 1
  %15377 = insertelement <4 x float> %15376, float 0.000000e+00, i32 2
  %15378 = insertelement <4 x float> %15377, float 0.000000e+00, i32 3
  %15379 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15372, <4 x float> %15378, <4 x float> zeroinitializer)
  %15380 = extractelement <4 x float> %15379, i32 0
  %15381 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15382 = getelementptr inbounds i8, i8* %15381, i64 44
  %15383 = bitcast i8* %15382 to float*
  store float %15380, float* %15383, align 4
  %15384 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15385 = getelementptr inbounds i8, i8* %15384, i64 32
  %15386 = bitcast i8* %15385 to float*
  %15387 = load float, float* %15386, align 4
  %15388 = insertelement <4 x float> zeroinitializer, float %15387, i32 0
  %15389 = insertelement <4 x float> %15388, float 1.000000e+00, i32 1
  %15390 = insertelement <4 x float> %15389, float 1.000000e+00, i32 2
  %15391 = insertelement <4 x float> %15390, float 1.000000e+00, i32 3
  %15392 = getelementptr inbounds float, float* %1, i64 3
  %15393 = load float, float* %15392, align 4
  %15394 = insertelement <4 x float> zeroinitializer, float %15393, i32 0
  %15395 = insertelement <4 x float> %15394, float 0.000000e+00, i32 1
  %15396 = insertelement <4 x float> %15395, float 0.000000e+00, i32 2
  %15397 = insertelement <4 x float> %15396, float 0.000000e+00, i32 3
  %15398 = fmul <4 x float> %15391, %15397
  %15399 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15400 = getelementptr inbounds i8, i8* %15399, i64 36
  %15401 = bitcast i8* %15400 to float*
  %15402 = load float, float* %15401, align 4
  %15403 = insertelement <4 x float> zeroinitializer, float %15402, i32 0
  %15404 = insertelement <4 x float> %15403, float 0.000000e+00, i32 1
  %15405 = insertelement <4 x float> %15404, float 0.000000e+00, i32 2
  %15406 = insertelement <4 x float> %15405, float 0.000000e+00, i32 3
  %15407 = getelementptr inbounds float, float* %1, i64 7
  %15408 = load float, float* %15407, align 4
  %15409 = insertelement <4 x float> zeroinitializer, float %15408, i32 0
  %15410 = insertelement <4 x float> %15409, float 0.000000e+00, i32 1
  %15411 = insertelement <4 x float> %15410, float 0.000000e+00, i32 2
  %15412 = insertelement <4 x float> %15411, float 0.000000e+00, i32 3
  %15413 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15406, <4 x float> %15412, <4 x float> %15398)
  %15414 = extractelement <4 x float> %15413, i32 0
  %15415 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15416 = getelementptr inbounds i8, i8* %15415, i64 44
  %15417 = bitcast i8* %15416 to float*
  store float %15414, float* %15417, align 4
  %15418 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15419 = getelementptr inbounds i8, i8* %15418, i64 32
  %15420 = bitcast i8* %15419 to float*
  %15421 = load float, float* %15420, align 4
  %15422 = insertelement <4 x float> zeroinitializer, float %15421, i32 0
  %15423 = insertelement <4 x float> %15422, float 1.000000e+00, i32 1
  %15424 = insertelement <4 x float> %15423, float 1.000000e+00, i32 2
  %15425 = insertelement <4 x float> %15424, float 1.000000e+00, i32 3
  %15426 = getelementptr inbounds float, float* %1, i64 3
  %15427 = load float, float* %15426, align 4
  %15428 = insertelement <4 x float> zeroinitializer, float %15427, i32 0
  %15429 = insertelement <4 x float> %15428, float 0.000000e+00, i32 1
  %15430 = insertelement <4 x float> %15429, float 0.000000e+00, i32 2
  %15431 = insertelement <4 x float> %15430, float 0.000000e+00, i32 3
  %15432 = fmul <4 x float> %15425, %15431
  %15433 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15434 = getelementptr inbounds i8, i8* %15433, i64 36
  %15435 = bitcast i8* %15434 to float*
  %15436 = load float, float* %15435, align 4
  %15437 = insertelement <4 x float> zeroinitializer, float %15436, i32 0
  %15438 = insertelement <4 x float> %15437, float 1.000000e+00, i32 1
  %15439 = insertelement <4 x float> %15438, float 1.000000e+00, i32 2
  %15440 = insertelement <4 x float> %15439, float 1.000000e+00, i32 3
  %15441 = getelementptr inbounds float, float* %1, i64 7
  %15442 = load float, float* %15441, align 4
  %15443 = insertelement <4 x float> zeroinitializer, float %15442, i32 0
  %15444 = insertelement <4 x float> %15443, float 0.000000e+00, i32 1
  %15445 = insertelement <4 x float> %15444, float 0.000000e+00, i32 2
  %15446 = insertelement <4 x float> %15445, float 0.000000e+00, i32 3
  %15447 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15440, <4 x float> %15446, <4 x float> %15432)
  %15448 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15449 = getelementptr inbounds i8, i8* %15448, i64 40
  %15450 = bitcast i8* %15449 to float*
  %15451 = load float, float* %15450, align 4
  %15452 = insertelement <4 x float> zeroinitializer, float %15451, i32 0
  %15453 = insertelement <4 x float> %15452, float 0.000000e+00, i32 1
  %15454 = insertelement <4 x float> %15453, float 0.000000e+00, i32 2
  %15455 = insertelement <4 x float> %15454, float 0.000000e+00, i32 3
  %15456 = getelementptr inbounds float, float* %1, i64 11
  %15457 = load float, float* %15456, align 4
  %15458 = insertelement <4 x float> zeroinitializer, float %15457, i32 0
  %15459 = insertelement <4 x float> %15458, float 0.000000e+00, i32 1
  %15460 = insertelement <4 x float> %15459, float 0.000000e+00, i32 2
  %15461 = insertelement <4 x float> %15460, float 0.000000e+00, i32 3
  %15462 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15455, <4 x float> %15461, <4 x float> %15447)
  %15463 = extractelement <4 x float> %15462, i32 0
  %15464 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15465 = getelementptr inbounds i8, i8* %15464, i64 44
  %15466 = bitcast i8* %15465 to float*
  store float %15463, float* %15466, align 4
  %15467 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15468 = getelementptr inbounds i8, i8* %15467, i64 32
  %15469 = bitcast i8* %15468 to float*
  %15470 = load float, float* %15469, align 4
  %15471 = insertelement <4 x float> zeroinitializer, float %15470, i32 0
  %15472 = insertelement <4 x float> %15471, float 1.000000e+00, i32 1
  %15473 = insertelement <4 x float> %15472, float 1.000000e+00, i32 2
  %15474 = insertelement <4 x float> %15473, float 1.000000e+00, i32 3
  %15475 = getelementptr inbounds float, float* %1, i64 3
  %15476 = load float, float* %15475, align 4
  %15477 = insertelement <4 x float> zeroinitializer, float %15476, i32 0
  %15478 = insertelement <4 x float> %15477, float 0.000000e+00, i32 1
  %15479 = insertelement <4 x float> %15478, float 0.000000e+00, i32 2
  %15480 = insertelement <4 x float> %15479, float 0.000000e+00, i32 3
  %15481 = fmul <4 x float> %15474, %15480
  %15482 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15483 = getelementptr inbounds i8, i8* %15482, i64 36
  %15484 = bitcast i8* %15483 to float*
  %15485 = load float, float* %15484, align 4
  %15486 = insertelement <4 x float> zeroinitializer, float %15485, i32 0
  %15487 = insertelement <4 x float> %15486, float 1.000000e+00, i32 1
  %15488 = insertelement <4 x float> %15487, float 1.000000e+00, i32 2
  %15489 = insertelement <4 x float> %15488, float 1.000000e+00, i32 3
  %15490 = getelementptr inbounds float, float* %1, i64 7
  %15491 = load float, float* %15490, align 4
  %15492 = insertelement <4 x float> zeroinitializer, float %15491, i32 0
  %15493 = insertelement <4 x float> %15492, float 0.000000e+00, i32 1
  %15494 = insertelement <4 x float> %15493, float 0.000000e+00, i32 2
  %15495 = insertelement <4 x float> %15494, float 0.000000e+00, i32 3
  %15496 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15489, <4 x float> %15495, <4 x float> %15481)
  %15497 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15498 = getelementptr inbounds i8, i8* %15497, i64 40
  %15499 = bitcast i8* %15498 to float*
  %15500 = load float, float* %15499, align 4
  %15501 = insertelement <4 x float> zeroinitializer, float %15500, i32 0
  %15502 = insertelement <4 x float> %15501, float 1.000000e+00, i32 1
  %15503 = insertelement <4 x float> %15502, float 1.000000e+00, i32 2
  %15504 = insertelement <4 x float> %15503, float 1.000000e+00, i32 3
  %15505 = getelementptr inbounds float, float* %1, i64 11
  %15506 = load float, float* %15505, align 4
  %15507 = insertelement <4 x float> zeroinitializer, float %15506, i32 0
  %15508 = insertelement <4 x float> %15507, float 0.000000e+00, i32 1
  %15509 = insertelement <4 x float> %15508, float 0.000000e+00, i32 2
  %15510 = insertelement <4 x float> %15509, float 0.000000e+00, i32 3
  %15511 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15504, <4 x float> %15510, <4 x float> %15496)
  %15512 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15513 = getelementptr inbounds i8, i8* %15512, i64 44
  %15514 = bitcast i8* %15513 to float*
  %15515 = load float, float* %15514, align 4
  %15516 = insertelement <4 x float> zeroinitializer, float %15515, i32 0
  %15517 = insertelement <4 x float> %15516, float 0.000000e+00, i32 1
  %15518 = insertelement <4 x float> %15517, float 0.000000e+00, i32 2
  %15519 = insertelement <4 x float> %15518, float 0.000000e+00, i32 3
  %15520 = getelementptr inbounds float, float* %1, i64 15
  %15521 = load float, float* %15520, align 4
  %15522 = insertelement <4 x float> zeroinitializer, float %15521, i32 0
  %15523 = insertelement <4 x float> %15522, float 0.000000e+00, i32 1
  %15524 = insertelement <4 x float> %15523, float 0.000000e+00, i32 2
  %15525 = insertelement <4 x float> %15524, float 0.000000e+00, i32 3
  %15526 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15519, <4 x float> %15525, <4 x float> %15511)
  %15527 = extractelement <4 x float> %15526, i32 0
  %15528 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15529 = getelementptr inbounds i8, i8* %15528, i64 44
  %15530 = bitcast i8* %15529 to float*
  store float %15527, float* %15530, align 4
  %15531 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15532 = getelementptr inbounds i8, i8* %15531, i64 48
  %15533 = bitcast i8* %15532 to float*
  %15534 = load float, float* %15533, align 4
  %15535 = insertelement <4 x float> zeroinitializer, float %15534, i32 0
  %15536 = insertelement <4 x float> %15535, float 0.000000e+00, i32 1
  %15537 = insertelement <4 x float> %15536, float 0.000000e+00, i32 2
  %15538 = insertelement <4 x float> %15537, float 0.000000e+00, i32 3
  %15539 = load float, float* %1, align 4
  %15540 = insertelement <4 x float> zeroinitializer, float %15539, i32 0
  %15541 = insertelement <4 x float> %15540, float 0.000000e+00, i32 1
  %15542 = insertelement <4 x float> %15541, float 0.000000e+00, i32 2
  %15543 = insertelement <4 x float> %15542, float 0.000000e+00, i32 3
  %15544 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15538, <4 x float> %15543, <4 x float> zeroinitializer)
  %15545 = extractelement <4 x float> %15544, i32 0
  %15546 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15547 = getelementptr inbounds i8, i8* %15546, i64 48
  %15548 = bitcast i8* %15547 to float*
  store float %15545, float* %15548, align 4
  %15549 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15550 = getelementptr inbounds i8, i8* %15549, i64 48
  %15551 = bitcast i8* %15550 to float*
  %15552 = load float, float* %15551, align 4
  %15553 = insertelement <4 x float> zeroinitializer, float %15552, i32 0
  %15554 = insertelement <4 x float> %15553, float 1.000000e+00, i32 1
  %15555 = insertelement <4 x float> %15554, float 1.000000e+00, i32 2
  %15556 = insertelement <4 x float> %15555, float 1.000000e+00, i32 3
  %15557 = load float, float* %1, align 4
  %15558 = insertelement <4 x float> zeroinitializer, float %15557, i32 0
  %15559 = insertelement <4 x float> %15558, float 0.000000e+00, i32 1
  %15560 = insertelement <4 x float> %15559, float 0.000000e+00, i32 2
  %15561 = insertelement <4 x float> %15560, float 0.000000e+00, i32 3
  %15562 = fmul <4 x float> %15556, %15561
  %15563 = fadd <4 x float> %15562, zeroinitializer
  %15564 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15565 = getelementptr inbounds i8, i8* %15564, i64 52
  %15566 = bitcast i8* %15565 to float*
  %15567 = load float, float* %15566, align 4
  %15568 = insertelement <4 x float> zeroinitializer, float %15567, i32 0
  %15569 = insertelement <4 x float> %15568, float 0.000000e+00, i32 1
  %15570 = insertelement <4 x float> %15569, float 0.000000e+00, i32 2
  %15571 = insertelement <4 x float> %15570, float 0.000000e+00, i32 3
  %15572 = getelementptr inbounds float, float* %1, i64 4
  %15573 = load float, float* %15572, align 4
  %15574 = insertelement <4 x float> zeroinitializer, float %15573, i32 0
  %15575 = insertelement <4 x float> %15574, float 0.000000e+00, i32 1
  %15576 = insertelement <4 x float> %15575, float 0.000000e+00, i32 2
  %15577 = insertelement <4 x float> %15576, float 0.000000e+00, i32 3
  %15578 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15571, <4 x float> %15577, <4 x float> %15563)
  %15579 = extractelement <4 x float> %15578, i32 0
  %15580 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15581 = getelementptr inbounds i8, i8* %15580, i64 48
  %15582 = bitcast i8* %15581 to float*
  store float %15579, float* %15582, align 4
  %15583 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15584 = getelementptr inbounds i8, i8* %15583, i64 48
  %15585 = bitcast i8* %15584 to float*
  %15586 = load float, float* %15585, align 4
  %15587 = insertelement <4 x float> zeroinitializer, float %15586, i32 0
  %15588 = insertelement <4 x float> %15587, float 1.000000e+00, i32 1
  %15589 = insertelement <4 x float> %15588, float 1.000000e+00, i32 2
  %15590 = insertelement <4 x float> %15589, float 1.000000e+00, i32 3
  %15591 = load float, float* %1, align 4
  %15592 = insertelement <4 x float> zeroinitializer, float %15591, i32 0
  %15593 = insertelement <4 x float> %15592, float 0.000000e+00, i32 1
  %15594 = insertelement <4 x float> %15593, float 0.000000e+00, i32 2
  %15595 = insertelement <4 x float> %15594, float 0.000000e+00, i32 3
  %15596 = fmul <4 x float> %15590, %15595
  %15597 = fadd <4 x float> %15596, zeroinitializer
  %15598 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15599 = getelementptr inbounds i8, i8* %15598, i64 52
  %15600 = bitcast i8* %15599 to float*
  %15601 = load float, float* %15600, align 4
  %15602 = insertelement <4 x float> zeroinitializer, float %15601, i32 0
  %15603 = insertelement <4 x float> %15602, float 1.000000e+00, i32 1
  %15604 = insertelement <4 x float> %15603, float 1.000000e+00, i32 2
  %15605 = insertelement <4 x float> %15604, float 1.000000e+00, i32 3
  %15606 = getelementptr inbounds float, float* %1, i64 4
  %15607 = load float, float* %15606, align 4
  %15608 = insertelement <4 x float> zeroinitializer, float %15607, i32 0
  %15609 = insertelement <4 x float> %15608, float 0.000000e+00, i32 1
  %15610 = insertelement <4 x float> %15609, float 0.000000e+00, i32 2
  %15611 = insertelement <4 x float> %15610, float 0.000000e+00, i32 3
  %15612 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15605, <4 x float> %15611, <4 x float> %15597)
  %15613 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15614 = getelementptr inbounds i8, i8* %15613, i64 56
  %15615 = bitcast i8* %15614 to float*
  %15616 = load float, float* %15615, align 4
  %15617 = insertelement <4 x float> zeroinitializer, float %15616, i32 0
  %15618 = insertelement <4 x float> %15617, float 0.000000e+00, i32 1
  %15619 = insertelement <4 x float> %15618, float 0.000000e+00, i32 2
  %15620 = insertelement <4 x float> %15619, float 0.000000e+00, i32 3
  %15621 = getelementptr inbounds float, float* %1, i64 8
  %15622 = load float, float* %15621, align 4
  %15623 = insertelement <4 x float> zeroinitializer, float %15622, i32 0
  %15624 = insertelement <4 x float> %15623, float 0.000000e+00, i32 1
  %15625 = insertelement <4 x float> %15624, float 0.000000e+00, i32 2
  %15626 = insertelement <4 x float> %15625, float 0.000000e+00, i32 3
  %15627 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15620, <4 x float> %15626, <4 x float> %15612)
  %15628 = extractelement <4 x float> %15627, i32 0
  %15629 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15630 = getelementptr inbounds i8, i8* %15629, i64 48
  %15631 = bitcast i8* %15630 to float*
  store float %15628, float* %15631, align 4
  %15632 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15633 = getelementptr inbounds i8, i8* %15632, i64 48
  %15634 = bitcast i8* %15633 to float*
  %15635 = load float, float* %15634, align 4
  %15636 = insertelement <4 x float> zeroinitializer, float %15635, i32 0
  %15637 = insertelement <4 x float> %15636, float 1.000000e+00, i32 1
  %15638 = insertelement <4 x float> %15637, float 1.000000e+00, i32 2
  %15639 = insertelement <4 x float> %15638, float 1.000000e+00, i32 3
  %15640 = load float, float* %1, align 4
  %15641 = insertelement <4 x float> zeroinitializer, float %15640, i32 0
  %15642 = insertelement <4 x float> %15641, float 0.000000e+00, i32 1
  %15643 = insertelement <4 x float> %15642, float 0.000000e+00, i32 2
  %15644 = insertelement <4 x float> %15643, float 0.000000e+00, i32 3
  %15645 = fmul <4 x float> %15639, %15644
  %15646 = fadd <4 x float> %15645, zeroinitializer
  %15647 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15648 = getelementptr inbounds i8, i8* %15647, i64 52
  %15649 = bitcast i8* %15648 to float*
  %15650 = load float, float* %15649, align 4
  %15651 = insertelement <4 x float> zeroinitializer, float %15650, i32 0
  %15652 = insertelement <4 x float> %15651, float 1.000000e+00, i32 1
  %15653 = insertelement <4 x float> %15652, float 1.000000e+00, i32 2
  %15654 = insertelement <4 x float> %15653, float 1.000000e+00, i32 3
  %15655 = getelementptr inbounds float, float* %1, i64 4
  %15656 = load float, float* %15655, align 4
  %15657 = insertelement <4 x float> zeroinitializer, float %15656, i32 0
  %15658 = insertelement <4 x float> %15657, float 0.000000e+00, i32 1
  %15659 = insertelement <4 x float> %15658, float 0.000000e+00, i32 2
  %15660 = insertelement <4 x float> %15659, float 0.000000e+00, i32 3
  %15661 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15654, <4 x float> %15660, <4 x float> %15646)
  %15662 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15663 = getelementptr inbounds i8, i8* %15662, i64 56
  %15664 = bitcast i8* %15663 to float*
  %15665 = load float, float* %15664, align 4
  %15666 = insertelement <4 x float> zeroinitializer, float %15665, i32 0
  %15667 = insertelement <4 x float> %15666, float 1.000000e+00, i32 1
  %15668 = insertelement <4 x float> %15667, float 1.000000e+00, i32 2
  %15669 = insertelement <4 x float> %15668, float 1.000000e+00, i32 3
  %15670 = getelementptr inbounds float, float* %1, i64 8
  %15671 = load float, float* %15670, align 4
  %15672 = insertelement <4 x float> zeroinitializer, float %15671, i32 0
  %15673 = insertelement <4 x float> %15672, float 0.000000e+00, i32 1
  %15674 = insertelement <4 x float> %15673, float 0.000000e+00, i32 2
  %15675 = insertelement <4 x float> %15674, float 0.000000e+00, i32 3
  %15676 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15669, <4 x float> %15675, <4 x float> %15661)
  %15677 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15678 = getelementptr inbounds i8, i8* %15677, i64 60
  %15679 = bitcast i8* %15678 to float*
  %15680 = load float, float* %15679, align 4
  %15681 = insertelement <4 x float> zeroinitializer, float %15680, i32 0
  %15682 = insertelement <4 x float> %15681, float 0.000000e+00, i32 1
  %15683 = insertelement <4 x float> %15682, float 0.000000e+00, i32 2
  %15684 = insertelement <4 x float> %15683, float 0.000000e+00, i32 3
  %15685 = getelementptr inbounds float, float* %1, i64 12
  %15686 = load float, float* %15685, align 4
  %15687 = insertelement <4 x float> zeroinitializer, float %15686, i32 0
  %15688 = insertelement <4 x float> %15687, float 0.000000e+00, i32 1
  %15689 = insertelement <4 x float> %15688, float 0.000000e+00, i32 2
  %15690 = insertelement <4 x float> %15689, float 0.000000e+00, i32 3
  %15691 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15684, <4 x float> %15690, <4 x float> %15676)
  %15692 = extractelement <4 x float> %15691, i32 0
  %15693 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15694 = getelementptr inbounds i8, i8* %15693, i64 48
  %15695 = bitcast i8* %15694 to float*
  store float %15692, float* %15695, align 4
  %15696 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15697 = getelementptr inbounds i8, i8* %15696, i64 48
  %15698 = bitcast i8* %15697 to float*
  %15699 = load float, float* %15698, align 4
  %15700 = insertelement <4 x float> zeroinitializer, float %15699, i32 0
  %15701 = insertelement <4 x float> %15700, float 0.000000e+00, i32 1
  %15702 = insertelement <4 x float> %15701, float 0.000000e+00, i32 2
  %15703 = insertelement <4 x float> %15702, float 0.000000e+00, i32 3
  %15704 = getelementptr inbounds float, float* %1, i64 1
  %15705 = load float, float* %15704, align 4
  %15706 = insertelement <4 x float> zeroinitializer, float %15705, i32 0
  %15707 = insertelement <4 x float> %15706, float 0.000000e+00, i32 1
  %15708 = insertelement <4 x float> %15707, float 0.000000e+00, i32 2
  %15709 = insertelement <4 x float> %15708, float 0.000000e+00, i32 3
  %15710 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15703, <4 x float> %15709, <4 x float> zeroinitializer)
  %15711 = extractelement <4 x float> %15710, i32 0
  %15712 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15713 = getelementptr inbounds i8, i8* %15712, i64 52
  %15714 = bitcast i8* %15713 to float*
  store float %15711, float* %15714, align 4
  %15715 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15716 = getelementptr inbounds i8, i8* %15715, i64 48
  %15717 = bitcast i8* %15716 to float*
  %15718 = load float, float* %15717, align 4
  %15719 = insertelement <4 x float> zeroinitializer, float %15718, i32 0
  %15720 = insertelement <4 x float> %15719, float 1.000000e+00, i32 1
  %15721 = insertelement <4 x float> %15720, float 1.000000e+00, i32 2
  %15722 = insertelement <4 x float> %15721, float 1.000000e+00, i32 3
  %15723 = getelementptr inbounds float, float* %1, i64 1
  %15724 = load float, float* %15723, align 4
  %15725 = insertelement <4 x float> zeroinitializer, float %15724, i32 0
  %15726 = insertelement <4 x float> %15725, float 0.000000e+00, i32 1
  %15727 = insertelement <4 x float> %15726, float 0.000000e+00, i32 2
  %15728 = insertelement <4 x float> %15727, float 0.000000e+00, i32 3
  %15729 = fmul <4 x float> %15722, %15728
  %15730 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15731 = getelementptr inbounds i8, i8* %15730, i64 52
  %15732 = bitcast i8* %15731 to float*
  %15733 = load float, float* %15732, align 4
  %15734 = insertelement <4 x float> zeroinitializer, float %15733, i32 0
  %15735 = insertelement <4 x float> %15734, float 0.000000e+00, i32 1
  %15736 = insertelement <4 x float> %15735, float 0.000000e+00, i32 2
  %15737 = insertelement <4 x float> %15736, float 0.000000e+00, i32 3
  %15738 = getelementptr inbounds float, float* %1, i64 5
  %15739 = load float, float* %15738, align 4
  %15740 = insertelement <4 x float> zeroinitializer, float %15739, i32 0
  %15741 = insertelement <4 x float> %15740, float 0.000000e+00, i32 1
  %15742 = insertelement <4 x float> %15741, float 0.000000e+00, i32 2
  %15743 = insertelement <4 x float> %15742, float 0.000000e+00, i32 3
  %15744 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15737, <4 x float> %15743, <4 x float> %15729)
  %15745 = extractelement <4 x float> %15744, i32 0
  %15746 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15747 = getelementptr inbounds i8, i8* %15746, i64 52
  %15748 = bitcast i8* %15747 to float*
  store float %15745, float* %15748, align 4
  %15749 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15750 = getelementptr inbounds i8, i8* %15749, i64 48
  %15751 = bitcast i8* %15750 to float*
  %15752 = load float, float* %15751, align 4
  %15753 = insertelement <4 x float> zeroinitializer, float %15752, i32 0
  %15754 = insertelement <4 x float> %15753, float 1.000000e+00, i32 1
  %15755 = insertelement <4 x float> %15754, float 1.000000e+00, i32 2
  %15756 = insertelement <4 x float> %15755, float 1.000000e+00, i32 3
  %15757 = getelementptr inbounds float, float* %1, i64 1
  %15758 = load float, float* %15757, align 4
  %15759 = insertelement <4 x float> zeroinitializer, float %15758, i32 0
  %15760 = insertelement <4 x float> %15759, float 0.000000e+00, i32 1
  %15761 = insertelement <4 x float> %15760, float 0.000000e+00, i32 2
  %15762 = insertelement <4 x float> %15761, float 0.000000e+00, i32 3
  %15763 = fmul <4 x float> %15756, %15762
  %15764 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15765 = getelementptr inbounds i8, i8* %15764, i64 52
  %15766 = bitcast i8* %15765 to float*
  %15767 = load float, float* %15766, align 4
  %15768 = insertelement <4 x float> zeroinitializer, float %15767, i32 0
  %15769 = insertelement <4 x float> %15768, float 1.000000e+00, i32 1
  %15770 = insertelement <4 x float> %15769, float 1.000000e+00, i32 2
  %15771 = insertelement <4 x float> %15770, float 1.000000e+00, i32 3
  %15772 = getelementptr inbounds float, float* %1, i64 5
  %15773 = load float, float* %15772, align 4
  %15774 = insertelement <4 x float> zeroinitializer, float %15773, i32 0
  %15775 = insertelement <4 x float> %15774, float 0.000000e+00, i32 1
  %15776 = insertelement <4 x float> %15775, float 0.000000e+00, i32 2
  %15777 = insertelement <4 x float> %15776, float 0.000000e+00, i32 3
  %15778 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15771, <4 x float> %15777, <4 x float> %15763)
  %15779 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15780 = getelementptr inbounds i8, i8* %15779, i64 56
  %15781 = bitcast i8* %15780 to float*
  %15782 = load float, float* %15781, align 4
  %15783 = insertelement <4 x float> zeroinitializer, float %15782, i32 0
  %15784 = insertelement <4 x float> %15783, float 0.000000e+00, i32 1
  %15785 = insertelement <4 x float> %15784, float 0.000000e+00, i32 2
  %15786 = insertelement <4 x float> %15785, float 0.000000e+00, i32 3
  %15787 = getelementptr inbounds float, float* %1, i64 9
  %15788 = load float, float* %15787, align 4
  %15789 = insertelement <4 x float> zeroinitializer, float %15788, i32 0
  %15790 = insertelement <4 x float> %15789, float 0.000000e+00, i32 1
  %15791 = insertelement <4 x float> %15790, float 0.000000e+00, i32 2
  %15792 = insertelement <4 x float> %15791, float 0.000000e+00, i32 3
  %15793 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15786, <4 x float> %15792, <4 x float> %15778)
  %15794 = extractelement <4 x float> %15793, i32 0
  %15795 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15796 = getelementptr inbounds i8, i8* %15795, i64 52
  %15797 = bitcast i8* %15796 to float*
  store float %15794, float* %15797, align 4
  %15798 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15799 = getelementptr inbounds i8, i8* %15798, i64 48
  %15800 = bitcast i8* %15799 to float*
  %15801 = load float, float* %15800, align 4
  %15802 = insertelement <4 x float> zeroinitializer, float %15801, i32 0
  %15803 = insertelement <4 x float> %15802, float 1.000000e+00, i32 1
  %15804 = insertelement <4 x float> %15803, float 1.000000e+00, i32 2
  %15805 = insertelement <4 x float> %15804, float 1.000000e+00, i32 3
  %15806 = getelementptr inbounds float, float* %1, i64 1
  %15807 = load float, float* %15806, align 4
  %15808 = insertelement <4 x float> zeroinitializer, float %15807, i32 0
  %15809 = insertelement <4 x float> %15808, float 0.000000e+00, i32 1
  %15810 = insertelement <4 x float> %15809, float 0.000000e+00, i32 2
  %15811 = insertelement <4 x float> %15810, float 0.000000e+00, i32 3
  %15812 = fmul <4 x float> %15805, %15811
  %15813 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15814 = getelementptr inbounds i8, i8* %15813, i64 52
  %15815 = bitcast i8* %15814 to float*
  %15816 = load float, float* %15815, align 4
  %15817 = insertelement <4 x float> zeroinitializer, float %15816, i32 0
  %15818 = insertelement <4 x float> %15817, float 1.000000e+00, i32 1
  %15819 = insertelement <4 x float> %15818, float 1.000000e+00, i32 2
  %15820 = insertelement <4 x float> %15819, float 1.000000e+00, i32 3
  %15821 = getelementptr inbounds float, float* %1, i64 5
  %15822 = load float, float* %15821, align 4
  %15823 = insertelement <4 x float> zeroinitializer, float %15822, i32 0
  %15824 = insertelement <4 x float> %15823, float 0.000000e+00, i32 1
  %15825 = insertelement <4 x float> %15824, float 0.000000e+00, i32 2
  %15826 = insertelement <4 x float> %15825, float 0.000000e+00, i32 3
  %15827 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15820, <4 x float> %15826, <4 x float> %15812)
  %15828 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15829 = getelementptr inbounds i8, i8* %15828, i64 56
  %15830 = bitcast i8* %15829 to float*
  %15831 = load float, float* %15830, align 4
  %15832 = insertelement <4 x float> zeroinitializer, float %15831, i32 0
  %15833 = insertelement <4 x float> %15832, float 1.000000e+00, i32 1
  %15834 = insertelement <4 x float> %15833, float 1.000000e+00, i32 2
  %15835 = insertelement <4 x float> %15834, float 1.000000e+00, i32 3
  %15836 = getelementptr inbounds float, float* %1, i64 9
  %15837 = load float, float* %15836, align 4
  %15838 = insertelement <4 x float> zeroinitializer, float %15837, i32 0
  %15839 = insertelement <4 x float> %15838, float 0.000000e+00, i32 1
  %15840 = insertelement <4 x float> %15839, float 0.000000e+00, i32 2
  %15841 = insertelement <4 x float> %15840, float 0.000000e+00, i32 3
  %15842 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15835, <4 x float> %15841, <4 x float> %15827)
  %15843 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15844 = getelementptr inbounds i8, i8* %15843, i64 60
  %15845 = bitcast i8* %15844 to float*
  %15846 = load float, float* %15845, align 4
  %15847 = insertelement <4 x float> zeroinitializer, float %15846, i32 0
  %15848 = insertelement <4 x float> %15847, float 0.000000e+00, i32 1
  %15849 = insertelement <4 x float> %15848, float 0.000000e+00, i32 2
  %15850 = insertelement <4 x float> %15849, float 0.000000e+00, i32 3
  %15851 = getelementptr inbounds float, float* %1, i64 13
  %15852 = load float, float* %15851, align 4
  %15853 = insertelement <4 x float> zeroinitializer, float %15852, i32 0
  %15854 = insertelement <4 x float> %15853, float 0.000000e+00, i32 1
  %15855 = insertelement <4 x float> %15854, float 0.000000e+00, i32 2
  %15856 = insertelement <4 x float> %15855, float 0.000000e+00, i32 3
  %15857 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15850, <4 x float> %15856, <4 x float> %15842)
  %15858 = extractelement <4 x float> %15857, i32 0
  %15859 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15860 = getelementptr inbounds i8, i8* %15859, i64 52
  %15861 = bitcast i8* %15860 to float*
  store float %15858, float* %15861, align 4
  %15862 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15863 = getelementptr inbounds i8, i8* %15862, i64 48
  %15864 = bitcast i8* %15863 to float*
  %15865 = load float, float* %15864, align 4
  %15866 = insertelement <4 x float> zeroinitializer, float %15865, i32 0
  %15867 = insertelement <4 x float> %15866, float 0.000000e+00, i32 1
  %15868 = insertelement <4 x float> %15867, float 0.000000e+00, i32 2
  %15869 = insertelement <4 x float> %15868, float 0.000000e+00, i32 3
  %15870 = getelementptr inbounds float, float* %1, i64 2
  %15871 = load float, float* %15870, align 4
  %15872 = insertelement <4 x float> zeroinitializer, float %15871, i32 0
  %15873 = insertelement <4 x float> %15872, float 0.000000e+00, i32 1
  %15874 = insertelement <4 x float> %15873, float 0.000000e+00, i32 2
  %15875 = insertelement <4 x float> %15874, float 0.000000e+00, i32 3
  %15876 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15869, <4 x float> %15875, <4 x float> zeroinitializer)
  %15877 = extractelement <4 x float> %15876, i32 0
  %15878 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15879 = getelementptr inbounds i8, i8* %15878, i64 56
  %15880 = bitcast i8* %15879 to float*
  store float %15877, float* %15880, align 4
  %15881 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15882 = getelementptr inbounds i8, i8* %15881, i64 48
  %15883 = bitcast i8* %15882 to float*
  %15884 = load float, float* %15883, align 4
  %15885 = insertelement <4 x float> zeroinitializer, float %15884, i32 0
  %15886 = insertelement <4 x float> %15885, float 1.000000e+00, i32 1
  %15887 = insertelement <4 x float> %15886, float 1.000000e+00, i32 2
  %15888 = insertelement <4 x float> %15887, float 1.000000e+00, i32 3
  %15889 = getelementptr inbounds float, float* %1, i64 2
  %15890 = load float, float* %15889, align 4
  %15891 = insertelement <4 x float> zeroinitializer, float %15890, i32 0
  %15892 = insertelement <4 x float> %15891, float 0.000000e+00, i32 1
  %15893 = insertelement <4 x float> %15892, float 0.000000e+00, i32 2
  %15894 = insertelement <4 x float> %15893, float 0.000000e+00, i32 3
  %15895 = fmul <4 x float> %15888, %15894
  %15896 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15897 = getelementptr inbounds i8, i8* %15896, i64 52
  %15898 = bitcast i8* %15897 to float*
  %15899 = load float, float* %15898, align 4
  %15900 = insertelement <4 x float> zeroinitializer, float %15899, i32 0
  %15901 = insertelement <4 x float> %15900, float 0.000000e+00, i32 1
  %15902 = insertelement <4 x float> %15901, float 0.000000e+00, i32 2
  %15903 = insertelement <4 x float> %15902, float 0.000000e+00, i32 3
  %15904 = getelementptr inbounds float, float* %1, i64 6
  %15905 = load float, float* %15904, align 4
  %15906 = insertelement <4 x float> zeroinitializer, float %15905, i32 0
  %15907 = insertelement <4 x float> %15906, float 0.000000e+00, i32 1
  %15908 = insertelement <4 x float> %15907, float 0.000000e+00, i32 2
  %15909 = insertelement <4 x float> %15908, float 0.000000e+00, i32 3
  %15910 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15903, <4 x float> %15909, <4 x float> %15895)
  %15911 = extractelement <4 x float> %15910, i32 0
  %15912 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15913 = getelementptr inbounds i8, i8* %15912, i64 56
  %15914 = bitcast i8* %15913 to float*
  store float %15911, float* %15914, align 4
  %15915 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15916 = getelementptr inbounds i8, i8* %15915, i64 48
  %15917 = bitcast i8* %15916 to float*
  %15918 = load float, float* %15917, align 4
  %15919 = insertelement <4 x float> zeroinitializer, float %15918, i32 0
  %15920 = insertelement <4 x float> %15919, float 1.000000e+00, i32 1
  %15921 = insertelement <4 x float> %15920, float 1.000000e+00, i32 2
  %15922 = insertelement <4 x float> %15921, float 1.000000e+00, i32 3
  %15923 = getelementptr inbounds float, float* %1, i64 2
  %15924 = load float, float* %15923, align 4
  %15925 = insertelement <4 x float> zeroinitializer, float %15924, i32 0
  %15926 = insertelement <4 x float> %15925, float 0.000000e+00, i32 1
  %15927 = insertelement <4 x float> %15926, float 0.000000e+00, i32 2
  %15928 = insertelement <4 x float> %15927, float 0.000000e+00, i32 3
  %15929 = fmul <4 x float> %15922, %15928
  %15930 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15931 = getelementptr inbounds i8, i8* %15930, i64 52
  %15932 = bitcast i8* %15931 to float*
  %15933 = load float, float* %15932, align 4
  %15934 = insertelement <4 x float> zeroinitializer, float %15933, i32 0
  %15935 = insertelement <4 x float> %15934, float 1.000000e+00, i32 1
  %15936 = insertelement <4 x float> %15935, float 1.000000e+00, i32 2
  %15937 = insertelement <4 x float> %15936, float 1.000000e+00, i32 3
  %15938 = getelementptr inbounds float, float* %1, i64 6
  %15939 = load float, float* %15938, align 4
  %15940 = insertelement <4 x float> zeroinitializer, float %15939, i32 0
  %15941 = insertelement <4 x float> %15940, float 0.000000e+00, i32 1
  %15942 = insertelement <4 x float> %15941, float 0.000000e+00, i32 2
  %15943 = insertelement <4 x float> %15942, float 0.000000e+00, i32 3
  %15944 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15937, <4 x float> %15943, <4 x float> %15929)
  %15945 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15946 = getelementptr inbounds i8, i8* %15945, i64 56
  %15947 = bitcast i8* %15946 to float*
  %15948 = load float, float* %15947, align 4
  %15949 = insertelement <4 x float> zeroinitializer, float %15948, i32 0
  %15950 = insertelement <4 x float> %15949, float 0.000000e+00, i32 1
  %15951 = insertelement <4 x float> %15950, float 0.000000e+00, i32 2
  %15952 = insertelement <4 x float> %15951, float 0.000000e+00, i32 3
  %15953 = getelementptr inbounds float, float* %1, i64 10
  %15954 = load float, float* %15953, align 4
  %15955 = insertelement <4 x float> zeroinitializer, float %15954, i32 0
  %15956 = insertelement <4 x float> %15955, float 0.000000e+00, i32 1
  %15957 = insertelement <4 x float> %15956, float 0.000000e+00, i32 2
  %15958 = insertelement <4 x float> %15957, float 0.000000e+00, i32 3
  %15959 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15952, <4 x float> %15958, <4 x float> %15944)
  %15960 = extractelement <4 x float> %15959, i32 0
  %15961 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15962 = getelementptr inbounds i8, i8* %15961, i64 56
  %15963 = bitcast i8* %15962 to float*
  store float %15960, float* %15963, align 4
  %15964 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15965 = getelementptr inbounds i8, i8* %15964, i64 48
  %15966 = bitcast i8* %15965 to float*
  %15967 = load float, float* %15966, align 4
  %15968 = insertelement <4 x float> zeroinitializer, float %15967, i32 0
  %15969 = insertelement <4 x float> %15968, float 1.000000e+00, i32 1
  %15970 = insertelement <4 x float> %15969, float 1.000000e+00, i32 2
  %15971 = insertelement <4 x float> %15970, float 1.000000e+00, i32 3
  %15972 = getelementptr inbounds float, float* %1, i64 2
  %15973 = load float, float* %15972, align 4
  %15974 = insertelement <4 x float> zeroinitializer, float %15973, i32 0
  %15975 = insertelement <4 x float> %15974, float 0.000000e+00, i32 1
  %15976 = insertelement <4 x float> %15975, float 0.000000e+00, i32 2
  %15977 = insertelement <4 x float> %15976, float 0.000000e+00, i32 3
  %15978 = fmul <4 x float> %15971, %15977
  %15979 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15980 = getelementptr inbounds i8, i8* %15979, i64 52
  %15981 = bitcast i8* %15980 to float*
  %15982 = load float, float* %15981, align 4
  %15983 = insertelement <4 x float> zeroinitializer, float %15982, i32 0
  %15984 = insertelement <4 x float> %15983, float 1.000000e+00, i32 1
  %15985 = insertelement <4 x float> %15984, float 1.000000e+00, i32 2
  %15986 = insertelement <4 x float> %15985, float 1.000000e+00, i32 3
  %15987 = getelementptr inbounds float, float* %1, i64 6
  %15988 = load float, float* %15987, align 4
  %15989 = insertelement <4 x float> zeroinitializer, float %15988, i32 0
  %15990 = insertelement <4 x float> %15989, float 0.000000e+00, i32 1
  %15991 = insertelement <4 x float> %15990, float 0.000000e+00, i32 2
  %15992 = insertelement <4 x float> %15991, float 0.000000e+00, i32 3
  %15993 = call <4 x float> @llvm.fma.v4f32(<4 x float> %15986, <4 x float> %15992, <4 x float> %15978)
  %15994 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15995 = getelementptr inbounds i8, i8* %15994, i64 56
  %15996 = bitcast i8* %15995 to float*
  %15997 = load float, float* %15996, align 4
  %15998 = insertelement <4 x float> zeroinitializer, float %15997, i32 0
  %15999 = insertelement <4 x float> %15998, float 1.000000e+00, i32 1
  %16000 = insertelement <4 x float> %15999, float 1.000000e+00, i32 2
  %16001 = insertelement <4 x float> %16000, float 1.000000e+00, i32 3
  %16002 = getelementptr inbounds float, float* %1, i64 10
  %16003 = load float, float* %16002, align 4
  %16004 = insertelement <4 x float> zeroinitializer, float %16003, i32 0
  %16005 = insertelement <4 x float> %16004, float 0.000000e+00, i32 1
  %16006 = insertelement <4 x float> %16005, float 0.000000e+00, i32 2
  %16007 = insertelement <4 x float> %16006, float 0.000000e+00, i32 3
  %16008 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16001, <4 x float> %16007, <4 x float> %15993)
  %16009 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16010 = getelementptr inbounds i8, i8* %16009, i64 60
  %16011 = bitcast i8* %16010 to float*
  %16012 = load float, float* %16011, align 4
  %16013 = insertelement <4 x float> zeroinitializer, float %16012, i32 0
  %16014 = insertelement <4 x float> %16013, float 0.000000e+00, i32 1
  %16015 = insertelement <4 x float> %16014, float 0.000000e+00, i32 2
  %16016 = insertelement <4 x float> %16015, float 0.000000e+00, i32 3
  %16017 = getelementptr inbounds float, float* %1, i64 14
  %16018 = load float, float* %16017, align 4
  %16019 = insertelement <4 x float> zeroinitializer, float %16018, i32 0
  %16020 = insertelement <4 x float> %16019, float 0.000000e+00, i32 1
  %16021 = insertelement <4 x float> %16020, float 0.000000e+00, i32 2
  %16022 = insertelement <4 x float> %16021, float 0.000000e+00, i32 3
  %16023 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16016, <4 x float> %16022, <4 x float> %16008)
  %16024 = extractelement <4 x float> %16023, i32 0
  %16025 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16026 = getelementptr inbounds i8, i8* %16025, i64 56
  %16027 = bitcast i8* %16026 to float*
  store float %16024, float* %16027, align 4
  %16028 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16029 = getelementptr inbounds i8, i8* %16028, i64 48
  %16030 = bitcast i8* %16029 to float*
  %16031 = load float, float* %16030, align 4
  %16032 = insertelement <4 x float> zeroinitializer, float %16031, i32 0
  %16033 = insertelement <4 x float> %16032, float 0.000000e+00, i32 1
  %16034 = insertelement <4 x float> %16033, float 0.000000e+00, i32 2
  %16035 = insertelement <4 x float> %16034, float 0.000000e+00, i32 3
  %16036 = getelementptr inbounds float, float* %1, i64 3
  %16037 = load float, float* %16036, align 4
  %16038 = insertelement <4 x float> zeroinitializer, float %16037, i32 0
  %16039 = insertelement <4 x float> %16038, float 0.000000e+00, i32 1
  %16040 = insertelement <4 x float> %16039, float 0.000000e+00, i32 2
  %16041 = insertelement <4 x float> %16040, float 0.000000e+00, i32 3
  %16042 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16035, <4 x float> %16041, <4 x float> zeroinitializer)
  %16043 = extractelement <4 x float> %16042, i32 0
  %16044 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16045 = getelementptr inbounds i8, i8* %16044, i64 60
  %16046 = bitcast i8* %16045 to float*
  store float %16043, float* %16046, align 4
  %16047 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16048 = getelementptr inbounds i8, i8* %16047, i64 48
  %16049 = bitcast i8* %16048 to float*
  %16050 = load float, float* %16049, align 4
  %16051 = insertelement <4 x float> zeroinitializer, float %16050, i32 0
  %16052 = insertelement <4 x float> %16051, float 1.000000e+00, i32 1
  %16053 = insertelement <4 x float> %16052, float 1.000000e+00, i32 2
  %16054 = insertelement <4 x float> %16053, float 1.000000e+00, i32 3
  %16055 = getelementptr inbounds float, float* %1, i64 3
  %16056 = load float, float* %16055, align 4
  %16057 = insertelement <4 x float> zeroinitializer, float %16056, i32 0
  %16058 = insertelement <4 x float> %16057, float 0.000000e+00, i32 1
  %16059 = insertelement <4 x float> %16058, float 0.000000e+00, i32 2
  %16060 = insertelement <4 x float> %16059, float 0.000000e+00, i32 3
  %16061 = fmul <4 x float> %16054, %16060
  %16062 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16063 = getelementptr inbounds i8, i8* %16062, i64 52
  %16064 = bitcast i8* %16063 to float*
  %16065 = load float, float* %16064, align 4
  %16066 = insertelement <4 x float> zeroinitializer, float %16065, i32 0
  %16067 = insertelement <4 x float> %16066, float 0.000000e+00, i32 1
  %16068 = insertelement <4 x float> %16067, float 0.000000e+00, i32 2
  %16069 = insertelement <4 x float> %16068, float 0.000000e+00, i32 3
  %16070 = getelementptr inbounds float, float* %1, i64 7
  %16071 = load float, float* %16070, align 4
  %16072 = insertelement <4 x float> zeroinitializer, float %16071, i32 0
  %16073 = insertelement <4 x float> %16072, float 0.000000e+00, i32 1
  %16074 = insertelement <4 x float> %16073, float 0.000000e+00, i32 2
  %16075 = insertelement <4 x float> %16074, float 0.000000e+00, i32 3
  %16076 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16069, <4 x float> %16075, <4 x float> %16061)
  %16077 = extractelement <4 x float> %16076, i32 0
  %16078 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16079 = getelementptr inbounds i8, i8* %16078, i64 60
  %16080 = bitcast i8* %16079 to float*
  store float %16077, float* %16080, align 4
  %16081 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16082 = getelementptr inbounds i8, i8* %16081, i64 48
  %16083 = bitcast i8* %16082 to float*
  %16084 = load float, float* %16083, align 4
  %16085 = insertelement <4 x float> zeroinitializer, float %16084, i32 0
  %16086 = insertelement <4 x float> %16085, float 1.000000e+00, i32 1
  %16087 = insertelement <4 x float> %16086, float 1.000000e+00, i32 2
  %16088 = insertelement <4 x float> %16087, float 1.000000e+00, i32 3
  %16089 = getelementptr inbounds float, float* %1, i64 3
  %16090 = load float, float* %16089, align 4
  %16091 = insertelement <4 x float> zeroinitializer, float %16090, i32 0
  %16092 = insertelement <4 x float> %16091, float 0.000000e+00, i32 1
  %16093 = insertelement <4 x float> %16092, float 0.000000e+00, i32 2
  %16094 = insertelement <4 x float> %16093, float 0.000000e+00, i32 3
  %16095 = fmul <4 x float> %16088, %16094
  %16096 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16097 = getelementptr inbounds i8, i8* %16096, i64 52
  %16098 = bitcast i8* %16097 to float*
  %16099 = load float, float* %16098, align 4
  %16100 = insertelement <4 x float> zeroinitializer, float %16099, i32 0
  %16101 = insertelement <4 x float> %16100, float 1.000000e+00, i32 1
  %16102 = insertelement <4 x float> %16101, float 1.000000e+00, i32 2
  %16103 = insertelement <4 x float> %16102, float 1.000000e+00, i32 3
  %16104 = getelementptr inbounds float, float* %1, i64 7
  %16105 = load float, float* %16104, align 4
  %16106 = insertelement <4 x float> zeroinitializer, float %16105, i32 0
  %16107 = insertelement <4 x float> %16106, float 0.000000e+00, i32 1
  %16108 = insertelement <4 x float> %16107, float 0.000000e+00, i32 2
  %16109 = insertelement <4 x float> %16108, float 0.000000e+00, i32 3
  %16110 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16103, <4 x float> %16109, <4 x float> %16095)
  %16111 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16112 = getelementptr inbounds i8, i8* %16111, i64 56
  %16113 = bitcast i8* %16112 to float*
  %16114 = load float, float* %16113, align 4
  %16115 = insertelement <4 x float> zeroinitializer, float %16114, i32 0
  %16116 = insertelement <4 x float> %16115, float 0.000000e+00, i32 1
  %16117 = insertelement <4 x float> %16116, float 0.000000e+00, i32 2
  %16118 = insertelement <4 x float> %16117, float 0.000000e+00, i32 3
  %16119 = getelementptr inbounds float, float* %1, i64 11
  %16120 = load float, float* %16119, align 4
  %16121 = insertelement <4 x float> zeroinitializer, float %16120, i32 0
  %16122 = insertelement <4 x float> %16121, float 0.000000e+00, i32 1
  %16123 = insertelement <4 x float> %16122, float 0.000000e+00, i32 2
  %16124 = insertelement <4 x float> %16123, float 0.000000e+00, i32 3
  %16125 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16118, <4 x float> %16124, <4 x float> %16110)
  %16126 = extractelement <4 x float> %16125, i32 0
  %16127 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16128 = getelementptr inbounds i8, i8* %16127, i64 60
  %16129 = bitcast i8* %16128 to float*
  store float %16126, float* %16129, align 4
  %16130 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16131 = getelementptr inbounds i8, i8* %16130, i64 48
  %16132 = bitcast i8* %16131 to float*
  %16133 = load float, float* %16132, align 4
  %16134 = insertelement <4 x float> zeroinitializer, float %16133, i32 0
  %16135 = insertelement <4 x float> %16134, float 1.000000e+00, i32 1
  %16136 = insertelement <4 x float> %16135, float 1.000000e+00, i32 2
  %16137 = insertelement <4 x float> %16136, float 1.000000e+00, i32 3
  %16138 = getelementptr inbounds float, float* %1, i64 3
  %16139 = load float, float* %16138, align 4
  %16140 = insertelement <4 x float> zeroinitializer, float %16139, i32 0
  %16141 = insertelement <4 x float> %16140, float 0.000000e+00, i32 1
  %16142 = insertelement <4 x float> %16141, float 0.000000e+00, i32 2
  %16143 = insertelement <4 x float> %16142, float 0.000000e+00, i32 3
  %16144 = fmul <4 x float> %16137, %16143
  %16145 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16146 = getelementptr inbounds i8, i8* %16145, i64 52
  %16147 = bitcast i8* %16146 to float*
  %16148 = load float, float* %16147, align 4
  %16149 = insertelement <4 x float> zeroinitializer, float %16148, i32 0
  %16150 = insertelement <4 x float> %16149, float 1.000000e+00, i32 1
  %16151 = insertelement <4 x float> %16150, float 1.000000e+00, i32 2
  %16152 = insertelement <4 x float> %16151, float 1.000000e+00, i32 3
  %16153 = getelementptr inbounds float, float* %1, i64 7
  %16154 = load float, float* %16153, align 4
  %16155 = insertelement <4 x float> zeroinitializer, float %16154, i32 0
  %16156 = insertelement <4 x float> %16155, float 0.000000e+00, i32 1
  %16157 = insertelement <4 x float> %16156, float 0.000000e+00, i32 2
  %16158 = insertelement <4 x float> %16157, float 0.000000e+00, i32 3
  %16159 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16152, <4 x float> %16158, <4 x float> %16144)
  %16160 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16161 = getelementptr inbounds i8, i8* %16160, i64 56
  %16162 = bitcast i8* %16161 to float*
  %16163 = load float, float* %16162, align 4
  %16164 = insertelement <4 x float> zeroinitializer, float %16163, i32 0
  %16165 = insertelement <4 x float> %16164, float 1.000000e+00, i32 1
  %16166 = insertelement <4 x float> %16165, float 1.000000e+00, i32 2
  %16167 = insertelement <4 x float> %16166, float 1.000000e+00, i32 3
  %16168 = getelementptr inbounds float, float* %1, i64 11
  %16169 = load float, float* %16168, align 4
  %16170 = insertelement <4 x float> zeroinitializer, float %16169, i32 0
  %16171 = insertelement <4 x float> %16170, float 0.000000e+00, i32 1
  %16172 = insertelement <4 x float> %16171, float 0.000000e+00, i32 2
  %16173 = insertelement <4 x float> %16172, float 0.000000e+00, i32 3
  %16174 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16167, <4 x float> %16173, <4 x float> %16159)
  %16175 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16176 = getelementptr inbounds i8, i8* %16175, i64 60
  %16177 = bitcast i8* %16176 to float*
  %16178 = load float, float* %16177, align 4
  %16179 = insertelement <4 x float> zeroinitializer, float %16178, i32 0
  %16180 = insertelement <4 x float> %16179, float 0.000000e+00, i32 1
  %16181 = insertelement <4 x float> %16180, float 0.000000e+00, i32 2
  %16182 = insertelement <4 x float> %16181, float 0.000000e+00, i32 3
  %16183 = getelementptr inbounds float, float* %1, i64 15
  %16184 = load float, float* %16183, align 4
  %16185 = insertelement <4 x float> zeroinitializer, float %16184, i32 0
  %16186 = insertelement <4 x float> %16185, float 0.000000e+00, i32 1
  %16187 = insertelement <4 x float> %16186, float 0.000000e+00, i32 2
  %16188 = insertelement <4 x float> %16187, float 0.000000e+00, i32 3
  %16189 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16182, <4 x float> %16188, <4 x float> %16174)
  %16190 = extractelement <4 x float> %16189, i32 0
  %16191 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16192 = getelementptr inbounds i8, i8* %16191, i64 60
  %16193 = bitcast i8* %16192 to float*
  store float %16190, float* %16193, align 4
  %16194 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16195 = bitcast i8* %16194 to float*
  %16196 = load float, float* %16195, align 4
  %16197 = insertelement <4 x float> zeroinitializer, float %16196, i32 0
  %16198 = insertelement <4 x float> %16197, float 0.000000e+00, i32 1
  %16199 = insertelement <4 x float> %16198, float 0.000000e+00, i32 2
  %16200 = insertelement <4 x float> %16199, float 0.000000e+00, i32 3
  %16201 = load float, float* %2, align 4
  %16202 = insertelement <4 x float> zeroinitializer, float %16201, i32 0
  %16203 = insertelement <4 x float> %16202, float 0.000000e+00, i32 1
  %16204 = insertelement <4 x float> %16203, float 0.000000e+00, i32 2
  %16205 = insertelement <4 x float> %16204, float 0.000000e+00, i32 3
  %16206 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16200, <4 x float> %16205, <4 x float> zeroinitializer)
  %16207 = extractelement <4 x float> %16206, i32 0
  %16208 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16209 = bitcast i8* %16208 to float*
  store float %16207, float* %16209, align 4
  %16210 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16211 = bitcast i8* %16210 to float*
  %16212 = load float, float* %16211, align 4
  %16213 = insertelement <4 x float> zeroinitializer, float %16212, i32 0
  %16214 = insertelement <4 x float> %16213, float 1.000000e+00, i32 1
  %16215 = insertelement <4 x float> %16214, float 1.000000e+00, i32 2
  %16216 = insertelement <4 x float> %16215, float 1.000000e+00, i32 3
  %16217 = load float, float* %2, align 4
  %16218 = insertelement <4 x float> zeroinitializer, float %16217, i32 0
  %16219 = insertelement <4 x float> %16218, float 0.000000e+00, i32 1
  %16220 = insertelement <4 x float> %16219, float 0.000000e+00, i32 2
  %16221 = insertelement <4 x float> %16220, float 0.000000e+00, i32 3
  %16222 = fmul <4 x float> %16216, %16221
  %16223 = fadd <4 x float> %16222, zeroinitializer
  %16224 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16225 = getelementptr inbounds i8, i8* %16224, i64 4
  %16226 = bitcast i8* %16225 to float*
  %16227 = load float, float* %16226, align 4
  %16228 = insertelement <4 x float> zeroinitializer, float %16227, i32 0
  %16229 = insertelement <4 x float> %16228, float 0.000000e+00, i32 1
  %16230 = insertelement <4 x float> %16229, float 0.000000e+00, i32 2
  %16231 = insertelement <4 x float> %16230, float 0.000000e+00, i32 3
  %16232 = getelementptr inbounds float, float* %2, i64 4
  %16233 = load float, float* %16232, align 4
  %16234 = insertelement <4 x float> zeroinitializer, float %16233, i32 0
  %16235 = insertelement <4 x float> %16234, float 0.000000e+00, i32 1
  %16236 = insertelement <4 x float> %16235, float 0.000000e+00, i32 2
  %16237 = insertelement <4 x float> %16236, float 0.000000e+00, i32 3
  %16238 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16231, <4 x float> %16237, <4 x float> %16223)
  %16239 = extractelement <4 x float> %16238, i32 0
  %16240 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16241 = bitcast i8* %16240 to float*
  store float %16239, float* %16241, align 4
  %16242 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16243 = bitcast i8* %16242 to float*
  %16244 = load float, float* %16243, align 4
  %16245 = insertelement <4 x float> zeroinitializer, float %16244, i32 0
  %16246 = insertelement <4 x float> %16245, float 1.000000e+00, i32 1
  %16247 = insertelement <4 x float> %16246, float 1.000000e+00, i32 2
  %16248 = insertelement <4 x float> %16247, float 1.000000e+00, i32 3
  %16249 = load float, float* %2, align 4
  %16250 = insertelement <4 x float> zeroinitializer, float %16249, i32 0
  %16251 = insertelement <4 x float> %16250, float 0.000000e+00, i32 1
  %16252 = insertelement <4 x float> %16251, float 0.000000e+00, i32 2
  %16253 = insertelement <4 x float> %16252, float 0.000000e+00, i32 3
  %16254 = fmul <4 x float> %16248, %16253
  %16255 = fadd <4 x float> %16254, zeroinitializer
  %16256 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16257 = getelementptr inbounds i8, i8* %16256, i64 4
  %16258 = bitcast i8* %16257 to float*
  %16259 = load float, float* %16258, align 4
  %16260 = insertelement <4 x float> zeroinitializer, float %16259, i32 0
  %16261 = insertelement <4 x float> %16260, float 1.000000e+00, i32 1
  %16262 = insertelement <4 x float> %16261, float 1.000000e+00, i32 2
  %16263 = insertelement <4 x float> %16262, float 1.000000e+00, i32 3
  %16264 = getelementptr inbounds float, float* %2, i64 4
  %16265 = load float, float* %16264, align 4
  %16266 = insertelement <4 x float> zeroinitializer, float %16265, i32 0
  %16267 = insertelement <4 x float> %16266, float 0.000000e+00, i32 1
  %16268 = insertelement <4 x float> %16267, float 0.000000e+00, i32 2
  %16269 = insertelement <4 x float> %16268, float 0.000000e+00, i32 3
  %16270 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16263, <4 x float> %16269, <4 x float> %16255)
  %16271 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16272 = getelementptr inbounds i8, i8* %16271, i64 8
  %16273 = bitcast i8* %16272 to float*
  %16274 = load float, float* %16273, align 4
  %16275 = insertelement <4 x float> zeroinitializer, float %16274, i32 0
  %16276 = insertelement <4 x float> %16275, float 0.000000e+00, i32 1
  %16277 = insertelement <4 x float> %16276, float 0.000000e+00, i32 2
  %16278 = insertelement <4 x float> %16277, float 0.000000e+00, i32 3
  %16279 = getelementptr inbounds float, float* %2, i64 8
  %16280 = load float, float* %16279, align 4
  %16281 = insertelement <4 x float> zeroinitializer, float %16280, i32 0
  %16282 = insertelement <4 x float> %16281, float 0.000000e+00, i32 1
  %16283 = insertelement <4 x float> %16282, float 0.000000e+00, i32 2
  %16284 = insertelement <4 x float> %16283, float 0.000000e+00, i32 3
  %16285 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16278, <4 x float> %16284, <4 x float> %16270)
  %16286 = extractelement <4 x float> %16285, i32 0
  %16287 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16288 = bitcast i8* %16287 to float*
  store float %16286, float* %16288, align 4
  %16289 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16290 = bitcast i8* %16289 to float*
  %16291 = load float, float* %16290, align 4
  %16292 = insertelement <4 x float> zeroinitializer, float %16291, i32 0
  %16293 = insertelement <4 x float> %16292, float 1.000000e+00, i32 1
  %16294 = insertelement <4 x float> %16293, float 1.000000e+00, i32 2
  %16295 = insertelement <4 x float> %16294, float 1.000000e+00, i32 3
  %16296 = load float, float* %2, align 4
  %16297 = insertelement <4 x float> zeroinitializer, float %16296, i32 0
  %16298 = insertelement <4 x float> %16297, float 0.000000e+00, i32 1
  %16299 = insertelement <4 x float> %16298, float 0.000000e+00, i32 2
  %16300 = insertelement <4 x float> %16299, float 0.000000e+00, i32 3
  %16301 = fmul <4 x float> %16295, %16300
  %16302 = fadd <4 x float> %16301, zeroinitializer
  %16303 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16304 = getelementptr inbounds i8, i8* %16303, i64 4
  %16305 = bitcast i8* %16304 to float*
  %16306 = load float, float* %16305, align 4
  %16307 = insertelement <4 x float> zeroinitializer, float %16306, i32 0
  %16308 = insertelement <4 x float> %16307, float 1.000000e+00, i32 1
  %16309 = insertelement <4 x float> %16308, float 1.000000e+00, i32 2
  %16310 = insertelement <4 x float> %16309, float 1.000000e+00, i32 3
  %16311 = getelementptr inbounds float, float* %2, i64 4
  %16312 = load float, float* %16311, align 4
  %16313 = insertelement <4 x float> zeroinitializer, float %16312, i32 0
  %16314 = insertelement <4 x float> %16313, float 0.000000e+00, i32 1
  %16315 = insertelement <4 x float> %16314, float 0.000000e+00, i32 2
  %16316 = insertelement <4 x float> %16315, float 0.000000e+00, i32 3
  %16317 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16310, <4 x float> %16316, <4 x float> %16302)
  %16318 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16319 = getelementptr inbounds i8, i8* %16318, i64 8
  %16320 = bitcast i8* %16319 to float*
  %16321 = load float, float* %16320, align 4
  %16322 = insertelement <4 x float> zeroinitializer, float %16321, i32 0
  %16323 = insertelement <4 x float> %16322, float 1.000000e+00, i32 1
  %16324 = insertelement <4 x float> %16323, float 1.000000e+00, i32 2
  %16325 = insertelement <4 x float> %16324, float 1.000000e+00, i32 3
  %16326 = getelementptr inbounds float, float* %2, i64 8
  %16327 = load float, float* %16326, align 4
  %16328 = insertelement <4 x float> zeroinitializer, float %16327, i32 0
  %16329 = insertelement <4 x float> %16328, float 0.000000e+00, i32 1
  %16330 = insertelement <4 x float> %16329, float 0.000000e+00, i32 2
  %16331 = insertelement <4 x float> %16330, float 0.000000e+00, i32 3
  %16332 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16325, <4 x float> %16331, <4 x float> %16317)
  %16333 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16334 = getelementptr inbounds i8, i8* %16333, i64 12
  %16335 = bitcast i8* %16334 to float*
  %16336 = load float, float* %16335, align 4
  %16337 = insertelement <4 x float> zeroinitializer, float %16336, i32 0
  %16338 = insertelement <4 x float> %16337, float 0.000000e+00, i32 1
  %16339 = insertelement <4 x float> %16338, float 0.000000e+00, i32 2
  %16340 = insertelement <4 x float> %16339, float 0.000000e+00, i32 3
  %16341 = getelementptr inbounds float, float* %2, i64 12
  %16342 = load float, float* %16341, align 4
  %16343 = insertelement <4 x float> zeroinitializer, float %16342, i32 0
  %16344 = insertelement <4 x float> %16343, float 0.000000e+00, i32 1
  %16345 = insertelement <4 x float> %16344, float 0.000000e+00, i32 2
  %16346 = insertelement <4 x float> %16345, float 0.000000e+00, i32 3
  %16347 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16340, <4 x float> %16346, <4 x float> %16332)
  %16348 = extractelement <4 x float> %16347, i32 0
  %16349 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16350 = bitcast i8* %16349 to float*
  store float %16348, float* %16350, align 4
  %16351 = extractelement <4 x float> %16347, i32 1
  %16352 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16353 = getelementptr inbounds i8, i8* %16352, i64 4
  %16354 = bitcast i8* %16353 to float*
  store float %16351, float* %16354, align 4
  %16355 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16356 = bitcast i8* %16355 to float*
  %16357 = load float, float* %16356, align 4
  %16358 = insertelement <4 x float> zeroinitializer, float %16357, i32 0
  %16359 = insertelement <4 x float> %16358, float 0.000000e+00, i32 1
  %16360 = insertelement <4 x float> %16359, float 0.000000e+00, i32 2
  %16361 = insertelement <4 x float> %16360, float 0.000000e+00, i32 3
  %16362 = getelementptr inbounds float, float* %2, i64 1
  %16363 = load float, float* %16362, align 4
  %16364 = insertelement <4 x float> zeroinitializer, float %16363, i32 0
  %16365 = insertelement <4 x float> %16364, float 0.000000e+00, i32 1
  %16366 = insertelement <4 x float> %16365, float 0.000000e+00, i32 2
  %16367 = insertelement <4 x float> %16366, float 0.000000e+00, i32 3
  %16368 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16361, <4 x float> %16367, <4 x float> zeroinitializer)
  %16369 = extractelement <4 x float> %16368, i32 0
  %16370 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16371 = getelementptr inbounds i8, i8* %16370, i64 4
  %16372 = bitcast i8* %16371 to float*
  store float %16369, float* %16372, align 4
  %16373 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16374 = bitcast i8* %16373 to float*
  %16375 = load float, float* %16374, align 4
  %16376 = insertelement <4 x float> zeroinitializer, float %16375, i32 0
  %16377 = insertelement <4 x float> %16376, float 1.000000e+00, i32 1
  %16378 = insertelement <4 x float> %16377, float 1.000000e+00, i32 2
  %16379 = insertelement <4 x float> %16378, float 1.000000e+00, i32 3
  %16380 = getelementptr inbounds float, float* %2, i64 1
  %16381 = load float, float* %16380, align 4
  %16382 = insertelement <4 x float> zeroinitializer, float %16381, i32 0
  %16383 = insertelement <4 x float> %16382, float 0.000000e+00, i32 1
  %16384 = insertelement <4 x float> %16383, float 0.000000e+00, i32 2
  %16385 = insertelement <4 x float> %16384, float 0.000000e+00, i32 3
  %16386 = fmul <4 x float> %16379, %16385
  %16387 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16388 = getelementptr inbounds i8, i8* %16387, i64 4
  %16389 = bitcast i8* %16388 to float*
  %16390 = load float, float* %16389, align 4
  %16391 = insertelement <4 x float> zeroinitializer, float %16390, i32 0
  %16392 = insertelement <4 x float> %16391, float 0.000000e+00, i32 1
  %16393 = insertelement <4 x float> %16392, float 0.000000e+00, i32 2
  %16394 = insertelement <4 x float> %16393, float 0.000000e+00, i32 3
  %16395 = getelementptr inbounds float, float* %2, i64 5
  %16396 = load float, float* %16395, align 4
  %16397 = insertelement <4 x float> zeroinitializer, float %16396, i32 0
  %16398 = insertelement <4 x float> %16397, float 0.000000e+00, i32 1
  %16399 = insertelement <4 x float> %16398, float 0.000000e+00, i32 2
  %16400 = insertelement <4 x float> %16399, float 0.000000e+00, i32 3
  %16401 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16394, <4 x float> %16400, <4 x float> %16386)
  %16402 = extractelement <4 x float> %16401, i32 0
  %16403 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16404 = getelementptr inbounds i8, i8* %16403, i64 4
  %16405 = bitcast i8* %16404 to float*
  store float %16402, float* %16405, align 4
  %16406 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16407 = bitcast i8* %16406 to float*
  %16408 = load float, float* %16407, align 4
  %16409 = insertelement <4 x float> zeroinitializer, float %16408, i32 0
  %16410 = insertelement <4 x float> %16409, float 1.000000e+00, i32 1
  %16411 = insertelement <4 x float> %16410, float 1.000000e+00, i32 2
  %16412 = insertelement <4 x float> %16411, float 1.000000e+00, i32 3
  %16413 = getelementptr inbounds float, float* %2, i64 1
  %16414 = load float, float* %16413, align 4
  %16415 = insertelement <4 x float> zeroinitializer, float %16414, i32 0
  %16416 = insertelement <4 x float> %16415, float 0.000000e+00, i32 1
  %16417 = insertelement <4 x float> %16416, float 0.000000e+00, i32 2
  %16418 = insertelement <4 x float> %16417, float 0.000000e+00, i32 3
  %16419 = fmul <4 x float> %16412, %16418
  %16420 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16421 = getelementptr inbounds i8, i8* %16420, i64 4
  %16422 = bitcast i8* %16421 to float*
  %16423 = load float, float* %16422, align 4
  %16424 = insertelement <4 x float> zeroinitializer, float %16423, i32 0
  %16425 = insertelement <4 x float> %16424, float 1.000000e+00, i32 1
  %16426 = insertelement <4 x float> %16425, float 1.000000e+00, i32 2
  %16427 = insertelement <4 x float> %16426, float 1.000000e+00, i32 3
  %16428 = getelementptr inbounds float, float* %2, i64 5
  %16429 = load float, float* %16428, align 4
  %16430 = insertelement <4 x float> zeroinitializer, float %16429, i32 0
  %16431 = insertelement <4 x float> %16430, float 0.000000e+00, i32 1
  %16432 = insertelement <4 x float> %16431, float 0.000000e+00, i32 2
  %16433 = insertelement <4 x float> %16432, float 0.000000e+00, i32 3
  %16434 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16427, <4 x float> %16433, <4 x float> %16419)
  %16435 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16436 = getelementptr inbounds i8, i8* %16435, i64 8
  %16437 = bitcast i8* %16436 to float*
  %16438 = load float, float* %16437, align 4
  %16439 = insertelement <4 x float> zeroinitializer, float %16438, i32 0
  %16440 = insertelement <4 x float> %16439, float 0.000000e+00, i32 1
  %16441 = insertelement <4 x float> %16440, float 0.000000e+00, i32 2
  %16442 = insertelement <4 x float> %16441, float 0.000000e+00, i32 3
  %16443 = getelementptr inbounds float, float* %2, i64 9
  %16444 = load float, float* %16443, align 4
  %16445 = insertelement <4 x float> zeroinitializer, float %16444, i32 0
  %16446 = insertelement <4 x float> %16445, float 0.000000e+00, i32 1
  %16447 = insertelement <4 x float> %16446, float 0.000000e+00, i32 2
  %16448 = insertelement <4 x float> %16447, float 0.000000e+00, i32 3
  %16449 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16442, <4 x float> %16448, <4 x float> %16434)
  %16450 = extractelement <4 x float> %16449, i32 0
  %16451 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16452 = getelementptr inbounds i8, i8* %16451, i64 4
  %16453 = bitcast i8* %16452 to float*
  store float %16450, float* %16453, align 4
  %16454 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16455 = bitcast i8* %16454 to float*
  %16456 = load float, float* %16455, align 4
  %16457 = insertelement <4 x float> zeroinitializer, float %16456, i32 0
  %16458 = insertelement <4 x float> %16457, float 1.000000e+00, i32 1
  %16459 = insertelement <4 x float> %16458, float 1.000000e+00, i32 2
  %16460 = insertelement <4 x float> %16459, float 1.000000e+00, i32 3
  %16461 = getelementptr inbounds float, float* %2, i64 1
  %16462 = load float, float* %16461, align 4
  %16463 = insertelement <4 x float> zeroinitializer, float %16462, i32 0
  %16464 = insertelement <4 x float> %16463, float 0.000000e+00, i32 1
  %16465 = insertelement <4 x float> %16464, float 0.000000e+00, i32 2
  %16466 = insertelement <4 x float> %16465, float 0.000000e+00, i32 3
  %16467 = fmul <4 x float> %16460, %16466
  %16468 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16469 = getelementptr inbounds i8, i8* %16468, i64 4
  %16470 = bitcast i8* %16469 to float*
  %16471 = load float, float* %16470, align 4
  %16472 = insertelement <4 x float> zeroinitializer, float %16471, i32 0
  %16473 = insertelement <4 x float> %16472, float 1.000000e+00, i32 1
  %16474 = insertelement <4 x float> %16473, float 1.000000e+00, i32 2
  %16475 = insertelement <4 x float> %16474, float 1.000000e+00, i32 3
  %16476 = getelementptr inbounds float, float* %2, i64 5
  %16477 = load float, float* %16476, align 4
  %16478 = insertelement <4 x float> zeroinitializer, float %16477, i32 0
  %16479 = insertelement <4 x float> %16478, float 0.000000e+00, i32 1
  %16480 = insertelement <4 x float> %16479, float 0.000000e+00, i32 2
  %16481 = insertelement <4 x float> %16480, float 0.000000e+00, i32 3
  %16482 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16475, <4 x float> %16481, <4 x float> %16467)
  %16483 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16484 = getelementptr inbounds i8, i8* %16483, i64 8
  %16485 = bitcast i8* %16484 to float*
  %16486 = load float, float* %16485, align 4
  %16487 = insertelement <4 x float> zeroinitializer, float %16486, i32 0
  %16488 = insertelement <4 x float> %16487, float 1.000000e+00, i32 1
  %16489 = insertelement <4 x float> %16488, float 1.000000e+00, i32 2
  %16490 = insertelement <4 x float> %16489, float 1.000000e+00, i32 3
  %16491 = getelementptr inbounds float, float* %2, i64 9
  %16492 = load float, float* %16491, align 4
  %16493 = insertelement <4 x float> zeroinitializer, float %16492, i32 0
  %16494 = insertelement <4 x float> %16493, float 0.000000e+00, i32 1
  %16495 = insertelement <4 x float> %16494, float 0.000000e+00, i32 2
  %16496 = insertelement <4 x float> %16495, float 0.000000e+00, i32 3
  %16497 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16490, <4 x float> %16496, <4 x float> %16482)
  %16498 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16499 = getelementptr inbounds i8, i8* %16498, i64 12
  %16500 = bitcast i8* %16499 to float*
  %16501 = load float, float* %16500, align 4
  %16502 = insertelement <4 x float> zeroinitializer, float %16501, i32 0
  %16503 = insertelement <4 x float> %16502, float 0.000000e+00, i32 1
  %16504 = insertelement <4 x float> %16503, float 0.000000e+00, i32 2
  %16505 = insertelement <4 x float> %16504, float 0.000000e+00, i32 3
  %16506 = getelementptr inbounds float, float* %2, i64 13
  %16507 = load float, float* %16506, align 4
  %16508 = insertelement <4 x float> zeroinitializer, float %16507, i32 0
  %16509 = insertelement <4 x float> %16508, float 0.000000e+00, i32 1
  %16510 = insertelement <4 x float> %16509, float 0.000000e+00, i32 2
  %16511 = insertelement <4 x float> %16510, float 0.000000e+00, i32 3
  %16512 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16505, <4 x float> %16511, <4 x float> %16497)
  %16513 = extractelement <4 x float> %16512, i32 0
  %16514 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16515 = getelementptr inbounds i8, i8* %16514, i64 4
  %16516 = bitcast i8* %16515 to float*
  store float %16513, float* %16516, align 4
  %16517 = extractelement <4 x float> %16512, i32 1
  %16518 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16519 = getelementptr inbounds i8, i8* %16518, i64 8
  %16520 = bitcast i8* %16519 to float*
  store float %16517, float* %16520, align 4
  %16521 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16522 = bitcast i8* %16521 to float*
  %16523 = load float, float* %16522, align 4
  %16524 = insertelement <4 x float> zeroinitializer, float %16523, i32 0
  %16525 = insertelement <4 x float> %16524, float 0.000000e+00, i32 1
  %16526 = insertelement <4 x float> %16525, float 0.000000e+00, i32 2
  %16527 = insertelement <4 x float> %16526, float 0.000000e+00, i32 3
  %16528 = getelementptr inbounds float, float* %2, i64 2
  %16529 = load float, float* %16528, align 4
  %16530 = insertelement <4 x float> zeroinitializer, float %16529, i32 0
  %16531 = insertelement <4 x float> %16530, float 0.000000e+00, i32 1
  %16532 = insertelement <4 x float> %16531, float 0.000000e+00, i32 2
  %16533 = insertelement <4 x float> %16532, float 0.000000e+00, i32 3
  %16534 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16527, <4 x float> %16533, <4 x float> zeroinitializer)
  %16535 = extractelement <4 x float> %16534, i32 0
  %16536 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16537 = getelementptr inbounds i8, i8* %16536, i64 8
  %16538 = bitcast i8* %16537 to float*
  store float %16535, float* %16538, align 4
  %16539 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16540 = bitcast i8* %16539 to float*
  %16541 = load float, float* %16540, align 4
  %16542 = insertelement <4 x float> zeroinitializer, float %16541, i32 0
  %16543 = insertelement <4 x float> %16542, float 1.000000e+00, i32 1
  %16544 = insertelement <4 x float> %16543, float 1.000000e+00, i32 2
  %16545 = insertelement <4 x float> %16544, float 1.000000e+00, i32 3
  %16546 = getelementptr inbounds float, float* %2, i64 2
  %16547 = load float, float* %16546, align 4
  %16548 = insertelement <4 x float> zeroinitializer, float %16547, i32 0
  %16549 = insertelement <4 x float> %16548, float 0.000000e+00, i32 1
  %16550 = insertelement <4 x float> %16549, float 0.000000e+00, i32 2
  %16551 = insertelement <4 x float> %16550, float 0.000000e+00, i32 3
  %16552 = fmul <4 x float> %16545, %16551
  %16553 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16554 = getelementptr inbounds i8, i8* %16553, i64 4
  %16555 = bitcast i8* %16554 to float*
  %16556 = load float, float* %16555, align 4
  %16557 = insertelement <4 x float> zeroinitializer, float %16556, i32 0
  %16558 = insertelement <4 x float> %16557, float 0.000000e+00, i32 1
  %16559 = insertelement <4 x float> %16558, float 0.000000e+00, i32 2
  %16560 = insertelement <4 x float> %16559, float 0.000000e+00, i32 3
  %16561 = getelementptr inbounds float, float* %2, i64 6
  %16562 = load float, float* %16561, align 4
  %16563 = insertelement <4 x float> zeroinitializer, float %16562, i32 0
  %16564 = insertelement <4 x float> %16563, float 0.000000e+00, i32 1
  %16565 = insertelement <4 x float> %16564, float 0.000000e+00, i32 2
  %16566 = insertelement <4 x float> %16565, float 0.000000e+00, i32 3
  %16567 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16560, <4 x float> %16566, <4 x float> %16552)
  %16568 = extractelement <4 x float> %16567, i32 0
  %16569 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16570 = getelementptr inbounds i8, i8* %16569, i64 8
  %16571 = bitcast i8* %16570 to float*
  store float %16568, float* %16571, align 4
  %16572 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16573 = bitcast i8* %16572 to float*
  %16574 = load float, float* %16573, align 4
  %16575 = insertelement <4 x float> zeroinitializer, float %16574, i32 0
  %16576 = insertelement <4 x float> %16575, float 1.000000e+00, i32 1
  %16577 = insertelement <4 x float> %16576, float 1.000000e+00, i32 2
  %16578 = insertelement <4 x float> %16577, float 1.000000e+00, i32 3
  %16579 = getelementptr inbounds float, float* %2, i64 2
  %16580 = load float, float* %16579, align 4
  %16581 = insertelement <4 x float> zeroinitializer, float %16580, i32 0
  %16582 = insertelement <4 x float> %16581, float 0.000000e+00, i32 1
  %16583 = insertelement <4 x float> %16582, float 0.000000e+00, i32 2
  %16584 = insertelement <4 x float> %16583, float 0.000000e+00, i32 3
  %16585 = fmul <4 x float> %16578, %16584
  %16586 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16587 = getelementptr inbounds i8, i8* %16586, i64 4
  %16588 = bitcast i8* %16587 to float*
  %16589 = load float, float* %16588, align 4
  %16590 = insertelement <4 x float> zeroinitializer, float %16589, i32 0
  %16591 = insertelement <4 x float> %16590, float 1.000000e+00, i32 1
  %16592 = insertelement <4 x float> %16591, float 1.000000e+00, i32 2
  %16593 = insertelement <4 x float> %16592, float 1.000000e+00, i32 3
  %16594 = getelementptr inbounds float, float* %2, i64 6
  %16595 = load float, float* %16594, align 4
  %16596 = insertelement <4 x float> zeroinitializer, float %16595, i32 0
  %16597 = insertelement <4 x float> %16596, float 0.000000e+00, i32 1
  %16598 = insertelement <4 x float> %16597, float 0.000000e+00, i32 2
  %16599 = insertelement <4 x float> %16598, float 0.000000e+00, i32 3
  %16600 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16593, <4 x float> %16599, <4 x float> %16585)
  %16601 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16602 = getelementptr inbounds i8, i8* %16601, i64 8
  %16603 = bitcast i8* %16602 to float*
  %16604 = load float, float* %16603, align 4
  %16605 = insertelement <4 x float> zeroinitializer, float %16604, i32 0
  %16606 = insertelement <4 x float> %16605, float 0.000000e+00, i32 1
  %16607 = insertelement <4 x float> %16606, float 0.000000e+00, i32 2
  %16608 = insertelement <4 x float> %16607, float 0.000000e+00, i32 3
  %16609 = getelementptr inbounds float, float* %2, i64 10
  %16610 = load float, float* %16609, align 4
  %16611 = insertelement <4 x float> zeroinitializer, float %16610, i32 0
  %16612 = insertelement <4 x float> %16611, float 0.000000e+00, i32 1
  %16613 = insertelement <4 x float> %16612, float 0.000000e+00, i32 2
  %16614 = insertelement <4 x float> %16613, float 0.000000e+00, i32 3
  %16615 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16608, <4 x float> %16614, <4 x float> %16600)
  %16616 = extractelement <4 x float> %16615, i32 0
  %16617 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16618 = getelementptr inbounds i8, i8* %16617, i64 8
  %16619 = bitcast i8* %16618 to float*
  store float %16616, float* %16619, align 4
  %16620 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16621 = bitcast i8* %16620 to float*
  %16622 = load float, float* %16621, align 4
  %16623 = insertelement <4 x float> zeroinitializer, float %16622, i32 0
  %16624 = insertelement <4 x float> %16623, float 1.000000e+00, i32 1
  %16625 = insertelement <4 x float> %16624, float 1.000000e+00, i32 2
  %16626 = insertelement <4 x float> %16625, float 1.000000e+00, i32 3
  %16627 = getelementptr inbounds float, float* %2, i64 2
  %16628 = load float, float* %16627, align 4
  %16629 = insertelement <4 x float> zeroinitializer, float %16628, i32 0
  %16630 = insertelement <4 x float> %16629, float 0.000000e+00, i32 1
  %16631 = insertelement <4 x float> %16630, float 0.000000e+00, i32 2
  %16632 = insertelement <4 x float> %16631, float 0.000000e+00, i32 3
  %16633 = fmul <4 x float> %16626, %16632
  %16634 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16635 = getelementptr inbounds i8, i8* %16634, i64 4
  %16636 = bitcast i8* %16635 to float*
  %16637 = load float, float* %16636, align 4
  %16638 = insertelement <4 x float> zeroinitializer, float %16637, i32 0
  %16639 = insertelement <4 x float> %16638, float 1.000000e+00, i32 1
  %16640 = insertelement <4 x float> %16639, float 1.000000e+00, i32 2
  %16641 = insertelement <4 x float> %16640, float 1.000000e+00, i32 3
  %16642 = getelementptr inbounds float, float* %2, i64 6
  %16643 = load float, float* %16642, align 4
  %16644 = insertelement <4 x float> zeroinitializer, float %16643, i32 0
  %16645 = insertelement <4 x float> %16644, float 0.000000e+00, i32 1
  %16646 = insertelement <4 x float> %16645, float 0.000000e+00, i32 2
  %16647 = insertelement <4 x float> %16646, float 0.000000e+00, i32 3
  %16648 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16641, <4 x float> %16647, <4 x float> %16633)
  %16649 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16650 = getelementptr inbounds i8, i8* %16649, i64 8
  %16651 = bitcast i8* %16650 to float*
  %16652 = load float, float* %16651, align 4
  %16653 = insertelement <4 x float> zeroinitializer, float %16652, i32 0
  %16654 = insertelement <4 x float> %16653, float 1.000000e+00, i32 1
  %16655 = insertelement <4 x float> %16654, float 1.000000e+00, i32 2
  %16656 = insertelement <4 x float> %16655, float 1.000000e+00, i32 3
  %16657 = getelementptr inbounds float, float* %2, i64 10
  %16658 = load float, float* %16657, align 4
  %16659 = insertelement <4 x float> zeroinitializer, float %16658, i32 0
  %16660 = insertelement <4 x float> %16659, float 0.000000e+00, i32 1
  %16661 = insertelement <4 x float> %16660, float 0.000000e+00, i32 2
  %16662 = insertelement <4 x float> %16661, float 0.000000e+00, i32 3
  %16663 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16656, <4 x float> %16662, <4 x float> %16648)
  %16664 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16665 = getelementptr inbounds i8, i8* %16664, i64 12
  %16666 = bitcast i8* %16665 to float*
  %16667 = load float, float* %16666, align 4
  %16668 = insertelement <4 x float> zeroinitializer, float %16667, i32 0
  %16669 = insertelement <4 x float> %16668, float 0.000000e+00, i32 1
  %16670 = insertelement <4 x float> %16669, float 0.000000e+00, i32 2
  %16671 = insertelement <4 x float> %16670, float 0.000000e+00, i32 3
  %16672 = getelementptr inbounds float, float* %2, i64 14
  %16673 = load float, float* %16672, align 4
  %16674 = insertelement <4 x float> zeroinitializer, float %16673, i32 0
  %16675 = insertelement <4 x float> %16674, float 0.000000e+00, i32 1
  %16676 = insertelement <4 x float> %16675, float 0.000000e+00, i32 2
  %16677 = insertelement <4 x float> %16676, float 0.000000e+00, i32 3
  %16678 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16671, <4 x float> %16677, <4 x float> %16663)
  %16679 = extractelement <4 x float> %16678, i32 0
  %16680 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16681 = getelementptr inbounds i8, i8* %16680, i64 8
  %16682 = bitcast i8* %16681 to float*
  store float %16679, float* %16682, align 4
  %16683 = extractelement <4 x float> %16678, i32 1
  %16684 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16685 = getelementptr inbounds i8, i8* %16684, i64 12
  %16686 = bitcast i8* %16685 to float*
  store float %16683, float* %16686, align 4
  %16687 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16688 = bitcast i8* %16687 to float*
  %16689 = load float, float* %16688, align 4
  %16690 = insertelement <4 x float> zeroinitializer, float %16689, i32 0
  %16691 = insertelement <4 x float> %16690, float 0.000000e+00, i32 1
  %16692 = insertelement <4 x float> %16691, float 0.000000e+00, i32 2
  %16693 = insertelement <4 x float> %16692, float 0.000000e+00, i32 3
  %16694 = getelementptr inbounds float, float* %2, i64 3
  %16695 = load float, float* %16694, align 4
  %16696 = insertelement <4 x float> zeroinitializer, float %16695, i32 0
  %16697 = insertelement <4 x float> %16696, float 0.000000e+00, i32 1
  %16698 = insertelement <4 x float> %16697, float 0.000000e+00, i32 2
  %16699 = insertelement <4 x float> %16698, float 0.000000e+00, i32 3
  %16700 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16693, <4 x float> %16699, <4 x float> zeroinitializer)
  %16701 = extractelement <4 x float> %16700, i32 0
  %16702 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16703 = getelementptr inbounds i8, i8* %16702, i64 12
  %16704 = bitcast i8* %16703 to float*
  store float %16701, float* %16704, align 4
  %16705 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16706 = bitcast i8* %16705 to float*
  %16707 = load float, float* %16706, align 4
  %16708 = insertelement <4 x float> zeroinitializer, float %16707, i32 0
  %16709 = insertelement <4 x float> %16708, float 1.000000e+00, i32 1
  %16710 = insertelement <4 x float> %16709, float 1.000000e+00, i32 2
  %16711 = insertelement <4 x float> %16710, float 1.000000e+00, i32 3
  %16712 = getelementptr inbounds float, float* %2, i64 3
  %16713 = load float, float* %16712, align 4
  %16714 = insertelement <4 x float> zeroinitializer, float %16713, i32 0
  %16715 = insertelement <4 x float> %16714, float 0.000000e+00, i32 1
  %16716 = insertelement <4 x float> %16715, float 0.000000e+00, i32 2
  %16717 = insertelement <4 x float> %16716, float 0.000000e+00, i32 3
  %16718 = fmul <4 x float> %16711, %16717
  %16719 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16720 = getelementptr inbounds i8, i8* %16719, i64 4
  %16721 = bitcast i8* %16720 to float*
  %16722 = load float, float* %16721, align 4
  %16723 = insertelement <4 x float> zeroinitializer, float %16722, i32 0
  %16724 = insertelement <4 x float> %16723, float 0.000000e+00, i32 1
  %16725 = insertelement <4 x float> %16724, float 0.000000e+00, i32 2
  %16726 = insertelement <4 x float> %16725, float 0.000000e+00, i32 3
  %16727 = getelementptr inbounds float, float* %2, i64 7
  %16728 = load float, float* %16727, align 4
  %16729 = insertelement <4 x float> zeroinitializer, float %16728, i32 0
  %16730 = insertelement <4 x float> %16729, float 0.000000e+00, i32 1
  %16731 = insertelement <4 x float> %16730, float 0.000000e+00, i32 2
  %16732 = insertelement <4 x float> %16731, float 0.000000e+00, i32 3
  %16733 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16726, <4 x float> %16732, <4 x float> %16718)
  %16734 = extractelement <4 x float> %16733, i32 0
  %16735 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16736 = getelementptr inbounds i8, i8* %16735, i64 12
  %16737 = bitcast i8* %16736 to float*
  store float %16734, float* %16737, align 4
  %16738 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16739 = bitcast i8* %16738 to float*
  %16740 = load float, float* %16739, align 4
  %16741 = insertelement <4 x float> zeroinitializer, float %16740, i32 0
  %16742 = insertelement <4 x float> %16741, float 1.000000e+00, i32 1
  %16743 = insertelement <4 x float> %16742, float 1.000000e+00, i32 2
  %16744 = insertelement <4 x float> %16743, float 1.000000e+00, i32 3
  %16745 = getelementptr inbounds float, float* %2, i64 3
  %16746 = load float, float* %16745, align 4
  %16747 = insertelement <4 x float> zeroinitializer, float %16746, i32 0
  %16748 = insertelement <4 x float> %16747, float 0.000000e+00, i32 1
  %16749 = insertelement <4 x float> %16748, float 0.000000e+00, i32 2
  %16750 = insertelement <4 x float> %16749, float 0.000000e+00, i32 3
  %16751 = fmul <4 x float> %16744, %16750
  %16752 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16753 = getelementptr inbounds i8, i8* %16752, i64 4
  %16754 = bitcast i8* %16753 to float*
  %16755 = load float, float* %16754, align 4
  %16756 = insertelement <4 x float> zeroinitializer, float %16755, i32 0
  %16757 = insertelement <4 x float> %16756, float 1.000000e+00, i32 1
  %16758 = insertelement <4 x float> %16757, float 1.000000e+00, i32 2
  %16759 = insertelement <4 x float> %16758, float 1.000000e+00, i32 3
  %16760 = getelementptr inbounds float, float* %2, i64 7
  %16761 = load float, float* %16760, align 4
  %16762 = insertelement <4 x float> zeroinitializer, float %16761, i32 0
  %16763 = insertelement <4 x float> %16762, float 0.000000e+00, i32 1
  %16764 = insertelement <4 x float> %16763, float 0.000000e+00, i32 2
  %16765 = insertelement <4 x float> %16764, float 0.000000e+00, i32 3
  %16766 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16759, <4 x float> %16765, <4 x float> %16751)
  %16767 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16768 = getelementptr inbounds i8, i8* %16767, i64 8
  %16769 = bitcast i8* %16768 to float*
  %16770 = load float, float* %16769, align 4
  %16771 = insertelement <4 x float> zeroinitializer, float %16770, i32 0
  %16772 = insertelement <4 x float> %16771, float 0.000000e+00, i32 1
  %16773 = insertelement <4 x float> %16772, float 0.000000e+00, i32 2
  %16774 = insertelement <4 x float> %16773, float 0.000000e+00, i32 3
  %16775 = getelementptr inbounds float, float* %2, i64 11
  %16776 = load float, float* %16775, align 4
  %16777 = insertelement <4 x float> zeroinitializer, float %16776, i32 0
  %16778 = insertelement <4 x float> %16777, float 0.000000e+00, i32 1
  %16779 = insertelement <4 x float> %16778, float 0.000000e+00, i32 2
  %16780 = insertelement <4 x float> %16779, float 0.000000e+00, i32 3
  %16781 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16774, <4 x float> %16780, <4 x float> %16766)
  %16782 = extractelement <4 x float> %16781, i32 0
  %16783 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16784 = getelementptr inbounds i8, i8* %16783, i64 12
  %16785 = bitcast i8* %16784 to float*
  store float %16782, float* %16785, align 4
  %16786 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16787 = bitcast i8* %16786 to float*
  %16788 = load float, float* %16787, align 4
  %16789 = insertelement <4 x float> zeroinitializer, float %16788, i32 0
  %16790 = insertelement <4 x float> %16789, float 1.000000e+00, i32 1
  %16791 = insertelement <4 x float> %16790, float 1.000000e+00, i32 2
  %16792 = insertelement <4 x float> %16791, float 1.000000e+00, i32 3
  %16793 = getelementptr inbounds float, float* %2, i64 3
  %16794 = load float, float* %16793, align 4
  %16795 = insertelement <4 x float> zeroinitializer, float %16794, i32 0
  %16796 = insertelement <4 x float> %16795, float 0.000000e+00, i32 1
  %16797 = insertelement <4 x float> %16796, float 0.000000e+00, i32 2
  %16798 = insertelement <4 x float> %16797, float 0.000000e+00, i32 3
  %16799 = fmul <4 x float> %16792, %16798
  %16800 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16801 = getelementptr inbounds i8, i8* %16800, i64 4
  %16802 = bitcast i8* %16801 to float*
  %16803 = load float, float* %16802, align 4
  %16804 = insertelement <4 x float> zeroinitializer, float %16803, i32 0
  %16805 = insertelement <4 x float> %16804, float 1.000000e+00, i32 1
  %16806 = insertelement <4 x float> %16805, float 1.000000e+00, i32 2
  %16807 = insertelement <4 x float> %16806, float 1.000000e+00, i32 3
  %16808 = getelementptr inbounds float, float* %2, i64 7
  %16809 = load float, float* %16808, align 4
  %16810 = insertelement <4 x float> zeroinitializer, float %16809, i32 0
  %16811 = insertelement <4 x float> %16810, float 0.000000e+00, i32 1
  %16812 = insertelement <4 x float> %16811, float 0.000000e+00, i32 2
  %16813 = insertelement <4 x float> %16812, float 0.000000e+00, i32 3
  %16814 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16807, <4 x float> %16813, <4 x float> %16799)
  %16815 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16816 = getelementptr inbounds i8, i8* %16815, i64 8
  %16817 = bitcast i8* %16816 to float*
  %16818 = load float, float* %16817, align 4
  %16819 = insertelement <4 x float> zeroinitializer, float %16818, i32 0
  %16820 = insertelement <4 x float> %16819, float 1.000000e+00, i32 1
  %16821 = insertelement <4 x float> %16820, float 1.000000e+00, i32 2
  %16822 = insertelement <4 x float> %16821, float 1.000000e+00, i32 3
  %16823 = getelementptr inbounds float, float* %2, i64 11
  %16824 = load float, float* %16823, align 4
  %16825 = insertelement <4 x float> zeroinitializer, float %16824, i32 0
  %16826 = insertelement <4 x float> %16825, float 0.000000e+00, i32 1
  %16827 = insertelement <4 x float> %16826, float 0.000000e+00, i32 2
  %16828 = insertelement <4 x float> %16827, float 0.000000e+00, i32 3
  %16829 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16822, <4 x float> %16828, <4 x float> %16814)
  %16830 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16831 = getelementptr inbounds i8, i8* %16830, i64 12
  %16832 = bitcast i8* %16831 to float*
  %16833 = load float, float* %16832, align 4
  %16834 = insertelement <4 x float> zeroinitializer, float %16833, i32 0
  %16835 = insertelement <4 x float> %16834, float 0.000000e+00, i32 1
  %16836 = insertelement <4 x float> %16835, float 0.000000e+00, i32 2
  %16837 = insertelement <4 x float> %16836, float 0.000000e+00, i32 3
  %16838 = getelementptr inbounds float, float* %2, i64 15
  %16839 = load float, float* %16838, align 4
  %16840 = insertelement <4 x float> zeroinitializer, float %16839, i32 0
  %16841 = insertelement <4 x float> %16840, float 0.000000e+00, i32 1
  %16842 = insertelement <4 x float> %16841, float 0.000000e+00, i32 2
  %16843 = insertelement <4 x float> %16842, float 0.000000e+00, i32 3
  %16844 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16837, <4 x float> %16843, <4 x float> %16829)
  %16845 = extractelement <4 x float> %16844, i32 0
  %16846 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16847 = getelementptr inbounds i8, i8* %16846, i64 12
  %16848 = bitcast i8* %16847 to float*
  store float %16845, float* %16848, align 4
  %16849 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16850 = getelementptr inbounds i8, i8* %16849, i64 16
  %16851 = bitcast i8* %16850 to float*
  %16852 = load float, float* %16851, align 4
  %16853 = insertelement <4 x float> zeroinitializer, float %16852, i32 0
  %16854 = insertelement <4 x float> %16853, float 0.000000e+00, i32 1
  %16855 = insertelement <4 x float> %16854, float 0.000000e+00, i32 2
  %16856 = insertelement <4 x float> %16855, float 0.000000e+00, i32 3
  %16857 = load float, float* %2, align 4
  %16858 = insertelement <4 x float> zeroinitializer, float %16857, i32 0
  %16859 = insertelement <4 x float> %16858, float 0.000000e+00, i32 1
  %16860 = insertelement <4 x float> %16859, float 0.000000e+00, i32 2
  %16861 = insertelement <4 x float> %16860, float 0.000000e+00, i32 3
  %16862 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16856, <4 x float> %16861, <4 x float> zeroinitializer)
  %16863 = extractelement <4 x float> %16862, i32 0
  %16864 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16865 = getelementptr inbounds i8, i8* %16864, i64 16
  %16866 = bitcast i8* %16865 to float*
  store float %16863, float* %16866, align 4
  %16867 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16868 = getelementptr inbounds i8, i8* %16867, i64 16
  %16869 = bitcast i8* %16868 to float*
  %16870 = load float, float* %16869, align 4
  %16871 = insertelement <4 x float> zeroinitializer, float %16870, i32 0
  %16872 = insertelement <4 x float> %16871, float 1.000000e+00, i32 1
  %16873 = insertelement <4 x float> %16872, float 1.000000e+00, i32 2
  %16874 = insertelement <4 x float> %16873, float 1.000000e+00, i32 3
  %16875 = load float, float* %2, align 4
  %16876 = insertelement <4 x float> zeroinitializer, float %16875, i32 0
  %16877 = insertelement <4 x float> %16876, float 0.000000e+00, i32 1
  %16878 = insertelement <4 x float> %16877, float 0.000000e+00, i32 2
  %16879 = insertelement <4 x float> %16878, float 0.000000e+00, i32 3
  %16880 = fmul <4 x float> %16874, %16879
  %16881 = fadd <4 x float> %16880, zeroinitializer
  %16882 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16883 = getelementptr inbounds i8, i8* %16882, i64 20
  %16884 = bitcast i8* %16883 to float*
  %16885 = load float, float* %16884, align 4
  %16886 = insertelement <4 x float> zeroinitializer, float %16885, i32 0
  %16887 = insertelement <4 x float> %16886, float 0.000000e+00, i32 1
  %16888 = insertelement <4 x float> %16887, float 0.000000e+00, i32 2
  %16889 = insertelement <4 x float> %16888, float 0.000000e+00, i32 3
  %16890 = getelementptr inbounds float, float* %2, i64 4
  %16891 = load float, float* %16890, align 4
  %16892 = insertelement <4 x float> zeroinitializer, float %16891, i32 0
  %16893 = insertelement <4 x float> %16892, float 0.000000e+00, i32 1
  %16894 = insertelement <4 x float> %16893, float 0.000000e+00, i32 2
  %16895 = insertelement <4 x float> %16894, float 0.000000e+00, i32 3
  %16896 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16889, <4 x float> %16895, <4 x float> %16881)
  %16897 = extractelement <4 x float> %16896, i32 0
  %16898 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16899 = getelementptr inbounds i8, i8* %16898, i64 16
  %16900 = bitcast i8* %16899 to float*
  store float %16897, float* %16900, align 4
  %16901 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16902 = getelementptr inbounds i8, i8* %16901, i64 16
  %16903 = bitcast i8* %16902 to float*
  %16904 = load float, float* %16903, align 4
  %16905 = insertelement <4 x float> zeroinitializer, float %16904, i32 0
  %16906 = insertelement <4 x float> %16905, float 1.000000e+00, i32 1
  %16907 = insertelement <4 x float> %16906, float 1.000000e+00, i32 2
  %16908 = insertelement <4 x float> %16907, float 1.000000e+00, i32 3
  %16909 = load float, float* %2, align 4
  %16910 = insertelement <4 x float> zeroinitializer, float %16909, i32 0
  %16911 = insertelement <4 x float> %16910, float 0.000000e+00, i32 1
  %16912 = insertelement <4 x float> %16911, float 0.000000e+00, i32 2
  %16913 = insertelement <4 x float> %16912, float 0.000000e+00, i32 3
  %16914 = fmul <4 x float> %16908, %16913
  %16915 = fadd <4 x float> %16914, zeroinitializer
  %16916 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16917 = getelementptr inbounds i8, i8* %16916, i64 20
  %16918 = bitcast i8* %16917 to float*
  %16919 = load float, float* %16918, align 4
  %16920 = insertelement <4 x float> zeroinitializer, float %16919, i32 0
  %16921 = insertelement <4 x float> %16920, float 1.000000e+00, i32 1
  %16922 = insertelement <4 x float> %16921, float 1.000000e+00, i32 2
  %16923 = insertelement <4 x float> %16922, float 1.000000e+00, i32 3
  %16924 = getelementptr inbounds float, float* %2, i64 4
  %16925 = load float, float* %16924, align 4
  %16926 = insertelement <4 x float> zeroinitializer, float %16925, i32 0
  %16927 = insertelement <4 x float> %16926, float 0.000000e+00, i32 1
  %16928 = insertelement <4 x float> %16927, float 0.000000e+00, i32 2
  %16929 = insertelement <4 x float> %16928, float 0.000000e+00, i32 3
  %16930 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16923, <4 x float> %16929, <4 x float> %16915)
  %16931 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16932 = getelementptr inbounds i8, i8* %16931, i64 24
  %16933 = bitcast i8* %16932 to float*
  %16934 = load float, float* %16933, align 4
  %16935 = insertelement <4 x float> zeroinitializer, float %16934, i32 0
  %16936 = insertelement <4 x float> %16935, float 0.000000e+00, i32 1
  %16937 = insertelement <4 x float> %16936, float 0.000000e+00, i32 2
  %16938 = insertelement <4 x float> %16937, float 0.000000e+00, i32 3
  %16939 = getelementptr inbounds float, float* %2, i64 8
  %16940 = load float, float* %16939, align 4
  %16941 = insertelement <4 x float> zeroinitializer, float %16940, i32 0
  %16942 = insertelement <4 x float> %16941, float 0.000000e+00, i32 1
  %16943 = insertelement <4 x float> %16942, float 0.000000e+00, i32 2
  %16944 = insertelement <4 x float> %16943, float 0.000000e+00, i32 3
  %16945 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16938, <4 x float> %16944, <4 x float> %16930)
  %16946 = extractelement <4 x float> %16945, i32 0
  %16947 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16948 = getelementptr inbounds i8, i8* %16947, i64 16
  %16949 = bitcast i8* %16948 to float*
  store float %16946, float* %16949, align 4
  %16950 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16951 = getelementptr inbounds i8, i8* %16950, i64 16
  %16952 = bitcast i8* %16951 to float*
  %16953 = load float, float* %16952, align 4
  %16954 = insertelement <4 x float> zeroinitializer, float %16953, i32 0
  %16955 = insertelement <4 x float> %16954, float 1.000000e+00, i32 1
  %16956 = insertelement <4 x float> %16955, float 1.000000e+00, i32 2
  %16957 = insertelement <4 x float> %16956, float 1.000000e+00, i32 3
  %16958 = load float, float* %2, align 4
  %16959 = insertelement <4 x float> zeroinitializer, float %16958, i32 0
  %16960 = insertelement <4 x float> %16959, float 0.000000e+00, i32 1
  %16961 = insertelement <4 x float> %16960, float 0.000000e+00, i32 2
  %16962 = insertelement <4 x float> %16961, float 0.000000e+00, i32 3
  %16963 = fmul <4 x float> %16957, %16962
  %16964 = fadd <4 x float> %16963, zeroinitializer
  %16965 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16966 = getelementptr inbounds i8, i8* %16965, i64 20
  %16967 = bitcast i8* %16966 to float*
  %16968 = load float, float* %16967, align 4
  %16969 = insertelement <4 x float> zeroinitializer, float %16968, i32 0
  %16970 = insertelement <4 x float> %16969, float 1.000000e+00, i32 1
  %16971 = insertelement <4 x float> %16970, float 1.000000e+00, i32 2
  %16972 = insertelement <4 x float> %16971, float 1.000000e+00, i32 3
  %16973 = getelementptr inbounds float, float* %2, i64 4
  %16974 = load float, float* %16973, align 4
  %16975 = insertelement <4 x float> zeroinitializer, float %16974, i32 0
  %16976 = insertelement <4 x float> %16975, float 0.000000e+00, i32 1
  %16977 = insertelement <4 x float> %16976, float 0.000000e+00, i32 2
  %16978 = insertelement <4 x float> %16977, float 0.000000e+00, i32 3
  %16979 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16972, <4 x float> %16978, <4 x float> %16964)
  %16980 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16981 = getelementptr inbounds i8, i8* %16980, i64 24
  %16982 = bitcast i8* %16981 to float*
  %16983 = load float, float* %16982, align 4
  %16984 = insertelement <4 x float> zeroinitializer, float %16983, i32 0
  %16985 = insertelement <4 x float> %16984, float 1.000000e+00, i32 1
  %16986 = insertelement <4 x float> %16985, float 1.000000e+00, i32 2
  %16987 = insertelement <4 x float> %16986, float 1.000000e+00, i32 3
  %16988 = getelementptr inbounds float, float* %2, i64 8
  %16989 = load float, float* %16988, align 4
  %16990 = insertelement <4 x float> zeroinitializer, float %16989, i32 0
  %16991 = insertelement <4 x float> %16990, float 0.000000e+00, i32 1
  %16992 = insertelement <4 x float> %16991, float 0.000000e+00, i32 2
  %16993 = insertelement <4 x float> %16992, float 0.000000e+00, i32 3
  %16994 = call <4 x float> @llvm.fma.v4f32(<4 x float> %16987, <4 x float> %16993, <4 x float> %16979)
  %16995 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16996 = getelementptr inbounds i8, i8* %16995, i64 28
  %16997 = bitcast i8* %16996 to float*
  %16998 = load float, float* %16997, align 4
  %16999 = insertelement <4 x float> zeroinitializer, float %16998, i32 0
  %17000 = insertelement <4 x float> %16999, float 0.000000e+00, i32 1
  %17001 = insertelement <4 x float> %17000, float 0.000000e+00, i32 2
  %17002 = insertelement <4 x float> %17001, float 0.000000e+00, i32 3
  %17003 = getelementptr inbounds float, float* %2, i64 12
  %17004 = load float, float* %17003, align 4
  %17005 = insertelement <4 x float> zeroinitializer, float %17004, i32 0
  %17006 = insertelement <4 x float> %17005, float 0.000000e+00, i32 1
  %17007 = insertelement <4 x float> %17006, float 0.000000e+00, i32 2
  %17008 = insertelement <4 x float> %17007, float 0.000000e+00, i32 3
  %17009 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17002, <4 x float> %17008, <4 x float> %16994)
  %17010 = extractelement <4 x float> %17009, i32 0
  %17011 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17012 = getelementptr inbounds i8, i8* %17011, i64 16
  %17013 = bitcast i8* %17012 to float*
  store float %17010, float* %17013, align 4
  %17014 = extractelement <4 x float> %17009, i32 1
  %17015 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17016 = getelementptr inbounds i8, i8* %17015, i64 20
  %17017 = bitcast i8* %17016 to float*
  store float %17014, float* %17017, align 4
  %17018 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17019 = getelementptr inbounds i8, i8* %17018, i64 16
  %17020 = bitcast i8* %17019 to float*
  %17021 = load float, float* %17020, align 4
  %17022 = insertelement <4 x float> zeroinitializer, float %17021, i32 0
  %17023 = insertelement <4 x float> %17022, float 0.000000e+00, i32 1
  %17024 = insertelement <4 x float> %17023, float 0.000000e+00, i32 2
  %17025 = insertelement <4 x float> %17024, float 0.000000e+00, i32 3
  %17026 = getelementptr inbounds float, float* %2, i64 1
  %17027 = load float, float* %17026, align 4
  %17028 = insertelement <4 x float> zeroinitializer, float %17027, i32 0
  %17029 = insertelement <4 x float> %17028, float 0.000000e+00, i32 1
  %17030 = insertelement <4 x float> %17029, float 0.000000e+00, i32 2
  %17031 = insertelement <4 x float> %17030, float 0.000000e+00, i32 3
  %17032 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17025, <4 x float> %17031, <4 x float> zeroinitializer)
  %17033 = extractelement <4 x float> %17032, i32 0
  %17034 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17035 = getelementptr inbounds i8, i8* %17034, i64 20
  %17036 = bitcast i8* %17035 to float*
  store float %17033, float* %17036, align 4
  %17037 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17038 = getelementptr inbounds i8, i8* %17037, i64 16
  %17039 = bitcast i8* %17038 to float*
  %17040 = load float, float* %17039, align 4
  %17041 = insertelement <4 x float> zeroinitializer, float %17040, i32 0
  %17042 = insertelement <4 x float> %17041, float 1.000000e+00, i32 1
  %17043 = insertelement <4 x float> %17042, float 1.000000e+00, i32 2
  %17044 = insertelement <4 x float> %17043, float 1.000000e+00, i32 3
  %17045 = getelementptr inbounds float, float* %2, i64 1
  %17046 = load float, float* %17045, align 4
  %17047 = insertelement <4 x float> zeroinitializer, float %17046, i32 0
  %17048 = insertelement <4 x float> %17047, float 0.000000e+00, i32 1
  %17049 = insertelement <4 x float> %17048, float 0.000000e+00, i32 2
  %17050 = insertelement <4 x float> %17049, float 0.000000e+00, i32 3
  %17051 = fmul <4 x float> %17044, %17050
  %17052 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17053 = getelementptr inbounds i8, i8* %17052, i64 20
  %17054 = bitcast i8* %17053 to float*
  %17055 = load float, float* %17054, align 4
  %17056 = insertelement <4 x float> zeroinitializer, float %17055, i32 0
  %17057 = insertelement <4 x float> %17056, float 0.000000e+00, i32 1
  %17058 = insertelement <4 x float> %17057, float 0.000000e+00, i32 2
  %17059 = insertelement <4 x float> %17058, float 0.000000e+00, i32 3
  %17060 = getelementptr inbounds float, float* %2, i64 5
  %17061 = load float, float* %17060, align 4
  %17062 = insertelement <4 x float> zeroinitializer, float %17061, i32 0
  %17063 = insertelement <4 x float> %17062, float 0.000000e+00, i32 1
  %17064 = insertelement <4 x float> %17063, float 0.000000e+00, i32 2
  %17065 = insertelement <4 x float> %17064, float 0.000000e+00, i32 3
  %17066 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17059, <4 x float> %17065, <4 x float> %17051)
  %17067 = extractelement <4 x float> %17066, i32 0
  %17068 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17069 = getelementptr inbounds i8, i8* %17068, i64 20
  %17070 = bitcast i8* %17069 to float*
  store float %17067, float* %17070, align 4
  %17071 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17072 = getelementptr inbounds i8, i8* %17071, i64 16
  %17073 = bitcast i8* %17072 to float*
  %17074 = load float, float* %17073, align 4
  %17075 = insertelement <4 x float> zeroinitializer, float %17074, i32 0
  %17076 = insertelement <4 x float> %17075, float 1.000000e+00, i32 1
  %17077 = insertelement <4 x float> %17076, float 1.000000e+00, i32 2
  %17078 = insertelement <4 x float> %17077, float 1.000000e+00, i32 3
  %17079 = getelementptr inbounds float, float* %2, i64 1
  %17080 = load float, float* %17079, align 4
  %17081 = insertelement <4 x float> zeroinitializer, float %17080, i32 0
  %17082 = insertelement <4 x float> %17081, float 0.000000e+00, i32 1
  %17083 = insertelement <4 x float> %17082, float 0.000000e+00, i32 2
  %17084 = insertelement <4 x float> %17083, float 0.000000e+00, i32 3
  %17085 = fmul <4 x float> %17078, %17084
  %17086 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17087 = getelementptr inbounds i8, i8* %17086, i64 20
  %17088 = bitcast i8* %17087 to float*
  %17089 = load float, float* %17088, align 4
  %17090 = insertelement <4 x float> zeroinitializer, float %17089, i32 0
  %17091 = insertelement <4 x float> %17090, float 1.000000e+00, i32 1
  %17092 = insertelement <4 x float> %17091, float 1.000000e+00, i32 2
  %17093 = insertelement <4 x float> %17092, float 1.000000e+00, i32 3
  %17094 = getelementptr inbounds float, float* %2, i64 5
  %17095 = load float, float* %17094, align 4
  %17096 = insertelement <4 x float> zeroinitializer, float %17095, i32 0
  %17097 = insertelement <4 x float> %17096, float 0.000000e+00, i32 1
  %17098 = insertelement <4 x float> %17097, float 0.000000e+00, i32 2
  %17099 = insertelement <4 x float> %17098, float 0.000000e+00, i32 3
  %17100 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17093, <4 x float> %17099, <4 x float> %17085)
  %17101 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17102 = getelementptr inbounds i8, i8* %17101, i64 24
  %17103 = bitcast i8* %17102 to float*
  %17104 = load float, float* %17103, align 4
  %17105 = insertelement <4 x float> zeroinitializer, float %17104, i32 0
  %17106 = insertelement <4 x float> %17105, float 0.000000e+00, i32 1
  %17107 = insertelement <4 x float> %17106, float 0.000000e+00, i32 2
  %17108 = insertelement <4 x float> %17107, float 0.000000e+00, i32 3
  %17109 = getelementptr inbounds float, float* %2, i64 9
  %17110 = load float, float* %17109, align 4
  %17111 = insertelement <4 x float> zeroinitializer, float %17110, i32 0
  %17112 = insertelement <4 x float> %17111, float 0.000000e+00, i32 1
  %17113 = insertelement <4 x float> %17112, float 0.000000e+00, i32 2
  %17114 = insertelement <4 x float> %17113, float 0.000000e+00, i32 3
  %17115 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17108, <4 x float> %17114, <4 x float> %17100)
  %17116 = extractelement <4 x float> %17115, i32 0
  %17117 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17118 = getelementptr inbounds i8, i8* %17117, i64 20
  %17119 = bitcast i8* %17118 to float*
  store float %17116, float* %17119, align 4
  %17120 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17121 = getelementptr inbounds i8, i8* %17120, i64 16
  %17122 = bitcast i8* %17121 to float*
  %17123 = load float, float* %17122, align 4
  %17124 = insertelement <4 x float> zeroinitializer, float %17123, i32 0
  %17125 = insertelement <4 x float> %17124, float 1.000000e+00, i32 1
  %17126 = insertelement <4 x float> %17125, float 1.000000e+00, i32 2
  %17127 = insertelement <4 x float> %17126, float 1.000000e+00, i32 3
  %17128 = getelementptr inbounds float, float* %2, i64 1
  %17129 = load float, float* %17128, align 4
  %17130 = insertelement <4 x float> zeroinitializer, float %17129, i32 0
  %17131 = insertelement <4 x float> %17130, float 0.000000e+00, i32 1
  %17132 = insertelement <4 x float> %17131, float 0.000000e+00, i32 2
  %17133 = insertelement <4 x float> %17132, float 0.000000e+00, i32 3
  %17134 = fmul <4 x float> %17127, %17133
  %17135 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17136 = getelementptr inbounds i8, i8* %17135, i64 20
  %17137 = bitcast i8* %17136 to float*
  %17138 = load float, float* %17137, align 4
  %17139 = insertelement <4 x float> zeroinitializer, float %17138, i32 0
  %17140 = insertelement <4 x float> %17139, float 1.000000e+00, i32 1
  %17141 = insertelement <4 x float> %17140, float 1.000000e+00, i32 2
  %17142 = insertelement <4 x float> %17141, float 1.000000e+00, i32 3
  %17143 = getelementptr inbounds float, float* %2, i64 5
  %17144 = load float, float* %17143, align 4
  %17145 = insertelement <4 x float> zeroinitializer, float %17144, i32 0
  %17146 = insertelement <4 x float> %17145, float 0.000000e+00, i32 1
  %17147 = insertelement <4 x float> %17146, float 0.000000e+00, i32 2
  %17148 = insertelement <4 x float> %17147, float 0.000000e+00, i32 3
  %17149 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17142, <4 x float> %17148, <4 x float> %17134)
  %17150 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17151 = getelementptr inbounds i8, i8* %17150, i64 24
  %17152 = bitcast i8* %17151 to float*
  %17153 = load float, float* %17152, align 4
  %17154 = insertelement <4 x float> zeroinitializer, float %17153, i32 0
  %17155 = insertelement <4 x float> %17154, float 1.000000e+00, i32 1
  %17156 = insertelement <4 x float> %17155, float 1.000000e+00, i32 2
  %17157 = insertelement <4 x float> %17156, float 1.000000e+00, i32 3
  %17158 = getelementptr inbounds float, float* %2, i64 9
  %17159 = load float, float* %17158, align 4
  %17160 = insertelement <4 x float> zeroinitializer, float %17159, i32 0
  %17161 = insertelement <4 x float> %17160, float 0.000000e+00, i32 1
  %17162 = insertelement <4 x float> %17161, float 0.000000e+00, i32 2
  %17163 = insertelement <4 x float> %17162, float 0.000000e+00, i32 3
  %17164 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17157, <4 x float> %17163, <4 x float> %17149)
  %17165 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17166 = getelementptr inbounds i8, i8* %17165, i64 28
  %17167 = bitcast i8* %17166 to float*
  %17168 = load float, float* %17167, align 4
  %17169 = insertelement <4 x float> zeroinitializer, float %17168, i32 0
  %17170 = insertelement <4 x float> %17169, float 0.000000e+00, i32 1
  %17171 = insertelement <4 x float> %17170, float 0.000000e+00, i32 2
  %17172 = insertelement <4 x float> %17171, float 0.000000e+00, i32 3
  %17173 = getelementptr inbounds float, float* %2, i64 13
  %17174 = load float, float* %17173, align 4
  %17175 = insertelement <4 x float> zeroinitializer, float %17174, i32 0
  %17176 = insertelement <4 x float> %17175, float 0.000000e+00, i32 1
  %17177 = insertelement <4 x float> %17176, float 0.000000e+00, i32 2
  %17178 = insertelement <4 x float> %17177, float 0.000000e+00, i32 3
  %17179 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17172, <4 x float> %17178, <4 x float> %17164)
  %17180 = extractelement <4 x float> %17179, i32 0
  %17181 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17182 = getelementptr inbounds i8, i8* %17181, i64 20
  %17183 = bitcast i8* %17182 to float*
  store float %17180, float* %17183, align 4
  %17184 = extractelement <4 x float> %17179, i32 1
  %17185 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17186 = getelementptr inbounds i8, i8* %17185, i64 24
  %17187 = bitcast i8* %17186 to float*
  store float %17184, float* %17187, align 4
  %17188 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17189 = getelementptr inbounds i8, i8* %17188, i64 16
  %17190 = bitcast i8* %17189 to float*
  %17191 = load float, float* %17190, align 4
  %17192 = insertelement <4 x float> zeroinitializer, float %17191, i32 0
  %17193 = insertelement <4 x float> %17192, float 0.000000e+00, i32 1
  %17194 = insertelement <4 x float> %17193, float 0.000000e+00, i32 2
  %17195 = insertelement <4 x float> %17194, float 0.000000e+00, i32 3
  %17196 = getelementptr inbounds float, float* %2, i64 2
  %17197 = load float, float* %17196, align 4
  %17198 = insertelement <4 x float> zeroinitializer, float %17197, i32 0
  %17199 = insertelement <4 x float> %17198, float 0.000000e+00, i32 1
  %17200 = insertelement <4 x float> %17199, float 0.000000e+00, i32 2
  %17201 = insertelement <4 x float> %17200, float 0.000000e+00, i32 3
  %17202 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17195, <4 x float> %17201, <4 x float> zeroinitializer)
  %17203 = extractelement <4 x float> %17202, i32 0
  %17204 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17205 = getelementptr inbounds i8, i8* %17204, i64 24
  %17206 = bitcast i8* %17205 to float*
  store float %17203, float* %17206, align 4
  %17207 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17208 = getelementptr inbounds i8, i8* %17207, i64 16
  %17209 = bitcast i8* %17208 to float*
  %17210 = load float, float* %17209, align 4
  %17211 = insertelement <4 x float> zeroinitializer, float %17210, i32 0
  %17212 = insertelement <4 x float> %17211, float 1.000000e+00, i32 1
  %17213 = insertelement <4 x float> %17212, float 1.000000e+00, i32 2
  %17214 = insertelement <4 x float> %17213, float 1.000000e+00, i32 3
  %17215 = getelementptr inbounds float, float* %2, i64 2
  %17216 = load float, float* %17215, align 4
  %17217 = insertelement <4 x float> zeroinitializer, float %17216, i32 0
  %17218 = insertelement <4 x float> %17217, float 0.000000e+00, i32 1
  %17219 = insertelement <4 x float> %17218, float 0.000000e+00, i32 2
  %17220 = insertelement <4 x float> %17219, float 0.000000e+00, i32 3
  %17221 = fmul <4 x float> %17214, %17220
  %17222 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17223 = getelementptr inbounds i8, i8* %17222, i64 20
  %17224 = bitcast i8* %17223 to float*
  %17225 = load float, float* %17224, align 4
  %17226 = insertelement <4 x float> zeroinitializer, float %17225, i32 0
  %17227 = insertelement <4 x float> %17226, float 0.000000e+00, i32 1
  %17228 = insertelement <4 x float> %17227, float 0.000000e+00, i32 2
  %17229 = insertelement <4 x float> %17228, float 0.000000e+00, i32 3
  %17230 = getelementptr inbounds float, float* %2, i64 6
  %17231 = load float, float* %17230, align 4
  %17232 = insertelement <4 x float> zeroinitializer, float %17231, i32 0
  %17233 = insertelement <4 x float> %17232, float 0.000000e+00, i32 1
  %17234 = insertelement <4 x float> %17233, float 0.000000e+00, i32 2
  %17235 = insertelement <4 x float> %17234, float 0.000000e+00, i32 3
  %17236 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17229, <4 x float> %17235, <4 x float> %17221)
  %17237 = extractelement <4 x float> %17236, i32 0
  %17238 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17239 = getelementptr inbounds i8, i8* %17238, i64 24
  %17240 = bitcast i8* %17239 to float*
  store float %17237, float* %17240, align 4
  %17241 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17242 = getelementptr inbounds i8, i8* %17241, i64 16
  %17243 = bitcast i8* %17242 to float*
  %17244 = load float, float* %17243, align 4
  %17245 = insertelement <4 x float> zeroinitializer, float %17244, i32 0
  %17246 = insertelement <4 x float> %17245, float 1.000000e+00, i32 1
  %17247 = insertelement <4 x float> %17246, float 1.000000e+00, i32 2
  %17248 = insertelement <4 x float> %17247, float 1.000000e+00, i32 3
  %17249 = getelementptr inbounds float, float* %2, i64 2
  %17250 = load float, float* %17249, align 4
  %17251 = insertelement <4 x float> zeroinitializer, float %17250, i32 0
  %17252 = insertelement <4 x float> %17251, float 0.000000e+00, i32 1
  %17253 = insertelement <4 x float> %17252, float 0.000000e+00, i32 2
  %17254 = insertelement <4 x float> %17253, float 0.000000e+00, i32 3
  %17255 = fmul <4 x float> %17248, %17254
  %17256 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17257 = getelementptr inbounds i8, i8* %17256, i64 20
  %17258 = bitcast i8* %17257 to float*
  %17259 = load float, float* %17258, align 4
  %17260 = insertelement <4 x float> zeroinitializer, float %17259, i32 0
  %17261 = insertelement <4 x float> %17260, float 1.000000e+00, i32 1
  %17262 = insertelement <4 x float> %17261, float 1.000000e+00, i32 2
  %17263 = insertelement <4 x float> %17262, float 1.000000e+00, i32 3
  %17264 = getelementptr inbounds float, float* %2, i64 6
  %17265 = load float, float* %17264, align 4
  %17266 = insertelement <4 x float> zeroinitializer, float %17265, i32 0
  %17267 = insertelement <4 x float> %17266, float 0.000000e+00, i32 1
  %17268 = insertelement <4 x float> %17267, float 0.000000e+00, i32 2
  %17269 = insertelement <4 x float> %17268, float 0.000000e+00, i32 3
  %17270 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17263, <4 x float> %17269, <4 x float> %17255)
  %17271 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17272 = getelementptr inbounds i8, i8* %17271, i64 24
  %17273 = bitcast i8* %17272 to float*
  %17274 = load float, float* %17273, align 4
  %17275 = insertelement <4 x float> zeroinitializer, float %17274, i32 0
  %17276 = insertelement <4 x float> %17275, float 0.000000e+00, i32 1
  %17277 = insertelement <4 x float> %17276, float 0.000000e+00, i32 2
  %17278 = insertelement <4 x float> %17277, float 0.000000e+00, i32 3
  %17279 = getelementptr inbounds float, float* %2, i64 10
  %17280 = load float, float* %17279, align 4
  %17281 = insertelement <4 x float> zeroinitializer, float %17280, i32 0
  %17282 = insertelement <4 x float> %17281, float 0.000000e+00, i32 1
  %17283 = insertelement <4 x float> %17282, float 0.000000e+00, i32 2
  %17284 = insertelement <4 x float> %17283, float 0.000000e+00, i32 3
  %17285 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17278, <4 x float> %17284, <4 x float> %17270)
  %17286 = extractelement <4 x float> %17285, i32 0
  %17287 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17288 = getelementptr inbounds i8, i8* %17287, i64 24
  %17289 = bitcast i8* %17288 to float*
  store float %17286, float* %17289, align 4
  %17290 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17291 = getelementptr inbounds i8, i8* %17290, i64 16
  %17292 = bitcast i8* %17291 to float*
  %17293 = load float, float* %17292, align 4
  %17294 = insertelement <4 x float> zeroinitializer, float %17293, i32 0
  %17295 = insertelement <4 x float> %17294, float 1.000000e+00, i32 1
  %17296 = insertelement <4 x float> %17295, float 1.000000e+00, i32 2
  %17297 = insertelement <4 x float> %17296, float 1.000000e+00, i32 3
  %17298 = getelementptr inbounds float, float* %2, i64 2
  %17299 = load float, float* %17298, align 4
  %17300 = insertelement <4 x float> zeroinitializer, float %17299, i32 0
  %17301 = insertelement <4 x float> %17300, float 0.000000e+00, i32 1
  %17302 = insertelement <4 x float> %17301, float 0.000000e+00, i32 2
  %17303 = insertelement <4 x float> %17302, float 0.000000e+00, i32 3
  %17304 = fmul <4 x float> %17297, %17303
  %17305 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17306 = getelementptr inbounds i8, i8* %17305, i64 20
  %17307 = bitcast i8* %17306 to float*
  %17308 = load float, float* %17307, align 4
  %17309 = insertelement <4 x float> zeroinitializer, float %17308, i32 0
  %17310 = insertelement <4 x float> %17309, float 1.000000e+00, i32 1
  %17311 = insertelement <4 x float> %17310, float 1.000000e+00, i32 2
  %17312 = insertelement <4 x float> %17311, float 1.000000e+00, i32 3
  %17313 = getelementptr inbounds float, float* %2, i64 6
  %17314 = load float, float* %17313, align 4
  %17315 = insertelement <4 x float> zeroinitializer, float %17314, i32 0
  %17316 = insertelement <4 x float> %17315, float 0.000000e+00, i32 1
  %17317 = insertelement <4 x float> %17316, float 0.000000e+00, i32 2
  %17318 = insertelement <4 x float> %17317, float 0.000000e+00, i32 3
  %17319 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17312, <4 x float> %17318, <4 x float> %17304)
  %17320 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17321 = getelementptr inbounds i8, i8* %17320, i64 24
  %17322 = bitcast i8* %17321 to float*
  %17323 = load float, float* %17322, align 4
  %17324 = insertelement <4 x float> zeroinitializer, float %17323, i32 0
  %17325 = insertelement <4 x float> %17324, float 1.000000e+00, i32 1
  %17326 = insertelement <4 x float> %17325, float 1.000000e+00, i32 2
  %17327 = insertelement <4 x float> %17326, float 1.000000e+00, i32 3
  %17328 = getelementptr inbounds float, float* %2, i64 10
  %17329 = load float, float* %17328, align 4
  %17330 = insertelement <4 x float> zeroinitializer, float %17329, i32 0
  %17331 = insertelement <4 x float> %17330, float 0.000000e+00, i32 1
  %17332 = insertelement <4 x float> %17331, float 0.000000e+00, i32 2
  %17333 = insertelement <4 x float> %17332, float 0.000000e+00, i32 3
  %17334 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17327, <4 x float> %17333, <4 x float> %17319)
  %17335 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17336 = getelementptr inbounds i8, i8* %17335, i64 28
  %17337 = bitcast i8* %17336 to float*
  %17338 = load float, float* %17337, align 4
  %17339 = insertelement <4 x float> zeroinitializer, float %17338, i32 0
  %17340 = insertelement <4 x float> %17339, float 0.000000e+00, i32 1
  %17341 = insertelement <4 x float> %17340, float 0.000000e+00, i32 2
  %17342 = insertelement <4 x float> %17341, float 0.000000e+00, i32 3
  %17343 = getelementptr inbounds float, float* %2, i64 14
  %17344 = load float, float* %17343, align 4
  %17345 = insertelement <4 x float> zeroinitializer, float %17344, i32 0
  %17346 = insertelement <4 x float> %17345, float 0.000000e+00, i32 1
  %17347 = insertelement <4 x float> %17346, float 0.000000e+00, i32 2
  %17348 = insertelement <4 x float> %17347, float 0.000000e+00, i32 3
  %17349 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17342, <4 x float> %17348, <4 x float> %17334)
  %17350 = extractelement <4 x float> %17349, i32 0
  %17351 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17352 = getelementptr inbounds i8, i8* %17351, i64 24
  %17353 = bitcast i8* %17352 to float*
  store float %17350, float* %17353, align 4
  %17354 = extractelement <4 x float> %17349, i32 1
  %17355 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17356 = getelementptr inbounds i8, i8* %17355, i64 28
  %17357 = bitcast i8* %17356 to float*
  store float %17354, float* %17357, align 4
  %17358 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17359 = getelementptr inbounds i8, i8* %17358, i64 16
  %17360 = bitcast i8* %17359 to float*
  %17361 = load float, float* %17360, align 4
  %17362 = insertelement <4 x float> zeroinitializer, float %17361, i32 0
  %17363 = insertelement <4 x float> %17362, float 0.000000e+00, i32 1
  %17364 = insertelement <4 x float> %17363, float 0.000000e+00, i32 2
  %17365 = insertelement <4 x float> %17364, float 0.000000e+00, i32 3
  %17366 = getelementptr inbounds float, float* %2, i64 3
  %17367 = load float, float* %17366, align 4
  %17368 = insertelement <4 x float> zeroinitializer, float %17367, i32 0
  %17369 = insertelement <4 x float> %17368, float 0.000000e+00, i32 1
  %17370 = insertelement <4 x float> %17369, float 0.000000e+00, i32 2
  %17371 = insertelement <4 x float> %17370, float 0.000000e+00, i32 3
  %17372 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17365, <4 x float> %17371, <4 x float> zeroinitializer)
  %17373 = extractelement <4 x float> %17372, i32 0
  %17374 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17375 = getelementptr inbounds i8, i8* %17374, i64 28
  %17376 = bitcast i8* %17375 to float*
  store float %17373, float* %17376, align 4
  %17377 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17378 = getelementptr inbounds i8, i8* %17377, i64 16
  %17379 = bitcast i8* %17378 to float*
  %17380 = load float, float* %17379, align 4
  %17381 = insertelement <4 x float> zeroinitializer, float %17380, i32 0
  %17382 = insertelement <4 x float> %17381, float 1.000000e+00, i32 1
  %17383 = insertelement <4 x float> %17382, float 1.000000e+00, i32 2
  %17384 = insertelement <4 x float> %17383, float 1.000000e+00, i32 3
  %17385 = getelementptr inbounds float, float* %2, i64 3
  %17386 = load float, float* %17385, align 4
  %17387 = insertelement <4 x float> zeroinitializer, float %17386, i32 0
  %17388 = insertelement <4 x float> %17387, float 0.000000e+00, i32 1
  %17389 = insertelement <4 x float> %17388, float 0.000000e+00, i32 2
  %17390 = insertelement <4 x float> %17389, float 0.000000e+00, i32 3
  %17391 = fmul <4 x float> %17384, %17390
  %17392 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17393 = getelementptr inbounds i8, i8* %17392, i64 20
  %17394 = bitcast i8* %17393 to float*
  %17395 = load float, float* %17394, align 4
  %17396 = insertelement <4 x float> zeroinitializer, float %17395, i32 0
  %17397 = insertelement <4 x float> %17396, float 0.000000e+00, i32 1
  %17398 = insertelement <4 x float> %17397, float 0.000000e+00, i32 2
  %17399 = insertelement <4 x float> %17398, float 0.000000e+00, i32 3
  %17400 = getelementptr inbounds float, float* %2, i64 7
  %17401 = load float, float* %17400, align 4
  %17402 = insertelement <4 x float> zeroinitializer, float %17401, i32 0
  %17403 = insertelement <4 x float> %17402, float 0.000000e+00, i32 1
  %17404 = insertelement <4 x float> %17403, float 0.000000e+00, i32 2
  %17405 = insertelement <4 x float> %17404, float 0.000000e+00, i32 3
  %17406 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17399, <4 x float> %17405, <4 x float> %17391)
  %17407 = extractelement <4 x float> %17406, i32 0
  %17408 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17409 = getelementptr inbounds i8, i8* %17408, i64 28
  %17410 = bitcast i8* %17409 to float*
  store float %17407, float* %17410, align 4
  %17411 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17412 = getelementptr inbounds i8, i8* %17411, i64 16
  %17413 = bitcast i8* %17412 to float*
  %17414 = load float, float* %17413, align 4
  %17415 = insertelement <4 x float> zeroinitializer, float %17414, i32 0
  %17416 = insertelement <4 x float> %17415, float 1.000000e+00, i32 1
  %17417 = insertelement <4 x float> %17416, float 1.000000e+00, i32 2
  %17418 = insertelement <4 x float> %17417, float 1.000000e+00, i32 3
  %17419 = getelementptr inbounds float, float* %2, i64 3
  %17420 = load float, float* %17419, align 4
  %17421 = insertelement <4 x float> zeroinitializer, float %17420, i32 0
  %17422 = insertelement <4 x float> %17421, float 0.000000e+00, i32 1
  %17423 = insertelement <4 x float> %17422, float 0.000000e+00, i32 2
  %17424 = insertelement <4 x float> %17423, float 0.000000e+00, i32 3
  %17425 = fmul <4 x float> %17418, %17424
  %17426 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17427 = getelementptr inbounds i8, i8* %17426, i64 20
  %17428 = bitcast i8* %17427 to float*
  %17429 = load float, float* %17428, align 4
  %17430 = insertelement <4 x float> zeroinitializer, float %17429, i32 0
  %17431 = insertelement <4 x float> %17430, float 1.000000e+00, i32 1
  %17432 = insertelement <4 x float> %17431, float 1.000000e+00, i32 2
  %17433 = insertelement <4 x float> %17432, float 1.000000e+00, i32 3
  %17434 = getelementptr inbounds float, float* %2, i64 7
  %17435 = load float, float* %17434, align 4
  %17436 = insertelement <4 x float> zeroinitializer, float %17435, i32 0
  %17437 = insertelement <4 x float> %17436, float 0.000000e+00, i32 1
  %17438 = insertelement <4 x float> %17437, float 0.000000e+00, i32 2
  %17439 = insertelement <4 x float> %17438, float 0.000000e+00, i32 3
  %17440 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17433, <4 x float> %17439, <4 x float> %17425)
  %17441 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17442 = getelementptr inbounds i8, i8* %17441, i64 24
  %17443 = bitcast i8* %17442 to float*
  %17444 = load float, float* %17443, align 4
  %17445 = insertelement <4 x float> zeroinitializer, float %17444, i32 0
  %17446 = insertelement <4 x float> %17445, float 0.000000e+00, i32 1
  %17447 = insertelement <4 x float> %17446, float 0.000000e+00, i32 2
  %17448 = insertelement <4 x float> %17447, float 0.000000e+00, i32 3
  %17449 = getelementptr inbounds float, float* %2, i64 11
  %17450 = load float, float* %17449, align 4
  %17451 = insertelement <4 x float> zeroinitializer, float %17450, i32 0
  %17452 = insertelement <4 x float> %17451, float 0.000000e+00, i32 1
  %17453 = insertelement <4 x float> %17452, float 0.000000e+00, i32 2
  %17454 = insertelement <4 x float> %17453, float 0.000000e+00, i32 3
  %17455 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17448, <4 x float> %17454, <4 x float> %17440)
  %17456 = extractelement <4 x float> %17455, i32 0
  %17457 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17458 = getelementptr inbounds i8, i8* %17457, i64 28
  %17459 = bitcast i8* %17458 to float*
  store float %17456, float* %17459, align 4
  %17460 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17461 = getelementptr inbounds i8, i8* %17460, i64 16
  %17462 = bitcast i8* %17461 to float*
  %17463 = load float, float* %17462, align 4
  %17464 = insertelement <4 x float> zeroinitializer, float %17463, i32 0
  %17465 = insertelement <4 x float> %17464, float 1.000000e+00, i32 1
  %17466 = insertelement <4 x float> %17465, float 1.000000e+00, i32 2
  %17467 = insertelement <4 x float> %17466, float 1.000000e+00, i32 3
  %17468 = getelementptr inbounds float, float* %2, i64 3
  %17469 = load float, float* %17468, align 4
  %17470 = insertelement <4 x float> zeroinitializer, float %17469, i32 0
  %17471 = insertelement <4 x float> %17470, float 0.000000e+00, i32 1
  %17472 = insertelement <4 x float> %17471, float 0.000000e+00, i32 2
  %17473 = insertelement <4 x float> %17472, float 0.000000e+00, i32 3
  %17474 = fmul <4 x float> %17467, %17473
  %17475 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17476 = getelementptr inbounds i8, i8* %17475, i64 20
  %17477 = bitcast i8* %17476 to float*
  %17478 = load float, float* %17477, align 4
  %17479 = insertelement <4 x float> zeroinitializer, float %17478, i32 0
  %17480 = insertelement <4 x float> %17479, float 1.000000e+00, i32 1
  %17481 = insertelement <4 x float> %17480, float 1.000000e+00, i32 2
  %17482 = insertelement <4 x float> %17481, float 1.000000e+00, i32 3
  %17483 = getelementptr inbounds float, float* %2, i64 7
  %17484 = load float, float* %17483, align 4
  %17485 = insertelement <4 x float> zeroinitializer, float %17484, i32 0
  %17486 = insertelement <4 x float> %17485, float 0.000000e+00, i32 1
  %17487 = insertelement <4 x float> %17486, float 0.000000e+00, i32 2
  %17488 = insertelement <4 x float> %17487, float 0.000000e+00, i32 3
  %17489 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17482, <4 x float> %17488, <4 x float> %17474)
  %17490 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17491 = getelementptr inbounds i8, i8* %17490, i64 24
  %17492 = bitcast i8* %17491 to float*
  %17493 = load float, float* %17492, align 4
  %17494 = insertelement <4 x float> zeroinitializer, float %17493, i32 0
  %17495 = insertelement <4 x float> %17494, float 1.000000e+00, i32 1
  %17496 = insertelement <4 x float> %17495, float 1.000000e+00, i32 2
  %17497 = insertelement <4 x float> %17496, float 1.000000e+00, i32 3
  %17498 = getelementptr inbounds float, float* %2, i64 11
  %17499 = load float, float* %17498, align 4
  %17500 = insertelement <4 x float> zeroinitializer, float %17499, i32 0
  %17501 = insertelement <4 x float> %17500, float 0.000000e+00, i32 1
  %17502 = insertelement <4 x float> %17501, float 0.000000e+00, i32 2
  %17503 = insertelement <4 x float> %17502, float 0.000000e+00, i32 3
  %17504 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17497, <4 x float> %17503, <4 x float> %17489)
  %17505 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17506 = getelementptr inbounds i8, i8* %17505, i64 28
  %17507 = bitcast i8* %17506 to float*
  %17508 = load float, float* %17507, align 4
  %17509 = insertelement <4 x float> zeroinitializer, float %17508, i32 0
  %17510 = insertelement <4 x float> %17509, float 0.000000e+00, i32 1
  %17511 = insertelement <4 x float> %17510, float 0.000000e+00, i32 2
  %17512 = insertelement <4 x float> %17511, float 0.000000e+00, i32 3
  %17513 = getelementptr inbounds float, float* %2, i64 15
  %17514 = load float, float* %17513, align 4
  %17515 = insertelement <4 x float> zeroinitializer, float %17514, i32 0
  %17516 = insertelement <4 x float> %17515, float 0.000000e+00, i32 1
  %17517 = insertelement <4 x float> %17516, float 0.000000e+00, i32 2
  %17518 = insertelement <4 x float> %17517, float 0.000000e+00, i32 3
  %17519 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17512, <4 x float> %17518, <4 x float> %17504)
  %17520 = extractelement <4 x float> %17519, i32 0
  %17521 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17522 = getelementptr inbounds i8, i8* %17521, i64 28
  %17523 = bitcast i8* %17522 to float*
  store float %17520, float* %17523, align 4
  %17524 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17525 = getelementptr inbounds i8, i8* %17524, i64 32
  %17526 = bitcast i8* %17525 to float*
  %17527 = load float, float* %17526, align 4
  %17528 = insertelement <4 x float> zeroinitializer, float %17527, i32 0
  %17529 = insertelement <4 x float> %17528, float 0.000000e+00, i32 1
  %17530 = insertelement <4 x float> %17529, float 0.000000e+00, i32 2
  %17531 = insertelement <4 x float> %17530, float 0.000000e+00, i32 3
  %17532 = load float, float* %2, align 4
  %17533 = insertelement <4 x float> zeroinitializer, float %17532, i32 0
  %17534 = insertelement <4 x float> %17533, float 0.000000e+00, i32 1
  %17535 = insertelement <4 x float> %17534, float 0.000000e+00, i32 2
  %17536 = insertelement <4 x float> %17535, float 0.000000e+00, i32 3
  %17537 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17531, <4 x float> %17536, <4 x float> zeroinitializer)
  %17538 = extractelement <4 x float> %17537, i32 0
  %17539 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17540 = getelementptr inbounds i8, i8* %17539, i64 32
  %17541 = bitcast i8* %17540 to float*
  store float %17538, float* %17541, align 4
  %17542 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17543 = getelementptr inbounds i8, i8* %17542, i64 32
  %17544 = bitcast i8* %17543 to float*
  %17545 = load float, float* %17544, align 4
  %17546 = insertelement <4 x float> zeroinitializer, float %17545, i32 0
  %17547 = insertelement <4 x float> %17546, float 1.000000e+00, i32 1
  %17548 = insertelement <4 x float> %17547, float 1.000000e+00, i32 2
  %17549 = insertelement <4 x float> %17548, float 1.000000e+00, i32 3
  %17550 = load float, float* %2, align 4
  %17551 = insertelement <4 x float> zeroinitializer, float %17550, i32 0
  %17552 = insertelement <4 x float> %17551, float 0.000000e+00, i32 1
  %17553 = insertelement <4 x float> %17552, float 0.000000e+00, i32 2
  %17554 = insertelement <4 x float> %17553, float 0.000000e+00, i32 3
  %17555 = fmul <4 x float> %17549, %17554
  %17556 = fadd <4 x float> %17555, zeroinitializer
  %17557 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17558 = getelementptr inbounds i8, i8* %17557, i64 36
  %17559 = bitcast i8* %17558 to float*
  %17560 = load float, float* %17559, align 4
  %17561 = insertelement <4 x float> zeroinitializer, float %17560, i32 0
  %17562 = insertelement <4 x float> %17561, float 0.000000e+00, i32 1
  %17563 = insertelement <4 x float> %17562, float 0.000000e+00, i32 2
  %17564 = insertelement <4 x float> %17563, float 0.000000e+00, i32 3
  %17565 = getelementptr inbounds float, float* %2, i64 4
  %17566 = load float, float* %17565, align 4
  %17567 = insertelement <4 x float> zeroinitializer, float %17566, i32 0
  %17568 = insertelement <4 x float> %17567, float 0.000000e+00, i32 1
  %17569 = insertelement <4 x float> %17568, float 0.000000e+00, i32 2
  %17570 = insertelement <4 x float> %17569, float 0.000000e+00, i32 3
  %17571 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17564, <4 x float> %17570, <4 x float> %17556)
  %17572 = extractelement <4 x float> %17571, i32 0
  %17573 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17574 = getelementptr inbounds i8, i8* %17573, i64 32
  %17575 = bitcast i8* %17574 to float*
  store float %17572, float* %17575, align 4
  %17576 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17577 = getelementptr inbounds i8, i8* %17576, i64 32
  %17578 = bitcast i8* %17577 to float*
  %17579 = load float, float* %17578, align 4
  %17580 = insertelement <4 x float> zeroinitializer, float %17579, i32 0
  %17581 = insertelement <4 x float> %17580, float 1.000000e+00, i32 1
  %17582 = insertelement <4 x float> %17581, float 1.000000e+00, i32 2
  %17583 = insertelement <4 x float> %17582, float 1.000000e+00, i32 3
  %17584 = load float, float* %2, align 4
  %17585 = insertelement <4 x float> zeroinitializer, float %17584, i32 0
  %17586 = insertelement <4 x float> %17585, float 0.000000e+00, i32 1
  %17587 = insertelement <4 x float> %17586, float 0.000000e+00, i32 2
  %17588 = insertelement <4 x float> %17587, float 0.000000e+00, i32 3
  %17589 = fmul <4 x float> %17583, %17588
  %17590 = fadd <4 x float> %17589, zeroinitializer
  %17591 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17592 = getelementptr inbounds i8, i8* %17591, i64 36
  %17593 = bitcast i8* %17592 to float*
  %17594 = load float, float* %17593, align 4
  %17595 = insertelement <4 x float> zeroinitializer, float %17594, i32 0
  %17596 = insertelement <4 x float> %17595, float 1.000000e+00, i32 1
  %17597 = insertelement <4 x float> %17596, float 1.000000e+00, i32 2
  %17598 = insertelement <4 x float> %17597, float 1.000000e+00, i32 3
  %17599 = getelementptr inbounds float, float* %2, i64 4
  %17600 = load float, float* %17599, align 4
  %17601 = insertelement <4 x float> zeroinitializer, float %17600, i32 0
  %17602 = insertelement <4 x float> %17601, float 0.000000e+00, i32 1
  %17603 = insertelement <4 x float> %17602, float 0.000000e+00, i32 2
  %17604 = insertelement <4 x float> %17603, float 0.000000e+00, i32 3
  %17605 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17598, <4 x float> %17604, <4 x float> %17590)
  %17606 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17607 = getelementptr inbounds i8, i8* %17606, i64 40
  %17608 = bitcast i8* %17607 to float*
  %17609 = load float, float* %17608, align 4
  %17610 = insertelement <4 x float> zeroinitializer, float %17609, i32 0
  %17611 = insertelement <4 x float> %17610, float 0.000000e+00, i32 1
  %17612 = insertelement <4 x float> %17611, float 0.000000e+00, i32 2
  %17613 = insertelement <4 x float> %17612, float 0.000000e+00, i32 3
  %17614 = getelementptr inbounds float, float* %2, i64 8
  %17615 = load float, float* %17614, align 4
  %17616 = insertelement <4 x float> zeroinitializer, float %17615, i32 0
  %17617 = insertelement <4 x float> %17616, float 0.000000e+00, i32 1
  %17618 = insertelement <4 x float> %17617, float 0.000000e+00, i32 2
  %17619 = insertelement <4 x float> %17618, float 0.000000e+00, i32 3
  %17620 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17613, <4 x float> %17619, <4 x float> %17605)
  %17621 = extractelement <4 x float> %17620, i32 0
  %17622 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17623 = getelementptr inbounds i8, i8* %17622, i64 32
  %17624 = bitcast i8* %17623 to float*
  store float %17621, float* %17624, align 4
  %17625 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17626 = getelementptr inbounds i8, i8* %17625, i64 32
  %17627 = bitcast i8* %17626 to float*
  %17628 = load float, float* %17627, align 4
  %17629 = insertelement <4 x float> zeroinitializer, float %17628, i32 0
  %17630 = insertelement <4 x float> %17629, float 1.000000e+00, i32 1
  %17631 = insertelement <4 x float> %17630, float 1.000000e+00, i32 2
  %17632 = insertelement <4 x float> %17631, float 1.000000e+00, i32 3
  %17633 = load float, float* %2, align 4
  %17634 = insertelement <4 x float> zeroinitializer, float %17633, i32 0
  %17635 = insertelement <4 x float> %17634, float 0.000000e+00, i32 1
  %17636 = insertelement <4 x float> %17635, float 0.000000e+00, i32 2
  %17637 = insertelement <4 x float> %17636, float 0.000000e+00, i32 3
  %17638 = fmul <4 x float> %17632, %17637
  %17639 = fadd <4 x float> %17638, zeroinitializer
  %17640 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17641 = getelementptr inbounds i8, i8* %17640, i64 36
  %17642 = bitcast i8* %17641 to float*
  %17643 = load float, float* %17642, align 4
  %17644 = insertelement <4 x float> zeroinitializer, float %17643, i32 0
  %17645 = insertelement <4 x float> %17644, float 1.000000e+00, i32 1
  %17646 = insertelement <4 x float> %17645, float 1.000000e+00, i32 2
  %17647 = insertelement <4 x float> %17646, float 1.000000e+00, i32 3
  %17648 = getelementptr inbounds float, float* %2, i64 4
  %17649 = load float, float* %17648, align 4
  %17650 = insertelement <4 x float> zeroinitializer, float %17649, i32 0
  %17651 = insertelement <4 x float> %17650, float 0.000000e+00, i32 1
  %17652 = insertelement <4 x float> %17651, float 0.000000e+00, i32 2
  %17653 = insertelement <4 x float> %17652, float 0.000000e+00, i32 3
  %17654 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17647, <4 x float> %17653, <4 x float> %17639)
  %17655 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17656 = getelementptr inbounds i8, i8* %17655, i64 40
  %17657 = bitcast i8* %17656 to float*
  %17658 = load float, float* %17657, align 4
  %17659 = insertelement <4 x float> zeroinitializer, float %17658, i32 0
  %17660 = insertelement <4 x float> %17659, float 1.000000e+00, i32 1
  %17661 = insertelement <4 x float> %17660, float 1.000000e+00, i32 2
  %17662 = insertelement <4 x float> %17661, float 1.000000e+00, i32 3
  %17663 = getelementptr inbounds float, float* %2, i64 8
  %17664 = load float, float* %17663, align 4
  %17665 = insertelement <4 x float> zeroinitializer, float %17664, i32 0
  %17666 = insertelement <4 x float> %17665, float 0.000000e+00, i32 1
  %17667 = insertelement <4 x float> %17666, float 0.000000e+00, i32 2
  %17668 = insertelement <4 x float> %17667, float 0.000000e+00, i32 3
  %17669 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17662, <4 x float> %17668, <4 x float> %17654)
  %17670 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17671 = getelementptr inbounds i8, i8* %17670, i64 44
  %17672 = bitcast i8* %17671 to float*
  %17673 = load float, float* %17672, align 4
  %17674 = insertelement <4 x float> zeroinitializer, float %17673, i32 0
  %17675 = insertelement <4 x float> %17674, float 0.000000e+00, i32 1
  %17676 = insertelement <4 x float> %17675, float 0.000000e+00, i32 2
  %17677 = insertelement <4 x float> %17676, float 0.000000e+00, i32 3
  %17678 = getelementptr inbounds float, float* %2, i64 12
  %17679 = load float, float* %17678, align 4
  %17680 = insertelement <4 x float> zeroinitializer, float %17679, i32 0
  %17681 = insertelement <4 x float> %17680, float 0.000000e+00, i32 1
  %17682 = insertelement <4 x float> %17681, float 0.000000e+00, i32 2
  %17683 = insertelement <4 x float> %17682, float 0.000000e+00, i32 3
  %17684 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17677, <4 x float> %17683, <4 x float> %17669)
  %17685 = extractelement <4 x float> %17684, i32 0
  %17686 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17687 = getelementptr inbounds i8, i8* %17686, i64 32
  %17688 = bitcast i8* %17687 to float*
  store float %17685, float* %17688, align 4
  %17689 = extractelement <4 x float> %17684, i32 1
  %17690 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17691 = getelementptr inbounds i8, i8* %17690, i64 36
  %17692 = bitcast i8* %17691 to float*
  store float %17689, float* %17692, align 4
  %17693 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17694 = getelementptr inbounds i8, i8* %17693, i64 32
  %17695 = bitcast i8* %17694 to float*
  %17696 = load float, float* %17695, align 4
  %17697 = insertelement <4 x float> zeroinitializer, float %17696, i32 0
  %17698 = insertelement <4 x float> %17697, float 0.000000e+00, i32 1
  %17699 = insertelement <4 x float> %17698, float 0.000000e+00, i32 2
  %17700 = insertelement <4 x float> %17699, float 0.000000e+00, i32 3
  %17701 = getelementptr inbounds float, float* %2, i64 1
  %17702 = load float, float* %17701, align 4
  %17703 = insertelement <4 x float> zeroinitializer, float %17702, i32 0
  %17704 = insertelement <4 x float> %17703, float 0.000000e+00, i32 1
  %17705 = insertelement <4 x float> %17704, float 0.000000e+00, i32 2
  %17706 = insertelement <4 x float> %17705, float 0.000000e+00, i32 3
  %17707 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17700, <4 x float> %17706, <4 x float> zeroinitializer)
  %17708 = extractelement <4 x float> %17707, i32 0
  %17709 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17710 = getelementptr inbounds i8, i8* %17709, i64 36
  %17711 = bitcast i8* %17710 to float*
  store float %17708, float* %17711, align 4
  %17712 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17713 = getelementptr inbounds i8, i8* %17712, i64 32
  %17714 = bitcast i8* %17713 to float*
  %17715 = load float, float* %17714, align 4
  %17716 = insertelement <4 x float> zeroinitializer, float %17715, i32 0
  %17717 = insertelement <4 x float> %17716, float 1.000000e+00, i32 1
  %17718 = insertelement <4 x float> %17717, float 1.000000e+00, i32 2
  %17719 = insertelement <4 x float> %17718, float 1.000000e+00, i32 3
  %17720 = getelementptr inbounds float, float* %2, i64 1
  %17721 = load float, float* %17720, align 4
  %17722 = insertelement <4 x float> zeroinitializer, float %17721, i32 0
  %17723 = insertelement <4 x float> %17722, float 0.000000e+00, i32 1
  %17724 = insertelement <4 x float> %17723, float 0.000000e+00, i32 2
  %17725 = insertelement <4 x float> %17724, float 0.000000e+00, i32 3
  %17726 = fmul <4 x float> %17719, %17725
  %17727 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17728 = getelementptr inbounds i8, i8* %17727, i64 36
  %17729 = bitcast i8* %17728 to float*
  %17730 = load float, float* %17729, align 4
  %17731 = insertelement <4 x float> zeroinitializer, float %17730, i32 0
  %17732 = insertelement <4 x float> %17731, float 0.000000e+00, i32 1
  %17733 = insertelement <4 x float> %17732, float 0.000000e+00, i32 2
  %17734 = insertelement <4 x float> %17733, float 0.000000e+00, i32 3
  %17735 = getelementptr inbounds float, float* %2, i64 5
  %17736 = load float, float* %17735, align 4
  %17737 = insertelement <4 x float> zeroinitializer, float %17736, i32 0
  %17738 = insertelement <4 x float> %17737, float 0.000000e+00, i32 1
  %17739 = insertelement <4 x float> %17738, float 0.000000e+00, i32 2
  %17740 = insertelement <4 x float> %17739, float 0.000000e+00, i32 3
  %17741 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17734, <4 x float> %17740, <4 x float> %17726)
  %17742 = extractelement <4 x float> %17741, i32 0
  %17743 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17744 = getelementptr inbounds i8, i8* %17743, i64 36
  %17745 = bitcast i8* %17744 to float*
  store float %17742, float* %17745, align 4
  %17746 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17747 = getelementptr inbounds i8, i8* %17746, i64 32
  %17748 = bitcast i8* %17747 to float*
  %17749 = load float, float* %17748, align 4
  %17750 = insertelement <4 x float> zeroinitializer, float %17749, i32 0
  %17751 = insertelement <4 x float> %17750, float 1.000000e+00, i32 1
  %17752 = insertelement <4 x float> %17751, float 1.000000e+00, i32 2
  %17753 = insertelement <4 x float> %17752, float 1.000000e+00, i32 3
  %17754 = getelementptr inbounds float, float* %2, i64 1
  %17755 = load float, float* %17754, align 4
  %17756 = insertelement <4 x float> zeroinitializer, float %17755, i32 0
  %17757 = insertelement <4 x float> %17756, float 0.000000e+00, i32 1
  %17758 = insertelement <4 x float> %17757, float 0.000000e+00, i32 2
  %17759 = insertelement <4 x float> %17758, float 0.000000e+00, i32 3
  %17760 = fmul <4 x float> %17753, %17759
  %17761 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17762 = getelementptr inbounds i8, i8* %17761, i64 36
  %17763 = bitcast i8* %17762 to float*
  %17764 = load float, float* %17763, align 4
  %17765 = insertelement <4 x float> zeroinitializer, float %17764, i32 0
  %17766 = insertelement <4 x float> %17765, float 1.000000e+00, i32 1
  %17767 = insertelement <4 x float> %17766, float 1.000000e+00, i32 2
  %17768 = insertelement <4 x float> %17767, float 1.000000e+00, i32 3
  %17769 = getelementptr inbounds float, float* %2, i64 5
  %17770 = load float, float* %17769, align 4
  %17771 = insertelement <4 x float> zeroinitializer, float %17770, i32 0
  %17772 = insertelement <4 x float> %17771, float 0.000000e+00, i32 1
  %17773 = insertelement <4 x float> %17772, float 0.000000e+00, i32 2
  %17774 = insertelement <4 x float> %17773, float 0.000000e+00, i32 3
  %17775 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17768, <4 x float> %17774, <4 x float> %17760)
  %17776 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17777 = getelementptr inbounds i8, i8* %17776, i64 40
  %17778 = bitcast i8* %17777 to float*
  %17779 = load float, float* %17778, align 4
  %17780 = insertelement <4 x float> zeroinitializer, float %17779, i32 0
  %17781 = insertelement <4 x float> %17780, float 0.000000e+00, i32 1
  %17782 = insertelement <4 x float> %17781, float 0.000000e+00, i32 2
  %17783 = insertelement <4 x float> %17782, float 0.000000e+00, i32 3
  %17784 = getelementptr inbounds float, float* %2, i64 9
  %17785 = load float, float* %17784, align 4
  %17786 = insertelement <4 x float> zeroinitializer, float %17785, i32 0
  %17787 = insertelement <4 x float> %17786, float 0.000000e+00, i32 1
  %17788 = insertelement <4 x float> %17787, float 0.000000e+00, i32 2
  %17789 = insertelement <4 x float> %17788, float 0.000000e+00, i32 3
  %17790 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17783, <4 x float> %17789, <4 x float> %17775)
  %17791 = extractelement <4 x float> %17790, i32 0
  %17792 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17793 = getelementptr inbounds i8, i8* %17792, i64 36
  %17794 = bitcast i8* %17793 to float*
  store float %17791, float* %17794, align 4
  %17795 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17796 = getelementptr inbounds i8, i8* %17795, i64 32
  %17797 = bitcast i8* %17796 to float*
  %17798 = load float, float* %17797, align 4
  %17799 = insertelement <4 x float> zeroinitializer, float %17798, i32 0
  %17800 = insertelement <4 x float> %17799, float 1.000000e+00, i32 1
  %17801 = insertelement <4 x float> %17800, float 1.000000e+00, i32 2
  %17802 = insertelement <4 x float> %17801, float 1.000000e+00, i32 3
  %17803 = getelementptr inbounds float, float* %2, i64 1
  %17804 = load float, float* %17803, align 4
  %17805 = insertelement <4 x float> zeroinitializer, float %17804, i32 0
  %17806 = insertelement <4 x float> %17805, float 0.000000e+00, i32 1
  %17807 = insertelement <4 x float> %17806, float 0.000000e+00, i32 2
  %17808 = insertelement <4 x float> %17807, float 0.000000e+00, i32 3
  %17809 = fmul <4 x float> %17802, %17808
  %17810 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17811 = getelementptr inbounds i8, i8* %17810, i64 36
  %17812 = bitcast i8* %17811 to float*
  %17813 = load float, float* %17812, align 4
  %17814 = insertelement <4 x float> zeroinitializer, float %17813, i32 0
  %17815 = insertelement <4 x float> %17814, float 1.000000e+00, i32 1
  %17816 = insertelement <4 x float> %17815, float 1.000000e+00, i32 2
  %17817 = insertelement <4 x float> %17816, float 1.000000e+00, i32 3
  %17818 = getelementptr inbounds float, float* %2, i64 5
  %17819 = load float, float* %17818, align 4
  %17820 = insertelement <4 x float> zeroinitializer, float %17819, i32 0
  %17821 = insertelement <4 x float> %17820, float 0.000000e+00, i32 1
  %17822 = insertelement <4 x float> %17821, float 0.000000e+00, i32 2
  %17823 = insertelement <4 x float> %17822, float 0.000000e+00, i32 3
  %17824 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17817, <4 x float> %17823, <4 x float> %17809)
  %17825 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17826 = getelementptr inbounds i8, i8* %17825, i64 40
  %17827 = bitcast i8* %17826 to float*
  %17828 = load float, float* %17827, align 4
  %17829 = insertelement <4 x float> zeroinitializer, float %17828, i32 0
  %17830 = insertelement <4 x float> %17829, float 1.000000e+00, i32 1
  %17831 = insertelement <4 x float> %17830, float 1.000000e+00, i32 2
  %17832 = insertelement <4 x float> %17831, float 1.000000e+00, i32 3
  %17833 = getelementptr inbounds float, float* %2, i64 9
  %17834 = load float, float* %17833, align 4
  %17835 = insertelement <4 x float> zeroinitializer, float %17834, i32 0
  %17836 = insertelement <4 x float> %17835, float 0.000000e+00, i32 1
  %17837 = insertelement <4 x float> %17836, float 0.000000e+00, i32 2
  %17838 = insertelement <4 x float> %17837, float 0.000000e+00, i32 3
  %17839 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17832, <4 x float> %17838, <4 x float> %17824)
  %17840 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17841 = getelementptr inbounds i8, i8* %17840, i64 44
  %17842 = bitcast i8* %17841 to float*
  %17843 = load float, float* %17842, align 4
  %17844 = insertelement <4 x float> zeroinitializer, float %17843, i32 0
  %17845 = insertelement <4 x float> %17844, float 0.000000e+00, i32 1
  %17846 = insertelement <4 x float> %17845, float 0.000000e+00, i32 2
  %17847 = insertelement <4 x float> %17846, float 0.000000e+00, i32 3
  %17848 = getelementptr inbounds float, float* %2, i64 13
  %17849 = load float, float* %17848, align 4
  %17850 = insertelement <4 x float> zeroinitializer, float %17849, i32 0
  %17851 = insertelement <4 x float> %17850, float 0.000000e+00, i32 1
  %17852 = insertelement <4 x float> %17851, float 0.000000e+00, i32 2
  %17853 = insertelement <4 x float> %17852, float 0.000000e+00, i32 3
  %17854 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17847, <4 x float> %17853, <4 x float> %17839)
  %17855 = extractelement <4 x float> %17854, i32 0
  %17856 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17857 = getelementptr inbounds i8, i8* %17856, i64 36
  %17858 = bitcast i8* %17857 to float*
  store float %17855, float* %17858, align 4
  %17859 = extractelement <4 x float> %17854, i32 1
  %17860 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17861 = getelementptr inbounds i8, i8* %17860, i64 40
  %17862 = bitcast i8* %17861 to float*
  store float %17859, float* %17862, align 4
  %17863 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17864 = getelementptr inbounds i8, i8* %17863, i64 32
  %17865 = bitcast i8* %17864 to float*
  %17866 = load float, float* %17865, align 4
  %17867 = insertelement <4 x float> zeroinitializer, float %17866, i32 0
  %17868 = insertelement <4 x float> %17867, float 0.000000e+00, i32 1
  %17869 = insertelement <4 x float> %17868, float 0.000000e+00, i32 2
  %17870 = insertelement <4 x float> %17869, float 0.000000e+00, i32 3
  %17871 = getelementptr inbounds float, float* %2, i64 2
  %17872 = load float, float* %17871, align 4
  %17873 = insertelement <4 x float> zeroinitializer, float %17872, i32 0
  %17874 = insertelement <4 x float> %17873, float 0.000000e+00, i32 1
  %17875 = insertelement <4 x float> %17874, float 0.000000e+00, i32 2
  %17876 = insertelement <4 x float> %17875, float 0.000000e+00, i32 3
  %17877 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17870, <4 x float> %17876, <4 x float> zeroinitializer)
  %17878 = extractelement <4 x float> %17877, i32 0
  %17879 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17880 = getelementptr inbounds i8, i8* %17879, i64 40
  %17881 = bitcast i8* %17880 to float*
  store float %17878, float* %17881, align 4
  %17882 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17883 = getelementptr inbounds i8, i8* %17882, i64 32
  %17884 = bitcast i8* %17883 to float*
  %17885 = load float, float* %17884, align 4
  %17886 = insertelement <4 x float> zeroinitializer, float %17885, i32 0
  %17887 = insertelement <4 x float> %17886, float 1.000000e+00, i32 1
  %17888 = insertelement <4 x float> %17887, float 1.000000e+00, i32 2
  %17889 = insertelement <4 x float> %17888, float 1.000000e+00, i32 3
  %17890 = getelementptr inbounds float, float* %2, i64 2
  %17891 = load float, float* %17890, align 4
  %17892 = insertelement <4 x float> zeroinitializer, float %17891, i32 0
  %17893 = insertelement <4 x float> %17892, float 0.000000e+00, i32 1
  %17894 = insertelement <4 x float> %17893, float 0.000000e+00, i32 2
  %17895 = insertelement <4 x float> %17894, float 0.000000e+00, i32 3
  %17896 = fmul <4 x float> %17889, %17895
  %17897 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17898 = getelementptr inbounds i8, i8* %17897, i64 36
  %17899 = bitcast i8* %17898 to float*
  %17900 = load float, float* %17899, align 4
  %17901 = insertelement <4 x float> zeroinitializer, float %17900, i32 0
  %17902 = insertelement <4 x float> %17901, float 0.000000e+00, i32 1
  %17903 = insertelement <4 x float> %17902, float 0.000000e+00, i32 2
  %17904 = insertelement <4 x float> %17903, float 0.000000e+00, i32 3
  %17905 = getelementptr inbounds float, float* %2, i64 6
  %17906 = load float, float* %17905, align 4
  %17907 = insertelement <4 x float> zeroinitializer, float %17906, i32 0
  %17908 = insertelement <4 x float> %17907, float 0.000000e+00, i32 1
  %17909 = insertelement <4 x float> %17908, float 0.000000e+00, i32 2
  %17910 = insertelement <4 x float> %17909, float 0.000000e+00, i32 3
  %17911 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17904, <4 x float> %17910, <4 x float> %17896)
  %17912 = extractelement <4 x float> %17911, i32 0
  %17913 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17914 = getelementptr inbounds i8, i8* %17913, i64 40
  %17915 = bitcast i8* %17914 to float*
  store float %17912, float* %17915, align 4
  %17916 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17917 = getelementptr inbounds i8, i8* %17916, i64 32
  %17918 = bitcast i8* %17917 to float*
  %17919 = load float, float* %17918, align 4
  %17920 = insertelement <4 x float> zeroinitializer, float %17919, i32 0
  %17921 = insertelement <4 x float> %17920, float 1.000000e+00, i32 1
  %17922 = insertelement <4 x float> %17921, float 1.000000e+00, i32 2
  %17923 = insertelement <4 x float> %17922, float 1.000000e+00, i32 3
  %17924 = getelementptr inbounds float, float* %2, i64 2
  %17925 = load float, float* %17924, align 4
  %17926 = insertelement <4 x float> zeroinitializer, float %17925, i32 0
  %17927 = insertelement <4 x float> %17926, float 0.000000e+00, i32 1
  %17928 = insertelement <4 x float> %17927, float 0.000000e+00, i32 2
  %17929 = insertelement <4 x float> %17928, float 0.000000e+00, i32 3
  %17930 = fmul <4 x float> %17923, %17929
  %17931 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17932 = getelementptr inbounds i8, i8* %17931, i64 36
  %17933 = bitcast i8* %17932 to float*
  %17934 = load float, float* %17933, align 4
  %17935 = insertelement <4 x float> zeroinitializer, float %17934, i32 0
  %17936 = insertelement <4 x float> %17935, float 1.000000e+00, i32 1
  %17937 = insertelement <4 x float> %17936, float 1.000000e+00, i32 2
  %17938 = insertelement <4 x float> %17937, float 1.000000e+00, i32 3
  %17939 = getelementptr inbounds float, float* %2, i64 6
  %17940 = load float, float* %17939, align 4
  %17941 = insertelement <4 x float> zeroinitializer, float %17940, i32 0
  %17942 = insertelement <4 x float> %17941, float 0.000000e+00, i32 1
  %17943 = insertelement <4 x float> %17942, float 0.000000e+00, i32 2
  %17944 = insertelement <4 x float> %17943, float 0.000000e+00, i32 3
  %17945 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17938, <4 x float> %17944, <4 x float> %17930)
  %17946 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17947 = getelementptr inbounds i8, i8* %17946, i64 40
  %17948 = bitcast i8* %17947 to float*
  %17949 = load float, float* %17948, align 4
  %17950 = insertelement <4 x float> zeroinitializer, float %17949, i32 0
  %17951 = insertelement <4 x float> %17950, float 0.000000e+00, i32 1
  %17952 = insertelement <4 x float> %17951, float 0.000000e+00, i32 2
  %17953 = insertelement <4 x float> %17952, float 0.000000e+00, i32 3
  %17954 = getelementptr inbounds float, float* %2, i64 10
  %17955 = load float, float* %17954, align 4
  %17956 = insertelement <4 x float> zeroinitializer, float %17955, i32 0
  %17957 = insertelement <4 x float> %17956, float 0.000000e+00, i32 1
  %17958 = insertelement <4 x float> %17957, float 0.000000e+00, i32 2
  %17959 = insertelement <4 x float> %17958, float 0.000000e+00, i32 3
  %17960 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17953, <4 x float> %17959, <4 x float> %17945)
  %17961 = extractelement <4 x float> %17960, i32 0
  %17962 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17963 = getelementptr inbounds i8, i8* %17962, i64 40
  %17964 = bitcast i8* %17963 to float*
  store float %17961, float* %17964, align 4
  %17965 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17966 = getelementptr inbounds i8, i8* %17965, i64 32
  %17967 = bitcast i8* %17966 to float*
  %17968 = load float, float* %17967, align 4
  %17969 = insertelement <4 x float> zeroinitializer, float %17968, i32 0
  %17970 = insertelement <4 x float> %17969, float 1.000000e+00, i32 1
  %17971 = insertelement <4 x float> %17970, float 1.000000e+00, i32 2
  %17972 = insertelement <4 x float> %17971, float 1.000000e+00, i32 3
  %17973 = getelementptr inbounds float, float* %2, i64 2
  %17974 = load float, float* %17973, align 4
  %17975 = insertelement <4 x float> zeroinitializer, float %17974, i32 0
  %17976 = insertelement <4 x float> %17975, float 0.000000e+00, i32 1
  %17977 = insertelement <4 x float> %17976, float 0.000000e+00, i32 2
  %17978 = insertelement <4 x float> %17977, float 0.000000e+00, i32 3
  %17979 = fmul <4 x float> %17972, %17978
  %17980 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17981 = getelementptr inbounds i8, i8* %17980, i64 36
  %17982 = bitcast i8* %17981 to float*
  %17983 = load float, float* %17982, align 4
  %17984 = insertelement <4 x float> zeroinitializer, float %17983, i32 0
  %17985 = insertelement <4 x float> %17984, float 1.000000e+00, i32 1
  %17986 = insertelement <4 x float> %17985, float 1.000000e+00, i32 2
  %17987 = insertelement <4 x float> %17986, float 1.000000e+00, i32 3
  %17988 = getelementptr inbounds float, float* %2, i64 6
  %17989 = load float, float* %17988, align 4
  %17990 = insertelement <4 x float> zeroinitializer, float %17989, i32 0
  %17991 = insertelement <4 x float> %17990, float 0.000000e+00, i32 1
  %17992 = insertelement <4 x float> %17991, float 0.000000e+00, i32 2
  %17993 = insertelement <4 x float> %17992, float 0.000000e+00, i32 3
  %17994 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17987, <4 x float> %17993, <4 x float> %17979)
  %17995 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17996 = getelementptr inbounds i8, i8* %17995, i64 40
  %17997 = bitcast i8* %17996 to float*
  %17998 = load float, float* %17997, align 4
  %17999 = insertelement <4 x float> zeroinitializer, float %17998, i32 0
  %18000 = insertelement <4 x float> %17999, float 1.000000e+00, i32 1
  %18001 = insertelement <4 x float> %18000, float 1.000000e+00, i32 2
  %18002 = insertelement <4 x float> %18001, float 1.000000e+00, i32 3
  %18003 = getelementptr inbounds float, float* %2, i64 10
  %18004 = load float, float* %18003, align 4
  %18005 = insertelement <4 x float> zeroinitializer, float %18004, i32 0
  %18006 = insertelement <4 x float> %18005, float 0.000000e+00, i32 1
  %18007 = insertelement <4 x float> %18006, float 0.000000e+00, i32 2
  %18008 = insertelement <4 x float> %18007, float 0.000000e+00, i32 3
  %18009 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18002, <4 x float> %18008, <4 x float> %17994)
  %18010 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18011 = getelementptr inbounds i8, i8* %18010, i64 44
  %18012 = bitcast i8* %18011 to float*
  %18013 = load float, float* %18012, align 4
  %18014 = insertelement <4 x float> zeroinitializer, float %18013, i32 0
  %18015 = insertelement <4 x float> %18014, float 0.000000e+00, i32 1
  %18016 = insertelement <4 x float> %18015, float 0.000000e+00, i32 2
  %18017 = insertelement <4 x float> %18016, float 0.000000e+00, i32 3
  %18018 = getelementptr inbounds float, float* %2, i64 14
  %18019 = load float, float* %18018, align 4
  %18020 = insertelement <4 x float> zeroinitializer, float %18019, i32 0
  %18021 = insertelement <4 x float> %18020, float 0.000000e+00, i32 1
  %18022 = insertelement <4 x float> %18021, float 0.000000e+00, i32 2
  %18023 = insertelement <4 x float> %18022, float 0.000000e+00, i32 3
  %18024 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18017, <4 x float> %18023, <4 x float> %18009)
  %18025 = extractelement <4 x float> %18024, i32 0
  %18026 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18027 = getelementptr inbounds i8, i8* %18026, i64 40
  %18028 = bitcast i8* %18027 to float*
  store float %18025, float* %18028, align 4
  %18029 = extractelement <4 x float> %18024, i32 1
  %18030 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18031 = getelementptr inbounds i8, i8* %18030, i64 44
  %18032 = bitcast i8* %18031 to float*
  store float %18029, float* %18032, align 4
  %18033 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18034 = getelementptr inbounds i8, i8* %18033, i64 32
  %18035 = bitcast i8* %18034 to float*
  %18036 = load float, float* %18035, align 4
  %18037 = insertelement <4 x float> zeroinitializer, float %18036, i32 0
  %18038 = insertelement <4 x float> %18037, float 0.000000e+00, i32 1
  %18039 = insertelement <4 x float> %18038, float 0.000000e+00, i32 2
  %18040 = insertelement <4 x float> %18039, float 0.000000e+00, i32 3
  %18041 = getelementptr inbounds float, float* %2, i64 3
  %18042 = load float, float* %18041, align 4
  %18043 = insertelement <4 x float> zeroinitializer, float %18042, i32 0
  %18044 = insertelement <4 x float> %18043, float 0.000000e+00, i32 1
  %18045 = insertelement <4 x float> %18044, float 0.000000e+00, i32 2
  %18046 = insertelement <4 x float> %18045, float 0.000000e+00, i32 3
  %18047 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18040, <4 x float> %18046, <4 x float> zeroinitializer)
  %18048 = extractelement <4 x float> %18047, i32 0
  %18049 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18050 = getelementptr inbounds i8, i8* %18049, i64 44
  %18051 = bitcast i8* %18050 to float*
  store float %18048, float* %18051, align 4
  %18052 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18053 = getelementptr inbounds i8, i8* %18052, i64 32
  %18054 = bitcast i8* %18053 to float*
  %18055 = load float, float* %18054, align 4
  %18056 = insertelement <4 x float> zeroinitializer, float %18055, i32 0
  %18057 = insertelement <4 x float> %18056, float 1.000000e+00, i32 1
  %18058 = insertelement <4 x float> %18057, float 1.000000e+00, i32 2
  %18059 = insertelement <4 x float> %18058, float 1.000000e+00, i32 3
  %18060 = getelementptr inbounds float, float* %2, i64 3
  %18061 = load float, float* %18060, align 4
  %18062 = insertelement <4 x float> zeroinitializer, float %18061, i32 0
  %18063 = insertelement <4 x float> %18062, float 0.000000e+00, i32 1
  %18064 = insertelement <4 x float> %18063, float 0.000000e+00, i32 2
  %18065 = insertelement <4 x float> %18064, float 0.000000e+00, i32 3
  %18066 = fmul <4 x float> %18059, %18065
  %18067 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18068 = getelementptr inbounds i8, i8* %18067, i64 36
  %18069 = bitcast i8* %18068 to float*
  %18070 = load float, float* %18069, align 4
  %18071 = insertelement <4 x float> zeroinitializer, float %18070, i32 0
  %18072 = insertelement <4 x float> %18071, float 0.000000e+00, i32 1
  %18073 = insertelement <4 x float> %18072, float 0.000000e+00, i32 2
  %18074 = insertelement <4 x float> %18073, float 0.000000e+00, i32 3
  %18075 = getelementptr inbounds float, float* %2, i64 7
  %18076 = load float, float* %18075, align 4
  %18077 = insertelement <4 x float> zeroinitializer, float %18076, i32 0
  %18078 = insertelement <4 x float> %18077, float 0.000000e+00, i32 1
  %18079 = insertelement <4 x float> %18078, float 0.000000e+00, i32 2
  %18080 = insertelement <4 x float> %18079, float 0.000000e+00, i32 3
  %18081 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18074, <4 x float> %18080, <4 x float> %18066)
  %18082 = extractelement <4 x float> %18081, i32 0
  %18083 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18084 = getelementptr inbounds i8, i8* %18083, i64 44
  %18085 = bitcast i8* %18084 to float*
  store float %18082, float* %18085, align 4
  %18086 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18087 = getelementptr inbounds i8, i8* %18086, i64 32
  %18088 = bitcast i8* %18087 to float*
  %18089 = load float, float* %18088, align 4
  %18090 = insertelement <4 x float> zeroinitializer, float %18089, i32 0
  %18091 = insertelement <4 x float> %18090, float 1.000000e+00, i32 1
  %18092 = insertelement <4 x float> %18091, float 1.000000e+00, i32 2
  %18093 = insertelement <4 x float> %18092, float 1.000000e+00, i32 3
  %18094 = getelementptr inbounds float, float* %2, i64 3
  %18095 = load float, float* %18094, align 4
  %18096 = insertelement <4 x float> zeroinitializer, float %18095, i32 0
  %18097 = insertelement <4 x float> %18096, float 0.000000e+00, i32 1
  %18098 = insertelement <4 x float> %18097, float 0.000000e+00, i32 2
  %18099 = insertelement <4 x float> %18098, float 0.000000e+00, i32 3
  %18100 = fmul <4 x float> %18093, %18099
  %18101 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18102 = getelementptr inbounds i8, i8* %18101, i64 36
  %18103 = bitcast i8* %18102 to float*
  %18104 = load float, float* %18103, align 4
  %18105 = insertelement <4 x float> zeroinitializer, float %18104, i32 0
  %18106 = insertelement <4 x float> %18105, float 1.000000e+00, i32 1
  %18107 = insertelement <4 x float> %18106, float 1.000000e+00, i32 2
  %18108 = insertelement <4 x float> %18107, float 1.000000e+00, i32 3
  %18109 = getelementptr inbounds float, float* %2, i64 7
  %18110 = load float, float* %18109, align 4
  %18111 = insertelement <4 x float> zeroinitializer, float %18110, i32 0
  %18112 = insertelement <4 x float> %18111, float 0.000000e+00, i32 1
  %18113 = insertelement <4 x float> %18112, float 0.000000e+00, i32 2
  %18114 = insertelement <4 x float> %18113, float 0.000000e+00, i32 3
  %18115 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18108, <4 x float> %18114, <4 x float> %18100)
  %18116 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18117 = getelementptr inbounds i8, i8* %18116, i64 40
  %18118 = bitcast i8* %18117 to float*
  %18119 = load float, float* %18118, align 4
  %18120 = insertelement <4 x float> zeroinitializer, float %18119, i32 0
  %18121 = insertelement <4 x float> %18120, float 0.000000e+00, i32 1
  %18122 = insertelement <4 x float> %18121, float 0.000000e+00, i32 2
  %18123 = insertelement <4 x float> %18122, float 0.000000e+00, i32 3
  %18124 = getelementptr inbounds float, float* %2, i64 11
  %18125 = load float, float* %18124, align 4
  %18126 = insertelement <4 x float> zeroinitializer, float %18125, i32 0
  %18127 = insertelement <4 x float> %18126, float 0.000000e+00, i32 1
  %18128 = insertelement <4 x float> %18127, float 0.000000e+00, i32 2
  %18129 = insertelement <4 x float> %18128, float 0.000000e+00, i32 3
  %18130 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18123, <4 x float> %18129, <4 x float> %18115)
  %18131 = extractelement <4 x float> %18130, i32 0
  %18132 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18133 = getelementptr inbounds i8, i8* %18132, i64 44
  %18134 = bitcast i8* %18133 to float*
  store float %18131, float* %18134, align 4
  %18135 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18136 = getelementptr inbounds i8, i8* %18135, i64 32
  %18137 = bitcast i8* %18136 to float*
  %18138 = load float, float* %18137, align 4
  %18139 = insertelement <4 x float> zeroinitializer, float %18138, i32 0
  %18140 = insertelement <4 x float> %18139, float 1.000000e+00, i32 1
  %18141 = insertelement <4 x float> %18140, float 1.000000e+00, i32 2
  %18142 = insertelement <4 x float> %18141, float 1.000000e+00, i32 3
  %18143 = getelementptr inbounds float, float* %2, i64 3
  %18144 = load float, float* %18143, align 4
  %18145 = insertelement <4 x float> zeroinitializer, float %18144, i32 0
  %18146 = insertelement <4 x float> %18145, float 0.000000e+00, i32 1
  %18147 = insertelement <4 x float> %18146, float 0.000000e+00, i32 2
  %18148 = insertelement <4 x float> %18147, float 0.000000e+00, i32 3
  %18149 = fmul <4 x float> %18142, %18148
  %18150 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18151 = getelementptr inbounds i8, i8* %18150, i64 36
  %18152 = bitcast i8* %18151 to float*
  %18153 = load float, float* %18152, align 4
  %18154 = insertelement <4 x float> zeroinitializer, float %18153, i32 0
  %18155 = insertelement <4 x float> %18154, float 1.000000e+00, i32 1
  %18156 = insertelement <4 x float> %18155, float 1.000000e+00, i32 2
  %18157 = insertelement <4 x float> %18156, float 1.000000e+00, i32 3
  %18158 = getelementptr inbounds float, float* %2, i64 7
  %18159 = load float, float* %18158, align 4
  %18160 = insertelement <4 x float> zeroinitializer, float %18159, i32 0
  %18161 = insertelement <4 x float> %18160, float 0.000000e+00, i32 1
  %18162 = insertelement <4 x float> %18161, float 0.000000e+00, i32 2
  %18163 = insertelement <4 x float> %18162, float 0.000000e+00, i32 3
  %18164 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18157, <4 x float> %18163, <4 x float> %18149)
  %18165 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18166 = getelementptr inbounds i8, i8* %18165, i64 40
  %18167 = bitcast i8* %18166 to float*
  %18168 = load float, float* %18167, align 4
  %18169 = insertelement <4 x float> zeroinitializer, float %18168, i32 0
  %18170 = insertelement <4 x float> %18169, float 1.000000e+00, i32 1
  %18171 = insertelement <4 x float> %18170, float 1.000000e+00, i32 2
  %18172 = insertelement <4 x float> %18171, float 1.000000e+00, i32 3
  %18173 = getelementptr inbounds float, float* %2, i64 11
  %18174 = load float, float* %18173, align 4
  %18175 = insertelement <4 x float> zeroinitializer, float %18174, i32 0
  %18176 = insertelement <4 x float> %18175, float 0.000000e+00, i32 1
  %18177 = insertelement <4 x float> %18176, float 0.000000e+00, i32 2
  %18178 = insertelement <4 x float> %18177, float 0.000000e+00, i32 3
  %18179 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18172, <4 x float> %18178, <4 x float> %18164)
  %18180 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18181 = getelementptr inbounds i8, i8* %18180, i64 44
  %18182 = bitcast i8* %18181 to float*
  %18183 = load float, float* %18182, align 4
  %18184 = insertelement <4 x float> zeroinitializer, float %18183, i32 0
  %18185 = insertelement <4 x float> %18184, float 0.000000e+00, i32 1
  %18186 = insertelement <4 x float> %18185, float 0.000000e+00, i32 2
  %18187 = insertelement <4 x float> %18186, float 0.000000e+00, i32 3
  %18188 = getelementptr inbounds float, float* %2, i64 15
  %18189 = load float, float* %18188, align 4
  %18190 = insertelement <4 x float> zeroinitializer, float %18189, i32 0
  %18191 = insertelement <4 x float> %18190, float 0.000000e+00, i32 1
  %18192 = insertelement <4 x float> %18191, float 0.000000e+00, i32 2
  %18193 = insertelement <4 x float> %18192, float 0.000000e+00, i32 3
  %18194 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18187, <4 x float> %18193, <4 x float> %18179)
  %18195 = extractelement <4 x float> %18194, i32 0
  %18196 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18197 = getelementptr inbounds i8, i8* %18196, i64 44
  %18198 = bitcast i8* %18197 to float*
  store float %18195, float* %18198, align 4
  %18199 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18200 = getelementptr inbounds i8, i8* %18199, i64 48
  %18201 = bitcast i8* %18200 to float*
  %18202 = load float, float* %18201, align 4
  %18203 = insertelement <4 x float> zeroinitializer, float %18202, i32 0
  %18204 = insertelement <4 x float> %18203, float 0.000000e+00, i32 1
  %18205 = insertelement <4 x float> %18204, float 0.000000e+00, i32 2
  %18206 = insertelement <4 x float> %18205, float 0.000000e+00, i32 3
  %18207 = load float, float* %2, align 4
  %18208 = insertelement <4 x float> zeroinitializer, float %18207, i32 0
  %18209 = insertelement <4 x float> %18208, float 0.000000e+00, i32 1
  %18210 = insertelement <4 x float> %18209, float 0.000000e+00, i32 2
  %18211 = insertelement <4 x float> %18210, float 0.000000e+00, i32 3
  %18212 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18206, <4 x float> %18211, <4 x float> zeroinitializer)
  %18213 = extractelement <4 x float> %18212, i32 0
  %18214 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18215 = getelementptr inbounds i8, i8* %18214, i64 48
  %18216 = bitcast i8* %18215 to float*
  store float %18213, float* %18216, align 4
  %18217 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18218 = getelementptr inbounds i8, i8* %18217, i64 48
  %18219 = bitcast i8* %18218 to float*
  %18220 = load float, float* %18219, align 4
  %18221 = insertelement <4 x float> zeroinitializer, float %18220, i32 0
  %18222 = insertelement <4 x float> %18221, float 1.000000e+00, i32 1
  %18223 = insertelement <4 x float> %18222, float 1.000000e+00, i32 2
  %18224 = insertelement <4 x float> %18223, float 1.000000e+00, i32 3
  %18225 = load float, float* %2, align 4
  %18226 = insertelement <4 x float> zeroinitializer, float %18225, i32 0
  %18227 = insertelement <4 x float> %18226, float 0.000000e+00, i32 1
  %18228 = insertelement <4 x float> %18227, float 0.000000e+00, i32 2
  %18229 = insertelement <4 x float> %18228, float 0.000000e+00, i32 3
  %18230 = fmul <4 x float> %18224, %18229
  %18231 = fadd <4 x float> %18230, zeroinitializer
  %18232 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18233 = getelementptr inbounds i8, i8* %18232, i64 52
  %18234 = bitcast i8* %18233 to float*
  %18235 = load float, float* %18234, align 4
  %18236 = insertelement <4 x float> zeroinitializer, float %18235, i32 0
  %18237 = insertelement <4 x float> %18236, float 0.000000e+00, i32 1
  %18238 = insertelement <4 x float> %18237, float 0.000000e+00, i32 2
  %18239 = insertelement <4 x float> %18238, float 0.000000e+00, i32 3
  %18240 = getelementptr inbounds float, float* %2, i64 4
  %18241 = load float, float* %18240, align 4
  %18242 = insertelement <4 x float> zeroinitializer, float %18241, i32 0
  %18243 = insertelement <4 x float> %18242, float 0.000000e+00, i32 1
  %18244 = insertelement <4 x float> %18243, float 0.000000e+00, i32 2
  %18245 = insertelement <4 x float> %18244, float 0.000000e+00, i32 3
  %18246 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18239, <4 x float> %18245, <4 x float> %18231)
  %18247 = extractelement <4 x float> %18246, i32 0
  %18248 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18249 = getelementptr inbounds i8, i8* %18248, i64 48
  %18250 = bitcast i8* %18249 to float*
  store float %18247, float* %18250, align 4
  %18251 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18252 = getelementptr inbounds i8, i8* %18251, i64 48
  %18253 = bitcast i8* %18252 to float*
  %18254 = load float, float* %18253, align 4
  %18255 = insertelement <4 x float> zeroinitializer, float %18254, i32 0
  %18256 = insertelement <4 x float> %18255, float 1.000000e+00, i32 1
  %18257 = insertelement <4 x float> %18256, float 1.000000e+00, i32 2
  %18258 = insertelement <4 x float> %18257, float 1.000000e+00, i32 3
  %18259 = load float, float* %2, align 4
  %18260 = insertelement <4 x float> zeroinitializer, float %18259, i32 0
  %18261 = insertelement <4 x float> %18260, float 0.000000e+00, i32 1
  %18262 = insertelement <4 x float> %18261, float 0.000000e+00, i32 2
  %18263 = insertelement <4 x float> %18262, float 0.000000e+00, i32 3
  %18264 = fmul <4 x float> %18258, %18263
  %18265 = fadd <4 x float> %18264, zeroinitializer
  %18266 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18267 = getelementptr inbounds i8, i8* %18266, i64 52
  %18268 = bitcast i8* %18267 to float*
  %18269 = load float, float* %18268, align 4
  %18270 = insertelement <4 x float> zeroinitializer, float %18269, i32 0
  %18271 = insertelement <4 x float> %18270, float 1.000000e+00, i32 1
  %18272 = insertelement <4 x float> %18271, float 1.000000e+00, i32 2
  %18273 = insertelement <4 x float> %18272, float 1.000000e+00, i32 3
  %18274 = getelementptr inbounds float, float* %2, i64 4
  %18275 = load float, float* %18274, align 4
  %18276 = insertelement <4 x float> zeroinitializer, float %18275, i32 0
  %18277 = insertelement <4 x float> %18276, float 0.000000e+00, i32 1
  %18278 = insertelement <4 x float> %18277, float 0.000000e+00, i32 2
  %18279 = insertelement <4 x float> %18278, float 0.000000e+00, i32 3
  %18280 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18273, <4 x float> %18279, <4 x float> %18265)
  %18281 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18282 = getelementptr inbounds i8, i8* %18281, i64 56
  %18283 = bitcast i8* %18282 to float*
  %18284 = load float, float* %18283, align 4
  %18285 = insertelement <4 x float> zeroinitializer, float %18284, i32 0
  %18286 = insertelement <4 x float> %18285, float 0.000000e+00, i32 1
  %18287 = insertelement <4 x float> %18286, float 0.000000e+00, i32 2
  %18288 = insertelement <4 x float> %18287, float 0.000000e+00, i32 3
  %18289 = getelementptr inbounds float, float* %2, i64 8
  %18290 = load float, float* %18289, align 4
  %18291 = insertelement <4 x float> zeroinitializer, float %18290, i32 0
  %18292 = insertelement <4 x float> %18291, float 0.000000e+00, i32 1
  %18293 = insertelement <4 x float> %18292, float 0.000000e+00, i32 2
  %18294 = insertelement <4 x float> %18293, float 0.000000e+00, i32 3
  %18295 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18288, <4 x float> %18294, <4 x float> %18280)
  %18296 = extractelement <4 x float> %18295, i32 0
  %18297 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18298 = getelementptr inbounds i8, i8* %18297, i64 48
  %18299 = bitcast i8* %18298 to float*
  store float %18296, float* %18299, align 4
  %18300 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18301 = getelementptr inbounds i8, i8* %18300, i64 48
  %18302 = bitcast i8* %18301 to float*
  %18303 = load float, float* %18302, align 4
  %18304 = insertelement <4 x float> zeroinitializer, float %18303, i32 0
  %18305 = insertelement <4 x float> %18304, float 1.000000e+00, i32 1
  %18306 = insertelement <4 x float> %18305, float 1.000000e+00, i32 2
  %18307 = insertelement <4 x float> %18306, float 1.000000e+00, i32 3
  %18308 = load float, float* %2, align 4
  %18309 = insertelement <4 x float> zeroinitializer, float %18308, i32 0
  %18310 = insertelement <4 x float> %18309, float 0.000000e+00, i32 1
  %18311 = insertelement <4 x float> %18310, float 0.000000e+00, i32 2
  %18312 = insertelement <4 x float> %18311, float 0.000000e+00, i32 3
  %18313 = fmul <4 x float> %18307, %18312
  %18314 = fadd <4 x float> %18313, zeroinitializer
  %18315 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18316 = getelementptr inbounds i8, i8* %18315, i64 52
  %18317 = bitcast i8* %18316 to float*
  %18318 = load float, float* %18317, align 4
  %18319 = insertelement <4 x float> zeroinitializer, float %18318, i32 0
  %18320 = insertelement <4 x float> %18319, float 1.000000e+00, i32 1
  %18321 = insertelement <4 x float> %18320, float 1.000000e+00, i32 2
  %18322 = insertelement <4 x float> %18321, float 1.000000e+00, i32 3
  %18323 = getelementptr inbounds float, float* %2, i64 4
  %18324 = load float, float* %18323, align 4
  %18325 = insertelement <4 x float> zeroinitializer, float %18324, i32 0
  %18326 = insertelement <4 x float> %18325, float 0.000000e+00, i32 1
  %18327 = insertelement <4 x float> %18326, float 0.000000e+00, i32 2
  %18328 = insertelement <4 x float> %18327, float 0.000000e+00, i32 3
  %18329 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18322, <4 x float> %18328, <4 x float> %18314)
  %18330 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18331 = getelementptr inbounds i8, i8* %18330, i64 56
  %18332 = bitcast i8* %18331 to float*
  %18333 = load float, float* %18332, align 4
  %18334 = insertelement <4 x float> zeroinitializer, float %18333, i32 0
  %18335 = insertelement <4 x float> %18334, float 1.000000e+00, i32 1
  %18336 = insertelement <4 x float> %18335, float 1.000000e+00, i32 2
  %18337 = insertelement <4 x float> %18336, float 1.000000e+00, i32 3
  %18338 = getelementptr inbounds float, float* %2, i64 8
  %18339 = load float, float* %18338, align 4
  %18340 = insertelement <4 x float> zeroinitializer, float %18339, i32 0
  %18341 = insertelement <4 x float> %18340, float 0.000000e+00, i32 1
  %18342 = insertelement <4 x float> %18341, float 0.000000e+00, i32 2
  %18343 = insertelement <4 x float> %18342, float 0.000000e+00, i32 3
  %18344 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18337, <4 x float> %18343, <4 x float> %18329)
  %18345 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18346 = getelementptr inbounds i8, i8* %18345, i64 60
  %18347 = bitcast i8* %18346 to float*
  %18348 = load float, float* %18347, align 4
  %18349 = insertelement <4 x float> zeroinitializer, float %18348, i32 0
  %18350 = insertelement <4 x float> %18349, float 0.000000e+00, i32 1
  %18351 = insertelement <4 x float> %18350, float 0.000000e+00, i32 2
  %18352 = insertelement <4 x float> %18351, float 0.000000e+00, i32 3
  %18353 = getelementptr inbounds float, float* %2, i64 12
  %18354 = load float, float* %18353, align 4
  %18355 = insertelement <4 x float> zeroinitializer, float %18354, i32 0
  %18356 = insertelement <4 x float> %18355, float 0.000000e+00, i32 1
  %18357 = insertelement <4 x float> %18356, float 0.000000e+00, i32 2
  %18358 = insertelement <4 x float> %18357, float 0.000000e+00, i32 3
  %18359 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18352, <4 x float> %18358, <4 x float> %18344)
  %18360 = extractelement <4 x float> %18359, i32 0
  %18361 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18362 = getelementptr inbounds i8, i8* %18361, i64 48
  %18363 = bitcast i8* %18362 to float*
  store float %18360, float* %18363, align 4
  %18364 = extractelement <4 x float> %18359, i32 1
  %18365 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18366 = getelementptr inbounds i8, i8* %18365, i64 52
  %18367 = bitcast i8* %18366 to float*
  store float %18364, float* %18367, align 4
  %18368 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18369 = getelementptr inbounds i8, i8* %18368, i64 48
  %18370 = bitcast i8* %18369 to float*
  %18371 = load float, float* %18370, align 4
  %18372 = insertelement <4 x float> zeroinitializer, float %18371, i32 0
  %18373 = insertelement <4 x float> %18372, float 0.000000e+00, i32 1
  %18374 = insertelement <4 x float> %18373, float 0.000000e+00, i32 2
  %18375 = insertelement <4 x float> %18374, float 0.000000e+00, i32 3
  %18376 = getelementptr inbounds float, float* %2, i64 1
  %18377 = load float, float* %18376, align 4
  %18378 = insertelement <4 x float> zeroinitializer, float %18377, i32 0
  %18379 = insertelement <4 x float> %18378, float 0.000000e+00, i32 1
  %18380 = insertelement <4 x float> %18379, float 0.000000e+00, i32 2
  %18381 = insertelement <4 x float> %18380, float 0.000000e+00, i32 3
  %18382 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18375, <4 x float> %18381, <4 x float> zeroinitializer)
  %18383 = extractelement <4 x float> %18382, i32 0
  %18384 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18385 = getelementptr inbounds i8, i8* %18384, i64 52
  %18386 = bitcast i8* %18385 to float*
  store float %18383, float* %18386, align 4
  %18387 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18388 = getelementptr inbounds i8, i8* %18387, i64 48
  %18389 = bitcast i8* %18388 to float*
  %18390 = load float, float* %18389, align 4
  %18391 = insertelement <4 x float> zeroinitializer, float %18390, i32 0
  %18392 = insertelement <4 x float> %18391, float 1.000000e+00, i32 1
  %18393 = insertelement <4 x float> %18392, float 1.000000e+00, i32 2
  %18394 = insertelement <4 x float> %18393, float 1.000000e+00, i32 3
  %18395 = getelementptr inbounds float, float* %2, i64 1
  %18396 = load float, float* %18395, align 4
  %18397 = insertelement <4 x float> zeroinitializer, float %18396, i32 0
  %18398 = insertelement <4 x float> %18397, float 0.000000e+00, i32 1
  %18399 = insertelement <4 x float> %18398, float 0.000000e+00, i32 2
  %18400 = insertelement <4 x float> %18399, float 0.000000e+00, i32 3
  %18401 = fmul <4 x float> %18394, %18400
  %18402 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18403 = getelementptr inbounds i8, i8* %18402, i64 52
  %18404 = bitcast i8* %18403 to float*
  %18405 = load float, float* %18404, align 4
  %18406 = insertelement <4 x float> zeroinitializer, float %18405, i32 0
  %18407 = insertelement <4 x float> %18406, float 0.000000e+00, i32 1
  %18408 = insertelement <4 x float> %18407, float 0.000000e+00, i32 2
  %18409 = insertelement <4 x float> %18408, float 0.000000e+00, i32 3
  %18410 = getelementptr inbounds float, float* %2, i64 5
  %18411 = load float, float* %18410, align 4
  %18412 = insertelement <4 x float> zeroinitializer, float %18411, i32 0
  %18413 = insertelement <4 x float> %18412, float 0.000000e+00, i32 1
  %18414 = insertelement <4 x float> %18413, float 0.000000e+00, i32 2
  %18415 = insertelement <4 x float> %18414, float 0.000000e+00, i32 3
  %18416 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18409, <4 x float> %18415, <4 x float> %18401)
  %18417 = extractelement <4 x float> %18416, i32 0
  %18418 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18419 = getelementptr inbounds i8, i8* %18418, i64 52
  %18420 = bitcast i8* %18419 to float*
  store float %18417, float* %18420, align 4
  %18421 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18422 = getelementptr inbounds i8, i8* %18421, i64 48
  %18423 = bitcast i8* %18422 to float*
  %18424 = load float, float* %18423, align 4
  %18425 = insertelement <4 x float> zeroinitializer, float %18424, i32 0
  %18426 = insertelement <4 x float> %18425, float 1.000000e+00, i32 1
  %18427 = insertelement <4 x float> %18426, float 1.000000e+00, i32 2
  %18428 = insertelement <4 x float> %18427, float 1.000000e+00, i32 3
  %18429 = getelementptr inbounds float, float* %2, i64 1
  %18430 = load float, float* %18429, align 4
  %18431 = insertelement <4 x float> zeroinitializer, float %18430, i32 0
  %18432 = insertelement <4 x float> %18431, float 0.000000e+00, i32 1
  %18433 = insertelement <4 x float> %18432, float 0.000000e+00, i32 2
  %18434 = insertelement <4 x float> %18433, float 0.000000e+00, i32 3
  %18435 = fmul <4 x float> %18428, %18434
  %18436 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18437 = getelementptr inbounds i8, i8* %18436, i64 52
  %18438 = bitcast i8* %18437 to float*
  %18439 = load float, float* %18438, align 4
  %18440 = insertelement <4 x float> zeroinitializer, float %18439, i32 0
  %18441 = insertelement <4 x float> %18440, float 1.000000e+00, i32 1
  %18442 = insertelement <4 x float> %18441, float 1.000000e+00, i32 2
  %18443 = insertelement <4 x float> %18442, float 1.000000e+00, i32 3
  %18444 = getelementptr inbounds float, float* %2, i64 5
  %18445 = load float, float* %18444, align 4
  %18446 = insertelement <4 x float> zeroinitializer, float %18445, i32 0
  %18447 = insertelement <4 x float> %18446, float 0.000000e+00, i32 1
  %18448 = insertelement <4 x float> %18447, float 0.000000e+00, i32 2
  %18449 = insertelement <4 x float> %18448, float 0.000000e+00, i32 3
  %18450 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18443, <4 x float> %18449, <4 x float> %18435)
  %18451 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18452 = getelementptr inbounds i8, i8* %18451, i64 56
  %18453 = bitcast i8* %18452 to float*
  %18454 = load float, float* %18453, align 4
  %18455 = insertelement <4 x float> zeroinitializer, float %18454, i32 0
  %18456 = insertelement <4 x float> %18455, float 0.000000e+00, i32 1
  %18457 = insertelement <4 x float> %18456, float 0.000000e+00, i32 2
  %18458 = insertelement <4 x float> %18457, float 0.000000e+00, i32 3
  %18459 = getelementptr inbounds float, float* %2, i64 9
  %18460 = load float, float* %18459, align 4
  %18461 = insertelement <4 x float> zeroinitializer, float %18460, i32 0
  %18462 = insertelement <4 x float> %18461, float 0.000000e+00, i32 1
  %18463 = insertelement <4 x float> %18462, float 0.000000e+00, i32 2
  %18464 = insertelement <4 x float> %18463, float 0.000000e+00, i32 3
  %18465 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18458, <4 x float> %18464, <4 x float> %18450)
  %18466 = extractelement <4 x float> %18465, i32 0
  %18467 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18468 = getelementptr inbounds i8, i8* %18467, i64 52
  %18469 = bitcast i8* %18468 to float*
  store float %18466, float* %18469, align 4
  %18470 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18471 = getelementptr inbounds i8, i8* %18470, i64 48
  %18472 = bitcast i8* %18471 to float*
  %18473 = load float, float* %18472, align 4
  %18474 = insertelement <4 x float> zeroinitializer, float %18473, i32 0
  %18475 = insertelement <4 x float> %18474, float 1.000000e+00, i32 1
  %18476 = insertelement <4 x float> %18475, float 1.000000e+00, i32 2
  %18477 = insertelement <4 x float> %18476, float 1.000000e+00, i32 3
  %18478 = getelementptr inbounds float, float* %2, i64 1
  %18479 = load float, float* %18478, align 4
  %18480 = insertelement <4 x float> zeroinitializer, float %18479, i32 0
  %18481 = insertelement <4 x float> %18480, float 0.000000e+00, i32 1
  %18482 = insertelement <4 x float> %18481, float 0.000000e+00, i32 2
  %18483 = insertelement <4 x float> %18482, float 0.000000e+00, i32 3
  %18484 = fmul <4 x float> %18477, %18483
  %18485 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18486 = getelementptr inbounds i8, i8* %18485, i64 52
  %18487 = bitcast i8* %18486 to float*
  %18488 = load float, float* %18487, align 4
  %18489 = insertelement <4 x float> zeroinitializer, float %18488, i32 0
  %18490 = insertelement <4 x float> %18489, float 1.000000e+00, i32 1
  %18491 = insertelement <4 x float> %18490, float 1.000000e+00, i32 2
  %18492 = insertelement <4 x float> %18491, float 1.000000e+00, i32 3
  %18493 = getelementptr inbounds float, float* %2, i64 5
  %18494 = load float, float* %18493, align 4
  %18495 = insertelement <4 x float> zeroinitializer, float %18494, i32 0
  %18496 = insertelement <4 x float> %18495, float 0.000000e+00, i32 1
  %18497 = insertelement <4 x float> %18496, float 0.000000e+00, i32 2
  %18498 = insertelement <4 x float> %18497, float 0.000000e+00, i32 3
  %18499 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18492, <4 x float> %18498, <4 x float> %18484)
  %18500 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18501 = getelementptr inbounds i8, i8* %18500, i64 56
  %18502 = bitcast i8* %18501 to float*
  %18503 = load float, float* %18502, align 4
  %18504 = insertelement <4 x float> zeroinitializer, float %18503, i32 0
  %18505 = insertelement <4 x float> %18504, float 1.000000e+00, i32 1
  %18506 = insertelement <4 x float> %18505, float 1.000000e+00, i32 2
  %18507 = insertelement <4 x float> %18506, float 1.000000e+00, i32 3
  %18508 = getelementptr inbounds float, float* %2, i64 9
  %18509 = load float, float* %18508, align 4
  %18510 = insertelement <4 x float> zeroinitializer, float %18509, i32 0
  %18511 = insertelement <4 x float> %18510, float 0.000000e+00, i32 1
  %18512 = insertelement <4 x float> %18511, float 0.000000e+00, i32 2
  %18513 = insertelement <4 x float> %18512, float 0.000000e+00, i32 3
  %18514 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18507, <4 x float> %18513, <4 x float> %18499)
  %18515 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18516 = getelementptr inbounds i8, i8* %18515, i64 60
  %18517 = bitcast i8* %18516 to float*
  %18518 = load float, float* %18517, align 4
  %18519 = insertelement <4 x float> zeroinitializer, float %18518, i32 0
  %18520 = insertelement <4 x float> %18519, float 0.000000e+00, i32 1
  %18521 = insertelement <4 x float> %18520, float 0.000000e+00, i32 2
  %18522 = insertelement <4 x float> %18521, float 0.000000e+00, i32 3
  %18523 = getelementptr inbounds float, float* %2, i64 13
  %18524 = load float, float* %18523, align 4
  %18525 = insertelement <4 x float> zeroinitializer, float %18524, i32 0
  %18526 = insertelement <4 x float> %18525, float 0.000000e+00, i32 1
  %18527 = insertelement <4 x float> %18526, float 0.000000e+00, i32 2
  %18528 = insertelement <4 x float> %18527, float 0.000000e+00, i32 3
  %18529 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18522, <4 x float> %18528, <4 x float> %18514)
  %18530 = extractelement <4 x float> %18529, i32 0
  %18531 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18532 = getelementptr inbounds i8, i8* %18531, i64 52
  %18533 = bitcast i8* %18532 to float*
  store float %18530, float* %18533, align 4
  %18534 = extractelement <4 x float> %18529, i32 1
  %18535 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18536 = getelementptr inbounds i8, i8* %18535, i64 56
  %18537 = bitcast i8* %18536 to float*
  store float %18534, float* %18537, align 4
  %18538 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18539 = getelementptr inbounds i8, i8* %18538, i64 48
  %18540 = bitcast i8* %18539 to float*
  %18541 = load float, float* %18540, align 4
  %18542 = insertelement <4 x float> zeroinitializer, float %18541, i32 0
  %18543 = insertelement <4 x float> %18542, float 0.000000e+00, i32 1
  %18544 = insertelement <4 x float> %18543, float 0.000000e+00, i32 2
  %18545 = insertelement <4 x float> %18544, float 0.000000e+00, i32 3
  %18546 = getelementptr inbounds float, float* %2, i64 2
  %18547 = load float, float* %18546, align 4
  %18548 = insertelement <4 x float> zeroinitializer, float %18547, i32 0
  %18549 = insertelement <4 x float> %18548, float 0.000000e+00, i32 1
  %18550 = insertelement <4 x float> %18549, float 0.000000e+00, i32 2
  %18551 = insertelement <4 x float> %18550, float 0.000000e+00, i32 3
  %18552 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18545, <4 x float> %18551, <4 x float> zeroinitializer)
  %18553 = extractelement <4 x float> %18552, i32 0
  %18554 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18555 = getelementptr inbounds i8, i8* %18554, i64 56
  %18556 = bitcast i8* %18555 to float*
  store float %18553, float* %18556, align 4
  %18557 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18558 = getelementptr inbounds i8, i8* %18557, i64 48
  %18559 = bitcast i8* %18558 to float*
  %18560 = load float, float* %18559, align 4
  %18561 = insertelement <4 x float> zeroinitializer, float %18560, i32 0
  %18562 = insertelement <4 x float> %18561, float 1.000000e+00, i32 1
  %18563 = insertelement <4 x float> %18562, float 1.000000e+00, i32 2
  %18564 = insertelement <4 x float> %18563, float 1.000000e+00, i32 3
  %18565 = getelementptr inbounds float, float* %2, i64 2
  %18566 = load float, float* %18565, align 4
  %18567 = insertelement <4 x float> zeroinitializer, float %18566, i32 0
  %18568 = insertelement <4 x float> %18567, float 0.000000e+00, i32 1
  %18569 = insertelement <4 x float> %18568, float 0.000000e+00, i32 2
  %18570 = insertelement <4 x float> %18569, float 0.000000e+00, i32 3
  %18571 = fmul <4 x float> %18564, %18570
  %18572 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18573 = getelementptr inbounds i8, i8* %18572, i64 52
  %18574 = bitcast i8* %18573 to float*
  %18575 = load float, float* %18574, align 4
  %18576 = insertelement <4 x float> zeroinitializer, float %18575, i32 0
  %18577 = insertelement <4 x float> %18576, float 0.000000e+00, i32 1
  %18578 = insertelement <4 x float> %18577, float 0.000000e+00, i32 2
  %18579 = insertelement <4 x float> %18578, float 0.000000e+00, i32 3
  %18580 = getelementptr inbounds float, float* %2, i64 6
  %18581 = load float, float* %18580, align 4
  %18582 = insertelement <4 x float> zeroinitializer, float %18581, i32 0
  %18583 = insertelement <4 x float> %18582, float 0.000000e+00, i32 1
  %18584 = insertelement <4 x float> %18583, float 0.000000e+00, i32 2
  %18585 = insertelement <4 x float> %18584, float 0.000000e+00, i32 3
  %18586 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18579, <4 x float> %18585, <4 x float> %18571)
  %18587 = extractelement <4 x float> %18586, i32 0
  %18588 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18589 = getelementptr inbounds i8, i8* %18588, i64 56
  %18590 = bitcast i8* %18589 to float*
  store float %18587, float* %18590, align 4
  %18591 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18592 = getelementptr inbounds i8, i8* %18591, i64 48
  %18593 = bitcast i8* %18592 to float*
  %18594 = load float, float* %18593, align 4
  %18595 = insertelement <4 x float> zeroinitializer, float %18594, i32 0
  %18596 = insertelement <4 x float> %18595, float 1.000000e+00, i32 1
  %18597 = insertelement <4 x float> %18596, float 1.000000e+00, i32 2
  %18598 = insertelement <4 x float> %18597, float 1.000000e+00, i32 3
  %18599 = getelementptr inbounds float, float* %2, i64 2
  %18600 = load float, float* %18599, align 4
  %18601 = insertelement <4 x float> zeroinitializer, float %18600, i32 0
  %18602 = insertelement <4 x float> %18601, float 0.000000e+00, i32 1
  %18603 = insertelement <4 x float> %18602, float 0.000000e+00, i32 2
  %18604 = insertelement <4 x float> %18603, float 0.000000e+00, i32 3
  %18605 = fmul <4 x float> %18598, %18604
  %18606 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18607 = getelementptr inbounds i8, i8* %18606, i64 52
  %18608 = bitcast i8* %18607 to float*
  %18609 = load float, float* %18608, align 4
  %18610 = insertelement <4 x float> zeroinitializer, float %18609, i32 0
  %18611 = insertelement <4 x float> %18610, float 1.000000e+00, i32 1
  %18612 = insertelement <4 x float> %18611, float 1.000000e+00, i32 2
  %18613 = insertelement <4 x float> %18612, float 1.000000e+00, i32 3
  %18614 = getelementptr inbounds float, float* %2, i64 6
  %18615 = load float, float* %18614, align 4
  %18616 = insertelement <4 x float> zeroinitializer, float %18615, i32 0
  %18617 = insertelement <4 x float> %18616, float 0.000000e+00, i32 1
  %18618 = insertelement <4 x float> %18617, float 0.000000e+00, i32 2
  %18619 = insertelement <4 x float> %18618, float 0.000000e+00, i32 3
  %18620 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18613, <4 x float> %18619, <4 x float> %18605)
  %18621 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18622 = getelementptr inbounds i8, i8* %18621, i64 56
  %18623 = bitcast i8* %18622 to float*
  %18624 = load float, float* %18623, align 4
  %18625 = insertelement <4 x float> zeroinitializer, float %18624, i32 0
  %18626 = insertelement <4 x float> %18625, float 0.000000e+00, i32 1
  %18627 = insertelement <4 x float> %18626, float 0.000000e+00, i32 2
  %18628 = insertelement <4 x float> %18627, float 0.000000e+00, i32 3
  %18629 = getelementptr inbounds float, float* %2, i64 10
  %18630 = load float, float* %18629, align 4
  %18631 = insertelement <4 x float> zeroinitializer, float %18630, i32 0
  %18632 = insertelement <4 x float> %18631, float 0.000000e+00, i32 1
  %18633 = insertelement <4 x float> %18632, float 0.000000e+00, i32 2
  %18634 = insertelement <4 x float> %18633, float 0.000000e+00, i32 3
  %18635 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18628, <4 x float> %18634, <4 x float> %18620)
  %18636 = extractelement <4 x float> %18635, i32 0
  %18637 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18638 = getelementptr inbounds i8, i8* %18637, i64 56
  %18639 = bitcast i8* %18638 to float*
  store float %18636, float* %18639, align 4
  %18640 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18641 = getelementptr inbounds i8, i8* %18640, i64 48
  %18642 = bitcast i8* %18641 to float*
  %18643 = load float, float* %18642, align 4
  %18644 = insertelement <4 x float> zeroinitializer, float %18643, i32 0
  %18645 = insertelement <4 x float> %18644, float 1.000000e+00, i32 1
  %18646 = insertelement <4 x float> %18645, float 1.000000e+00, i32 2
  %18647 = insertelement <4 x float> %18646, float 1.000000e+00, i32 3
  %18648 = getelementptr inbounds float, float* %2, i64 2
  %18649 = load float, float* %18648, align 4
  %18650 = insertelement <4 x float> zeroinitializer, float %18649, i32 0
  %18651 = insertelement <4 x float> %18650, float 0.000000e+00, i32 1
  %18652 = insertelement <4 x float> %18651, float 0.000000e+00, i32 2
  %18653 = insertelement <4 x float> %18652, float 0.000000e+00, i32 3
  %18654 = fmul <4 x float> %18647, %18653
  %18655 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18656 = getelementptr inbounds i8, i8* %18655, i64 52
  %18657 = bitcast i8* %18656 to float*
  %18658 = load float, float* %18657, align 4
  %18659 = insertelement <4 x float> zeroinitializer, float %18658, i32 0
  %18660 = insertelement <4 x float> %18659, float 1.000000e+00, i32 1
  %18661 = insertelement <4 x float> %18660, float 1.000000e+00, i32 2
  %18662 = insertelement <4 x float> %18661, float 1.000000e+00, i32 3
  %18663 = getelementptr inbounds float, float* %2, i64 6
  %18664 = load float, float* %18663, align 4
  %18665 = insertelement <4 x float> zeroinitializer, float %18664, i32 0
  %18666 = insertelement <4 x float> %18665, float 0.000000e+00, i32 1
  %18667 = insertelement <4 x float> %18666, float 0.000000e+00, i32 2
  %18668 = insertelement <4 x float> %18667, float 0.000000e+00, i32 3
  %18669 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18662, <4 x float> %18668, <4 x float> %18654)
  %18670 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18671 = getelementptr inbounds i8, i8* %18670, i64 56
  %18672 = bitcast i8* %18671 to float*
  %18673 = load float, float* %18672, align 4
  %18674 = insertelement <4 x float> zeroinitializer, float %18673, i32 0
  %18675 = insertelement <4 x float> %18674, float 1.000000e+00, i32 1
  %18676 = insertelement <4 x float> %18675, float 1.000000e+00, i32 2
  %18677 = insertelement <4 x float> %18676, float 1.000000e+00, i32 3
  %18678 = getelementptr inbounds float, float* %2, i64 10
  %18679 = load float, float* %18678, align 4
  %18680 = insertelement <4 x float> zeroinitializer, float %18679, i32 0
  %18681 = insertelement <4 x float> %18680, float 0.000000e+00, i32 1
  %18682 = insertelement <4 x float> %18681, float 0.000000e+00, i32 2
  %18683 = insertelement <4 x float> %18682, float 0.000000e+00, i32 3
  %18684 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18677, <4 x float> %18683, <4 x float> %18669)
  %18685 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18686 = getelementptr inbounds i8, i8* %18685, i64 60
  %18687 = bitcast i8* %18686 to float*
  %18688 = load float, float* %18687, align 4
  %18689 = insertelement <4 x float> zeroinitializer, float %18688, i32 0
  %18690 = insertelement <4 x float> %18689, float 0.000000e+00, i32 1
  %18691 = insertelement <4 x float> %18690, float 0.000000e+00, i32 2
  %18692 = insertelement <4 x float> %18691, float 0.000000e+00, i32 3
  %18693 = getelementptr inbounds float, float* %2, i64 14
  %18694 = load float, float* %18693, align 4
  %18695 = insertelement <4 x float> zeroinitializer, float %18694, i32 0
  %18696 = insertelement <4 x float> %18695, float 0.000000e+00, i32 1
  %18697 = insertelement <4 x float> %18696, float 0.000000e+00, i32 2
  %18698 = insertelement <4 x float> %18697, float 0.000000e+00, i32 3
  %18699 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18692, <4 x float> %18698, <4 x float> %18684)
  %18700 = extractelement <4 x float> %18699, i32 0
  %18701 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18702 = getelementptr inbounds i8, i8* %18701, i64 56
  %18703 = bitcast i8* %18702 to float*
  store float %18700, float* %18703, align 4
  %18704 = extractelement <4 x float> %18699, i32 1
  %18705 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18706 = getelementptr inbounds i8, i8* %18705, i64 60
  %18707 = bitcast i8* %18706 to float*
  store float %18704, float* %18707, align 4
  %18708 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18709 = getelementptr inbounds i8, i8* %18708, i64 48
  %18710 = bitcast i8* %18709 to float*
  %18711 = load float, float* %18710, align 4
  %18712 = insertelement <4 x float> zeroinitializer, float %18711, i32 0
  %18713 = insertelement <4 x float> %18712, float 0.000000e+00, i32 1
  %18714 = insertelement <4 x float> %18713, float 0.000000e+00, i32 2
  %18715 = insertelement <4 x float> %18714, float 0.000000e+00, i32 3
  %18716 = getelementptr inbounds float, float* %2, i64 3
  %18717 = load float, float* %18716, align 4
  %18718 = insertelement <4 x float> zeroinitializer, float %18717, i32 0
  %18719 = insertelement <4 x float> %18718, float 0.000000e+00, i32 1
  %18720 = insertelement <4 x float> %18719, float 0.000000e+00, i32 2
  %18721 = insertelement <4 x float> %18720, float 0.000000e+00, i32 3
  %18722 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18715, <4 x float> %18721, <4 x float> zeroinitializer)
  %18723 = extractelement <4 x float> %18722, i32 0
  %18724 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18725 = getelementptr inbounds i8, i8* %18724, i64 60
  %18726 = bitcast i8* %18725 to float*
  store float %18723, float* %18726, align 4
  %18727 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18728 = getelementptr inbounds i8, i8* %18727, i64 48
  %18729 = bitcast i8* %18728 to float*
  %18730 = load float, float* %18729, align 4
  %18731 = insertelement <4 x float> zeroinitializer, float %18730, i32 0
  %18732 = insertelement <4 x float> %18731, float 1.000000e+00, i32 1
  %18733 = insertelement <4 x float> %18732, float 1.000000e+00, i32 2
  %18734 = insertelement <4 x float> %18733, float 1.000000e+00, i32 3
  %18735 = getelementptr inbounds float, float* %2, i64 3
  %18736 = load float, float* %18735, align 4
  %18737 = insertelement <4 x float> zeroinitializer, float %18736, i32 0
  %18738 = insertelement <4 x float> %18737, float 0.000000e+00, i32 1
  %18739 = insertelement <4 x float> %18738, float 0.000000e+00, i32 2
  %18740 = insertelement <4 x float> %18739, float 0.000000e+00, i32 3
  %18741 = fmul <4 x float> %18734, %18740
  %18742 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18743 = getelementptr inbounds i8, i8* %18742, i64 52
  %18744 = bitcast i8* %18743 to float*
  %18745 = load float, float* %18744, align 4
  %18746 = insertelement <4 x float> zeroinitializer, float %18745, i32 0
  %18747 = insertelement <4 x float> %18746, float 0.000000e+00, i32 1
  %18748 = insertelement <4 x float> %18747, float 0.000000e+00, i32 2
  %18749 = insertelement <4 x float> %18748, float 0.000000e+00, i32 3
  %18750 = getelementptr inbounds float, float* %2, i64 7
  %18751 = load float, float* %18750, align 4
  %18752 = insertelement <4 x float> zeroinitializer, float %18751, i32 0
  %18753 = insertelement <4 x float> %18752, float 0.000000e+00, i32 1
  %18754 = insertelement <4 x float> %18753, float 0.000000e+00, i32 2
  %18755 = insertelement <4 x float> %18754, float 0.000000e+00, i32 3
  %18756 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18749, <4 x float> %18755, <4 x float> %18741)
  %18757 = extractelement <4 x float> %18756, i32 0
  %18758 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18759 = getelementptr inbounds i8, i8* %18758, i64 60
  %18760 = bitcast i8* %18759 to float*
  store float %18757, float* %18760, align 4
  %18761 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18762 = getelementptr inbounds i8, i8* %18761, i64 48
  %18763 = bitcast i8* %18762 to float*
  %18764 = load float, float* %18763, align 4
  %18765 = insertelement <4 x float> zeroinitializer, float %18764, i32 0
  %18766 = insertelement <4 x float> %18765, float 1.000000e+00, i32 1
  %18767 = insertelement <4 x float> %18766, float 1.000000e+00, i32 2
  %18768 = insertelement <4 x float> %18767, float 1.000000e+00, i32 3
  %18769 = getelementptr inbounds float, float* %2, i64 3
  %18770 = load float, float* %18769, align 4
  %18771 = insertelement <4 x float> zeroinitializer, float %18770, i32 0
  %18772 = insertelement <4 x float> %18771, float 0.000000e+00, i32 1
  %18773 = insertelement <4 x float> %18772, float 0.000000e+00, i32 2
  %18774 = insertelement <4 x float> %18773, float 0.000000e+00, i32 3
  %18775 = fmul <4 x float> %18768, %18774
  %18776 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18777 = getelementptr inbounds i8, i8* %18776, i64 52
  %18778 = bitcast i8* %18777 to float*
  %18779 = load float, float* %18778, align 4
  %18780 = insertelement <4 x float> zeroinitializer, float %18779, i32 0
  %18781 = insertelement <4 x float> %18780, float 1.000000e+00, i32 1
  %18782 = insertelement <4 x float> %18781, float 1.000000e+00, i32 2
  %18783 = insertelement <4 x float> %18782, float 1.000000e+00, i32 3
  %18784 = getelementptr inbounds float, float* %2, i64 7
  %18785 = load float, float* %18784, align 4
  %18786 = insertelement <4 x float> zeroinitializer, float %18785, i32 0
  %18787 = insertelement <4 x float> %18786, float 0.000000e+00, i32 1
  %18788 = insertelement <4 x float> %18787, float 0.000000e+00, i32 2
  %18789 = insertelement <4 x float> %18788, float 0.000000e+00, i32 3
  %18790 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18783, <4 x float> %18789, <4 x float> %18775)
  %18791 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18792 = getelementptr inbounds i8, i8* %18791, i64 56
  %18793 = bitcast i8* %18792 to float*
  %18794 = load float, float* %18793, align 4
  %18795 = insertelement <4 x float> zeroinitializer, float %18794, i32 0
  %18796 = insertelement <4 x float> %18795, float 0.000000e+00, i32 1
  %18797 = insertelement <4 x float> %18796, float 0.000000e+00, i32 2
  %18798 = insertelement <4 x float> %18797, float 0.000000e+00, i32 3
  %18799 = getelementptr inbounds float, float* %2, i64 11
  %18800 = load float, float* %18799, align 4
  %18801 = insertelement <4 x float> zeroinitializer, float %18800, i32 0
  %18802 = insertelement <4 x float> %18801, float 0.000000e+00, i32 1
  %18803 = insertelement <4 x float> %18802, float 0.000000e+00, i32 2
  %18804 = insertelement <4 x float> %18803, float 0.000000e+00, i32 3
  %18805 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18798, <4 x float> %18804, <4 x float> %18790)
  %18806 = extractelement <4 x float> %18805, i32 0
  %18807 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18808 = getelementptr inbounds i8, i8* %18807, i64 60
  %18809 = bitcast i8* %18808 to float*
  store float %18806, float* %18809, align 4
  %18810 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18811 = getelementptr inbounds i8, i8* %18810, i64 48
  %18812 = bitcast i8* %18811 to float*
  %18813 = load float, float* %18812, align 4
  %18814 = insertelement <4 x float> zeroinitializer, float %18813, i32 0
  %18815 = insertelement <4 x float> %18814, float 1.000000e+00, i32 1
  %18816 = insertelement <4 x float> %18815, float 1.000000e+00, i32 2
  %18817 = insertelement <4 x float> %18816, float 1.000000e+00, i32 3
  %18818 = getelementptr inbounds float, float* %2, i64 3
  %18819 = load float, float* %18818, align 4
  %18820 = insertelement <4 x float> zeroinitializer, float %18819, i32 0
  %18821 = insertelement <4 x float> %18820, float 0.000000e+00, i32 1
  %18822 = insertelement <4 x float> %18821, float 0.000000e+00, i32 2
  %18823 = insertelement <4 x float> %18822, float 0.000000e+00, i32 3
  %18824 = fmul <4 x float> %18817, %18823
  %18825 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18826 = getelementptr inbounds i8, i8* %18825, i64 52
  %18827 = bitcast i8* %18826 to float*
  %18828 = load float, float* %18827, align 4
  %18829 = insertelement <4 x float> zeroinitializer, float %18828, i32 0
  %18830 = insertelement <4 x float> %18829, float 1.000000e+00, i32 1
  %18831 = insertelement <4 x float> %18830, float 1.000000e+00, i32 2
  %18832 = insertelement <4 x float> %18831, float 1.000000e+00, i32 3
  %18833 = getelementptr inbounds float, float* %2, i64 7
  %18834 = load float, float* %18833, align 4
  %18835 = insertelement <4 x float> zeroinitializer, float %18834, i32 0
  %18836 = insertelement <4 x float> %18835, float 0.000000e+00, i32 1
  %18837 = insertelement <4 x float> %18836, float 0.000000e+00, i32 2
  %18838 = insertelement <4 x float> %18837, float 0.000000e+00, i32 3
  %18839 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18832, <4 x float> %18838, <4 x float> %18824)
  %18840 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18841 = getelementptr inbounds i8, i8* %18840, i64 56
  %18842 = bitcast i8* %18841 to float*
  %18843 = load float, float* %18842, align 4
  %18844 = insertelement <4 x float> zeroinitializer, float %18843, i32 0
  %18845 = insertelement <4 x float> %18844, float 1.000000e+00, i32 1
  %18846 = insertelement <4 x float> %18845, float 1.000000e+00, i32 2
  %18847 = insertelement <4 x float> %18846, float 1.000000e+00, i32 3
  %18848 = getelementptr inbounds float, float* %2, i64 11
  %18849 = load float, float* %18848, align 4
  %18850 = insertelement <4 x float> zeroinitializer, float %18849, i32 0
  %18851 = insertelement <4 x float> %18850, float 0.000000e+00, i32 1
  %18852 = insertelement <4 x float> %18851, float 0.000000e+00, i32 2
  %18853 = insertelement <4 x float> %18852, float 0.000000e+00, i32 3
  %18854 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18847, <4 x float> %18853, <4 x float> %18839)
  %18855 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18856 = getelementptr inbounds i8, i8* %18855, i64 60
  %18857 = bitcast i8* %18856 to float*
  %18858 = load float, float* %18857, align 4
  %18859 = insertelement <4 x float> zeroinitializer, float %18858, i32 0
  %18860 = insertelement <4 x float> %18859, float 0.000000e+00, i32 1
  %18861 = insertelement <4 x float> %18860, float 0.000000e+00, i32 2
  %18862 = insertelement <4 x float> %18861, float 0.000000e+00, i32 3
  %18863 = getelementptr inbounds float, float* %2, i64 15
  %18864 = load float, float* %18863, align 4
  %18865 = insertelement <4 x float> zeroinitializer, float %18864, i32 0
  %18866 = insertelement <4 x float> %18865, float 0.000000e+00, i32 1
  %18867 = insertelement <4 x float> %18866, float 0.000000e+00, i32 2
  %18868 = insertelement <4 x float> %18867, float 0.000000e+00, i32 3
  %18869 = call <4 x float> @llvm.fma.v4f32(<4 x float> %18862, <4 x float> %18868, <4 x float> %18854)
  %18870 = extractelement <4 x float> %18869, i32 0
  %18871 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18872 = getelementptr inbounds i8, i8* %18871, i64 60
  %18873 = bitcast i8* %18872 to float*
  store float %18870, float* %18873, align 4
  %18874 = getelementptr inbounds float, float* %1, i64 1
  %18875 = bitcast float* %18874 to i32*
  %18876 = load i32, i32* %18875, align 4
  %18877 = sitofp i32 %18876 to float
  %18878 = insertelement <4 x float> zeroinitializer, float %18877, i32 0
  %18879 = getelementptr inbounds float, float* %1, i64 4
  %18880 = bitcast float* %18879 to i32*
  %18881 = load i32, i32* %18880, align 4
  %18882 = sitofp i32 %18881 to float
  %18883 = insertelement <4 x float> %18878, float %18882, i32 1
  %18884 = insertelement <4 x float> %18883, float 0.000000e+00, i32 2
  %18885 = insertelement <4 x float> %18884, float 0.000000e+00, i32 3
  %18886 = extractelement <4 x float> %18885, i32 0
  %18887 = fptosi float %18886 to i32
  %18888 = getelementptr inbounds float, float* %1, i64 4
  %18889 = bitcast float* %18888 to i32*
  store i32 %18887, i32* %18889, align 4
  %18890 = extractelement <4 x float> %18885, i32 1
  %18891 = fptosi float %18890 to i32
  %18892 = getelementptr inbounds float, float* %1, i64 1
  %18893 = bitcast float* %18892 to i32*
  store i32 %18891, i32* %18893, align 4
  br label %18894

18894:                                            ; preds = %18894, %.preheader33
  %18895 = phi i64 [ 2, %.preheader33 ], [ %18911, %18894 ]
  %18896 = getelementptr inbounds float, float* %1, i64 %18895
  %18897 = bitcast float* %18896 to i32*
  %18898 = load i32, i32* %18897, align 4
  %18899 = shl nuw nsw i64 %18895, 2
  %18900 = getelementptr inbounds float, float* %1, i64 %18899
  %18901 = bitcast float* %18900 to i32*
  %18902 = load i32, i32* %18901, align 4
  store i32 %18902, i32* %18897, align 4
  store i32 %18898, i32* %18901, align 4
  %18903 = or i64 %18895, 1
  %18904 = getelementptr inbounds float, float* %1, i64 %18903
  %18905 = bitcast float* %18904 to i32*
  %18906 = load i32, i32* %18905, align 4
  %18907 = shl nuw nsw i64 %18903, 2
  %18908 = getelementptr inbounds float, float* %1, i64 %18907
  %18909 = bitcast float* %18908 to i32*
  %18910 = load i32, i32* %18909, align 4
  store i32 %18910, i32* %18905, align 4
  store i32 %18906, i32* %18909, align 4
  %18911 = add nuw nsw i64 %18895, 2
  %18912 = icmp eq i64 %18911, 4
  br i1 %18912, label %.lr.ph.new.1, label %18894

.lr.ph.new.1:                                     ; preds = %.lr.ph.new.1, %18894
  %18913 = phi i64 [ %18933, %.lr.ph.new.1 ], [ 2, %18894 ]
  %18914 = add nuw nsw i64 %18913, 4
  %18915 = getelementptr inbounds float, float* %1, i64 %18914
  %18916 = bitcast float* %18915 to i32*
  %18917 = load i32, i32* %18916, align 4
  %18918 = shl nuw nsw i64 %18913, 2
  %18919 = or i64 %18918, 1
  %18920 = getelementptr inbounds float, float* %1, i64 %18919
  %18921 = bitcast float* %18920 to i32*
  %18922 = load i32, i32* %18921, align 4
  store i32 %18922, i32* %18916, align 4
  store i32 %18917, i32* %18921, align 4
  %18923 = or i64 %18913, 1
  %18924 = add nuw nsw i64 %18913, 5
  %18925 = getelementptr inbounds float, float* %1, i64 %18924
  %18926 = bitcast float* %18925 to i32*
  %18927 = load i32, i32* %18926, align 4
  %18928 = shl nuw nsw i64 %18923, 2
  %18929 = or i64 %18928, 1
  %18930 = getelementptr inbounds float, float* %1, i64 %18929
  %18931 = bitcast float* %18930 to i32*
  %18932 = load i32, i32* %18931, align 4
  store i32 %18932, i32* %18926, align 4
  store i32 %18927, i32* %18931, align 4
  %18933 = add nuw nsw i64 %18913, 2
  %18934 = icmp eq i64 %18933, 4
  br i1 %18934, label %.prol.preheader.2, label %.lr.ph.new.1

.prol.preheader.2:                                ; preds = %.lr.ph.new.1
  %18935 = bitcast float* %25 to i32*
  %18936 = load i32, i32* %18935, align 4
  %18937 = bitcast float* %24 to i32*
  %18938 = load i32, i32* %18937, align 4
  store i32 %18938, i32* %18935, align 4
  store i32 %18936, i32* %18937, align 4
  ret void
}

; Function Attrs: nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #1

; Function Attrs: allocsize(0,1)
declare i8* @calloc(i64, i64) #4

declare void @free(i8*) #5

; Function Attrs: noinline nounwind ssp uwtable
define i32 @main() #2 {
.preheader:
  %0 = alloca [16 x float], align 16
  %1 = alloca [16 x float], align 16
  %2 = alloca [16 x float], align 16
  %3 = bitcast [16 x float]* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(64) %3, i8* nonnull align 16 dereferenceable(64) bitcast ([16 x float]* @__const.main.A to i8*), i64 64, i1 false)
  %4 = bitcast [16 x float]* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(64) %4, i8 0, i64 64, i1 false)
  %5 = bitcast [16 x float]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  %6 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 0
  %7 = getelementptr inbounds [16 x float], [16 x float]* %1, i64 0, i64 0
  %8 = getelementptr inbounds [16 x float], [16 x float]* %2, i64 0, i64 0
  call void @naive_fixed_qr_decomp(float* nonnull %6, float* nonnull %7, float* nonnull %8)
  %9 = load float, float* %6, align 16
  %10 = fpext float %9 to double
  %11 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %10) #8
  %12 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 1
  %13 = load float, float* %12, align 4
  %14 = fpext float %13 to double
  %15 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %14) #8
  %16 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 2
  %17 = load float, float* %16, align 8
  %18 = fpext float %17 to double
  %19 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %18) #8
  %20 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 3
  %21 = load float, float* %20, align 4
  %22 = fpext float %21 to double
  %23 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %22) #8
  %24 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 4
  %25 = load float, float* %24, align 16
  %26 = fpext float %25 to double
  %27 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %26) #8
  %28 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 5
  %29 = load float, float* %28, align 4
  %30 = fpext float %29 to double
  %31 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %30) #8
  %32 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 6
  %33 = load float, float* %32, align 8
  %34 = fpext float %33 to double
  %35 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %34) #8
  %36 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 7
  %37 = load float, float* %36, align 4
  %38 = fpext float %37 to double
  %39 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %38) #8
  %40 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 8
  %41 = load float, float* %40, align 16
  %42 = fpext float %41 to double
  %43 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %42) #8
  %44 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 9
  %45 = load float, float* %44, align 4
  %46 = fpext float %45 to double
  %47 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %46) #8
  %48 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 10
  %49 = load float, float* %48, align 8
  %50 = fpext float %49 to double
  %51 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %50) #8
  %52 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 11
  %53 = load float, float* %52, align 4
  %54 = fpext float %53 to double
  %55 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %54) #8
  %56 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 12
  %57 = load float, float* %56, align 16
  %58 = fpext float %57 to double
  %59 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %58) #8
  %60 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 13
  %61 = load float, float* %60, align 4
  %62 = fpext float %61 to double
  %63 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %62) #8
  %64 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 14
  %65 = load float, float* %64, align 8
  %66 = fpext float %65 to double
  %67 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %66) #8
  %68 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 15
  %69 = load float, float* %68, align 4
  %70 = fpext float %69 to double
  %71 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %70) #8
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare i32 @printf(i8*, ...) #5

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.v4f32(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.sqrt.v4f32(<4 x float>) #1

attributes #0 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { argmemonly nounwind willreturn writeonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 11.0.1"}
