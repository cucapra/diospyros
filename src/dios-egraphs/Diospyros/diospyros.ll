; ModuleID = 'aa.ll'
source_filename = "llvm-tests/qr-decomp-fixed-size.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.14.0"

@__const.main.A = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00], align 16
@.str = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1

; Function Attrs: alwaysinline nounwind ssp uwtable
define float @sgn(float %0) #0 {
  %2 = fcmp ogt float %0, 0.000000e+00
  %3 = zext i1 %2 to i32
  %4 = fcmp olt float %0, 0.000000e+00
  %5 = sext i1 %4 to i32
  %6 = add nsw i32 %5, %3
  %7 = sitofp i32 %6 to float
  ret float %7
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define float @naive_norm(float* %0, i32 %1) #0 {
  %3 = icmp sgt i32 %1, 0
  %4 = select i1 %3, i32 %1, i32 0
  %5 = zext i32 %4 to i64
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %2
  %6 = and i64 %5, 1
  %7 = icmp eq i32 %4, 1
  br i1 %7, label %._crit_edge.unr-lcssa, label %.lr.ph.new

.lr.ph.new:                                       ; preds = %.lr.ph
  %8 = and i64 %5, 2147483646
  br label %9

9:                                                ; preds = %9, %.lr.ph.new
  %10 = phi float [ 0.000000e+00, %.lr.ph.new ], [ %27, %9 ]
  %11 = phi i64 [ 0, %.lr.ph.new ], [ %28, %9 ]
  %12 = phi i64 [ %8, %.lr.ph.new ], [ %29, %9 ]
  %13 = getelementptr inbounds float, float* %0, i64 %11
  %14 = load float, float* %13, align 4
  %15 = fpext float %14 to double
  %16 = fmul double %15, %15
  %17 = fpext float %10 to double
  %18 = fadd double %16, %17
  %19 = fptrunc double %18 to float
  %20 = or i64 %11, 1
  %21 = getelementptr inbounds float, float* %0, i64 %20
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  %24 = fmul double %23, %23
  %25 = fpext float %19 to double
  %26 = fadd double %24, %25
  %27 = fptrunc double %26 to float
  %28 = add nuw nsw i64 %11, 2
  %29 = add i64 %12, -2
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %._crit_edge.unr-lcssa, label %9

._crit_edge.unr-lcssa:                            ; preds = %9, %.lr.ph
  %31 = phi float [ undef, %.lr.ph ], [ %27, %9 ]
  %32 = phi float [ 0.000000e+00, %.lr.ph ], [ %27, %9 ]
  %33 = phi i64 [ 0, %.lr.ph ], [ %28, %9 ]
  %34 = icmp eq i64 %6, 0
  br i1 %34, label %._crit_edge, label %.epil.preheader

.epil.preheader:                                  ; preds = %._crit_edge.unr-lcssa
  %35 = getelementptr inbounds float, float* %0, i64 %33
  %36 = load float, float* %35, align 4
  %37 = fpext float %36 to double
  %38 = fmul double %37, %37
  %39 = fpext float %32 to double
  %40 = fadd double %38, %39
  %41 = fptrunc double %40 to float
  br label %._crit_edge

._crit_edge:                                      ; preds = %.epil.preheader, %._crit_edge.unr-lcssa, %2
  %42 = phi float [ 0.000000e+00, %2 ], [ %31, %._crit_edge.unr-lcssa ], [ %41, %.epil.preheader ]
  %43 = call float @llvm.sqrt.f32(float %42)
  ret float %43
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.pow.f64(double, double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32(float) #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @naive_fixed_transpose(float* %0) #0 {
.lr.ph:
  %1 = getelementptr inbounds float, float* %0, i64 1
  %2 = bitcast float* %1 to i32*
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds float, float* %0, i64 4
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %2, align 4
  store i32 %3, i32* %5, align 4
  br label %7

7:                                                ; preds = %7, %.lr.ph
  %8 = phi i64 [ 2, %.lr.ph ], [ %24, %7 ]
  %9 = getelementptr inbounds float, float* %0, i64 %8
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = shl nuw nsw i64 %8, 2
  %13 = getelementptr inbounds float, float* %0, i64 %12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %10, align 4
  store i32 %11, i32* %14, align 4
  %16 = or i64 %8, 1
  %17 = getelementptr inbounds float, float* %0, i64 %16
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = shl nuw nsw i64 %16, 2
  %21 = getelementptr inbounds float, float* %0, i64 %20
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %18, align 4
  store i32 %19, i32* %22, align 4
  %24 = add nuw nsw i64 %8, 2
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %.lr.ph.new.1, label %7

.lr.ph.new.1:                                     ; preds = %.lr.ph.new.1, %7
  %26 = phi i64 [ %46, %.lr.ph.new.1 ], [ 2, %7 ]
  %27 = add nuw nsw i64 %26, 4
  %28 = getelementptr inbounds float, float* %0, i64 %27
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = shl nuw nsw i64 %26, 2
  %32 = or i64 %31, 1
  %33 = getelementptr inbounds float, float* %0, i64 %32
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %29, align 4
  store i32 %30, i32* %34, align 4
  %36 = or i64 %26, 1
  %37 = add nuw nsw i64 %26, 5
  %38 = getelementptr inbounds float, float* %0, i64 %37
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = shl nuw nsw i64 %36, 2
  %42 = or i64 %41, 1
  %43 = getelementptr inbounds float, float* %0, i64 %42
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %39, align 4
  store i32 %40, i32* %44, align 4
  %46 = add nuw nsw i64 %26, 2
  %47 = icmp eq i64 %46, 4
  br i1 %47, label %.prol.preheader.2, label %.lr.ph.new.1

.prol.preheader.2:                                ; preds = %.lr.ph.new.1
  %48 = getelementptr inbounds float, float* %0, i64 11
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds float, float* %0, i64 14
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %49, align 4
  store i32 %50, i32* %52, align 4
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @naive_fixed_matrix_multiply(float* %0, float* %1, float* %2) #0 {
.preheader:
  %3 = load float, float* %0, align 4
  %4 = load float, float* %1, align 4
  %5 = fmul float %3, %4
  %6 = fadd float %5, 0.000000e+00
  %7 = getelementptr inbounds float, float* %0, i64 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds float, float* %1, i64 4
  %10 = load float, float* %9, align 4
  %11 = fmul float %8, %10
  %12 = fadd float %6, %11
  %13 = getelementptr inbounds float, float* %0, i64 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds float, float* %1, i64 8
  %16 = load float, float* %15, align 4
  %17 = fmul float %14, %16
  %18 = fadd float %12, %17
  %19 = getelementptr inbounds float, float* %0, i64 3
  %20 = load float, float* %19, align 4
  %21 = load float, float* %0, align 4
  %22 = getelementptr inbounds float, float* %1, i64 12
  %23 = load float, float* %22, align 4
  %24 = fmul float %20, %23
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds float, float* %2, i64 1
  %27 = getelementptr inbounds float, float* %1, i64 1
  %28 = load float, float* %27, align 4
  %29 = fmul float %21, %28
  %30 = fadd float %29, 0.000000e+00
  %31 = load float, float* %7, align 4
  %32 = getelementptr inbounds float, float* %1, i64 5
  %33 = load float, float* %32, align 4
  %34 = fmul float %31, %33
  %35 = fadd float %30, %34
  %36 = load float, float* %13, align 4
  %37 = getelementptr inbounds float, float* %1, i64 9
  %38 = load float, float* %37, align 4
  %39 = fmul float %36, %38
  %40 = fadd float %35, %39
  %41 = load float, float* %19, align 4
  %42 = load float, float* %0, align 4
  %43 = getelementptr inbounds float, float* %1, i64 13
  %44 = load float, float* %43, align 4
  %45 = fmul float %41, %44
  %46 = fadd float %40, %45
  %47 = getelementptr inbounds float, float* %2, i64 2
  %48 = getelementptr inbounds float, float* %1, i64 2
  %49 = load float, float* %48, align 4
  %50 = fmul float %42, %49
  %51 = fadd float %50, 0.000000e+00
  %52 = load float, float* %7, align 4
  %53 = getelementptr inbounds float, float* %1, i64 6
  %54 = load float, float* %53, align 4
  %55 = fmul float %52, %54
  %56 = fadd float %51, %55
  %57 = load float, float* %13, align 4
  %58 = getelementptr inbounds float, float* %1, i64 10
  %59 = load float, float* %58, align 4
  %60 = fmul float %57, %59
  %61 = fadd float %56, %60
  %62 = load float, float* %19, align 4
  %63 = load float, float* %0, align 4
  %64 = getelementptr inbounds float, float* %1, i64 14
  %65 = load float, float* %64, align 4
  %66 = fmul float %62, %65
  %67 = fadd float %61, %66
  %68 = getelementptr inbounds float, float* %2, i64 3
  %69 = getelementptr inbounds float, float* %1, i64 3
  %70 = load float, float* %69, align 4
  %71 = fmul float %63, %70
  %72 = fadd float %71, 0.000000e+00
  %73 = load float, float* %7, align 4
  %74 = getelementptr inbounds float, float* %1, i64 7
  %75 = load float, float* %74, align 4
  %76 = fmul float %73, %75
  %77 = fadd float %72, %76
  %78 = load float, float* %13, align 4
  %79 = getelementptr inbounds float, float* %1, i64 11
  %80 = load float, float* %79, align 4
  %81 = fmul float %78, %80
  %82 = fadd float %77, %81
  %83 = load float, float* %19, align 4
  %84 = getelementptr inbounds float, float* %1, i64 15
  %85 = load float, float* %84, align 4
  %86 = fmul float %83, %85
  %87 = fadd float %82, %86
  %88 = getelementptr inbounds float, float* %0, i64 4
  %89 = getelementptr inbounds float, float* %2, i64 4
  %90 = load float, float* %88, align 4
  %91 = load float, float* %1, align 4
  %92 = fmul float %90, %91
  %93 = fadd float %92, 0.000000e+00
  %94 = getelementptr inbounds float, float* %0, i64 5
  %95 = load float, float* %94, align 4
  %96 = load float, float* %9, align 4
  %97 = fmul float %95, %96
  %98 = fadd float %93, %97
  %99 = getelementptr inbounds float, float* %0, i64 6
  %100 = load float, float* %99, align 4
  %101 = load float, float* %15, align 4
  %102 = fmul float %100, %101
  %103 = fadd float %98, %102
  %104 = getelementptr inbounds float, float* %0, i64 7
  %105 = load float, float* %104, align 4
  %106 = load float, float* %22, align 4
  %107 = fmul float %105, %106
  %108 = fadd float %103, %107
  %109 = getelementptr inbounds float, float* %2, i64 5
  %110 = load float, float* %88, align 4
  %111 = load float, float* %27, align 4
  %112 = fmul float %110, %111
  %113 = fadd float %112, 0.000000e+00
  %114 = load float, float* %94, align 4
  %115 = load float, float* %32, align 4
  %116 = fmul float %114, %115
  %117 = fadd float %113, %116
  %118 = load float, float* %99, align 4
  %119 = load float, float* %37, align 4
  %120 = fmul float %118, %119
  %121 = fadd float %117, %120
  %122 = load float, float* %104, align 4
  %123 = load float, float* %43, align 4
  %124 = fmul float %122, %123
  %125 = fadd float %121, %124
  %126 = getelementptr inbounds float, float* %2, i64 6
  %127 = load float, float* %88, align 4
  %128 = load float, float* %48, align 4
  %129 = fmul float %127, %128
  %130 = fadd float %129, 0.000000e+00
  %131 = load float, float* %94, align 4
  %132 = load float, float* %53, align 4
  %133 = fmul float %131, %132
  %134 = fadd float %130, %133
  %135 = load float, float* %99, align 4
  %136 = load float, float* %58, align 4
  %137 = fmul float %135, %136
  %138 = fadd float %134, %137
  %139 = load float, float* %104, align 4
  %140 = load float, float* %64, align 4
  %141 = fmul float %139, %140
  %142 = fadd float %138, %141
  %143 = getelementptr inbounds float, float* %2, i64 7
  %144 = load float, float* %88, align 4
  %145 = load float, float* %69, align 4
  %146 = fmul float %144, %145
  %147 = fadd float %146, 0.000000e+00
  %148 = load float, float* %94, align 4
  %149 = load float, float* %74, align 4
  %150 = fmul float %148, %149
  %151 = fadd float %147, %150
  %152 = load float, float* %99, align 4
  %153 = load float, float* %79, align 4
  %154 = fmul float %152, %153
  %155 = fadd float %151, %154
  %156 = load float, float* %104, align 4
  %157 = load float, float* %84, align 4
  %158 = fmul float %156, %157
  %159 = fadd float %155, %158
  %160 = getelementptr inbounds float, float* %0, i64 8
  %161 = getelementptr inbounds float, float* %2, i64 8
  %162 = load float, float* %160, align 4
  %163 = load float, float* %1, align 4
  %164 = fmul float %162, %163
  %165 = fadd float %164, 0.000000e+00
  %166 = getelementptr inbounds float, float* %0, i64 9
  %167 = load float, float* %166, align 4
  %168 = load float, float* %9, align 4
  %169 = fmul float %167, %168
  %170 = fadd float %165, %169
  %171 = getelementptr inbounds float, float* %0, i64 10
  %172 = load float, float* %171, align 4
  %173 = load float, float* %15, align 4
  %174 = fmul float %172, %173
  %175 = fadd float %170, %174
  %176 = getelementptr inbounds float, float* %0, i64 11
  %177 = load float, float* %176, align 4
  %178 = load float, float* %22, align 4
  %179 = fmul float %177, %178
  %180 = fadd float %175, %179
  %181 = getelementptr inbounds float, float* %2, i64 9
  %182 = load float, float* %160, align 4
  %183 = load float, float* %27, align 4
  %184 = fmul float %182, %183
  %185 = fadd float %184, 0.000000e+00
  %186 = load float, float* %166, align 4
  %187 = load float, float* %32, align 4
  %188 = fmul float %186, %187
  %189 = fadd float %185, %188
  %190 = load float, float* %171, align 4
  %191 = load float, float* %37, align 4
  %192 = fmul float %190, %191
  %193 = fadd float %189, %192
  %194 = load float, float* %176, align 4
  %195 = load float, float* %43, align 4
  %196 = fmul float %194, %195
  %197 = fadd float %193, %196
  %198 = getelementptr inbounds float, float* %2, i64 10
  %199 = load float, float* %160, align 4
  %200 = load float, float* %48, align 4
  %201 = fmul float %199, %200
  %202 = fadd float %201, 0.000000e+00
  %203 = load float, float* %166, align 4
  %204 = load float, float* %53, align 4
  %205 = fmul float %203, %204
  %206 = fadd float %202, %205
  %207 = load float, float* %171, align 4
  %208 = load float, float* %58, align 4
  %209 = fmul float %207, %208
  %210 = fadd float %206, %209
  %211 = load float, float* %176, align 4
  %212 = load float, float* %64, align 4
  %213 = fmul float %211, %212
  %214 = fadd float %210, %213
  %215 = getelementptr inbounds float, float* %2, i64 11
  %216 = load float, float* %160, align 4
  %217 = load float, float* %69, align 4
  %218 = fmul float %216, %217
  %219 = fadd float %218, 0.000000e+00
  %220 = load float, float* %166, align 4
  %221 = load float, float* %74, align 4
  %222 = fmul float %220, %221
  %223 = fadd float %219, %222
  %224 = load float, float* %171, align 4
  %225 = load float, float* %79, align 4
  %226 = fmul float %224, %225
  %227 = fadd float %223, %226
  %228 = load float, float* %176, align 4
  %229 = load float, float* %84, align 4
  %230 = fmul float %228, %229
  %231 = fadd float %227, %230
  %232 = getelementptr inbounds float, float* %0, i64 12
  %233 = getelementptr inbounds float, float* %2, i64 12
  %234 = load float, float* %232, align 4
  %235 = load float, float* %1, align 4
  %236 = fmul float %234, %235
  %237 = fadd float %236, 0.000000e+00
  %238 = getelementptr inbounds float, float* %0, i64 13
  %239 = load float, float* %238, align 4
  %240 = load float, float* %9, align 4
  %241 = fmul float %239, %240
  %242 = fadd float %237, %241
  %243 = getelementptr inbounds float, float* %0, i64 14
  %244 = load float, float* %243, align 4
  %245 = load float, float* %15, align 4
  %246 = fmul float %244, %245
  %247 = fadd float %242, %246
  %248 = getelementptr inbounds float, float* %0, i64 15
  %249 = load float, float* %248, align 4
  %250 = load float, float* %22, align 4
  %251 = fmul float %249, %250
  %252 = fadd float %247, %251
  %253 = getelementptr inbounds float, float* %2, i64 13
  %254 = load float, float* %232, align 4
  %255 = load float, float* %27, align 4
  %256 = fmul float %254, %255
  %257 = fadd float %256, 0.000000e+00
  %258 = load float, float* %238, align 4
  %259 = load float, float* %32, align 4
  %260 = fmul float %258, %259
  %261 = fadd float %257, %260
  %262 = load float, float* %243, align 4
  %263 = load float, float* %37, align 4
  %264 = fmul float %262, %263
  %265 = fadd float %261, %264
  %266 = load float, float* %248, align 4
  %267 = load float, float* %43, align 4
  %268 = fmul float %266, %267
  %269 = fadd float %265, %268
  %270 = getelementptr inbounds float, float* %2, i64 14
  %271 = load float, float* %232, align 4
  %272 = load float, float* %48, align 4
  %273 = fmul float %271, %272
  %274 = fadd float %273, 0.000000e+00
  %275 = load float, float* %238, align 4
  %276 = load float, float* %53, align 4
  %277 = fmul float %275, %276
  %278 = fadd float %274, %277
  %279 = load float, float* %243, align 4
  %280 = load float, float* %58, align 4
  %281 = fmul float %279, %280
  %282 = fadd float %278, %281
  %283 = load float, float* %248, align 4
  %284 = load float, float* %64, align 4
  %285 = fmul float %283, %284
  %286 = fadd float %282, %285
  %287 = getelementptr inbounds float, float* %2, i64 15
  %288 = load float, float* %232, align 4
  %289 = load float, float* %69, align 4
  %290 = fmul float %288, %289
  %291 = fadd float %290, 0.000000e+00
  %292 = load float, float* %238, align 4
  %293 = load float, float* %74, align 4
  %294 = fmul float %292, %293
  %295 = fadd float %291, %294
  %296 = load float, float* %243, align 4
  %297 = load float, float* %79, align 4
  %298 = fmul float %296, %297
  %299 = fadd float %295, %298
  %300 = load float, float* %248, align 4
  %301 = load float, float* %84, align 4
  %302 = fmul float %300, %301
  %303 = fadd float %299, %302
  store float 0.000000e+00, float* %2, align 4
  %304 = load float, float* %0, align 4
  %305 = insertelement <4 x float> zeroinitializer, float %304, i32 0
  %306 = insertelement <4 x float> %305, float 0.000000e+00, i32 1
  %307 = insertelement <4 x float> %306, float 0.000000e+00, i32 2
  %308 = insertelement <4 x float> %307, float 0.000000e+00, i32 3
  %309 = load float, float* %1, align 4
  %310 = insertelement <4 x float> zeroinitializer, float %309, i32 0
  %311 = insertelement <4 x float> %310, float 0.000000e+00, i32 1
  %312 = insertelement <4 x float> %311, float 0.000000e+00, i32 2
  %313 = insertelement <4 x float> %312, float 0.000000e+00, i32 3
  %314 = call <4 x float> @llvm.fma.f32(<4 x float> %308, <4 x float> %313, <4 x float> zeroinitializer)
  %315 = extractelement <4 x float> %314, i32 0
  store float %315, float* %2, align 4
  %316 = load float, float* %0, align 4
  %317 = insertelement <4 x float> zeroinitializer, float %316, i32 0
  %318 = insertelement <4 x float> %317, float 1.000000e+00, i32 1
  %319 = insertelement <4 x float> %318, float 1.000000e+00, i32 2
  %320 = insertelement <4 x float> %319, float 1.000000e+00, i32 3
  %321 = load float, float* %1, align 4
  %322 = insertelement <4 x float> zeroinitializer, float %321, i32 0
  %323 = insertelement <4 x float> %322, float 0.000000e+00, i32 1
  %324 = insertelement <4 x float> %323, float 0.000000e+00, i32 2
  %325 = insertelement <4 x float> %324, float 0.000000e+00, i32 3
  %326 = fmul <4 x float> %320, %325
  %327 = fadd <4 x float> %326, zeroinitializer
  %328 = getelementptr inbounds float, float* %0, i64 1
  %329 = load float, float* %328, align 4
  %330 = insertelement <4 x float> zeroinitializer, float %329, i32 0
  %331 = insertelement <4 x float> %330, float 0.000000e+00, i32 1
  %332 = insertelement <4 x float> %331, float 0.000000e+00, i32 2
  %333 = insertelement <4 x float> %332, float 0.000000e+00, i32 3
  %334 = getelementptr inbounds float, float* %1, i64 4
  %335 = load float, float* %334, align 4
  %336 = insertelement <4 x float> zeroinitializer, float %335, i32 0
  %337 = insertelement <4 x float> %336, float 0.000000e+00, i32 1
  %338 = insertelement <4 x float> %337, float 0.000000e+00, i32 2
  %339 = insertelement <4 x float> %338, float 0.000000e+00, i32 3
  %340 = call <4 x float> @llvm.fma.f32.1(<4 x float> %333, <4 x float> %339, <4 x float> %327)
  %341 = extractelement <4 x float> %340, i32 0
  store float %341, float* %2, align 4
  %342 = load float, float* %0, align 4
  %343 = insertelement <4 x float> zeroinitializer, float %342, i32 0
  %344 = insertelement <4 x float> %343, float 1.000000e+00, i32 1
  %345 = insertelement <4 x float> %344, float 1.000000e+00, i32 2
  %346 = insertelement <4 x float> %345, float 1.000000e+00, i32 3
  %347 = load float, float* %1, align 4
  %348 = insertelement <4 x float> zeroinitializer, float %347, i32 0
  %349 = insertelement <4 x float> %348, float 0.000000e+00, i32 1
  %350 = insertelement <4 x float> %349, float 0.000000e+00, i32 2
  %351 = insertelement <4 x float> %350, float 0.000000e+00, i32 3
  %352 = fmul <4 x float> %346, %351
  %353 = fadd <4 x float> %352, zeroinitializer
  %354 = getelementptr inbounds float, float* %0, i64 1
  %355 = load float, float* %354, align 4
  %356 = insertelement <4 x float> zeroinitializer, float %355, i32 0
  %357 = insertelement <4 x float> %356, float 1.000000e+00, i32 1
  %358 = insertelement <4 x float> %357, float 1.000000e+00, i32 2
  %359 = insertelement <4 x float> %358, float 1.000000e+00, i32 3
  %360 = getelementptr inbounds float, float* %1, i64 4
  %361 = load float, float* %360, align 4
  %362 = insertelement <4 x float> zeroinitializer, float %361, i32 0
  %363 = insertelement <4 x float> %362, float 0.000000e+00, i32 1
  %364 = insertelement <4 x float> %363, float 0.000000e+00, i32 2
  %365 = insertelement <4 x float> %364, float 0.000000e+00, i32 3
  %366 = call <4 x float> @llvm.fma.f32.2(<4 x float> %359, <4 x float> %365, <4 x float> %353)
  %367 = getelementptr inbounds float, float* %0, i64 2
  %368 = load float, float* %367, align 4
  %369 = insertelement <4 x float> zeroinitializer, float %368, i32 0
  %370 = insertelement <4 x float> %369, float 0.000000e+00, i32 1
  %371 = insertelement <4 x float> %370, float 0.000000e+00, i32 2
  %372 = insertelement <4 x float> %371, float 0.000000e+00, i32 3
  %373 = getelementptr inbounds float, float* %1, i64 8
  %374 = load float, float* %373, align 4
  %375 = insertelement <4 x float> zeroinitializer, float %374, i32 0
  %376 = insertelement <4 x float> %375, float 0.000000e+00, i32 1
  %377 = insertelement <4 x float> %376, float 0.000000e+00, i32 2
  %378 = insertelement <4 x float> %377, float 0.000000e+00, i32 3
  %379 = call <4 x float> @llvm.fma.f32.3(<4 x float> %372, <4 x float> %378, <4 x float> %366)
  %380 = extractelement <4 x float> %379, i32 0
  store float %380, float* %2, align 4
  %381 = load float, float* %0, align 4
  %382 = insertelement <4 x float> zeroinitializer, float %381, i32 0
  %383 = insertelement <4 x float> %382, float 1.000000e+00, i32 1
  %384 = insertelement <4 x float> %383, float 1.000000e+00, i32 2
  %385 = insertelement <4 x float> %384, float 1.000000e+00, i32 3
  %386 = load float, float* %1, align 4
  %387 = insertelement <4 x float> zeroinitializer, float %386, i32 0
  %388 = insertelement <4 x float> %387, float 0.000000e+00, i32 1
  %389 = insertelement <4 x float> %388, float 0.000000e+00, i32 2
  %390 = insertelement <4 x float> %389, float 0.000000e+00, i32 3
  %391 = fmul <4 x float> %385, %390
  %392 = fadd <4 x float> %391, zeroinitializer
  %393 = getelementptr inbounds float, float* %0, i64 1
  %394 = load float, float* %393, align 4
  %395 = insertelement <4 x float> zeroinitializer, float %394, i32 0
  %396 = insertelement <4 x float> %395, float 1.000000e+00, i32 1
  %397 = insertelement <4 x float> %396, float 1.000000e+00, i32 2
  %398 = insertelement <4 x float> %397, float 1.000000e+00, i32 3
  %399 = getelementptr inbounds float, float* %1, i64 4
  %400 = load float, float* %399, align 4
  %401 = insertelement <4 x float> zeroinitializer, float %400, i32 0
  %402 = insertelement <4 x float> %401, float 0.000000e+00, i32 1
  %403 = insertelement <4 x float> %402, float 0.000000e+00, i32 2
  %404 = insertelement <4 x float> %403, float 0.000000e+00, i32 3
  %405 = call <4 x float> @llvm.fma.f32.4(<4 x float> %398, <4 x float> %404, <4 x float> %392)
  %406 = getelementptr inbounds float, float* %0, i64 2
  %407 = load float, float* %406, align 4
  %408 = insertelement <4 x float> zeroinitializer, float %407, i32 0
  %409 = insertelement <4 x float> %408, float 1.000000e+00, i32 1
  %410 = insertelement <4 x float> %409, float 1.000000e+00, i32 2
  %411 = insertelement <4 x float> %410, float 1.000000e+00, i32 3
  %412 = getelementptr inbounds float, float* %1, i64 8
  %413 = load float, float* %412, align 4
  %414 = insertelement <4 x float> zeroinitializer, float %413, i32 0
  %415 = insertelement <4 x float> %414, float 0.000000e+00, i32 1
  %416 = insertelement <4 x float> %415, float 0.000000e+00, i32 2
  %417 = insertelement <4 x float> %416, float 0.000000e+00, i32 3
  %418 = call <4 x float> @llvm.fma.f32.5(<4 x float> %411, <4 x float> %417, <4 x float> %405)
  %419 = getelementptr inbounds float, float* %0, i64 3
  %420 = load float, float* %419, align 4
  %421 = insertelement <4 x float> zeroinitializer, float %420, i32 0
  %422 = insertelement <4 x float> %421, float 0.000000e+00, i32 1
  %423 = insertelement <4 x float> %422, float 0.000000e+00, i32 2
  %424 = insertelement <4 x float> %423, float 0.000000e+00, i32 3
  %425 = getelementptr inbounds float, float* %1, i64 12
  %426 = load float, float* %425, align 4
  %427 = insertelement <4 x float> zeroinitializer, float %426, i32 0
  %428 = insertelement <4 x float> %427, float 0.000000e+00, i32 1
  %429 = insertelement <4 x float> %428, float 0.000000e+00, i32 2
  %430 = insertelement <4 x float> %429, float 0.000000e+00, i32 3
  %431 = call <4 x float> @llvm.fma.f32.6(<4 x float> %424, <4 x float> %430, <4 x float> %418)
  %432 = extractelement <4 x float> %431, i32 0
  store float %432, float* %2, align 4
  %433 = extractelement <4 x float> %431, i32 1
  %434 = getelementptr inbounds float, float* %2, i64 1
  store float %433, float* %434, align 4
  %435 = load float, float* %0, align 4
  %436 = insertelement <4 x float> zeroinitializer, float %435, i32 0
  %437 = insertelement <4 x float> %436, float 0.000000e+00, i32 1
  %438 = insertelement <4 x float> %437, float 0.000000e+00, i32 2
  %439 = insertelement <4 x float> %438, float 0.000000e+00, i32 3
  %440 = getelementptr inbounds float, float* %1, i64 1
  %441 = load float, float* %440, align 4
  %442 = insertelement <4 x float> zeroinitializer, float %441, i32 0
  %443 = insertelement <4 x float> %442, float 0.000000e+00, i32 1
  %444 = insertelement <4 x float> %443, float 0.000000e+00, i32 2
  %445 = insertelement <4 x float> %444, float 0.000000e+00, i32 3
  %446 = call <4 x float> @llvm.fma.f32.7(<4 x float> %439, <4 x float> %445, <4 x float> zeroinitializer)
  %447 = extractelement <4 x float> %446, i32 0
  %448 = getelementptr inbounds float, float* %2, i64 1
  store float %447, float* %448, align 4
  %449 = load float, float* %0, align 4
  %450 = insertelement <4 x float> zeroinitializer, float %449, i32 0
  %451 = insertelement <4 x float> %450, float 1.000000e+00, i32 1
  %452 = insertelement <4 x float> %451, float 1.000000e+00, i32 2
  %453 = insertelement <4 x float> %452, float 1.000000e+00, i32 3
  %454 = getelementptr inbounds float, float* %1, i64 1
  %455 = load float, float* %454, align 4
  %456 = insertelement <4 x float> zeroinitializer, float %455, i32 0
  %457 = insertelement <4 x float> %456, float 0.000000e+00, i32 1
  %458 = insertelement <4 x float> %457, float 0.000000e+00, i32 2
  %459 = insertelement <4 x float> %458, float 0.000000e+00, i32 3
  %460 = fmul <4 x float> %453, %459
  %461 = fadd <4 x float> %460, zeroinitializer
  %462 = getelementptr inbounds float, float* %0, i64 1
  %463 = load float, float* %462, align 4
  %464 = insertelement <4 x float> zeroinitializer, float %463, i32 0
  %465 = insertelement <4 x float> %464, float 0.000000e+00, i32 1
  %466 = insertelement <4 x float> %465, float 0.000000e+00, i32 2
  %467 = insertelement <4 x float> %466, float 0.000000e+00, i32 3
  %468 = getelementptr inbounds float, float* %1, i64 5
  %469 = load float, float* %468, align 4
  %470 = insertelement <4 x float> zeroinitializer, float %469, i32 0
  %471 = insertelement <4 x float> %470, float 0.000000e+00, i32 1
  %472 = insertelement <4 x float> %471, float 0.000000e+00, i32 2
  %473 = insertelement <4 x float> %472, float 0.000000e+00, i32 3
  %474 = call <4 x float> @llvm.fma.f32.8(<4 x float> %467, <4 x float> %473, <4 x float> %461)
  %475 = extractelement <4 x float> %474, i32 0
  %476 = getelementptr inbounds float, float* %2, i64 1
  store float %475, float* %476, align 4
  %477 = load float, float* %0, align 4
  %478 = insertelement <4 x float> zeroinitializer, float %477, i32 0
  %479 = insertelement <4 x float> %478, float 1.000000e+00, i32 1
  %480 = insertelement <4 x float> %479, float 1.000000e+00, i32 2
  %481 = insertelement <4 x float> %480, float 1.000000e+00, i32 3
  %482 = getelementptr inbounds float, float* %1, i64 1
  %483 = load float, float* %482, align 4
  %484 = insertelement <4 x float> zeroinitializer, float %483, i32 0
  %485 = insertelement <4 x float> %484, float 0.000000e+00, i32 1
  %486 = insertelement <4 x float> %485, float 0.000000e+00, i32 2
  %487 = insertelement <4 x float> %486, float 0.000000e+00, i32 3
  %488 = fmul <4 x float> %481, %487
  %489 = fadd <4 x float> %488, zeroinitializer
  %490 = getelementptr inbounds float, float* %0, i64 1
  %491 = load float, float* %490, align 4
  %492 = insertelement <4 x float> zeroinitializer, float %491, i32 0
  %493 = insertelement <4 x float> %492, float 1.000000e+00, i32 1
  %494 = insertelement <4 x float> %493, float 1.000000e+00, i32 2
  %495 = insertelement <4 x float> %494, float 1.000000e+00, i32 3
  %496 = getelementptr inbounds float, float* %1, i64 5
  %497 = load float, float* %496, align 4
  %498 = insertelement <4 x float> zeroinitializer, float %497, i32 0
  %499 = insertelement <4 x float> %498, float 0.000000e+00, i32 1
  %500 = insertelement <4 x float> %499, float 0.000000e+00, i32 2
  %501 = insertelement <4 x float> %500, float 0.000000e+00, i32 3
  %502 = call <4 x float> @llvm.fma.f32.9(<4 x float> %495, <4 x float> %501, <4 x float> %489)
  %503 = getelementptr inbounds float, float* %0, i64 2
  %504 = load float, float* %503, align 4
  %505 = insertelement <4 x float> zeroinitializer, float %504, i32 0
  %506 = insertelement <4 x float> %505, float 0.000000e+00, i32 1
  %507 = insertelement <4 x float> %506, float 0.000000e+00, i32 2
  %508 = insertelement <4 x float> %507, float 0.000000e+00, i32 3
  %509 = getelementptr inbounds float, float* %1, i64 9
  %510 = load float, float* %509, align 4
  %511 = insertelement <4 x float> zeroinitializer, float %510, i32 0
  %512 = insertelement <4 x float> %511, float 0.000000e+00, i32 1
  %513 = insertelement <4 x float> %512, float 0.000000e+00, i32 2
  %514 = insertelement <4 x float> %513, float 0.000000e+00, i32 3
  %515 = call <4 x float> @llvm.fma.f32.10(<4 x float> %508, <4 x float> %514, <4 x float> %502)
  %516 = extractelement <4 x float> %515, i32 0
  %517 = getelementptr inbounds float, float* %2, i64 1
  store float %516, float* %517, align 4
  %518 = load float, float* %0, align 4
  %519 = insertelement <4 x float> zeroinitializer, float %518, i32 0
  %520 = insertelement <4 x float> %519, float 1.000000e+00, i32 1
  %521 = insertelement <4 x float> %520, float 1.000000e+00, i32 2
  %522 = insertelement <4 x float> %521, float 1.000000e+00, i32 3
  %523 = getelementptr inbounds float, float* %1, i64 1
  %524 = load float, float* %523, align 4
  %525 = insertelement <4 x float> zeroinitializer, float %524, i32 0
  %526 = insertelement <4 x float> %525, float 0.000000e+00, i32 1
  %527 = insertelement <4 x float> %526, float 0.000000e+00, i32 2
  %528 = insertelement <4 x float> %527, float 0.000000e+00, i32 3
  %529 = fmul <4 x float> %522, %528
  %530 = fadd <4 x float> %529, zeroinitializer
  %531 = getelementptr inbounds float, float* %0, i64 1
  %532 = load float, float* %531, align 4
  %533 = insertelement <4 x float> zeroinitializer, float %532, i32 0
  %534 = insertelement <4 x float> %533, float 1.000000e+00, i32 1
  %535 = insertelement <4 x float> %534, float 1.000000e+00, i32 2
  %536 = insertelement <4 x float> %535, float 1.000000e+00, i32 3
  %537 = getelementptr inbounds float, float* %1, i64 5
  %538 = load float, float* %537, align 4
  %539 = insertelement <4 x float> zeroinitializer, float %538, i32 0
  %540 = insertelement <4 x float> %539, float 0.000000e+00, i32 1
  %541 = insertelement <4 x float> %540, float 0.000000e+00, i32 2
  %542 = insertelement <4 x float> %541, float 0.000000e+00, i32 3
  %543 = call <4 x float> @llvm.fma.f32.11(<4 x float> %536, <4 x float> %542, <4 x float> %530)
  %544 = getelementptr inbounds float, float* %0, i64 2
  %545 = load float, float* %544, align 4
  %546 = insertelement <4 x float> zeroinitializer, float %545, i32 0
  %547 = insertelement <4 x float> %546, float 1.000000e+00, i32 1
  %548 = insertelement <4 x float> %547, float 1.000000e+00, i32 2
  %549 = insertelement <4 x float> %548, float 1.000000e+00, i32 3
  %550 = getelementptr inbounds float, float* %1, i64 9
  %551 = load float, float* %550, align 4
  %552 = insertelement <4 x float> zeroinitializer, float %551, i32 0
  %553 = insertelement <4 x float> %552, float 0.000000e+00, i32 1
  %554 = insertelement <4 x float> %553, float 0.000000e+00, i32 2
  %555 = insertelement <4 x float> %554, float 0.000000e+00, i32 3
  %556 = call <4 x float> @llvm.fma.f32.12(<4 x float> %549, <4 x float> %555, <4 x float> %543)
  %557 = getelementptr inbounds float, float* %0, i64 3
  %558 = load float, float* %557, align 4
  %559 = insertelement <4 x float> zeroinitializer, float %558, i32 0
  %560 = insertelement <4 x float> %559, float 0.000000e+00, i32 1
  %561 = insertelement <4 x float> %560, float 0.000000e+00, i32 2
  %562 = insertelement <4 x float> %561, float 0.000000e+00, i32 3
  %563 = getelementptr inbounds float, float* %1, i64 13
  %564 = load float, float* %563, align 4
  %565 = insertelement <4 x float> zeroinitializer, float %564, i32 0
  %566 = insertelement <4 x float> %565, float 0.000000e+00, i32 1
  %567 = insertelement <4 x float> %566, float 0.000000e+00, i32 2
  %568 = insertelement <4 x float> %567, float 0.000000e+00, i32 3
  %569 = call <4 x float> @llvm.fma.f32.13(<4 x float> %562, <4 x float> %568, <4 x float> %556)
  %570 = extractelement <4 x float> %569, i32 0
  %571 = getelementptr inbounds float, float* %2, i64 1
  store float %570, float* %571, align 4
  %572 = extractelement <4 x float> %569, i32 1
  %573 = getelementptr inbounds float, float* %2, i64 2
  store float %572, float* %573, align 4
  %574 = load float, float* %0, align 4
  %575 = insertelement <4 x float> zeroinitializer, float %574, i32 0
  %576 = insertelement <4 x float> %575, float 0.000000e+00, i32 1
  %577 = insertelement <4 x float> %576, float 0.000000e+00, i32 2
  %578 = insertelement <4 x float> %577, float 0.000000e+00, i32 3
  %579 = getelementptr inbounds float, float* %1, i64 2
  %580 = load float, float* %579, align 4
  %581 = insertelement <4 x float> zeroinitializer, float %580, i32 0
  %582 = insertelement <4 x float> %581, float 0.000000e+00, i32 1
  %583 = insertelement <4 x float> %582, float 0.000000e+00, i32 2
  %584 = insertelement <4 x float> %583, float 0.000000e+00, i32 3
  %585 = call <4 x float> @llvm.fma.f32.14(<4 x float> %578, <4 x float> %584, <4 x float> zeroinitializer)
  %586 = extractelement <4 x float> %585, i32 0
  %587 = getelementptr inbounds float, float* %2, i64 2
  store float %586, float* %587, align 4
  %588 = load float, float* %0, align 4
  %589 = insertelement <4 x float> zeroinitializer, float %588, i32 0
  %590 = insertelement <4 x float> %589, float 1.000000e+00, i32 1
  %591 = insertelement <4 x float> %590, float 1.000000e+00, i32 2
  %592 = insertelement <4 x float> %591, float 1.000000e+00, i32 3
  %593 = getelementptr inbounds float, float* %1, i64 2
  %594 = load float, float* %593, align 4
  %595 = insertelement <4 x float> zeroinitializer, float %594, i32 0
  %596 = insertelement <4 x float> %595, float 0.000000e+00, i32 1
  %597 = insertelement <4 x float> %596, float 0.000000e+00, i32 2
  %598 = insertelement <4 x float> %597, float 0.000000e+00, i32 3
  %599 = fmul <4 x float> %592, %598
  %600 = fadd <4 x float> %599, zeroinitializer
  %601 = getelementptr inbounds float, float* %0, i64 1
  %602 = load float, float* %601, align 4
  %603 = insertelement <4 x float> zeroinitializer, float %602, i32 0
  %604 = insertelement <4 x float> %603, float 0.000000e+00, i32 1
  %605 = insertelement <4 x float> %604, float 0.000000e+00, i32 2
  %606 = insertelement <4 x float> %605, float 0.000000e+00, i32 3
  %607 = getelementptr inbounds float, float* %1, i64 6
  %608 = load float, float* %607, align 4
  %609 = insertelement <4 x float> zeroinitializer, float %608, i32 0
  %610 = insertelement <4 x float> %609, float 0.000000e+00, i32 1
  %611 = insertelement <4 x float> %610, float 0.000000e+00, i32 2
  %612 = insertelement <4 x float> %611, float 0.000000e+00, i32 3
  %613 = call <4 x float> @llvm.fma.f32.15(<4 x float> %606, <4 x float> %612, <4 x float> %600)
  %614 = extractelement <4 x float> %613, i32 0
  %615 = getelementptr inbounds float, float* %2, i64 2
  store float %614, float* %615, align 4
  %616 = load float, float* %0, align 4
  %617 = insertelement <4 x float> zeroinitializer, float %616, i32 0
  %618 = insertelement <4 x float> %617, float 1.000000e+00, i32 1
  %619 = insertelement <4 x float> %618, float 1.000000e+00, i32 2
  %620 = insertelement <4 x float> %619, float 1.000000e+00, i32 3
  %621 = getelementptr inbounds float, float* %1, i64 2
  %622 = load float, float* %621, align 4
  %623 = insertelement <4 x float> zeroinitializer, float %622, i32 0
  %624 = insertelement <4 x float> %623, float 0.000000e+00, i32 1
  %625 = insertelement <4 x float> %624, float 0.000000e+00, i32 2
  %626 = insertelement <4 x float> %625, float 0.000000e+00, i32 3
  %627 = fmul <4 x float> %620, %626
  %628 = fadd <4 x float> %627, zeroinitializer
  %629 = getelementptr inbounds float, float* %0, i64 1
  %630 = load float, float* %629, align 4
  %631 = insertelement <4 x float> zeroinitializer, float %630, i32 0
  %632 = insertelement <4 x float> %631, float 1.000000e+00, i32 1
  %633 = insertelement <4 x float> %632, float 1.000000e+00, i32 2
  %634 = insertelement <4 x float> %633, float 1.000000e+00, i32 3
  %635 = getelementptr inbounds float, float* %1, i64 6
  %636 = load float, float* %635, align 4
  %637 = insertelement <4 x float> zeroinitializer, float %636, i32 0
  %638 = insertelement <4 x float> %637, float 0.000000e+00, i32 1
  %639 = insertelement <4 x float> %638, float 0.000000e+00, i32 2
  %640 = insertelement <4 x float> %639, float 0.000000e+00, i32 3
  %641 = call <4 x float> @llvm.fma.f32.16(<4 x float> %634, <4 x float> %640, <4 x float> %628)
  %642 = getelementptr inbounds float, float* %0, i64 2
  %643 = load float, float* %642, align 4
  %644 = insertelement <4 x float> zeroinitializer, float %643, i32 0
  %645 = insertelement <4 x float> %644, float 0.000000e+00, i32 1
  %646 = insertelement <4 x float> %645, float 0.000000e+00, i32 2
  %647 = insertelement <4 x float> %646, float 0.000000e+00, i32 3
  %648 = getelementptr inbounds float, float* %1, i64 10
  %649 = load float, float* %648, align 4
  %650 = insertelement <4 x float> zeroinitializer, float %649, i32 0
  %651 = insertelement <4 x float> %650, float 0.000000e+00, i32 1
  %652 = insertelement <4 x float> %651, float 0.000000e+00, i32 2
  %653 = insertelement <4 x float> %652, float 0.000000e+00, i32 3
  %654 = call <4 x float> @llvm.fma.f32.17(<4 x float> %647, <4 x float> %653, <4 x float> %641)
  %655 = extractelement <4 x float> %654, i32 0
  %656 = getelementptr inbounds float, float* %2, i64 2
  store float %655, float* %656, align 4
  %657 = load float, float* %0, align 4
  %658 = insertelement <4 x float> zeroinitializer, float %657, i32 0
  %659 = insertelement <4 x float> %658, float 1.000000e+00, i32 1
  %660 = insertelement <4 x float> %659, float 1.000000e+00, i32 2
  %661 = insertelement <4 x float> %660, float 1.000000e+00, i32 3
  %662 = getelementptr inbounds float, float* %1, i64 2
  %663 = load float, float* %662, align 4
  %664 = insertelement <4 x float> zeroinitializer, float %663, i32 0
  %665 = insertelement <4 x float> %664, float 0.000000e+00, i32 1
  %666 = insertelement <4 x float> %665, float 0.000000e+00, i32 2
  %667 = insertelement <4 x float> %666, float 0.000000e+00, i32 3
  %668 = fmul <4 x float> %661, %667
  %669 = fadd <4 x float> %668, zeroinitializer
  %670 = getelementptr inbounds float, float* %0, i64 1
  %671 = load float, float* %670, align 4
  %672 = insertelement <4 x float> zeroinitializer, float %671, i32 0
  %673 = insertelement <4 x float> %672, float 1.000000e+00, i32 1
  %674 = insertelement <4 x float> %673, float 1.000000e+00, i32 2
  %675 = insertelement <4 x float> %674, float 1.000000e+00, i32 3
  %676 = getelementptr inbounds float, float* %1, i64 6
  %677 = load float, float* %676, align 4
  %678 = insertelement <4 x float> zeroinitializer, float %677, i32 0
  %679 = insertelement <4 x float> %678, float 0.000000e+00, i32 1
  %680 = insertelement <4 x float> %679, float 0.000000e+00, i32 2
  %681 = insertelement <4 x float> %680, float 0.000000e+00, i32 3
  %682 = call <4 x float> @llvm.fma.f32.18(<4 x float> %675, <4 x float> %681, <4 x float> %669)
  %683 = getelementptr inbounds float, float* %0, i64 2
  %684 = load float, float* %683, align 4
  %685 = insertelement <4 x float> zeroinitializer, float %684, i32 0
  %686 = insertelement <4 x float> %685, float 1.000000e+00, i32 1
  %687 = insertelement <4 x float> %686, float 1.000000e+00, i32 2
  %688 = insertelement <4 x float> %687, float 1.000000e+00, i32 3
  %689 = getelementptr inbounds float, float* %1, i64 10
  %690 = load float, float* %689, align 4
  %691 = insertelement <4 x float> zeroinitializer, float %690, i32 0
  %692 = insertelement <4 x float> %691, float 0.000000e+00, i32 1
  %693 = insertelement <4 x float> %692, float 0.000000e+00, i32 2
  %694 = insertelement <4 x float> %693, float 0.000000e+00, i32 3
  %695 = call <4 x float> @llvm.fma.f32.19(<4 x float> %688, <4 x float> %694, <4 x float> %682)
  %696 = getelementptr inbounds float, float* %0, i64 3
  %697 = load float, float* %696, align 4
  %698 = insertelement <4 x float> zeroinitializer, float %697, i32 0
  %699 = insertelement <4 x float> %698, float 0.000000e+00, i32 1
  %700 = insertelement <4 x float> %699, float 0.000000e+00, i32 2
  %701 = insertelement <4 x float> %700, float 0.000000e+00, i32 3
  %702 = getelementptr inbounds float, float* %1, i64 14
  %703 = load float, float* %702, align 4
  %704 = insertelement <4 x float> zeroinitializer, float %703, i32 0
  %705 = insertelement <4 x float> %704, float 0.000000e+00, i32 1
  %706 = insertelement <4 x float> %705, float 0.000000e+00, i32 2
  %707 = insertelement <4 x float> %706, float 0.000000e+00, i32 3
  %708 = call <4 x float> @llvm.fma.f32.20(<4 x float> %701, <4 x float> %707, <4 x float> %695)
  %709 = extractelement <4 x float> %708, i32 0
  %710 = getelementptr inbounds float, float* %2, i64 2
  store float %709, float* %710, align 4
  %711 = extractelement <4 x float> %708, i32 1
  %712 = getelementptr inbounds float, float* %2, i64 3
  store float %711, float* %712, align 4
  %713 = load float, float* %0, align 4
  %714 = insertelement <4 x float> zeroinitializer, float %713, i32 0
  %715 = insertelement <4 x float> %714, float 0.000000e+00, i32 1
  %716 = insertelement <4 x float> %715, float 0.000000e+00, i32 2
  %717 = insertelement <4 x float> %716, float 0.000000e+00, i32 3
  %718 = getelementptr inbounds float, float* %1, i64 3
  %719 = load float, float* %718, align 4
  %720 = insertelement <4 x float> zeroinitializer, float %719, i32 0
  %721 = insertelement <4 x float> %720, float 0.000000e+00, i32 1
  %722 = insertelement <4 x float> %721, float 0.000000e+00, i32 2
  %723 = insertelement <4 x float> %722, float 0.000000e+00, i32 3
  %724 = call <4 x float> @llvm.fma.f32.21(<4 x float> %717, <4 x float> %723, <4 x float> zeroinitializer)
  %725 = extractelement <4 x float> %724, i32 0
  %726 = getelementptr inbounds float, float* %2, i64 3
  store float %725, float* %726, align 4
  %727 = load float, float* %0, align 4
  %728 = insertelement <4 x float> zeroinitializer, float %727, i32 0
  %729 = insertelement <4 x float> %728, float 1.000000e+00, i32 1
  %730 = insertelement <4 x float> %729, float 1.000000e+00, i32 2
  %731 = insertelement <4 x float> %730, float 1.000000e+00, i32 3
  %732 = getelementptr inbounds float, float* %1, i64 3
  %733 = load float, float* %732, align 4
  %734 = insertelement <4 x float> zeroinitializer, float %733, i32 0
  %735 = insertelement <4 x float> %734, float 0.000000e+00, i32 1
  %736 = insertelement <4 x float> %735, float 0.000000e+00, i32 2
  %737 = insertelement <4 x float> %736, float 0.000000e+00, i32 3
  %738 = fmul <4 x float> %731, %737
  %739 = fadd <4 x float> %738, zeroinitializer
  %740 = getelementptr inbounds float, float* %0, i64 1
  %741 = load float, float* %740, align 4
  %742 = insertelement <4 x float> zeroinitializer, float %741, i32 0
  %743 = insertelement <4 x float> %742, float 0.000000e+00, i32 1
  %744 = insertelement <4 x float> %743, float 0.000000e+00, i32 2
  %745 = insertelement <4 x float> %744, float 0.000000e+00, i32 3
  %746 = getelementptr inbounds float, float* %1, i64 7
  %747 = load float, float* %746, align 4
  %748 = insertelement <4 x float> zeroinitializer, float %747, i32 0
  %749 = insertelement <4 x float> %748, float 0.000000e+00, i32 1
  %750 = insertelement <4 x float> %749, float 0.000000e+00, i32 2
  %751 = insertelement <4 x float> %750, float 0.000000e+00, i32 3
  %752 = call <4 x float> @llvm.fma.f32.22(<4 x float> %745, <4 x float> %751, <4 x float> %739)
  %753 = extractelement <4 x float> %752, i32 0
  %754 = getelementptr inbounds float, float* %2, i64 3
  store float %753, float* %754, align 4
  %755 = load float, float* %0, align 4
  %756 = insertelement <4 x float> zeroinitializer, float %755, i32 0
  %757 = insertelement <4 x float> %756, float 1.000000e+00, i32 1
  %758 = insertelement <4 x float> %757, float 1.000000e+00, i32 2
  %759 = insertelement <4 x float> %758, float 1.000000e+00, i32 3
  %760 = getelementptr inbounds float, float* %1, i64 3
  %761 = load float, float* %760, align 4
  %762 = insertelement <4 x float> zeroinitializer, float %761, i32 0
  %763 = insertelement <4 x float> %762, float 0.000000e+00, i32 1
  %764 = insertelement <4 x float> %763, float 0.000000e+00, i32 2
  %765 = insertelement <4 x float> %764, float 0.000000e+00, i32 3
  %766 = fmul <4 x float> %759, %765
  %767 = fadd <4 x float> %766, zeroinitializer
  %768 = getelementptr inbounds float, float* %0, i64 1
  %769 = load float, float* %768, align 4
  %770 = insertelement <4 x float> zeroinitializer, float %769, i32 0
  %771 = insertelement <4 x float> %770, float 1.000000e+00, i32 1
  %772 = insertelement <4 x float> %771, float 1.000000e+00, i32 2
  %773 = insertelement <4 x float> %772, float 1.000000e+00, i32 3
  %774 = getelementptr inbounds float, float* %1, i64 7
  %775 = load float, float* %774, align 4
  %776 = insertelement <4 x float> zeroinitializer, float %775, i32 0
  %777 = insertelement <4 x float> %776, float 0.000000e+00, i32 1
  %778 = insertelement <4 x float> %777, float 0.000000e+00, i32 2
  %779 = insertelement <4 x float> %778, float 0.000000e+00, i32 3
  %780 = call <4 x float> @llvm.fma.f32.23(<4 x float> %773, <4 x float> %779, <4 x float> %767)
  %781 = getelementptr inbounds float, float* %0, i64 2
  %782 = load float, float* %781, align 4
  %783 = insertelement <4 x float> zeroinitializer, float %782, i32 0
  %784 = insertelement <4 x float> %783, float 0.000000e+00, i32 1
  %785 = insertelement <4 x float> %784, float 0.000000e+00, i32 2
  %786 = insertelement <4 x float> %785, float 0.000000e+00, i32 3
  %787 = getelementptr inbounds float, float* %1, i64 11
  %788 = load float, float* %787, align 4
  %789 = insertelement <4 x float> zeroinitializer, float %788, i32 0
  %790 = insertelement <4 x float> %789, float 0.000000e+00, i32 1
  %791 = insertelement <4 x float> %790, float 0.000000e+00, i32 2
  %792 = insertelement <4 x float> %791, float 0.000000e+00, i32 3
  %793 = call <4 x float> @llvm.fma.f32.24(<4 x float> %786, <4 x float> %792, <4 x float> %780)
  %794 = extractelement <4 x float> %793, i32 0
  %795 = getelementptr inbounds float, float* %2, i64 3
  store float %794, float* %795, align 4
  %796 = load float, float* %0, align 4
  %797 = insertelement <4 x float> zeroinitializer, float %796, i32 0
  %798 = insertelement <4 x float> %797, float 1.000000e+00, i32 1
  %799 = insertelement <4 x float> %798, float 1.000000e+00, i32 2
  %800 = insertelement <4 x float> %799, float 1.000000e+00, i32 3
  %801 = getelementptr inbounds float, float* %1, i64 3
  %802 = load float, float* %801, align 4
  %803 = insertelement <4 x float> zeroinitializer, float %802, i32 0
  %804 = insertelement <4 x float> %803, float 0.000000e+00, i32 1
  %805 = insertelement <4 x float> %804, float 0.000000e+00, i32 2
  %806 = insertelement <4 x float> %805, float 0.000000e+00, i32 3
  %807 = fmul <4 x float> %800, %806
  %808 = fadd <4 x float> %807, zeroinitializer
  %809 = getelementptr inbounds float, float* %0, i64 1
  %810 = load float, float* %809, align 4
  %811 = insertelement <4 x float> zeroinitializer, float %810, i32 0
  %812 = insertelement <4 x float> %811, float 1.000000e+00, i32 1
  %813 = insertelement <4 x float> %812, float 1.000000e+00, i32 2
  %814 = insertelement <4 x float> %813, float 1.000000e+00, i32 3
  %815 = getelementptr inbounds float, float* %1, i64 7
  %816 = load float, float* %815, align 4
  %817 = insertelement <4 x float> zeroinitializer, float %816, i32 0
  %818 = insertelement <4 x float> %817, float 0.000000e+00, i32 1
  %819 = insertelement <4 x float> %818, float 0.000000e+00, i32 2
  %820 = insertelement <4 x float> %819, float 0.000000e+00, i32 3
  %821 = call <4 x float> @llvm.fma.f32.25(<4 x float> %814, <4 x float> %820, <4 x float> %808)
  %822 = getelementptr inbounds float, float* %0, i64 2
  %823 = load float, float* %822, align 4
  %824 = insertelement <4 x float> zeroinitializer, float %823, i32 0
  %825 = insertelement <4 x float> %824, float 1.000000e+00, i32 1
  %826 = insertelement <4 x float> %825, float 1.000000e+00, i32 2
  %827 = insertelement <4 x float> %826, float 1.000000e+00, i32 3
  %828 = getelementptr inbounds float, float* %1, i64 11
  %829 = load float, float* %828, align 4
  %830 = insertelement <4 x float> zeroinitializer, float %829, i32 0
  %831 = insertelement <4 x float> %830, float 0.000000e+00, i32 1
  %832 = insertelement <4 x float> %831, float 0.000000e+00, i32 2
  %833 = insertelement <4 x float> %832, float 0.000000e+00, i32 3
  %834 = call <4 x float> @llvm.fma.f32.26(<4 x float> %827, <4 x float> %833, <4 x float> %821)
  %835 = getelementptr inbounds float, float* %0, i64 3
  %836 = load float, float* %835, align 4
  %837 = insertelement <4 x float> zeroinitializer, float %836, i32 0
  %838 = insertelement <4 x float> %837, float 0.000000e+00, i32 1
  %839 = insertelement <4 x float> %838, float 0.000000e+00, i32 2
  %840 = insertelement <4 x float> %839, float 0.000000e+00, i32 3
  %841 = getelementptr inbounds float, float* %1, i64 15
  %842 = load float, float* %841, align 4
  %843 = insertelement <4 x float> zeroinitializer, float %842, i32 0
  %844 = insertelement <4 x float> %843, float 0.000000e+00, i32 1
  %845 = insertelement <4 x float> %844, float 0.000000e+00, i32 2
  %846 = insertelement <4 x float> %845, float 0.000000e+00, i32 3
  %847 = call <4 x float> @llvm.fma.f32.27(<4 x float> %840, <4 x float> %846, <4 x float> %834)
  %848 = extractelement <4 x float> %847, i32 0
  %849 = getelementptr inbounds float, float* %2, i64 3
  store float %848, float* %849, align 4
  %850 = getelementptr inbounds float, float* %2, i64 4
  store float 0.000000e+00, float* %850, align 4
  %851 = getelementptr inbounds float, float* %0, i64 4
  %852 = load float, float* %851, align 4
  %853 = insertelement <4 x float> zeroinitializer, float %852, i32 0
  %854 = insertelement <4 x float> %853, float 0.000000e+00, i32 1
  %855 = insertelement <4 x float> %854, float 0.000000e+00, i32 2
  %856 = insertelement <4 x float> %855, float 0.000000e+00, i32 3
  %857 = load float, float* %1, align 4
  %858 = insertelement <4 x float> zeroinitializer, float %857, i32 0
  %859 = insertelement <4 x float> %858, float 0.000000e+00, i32 1
  %860 = insertelement <4 x float> %859, float 0.000000e+00, i32 2
  %861 = insertelement <4 x float> %860, float 0.000000e+00, i32 3
  %862 = call <4 x float> @llvm.fma.f32.28(<4 x float> %856, <4 x float> %861, <4 x float> zeroinitializer)
  %863 = extractelement <4 x float> %862, i32 0
  %864 = getelementptr inbounds float, float* %2, i64 4
  store float %863, float* %864, align 4
  %865 = getelementptr inbounds float, float* %0, i64 4
  %866 = load float, float* %865, align 4
  %867 = insertelement <4 x float> zeroinitializer, float %866, i32 0
  %868 = insertelement <4 x float> %867, float 1.000000e+00, i32 1
  %869 = insertelement <4 x float> %868, float 1.000000e+00, i32 2
  %870 = insertelement <4 x float> %869, float 1.000000e+00, i32 3
  %871 = load float, float* %1, align 4
  %872 = insertelement <4 x float> zeroinitializer, float %871, i32 0
  %873 = insertelement <4 x float> %872, float 0.000000e+00, i32 1
  %874 = insertelement <4 x float> %873, float 0.000000e+00, i32 2
  %875 = insertelement <4 x float> %874, float 0.000000e+00, i32 3
  %876 = fmul <4 x float> %870, %875
  %877 = fadd <4 x float> %876, zeroinitializer
  %878 = getelementptr inbounds float, float* %0, i64 5
  %879 = load float, float* %878, align 4
  %880 = insertelement <4 x float> zeroinitializer, float %879, i32 0
  %881 = insertelement <4 x float> %880, float 0.000000e+00, i32 1
  %882 = insertelement <4 x float> %881, float 0.000000e+00, i32 2
  %883 = insertelement <4 x float> %882, float 0.000000e+00, i32 3
  %884 = getelementptr inbounds float, float* %1, i64 4
  %885 = load float, float* %884, align 4
  %886 = insertelement <4 x float> zeroinitializer, float %885, i32 0
  %887 = insertelement <4 x float> %886, float 0.000000e+00, i32 1
  %888 = insertelement <4 x float> %887, float 0.000000e+00, i32 2
  %889 = insertelement <4 x float> %888, float 0.000000e+00, i32 3
  %890 = call <4 x float> @llvm.fma.f32.29(<4 x float> %883, <4 x float> %889, <4 x float> %877)
  %891 = extractelement <4 x float> %890, i32 0
  %892 = getelementptr inbounds float, float* %2, i64 4
  store float %891, float* %892, align 4
  %893 = getelementptr inbounds float, float* %0, i64 4
  %894 = load float, float* %893, align 4
  %895 = insertelement <4 x float> zeroinitializer, float %894, i32 0
  %896 = insertelement <4 x float> %895, float 1.000000e+00, i32 1
  %897 = insertelement <4 x float> %896, float 1.000000e+00, i32 2
  %898 = insertelement <4 x float> %897, float 1.000000e+00, i32 3
  %899 = load float, float* %1, align 4
  %900 = insertelement <4 x float> zeroinitializer, float %899, i32 0
  %901 = insertelement <4 x float> %900, float 0.000000e+00, i32 1
  %902 = insertelement <4 x float> %901, float 0.000000e+00, i32 2
  %903 = insertelement <4 x float> %902, float 0.000000e+00, i32 3
  %904 = fmul <4 x float> %898, %903
  %905 = fadd <4 x float> %904, zeroinitializer
  %906 = getelementptr inbounds float, float* %0, i64 5
  %907 = load float, float* %906, align 4
  %908 = insertelement <4 x float> zeroinitializer, float %907, i32 0
  %909 = insertelement <4 x float> %908, float 1.000000e+00, i32 1
  %910 = insertelement <4 x float> %909, float 1.000000e+00, i32 2
  %911 = insertelement <4 x float> %910, float 1.000000e+00, i32 3
  %912 = getelementptr inbounds float, float* %1, i64 4
  %913 = load float, float* %912, align 4
  %914 = insertelement <4 x float> zeroinitializer, float %913, i32 0
  %915 = insertelement <4 x float> %914, float 0.000000e+00, i32 1
  %916 = insertelement <4 x float> %915, float 0.000000e+00, i32 2
  %917 = insertelement <4 x float> %916, float 0.000000e+00, i32 3
  %918 = call <4 x float> @llvm.fma.f32.30(<4 x float> %911, <4 x float> %917, <4 x float> %905)
  %919 = getelementptr inbounds float, float* %0, i64 6
  %920 = load float, float* %919, align 4
  %921 = insertelement <4 x float> zeroinitializer, float %920, i32 0
  %922 = insertelement <4 x float> %921, float 0.000000e+00, i32 1
  %923 = insertelement <4 x float> %922, float 0.000000e+00, i32 2
  %924 = insertelement <4 x float> %923, float 0.000000e+00, i32 3
  %925 = getelementptr inbounds float, float* %1, i64 8
  %926 = load float, float* %925, align 4
  %927 = insertelement <4 x float> zeroinitializer, float %926, i32 0
  %928 = insertelement <4 x float> %927, float 0.000000e+00, i32 1
  %929 = insertelement <4 x float> %928, float 0.000000e+00, i32 2
  %930 = insertelement <4 x float> %929, float 0.000000e+00, i32 3
  %931 = call <4 x float> @llvm.fma.f32.31(<4 x float> %924, <4 x float> %930, <4 x float> %918)
  %932 = extractelement <4 x float> %931, i32 0
  %933 = getelementptr inbounds float, float* %2, i64 4
  store float %932, float* %933, align 4
  %934 = getelementptr inbounds float, float* %0, i64 4
  %935 = load float, float* %934, align 4
  %936 = insertelement <4 x float> zeroinitializer, float %935, i32 0
  %937 = insertelement <4 x float> %936, float 1.000000e+00, i32 1
  %938 = insertelement <4 x float> %937, float 1.000000e+00, i32 2
  %939 = insertelement <4 x float> %938, float 1.000000e+00, i32 3
  %940 = load float, float* %1, align 4
  %941 = insertelement <4 x float> zeroinitializer, float %940, i32 0
  %942 = insertelement <4 x float> %941, float 0.000000e+00, i32 1
  %943 = insertelement <4 x float> %942, float 0.000000e+00, i32 2
  %944 = insertelement <4 x float> %943, float 0.000000e+00, i32 3
  %945 = fmul <4 x float> %939, %944
  %946 = fadd <4 x float> %945, zeroinitializer
  %947 = getelementptr inbounds float, float* %0, i64 5
  %948 = load float, float* %947, align 4
  %949 = insertelement <4 x float> zeroinitializer, float %948, i32 0
  %950 = insertelement <4 x float> %949, float 1.000000e+00, i32 1
  %951 = insertelement <4 x float> %950, float 1.000000e+00, i32 2
  %952 = insertelement <4 x float> %951, float 1.000000e+00, i32 3
  %953 = getelementptr inbounds float, float* %1, i64 4
  %954 = load float, float* %953, align 4
  %955 = insertelement <4 x float> zeroinitializer, float %954, i32 0
  %956 = insertelement <4 x float> %955, float 0.000000e+00, i32 1
  %957 = insertelement <4 x float> %956, float 0.000000e+00, i32 2
  %958 = insertelement <4 x float> %957, float 0.000000e+00, i32 3
  %959 = call <4 x float> @llvm.fma.f32.32(<4 x float> %952, <4 x float> %958, <4 x float> %946)
  %960 = getelementptr inbounds float, float* %0, i64 6
  %961 = load float, float* %960, align 4
  %962 = insertelement <4 x float> zeroinitializer, float %961, i32 0
  %963 = insertelement <4 x float> %962, float 1.000000e+00, i32 1
  %964 = insertelement <4 x float> %963, float 1.000000e+00, i32 2
  %965 = insertelement <4 x float> %964, float 1.000000e+00, i32 3
  %966 = getelementptr inbounds float, float* %1, i64 8
  %967 = load float, float* %966, align 4
  %968 = insertelement <4 x float> zeroinitializer, float %967, i32 0
  %969 = insertelement <4 x float> %968, float 0.000000e+00, i32 1
  %970 = insertelement <4 x float> %969, float 0.000000e+00, i32 2
  %971 = insertelement <4 x float> %970, float 0.000000e+00, i32 3
  %972 = call <4 x float> @llvm.fma.f32.33(<4 x float> %965, <4 x float> %971, <4 x float> %959)
  %973 = getelementptr inbounds float, float* %0, i64 7
  %974 = load float, float* %973, align 4
  %975 = insertelement <4 x float> zeroinitializer, float %974, i32 0
  %976 = insertelement <4 x float> %975, float 0.000000e+00, i32 1
  %977 = insertelement <4 x float> %976, float 0.000000e+00, i32 2
  %978 = insertelement <4 x float> %977, float 0.000000e+00, i32 3
  %979 = getelementptr inbounds float, float* %1, i64 12
  %980 = load float, float* %979, align 4
  %981 = insertelement <4 x float> zeroinitializer, float %980, i32 0
  %982 = insertelement <4 x float> %981, float 0.000000e+00, i32 1
  %983 = insertelement <4 x float> %982, float 0.000000e+00, i32 2
  %984 = insertelement <4 x float> %983, float 0.000000e+00, i32 3
  %985 = call <4 x float> @llvm.fma.f32.34(<4 x float> %978, <4 x float> %984, <4 x float> %972)
  %986 = extractelement <4 x float> %985, i32 0
  %987 = getelementptr inbounds float, float* %2, i64 4
  store float %986, float* %987, align 4
  %988 = extractelement <4 x float> %985, i32 1
  %989 = getelementptr inbounds float, float* %2, i64 5
  store float %988, float* %989, align 4
  %990 = getelementptr inbounds float, float* %0, i64 4
  %991 = load float, float* %990, align 4
  %992 = insertelement <4 x float> zeroinitializer, float %991, i32 0
  %993 = insertelement <4 x float> %992, float 0.000000e+00, i32 1
  %994 = insertelement <4 x float> %993, float 0.000000e+00, i32 2
  %995 = insertelement <4 x float> %994, float 0.000000e+00, i32 3
  %996 = getelementptr inbounds float, float* %1, i64 1
  %997 = load float, float* %996, align 4
  %998 = insertelement <4 x float> zeroinitializer, float %997, i32 0
  %999 = insertelement <4 x float> %998, float 0.000000e+00, i32 1
  %1000 = insertelement <4 x float> %999, float 0.000000e+00, i32 2
  %1001 = insertelement <4 x float> %1000, float 0.000000e+00, i32 3
  %1002 = call <4 x float> @llvm.fma.f32.35(<4 x float> %995, <4 x float> %1001, <4 x float> zeroinitializer)
  %1003 = extractelement <4 x float> %1002, i32 0
  %1004 = getelementptr inbounds float, float* %2, i64 5
  store float %1003, float* %1004, align 4
  %1005 = getelementptr inbounds float, float* %0, i64 4
  %1006 = load float, float* %1005, align 4
  %1007 = insertelement <4 x float> zeroinitializer, float %1006, i32 0
  %1008 = insertelement <4 x float> %1007, float 1.000000e+00, i32 1
  %1009 = insertelement <4 x float> %1008, float 1.000000e+00, i32 2
  %1010 = insertelement <4 x float> %1009, float 1.000000e+00, i32 3
  %1011 = getelementptr inbounds float, float* %1, i64 1
  %1012 = load float, float* %1011, align 4
  %1013 = insertelement <4 x float> zeroinitializer, float %1012, i32 0
  %1014 = insertelement <4 x float> %1013, float 0.000000e+00, i32 1
  %1015 = insertelement <4 x float> %1014, float 0.000000e+00, i32 2
  %1016 = insertelement <4 x float> %1015, float 0.000000e+00, i32 3
  %1017 = fmul <4 x float> %1010, %1016
  %1018 = fadd <4 x float> %1017, zeroinitializer
  %1019 = getelementptr inbounds float, float* %0, i64 5
  %1020 = load float, float* %1019, align 4
  %1021 = insertelement <4 x float> zeroinitializer, float %1020, i32 0
  %1022 = insertelement <4 x float> %1021, float 0.000000e+00, i32 1
  %1023 = insertelement <4 x float> %1022, float 0.000000e+00, i32 2
  %1024 = insertelement <4 x float> %1023, float 0.000000e+00, i32 3
  %1025 = getelementptr inbounds float, float* %1, i64 5
  %1026 = load float, float* %1025, align 4
  %1027 = insertelement <4 x float> zeroinitializer, float %1026, i32 0
  %1028 = insertelement <4 x float> %1027, float 0.000000e+00, i32 1
  %1029 = insertelement <4 x float> %1028, float 0.000000e+00, i32 2
  %1030 = insertelement <4 x float> %1029, float 0.000000e+00, i32 3
  %1031 = call <4 x float> @llvm.fma.f32.36(<4 x float> %1024, <4 x float> %1030, <4 x float> %1018)
  %1032 = extractelement <4 x float> %1031, i32 0
  %1033 = getelementptr inbounds float, float* %2, i64 5
  store float %1032, float* %1033, align 4
  %1034 = getelementptr inbounds float, float* %0, i64 4
  %1035 = load float, float* %1034, align 4
  %1036 = insertelement <4 x float> zeroinitializer, float %1035, i32 0
  %1037 = insertelement <4 x float> %1036, float 1.000000e+00, i32 1
  %1038 = insertelement <4 x float> %1037, float 1.000000e+00, i32 2
  %1039 = insertelement <4 x float> %1038, float 1.000000e+00, i32 3
  %1040 = getelementptr inbounds float, float* %1, i64 1
  %1041 = load float, float* %1040, align 4
  %1042 = insertelement <4 x float> zeroinitializer, float %1041, i32 0
  %1043 = insertelement <4 x float> %1042, float 0.000000e+00, i32 1
  %1044 = insertelement <4 x float> %1043, float 0.000000e+00, i32 2
  %1045 = insertelement <4 x float> %1044, float 0.000000e+00, i32 3
  %1046 = fmul <4 x float> %1039, %1045
  %1047 = fadd <4 x float> %1046, zeroinitializer
  %1048 = getelementptr inbounds float, float* %0, i64 5
  %1049 = load float, float* %1048, align 4
  %1050 = insertelement <4 x float> zeroinitializer, float %1049, i32 0
  %1051 = insertelement <4 x float> %1050, float 1.000000e+00, i32 1
  %1052 = insertelement <4 x float> %1051, float 1.000000e+00, i32 2
  %1053 = insertelement <4 x float> %1052, float 1.000000e+00, i32 3
  %1054 = getelementptr inbounds float, float* %1, i64 5
  %1055 = load float, float* %1054, align 4
  %1056 = insertelement <4 x float> zeroinitializer, float %1055, i32 0
  %1057 = insertelement <4 x float> %1056, float 0.000000e+00, i32 1
  %1058 = insertelement <4 x float> %1057, float 0.000000e+00, i32 2
  %1059 = insertelement <4 x float> %1058, float 0.000000e+00, i32 3
  %1060 = call <4 x float> @llvm.fma.f32.37(<4 x float> %1053, <4 x float> %1059, <4 x float> %1047)
  %1061 = getelementptr inbounds float, float* %0, i64 6
  %1062 = load float, float* %1061, align 4
  %1063 = insertelement <4 x float> zeroinitializer, float %1062, i32 0
  %1064 = insertelement <4 x float> %1063, float 0.000000e+00, i32 1
  %1065 = insertelement <4 x float> %1064, float 0.000000e+00, i32 2
  %1066 = insertelement <4 x float> %1065, float 0.000000e+00, i32 3
  %1067 = getelementptr inbounds float, float* %1, i64 9
  %1068 = load float, float* %1067, align 4
  %1069 = insertelement <4 x float> zeroinitializer, float %1068, i32 0
  %1070 = insertelement <4 x float> %1069, float 0.000000e+00, i32 1
  %1071 = insertelement <4 x float> %1070, float 0.000000e+00, i32 2
  %1072 = insertelement <4 x float> %1071, float 0.000000e+00, i32 3
  %1073 = call <4 x float> @llvm.fma.f32.38(<4 x float> %1066, <4 x float> %1072, <4 x float> %1060)
  %1074 = extractelement <4 x float> %1073, i32 0
  %1075 = getelementptr inbounds float, float* %2, i64 5
  store float %1074, float* %1075, align 4
  %1076 = getelementptr inbounds float, float* %0, i64 4
  %1077 = load float, float* %1076, align 4
  %1078 = insertelement <4 x float> zeroinitializer, float %1077, i32 0
  %1079 = insertelement <4 x float> %1078, float 1.000000e+00, i32 1
  %1080 = insertelement <4 x float> %1079, float 1.000000e+00, i32 2
  %1081 = insertelement <4 x float> %1080, float 1.000000e+00, i32 3
  %1082 = getelementptr inbounds float, float* %1, i64 1
  %1083 = load float, float* %1082, align 4
  %1084 = insertelement <4 x float> zeroinitializer, float %1083, i32 0
  %1085 = insertelement <4 x float> %1084, float 0.000000e+00, i32 1
  %1086 = insertelement <4 x float> %1085, float 0.000000e+00, i32 2
  %1087 = insertelement <4 x float> %1086, float 0.000000e+00, i32 3
  %1088 = fmul <4 x float> %1081, %1087
  %1089 = fadd <4 x float> %1088, zeroinitializer
  %1090 = getelementptr inbounds float, float* %0, i64 5
  %1091 = load float, float* %1090, align 4
  %1092 = insertelement <4 x float> zeroinitializer, float %1091, i32 0
  %1093 = insertelement <4 x float> %1092, float 1.000000e+00, i32 1
  %1094 = insertelement <4 x float> %1093, float 1.000000e+00, i32 2
  %1095 = insertelement <4 x float> %1094, float 1.000000e+00, i32 3
  %1096 = getelementptr inbounds float, float* %1, i64 5
  %1097 = load float, float* %1096, align 4
  %1098 = insertelement <4 x float> zeroinitializer, float %1097, i32 0
  %1099 = insertelement <4 x float> %1098, float 0.000000e+00, i32 1
  %1100 = insertelement <4 x float> %1099, float 0.000000e+00, i32 2
  %1101 = insertelement <4 x float> %1100, float 0.000000e+00, i32 3
  %1102 = call <4 x float> @llvm.fma.f32.39(<4 x float> %1095, <4 x float> %1101, <4 x float> %1089)
  %1103 = getelementptr inbounds float, float* %0, i64 6
  %1104 = load float, float* %1103, align 4
  %1105 = insertelement <4 x float> zeroinitializer, float %1104, i32 0
  %1106 = insertelement <4 x float> %1105, float 1.000000e+00, i32 1
  %1107 = insertelement <4 x float> %1106, float 1.000000e+00, i32 2
  %1108 = insertelement <4 x float> %1107, float 1.000000e+00, i32 3
  %1109 = getelementptr inbounds float, float* %1, i64 9
  %1110 = load float, float* %1109, align 4
  %1111 = insertelement <4 x float> zeroinitializer, float %1110, i32 0
  %1112 = insertelement <4 x float> %1111, float 0.000000e+00, i32 1
  %1113 = insertelement <4 x float> %1112, float 0.000000e+00, i32 2
  %1114 = insertelement <4 x float> %1113, float 0.000000e+00, i32 3
  %1115 = call <4 x float> @llvm.fma.f32.40(<4 x float> %1108, <4 x float> %1114, <4 x float> %1102)
  %1116 = getelementptr inbounds float, float* %0, i64 7
  %1117 = load float, float* %1116, align 4
  %1118 = insertelement <4 x float> zeroinitializer, float %1117, i32 0
  %1119 = insertelement <4 x float> %1118, float 0.000000e+00, i32 1
  %1120 = insertelement <4 x float> %1119, float 0.000000e+00, i32 2
  %1121 = insertelement <4 x float> %1120, float 0.000000e+00, i32 3
  %1122 = getelementptr inbounds float, float* %1, i64 13
  %1123 = load float, float* %1122, align 4
  %1124 = insertelement <4 x float> zeroinitializer, float %1123, i32 0
  %1125 = insertelement <4 x float> %1124, float 0.000000e+00, i32 1
  %1126 = insertelement <4 x float> %1125, float 0.000000e+00, i32 2
  %1127 = insertelement <4 x float> %1126, float 0.000000e+00, i32 3
  %1128 = call <4 x float> @llvm.fma.f32.41(<4 x float> %1121, <4 x float> %1127, <4 x float> %1115)
  %1129 = extractelement <4 x float> %1128, i32 0
  %1130 = getelementptr inbounds float, float* %2, i64 5
  store float %1129, float* %1130, align 4
  %1131 = extractelement <4 x float> %1128, i32 1
  %1132 = getelementptr inbounds float, float* %2, i64 6
  store float %1131, float* %1132, align 4
  %1133 = getelementptr inbounds float, float* %0, i64 4
  %1134 = load float, float* %1133, align 4
  %1135 = insertelement <4 x float> zeroinitializer, float %1134, i32 0
  %1136 = insertelement <4 x float> %1135, float 0.000000e+00, i32 1
  %1137 = insertelement <4 x float> %1136, float 0.000000e+00, i32 2
  %1138 = insertelement <4 x float> %1137, float 0.000000e+00, i32 3
  %1139 = getelementptr inbounds float, float* %1, i64 2
  %1140 = load float, float* %1139, align 4
  %1141 = insertelement <4 x float> zeroinitializer, float %1140, i32 0
  %1142 = insertelement <4 x float> %1141, float 0.000000e+00, i32 1
  %1143 = insertelement <4 x float> %1142, float 0.000000e+00, i32 2
  %1144 = insertelement <4 x float> %1143, float 0.000000e+00, i32 3
  %1145 = call <4 x float> @llvm.fma.f32.42(<4 x float> %1138, <4 x float> %1144, <4 x float> zeroinitializer)
  %1146 = extractelement <4 x float> %1145, i32 0
  %1147 = getelementptr inbounds float, float* %2, i64 6
  store float %1146, float* %1147, align 4
  %1148 = getelementptr inbounds float, float* %0, i64 4
  %1149 = load float, float* %1148, align 4
  %1150 = insertelement <4 x float> zeroinitializer, float %1149, i32 0
  %1151 = insertelement <4 x float> %1150, float 1.000000e+00, i32 1
  %1152 = insertelement <4 x float> %1151, float 1.000000e+00, i32 2
  %1153 = insertelement <4 x float> %1152, float 1.000000e+00, i32 3
  %1154 = getelementptr inbounds float, float* %1, i64 2
  %1155 = load float, float* %1154, align 4
  %1156 = insertelement <4 x float> zeroinitializer, float %1155, i32 0
  %1157 = insertelement <4 x float> %1156, float 0.000000e+00, i32 1
  %1158 = insertelement <4 x float> %1157, float 0.000000e+00, i32 2
  %1159 = insertelement <4 x float> %1158, float 0.000000e+00, i32 3
  %1160 = fmul <4 x float> %1153, %1159
  %1161 = fadd <4 x float> %1160, zeroinitializer
  %1162 = getelementptr inbounds float, float* %0, i64 5
  %1163 = load float, float* %1162, align 4
  %1164 = insertelement <4 x float> zeroinitializer, float %1163, i32 0
  %1165 = insertelement <4 x float> %1164, float 0.000000e+00, i32 1
  %1166 = insertelement <4 x float> %1165, float 0.000000e+00, i32 2
  %1167 = insertelement <4 x float> %1166, float 0.000000e+00, i32 3
  %1168 = getelementptr inbounds float, float* %1, i64 6
  %1169 = load float, float* %1168, align 4
  %1170 = insertelement <4 x float> zeroinitializer, float %1169, i32 0
  %1171 = insertelement <4 x float> %1170, float 0.000000e+00, i32 1
  %1172 = insertelement <4 x float> %1171, float 0.000000e+00, i32 2
  %1173 = insertelement <4 x float> %1172, float 0.000000e+00, i32 3
  %1174 = call <4 x float> @llvm.fma.f32.43(<4 x float> %1167, <4 x float> %1173, <4 x float> %1161)
  %1175 = extractelement <4 x float> %1174, i32 0
  %1176 = getelementptr inbounds float, float* %2, i64 6
  store float %1175, float* %1176, align 4
  %1177 = getelementptr inbounds float, float* %0, i64 4
  %1178 = load float, float* %1177, align 4
  %1179 = insertelement <4 x float> zeroinitializer, float %1178, i32 0
  %1180 = insertelement <4 x float> %1179, float 1.000000e+00, i32 1
  %1181 = insertelement <4 x float> %1180, float 1.000000e+00, i32 2
  %1182 = insertelement <4 x float> %1181, float 1.000000e+00, i32 3
  %1183 = getelementptr inbounds float, float* %1, i64 2
  %1184 = load float, float* %1183, align 4
  %1185 = insertelement <4 x float> zeroinitializer, float %1184, i32 0
  %1186 = insertelement <4 x float> %1185, float 0.000000e+00, i32 1
  %1187 = insertelement <4 x float> %1186, float 0.000000e+00, i32 2
  %1188 = insertelement <4 x float> %1187, float 0.000000e+00, i32 3
  %1189 = fmul <4 x float> %1182, %1188
  %1190 = fadd <4 x float> %1189, zeroinitializer
  %1191 = getelementptr inbounds float, float* %0, i64 5
  %1192 = load float, float* %1191, align 4
  %1193 = insertelement <4 x float> zeroinitializer, float %1192, i32 0
  %1194 = insertelement <4 x float> %1193, float 1.000000e+00, i32 1
  %1195 = insertelement <4 x float> %1194, float 1.000000e+00, i32 2
  %1196 = insertelement <4 x float> %1195, float 1.000000e+00, i32 3
  %1197 = getelementptr inbounds float, float* %1, i64 6
  %1198 = load float, float* %1197, align 4
  %1199 = insertelement <4 x float> zeroinitializer, float %1198, i32 0
  %1200 = insertelement <4 x float> %1199, float 0.000000e+00, i32 1
  %1201 = insertelement <4 x float> %1200, float 0.000000e+00, i32 2
  %1202 = insertelement <4 x float> %1201, float 0.000000e+00, i32 3
  %1203 = call <4 x float> @llvm.fma.f32.44(<4 x float> %1196, <4 x float> %1202, <4 x float> %1190)
  %1204 = getelementptr inbounds float, float* %0, i64 6
  %1205 = load float, float* %1204, align 4
  %1206 = insertelement <4 x float> zeroinitializer, float %1205, i32 0
  %1207 = insertelement <4 x float> %1206, float 0.000000e+00, i32 1
  %1208 = insertelement <4 x float> %1207, float 0.000000e+00, i32 2
  %1209 = insertelement <4 x float> %1208, float 0.000000e+00, i32 3
  %1210 = getelementptr inbounds float, float* %1, i64 10
  %1211 = load float, float* %1210, align 4
  %1212 = insertelement <4 x float> zeroinitializer, float %1211, i32 0
  %1213 = insertelement <4 x float> %1212, float 0.000000e+00, i32 1
  %1214 = insertelement <4 x float> %1213, float 0.000000e+00, i32 2
  %1215 = insertelement <4 x float> %1214, float 0.000000e+00, i32 3
  %1216 = call <4 x float> @llvm.fma.f32.45(<4 x float> %1209, <4 x float> %1215, <4 x float> %1203)
  %1217 = extractelement <4 x float> %1216, i32 0
  %1218 = getelementptr inbounds float, float* %2, i64 6
  store float %1217, float* %1218, align 4
  %1219 = getelementptr inbounds float, float* %0, i64 4
  %1220 = load float, float* %1219, align 4
  %1221 = insertelement <4 x float> zeroinitializer, float %1220, i32 0
  %1222 = insertelement <4 x float> %1221, float 1.000000e+00, i32 1
  %1223 = insertelement <4 x float> %1222, float 1.000000e+00, i32 2
  %1224 = insertelement <4 x float> %1223, float 1.000000e+00, i32 3
  %1225 = getelementptr inbounds float, float* %1, i64 2
  %1226 = load float, float* %1225, align 4
  %1227 = insertelement <4 x float> zeroinitializer, float %1226, i32 0
  %1228 = insertelement <4 x float> %1227, float 0.000000e+00, i32 1
  %1229 = insertelement <4 x float> %1228, float 0.000000e+00, i32 2
  %1230 = insertelement <4 x float> %1229, float 0.000000e+00, i32 3
  %1231 = fmul <4 x float> %1224, %1230
  %1232 = fadd <4 x float> %1231, zeroinitializer
  %1233 = getelementptr inbounds float, float* %0, i64 5
  %1234 = load float, float* %1233, align 4
  %1235 = insertelement <4 x float> zeroinitializer, float %1234, i32 0
  %1236 = insertelement <4 x float> %1235, float 1.000000e+00, i32 1
  %1237 = insertelement <4 x float> %1236, float 1.000000e+00, i32 2
  %1238 = insertelement <4 x float> %1237, float 1.000000e+00, i32 3
  %1239 = getelementptr inbounds float, float* %1, i64 6
  %1240 = load float, float* %1239, align 4
  %1241 = insertelement <4 x float> zeroinitializer, float %1240, i32 0
  %1242 = insertelement <4 x float> %1241, float 0.000000e+00, i32 1
  %1243 = insertelement <4 x float> %1242, float 0.000000e+00, i32 2
  %1244 = insertelement <4 x float> %1243, float 0.000000e+00, i32 3
  %1245 = call <4 x float> @llvm.fma.f32.46(<4 x float> %1238, <4 x float> %1244, <4 x float> %1232)
  %1246 = getelementptr inbounds float, float* %0, i64 6
  %1247 = load float, float* %1246, align 4
  %1248 = insertelement <4 x float> zeroinitializer, float %1247, i32 0
  %1249 = insertelement <4 x float> %1248, float 1.000000e+00, i32 1
  %1250 = insertelement <4 x float> %1249, float 1.000000e+00, i32 2
  %1251 = insertelement <4 x float> %1250, float 1.000000e+00, i32 3
  %1252 = getelementptr inbounds float, float* %1, i64 10
  %1253 = load float, float* %1252, align 4
  %1254 = insertelement <4 x float> zeroinitializer, float %1253, i32 0
  %1255 = insertelement <4 x float> %1254, float 0.000000e+00, i32 1
  %1256 = insertelement <4 x float> %1255, float 0.000000e+00, i32 2
  %1257 = insertelement <4 x float> %1256, float 0.000000e+00, i32 3
  %1258 = call <4 x float> @llvm.fma.f32.47(<4 x float> %1251, <4 x float> %1257, <4 x float> %1245)
  %1259 = getelementptr inbounds float, float* %0, i64 7
  %1260 = load float, float* %1259, align 4
  %1261 = insertelement <4 x float> zeroinitializer, float %1260, i32 0
  %1262 = insertelement <4 x float> %1261, float 0.000000e+00, i32 1
  %1263 = insertelement <4 x float> %1262, float 0.000000e+00, i32 2
  %1264 = insertelement <4 x float> %1263, float 0.000000e+00, i32 3
  %1265 = getelementptr inbounds float, float* %1, i64 14
  %1266 = load float, float* %1265, align 4
  %1267 = insertelement <4 x float> zeroinitializer, float %1266, i32 0
  %1268 = insertelement <4 x float> %1267, float 0.000000e+00, i32 1
  %1269 = insertelement <4 x float> %1268, float 0.000000e+00, i32 2
  %1270 = insertelement <4 x float> %1269, float 0.000000e+00, i32 3
  %1271 = call <4 x float> @llvm.fma.f32.48(<4 x float> %1264, <4 x float> %1270, <4 x float> %1258)
  %1272 = extractelement <4 x float> %1271, i32 0
  %1273 = getelementptr inbounds float, float* %2, i64 6
  store float %1272, float* %1273, align 4
  %1274 = extractelement <4 x float> %1271, i32 1
  %1275 = getelementptr inbounds float, float* %2, i64 7
  store float %1274, float* %1275, align 4
  %1276 = getelementptr inbounds float, float* %0, i64 4
  %1277 = load float, float* %1276, align 4
  %1278 = insertelement <4 x float> zeroinitializer, float %1277, i32 0
  %1279 = insertelement <4 x float> %1278, float 0.000000e+00, i32 1
  %1280 = insertelement <4 x float> %1279, float 0.000000e+00, i32 2
  %1281 = insertelement <4 x float> %1280, float 0.000000e+00, i32 3
  %1282 = getelementptr inbounds float, float* %1, i64 3
  %1283 = load float, float* %1282, align 4
  %1284 = insertelement <4 x float> zeroinitializer, float %1283, i32 0
  %1285 = insertelement <4 x float> %1284, float 0.000000e+00, i32 1
  %1286 = insertelement <4 x float> %1285, float 0.000000e+00, i32 2
  %1287 = insertelement <4 x float> %1286, float 0.000000e+00, i32 3
  %1288 = call <4 x float> @llvm.fma.f32.49(<4 x float> %1281, <4 x float> %1287, <4 x float> zeroinitializer)
  %1289 = extractelement <4 x float> %1288, i32 0
  %1290 = getelementptr inbounds float, float* %2, i64 7
  store float %1289, float* %1290, align 4
  %1291 = getelementptr inbounds float, float* %0, i64 4
  %1292 = load float, float* %1291, align 4
  %1293 = insertelement <4 x float> zeroinitializer, float %1292, i32 0
  %1294 = insertelement <4 x float> %1293, float 1.000000e+00, i32 1
  %1295 = insertelement <4 x float> %1294, float 1.000000e+00, i32 2
  %1296 = insertelement <4 x float> %1295, float 1.000000e+00, i32 3
  %1297 = getelementptr inbounds float, float* %1, i64 3
  %1298 = load float, float* %1297, align 4
  %1299 = insertelement <4 x float> zeroinitializer, float %1298, i32 0
  %1300 = insertelement <4 x float> %1299, float 0.000000e+00, i32 1
  %1301 = insertelement <4 x float> %1300, float 0.000000e+00, i32 2
  %1302 = insertelement <4 x float> %1301, float 0.000000e+00, i32 3
  %1303 = fmul <4 x float> %1296, %1302
  %1304 = fadd <4 x float> %1303, zeroinitializer
  %1305 = getelementptr inbounds float, float* %0, i64 5
  %1306 = load float, float* %1305, align 4
  %1307 = insertelement <4 x float> zeroinitializer, float %1306, i32 0
  %1308 = insertelement <4 x float> %1307, float 0.000000e+00, i32 1
  %1309 = insertelement <4 x float> %1308, float 0.000000e+00, i32 2
  %1310 = insertelement <4 x float> %1309, float 0.000000e+00, i32 3
  %1311 = getelementptr inbounds float, float* %1, i64 7
  %1312 = load float, float* %1311, align 4
  %1313 = insertelement <4 x float> zeroinitializer, float %1312, i32 0
  %1314 = insertelement <4 x float> %1313, float 0.000000e+00, i32 1
  %1315 = insertelement <4 x float> %1314, float 0.000000e+00, i32 2
  %1316 = insertelement <4 x float> %1315, float 0.000000e+00, i32 3
  %1317 = call <4 x float> @llvm.fma.f32.50(<4 x float> %1310, <4 x float> %1316, <4 x float> %1304)
  %1318 = extractelement <4 x float> %1317, i32 0
  %1319 = getelementptr inbounds float, float* %2, i64 7
  store float %1318, float* %1319, align 4
  %1320 = getelementptr inbounds float, float* %0, i64 4
  %1321 = load float, float* %1320, align 4
  %1322 = insertelement <4 x float> zeroinitializer, float %1321, i32 0
  %1323 = insertelement <4 x float> %1322, float 1.000000e+00, i32 1
  %1324 = insertelement <4 x float> %1323, float 1.000000e+00, i32 2
  %1325 = insertelement <4 x float> %1324, float 1.000000e+00, i32 3
  %1326 = getelementptr inbounds float, float* %1, i64 3
  %1327 = load float, float* %1326, align 4
  %1328 = insertelement <4 x float> zeroinitializer, float %1327, i32 0
  %1329 = insertelement <4 x float> %1328, float 0.000000e+00, i32 1
  %1330 = insertelement <4 x float> %1329, float 0.000000e+00, i32 2
  %1331 = insertelement <4 x float> %1330, float 0.000000e+00, i32 3
  %1332 = fmul <4 x float> %1325, %1331
  %1333 = fadd <4 x float> %1332, zeroinitializer
  %1334 = getelementptr inbounds float, float* %0, i64 5
  %1335 = load float, float* %1334, align 4
  %1336 = insertelement <4 x float> zeroinitializer, float %1335, i32 0
  %1337 = insertelement <4 x float> %1336, float 1.000000e+00, i32 1
  %1338 = insertelement <4 x float> %1337, float 1.000000e+00, i32 2
  %1339 = insertelement <4 x float> %1338, float 1.000000e+00, i32 3
  %1340 = getelementptr inbounds float, float* %1, i64 7
  %1341 = load float, float* %1340, align 4
  %1342 = insertelement <4 x float> zeroinitializer, float %1341, i32 0
  %1343 = insertelement <4 x float> %1342, float 0.000000e+00, i32 1
  %1344 = insertelement <4 x float> %1343, float 0.000000e+00, i32 2
  %1345 = insertelement <4 x float> %1344, float 0.000000e+00, i32 3
  %1346 = call <4 x float> @llvm.fma.f32.51(<4 x float> %1339, <4 x float> %1345, <4 x float> %1333)
  %1347 = getelementptr inbounds float, float* %0, i64 6
  %1348 = load float, float* %1347, align 4
  %1349 = insertelement <4 x float> zeroinitializer, float %1348, i32 0
  %1350 = insertelement <4 x float> %1349, float 0.000000e+00, i32 1
  %1351 = insertelement <4 x float> %1350, float 0.000000e+00, i32 2
  %1352 = insertelement <4 x float> %1351, float 0.000000e+00, i32 3
  %1353 = getelementptr inbounds float, float* %1, i64 11
  %1354 = load float, float* %1353, align 4
  %1355 = insertelement <4 x float> zeroinitializer, float %1354, i32 0
  %1356 = insertelement <4 x float> %1355, float 0.000000e+00, i32 1
  %1357 = insertelement <4 x float> %1356, float 0.000000e+00, i32 2
  %1358 = insertelement <4 x float> %1357, float 0.000000e+00, i32 3
  %1359 = call <4 x float> @llvm.fma.f32.52(<4 x float> %1352, <4 x float> %1358, <4 x float> %1346)
  %1360 = extractelement <4 x float> %1359, i32 0
  %1361 = getelementptr inbounds float, float* %2, i64 7
  store float %1360, float* %1361, align 4
  %1362 = getelementptr inbounds float, float* %0, i64 4
  %1363 = load float, float* %1362, align 4
  %1364 = insertelement <4 x float> zeroinitializer, float %1363, i32 0
  %1365 = insertelement <4 x float> %1364, float 1.000000e+00, i32 1
  %1366 = insertelement <4 x float> %1365, float 1.000000e+00, i32 2
  %1367 = insertelement <4 x float> %1366, float 1.000000e+00, i32 3
  %1368 = getelementptr inbounds float, float* %1, i64 3
  %1369 = load float, float* %1368, align 4
  %1370 = insertelement <4 x float> zeroinitializer, float %1369, i32 0
  %1371 = insertelement <4 x float> %1370, float 0.000000e+00, i32 1
  %1372 = insertelement <4 x float> %1371, float 0.000000e+00, i32 2
  %1373 = insertelement <4 x float> %1372, float 0.000000e+00, i32 3
  %1374 = fmul <4 x float> %1367, %1373
  %1375 = fadd <4 x float> %1374, zeroinitializer
  %1376 = getelementptr inbounds float, float* %0, i64 5
  %1377 = load float, float* %1376, align 4
  %1378 = insertelement <4 x float> zeroinitializer, float %1377, i32 0
  %1379 = insertelement <4 x float> %1378, float 1.000000e+00, i32 1
  %1380 = insertelement <4 x float> %1379, float 1.000000e+00, i32 2
  %1381 = insertelement <4 x float> %1380, float 1.000000e+00, i32 3
  %1382 = getelementptr inbounds float, float* %1, i64 7
  %1383 = load float, float* %1382, align 4
  %1384 = insertelement <4 x float> zeroinitializer, float %1383, i32 0
  %1385 = insertelement <4 x float> %1384, float 0.000000e+00, i32 1
  %1386 = insertelement <4 x float> %1385, float 0.000000e+00, i32 2
  %1387 = insertelement <4 x float> %1386, float 0.000000e+00, i32 3
  %1388 = call <4 x float> @llvm.fma.f32.53(<4 x float> %1381, <4 x float> %1387, <4 x float> %1375)
  %1389 = getelementptr inbounds float, float* %0, i64 6
  %1390 = load float, float* %1389, align 4
  %1391 = insertelement <4 x float> zeroinitializer, float %1390, i32 0
  %1392 = insertelement <4 x float> %1391, float 1.000000e+00, i32 1
  %1393 = insertelement <4 x float> %1392, float 1.000000e+00, i32 2
  %1394 = insertelement <4 x float> %1393, float 1.000000e+00, i32 3
  %1395 = getelementptr inbounds float, float* %1, i64 11
  %1396 = load float, float* %1395, align 4
  %1397 = insertelement <4 x float> zeroinitializer, float %1396, i32 0
  %1398 = insertelement <4 x float> %1397, float 0.000000e+00, i32 1
  %1399 = insertelement <4 x float> %1398, float 0.000000e+00, i32 2
  %1400 = insertelement <4 x float> %1399, float 0.000000e+00, i32 3
  %1401 = call <4 x float> @llvm.fma.f32.54(<4 x float> %1394, <4 x float> %1400, <4 x float> %1388)
  %1402 = getelementptr inbounds float, float* %0, i64 7
  %1403 = load float, float* %1402, align 4
  %1404 = insertelement <4 x float> zeroinitializer, float %1403, i32 0
  %1405 = insertelement <4 x float> %1404, float 0.000000e+00, i32 1
  %1406 = insertelement <4 x float> %1405, float 0.000000e+00, i32 2
  %1407 = insertelement <4 x float> %1406, float 0.000000e+00, i32 3
  %1408 = getelementptr inbounds float, float* %1, i64 15
  %1409 = load float, float* %1408, align 4
  %1410 = insertelement <4 x float> zeroinitializer, float %1409, i32 0
  %1411 = insertelement <4 x float> %1410, float 0.000000e+00, i32 1
  %1412 = insertelement <4 x float> %1411, float 0.000000e+00, i32 2
  %1413 = insertelement <4 x float> %1412, float 0.000000e+00, i32 3
  %1414 = call <4 x float> @llvm.fma.f32.55(<4 x float> %1407, <4 x float> %1413, <4 x float> %1401)
  %1415 = extractelement <4 x float> %1414, i32 0
  %1416 = getelementptr inbounds float, float* %2, i64 7
  store float %1415, float* %1416, align 4
  %1417 = getelementptr inbounds float, float* %2, i64 8
  store float 0.000000e+00, float* %1417, align 4
  %1418 = getelementptr inbounds float, float* %0, i64 8
  %1419 = load float, float* %1418, align 4
  %1420 = insertelement <4 x float> zeroinitializer, float %1419, i32 0
  %1421 = insertelement <4 x float> %1420, float 0.000000e+00, i32 1
  %1422 = insertelement <4 x float> %1421, float 0.000000e+00, i32 2
  %1423 = insertelement <4 x float> %1422, float 0.000000e+00, i32 3
  %1424 = load float, float* %1, align 4
  %1425 = insertelement <4 x float> zeroinitializer, float %1424, i32 0
  %1426 = insertelement <4 x float> %1425, float 0.000000e+00, i32 1
  %1427 = insertelement <4 x float> %1426, float 0.000000e+00, i32 2
  %1428 = insertelement <4 x float> %1427, float 0.000000e+00, i32 3
  %1429 = call <4 x float> @llvm.fma.f32.56(<4 x float> %1423, <4 x float> %1428, <4 x float> zeroinitializer)
  %1430 = extractelement <4 x float> %1429, i32 0
  %1431 = getelementptr inbounds float, float* %2, i64 8
  store float %1430, float* %1431, align 4
  %1432 = getelementptr inbounds float, float* %0, i64 8
  %1433 = load float, float* %1432, align 4
  %1434 = insertelement <4 x float> zeroinitializer, float %1433, i32 0
  %1435 = insertelement <4 x float> %1434, float 1.000000e+00, i32 1
  %1436 = insertelement <4 x float> %1435, float 1.000000e+00, i32 2
  %1437 = insertelement <4 x float> %1436, float 1.000000e+00, i32 3
  %1438 = load float, float* %1, align 4
  %1439 = insertelement <4 x float> zeroinitializer, float %1438, i32 0
  %1440 = insertelement <4 x float> %1439, float 0.000000e+00, i32 1
  %1441 = insertelement <4 x float> %1440, float 0.000000e+00, i32 2
  %1442 = insertelement <4 x float> %1441, float 0.000000e+00, i32 3
  %1443 = fmul <4 x float> %1437, %1442
  %1444 = fadd <4 x float> %1443, zeroinitializer
  %1445 = getelementptr inbounds float, float* %0, i64 9
  %1446 = load float, float* %1445, align 4
  %1447 = insertelement <4 x float> zeroinitializer, float %1446, i32 0
  %1448 = insertelement <4 x float> %1447, float 0.000000e+00, i32 1
  %1449 = insertelement <4 x float> %1448, float 0.000000e+00, i32 2
  %1450 = insertelement <4 x float> %1449, float 0.000000e+00, i32 3
  %1451 = getelementptr inbounds float, float* %1, i64 4
  %1452 = load float, float* %1451, align 4
  %1453 = insertelement <4 x float> zeroinitializer, float %1452, i32 0
  %1454 = insertelement <4 x float> %1453, float 0.000000e+00, i32 1
  %1455 = insertelement <4 x float> %1454, float 0.000000e+00, i32 2
  %1456 = insertelement <4 x float> %1455, float 0.000000e+00, i32 3
  %1457 = call <4 x float> @llvm.fma.f32.57(<4 x float> %1450, <4 x float> %1456, <4 x float> %1444)
  %1458 = extractelement <4 x float> %1457, i32 0
  %1459 = getelementptr inbounds float, float* %2, i64 8
  store float %1458, float* %1459, align 4
  %1460 = getelementptr inbounds float, float* %0, i64 8
  %1461 = load float, float* %1460, align 4
  %1462 = insertelement <4 x float> zeroinitializer, float %1461, i32 0
  %1463 = insertelement <4 x float> %1462, float 1.000000e+00, i32 1
  %1464 = insertelement <4 x float> %1463, float 1.000000e+00, i32 2
  %1465 = insertelement <4 x float> %1464, float 1.000000e+00, i32 3
  %1466 = load float, float* %1, align 4
  %1467 = insertelement <4 x float> zeroinitializer, float %1466, i32 0
  %1468 = insertelement <4 x float> %1467, float 0.000000e+00, i32 1
  %1469 = insertelement <4 x float> %1468, float 0.000000e+00, i32 2
  %1470 = insertelement <4 x float> %1469, float 0.000000e+00, i32 3
  %1471 = fmul <4 x float> %1465, %1470
  %1472 = fadd <4 x float> %1471, zeroinitializer
  %1473 = getelementptr inbounds float, float* %0, i64 9
  %1474 = load float, float* %1473, align 4
  %1475 = insertelement <4 x float> zeroinitializer, float %1474, i32 0
  %1476 = insertelement <4 x float> %1475, float 1.000000e+00, i32 1
  %1477 = insertelement <4 x float> %1476, float 1.000000e+00, i32 2
  %1478 = insertelement <4 x float> %1477, float 1.000000e+00, i32 3
  %1479 = getelementptr inbounds float, float* %1, i64 4
  %1480 = load float, float* %1479, align 4
  %1481 = insertelement <4 x float> zeroinitializer, float %1480, i32 0
  %1482 = insertelement <4 x float> %1481, float 0.000000e+00, i32 1
  %1483 = insertelement <4 x float> %1482, float 0.000000e+00, i32 2
  %1484 = insertelement <4 x float> %1483, float 0.000000e+00, i32 3
  %1485 = call <4 x float> @llvm.fma.f32.58(<4 x float> %1478, <4 x float> %1484, <4 x float> %1472)
  %1486 = getelementptr inbounds float, float* %0, i64 10
  %1487 = load float, float* %1486, align 4
  %1488 = insertelement <4 x float> zeroinitializer, float %1487, i32 0
  %1489 = insertelement <4 x float> %1488, float 0.000000e+00, i32 1
  %1490 = insertelement <4 x float> %1489, float 0.000000e+00, i32 2
  %1491 = insertelement <4 x float> %1490, float 0.000000e+00, i32 3
  %1492 = getelementptr inbounds float, float* %1, i64 8
  %1493 = load float, float* %1492, align 4
  %1494 = insertelement <4 x float> zeroinitializer, float %1493, i32 0
  %1495 = insertelement <4 x float> %1494, float 0.000000e+00, i32 1
  %1496 = insertelement <4 x float> %1495, float 0.000000e+00, i32 2
  %1497 = insertelement <4 x float> %1496, float 0.000000e+00, i32 3
  %1498 = call <4 x float> @llvm.fma.f32.59(<4 x float> %1491, <4 x float> %1497, <4 x float> %1485)
  %1499 = extractelement <4 x float> %1498, i32 0
  %1500 = getelementptr inbounds float, float* %2, i64 8
  store float %1499, float* %1500, align 4
  %1501 = getelementptr inbounds float, float* %0, i64 8
  %1502 = load float, float* %1501, align 4
  %1503 = insertelement <4 x float> zeroinitializer, float %1502, i32 0
  %1504 = insertelement <4 x float> %1503, float 1.000000e+00, i32 1
  %1505 = insertelement <4 x float> %1504, float 1.000000e+00, i32 2
  %1506 = insertelement <4 x float> %1505, float 1.000000e+00, i32 3
  %1507 = load float, float* %1, align 4
  %1508 = insertelement <4 x float> zeroinitializer, float %1507, i32 0
  %1509 = insertelement <4 x float> %1508, float 0.000000e+00, i32 1
  %1510 = insertelement <4 x float> %1509, float 0.000000e+00, i32 2
  %1511 = insertelement <4 x float> %1510, float 0.000000e+00, i32 3
  %1512 = fmul <4 x float> %1506, %1511
  %1513 = fadd <4 x float> %1512, zeroinitializer
  %1514 = getelementptr inbounds float, float* %0, i64 9
  %1515 = load float, float* %1514, align 4
  %1516 = insertelement <4 x float> zeroinitializer, float %1515, i32 0
  %1517 = insertelement <4 x float> %1516, float 1.000000e+00, i32 1
  %1518 = insertelement <4 x float> %1517, float 1.000000e+00, i32 2
  %1519 = insertelement <4 x float> %1518, float 1.000000e+00, i32 3
  %1520 = getelementptr inbounds float, float* %1, i64 4
  %1521 = load float, float* %1520, align 4
  %1522 = insertelement <4 x float> zeroinitializer, float %1521, i32 0
  %1523 = insertelement <4 x float> %1522, float 0.000000e+00, i32 1
  %1524 = insertelement <4 x float> %1523, float 0.000000e+00, i32 2
  %1525 = insertelement <4 x float> %1524, float 0.000000e+00, i32 3
  %1526 = call <4 x float> @llvm.fma.f32.60(<4 x float> %1519, <4 x float> %1525, <4 x float> %1513)
  %1527 = getelementptr inbounds float, float* %0, i64 10
  %1528 = load float, float* %1527, align 4
  %1529 = insertelement <4 x float> zeroinitializer, float %1528, i32 0
  %1530 = insertelement <4 x float> %1529, float 1.000000e+00, i32 1
  %1531 = insertelement <4 x float> %1530, float 1.000000e+00, i32 2
  %1532 = insertelement <4 x float> %1531, float 1.000000e+00, i32 3
  %1533 = getelementptr inbounds float, float* %1, i64 8
  %1534 = load float, float* %1533, align 4
  %1535 = insertelement <4 x float> zeroinitializer, float %1534, i32 0
  %1536 = insertelement <4 x float> %1535, float 0.000000e+00, i32 1
  %1537 = insertelement <4 x float> %1536, float 0.000000e+00, i32 2
  %1538 = insertelement <4 x float> %1537, float 0.000000e+00, i32 3
  %1539 = call <4 x float> @llvm.fma.f32.61(<4 x float> %1532, <4 x float> %1538, <4 x float> %1526)
  %1540 = getelementptr inbounds float, float* %0, i64 11
  %1541 = load float, float* %1540, align 4
  %1542 = insertelement <4 x float> zeroinitializer, float %1541, i32 0
  %1543 = insertelement <4 x float> %1542, float 0.000000e+00, i32 1
  %1544 = insertelement <4 x float> %1543, float 0.000000e+00, i32 2
  %1545 = insertelement <4 x float> %1544, float 0.000000e+00, i32 3
  %1546 = getelementptr inbounds float, float* %1, i64 12
  %1547 = load float, float* %1546, align 4
  %1548 = insertelement <4 x float> zeroinitializer, float %1547, i32 0
  %1549 = insertelement <4 x float> %1548, float 0.000000e+00, i32 1
  %1550 = insertelement <4 x float> %1549, float 0.000000e+00, i32 2
  %1551 = insertelement <4 x float> %1550, float 0.000000e+00, i32 3
  %1552 = call <4 x float> @llvm.fma.f32.62(<4 x float> %1545, <4 x float> %1551, <4 x float> %1539)
  %1553 = extractelement <4 x float> %1552, i32 0
  %1554 = getelementptr inbounds float, float* %2, i64 8
  store float %1553, float* %1554, align 4
  %1555 = extractelement <4 x float> %1552, i32 1
  %1556 = getelementptr inbounds float, float* %2, i64 9
  store float %1555, float* %1556, align 4
  %1557 = getelementptr inbounds float, float* %0, i64 8
  %1558 = load float, float* %1557, align 4
  %1559 = insertelement <4 x float> zeroinitializer, float %1558, i32 0
  %1560 = insertelement <4 x float> %1559, float 0.000000e+00, i32 1
  %1561 = insertelement <4 x float> %1560, float 0.000000e+00, i32 2
  %1562 = insertelement <4 x float> %1561, float 0.000000e+00, i32 3
  %1563 = getelementptr inbounds float, float* %1, i64 1
  %1564 = load float, float* %1563, align 4
  %1565 = insertelement <4 x float> zeroinitializer, float %1564, i32 0
  %1566 = insertelement <4 x float> %1565, float 0.000000e+00, i32 1
  %1567 = insertelement <4 x float> %1566, float 0.000000e+00, i32 2
  %1568 = insertelement <4 x float> %1567, float 0.000000e+00, i32 3
  %1569 = call <4 x float> @llvm.fma.f32.63(<4 x float> %1562, <4 x float> %1568, <4 x float> zeroinitializer)
  %1570 = extractelement <4 x float> %1569, i32 0
  %1571 = getelementptr inbounds float, float* %2, i64 9
  store float %1570, float* %1571, align 4
  %1572 = getelementptr inbounds float, float* %0, i64 8
  %1573 = load float, float* %1572, align 4
  %1574 = insertelement <4 x float> zeroinitializer, float %1573, i32 0
  %1575 = insertelement <4 x float> %1574, float 1.000000e+00, i32 1
  %1576 = insertelement <4 x float> %1575, float 1.000000e+00, i32 2
  %1577 = insertelement <4 x float> %1576, float 1.000000e+00, i32 3
  %1578 = getelementptr inbounds float, float* %1, i64 1
  %1579 = load float, float* %1578, align 4
  %1580 = insertelement <4 x float> zeroinitializer, float %1579, i32 0
  %1581 = insertelement <4 x float> %1580, float 0.000000e+00, i32 1
  %1582 = insertelement <4 x float> %1581, float 0.000000e+00, i32 2
  %1583 = insertelement <4 x float> %1582, float 0.000000e+00, i32 3
  %1584 = fmul <4 x float> %1577, %1583
  %1585 = fadd <4 x float> %1584, zeroinitializer
  %1586 = getelementptr inbounds float, float* %0, i64 9
  %1587 = load float, float* %1586, align 4
  %1588 = insertelement <4 x float> zeroinitializer, float %1587, i32 0
  %1589 = insertelement <4 x float> %1588, float 0.000000e+00, i32 1
  %1590 = insertelement <4 x float> %1589, float 0.000000e+00, i32 2
  %1591 = insertelement <4 x float> %1590, float 0.000000e+00, i32 3
  %1592 = getelementptr inbounds float, float* %1, i64 5
  %1593 = load float, float* %1592, align 4
  %1594 = insertelement <4 x float> zeroinitializer, float %1593, i32 0
  %1595 = insertelement <4 x float> %1594, float 0.000000e+00, i32 1
  %1596 = insertelement <4 x float> %1595, float 0.000000e+00, i32 2
  %1597 = insertelement <4 x float> %1596, float 0.000000e+00, i32 3
  %1598 = call <4 x float> @llvm.fma.f32.64(<4 x float> %1591, <4 x float> %1597, <4 x float> %1585)
  %1599 = extractelement <4 x float> %1598, i32 0
  %1600 = getelementptr inbounds float, float* %2, i64 9
  store float %1599, float* %1600, align 4
  %1601 = getelementptr inbounds float, float* %0, i64 8
  %1602 = load float, float* %1601, align 4
  %1603 = insertelement <4 x float> zeroinitializer, float %1602, i32 0
  %1604 = insertelement <4 x float> %1603, float 1.000000e+00, i32 1
  %1605 = insertelement <4 x float> %1604, float 1.000000e+00, i32 2
  %1606 = insertelement <4 x float> %1605, float 1.000000e+00, i32 3
  %1607 = getelementptr inbounds float, float* %1, i64 1
  %1608 = load float, float* %1607, align 4
  %1609 = insertelement <4 x float> zeroinitializer, float %1608, i32 0
  %1610 = insertelement <4 x float> %1609, float 0.000000e+00, i32 1
  %1611 = insertelement <4 x float> %1610, float 0.000000e+00, i32 2
  %1612 = insertelement <4 x float> %1611, float 0.000000e+00, i32 3
  %1613 = fmul <4 x float> %1606, %1612
  %1614 = fadd <4 x float> %1613, zeroinitializer
  %1615 = getelementptr inbounds float, float* %0, i64 9
  %1616 = load float, float* %1615, align 4
  %1617 = insertelement <4 x float> zeroinitializer, float %1616, i32 0
  %1618 = insertelement <4 x float> %1617, float 1.000000e+00, i32 1
  %1619 = insertelement <4 x float> %1618, float 1.000000e+00, i32 2
  %1620 = insertelement <4 x float> %1619, float 1.000000e+00, i32 3
  %1621 = getelementptr inbounds float, float* %1, i64 5
  %1622 = load float, float* %1621, align 4
  %1623 = insertelement <4 x float> zeroinitializer, float %1622, i32 0
  %1624 = insertelement <4 x float> %1623, float 0.000000e+00, i32 1
  %1625 = insertelement <4 x float> %1624, float 0.000000e+00, i32 2
  %1626 = insertelement <4 x float> %1625, float 0.000000e+00, i32 3
  %1627 = call <4 x float> @llvm.fma.f32.65(<4 x float> %1620, <4 x float> %1626, <4 x float> %1614)
  %1628 = getelementptr inbounds float, float* %0, i64 10
  %1629 = load float, float* %1628, align 4
  %1630 = insertelement <4 x float> zeroinitializer, float %1629, i32 0
  %1631 = insertelement <4 x float> %1630, float 0.000000e+00, i32 1
  %1632 = insertelement <4 x float> %1631, float 0.000000e+00, i32 2
  %1633 = insertelement <4 x float> %1632, float 0.000000e+00, i32 3
  %1634 = getelementptr inbounds float, float* %1, i64 9
  %1635 = load float, float* %1634, align 4
  %1636 = insertelement <4 x float> zeroinitializer, float %1635, i32 0
  %1637 = insertelement <4 x float> %1636, float 0.000000e+00, i32 1
  %1638 = insertelement <4 x float> %1637, float 0.000000e+00, i32 2
  %1639 = insertelement <4 x float> %1638, float 0.000000e+00, i32 3
  %1640 = call <4 x float> @llvm.fma.f32.66(<4 x float> %1633, <4 x float> %1639, <4 x float> %1627)
  %1641 = extractelement <4 x float> %1640, i32 0
  %1642 = getelementptr inbounds float, float* %2, i64 9
  store float %1641, float* %1642, align 4
  %1643 = getelementptr inbounds float, float* %0, i64 8
  %1644 = load float, float* %1643, align 4
  %1645 = insertelement <4 x float> zeroinitializer, float %1644, i32 0
  %1646 = insertelement <4 x float> %1645, float 1.000000e+00, i32 1
  %1647 = insertelement <4 x float> %1646, float 1.000000e+00, i32 2
  %1648 = insertelement <4 x float> %1647, float 1.000000e+00, i32 3
  %1649 = getelementptr inbounds float, float* %1, i64 1
  %1650 = load float, float* %1649, align 4
  %1651 = insertelement <4 x float> zeroinitializer, float %1650, i32 0
  %1652 = insertelement <4 x float> %1651, float 0.000000e+00, i32 1
  %1653 = insertelement <4 x float> %1652, float 0.000000e+00, i32 2
  %1654 = insertelement <4 x float> %1653, float 0.000000e+00, i32 3
  %1655 = fmul <4 x float> %1648, %1654
  %1656 = fadd <4 x float> %1655, zeroinitializer
  %1657 = getelementptr inbounds float, float* %0, i64 9
  %1658 = load float, float* %1657, align 4
  %1659 = insertelement <4 x float> zeroinitializer, float %1658, i32 0
  %1660 = insertelement <4 x float> %1659, float 1.000000e+00, i32 1
  %1661 = insertelement <4 x float> %1660, float 1.000000e+00, i32 2
  %1662 = insertelement <4 x float> %1661, float 1.000000e+00, i32 3
  %1663 = getelementptr inbounds float, float* %1, i64 5
  %1664 = load float, float* %1663, align 4
  %1665 = insertelement <4 x float> zeroinitializer, float %1664, i32 0
  %1666 = insertelement <4 x float> %1665, float 0.000000e+00, i32 1
  %1667 = insertelement <4 x float> %1666, float 0.000000e+00, i32 2
  %1668 = insertelement <4 x float> %1667, float 0.000000e+00, i32 3
  %1669 = call <4 x float> @llvm.fma.f32.67(<4 x float> %1662, <4 x float> %1668, <4 x float> %1656)
  %1670 = getelementptr inbounds float, float* %0, i64 10
  %1671 = load float, float* %1670, align 4
  %1672 = insertelement <4 x float> zeroinitializer, float %1671, i32 0
  %1673 = insertelement <4 x float> %1672, float 1.000000e+00, i32 1
  %1674 = insertelement <4 x float> %1673, float 1.000000e+00, i32 2
  %1675 = insertelement <4 x float> %1674, float 1.000000e+00, i32 3
  %1676 = getelementptr inbounds float, float* %1, i64 9
  %1677 = load float, float* %1676, align 4
  %1678 = insertelement <4 x float> zeroinitializer, float %1677, i32 0
  %1679 = insertelement <4 x float> %1678, float 0.000000e+00, i32 1
  %1680 = insertelement <4 x float> %1679, float 0.000000e+00, i32 2
  %1681 = insertelement <4 x float> %1680, float 0.000000e+00, i32 3
  %1682 = call <4 x float> @llvm.fma.f32.68(<4 x float> %1675, <4 x float> %1681, <4 x float> %1669)
  %1683 = getelementptr inbounds float, float* %0, i64 11
  %1684 = load float, float* %1683, align 4
  %1685 = insertelement <4 x float> zeroinitializer, float %1684, i32 0
  %1686 = insertelement <4 x float> %1685, float 0.000000e+00, i32 1
  %1687 = insertelement <4 x float> %1686, float 0.000000e+00, i32 2
  %1688 = insertelement <4 x float> %1687, float 0.000000e+00, i32 3
  %1689 = getelementptr inbounds float, float* %1, i64 13
  %1690 = load float, float* %1689, align 4
  %1691 = insertelement <4 x float> zeroinitializer, float %1690, i32 0
  %1692 = insertelement <4 x float> %1691, float 0.000000e+00, i32 1
  %1693 = insertelement <4 x float> %1692, float 0.000000e+00, i32 2
  %1694 = insertelement <4 x float> %1693, float 0.000000e+00, i32 3
  %1695 = call <4 x float> @llvm.fma.f32.69(<4 x float> %1688, <4 x float> %1694, <4 x float> %1682)
  %1696 = extractelement <4 x float> %1695, i32 0
  %1697 = getelementptr inbounds float, float* %2, i64 9
  store float %1696, float* %1697, align 4
  %1698 = extractelement <4 x float> %1695, i32 1
  %1699 = getelementptr inbounds float, float* %2, i64 10
  store float %1698, float* %1699, align 4
  %1700 = getelementptr inbounds float, float* %0, i64 8
  %1701 = load float, float* %1700, align 4
  %1702 = insertelement <4 x float> zeroinitializer, float %1701, i32 0
  %1703 = insertelement <4 x float> %1702, float 0.000000e+00, i32 1
  %1704 = insertelement <4 x float> %1703, float 0.000000e+00, i32 2
  %1705 = insertelement <4 x float> %1704, float 0.000000e+00, i32 3
  %1706 = getelementptr inbounds float, float* %1, i64 2
  %1707 = load float, float* %1706, align 4
  %1708 = insertelement <4 x float> zeroinitializer, float %1707, i32 0
  %1709 = insertelement <4 x float> %1708, float 0.000000e+00, i32 1
  %1710 = insertelement <4 x float> %1709, float 0.000000e+00, i32 2
  %1711 = insertelement <4 x float> %1710, float 0.000000e+00, i32 3
  %1712 = call <4 x float> @llvm.fma.f32.70(<4 x float> %1705, <4 x float> %1711, <4 x float> zeroinitializer)
  %1713 = extractelement <4 x float> %1712, i32 0
  %1714 = getelementptr inbounds float, float* %2, i64 10
  store float %1713, float* %1714, align 4
  %1715 = getelementptr inbounds float, float* %0, i64 8
  %1716 = load float, float* %1715, align 4
  %1717 = insertelement <4 x float> zeroinitializer, float %1716, i32 0
  %1718 = insertelement <4 x float> %1717, float 1.000000e+00, i32 1
  %1719 = insertelement <4 x float> %1718, float 1.000000e+00, i32 2
  %1720 = insertelement <4 x float> %1719, float 1.000000e+00, i32 3
  %1721 = getelementptr inbounds float, float* %1, i64 2
  %1722 = load float, float* %1721, align 4
  %1723 = insertelement <4 x float> zeroinitializer, float %1722, i32 0
  %1724 = insertelement <4 x float> %1723, float 0.000000e+00, i32 1
  %1725 = insertelement <4 x float> %1724, float 0.000000e+00, i32 2
  %1726 = insertelement <4 x float> %1725, float 0.000000e+00, i32 3
  %1727 = fmul <4 x float> %1720, %1726
  %1728 = fadd <4 x float> %1727, zeroinitializer
  %1729 = getelementptr inbounds float, float* %0, i64 9
  %1730 = load float, float* %1729, align 4
  %1731 = insertelement <4 x float> zeroinitializer, float %1730, i32 0
  %1732 = insertelement <4 x float> %1731, float 0.000000e+00, i32 1
  %1733 = insertelement <4 x float> %1732, float 0.000000e+00, i32 2
  %1734 = insertelement <4 x float> %1733, float 0.000000e+00, i32 3
  %1735 = getelementptr inbounds float, float* %1, i64 6
  %1736 = load float, float* %1735, align 4
  %1737 = insertelement <4 x float> zeroinitializer, float %1736, i32 0
  %1738 = insertelement <4 x float> %1737, float 0.000000e+00, i32 1
  %1739 = insertelement <4 x float> %1738, float 0.000000e+00, i32 2
  %1740 = insertelement <4 x float> %1739, float 0.000000e+00, i32 3
  %1741 = call <4 x float> @llvm.fma.f32.71(<4 x float> %1734, <4 x float> %1740, <4 x float> %1728)
  %1742 = extractelement <4 x float> %1741, i32 0
  %1743 = getelementptr inbounds float, float* %2, i64 10
  store float %1742, float* %1743, align 4
  %1744 = getelementptr inbounds float, float* %0, i64 8
  %1745 = load float, float* %1744, align 4
  %1746 = insertelement <4 x float> zeroinitializer, float %1745, i32 0
  %1747 = insertelement <4 x float> %1746, float 1.000000e+00, i32 1
  %1748 = insertelement <4 x float> %1747, float 1.000000e+00, i32 2
  %1749 = insertelement <4 x float> %1748, float 1.000000e+00, i32 3
  %1750 = getelementptr inbounds float, float* %1, i64 2
  %1751 = load float, float* %1750, align 4
  %1752 = insertelement <4 x float> zeroinitializer, float %1751, i32 0
  %1753 = insertelement <4 x float> %1752, float 0.000000e+00, i32 1
  %1754 = insertelement <4 x float> %1753, float 0.000000e+00, i32 2
  %1755 = insertelement <4 x float> %1754, float 0.000000e+00, i32 3
  %1756 = fmul <4 x float> %1749, %1755
  %1757 = fadd <4 x float> %1756, zeroinitializer
  %1758 = getelementptr inbounds float, float* %0, i64 9
  %1759 = load float, float* %1758, align 4
  %1760 = insertelement <4 x float> zeroinitializer, float %1759, i32 0
  %1761 = insertelement <4 x float> %1760, float 1.000000e+00, i32 1
  %1762 = insertelement <4 x float> %1761, float 1.000000e+00, i32 2
  %1763 = insertelement <4 x float> %1762, float 1.000000e+00, i32 3
  %1764 = getelementptr inbounds float, float* %1, i64 6
  %1765 = load float, float* %1764, align 4
  %1766 = insertelement <4 x float> zeroinitializer, float %1765, i32 0
  %1767 = insertelement <4 x float> %1766, float 0.000000e+00, i32 1
  %1768 = insertelement <4 x float> %1767, float 0.000000e+00, i32 2
  %1769 = insertelement <4 x float> %1768, float 0.000000e+00, i32 3
  %1770 = call <4 x float> @llvm.fma.f32.72(<4 x float> %1763, <4 x float> %1769, <4 x float> %1757)
  %1771 = getelementptr inbounds float, float* %0, i64 10
  %1772 = load float, float* %1771, align 4
  %1773 = insertelement <4 x float> zeroinitializer, float %1772, i32 0
  %1774 = insertelement <4 x float> %1773, float 0.000000e+00, i32 1
  %1775 = insertelement <4 x float> %1774, float 0.000000e+00, i32 2
  %1776 = insertelement <4 x float> %1775, float 0.000000e+00, i32 3
  %1777 = getelementptr inbounds float, float* %1, i64 10
  %1778 = load float, float* %1777, align 4
  %1779 = insertelement <4 x float> zeroinitializer, float %1778, i32 0
  %1780 = insertelement <4 x float> %1779, float 0.000000e+00, i32 1
  %1781 = insertelement <4 x float> %1780, float 0.000000e+00, i32 2
  %1782 = insertelement <4 x float> %1781, float 0.000000e+00, i32 3
  %1783 = call <4 x float> @llvm.fma.f32.73(<4 x float> %1776, <4 x float> %1782, <4 x float> %1770)
  %1784 = extractelement <4 x float> %1783, i32 0
  %1785 = getelementptr inbounds float, float* %2, i64 10
  store float %1784, float* %1785, align 4
  %1786 = getelementptr inbounds float, float* %0, i64 8
  %1787 = load float, float* %1786, align 4
  %1788 = insertelement <4 x float> zeroinitializer, float %1787, i32 0
  %1789 = insertelement <4 x float> %1788, float 1.000000e+00, i32 1
  %1790 = insertelement <4 x float> %1789, float 1.000000e+00, i32 2
  %1791 = insertelement <4 x float> %1790, float 1.000000e+00, i32 3
  %1792 = getelementptr inbounds float, float* %1, i64 2
  %1793 = load float, float* %1792, align 4
  %1794 = insertelement <4 x float> zeroinitializer, float %1793, i32 0
  %1795 = insertelement <4 x float> %1794, float 0.000000e+00, i32 1
  %1796 = insertelement <4 x float> %1795, float 0.000000e+00, i32 2
  %1797 = insertelement <4 x float> %1796, float 0.000000e+00, i32 3
  %1798 = fmul <4 x float> %1791, %1797
  %1799 = fadd <4 x float> %1798, zeroinitializer
  %1800 = getelementptr inbounds float, float* %0, i64 9
  %1801 = load float, float* %1800, align 4
  %1802 = insertelement <4 x float> zeroinitializer, float %1801, i32 0
  %1803 = insertelement <4 x float> %1802, float 1.000000e+00, i32 1
  %1804 = insertelement <4 x float> %1803, float 1.000000e+00, i32 2
  %1805 = insertelement <4 x float> %1804, float 1.000000e+00, i32 3
  %1806 = getelementptr inbounds float, float* %1, i64 6
  %1807 = load float, float* %1806, align 4
  %1808 = insertelement <4 x float> zeroinitializer, float %1807, i32 0
  %1809 = insertelement <4 x float> %1808, float 0.000000e+00, i32 1
  %1810 = insertelement <4 x float> %1809, float 0.000000e+00, i32 2
  %1811 = insertelement <4 x float> %1810, float 0.000000e+00, i32 3
  %1812 = call <4 x float> @llvm.fma.f32.74(<4 x float> %1805, <4 x float> %1811, <4 x float> %1799)
  %1813 = getelementptr inbounds float, float* %0, i64 10
  %1814 = load float, float* %1813, align 4
  %1815 = insertelement <4 x float> zeroinitializer, float %1814, i32 0
  %1816 = insertelement <4 x float> %1815, float 1.000000e+00, i32 1
  %1817 = insertelement <4 x float> %1816, float 1.000000e+00, i32 2
  %1818 = insertelement <4 x float> %1817, float 1.000000e+00, i32 3
  %1819 = getelementptr inbounds float, float* %1, i64 10
  %1820 = load float, float* %1819, align 4
  %1821 = insertelement <4 x float> zeroinitializer, float %1820, i32 0
  %1822 = insertelement <4 x float> %1821, float 0.000000e+00, i32 1
  %1823 = insertelement <4 x float> %1822, float 0.000000e+00, i32 2
  %1824 = insertelement <4 x float> %1823, float 0.000000e+00, i32 3
  %1825 = call <4 x float> @llvm.fma.f32.75(<4 x float> %1818, <4 x float> %1824, <4 x float> %1812)
  %1826 = getelementptr inbounds float, float* %0, i64 11
  %1827 = load float, float* %1826, align 4
  %1828 = insertelement <4 x float> zeroinitializer, float %1827, i32 0
  %1829 = insertelement <4 x float> %1828, float 0.000000e+00, i32 1
  %1830 = insertelement <4 x float> %1829, float 0.000000e+00, i32 2
  %1831 = insertelement <4 x float> %1830, float 0.000000e+00, i32 3
  %1832 = getelementptr inbounds float, float* %1, i64 14
  %1833 = load float, float* %1832, align 4
  %1834 = insertelement <4 x float> zeroinitializer, float %1833, i32 0
  %1835 = insertelement <4 x float> %1834, float 0.000000e+00, i32 1
  %1836 = insertelement <4 x float> %1835, float 0.000000e+00, i32 2
  %1837 = insertelement <4 x float> %1836, float 0.000000e+00, i32 3
  %1838 = call <4 x float> @llvm.fma.f32.76(<4 x float> %1831, <4 x float> %1837, <4 x float> %1825)
  %1839 = extractelement <4 x float> %1838, i32 0
  %1840 = getelementptr inbounds float, float* %2, i64 10
  store float %1839, float* %1840, align 4
  %1841 = extractelement <4 x float> %1838, i32 1
  %1842 = getelementptr inbounds float, float* %2, i64 11
  store float %1841, float* %1842, align 4
  %1843 = getelementptr inbounds float, float* %0, i64 8
  %1844 = load float, float* %1843, align 4
  %1845 = insertelement <4 x float> zeroinitializer, float %1844, i32 0
  %1846 = insertelement <4 x float> %1845, float 0.000000e+00, i32 1
  %1847 = insertelement <4 x float> %1846, float 0.000000e+00, i32 2
  %1848 = insertelement <4 x float> %1847, float 0.000000e+00, i32 3
  %1849 = getelementptr inbounds float, float* %1, i64 3
  %1850 = load float, float* %1849, align 4
  %1851 = insertelement <4 x float> zeroinitializer, float %1850, i32 0
  %1852 = insertelement <4 x float> %1851, float 0.000000e+00, i32 1
  %1853 = insertelement <4 x float> %1852, float 0.000000e+00, i32 2
  %1854 = insertelement <4 x float> %1853, float 0.000000e+00, i32 3
  %1855 = call <4 x float> @llvm.fma.f32.77(<4 x float> %1848, <4 x float> %1854, <4 x float> zeroinitializer)
  %1856 = extractelement <4 x float> %1855, i32 0
  %1857 = getelementptr inbounds float, float* %2, i64 11
  store float %1856, float* %1857, align 4
  %1858 = getelementptr inbounds float, float* %0, i64 8
  %1859 = load float, float* %1858, align 4
  %1860 = insertelement <4 x float> zeroinitializer, float %1859, i32 0
  %1861 = insertelement <4 x float> %1860, float 1.000000e+00, i32 1
  %1862 = insertelement <4 x float> %1861, float 1.000000e+00, i32 2
  %1863 = insertelement <4 x float> %1862, float 1.000000e+00, i32 3
  %1864 = getelementptr inbounds float, float* %1, i64 3
  %1865 = load float, float* %1864, align 4
  %1866 = insertelement <4 x float> zeroinitializer, float %1865, i32 0
  %1867 = insertelement <4 x float> %1866, float 0.000000e+00, i32 1
  %1868 = insertelement <4 x float> %1867, float 0.000000e+00, i32 2
  %1869 = insertelement <4 x float> %1868, float 0.000000e+00, i32 3
  %1870 = fmul <4 x float> %1863, %1869
  %1871 = fadd <4 x float> %1870, zeroinitializer
  %1872 = getelementptr inbounds float, float* %0, i64 9
  %1873 = load float, float* %1872, align 4
  %1874 = insertelement <4 x float> zeroinitializer, float %1873, i32 0
  %1875 = insertelement <4 x float> %1874, float 0.000000e+00, i32 1
  %1876 = insertelement <4 x float> %1875, float 0.000000e+00, i32 2
  %1877 = insertelement <4 x float> %1876, float 0.000000e+00, i32 3
  %1878 = getelementptr inbounds float, float* %1, i64 7
  %1879 = load float, float* %1878, align 4
  %1880 = insertelement <4 x float> zeroinitializer, float %1879, i32 0
  %1881 = insertelement <4 x float> %1880, float 0.000000e+00, i32 1
  %1882 = insertelement <4 x float> %1881, float 0.000000e+00, i32 2
  %1883 = insertelement <4 x float> %1882, float 0.000000e+00, i32 3
  %1884 = call <4 x float> @llvm.fma.f32.78(<4 x float> %1877, <4 x float> %1883, <4 x float> %1871)
  %1885 = extractelement <4 x float> %1884, i32 0
  %1886 = getelementptr inbounds float, float* %2, i64 11
  store float %1885, float* %1886, align 4
  %1887 = getelementptr inbounds float, float* %0, i64 8
  %1888 = load float, float* %1887, align 4
  %1889 = insertelement <4 x float> zeroinitializer, float %1888, i32 0
  %1890 = insertelement <4 x float> %1889, float 1.000000e+00, i32 1
  %1891 = insertelement <4 x float> %1890, float 1.000000e+00, i32 2
  %1892 = insertelement <4 x float> %1891, float 1.000000e+00, i32 3
  %1893 = getelementptr inbounds float, float* %1, i64 3
  %1894 = load float, float* %1893, align 4
  %1895 = insertelement <4 x float> zeroinitializer, float %1894, i32 0
  %1896 = insertelement <4 x float> %1895, float 0.000000e+00, i32 1
  %1897 = insertelement <4 x float> %1896, float 0.000000e+00, i32 2
  %1898 = insertelement <4 x float> %1897, float 0.000000e+00, i32 3
  %1899 = fmul <4 x float> %1892, %1898
  %1900 = fadd <4 x float> %1899, zeroinitializer
  %1901 = getelementptr inbounds float, float* %0, i64 9
  %1902 = load float, float* %1901, align 4
  %1903 = insertelement <4 x float> zeroinitializer, float %1902, i32 0
  %1904 = insertelement <4 x float> %1903, float 1.000000e+00, i32 1
  %1905 = insertelement <4 x float> %1904, float 1.000000e+00, i32 2
  %1906 = insertelement <4 x float> %1905, float 1.000000e+00, i32 3
  %1907 = getelementptr inbounds float, float* %1, i64 7
  %1908 = load float, float* %1907, align 4
  %1909 = insertelement <4 x float> zeroinitializer, float %1908, i32 0
  %1910 = insertelement <4 x float> %1909, float 0.000000e+00, i32 1
  %1911 = insertelement <4 x float> %1910, float 0.000000e+00, i32 2
  %1912 = insertelement <4 x float> %1911, float 0.000000e+00, i32 3
  %1913 = call <4 x float> @llvm.fma.f32.79(<4 x float> %1906, <4 x float> %1912, <4 x float> %1900)
  %1914 = getelementptr inbounds float, float* %0, i64 10
  %1915 = load float, float* %1914, align 4
  %1916 = insertelement <4 x float> zeroinitializer, float %1915, i32 0
  %1917 = insertelement <4 x float> %1916, float 0.000000e+00, i32 1
  %1918 = insertelement <4 x float> %1917, float 0.000000e+00, i32 2
  %1919 = insertelement <4 x float> %1918, float 0.000000e+00, i32 3
  %1920 = getelementptr inbounds float, float* %1, i64 11
  %1921 = load float, float* %1920, align 4
  %1922 = insertelement <4 x float> zeroinitializer, float %1921, i32 0
  %1923 = insertelement <4 x float> %1922, float 0.000000e+00, i32 1
  %1924 = insertelement <4 x float> %1923, float 0.000000e+00, i32 2
  %1925 = insertelement <4 x float> %1924, float 0.000000e+00, i32 3
  %1926 = call <4 x float> @llvm.fma.f32.80(<4 x float> %1919, <4 x float> %1925, <4 x float> %1913)
  %1927 = extractelement <4 x float> %1926, i32 0
  %1928 = getelementptr inbounds float, float* %2, i64 11
  store float %1927, float* %1928, align 4
  %1929 = getelementptr inbounds float, float* %0, i64 8
  %1930 = load float, float* %1929, align 4
  %1931 = insertelement <4 x float> zeroinitializer, float %1930, i32 0
  %1932 = insertelement <4 x float> %1931, float 1.000000e+00, i32 1
  %1933 = insertelement <4 x float> %1932, float 1.000000e+00, i32 2
  %1934 = insertelement <4 x float> %1933, float 1.000000e+00, i32 3
  %1935 = getelementptr inbounds float, float* %1, i64 3
  %1936 = load float, float* %1935, align 4
  %1937 = insertelement <4 x float> zeroinitializer, float %1936, i32 0
  %1938 = insertelement <4 x float> %1937, float 0.000000e+00, i32 1
  %1939 = insertelement <4 x float> %1938, float 0.000000e+00, i32 2
  %1940 = insertelement <4 x float> %1939, float 0.000000e+00, i32 3
  %1941 = fmul <4 x float> %1934, %1940
  %1942 = fadd <4 x float> %1941, zeroinitializer
  %1943 = getelementptr inbounds float, float* %0, i64 9
  %1944 = load float, float* %1943, align 4
  %1945 = insertelement <4 x float> zeroinitializer, float %1944, i32 0
  %1946 = insertelement <4 x float> %1945, float 1.000000e+00, i32 1
  %1947 = insertelement <4 x float> %1946, float 1.000000e+00, i32 2
  %1948 = insertelement <4 x float> %1947, float 1.000000e+00, i32 3
  %1949 = getelementptr inbounds float, float* %1, i64 7
  %1950 = load float, float* %1949, align 4
  %1951 = insertelement <4 x float> zeroinitializer, float %1950, i32 0
  %1952 = insertelement <4 x float> %1951, float 0.000000e+00, i32 1
  %1953 = insertelement <4 x float> %1952, float 0.000000e+00, i32 2
  %1954 = insertelement <4 x float> %1953, float 0.000000e+00, i32 3
  %1955 = call <4 x float> @llvm.fma.f32.81(<4 x float> %1948, <4 x float> %1954, <4 x float> %1942)
  %1956 = getelementptr inbounds float, float* %0, i64 10
  %1957 = load float, float* %1956, align 4
  %1958 = insertelement <4 x float> zeroinitializer, float %1957, i32 0
  %1959 = insertelement <4 x float> %1958, float 1.000000e+00, i32 1
  %1960 = insertelement <4 x float> %1959, float 1.000000e+00, i32 2
  %1961 = insertelement <4 x float> %1960, float 1.000000e+00, i32 3
  %1962 = getelementptr inbounds float, float* %1, i64 11
  %1963 = load float, float* %1962, align 4
  %1964 = insertelement <4 x float> zeroinitializer, float %1963, i32 0
  %1965 = insertelement <4 x float> %1964, float 0.000000e+00, i32 1
  %1966 = insertelement <4 x float> %1965, float 0.000000e+00, i32 2
  %1967 = insertelement <4 x float> %1966, float 0.000000e+00, i32 3
  %1968 = call <4 x float> @llvm.fma.f32.82(<4 x float> %1961, <4 x float> %1967, <4 x float> %1955)
  %1969 = getelementptr inbounds float, float* %0, i64 11
  %1970 = load float, float* %1969, align 4
  %1971 = insertelement <4 x float> zeroinitializer, float %1970, i32 0
  %1972 = insertelement <4 x float> %1971, float 0.000000e+00, i32 1
  %1973 = insertelement <4 x float> %1972, float 0.000000e+00, i32 2
  %1974 = insertelement <4 x float> %1973, float 0.000000e+00, i32 3
  %1975 = getelementptr inbounds float, float* %1, i64 15
  %1976 = load float, float* %1975, align 4
  %1977 = insertelement <4 x float> zeroinitializer, float %1976, i32 0
  %1978 = insertelement <4 x float> %1977, float 0.000000e+00, i32 1
  %1979 = insertelement <4 x float> %1978, float 0.000000e+00, i32 2
  %1980 = insertelement <4 x float> %1979, float 0.000000e+00, i32 3
  %1981 = call <4 x float> @llvm.fma.f32.83(<4 x float> %1974, <4 x float> %1980, <4 x float> %1968)
  %1982 = extractelement <4 x float> %1981, i32 0
  %1983 = getelementptr inbounds float, float* %2, i64 11
  store float %1982, float* %1983, align 4
  %1984 = getelementptr inbounds float, float* %2, i64 12
  store float 0.000000e+00, float* %1984, align 4
  %1985 = getelementptr inbounds float, float* %0, i64 12
  %1986 = load float, float* %1985, align 4
  %1987 = insertelement <4 x float> zeroinitializer, float %1986, i32 0
  %1988 = insertelement <4 x float> %1987, float 0.000000e+00, i32 1
  %1989 = insertelement <4 x float> %1988, float 0.000000e+00, i32 2
  %1990 = insertelement <4 x float> %1989, float 0.000000e+00, i32 3
  %1991 = load float, float* %1, align 4
  %1992 = insertelement <4 x float> zeroinitializer, float %1991, i32 0
  %1993 = insertelement <4 x float> %1992, float 0.000000e+00, i32 1
  %1994 = insertelement <4 x float> %1993, float 0.000000e+00, i32 2
  %1995 = insertelement <4 x float> %1994, float 0.000000e+00, i32 3
  %1996 = call <4 x float> @llvm.fma.f32.84(<4 x float> %1990, <4 x float> %1995, <4 x float> zeroinitializer)
  %1997 = extractelement <4 x float> %1996, i32 0
  %1998 = getelementptr inbounds float, float* %2, i64 12
  store float %1997, float* %1998, align 4
  %1999 = getelementptr inbounds float, float* %0, i64 12
  %2000 = load float, float* %1999, align 4
  %2001 = insertelement <4 x float> zeroinitializer, float %2000, i32 0
  %2002 = insertelement <4 x float> %2001, float 1.000000e+00, i32 1
  %2003 = insertelement <4 x float> %2002, float 1.000000e+00, i32 2
  %2004 = insertelement <4 x float> %2003, float 1.000000e+00, i32 3
  %2005 = load float, float* %1, align 4
  %2006 = insertelement <4 x float> zeroinitializer, float %2005, i32 0
  %2007 = insertelement <4 x float> %2006, float 0.000000e+00, i32 1
  %2008 = insertelement <4 x float> %2007, float 0.000000e+00, i32 2
  %2009 = insertelement <4 x float> %2008, float 0.000000e+00, i32 3
  %2010 = fmul <4 x float> %2004, %2009
  %2011 = fadd <4 x float> %2010, zeroinitializer
  %2012 = getelementptr inbounds float, float* %0, i64 13
  %2013 = load float, float* %2012, align 4
  %2014 = insertelement <4 x float> zeroinitializer, float %2013, i32 0
  %2015 = insertelement <4 x float> %2014, float 0.000000e+00, i32 1
  %2016 = insertelement <4 x float> %2015, float 0.000000e+00, i32 2
  %2017 = insertelement <4 x float> %2016, float 0.000000e+00, i32 3
  %2018 = getelementptr inbounds float, float* %1, i64 4
  %2019 = load float, float* %2018, align 4
  %2020 = insertelement <4 x float> zeroinitializer, float %2019, i32 0
  %2021 = insertelement <4 x float> %2020, float 0.000000e+00, i32 1
  %2022 = insertelement <4 x float> %2021, float 0.000000e+00, i32 2
  %2023 = insertelement <4 x float> %2022, float 0.000000e+00, i32 3
  %2024 = call <4 x float> @llvm.fma.f32.85(<4 x float> %2017, <4 x float> %2023, <4 x float> %2011)
  %2025 = extractelement <4 x float> %2024, i32 0
  %2026 = getelementptr inbounds float, float* %2, i64 12
  store float %2025, float* %2026, align 4
  %2027 = getelementptr inbounds float, float* %0, i64 12
  %2028 = load float, float* %2027, align 4
  %2029 = insertelement <4 x float> zeroinitializer, float %2028, i32 0
  %2030 = insertelement <4 x float> %2029, float 1.000000e+00, i32 1
  %2031 = insertelement <4 x float> %2030, float 1.000000e+00, i32 2
  %2032 = insertelement <4 x float> %2031, float 1.000000e+00, i32 3
  %2033 = load float, float* %1, align 4
  %2034 = insertelement <4 x float> zeroinitializer, float %2033, i32 0
  %2035 = insertelement <4 x float> %2034, float 0.000000e+00, i32 1
  %2036 = insertelement <4 x float> %2035, float 0.000000e+00, i32 2
  %2037 = insertelement <4 x float> %2036, float 0.000000e+00, i32 3
  %2038 = fmul <4 x float> %2032, %2037
  %2039 = fadd <4 x float> %2038, zeroinitializer
  %2040 = getelementptr inbounds float, float* %0, i64 13
  %2041 = load float, float* %2040, align 4
  %2042 = insertelement <4 x float> zeroinitializer, float %2041, i32 0
  %2043 = insertelement <4 x float> %2042, float 1.000000e+00, i32 1
  %2044 = insertelement <4 x float> %2043, float 1.000000e+00, i32 2
  %2045 = insertelement <4 x float> %2044, float 1.000000e+00, i32 3
  %2046 = getelementptr inbounds float, float* %1, i64 4
  %2047 = load float, float* %2046, align 4
  %2048 = insertelement <4 x float> zeroinitializer, float %2047, i32 0
  %2049 = insertelement <4 x float> %2048, float 0.000000e+00, i32 1
  %2050 = insertelement <4 x float> %2049, float 0.000000e+00, i32 2
  %2051 = insertelement <4 x float> %2050, float 0.000000e+00, i32 3
  %2052 = call <4 x float> @llvm.fma.f32.86(<4 x float> %2045, <4 x float> %2051, <4 x float> %2039)
  %2053 = getelementptr inbounds float, float* %0, i64 14
  %2054 = load float, float* %2053, align 4
  %2055 = insertelement <4 x float> zeroinitializer, float %2054, i32 0
  %2056 = insertelement <4 x float> %2055, float 0.000000e+00, i32 1
  %2057 = insertelement <4 x float> %2056, float 0.000000e+00, i32 2
  %2058 = insertelement <4 x float> %2057, float 0.000000e+00, i32 3
  %2059 = getelementptr inbounds float, float* %1, i64 8
  %2060 = load float, float* %2059, align 4
  %2061 = insertelement <4 x float> zeroinitializer, float %2060, i32 0
  %2062 = insertelement <4 x float> %2061, float 0.000000e+00, i32 1
  %2063 = insertelement <4 x float> %2062, float 0.000000e+00, i32 2
  %2064 = insertelement <4 x float> %2063, float 0.000000e+00, i32 3
  %2065 = call <4 x float> @llvm.fma.f32.87(<4 x float> %2058, <4 x float> %2064, <4 x float> %2052)
  %2066 = extractelement <4 x float> %2065, i32 0
  %2067 = getelementptr inbounds float, float* %2, i64 12
  store float %2066, float* %2067, align 4
  %2068 = getelementptr inbounds float, float* %0, i64 12
  %2069 = load float, float* %2068, align 4
  %2070 = insertelement <4 x float> zeroinitializer, float %2069, i32 0
  %2071 = insertelement <4 x float> %2070, float 1.000000e+00, i32 1
  %2072 = insertelement <4 x float> %2071, float 1.000000e+00, i32 2
  %2073 = insertelement <4 x float> %2072, float 1.000000e+00, i32 3
  %2074 = load float, float* %1, align 4
  %2075 = insertelement <4 x float> zeroinitializer, float %2074, i32 0
  %2076 = insertelement <4 x float> %2075, float 0.000000e+00, i32 1
  %2077 = insertelement <4 x float> %2076, float 0.000000e+00, i32 2
  %2078 = insertelement <4 x float> %2077, float 0.000000e+00, i32 3
  %2079 = fmul <4 x float> %2073, %2078
  %2080 = fadd <4 x float> %2079, zeroinitializer
  %2081 = getelementptr inbounds float, float* %0, i64 13
  %2082 = load float, float* %2081, align 4
  %2083 = insertelement <4 x float> zeroinitializer, float %2082, i32 0
  %2084 = insertelement <4 x float> %2083, float 1.000000e+00, i32 1
  %2085 = insertelement <4 x float> %2084, float 1.000000e+00, i32 2
  %2086 = insertelement <4 x float> %2085, float 1.000000e+00, i32 3
  %2087 = getelementptr inbounds float, float* %1, i64 4
  %2088 = load float, float* %2087, align 4
  %2089 = insertelement <4 x float> zeroinitializer, float %2088, i32 0
  %2090 = insertelement <4 x float> %2089, float 0.000000e+00, i32 1
  %2091 = insertelement <4 x float> %2090, float 0.000000e+00, i32 2
  %2092 = insertelement <4 x float> %2091, float 0.000000e+00, i32 3
  %2093 = call <4 x float> @llvm.fma.f32.88(<4 x float> %2086, <4 x float> %2092, <4 x float> %2080)
  %2094 = getelementptr inbounds float, float* %0, i64 14
  %2095 = load float, float* %2094, align 4
  %2096 = insertelement <4 x float> zeroinitializer, float %2095, i32 0
  %2097 = insertelement <4 x float> %2096, float 1.000000e+00, i32 1
  %2098 = insertelement <4 x float> %2097, float 1.000000e+00, i32 2
  %2099 = insertelement <4 x float> %2098, float 1.000000e+00, i32 3
  %2100 = getelementptr inbounds float, float* %1, i64 8
  %2101 = load float, float* %2100, align 4
  %2102 = insertelement <4 x float> zeroinitializer, float %2101, i32 0
  %2103 = insertelement <4 x float> %2102, float 0.000000e+00, i32 1
  %2104 = insertelement <4 x float> %2103, float 0.000000e+00, i32 2
  %2105 = insertelement <4 x float> %2104, float 0.000000e+00, i32 3
  %2106 = call <4 x float> @llvm.fma.f32.89(<4 x float> %2099, <4 x float> %2105, <4 x float> %2093)
  %2107 = getelementptr inbounds float, float* %0, i64 15
  %2108 = load float, float* %2107, align 4
  %2109 = insertelement <4 x float> zeroinitializer, float %2108, i32 0
  %2110 = insertelement <4 x float> %2109, float 0.000000e+00, i32 1
  %2111 = insertelement <4 x float> %2110, float 0.000000e+00, i32 2
  %2112 = insertelement <4 x float> %2111, float 0.000000e+00, i32 3
  %2113 = getelementptr inbounds float, float* %1, i64 12
  %2114 = load float, float* %2113, align 4
  %2115 = insertelement <4 x float> zeroinitializer, float %2114, i32 0
  %2116 = insertelement <4 x float> %2115, float 0.000000e+00, i32 1
  %2117 = insertelement <4 x float> %2116, float 0.000000e+00, i32 2
  %2118 = insertelement <4 x float> %2117, float 0.000000e+00, i32 3
  %2119 = call <4 x float> @llvm.fma.f32.90(<4 x float> %2112, <4 x float> %2118, <4 x float> %2106)
  %2120 = extractelement <4 x float> %2119, i32 0
  %2121 = getelementptr inbounds float, float* %2, i64 12
  store float %2120, float* %2121, align 4
  %2122 = extractelement <4 x float> %2119, i32 1
  %2123 = getelementptr inbounds float, float* %2, i64 13
  store float %2122, float* %2123, align 4
  %2124 = getelementptr inbounds float, float* %0, i64 12
  %2125 = load float, float* %2124, align 4
  %2126 = insertelement <4 x float> zeroinitializer, float %2125, i32 0
  %2127 = insertelement <4 x float> %2126, float 0.000000e+00, i32 1
  %2128 = insertelement <4 x float> %2127, float 0.000000e+00, i32 2
  %2129 = insertelement <4 x float> %2128, float 0.000000e+00, i32 3
  %2130 = getelementptr inbounds float, float* %1, i64 1
  %2131 = load float, float* %2130, align 4
  %2132 = insertelement <4 x float> zeroinitializer, float %2131, i32 0
  %2133 = insertelement <4 x float> %2132, float 0.000000e+00, i32 1
  %2134 = insertelement <4 x float> %2133, float 0.000000e+00, i32 2
  %2135 = insertelement <4 x float> %2134, float 0.000000e+00, i32 3
  %2136 = call <4 x float> @llvm.fma.f32.91(<4 x float> %2129, <4 x float> %2135, <4 x float> zeroinitializer)
  %2137 = extractelement <4 x float> %2136, i32 0
  %2138 = getelementptr inbounds float, float* %2, i64 13
  store float %2137, float* %2138, align 4
  %2139 = getelementptr inbounds float, float* %0, i64 12
  %2140 = load float, float* %2139, align 4
  %2141 = insertelement <4 x float> zeroinitializer, float %2140, i32 0
  %2142 = insertelement <4 x float> %2141, float 1.000000e+00, i32 1
  %2143 = insertelement <4 x float> %2142, float 1.000000e+00, i32 2
  %2144 = insertelement <4 x float> %2143, float 1.000000e+00, i32 3
  %2145 = getelementptr inbounds float, float* %1, i64 1
  %2146 = load float, float* %2145, align 4
  %2147 = insertelement <4 x float> zeroinitializer, float %2146, i32 0
  %2148 = insertelement <4 x float> %2147, float 0.000000e+00, i32 1
  %2149 = insertelement <4 x float> %2148, float 0.000000e+00, i32 2
  %2150 = insertelement <4 x float> %2149, float 0.000000e+00, i32 3
  %2151 = fmul <4 x float> %2144, %2150
  %2152 = fadd <4 x float> %2151, zeroinitializer
  %2153 = getelementptr inbounds float, float* %0, i64 13
  %2154 = load float, float* %2153, align 4
  %2155 = insertelement <4 x float> zeroinitializer, float %2154, i32 0
  %2156 = insertelement <4 x float> %2155, float 0.000000e+00, i32 1
  %2157 = insertelement <4 x float> %2156, float 0.000000e+00, i32 2
  %2158 = insertelement <4 x float> %2157, float 0.000000e+00, i32 3
  %2159 = getelementptr inbounds float, float* %1, i64 5
  %2160 = load float, float* %2159, align 4
  %2161 = insertelement <4 x float> zeroinitializer, float %2160, i32 0
  %2162 = insertelement <4 x float> %2161, float 0.000000e+00, i32 1
  %2163 = insertelement <4 x float> %2162, float 0.000000e+00, i32 2
  %2164 = insertelement <4 x float> %2163, float 0.000000e+00, i32 3
  %2165 = call <4 x float> @llvm.fma.f32.92(<4 x float> %2158, <4 x float> %2164, <4 x float> %2152)
  %2166 = extractelement <4 x float> %2165, i32 0
  %2167 = getelementptr inbounds float, float* %2, i64 13
  store float %2166, float* %2167, align 4
  %2168 = getelementptr inbounds float, float* %0, i64 12
  %2169 = load float, float* %2168, align 4
  %2170 = insertelement <4 x float> zeroinitializer, float %2169, i32 0
  %2171 = insertelement <4 x float> %2170, float 1.000000e+00, i32 1
  %2172 = insertelement <4 x float> %2171, float 1.000000e+00, i32 2
  %2173 = insertelement <4 x float> %2172, float 1.000000e+00, i32 3
  %2174 = getelementptr inbounds float, float* %1, i64 1
  %2175 = load float, float* %2174, align 4
  %2176 = insertelement <4 x float> zeroinitializer, float %2175, i32 0
  %2177 = insertelement <4 x float> %2176, float 0.000000e+00, i32 1
  %2178 = insertelement <4 x float> %2177, float 0.000000e+00, i32 2
  %2179 = insertelement <4 x float> %2178, float 0.000000e+00, i32 3
  %2180 = fmul <4 x float> %2173, %2179
  %2181 = fadd <4 x float> %2180, zeroinitializer
  %2182 = getelementptr inbounds float, float* %0, i64 13
  %2183 = load float, float* %2182, align 4
  %2184 = insertelement <4 x float> zeroinitializer, float %2183, i32 0
  %2185 = insertelement <4 x float> %2184, float 1.000000e+00, i32 1
  %2186 = insertelement <4 x float> %2185, float 1.000000e+00, i32 2
  %2187 = insertelement <4 x float> %2186, float 1.000000e+00, i32 3
  %2188 = getelementptr inbounds float, float* %1, i64 5
  %2189 = load float, float* %2188, align 4
  %2190 = insertelement <4 x float> zeroinitializer, float %2189, i32 0
  %2191 = insertelement <4 x float> %2190, float 0.000000e+00, i32 1
  %2192 = insertelement <4 x float> %2191, float 0.000000e+00, i32 2
  %2193 = insertelement <4 x float> %2192, float 0.000000e+00, i32 3
  %2194 = call <4 x float> @llvm.fma.f32.93(<4 x float> %2187, <4 x float> %2193, <4 x float> %2181)
  %2195 = getelementptr inbounds float, float* %0, i64 14
  %2196 = load float, float* %2195, align 4
  %2197 = insertelement <4 x float> zeroinitializer, float %2196, i32 0
  %2198 = insertelement <4 x float> %2197, float 0.000000e+00, i32 1
  %2199 = insertelement <4 x float> %2198, float 0.000000e+00, i32 2
  %2200 = insertelement <4 x float> %2199, float 0.000000e+00, i32 3
  %2201 = getelementptr inbounds float, float* %1, i64 9
  %2202 = load float, float* %2201, align 4
  %2203 = insertelement <4 x float> zeroinitializer, float %2202, i32 0
  %2204 = insertelement <4 x float> %2203, float 0.000000e+00, i32 1
  %2205 = insertelement <4 x float> %2204, float 0.000000e+00, i32 2
  %2206 = insertelement <4 x float> %2205, float 0.000000e+00, i32 3
  %2207 = call <4 x float> @llvm.fma.f32.94(<4 x float> %2200, <4 x float> %2206, <4 x float> %2194)
  %2208 = extractelement <4 x float> %2207, i32 0
  %2209 = getelementptr inbounds float, float* %2, i64 13
  store float %2208, float* %2209, align 4
  %2210 = getelementptr inbounds float, float* %0, i64 12
  %2211 = load float, float* %2210, align 4
  %2212 = insertelement <4 x float> zeroinitializer, float %2211, i32 0
  %2213 = insertelement <4 x float> %2212, float 1.000000e+00, i32 1
  %2214 = insertelement <4 x float> %2213, float 1.000000e+00, i32 2
  %2215 = insertelement <4 x float> %2214, float 1.000000e+00, i32 3
  %2216 = getelementptr inbounds float, float* %1, i64 1
  %2217 = load float, float* %2216, align 4
  %2218 = insertelement <4 x float> zeroinitializer, float %2217, i32 0
  %2219 = insertelement <4 x float> %2218, float 0.000000e+00, i32 1
  %2220 = insertelement <4 x float> %2219, float 0.000000e+00, i32 2
  %2221 = insertelement <4 x float> %2220, float 0.000000e+00, i32 3
  %2222 = fmul <4 x float> %2215, %2221
  %2223 = fadd <4 x float> %2222, zeroinitializer
  %2224 = getelementptr inbounds float, float* %0, i64 13
  %2225 = load float, float* %2224, align 4
  %2226 = insertelement <4 x float> zeroinitializer, float %2225, i32 0
  %2227 = insertelement <4 x float> %2226, float 1.000000e+00, i32 1
  %2228 = insertelement <4 x float> %2227, float 1.000000e+00, i32 2
  %2229 = insertelement <4 x float> %2228, float 1.000000e+00, i32 3
  %2230 = getelementptr inbounds float, float* %1, i64 5
  %2231 = load float, float* %2230, align 4
  %2232 = insertelement <4 x float> zeroinitializer, float %2231, i32 0
  %2233 = insertelement <4 x float> %2232, float 0.000000e+00, i32 1
  %2234 = insertelement <4 x float> %2233, float 0.000000e+00, i32 2
  %2235 = insertelement <4 x float> %2234, float 0.000000e+00, i32 3
  %2236 = call <4 x float> @llvm.fma.f32.95(<4 x float> %2229, <4 x float> %2235, <4 x float> %2223)
  %2237 = getelementptr inbounds float, float* %0, i64 14
  %2238 = load float, float* %2237, align 4
  %2239 = insertelement <4 x float> zeroinitializer, float %2238, i32 0
  %2240 = insertelement <4 x float> %2239, float 1.000000e+00, i32 1
  %2241 = insertelement <4 x float> %2240, float 1.000000e+00, i32 2
  %2242 = insertelement <4 x float> %2241, float 1.000000e+00, i32 3
  %2243 = getelementptr inbounds float, float* %1, i64 9
  %2244 = load float, float* %2243, align 4
  %2245 = insertelement <4 x float> zeroinitializer, float %2244, i32 0
  %2246 = insertelement <4 x float> %2245, float 0.000000e+00, i32 1
  %2247 = insertelement <4 x float> %2246, float 0.000000e+00, i32 2
  %2248 = insertelement <4 x float> %2247, float 0.000000e+00, i32 3
  %2249 = call <4 x float> @llvm.fma.f32.96(<4 x float> %2242, <4 x float> %2248, <4 x float> %2236)
  %2250 = getelementptr inbounds float, float* %0, i64 15
  %2251 = load float, float* %2250, align 4
  %2252 = insertelement <4 x float> zeroinitializer, float %2251, i32 0
  %2253 = insertelement <4 x float> %2252, float 0.000000e+00, i32 1
  %2254 = insertelement <4 x float> %2253, float 0.000000e+00, i32 2
  %2255 = insertelement <4 x float> %2254, float 0.000000e+00, i32 3
  %2256 = getelementptr inbounds float, float* %1, i64 13
  %2257 = load float, float* %2256, align 4
  %2258 = insertelement <4 x float> zeroinitializer, float %2257, i32 0
  %2259 = insertelement <4 x float> %2258, float 0.000000e+00, i32 1
  %2260 = insertelement <4 x float> %2259, float 0.000000e+00, i32 2
  %2261 = insertelement <4 x float> %2260, float 0.000000e+00, i32 3
  %2262 = call <4 x float> @llvm.fma.f32.97(<4 x float> %2255, <4 x float> %2261, <4 x float> %2249)
  %2263 = extractelement <4 x float> %2262, i32 0
  %2264 = getelementptr inbounds float, float* %2, i64 13
  store float %2263, float* %2264, align 4
  %2265 = extractelement <4 x float> %2262, i32 1
  %2266 = getelementptr inbounds float, float* %2, i64 14
  store float %2265, float* %2266, align 4
  %2267 = getelementptr inbounds float, float* %0, i64 12
  %2268 = load float, float* %2267, align 4
  %2269 = insertelement <4 x float> zeroinitializer, float %2268, i32 0
  %2270 = insertelement <4 x float> %2269, float 0.000000e+00, i32 1
  %2271 = insertelement <4 x float> %2270, float 0.000000e+00, i32 2
  %2272 = insertelement <4 x float> %2271, float 0.000000e+00, i32 3
  %2273 = getelementptr inbounds float, float* %1, i64 2
  %2274 = load float, float* %2273, align 4
  %2275 = insertelement <4 x float> zeroinitializer, float %2274, i32 0
  %2276 = insertelement <4 x float> %2275, float 0.000000e+00, i32 1
  %2277 = insertelement <4 x float> %2276, float 0.000000e+00, i32 2
  %2278 = insertelement <4 x float> %2277, float 0.000000e+00, i32 3
  %2279 = call <4 x float> @llvm.fma.f32.98(<4 x float> %2272, <4 x float> %2278, <4 x float> zeroinitializer)
  %2280 = extractelement <4 x float> %2279, i32 0
  %2281 = getelementptr inbounds float, float* %2, i64 14
  store float %2280, float* %2281, align 4
  %2282 = getelementptr inbounds float, float* %0, i64 12
  %2283 = load float, float* %2282, align 4
  %2284 = insertelement <4 x float> zeroinitializer, float %2283, i32 0
  %2285 = insertelement <4 x float> %2284, float 1.000000e+00, i32 1
  %2286 = insertelement <4 x float> %2285, float 1.000000e+00, i32 2
  %2287 = insertelement <4 x float> %2286, float 1.000000e+00, i32 3
  %2288 = getelementptr inbounds float, float* %1, i64 2
  %2289 = load float, float* %2288, align 4
  %2290 = insertelement <4 x float> zeroinitializer, float %2289, i32 0
  %2291 = insertelement <4 x float> %2290, float 0.000000e+00, i32 1
  %2292 = insertelement <4 x float> %2291, float 0.000000e+00, i32 2
  %2293 = insertelement <4 x float> %2292, float 0.000000e+00, i32 3
  %2294 = fmul <4 x float> %2287, %2293
  %2295 = fadd <4 x float> %2294, zeroinitializer
  %2296 = getelementptr inbounds float, float* %0, i64 13
  %2297 = load float, float* %2296, align 4
  %2298 = insertelement <4 x float> zeroinitializer, float %2297, i32 0
  %2299 = insertelement <4 x float> %2298, float 0.000000e+00, i32 1
  %2300 = insertelement <4 x float> %2299, float 0.000000e+00, i32 2
  %2301 = insertelement <4 x float> %2300, float 0.000000e+00, i32 3
  %2302 = getelementptr inbounds float, float* %1, i64 6
  %2303 = load float, float* %2302, align 4
  %2304 = insertelement <4 x float> zeroinitializer, float %2303, i32 0
  %2305 = insertelement <4 x float> %2304, float 0.000000e+00, i32 1
  %2306 = insertelement <4 x float> %2305, float 0.000000e+00, i32 2
  %2307 = insertelement <4 x float> %2306, float 0.000000e+00, i32 3
  %2308 = call <4 x float> @llvm.fma.f32.99(<4 x float> %2301, <4 x float> %2307, <4 x float> %2295)
  %2309 = extractelement <4 x float> %2308, i32 0
  %2310 = getelementptr inbounds float, float* %2, i64 14
  store float %2309, float* %2310, align 4
  %2311 = getelementptr inbounds float, float* %0, i64 12
  %2312 = load float, float* %2311, align 4
  %2313 = insertelement <4 x float> zeroinitializer, float %2312, i32 0
  %2314 = insertelement <4 x float> %2313, float 1.000000e+00, i32 1
  %2315 = insertelement <4 x float> %2314, float 1.000000e+00, i32 2
  %2316 = insertelement <4 x float> %2315, float 1.000000e+00, i32 3
  %2317 = getelementptr inbounds float, float* %1, i64 2
  %2318 = load float, float* %2317, align 4
  %2319 = insertelement <4 x float> zeroinitializer, float %2318, i32 0
  %2320 = insertelement <4 x float> %2319, float 0.000000e+00, i32 1
  %2321 = insertelement <4 x float> %2320, float 0.000000e+00, i32 2
  %2322 = insertelement <4 x float> %2321, float 0.000000e+00, i32 3
  %2323 = fmul <4 x float> %2316, %2322
  %2324 = fadd <4 x float> %2323, zeroinitializer
  %2325 = getelementptr inbounds float, float* %0, i64 13
  %2326 = load float, float* %2325, align 4
  %2327 = insertelement <4 x float> zeroinitializer, float %2326, i32 0
  %2328 = insertelement <4 x float> %2327, float 1.000000e+00, i32 1
  %2329 = insertelement <4 x float> %2328, float 1.000000e+00, i32 2
  %2330 = insertelement <4 x float> %2329, float 1.000000e+00, i32 3
  %2331 = getelementptr inbounds float, float* %1, i64 6
  %2332 = load float, float* %2331, align 4
  %2333 = insertelement <4 x float> zeroinitializer, float %2332, i32 0
  %2334 = insertelement <4 x float> %2333, float 0.000000e+00, i32 1
  %2335 = insertelement <4 x float> %2334, float 0.000000e+00, i32 2
  %2336 = insertelement <4 x float> %2335, float 0.000000e+00, i32 3
  %2337 = call <4 x float> @llvm.fma.f32.100(<4 x float> %2330, <4 x float> %2336, <4 x float> %2324)
  %2338 = getelementptr inbounds float, float* %0, i64 14
  %2339 = load float, float* %2338, align 4
  %2340 = insertelement <4 x float> zeroinitializer, float %2339, i32 0
  %2341 = insertelement <4 x float> %2340, float 0.000000e+00, i32 1
  %2342 = insertelement <4 x float> %2341, float 0.000000e+00, i32 2
  %2343 = insertelement <4 x float> %2342, float 0.000000e+00, i32 3
  %2344 = getelementptr inbounds float, float* %1, i64 10
  %2345 = load float, float* %2344, align 4
  %2346 = insertelement <4 x float> zeroinitializer, float %2345, i32 0
  %2347 = insertelement <4 x float> %2346, float 0.000000e+00, i32 1
  %2348 = insertelement <4 x float> %2347, float 0.000000e+00, i32 2
  %2349 = insertelement <4 x float> %2348, float 0.000000e+00, i32 3
  %2350 = call <4 x float> @llvm.fma.f32.101(<4 x float> %2343, <4 x float> %2349, <4 x float> %2337)
  %2351 = extractelement <4 x float> %2350, i32 0
  %2352 = getelementptr inbounds float, float* %2, i64 14
  store float %2351, float* %2352, align 4
  %2353 = getelementptr inbounds float, float* %0, i64 12
  %2354 = load float, float* %2353, align 4
  %2355 = insertelement <4 x float> zeroinitializer, float %2354, i32 0
  %2356 = insertelement <4 x float> %2355, float 1.000000e+00, i32 1
  %2357 = insertelement <4 x float> %2356, float 1.000000e+00, i32 2
  %2358 = insertelement <4 x float> %2357, float 1.000000e+00, i32 3
  %2359 = getelementptr inbounds float, float* %1, i64 2
  %2360 = load float, float* %2359, align 4
  %2361 = insertelement <4 x float> zeroinitializer, float %2360, i32 0
  %2362 = insertelement <4 x float> %2361, float 0.000000e+00, i32 1
  %2363 = insertelement <4 x float> %2362, float 0.000000e+00, i32 2
  %2364 = insertelement <4 x float> %2363, float 0.000000e+00, i32 3
  %2365 = fmul <4 x float> %2358, %2364
  %2366 = fadd <4 x float> %2365, zeroinitializer
  %2367 = getelementptr inbounds float, float* %0, i64 13
  %2368 = load float, float* %2367, align 4
  %2369 = insertelement <4 x float> zeroinitializer, float %2368, i32 0
  %2370 = insertelement <4 x float> %2369, float 1.000000e+00, i32 1
  %2371 = insertelement <4 x float> %2370, float 1.000000e+00, i32 2
  %2372 = insertelement <4 x float> %2371, float 1.000000e+00, i32 3
  %2373 = getelementptr inbounds float, float* %1, i64 6
  %2374 = load float, float* %2373, align 4
  %2375 = insertelement <4 x float> zeroinitializer, float %2374, i32 0
  %2376 = insertelement <4 x float> %2375, float 0.000000e+00, i32 1
  %2377 = insertelement <4 x float> %2376, float 0.000000e+00, i32 2
  %2378 = insertelement <4 x float> %2377, float 0.000000e+00, i32 3
  %2379 = call <4 x float> @llvm.fma.f32.102(<4 x float> %2372, <4 x float> %2378, <4 x float> %2366)
  %2380 = getelementptr inbounds float, float* %0, i64 14
  %2381 = load float, float* %2380, align 4
  %2382 = insertelement <4 x float> zeroinitializer, float %2381, i32 0
  %2383 = insertelement <4 x float> %2382, float 1.000000e+00, i32 1
  %2384 = insertelement <4 x float> %2383, float 1.000000e+00, i32 2
  %2385 = insertelement <4 x float> %2384, float 1.000000e+00, i32 3
  %2386 = getelementptr inbounds float, float* %1, i64 10
  %2387 = load float, float* %2386, align 4
  %2388 = insertelement <4 x float> zeroinitializer, float %2387, i32 0
  %2389 = insertelement <4 x float> %2388, float 0.000000e+00, i32 1
  %2390 = insertelement <4 x float> %2389, float 0.000000e+00, i32 2
  %2391 = insertelement <4 x float> %2390, float 0.000000e+00, i32 3
  %2392 = call <4 x float> @llvm.fma.f32.103(<4 x float> %2385, <4 x float> %2391, <4 x float> %2379)
  %2393 = getelementptr inbounds float, float* %0, i64 15
  %2394 = load float, float* %2393, align 4
  %2395 = insertelement <4 x float> zeroinitializer, float %2394, i32 0
  %2396 = insertelement <4 x float> %2395, float 0.000000e+00, i32 1
  %2397 = insertelement <4 x float> %2396, float 0.000000e+00, i32 2
  %2398 = insertelement <4 x float> %2397, float 0.000000e+00, i32 3
  %2399 = getelementptr inbounds float, float* %1, i64 14
  %2400 = load float, float* %2399, align 4
  %2401 = insertelement <4 x float> zeroinitializer, float %2400, i32 0
  %2402 = insertelement <4 x float> %2401, float 0.000000e+00, i32 1
  %2403 = insertelement <4 x float> %2402, float 0.000000e+00, i32 2
  %2404 = insertelement <4 x float> %2403, float 0.000000e+00, i32 3
  %2405 = call <4 x float> @llvm.fma.f32.104(<4 x float> %2398, <4 x float> %2404, <4 x float> %2392)
  %2406 = extractelement <4 x float> %2405, i32 0
  %2407 = getelementptr inbounds float, float* %2, i64 14
  store float %2406, float* %2407, align 4
  %2408 = extractelement <4 x float> %2405, i32 1
  %2409 = getelementptr inbounds float, float* %2, i64 15
  store float %2408, float* %2409, align 4
  %2410 = getelementptr inbounds float, float* %0, i64 12
  %2411 = load float, float* %2410, align 4
  %2412 = insertelement <4 x float> zeroinitializer, float %2411, i32 0
  %2413 = insertelement <4 x float> %2412, float 0.000000e+00, i32 1
  %2414 = insertelement <4 x float> %2413, float 0.000000e+00, i32 2
  %2415 = insertelement <4 x float> %2414, float 0.000000e+00, i32 3
  %2416 = getelementptr inbounds float, float* %1, i64 3
  %2417 = load float, float* %2416, align 4
  %2418 = insertelement <4 x float> zeroinitializer, float %2417, i32 0
  %2419 = insertelement <4 x float> %2418, float 0.000000e+00, i32 1
  %2420 = insertelement <4 x float> %2419, float 0.000000e+00, i32 2
  %2421 = insertelement <4 x float> %2420, float 0.000000e+00, i32 3
  %2422 = call <4 x float> @llvm.fma.f32.105(<4 x float> %2415, <4 x float> %2421, <4 x float> zeroinitializer)
  %2423 = extractelement <4 x float> %2422, i32 0
  %2424 = getelementptr inbounds float, float* %2, i64 15
  store float %2423, float* %2424, align 4
  %2425 = getelementptr inbounds float, float* %0, i64 12
  %2426 = load float, float* %2425, align 4
  %2427 = insertelement <4 x float> zeroinitializer, float %2426, i32 0
  %2428 = insertelement <4 x float> %2427, float 1.000000e+00, i32 1
  %2429 = insertelement <4 x float> %2428, float 1.000000e+00, i32 2
  %2430 = insertelement <4 x float> %2429, float 1.000000e+00, i32 3
  %2431 = getelementptr inbounds float, float* %1, i64 3
  %2432 = load float, float* %2431, align 4
  %2433 = insertelement <4 x float> zeroinitializer, float %2432, i32 0
  %2434 = insertelement <4 x float> %2433, float 0.000000e+00, i32 1
  %2435 = insertelement <4 x float> %2434, float 0.000000e+00, i32 2
  %2436 = insertelement <4 x float> %2435, float 0.000000e+00, i32 3
  %2437 = fmul <4 x float> %2430, %2436
  %2438 = fadd <4 x float> %2437, zeroinitializer
  %2439 = getelementptr inbounds float, float* %0, i64 13
  %2440 = load float, float* %2439, align 4
  %2441 = insertelement <4 x float> zeroinitializer, float %2440, i32 0
  %2442 = insertelement <4 x float> %2441, float 0.000000e+00, i32 1
  %2443 = insertelement <4 x float> %2442, float 0.000000e+00, i32 2
  %2444 = insertelement <4 x float> %2443, float 0.000000e+00, i32 3
  %2445 = getelementptr inbounds float, float* %1, i64 7
  %2446 = load float, float* %2445, align 4
  %2447 = insertelement <4 x float> zeroinitializer, float %2446, i32 0
  %2448 = insertelement <4 x float> %2447, float 0.000000e+00, i32 1
  %2449 = insertelement <4 x float> %2448, float 0.000000e+00, i32 2
  %2450 = insertelement <4 x float> %2449, float 0.000000e+00, i32 3
  %2451 = call <4 x float> @llvm.fma.f32.106(<4 x float> %2444, <4 x float> %2450, <4 x float> %2438)
  %2452 = extractelement <4 x float> %2451, i32 0
  %2453 = getelementptr inbounds float, float* %2, i64 15
  store float %2452, float* %2453, align 4
  %2454 = getelementptr inbounds float, float* %0, i64 12
  %2455 = load float, float* %2454, align 4
  %2456 = insertelement <4 x float> zeroinitializer, float %2455, i32 0
  %2457 = insertelement <4 x float> %2456, float 1.000000e+00, i32 1
  %2458 = insertelement <4 x float> %2457, float 1.000000e+00, i32 2
  %2459 = insertelement <4 x float> %2458, float 1.000000e+00, i32 3
  %2460 = getelementptr inbounds float, float* %1, i64 3
  %2461 = load float, float* %2460, align 4
  %2462 = insertelement <4 x float> zeroinitializer, float %2461, i32 0
  %2463 = insertelement <4 x float> %2462, float 0.000000e+00, i32 1
  %2464 = insertelement <4 x float> %2463, float 0.000000e+00, i32 2
  %2465 = insertelement <4 x float> %2464, float 0.000000e+00, i32 3
  %2466 = fmul <4 x float> %2459, %2465
  %2467 = fadd <4 x float> %2466, zeroinitializer
  %2468 = getelementptr inbounds float, float* %0, i64 13
  %2469 = load float, float* %2468, align 4
  %2470 = insertelement <4 x float> zeroinitializer, float %2469, i32 0
  %2471 = insertelement <4 x float> %2470, float 1.000000e+00, i32 1
  %2472 = insertelement <4 x float> %2471, float 1.000000e+00, i32 2
  %2473 = insertelement <4 x float> %2472, float 1.000000e+00, i32 3
  %2474 = getelementptr inbounds float, float* %1, i64 7
  %2475 = load float, float* %2474, align 4
  %2476 = insertelement <4 x float> zeroinitializer, float %2475, i32 0
  %2477 = insertelement <4 x float> %2476, float 0.000000e+00, i32 1
  %2478 = insertelement <4 x float> %2477, float 0.000000e+00, i32 2
  %2479 = insertelement <4 x float> %2478, float 0.000000e+00, i32 3
  %2480 = call <4 x float> @llvm.fma.f32.107(<4 x float> %2473, <4 x float> %2479, <4 x float> %2467)
  %2481 = getelementptr inbounds float, float* %0, i64 14
  %2482 = load float, float* %2481, align 4
  %2483 = insertelement <4 x float> zeroinitializer, float %2482, i32 0
  %2484 = insertelement <4 x float> %2483, float 0.000000e+00, i32 1
  %2485 = insertelement <4 x float> %2484, float 0.000000e+00, i32 2
  %2486 = insertelement <4 x float> %2485, float 0.000000e+00, i32 3
  %2487 = getelementptr inbounds float, float* %1, i64 11
  %2488 = load float, float* %2487, align 4
  %2489 = insertelement <4 x float> zeroinitializer, float %2488, i32 0
  %2490 = insertelement <4 x float> %2489, float 0.000000e+00, i32 1
  %2491 = insertelement <4 x float> %2490, float 0.000000e+00, i32 2
  %2492 = insertelement <4 x float> %2491, float 0.000000e+00, i32 3
  %2493 = call <4 x float> @llvm.fma.f32.108(<4 x float> %2486, <4 x float> %2492, <4 x float> %2480)
  %2494 = extractelement <4 x float> %2493, i32 0
  %2495 = getelementptr inbounds float, float* %2, i64 15
  store float %2494, float* %2495, align 4
  %2496 = getelementptr inbounds float, float* %0, i64 12
  %2497 = load float, float* %2496, align 4
  %2498 = insertelement <4 x float> zeroinitializer, float %2497, i32 0
  %2499 = insertelement <4 x float> %2498, float 1.000000e+00, i32 1
  %2500 = insertelement <4 x float> %2499, float 1.000000e+00, i32 2
  %2501 = insertelement <4 x float> %2500, float 1.000000e+00, i32 3
  %2502 = getelementptr inbounds float, float* %1, i64 3
  %2503 = load float, float* %2502, align 4
  %2504 = insertelement <4 x float> zeroinitializer, float %2503, i32 0
  %2505 = insertelement <4 x float> %2504, float 0.000000e+00, i32 1
  %2506 = insertelement <4 x float> %2505, float 0.000000e+00, i32 2
  %2507 = insertelement <4 x float> %2506, float 0.000000e+00, i32 3
  %2508 = fmul <4 x float> %2501, %2507
  %2509 = fadd <4 x float> %2508, zeroinitializer
  %2510 = getelementptr inbounds float, float* %0, i64 13
  %2511 = load float, float* %2510, align 4
  %2512 = insertelement <4 x float> zeroinitializer, float %2511, i32 0
  %2513 = insertelement <4 x float> %2512, float 1.000000e+00, i32 1
  %2514 = insertelement <4 x float> %2513, float 1.000000e+00, i32 2
  %2515 = insertelement <4 x float> %2514, float 1.000000e+00, i32 3
  %2516 = getelementptr inbounds float, float* %1, i64 7
  %2517 = load float, float* %2516, align 4
  %2518 = insertelement <4 x float> zeroinitializer, float %2517, i32 0
  %2519 = insertelement <4 x float> %2518, float 0.000000e+00, i32 1
  %2520 = insertelement <4 x float> %2519, float 0.000000e+00, i32 2
  %2521 = insertelement <4 x float> %2520, float 0.000000e+00, i32 3
  %2522 = call <4 x float> @llvm.fma.f32.109(<4 x float> %2515, <4 x float> %2521, <4 x float> %2509)
  %2523 = getelementptr inbounds float, float* %0, i64 14
  %2524 = load float, float* %2523, align 4
  %2525 = insertelement <4 x float> zeroinitializer, float %2524, i32 0
  %2526 = insertelement <4 x float> %2525, float 1.000000e+00, i32 1
  %2527 = insertelement <4 x float> %2526, float 1.000000e+00, i32 2
  %2528 = insertelement <4 x float> %2527, float 1.000000e+00, i32 3
  %2529 = getelementptr inbounds float, float* %1, i64 11
  %2530 = load float, float* %2529, align 4
  %2531 = insertelement <4 x float> zeroinitializer, float %2530, i32 0
  %2532 = insertelement <4 x float> %2531, float 0.000000e+00, i32 1
  %2533 = insertelement <4 x float> %2532, float 0.000000e+00, i32 2
  %2534 = insertelement <4 x float> %2533, float 0.000000e+00, i32 3
  %2535 = call <4 x float> @llvm.fma.f32.110(<4 x float> %2528, <4 x float> %2534, <4 x float> %2522)
  %2536 = getelementptr inbounds float, float* %0, i64 15
  %2537 = load float, float* %2536, align 4
  %2538 = insertelement <4 x float> zeroinitializer, float %2537, i32 0
  %2539 = insertelement <4 x float> %2538, float 0.000000e+00, i32 1
  %2540 = insertelement <4 x float> %2539, float 0.000000e+00, i32 2
  %2541 = insertelement <4 x float> %2540, float 0.000000e+00, i32 3
  %2542 = getelementptr inbounds float, float* %1, i64 15
  %2543 = load float, float* %2542, align 4
  %2544 = insertelement <4 x float> zeroinitializer, float %2543, i32 0
  %2545 = insertelement <4 x float> %2544, float 0.000000e+00, i32 1
  %2546 = insertelement <4 x float> %2545, float 0.000000e+00, i32 2
  %2547 = insertelement <4 x float> %2546, float 0.000000e+00, i32 3
  %2548 = call <4 x float> @llvm.fma.f32.111(<4 x float> %2541, <4 x float> %2547, <4 x float> %2535)
  %2549 = extractelement <4 x float> %2548, i32 0
  %2550 = getelementptr inbounds float, float* %2, i64 15
  store float %2549, float* %2550, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @naive_fixed_qr_decomp(float* %0, float* %1, float* %2) #2 {
.preheader33:
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %0 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %3, i1 false, i1 true, i1 false)
  %6 = call i8* @__memcpy_chk(i8* %3, i8* %4, i64 64, i64 %5) #8
  %7 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8 = bitcast i8* %7 to float*
  %9 = getelementptr inbounds i8, i8* %7, i64 16
  %10 = getelementptr inbounds i8, i8* %7, i64 20
  %11 = bitcast i8* %10 to float*
  %12 = getelementptr inbounds i8, i8* %7, i64 32
  %13 = getelementptr inbounds i8, i8* %7, i64 36
  %14 = getelementptr inbounds i8, i8* %7, i64 40
  %15 = bitcast i8* %14 to float*
  %16 = getelementptr inbounds i8, i8* %7, i64 48
  %17 = getelementptr inbounds i8, i8* %7, i64 52
  %18 = getelementptr inbounds i8, i8* %7, i64 56
  %19 = getelementptr inbounds i8, i8* %7, i64 60
  %20 = bitcast i8* %19 to float*
  %21 = bitcast float* %1 to i8*
  %22 = call i64 @llvm.objectsize.i64.p0i8(i8* %21, i1 false, i1 true, i1 false)
  %23 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %24 = bitcast i8* %23 to float*
  %25 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %26 = bitcast i8* %25 to float*
  %27 = bitcast float* %2 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = bitcast i8* %23 to i32*
  %30 = bitcast i8* %7 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = bitcast i8* %25 to i32*
  %33 = getelementptr inbounds float, float* %2, i64 4
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds i8, i8* %23, i64 4
  %37 = bitcast i8* %36 to i32*
  %38 = bitcast i8* %9 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds i8, i8* %25, i64 4
  %41 = bitcast i8* %40 to i32*
  %42 = getelementptr inbounds float, float* %2, i64 8
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds i8, i8* %23, i64 8
  %46 = bitcast i8* %45 to i32*
  %47 = bitcast i8* %12 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds i8, i8* %25, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = getelementptr inbounds float, float* %2, i64 12
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds i8, i8* %23, i64 12
  %55 = bitcast i8* %54 to i32*
  %56 = bitcast i8* %16 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds i8, i8* %25, i64 12
  %59 = bitcast i8* %58 to i32*
  %60 = load float, float* %24, align 4
  %61 = fcmp ogt float %60, 0.000000e+00
  %62 = zext i1 %61 to i32
  %63 = fcmp olt float %60, 0.000000e+00
  %64 = sext i1 %63 to i32
  %65 = add nsw i32 %64, %62
  %66 = sitofp i32 %65 to float
  %67 = fpext float %60 to double
  %68 = fmul double %67, %67
  %69 = fadd double %68, 0.000000e+00
  %70 = fptrunc double %69 to float
  %71 = bitcast i8* %36 to float*
  %72 = load float, float* %71, align 4
  %73 = fpext float %72 to double
  %74 = fmul double %73, %73
  %75 = fpext float %70 to double
  %76 = fadd double %74, %75
  %77 = fptrunc double %76 to float
  %78 = bitcast i8* %45 to float*
  %79 = load float, float* %78, align 4
  %80 = fpext float %79 to double
  %81 = fmul double %80, %80
  %82 = fpext float %77 to double
  %83 = fadd double %81, %82
  %84 = fptrunc double %83 to float
  %85 = bitcast i8* %54 to float*
  %86 = load float, float* %85, align 4
  %87 = fpext float %86 to double
  %88 = fmul double %87, %87
  %89 = fpext float %84 to double
  %90 = fadd double %88, %89
  %91 = fptrunc double %90 to float
  %92 = fneg float %66
  %93 = call float @llvm.sqrt.f32(float %91) #8
  %94 = fmul float %93, %92
  %95 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %96 = bitcast i8* %95 to float*
  %97 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %98 = load float, float* %24, align 4
  %99 = load float, float* %26, align 4
  %100 = fmul float %94, %99
  %101 = fadd float %98, %100
  %102 = load float, float* %71, align 4
  %103 = bitcast i8* %40 to float*
  %104 = load float, float* %103, align 4
  %105 = fmul float %94, %104
  %106 = fadd float %102, %105
  %107 = getelementptr inbounds i8, i8* %95, i64 4
  %108 = bitcast i8* %107 to float*
  %109 = load float, float* %78, align 4
  %110 = bitcast i8* %49 to float*
  %111 = load float, float* %110, align 4
  %112 = fmul float %94, %111
  %113 = fadd float %109, %112
  %114 = getelementptr inbounds i8, i8* %95, i64 8
  %115 = bitcast i8* %114 to float*
  %116 = load float, float* %85, align 4
  %117 = bitcast i8* %58 to float*
  %118 = load float, float* %117, align 4
  %119 = fmul float %94, %118
  %120 = fadd float %116, %119
  %121 = getelementptr inbounds i8, i8* %95, i64 12
  %122 = bitcast i8* %121 to float*
  %123 = fpext float %101 to double
  %124 = fmul double %123, %123
  %125 = fadd double %124, 0.000000e+00
  %126 = fptrunc double %125 to float
  %127 = fpext float %106 to double
  %128 = fmul double %127, %127
  %129 = fpext float %126 to double
  %130 = fadd double %128, %129
  %131 = fptrunc double %130 to float
  %132 = fpext float %113 to double
  %133 = fmul double %132, %132
  %134 = fpext float %131 to double
  %135 = fadd double %133, %134
  %136 = fptrunc double %135 to float
  %137 = fpext float %120 to double
  %138 = fmul double %137, %137
  %139 = fpext float %136 to double
  %140 = fadd double %138, %139
  %141 = fptrunc double %140 to float
  %142 = bitcast i8* %97 to float*
  %143 = call float @llvm.sqrt.f32(float %141) #8
  %144 = fdiv float %101, %143
  %145 = load float, float* %108, align 4
  %146 = fdiv float %145, %143
  %147 = getelementptr inbounds i8, i8* %97, i64 4
  %148 = bitcast i8* %147 to float*
  %149 = load float, float* %115, align 4
  %150 = fdiv float %149, %143
  %151 = getelementptr inbounds i8, i8* %97, i64 8
  %152 = bitcast i8* %151 to float*
  %153 = load float, float* %122, align 4
  %154 = fdiv float %153, %143
  %155 = getelementptr inbounds i8, i8* %97, i64 12
  %156 = bitcast i8* %155 to float*
  %157 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %158 = bitcast i8* %157 to float*
  %159 = load float, float* %142, align 4
  %160 = fmul float %159, 2.000000e+00
  %161 = fmul float %160, %159
  %162 = fsub float 1.000000e+00, %161
  %163 = load float, float* %142, align 4
  %164 = fmul float %163, 2.000000e+00
  %165 = load float, float* %148, align 4
  %166 = fmul float %164, %165
  %167 = fsub float 0.000000e+00, %166
  %168 = getelementptr inbounds i8, i8* %157, i64 4
  %169 = bitcast i8* %168 to float*
  %170 = load float, float* %142, align 4
  %171 = fmul float %170, 2.000000e+00
  %172 = load float, float* %152, align 4
  %173 = fmul float %171, %172
  %174 = fsub float 0.000000e+00, %173
  %175 = getelementptr inbounds i8, i8* %157, i64 8
  %176 = bitcast i8* %175 to float*
  %177 = load float, float* %142, align 4
  %178 = fmul float %177, 2.000000e+00
  %179 = load float, float* %156, align 4
  %180 = fmul float %178, %179
  %181 = fsub float 0.000000e+00, %180
  %182 = getelementptr inbounds i8, i8* %157, i64 12
  %183 = bitcast i8* %182 to float*
  %184 = load float, float* %148, align 4
  %185 = fmul float %184, 2.000000e+00
  %186 = load float, float* %142, align 4
  %187 = fmul float %185, %186
  %188 = fsub float 0.000000e+00, %187
  %189 = getelementptr inbounds i8, i8* %157, i64 16
  %190 = bitcast i8* %189 to float*
  %191 = load float, float* %148, align 4
  %192 = fmul float %191, 2.000000e+00
  %193 = fmul float %192, %191
  %194 = fsub float 1.000000e+00, %193
  %195 = getelementptr inbounds i8, i8* %157, i64 20
  %196 = bitcast i8* %195 to float*
  %197 = load float, float* %148, align 4
  %198 = fmul float %197, 2.000000e+00
  %199 = load float, float* %152, align 4
  %200 = fmul float %198, %199
  %201 = fsub float 0.000000e+00, %200
  %202 = getelementptr inbounds i8, i8* %157, i64 24
  %203 = bitcast i8* %202 to float*
  %204 = load float, float* %148, align 4
  %205 = fmul float %204, 2.000000e+00
  %206 = load float, float* %156, align 4
  %207 = fmul float %205, %206
  %208 = fsub float 0.000000e+00, %207
  %209 = getelementptr inbounds i8, i8* %157, i64 28
  %210 = bitcast i8* %209 to float*
  %211 = load float, float* %152, align 4
  %212 = fmul float %211, 2.000000e+00
  %213 = load float, float* %142, align 4
  %214 = fmul float %212, %213
  %215 = fsub float 0.000000e+00, %214
  %216 = getelementptr inbounds i8, i8* %157, i64 32
  %217 = bitcast i8* %216 to float*
  %218 = load float, float* %152, align 4
  %219 = fmul float %218, 2.000000e+00
  %220 = load float, float* %148, align 4
  %221 = fmul float %219, %220
  %222 = fsub float 0.000000e+00, %221
  %223 = getelementptr inbounds i8, i8* %157, i64 36
  %224 = bitcast i8* %223 to float*
  %225 = load float, float* %152, align 4
  %226 = fmul float %225, 2.000000e+00
  %227 = fmul float %226, %225
  %228 = fsub float 1.000000e+00, %227
  %229 = getelementptr inbounds i8, i8* %157, i64 40
  %230 = bitcast i8* %229 to float*
  %231 = load float, float* %152, align 4
  %232 = fmul float %231, 2.000000e+00
  %233 = load float, float* %156, align 4
  %234 = fmul float %232, %233
  %235 = fsub float 0.000000e+00, %234
  %236 = getelementptr inbounds i8, i8* %157, i64 44
  %237 = bitcast i8* %236 to float*
  %238 = load float, float* %156, align 4
  %239 = fmul float %238, 2.000000e+00
  %240 = load float, float* %142, align 4
  %241 = fmul float %239, %240
  %242 = fsub float 0.000000e+00, %241
  %243 = getelementptr inbounds i8, i8* %157, i64 48
  %244 = bitcast i8* %243 to float*
  %245 = load float, float* %156, align 4
  %246 = fmul float %245, 2.000000e+00
  %247 = load float, float* %148, align 4
  %248 = fmul float %246, %247
  %249 = fsub float 0.000000e+00, %248
  %250 = getelementptr inbounds i8, i8* %157, i64 52
  %251 = bitcast i8* %250 to float*
  %252 = load float, float* %156, align 4
  %253 = fmul float %252, 2.000000e+00
  %254 = load float, float* %152, align 4
  %255 = fmul float %253, %254
  %256 = fsub float 0.000000e+00, %255
  %257 = getelementptr inbounds i8, i8* %157, i64 56
  %258 = bitcast i8* %257 to float*
  %259 = load float, float* %156, align 4
  %260 = fmul float %259, 2.000000e+00
  %261 = fmul float %260, %259
  %262 = fsub float 1.000000e+00, %261
  %263 = getelementptr inbounds i8, i8* %157, i64 60
  %264 = bitcast i8* %263 to float*
  %265 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %266 = bitcast i8* %265 to float*
  %267 = bitcast i8* %157 to i32*
  %268 = load i32, i32* %267, align 4
  %269 = bitcast i8* %265 to i32*
  %270 = bitcast i8* %168 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = getelementptr inbounds i8, i8* %265, i64 4
  %273 = bitcast i8* %272 to i32*
  %274 = bitcast i8* %175 to i32*
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds i8, i8* %265, i64 8
  %277 = bitcast i8* %276 to i32*
  %278 = bitcast i8* %182 to i32*
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds i8, i8* %265, i64 12
  %281 = bitcast i8* %280 to i32*
  %282 = bitcast i8* %189 to i32*
  %283 = load i32, i32* %282, align 4
  %284 = getelementptr inbounds i8, i8* %265, i64 16
  %285 = bitcast i8* %284 to i32*
  %286 = bitcast i8* %195 to i32*
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds i8, i8* %265, i64 20
  %289 = bitcast i8* %288 to i32*
  %290 = bitcast i8* %202 to i32*
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds i8, i8* %265, i64 24
  %293 = bitcast i8* %292 to i32*
  %294 = bitcast i8* %209 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = getelementptr inbounds i8, i8* %265, i64 28
  %297 = bitcast i8* %296 to i32*
  %298 = bitcast i8* %216 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds i8, i8* %265, i64 32
  %301 = bitcast i8* %300 to i32*
  %302 = bitcast i8* %223 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = getelementptr inbounds i8, i8* %265, i64 36
  %305 = bitcast i8* %304 to i32*
  %306 = bitcast i8* %229 to i32*
  %307 = load i32, i32* %306, align 4
  %308 = getelementptr inbounds i8, i8* %265, i64 40
  %309 = bitcast i8* %308 to i32*
  %310 = bitcast i8* %236 to i32*
  %311 = load i32, i32* %310, align 4
  %312 = getelementptr inbounds i8, i8* %265, i64 44
  %313 = bitcast i8* %312 to i32*
  %314 = bitcast i8* %243 to i32*
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds i8, i8* %265, i64 48
  %317 = bitcast i8* %316 to i32*
  %318 = bitcast i8* %250 to i32*
  %319 = load i32, i32* %318, align 4
  %320 = getelementptr inbounds i8, i8* %265, i64 52
  %321 = bitcast i8* %320 to i32*
  %322 = bitcast i8* %257 to i32*
  %323 = load i32, i32* %322, align 4
  %324 = getelementptr inbounds i8, i8* %265, i64 56
  %325 = bitcast i8* %324 to i32*
  %326 = bitcast i8* %263 to i32*
  %327 = load i32, i32* %326, align 4
  %328 = getelementptr inbounds i8, i8* %265, i64 60
  %329 = bitcast i8* %328 to i32*
  %330 = call i8* @__memcpy_chk(i8* %21, i8* %265, i64 64, i64 %22) #8
  %331 = load float, float* %266, align 4
  %332 = load float, float* %0, align 4
  %333 = fmul float %331, %332
  %334 = fadd float %333, 0.000000e+00
  %335 = bitcast i8* %272 to float*
  %336 = load float, float* %335, align 4
  %337 = getelementptr inbounds float, float* %0, i64 4
  %338 = load float, float* %337, align 4
  %339 = fmul float %336, %338
  %340 = fadd float %334, %339
  %341 = bitcast i8* %276 to float*
  %342 = load float, float* %341, align 4
  %343 = getelementptr inbounds float, float* %0, i64 8
  %344 = load float, float* %343, align 4
  %345 = fmul float %342, %344
  %346 = fadd float %340, %345
  %347 = bitcast i8* %280 to float*
  %348 = load float, float* %347, align 4
  %349 = getelementptr inbounds float, float* %0, i64 12
  %350 = load float, float* %349, align 4
  %351 = fmul float %348, %350
  %352 = fadd float %346, %351
  %353 = getelementptr inbounds float, float* %2, i64 1
  %354 = load float, float* %266, align 4
  %355 = getelementptr inbounds float, float* %0, i64 1
  %356 = load float, float* %355, align 4
  %357 = fmul float %354, %356
  %358 = fadd float %357, 0.000000e+00
  %359 = load float, float* %335, align 4
  %360 = getelementptr inbounds float, float* %0, i64 5
  %361 = load float, float* %360, align 4
  %362 = fmul float %359, %361
  %363 = fadd float %358, %362
  %364 = load float, float* %341, align 4
  %365 = getelementptr inbounds float, float* %0, i64 9
  %366 = load float, float* %365, align 4
  %367 = fmul float %364, %366
  %368 = fadd float %363, %367
  %369 = load float, float* %347, align 4
  %370 = getelementptr inbounds float, float* %0, i64 13
  %371 = load float, float* %370, align 4
  %372 = fmul float %369, %371
  %373 = fadd float %368, %372
  %374 = getelementptr inbounds float, float* %2, i64 2
  %375 = load float, float* %266, align 4
  %376 = getelementptr inbounds float, float* %0, i64 2
  %377 = load float, float* %376, align 4
  %378 = fmul float %375, %377
  %379 = fadd float %378, 0.000000e+00
  %380 = load float, float* %335, align 4
  %381 = getelementptr inbounds float, float* %0, i64 6
  %382 = load float, float* %381, align 4
  %383 = fmul float %380, %382
  %384 = fadd float %379, %383
  %385 = load float, float* %341, align 4
  %386 = getelementptr inbounds float, float* %0, i64 10
  %387 = load float, float* %386, align 4
  %388 = fmul float %385, %387
  %389 = fadd float %384, %388
  %390 = load float, float* %347, align 4
  %391 = getelementptr inbounds float, float* %0, i64 14
  %392 = load float, float* %391, align 4
  %393 = fmul float %390, %392
  %394 = fadd float %389, %393
  %395 = getelementptr inbounds float, float* %2, i64 3
  %396 = load float, float* %266, align 4
  %397 = getelementptr inbounds float, float* %0, i64 3
  %398 = load float, float* %397, align 4
  %399 = fmul float %396, %398
  %400 = fadd float %399, 0.000000e+00
  %401 = load float, float* %335, align 4
  %402 = getelementptr inbounds float, float* %0, i64 7
  %403 = load float, float* %402, align 4
  %404 = fmul float %401, %403
  %405 = fadd float %400, %404
  %406 = load float, float* %341, align 4
  %407 = getelementptr inbounds float, float* %0, i64 11
  %408 = load float, float* %407, align 4
  %409 = fmul float %406, %408
  %410 = fadd float %405, %409
  %411 = load float, float* %347, align 4
  %412 = getelementptr inbounds float, float* %0, i64 15
  %413 = load float, float* %412, align 4
  %414 = fmul float %411, %413
  %415 = fadd float %410, %414
  %416 = bitcast i8* %284 to float*
  %417 = load float, float* %416, align 4
  %418 = load float, float* %0, align 4
  %419 = fmul float %417, %418
  %420 = fadd float %419, 0.000000e+00
  %421 = bitcast i8* %288 to float*
  %422 = load float, float* %421, align 4
  %423 = load float, float* %337, align 4
  %424 = fmul float %422, %423
  %425 = fadd float %420, %424
  %426 = bitcast i8* %292 to float*
  %427 = load float, float* %426, align 4
  %428 = load float, float* %343, align 4
  %429 = fmul float %427, %428
  %430 = fadd float %425, %429
  %431 = bitcast i8* %296 to float*
  %432 = load float, float* %431, align 4
  %433 = load float, float* %349, align 4
  %434 = fmul float %432, %433
  %435 = fadd float %430, %434
  %436 = getelementptr inbounds float, float* %2, i64 5
  %437 = load float, float* %416, align 4
  %438 = load float, float* %355, align 4
  %439 = fmul float %437, %438
  %440 = fadd float %439, 0.000000e+00
  %441 = load float, float* %421, align 4
  %442 = load float, float* %360, align 4
  %443 = fmul float %441, %442
  %444 = fadd float %440, %443
  %445 = load float, float* %426, align 4
  %446 = load float, float* %365, align 4
  %447 = fmul float %445, %446
  %448 = fadd float %444, %447
  %449 = load float, float* %431, align 4
  %450 = load float, float* %370, align 4
  %451 = fmul float %449, %450
  %452 = fadd float %448, %451
  %453 = getelementptr inbounds float, float* %2, i64 6
  %454 = load float, float* %416, align 4
  %455 = load float, float* %376, align 4
  %456 = fmul float %454, %455
  %457 = fadd float %456, 0.000000e+00
  %458 = load float, float* %421, align 4
  %459 = load float, float* %381, align 4
  %460 = fmul float %458, %459
  %461 = fadd float %457, %460
  %462 = load float, float* %426, align 4
  %463 = load float, float* %386, align 4
  %464 = fmul float %462, %463
  %465 = fadd float %461, %464
  %466 = load float, float* %431, align 4
  %467 = load float, float* %391, align 4
  %468 = fmul float %466, %467
  %469 = fadd float %465, %468
  %470 = getelementptr inbounds float, float* %2, i64 7
  %471 = load float, float* %416, align 4
  %472 = load float, float* %397, align 4
  %473 = fmul float %471, %472
  %474 = fadd float %473, 0.000000e+00
  %475 = load float, float* %421, align 4
  %476 = load float, float* %402, align 4
  %477 = fmul float %475, %476
  %478 = fadd float %474, %477
  %479 = load float, float* %426, align 4
  %480 = load float, float* %407, align 4
  %481 = fmul float %479, %480
  %482 = fadd float %478, %481
  %483 = load float, float* %431, align 4
  %484 = load float, float* %412, align 4
  %485 = fmul float %483, %484
  %486 = fadd float %482, %485
  %487 = bitcast i8* %300 to float*
  %488 = load float, float* %487, align 4
  %489 = load float, float* %0, align 4
  %490 = fmul float %488, %489
  %491 = fadd float %490, 0.000000e+00
  %492 = bitcast i8* %304 to float*
  %493 = load float, float* %492, align 4
  %494 = load float, float* %337, align 4
  %495 = fmul float %493, %494
  %496 = fadd float %491, %495
  %497 = bitcast i8* %308 to float*
  %498 = load float, float* %497, align 4
  %499 = load float, float* %343, align 4
  %500 = fmul float %498, %499
  %501 = fadd float %496, %500
  %502 = bitcast i8* %312 to float*
  %503 = load float, float* %502, align 4
  %504 = load float, float* %349, align 4
  %505 = fmul float %503, %504
  %506 = fadd float %501, %505
  %507 = getelementptr inbounds float, float* %2, i64 9
  %508 = load float, float* %487, align 4
  %509 = load float, float* %355, align 4
  %510 = fmul float %508, %509
  %511 = fadd float %510, 0.000000e+00
  %512 = load float, float* %492, align 4
  %513 = load float, float* %360, align 4
  %514 = fmul float %512, %513
  %515 = fadd float %511, %514
  %516 = load float, float* %497, align 4
  %517 = load float, float* %365, align 4
  %518 = fmul float %516, %517
  %519 = fadd float %515, %518
  %520 = load float, float* %502, align 4
  %521 = load float, float* %370, align 4
  %522 = fmul float %520, %521
  %523 = fadd float %519, %522
  %524 = getelementptr inbounds float, float* %2, i64 10
  %525 = load float, float* %487, align 4
  %526 = load float, float* %376, align 4
  %527 = fmul float %525, %526
  %528 = fadd float %527, 0.000000e+00
  %529 = load float, float* %492, align 4
  %530 = load float, float* %381, align 4
  %531 = fmul float %529, %530
  %532 = fadd float %528, %531
  %533 = load float, float* %497, align 4
  %534 = load float, float* %386, align 4
  %535 = fmul float %533, %534
  %536 = fadd float %532, %535
  %537 = load float, float* %502, align 4
  %538 = load float, float* %391, align 4
  %539 = fmul float %537, %538
  %540 = fadd float %536, %539
  %541 = getelementptr inbounds float, float* %2, i64 11
  %542 = load float, float* %487, align 4
  %543 = load float, float* %397, align 4
  %544 = fmul float %542, %543
  %545 = fadd float %544, 0.000000e+00
  %546 = load float, float* %492, align 4
  %547 = load float, float* %402, align 4
  %548 = fmul float %546, %547
  %549 = fadd float %545, %548
  %550 = load float, float* %497, align 4
  %551 = load float, float* %407, align 4
  %552 = fmul float %550, %551
  %553 = fadd float %549, %552
  %554 = load float, float* %502, align 4
  %555 = load float, float* %412, align 4
  %556 = fmul float %554, %555
  %557 = fadd float %553, %556
  %558 = bitcast i8* %316 to float*
  %559 = load float, float* %558, align 4
  %560 = load float, float* %0, align 4
  %561 = fmul float %559, %560
  %562 = fadd float %561, 0.000000e+00
  %563 = bitcast i8* %320 to float*
  %564 = load float, float* %563, align 4
  %565 = load float, float* %337, align 4
  %566 = fmul float %564, %565
  %567 = fadd float %562, %566
  %568 = bitcast i8* %324 to float*
  %569 = load float, float* %568, align 4
  %570 = load float, float* %343, align 4
  %571 = fmul float %569, %570
  %572 = fadd float %567, %571
  %573 = bitcast i8* %328 to float*
  %574 = load float, float* %573, align 4
  %575 = load float, float* %349, align 4
  %576 = fmul float %574, %575
  %577 = fadd float %572, %576
  %578 = getelementptr inbounds float, float* %2, i64 13
  %579 = load float, float* %558, align 4
  %580 = load float, float* %355, align 4
  %581 = fmul float %579, %580
  %582 = fadd float %581, 0.000000e+00
  %583 = load float, float* %563, align 4
  %584 = load float, float* %360, align 4
  %585 = fmul float %583, %584
  %586 = fadd float %582, %585
  %587 = load float, float* %568, align 4
  %588 = load float, float* %365, align 4
  %589 = fmul float %587, %588
  %590 = fadd float %586, %589
  %591 = load float, float* %573, align 4
  %592 = load float, float* %370, align 4
  %593 = fmul float %591, %592
  %594 = fadd float %590, %593
  %595 = getelementptr inbounds float, float* %2, i64 14
  %596 = load float, float* %558, align 4
  %597 = load float, float* %376, align 4
  %598 = fmul float %596, %597
  %599 = fadd float %598, 0.000000e+00
  %600 = load float, float* %563, align 4
  %601 = load float, float* %381, align 4
  %602 = fmul float %600, %601
  %603 = fadd float %599, %602
  %604 = load float, float* %568, align 4
  %605 = load float, float* %386, align 4
  %606 = fmul float %604, %605
  %607 = fadd float %603, %606
  %608 = load float, float* %573, align 4
  %609 = load float, float* %391, align 4
  %610 = fmul float %608, %609
  %611 = fadd float %607, %610
  %612 = getelementptr inbounds float, float* %2, i64 15
  %613 = load float, float* %558, align 4
  %614 = load float, float* %397, align 4
  %615 = fmul float %613, %614
  %616 = fadd float %615, 0.000000e+00
  %617 = load float, float* %563, align 4
  %618 = load float, float* %402, align 4
  %619 = fmul float %617, %618
  %620 = fadd float %616, %619
  %621 = load float, float* %568, align 4
  %622 = load float, float* %407, align 4
  %623 = fmul float %621, %622
  %624 = fadd float %620, %623
  %625 = load float, float* %573, align 4
  %626 = load float, float* %412, align 4
  %627 = fmul float %625, %626
  %628 = fadd float %624, %627
  call void @free(i8* %23)
  call void @free(i8* %25)
  call void @free(i8* %95)
  call void @free(i8* %97)
  call void @free(i8* %157)
  call void @free(i8* %265)
  %629 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %630 = bitcast i8* %629 to float*
  %631 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %632 = bitcast i8* %631 to float*
  %633 = bitcast float* %436 to i32*
  %634 = load i32, i32* %633, align 4
  %635 = bitcast i8* %629 to i32*
  %636 = bitcast i8* %10 to i32*
  %637 = load i32, i32* %636, align 4
  %638 = bitcast i8* %631 to i32*
  %639 = bitcast float* %507 to i32*
  %640 = load i32, i32* %639, align 4
  %641 = getelementptr inbounds i8, i8* %629, i64 4
  %642 = bitcast i8* %641 to i32*
  %643 = bitcast i8* %13 to i32*
  %644 = load i32, i32* %643, align 4
  %645 = getelementptr inbounds i8, i8* %631, i64 4
  %646 = bitcast i8* %645 to i32*
  %647 = bitcast float* %578 to i32*
  %648 = load i32, i32* %647, align 4
  %649 = getelementptr inbounds i8, i8* %629, i64 8
  %650 = bitcast i8* %649 to i32*
  %651 = bitcast i8* %17 to i32*
  %652 = load i32, i32* %651, align 4
  %653 = getelementptr inbounds i8, i8* %631, i64 8
  %654 = bitcast i8* %653 to i32*
  %655 = load float, float* %630, align 4
  %656 = fcmp ogt float %655, 0.000000e+00
  %657 = zext i1 %656 to i32
  %658 = fcmp olt float %655, 0.000000e+00
  %659 = sext i1 %658 to i32
  %660 = add nsw i32 %659, %657
  %661 = sitofp i32 %660 to float
  %662 = fpext float %655 to double
  %663 = fmul double %662, %662
  %664 = fadd double %663, 0.000000e+00
  %665 = fptrunc double %664 to float
  %666 = bitcast i8* %641 to float*
  %667 = load float, float* %666, align 4
  %668 = fpext float %667 to double
  %669 = fmul double %668, %668
  %670 = fpext float %665 to double
  %671 = fadd double %669, %670
  %672 = fptrunc double %671 to float
  %673 = bitcast i8* %649 to float*
  %674 = load float, float* %673, align 4
  %675 = fpext float %674 to double
  %676 = fmul double %675, %675
  %677 = fpext float %672 to double
  %678 = fadd double %676, %677
  %679 = fptrunc double %678 to float
  %680 = fneg float %661
  %681 = call float @llvm.sqrt.f32(float %679) #8
  %682 = fmul float %681, %680
  %683 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %684 = bitcast i8* %683 to float*
  %685 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %686 = load float, float* %630, align 4
  %687 = load float, float* %632, align 4
  %688 = fmul float %682, %687
  %689 = fadd float %686, %688
  %690 = load float, float* %666, align 4
  %691 = bitcast i8* %645 to float*
  %692 = load float, float* %691, align 4
  %693 = fmul float %682, %692
  %694 = fadd float %690, %693
  %695 = getelementptr inbounds i8, i8* %683, i64 4
  %696 = bitcast i8* %695 to float*
  %697 = load float, float* %673, align 4
  %698 = bitcast i8* %653 to float*
  %699 = load float, float* %698, align 4
  %700 = fmul float %682, %699
  %701 = fadd float %697, %700
  %702 = getelementptr inbounds i8, i8* %683, i64 8
  %703 = bitcast i8* %702 to float*
  %704 = fpext float %689 to double
  %705 = fmul double %704, %704
  %706 = fadd double %705, 0.000000e+00
  %707 = fptrunc double %706 to float
  %708 = fpext float %694 to double
  %709 = fmul double %708, %708
  %710 = fpext float %707 to double
  %711 = fadd double %709, %710
  %712 = fptrunc double %711 to float
  %713 = fpext float %701 to double
  %714 = fmul double %713, %713
  %715 = fpext float %712 to double
  %716 = fadd double %714, %715
  %717 = fptrunc double %716 to float
  %718 = bitcast i8* %685 to float*
  %719 = call float @llvm.sqrt.f32(float %717) #8
  %720 = fdiv float %689, %719
  %721 = load float, float* %696, align 4
  %722 = fdiv float %721, %719
  %723 = getelementptr inbounds i8, i8* %685, i64 4
  %724 = bitcast i8* %723 to float*
  %725 = load float, float* %703, align 4
  %726 = fdiv float %725, %719
  %727 = getelementptr inbounds i8, i8* %685, i64 8
  %728 = bitcast i8* %727 to float*
  %729 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %730 = bitcast i8* %729 to float*
  %731 = load float, float* %718, align 4
  %732 = fmul float %731, 2.000000e+00
  %733 = fmul float %732, %731
  %734 = fsub float 1.000000e+00, %733
  %735 = load float, float* %718, align 4
  %736 = fmul float %735, 2.000000e+00
  %737 = load float, float* %724, align 4
  %738 = fmul float %736, %737
  %739 = fsub float 0.000000e+00, %738
  %740 = getelementptr inbounds i8, i8* %729, i64 4
  %741 = bitcast i8* %740 to float*
  %742 = load float, float* %718, align 4
  %743 = fmul float %742, 2.000000e+00
  %744 = load float, float* %728, align 4
  %745 = fmul float %743, %744
  %746 = fsub float 0.000000e+00, %745
  %747 = getelementptr inbounds i8, i8* %729, i64 8
  %748 = bitcast i8* %747 to float*
  %749 = load float, float* %724, align 4
  %750 = fmul float %749, 2.000000e+00
  %751 = load float, float* %718, align 4
  %752 = fmul float %750, %751
  %753 = fsub float 0.000000e+00, %752
  %754 = getelementptr inbounds i8, i8* %729, i64 12
  %755 = bitcast i8* %754 to float*
  %756 = load float, float* %724, align 4
  %757 = fmul float %756, 2.000000e+00
  %758 = fmul float %757, %756
  %759 = fsub float 1.000000e+00, %758
  %760 = getelementptr inbounds i8, i8* %729, i64 16
  %761 = bitcast i8* %760 to float*
  %762 = load float, float* %724, align 4
  %763 = fmul float %762, 2.000000e+00
  %764 = load float, float* %728, align 4
  %765 = fmul float %763, %764
  %766 = fsub float 0.000000e+00, %765
  %767 = getelementptr inbounds i8, i8* %729, i64 20
  %768 = bitcast i8* %767 to float*
  %769 = load float, float* %728, align 4
  %770 = fmul float %769, 2.000000e+00
  %771 = load float, float* %718, align 4
  %772 = fmul float %770, %771
  %773 = fsub float 0.000000e+00, %772
  %774 = getelementptr inbounds i8, i8* %729, i64 24
  %775 = bitcast i8* %774 to float*
  %776 = load float, float* %728, align 4
  %777 = fmul float %776, 2.000000e+00
  %778 = load float, float* %724, align 4
  %779 = fmul float %777, %778
  %780 = fsub float 0.000000e+00, %779
  %781 = getelementptr inbounds i8, i8* %729, i64 28
  %782 = bitcast i8* %781 to float*
  %783 = load float, float* %728, align 4
  %784 = fmul float %783, 2.000000e+00
  %785 = fmul float %784, %783
  %786 = fsub float 1.000000e+00, %785
  %787 = getelementptr inbounds i8, i8* %729, i64 32
  %788 = bitcast i8* %787 to float*
  %789 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %790 = bitcast i8* %789 to float*
  %791 = getelementptr inbounds i8, i8* %789, i64 4
  %792 = bitcast i8* %791 to float*
  %793 = getelementptr inbounds i8, i8* %789, i64 8
  %794 = bitcast i8* %793 to float*
  %795 = getelementptr inbounds i8, i8* %789, i64 12
  %796 = bitcast i8* %795 to float*
  %797 = getelementptr inbounds i8, i8* %789, i64 16
  %798 = bitcast i8* %797 to float*
  %799 = bitcast i8* %729 to i32*
  %800 = load i32, i32* %799, align 4
  %801 = getelementptr inbounds i8, i8* %789, i64 20
  %802 = bitcast i8* %801 to i32*
  %803 = bitcast i8* %740 to i32*
  %804 = load i32, i32* %803, align 4
  %805 = getelementptr inbounds i8, i8* %789, i64 24
  %806 = bitcast i8* %805 to i32*
  %807 = bitcast i8* %747 to i32*
  %808 = load i32, i32* %807, align 4
  %809 = getelementptr inbounds i8, i8* %789, i64 28
  %810 = bitcast i8* %809 to i32*
  %811 = getelementptr inbounds i8, i8* %789, i64 32
  %812 = bitcast i8* %811 to float*
  %813 = bitcast i8* %754 to i32*
  %814 = load i32, i32* %813, align 4
  %815 = getelementptr inbounds i8, i8* %789, i64 36
  %816 = bitcast i8* %815 to i32*
  %817 = bitcast i8* %760 to i32*
  %818 = load i32, i32* %817, align 4
  %819 = getelementptr inbounds i8, i8* %789, i64 40
  %820 = bitcast i8* %819 to i32*
  %821 = bitcast i8* %767 to i32*
  %822 = load i32, i32* %821, align 4
  %823 = getelementptr inbounds i8, i8* %789, i64 44
  %824 = bitcast i8* %823 to i32*
  %825 = getelementptr inbounds i8, i8* %789, i64 48
  %826 = bitcast i8* %825 to float*
  %827 = bitcast i8* %774 to i32*
  %828 = load i32, i32* %827, align 4
  %829 = getelementptr inbounds i8, i8* %789, i64 52
  %830 = bitcast i8* %829 to i32*
  %831 = bitcast i8* %781 to i32*
  %832 = load i32, i32* %831, align 4
  %833 = getelementptr inbounds i8, i8* %789, i64 56
  %834 = bitcast i8* %833 to i32*
  %835 = bitcast i8* %787 to i32*
  %836 = load i32, i32* %835, align 4
  %837 = getelementptr inbounds i8, i8* %789, i64 60
  %838 = bitcast i8* %837 to i32*
  %839 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %840 = bitcast i8* %839 to float*
  %841 = load float, float* %790, align 4
  %842 = load float, float* %1, align 4
  %843 = fmul float %841, %842
  %844 = fadd float %843, 0.000000e+00
  %845 = load float, float* %792, align 4
  %846 = getelementptr inbounds float, float* %1, i64 4
  %847 = load float, float* %846, align 4
  %848 = fmul float %845, %847
  %849 = fadd float %844, %848
  %850 = load float, float* %794, align 4
  %851 = getelementptr inbounds float, float* %1, i64 8
  %852 = load float, float* %851, align 4
  %853 = fmul float %850, %852
  %854 = fadd float %849, %853
  %855 = load float, float* %796, align 4
  %856 = getelementptr inbounds float, float* %1, i64 12
  %857 = load float, float* %856, align 4
  %858 = fmul float %855, %857
  %859 = fadd float %854, %858
  %860 = getelementptr inbounds i8, i8* %839, i64 4
  %861 = bitcast i8* %860 to float*
  %862 = load float, float* %790, align 4
  %863 = getelementptr inbounds float, float* %1, i64 1
  %864 = load float, float* %863, align 4
  %865 = fmul float %862, %864
  %866 = fadd float 0.000000e+00, %865
  %867 = load float, float* %792, align 4
  %868 = getelementptr inbounds float, float* %1, i64 5
  %869 = load float, float* %868, align 4
  %870 = fmul float %867, %869
  %871 = fadd float %866, %870
  %872 = load float, float* %794, align 4
  %873 = getelementptr inbounds float, float* %1, i64 9
  %874 = load float, float* %873, align 4
  %875 = fmul float %872, %874
  %876 = fadd float %871, %875
  %877 = load float, float* %796, align 4
  %878 = getelementptr inbounds float, float* %1, i64 13
  %879 = load float, float* %878, align 4
  %880 = fmul float %877, %879
  %881 = fadd float %876, %880
  %882 = getelementptr inbounds i8, i8* %839, i64 8
  %883 = bitcast i8* %882 to float*
  %884 = load float, float* %790, align 4
  %885 = getelementptr inbounds float, float* %1, i64 2
  %886 = load float, float* %885, align 4
  %887 = fmul float %884, %886
  %888 = fadd float 0.000000e+00, %887
  %889 = load float, float* %792, align 4
  %890 = getelementptr inbounds float, float* %1, i64 6
  %891 = load float, float* %890, align 4
  %892 = fmul float %889, %891
  %893 = fadd float %888, %892
  %894 = load float, float* %794, align 4
  %895 = getelementptr inbounds float, float* %1, i64 10
  %896 = load float, float* %895, align 4
  %897 = fmul float %894, %896
  %898 = fadd float %893, %897
  %899 = load float, float* %796, align 4
  %900 = getelementptr inbounds float, float* %1, i64 14
  %901 = load float, float* %900, align 4
  %902 = fmul float %899, %901
  %903 = fadd float %898, %902
  %904 = getelementptr inbounds i8, i8* %839, i64 12
  %905 = bitcast i8* %904 to float*
  %906 = load float, float* %790, align 4
  %907 = getelementptr inbounds float, float* %1, i64 3
  %908 = load float, float* %907, align 4
  %909 = fmul float %906, %908
  %910 = fadd float 0.000000e+00, %909
  %911 = load float, float* %792, align 4
  %912 = getelementptr inbounds float, float* %1, i64 7
  %913 = load float, float* %912, align 4
  %914 = fmul float %911, %913
  %915 = fadd float %910, %914
  %916 = load float, float* %794, align 4
  %917 = getelementptr inbounds float, float* %1, i64 11
  %918 = load float, float* %917, align 4
  %919 = fmul float %916, %918
  %920 = fadd float %915, %919
  %921 = load float, float* %796, align 4
  %922 = getelementptr inbounds float, float* %1, i64 15
  %923 = load float, float* %922, align 4
  %924 = fmul float %921, %923
  %925 = fadd float %920, %924
  %926 = getelementptr inbounds i8, i8* %839, i64 16
  %927 = bitcast i8* %926 to float*
  %928 = load float, float* %798, align 4
  %929 = load float, float* %1, align 4
  %930 = fmul float %928, %929
  %931 = fadd float %930, 0.000000e+00
  %932 = bitcast i8* %801 to float*
  %933 = load float, float* %932, align 4
  %934 = load float, float* %846, align 4
  %935 = fmul float %933, %934
  %936 = fadd float %931, %935
  %937 = bitcast i8* %805 to float*
  %938 = load float, float* %937, align 4
  %939 = load float, float* %851, align 4
  %940 = fmul float %938, %939
  %941 = fadd float %936, %940
  %942 = bitcast i8* %809 to float*
  %943 = load float, float* %942, align 4
  %944 = load float, float* %856, align 4
  %945 = fmul float %943, %944
  %946 = fadd float %941, %945
  %947 = getelementptr inbounds i8, i8* %839, i64 20
  %948 = bitcast i8* %947 to float*
  %949 = load float, float* %798, align 4
  %950 = load float, float* %863, align 4
  %951 = fmul float %949, %950
  %952 = fadd float 0.000000e+00, %951
  %953 = load float, float* %932, align 4
  %954 = load float, float* %868, align 4
  %955 = fmul float %953, %954
  %956 = fadd float %952, %955
  %957 = load float, float* %937, align 4
  %958 = load float, float* %873, align 4
  %959 = fmul float %957, %958
  %960 = fadd float %956, %959
  %961 = load float, float* %942, align 4
  %962 = load float, float* %878, align 4
  %963 = fmul float %961, %962
  %964 = fadd float %960, %963
  %965 = getelementptr inbounds i8, i8* %839, i64 24
  %966 = bitcast i8* %965 to float*
  %967 = load float, float* %798, align 4
  %968 = load float, float* %885, align 4
  %969 = fmul float %967, %968
  %970 = fadd float 0.000000e+00, %969
  %971 = load float, float* %932, align 4
  %972 = load float, float* %890, align 4
  %973 = fmul float %971, %972
  %974 = fadd float %970, %973
  %975 = load float, float* %937, align 4
  %976 = load float, float* %895, align 4
  %977 = fmul float %975, %976
  %978 = fadd float %974, %977
  %979 = load float, float* %942, align 4
  %980 = load float, float* %900, align 4
  %981 = fmul float %979, %980
  %982 = fadd float %978, %981
  %983 = getelementptr inbounds i8, i8* %839, i64 28
  %984 = bitcast i8* %983 to float*
  %985 = load float, float* %798, align 4
  %986 = load float, float* %907, align 4
  %987 = fmul float %985, %986
  %988 = fadd float 0.000000e+00, %987
  %989 = load float, float* %932, align 4
  %990 = load float, float* %912, align 4
  %991 = fmul float %989, %990
  %992 = fadd float %988, %991
  %993 = load float, float* %937, align 4
  %994 = load float, float* %917, align 4
  %995 = fmul float %993, %994
  %996 = fadd float %992, %995
  %997 = load float, float* %942, align 4
  %998 = load float, float* %922, align 4
  %999 = fmul float %997, %998
  %1000 = fadd float %996, %999
  %1001 = getelementptr inbounds i8, i8* %839, i64 32
  %1002 = bitcast i8* %1001 to float*
  %1003 = load float, float* %812, align 4
  %1004 = load float, float* %1, align 4
  %1005 = fmul float %1003, %1004
  %1006 = fadd float %1005, 0.000000e+00
  %1007 = bitcast i8* %815 to float*
  %1008 = load float, float* %1007, align 4
  %1009 = load float, float* %846, align 4
  %1010 = fmul float %1008, %1009
  %1011 = fadd float %1006, %1010
  %1012 = bitcast i8* %819 to float*
  %1013 = load float, float* %1012, align 4
  %1014 = load float, float* %851, align 4
  %1015 = fmul float %1013, %1014
  %1016 = fadd float %1011, %1015
  %1017 = bitcast i8* %823 to float*
  %1018 = load float, float* %1017, align 4
  %1019 = load float, float* %856, align 4
  %1020 = fmul float %1018, %1019
  %1021 = fadd float %1016, %1020
  %1022 = getelementptr inbounds i8, i8* %839, i64 36
  %1023 = bitcast i8* %1022 to float*
  %1024 = load float, float* %812, align 4
  %1025 = load float, float* %863, align 4
  %1026 = fmul float %1024, %1025
  %1027 = fadd float 0.000000e+00, %1026
  %1028 = load float, float* %1007, align 4
  %1029 = load float, float* %868, align 4
  %1030 = fmul float %1028, %1029
  %1031 = fadd float %1027, %1030
  %1032 = load float, float* %1012, align 4
  %1033 = load float, float* %873, align 4
  %1034 = fmul float %1032, %1033
  %1035 = fadd float %1031, %1034
  %1036 = load float, float* %1017, align 4
  %1037 = load float, float* %878, align 4
  %1038 = fmul float %1036, %1037
  %1039 = fadd float %1035, %1038
  %1040 = getelementptr inbounds i8, i8* %839, i64 40
  %1041 = bitcast i8* %1040 to float*
  %1042 = load float, float* %812, align 4
  %1043 = load float, float* %885, align 4
  %1044 = fmul float %1042, %1043
  %1045 = fadd float 0.000000e+00, %1044
  %1046 = load float, float* %1007, align 4
  %1047 = load float, float* %890, align 4
  %1048 = fmul float %1046, %1047
  %1049 = fadd float %1045, %1048
  %1050 = load float, float* %1012, align 4
  %1051 = load float, float* %895, align 4
  %1052 = fmul float %1050, %1051
  %1053 = fadd float %1049, %1052
  %1054 = load float, float* %1017, align 4
  %1055 = load float, float* %900, align 4
  %1056 = fmul float %1054, %1055
  %1057 = fadd float %1053, %1056
  %1058 = getelementptr inbounds i8, i8* %839, i64 44
  %1059 = bitcast i8* %1058 to float*
  %1060 = load float, float* %812, align 4
  %1061 = load float, float* %907, align 4
  %1062 = fmul float %1060, %1061
  %1063 = fadd float 0.000000e+00, %1062
  %1064 = load float, float* %1007, align 4
  %1065 = load float, float* %912, align 4
  %1066 = fmul float %1064, %1065
  %1067 = fadd float %1063, %1066
  %1068 = load float, float* %1012, align 4
  %1069 = load float, float* %917, align 4
  %1070 = fmul float %1068, %1069
  %1071 = fadd float %1067, %1070
  %1072 = load float, float* %1017, align 4
  %1073 = load float, float* %922, align 4
  %1074 = fmul float %1072, %1073
  %1075 = fadd float %1071, %1074
  %1076 = getelementptr inbounds i8, i8* %839, i64 48
  %1077 = bitcast i8* %1076 to float*
  %1078 = load float, float* %826, align 4
  %1079 = load float, float* %1, align 4
  %1080 = fmul float %1078, %1079
  %1081 = fadd float %1080, 0.000000e+00
  %1082 = bitcast i8* %829 to float*
  %1083 = load float, float* %1082, align 4
  %1084 = load float, float* %846, align 4
  %1085 = fmul float %1083, %1084
  %1086 = fadd float %1081, %1085
  %1087 = bitcast i8* %833 to float*
  %1088 = load float, float* %1087, align 4
  %1089 = load float, float* %851, align 4
  %1090 = fmul float %1088, %1089
  %1091 = fadd float %1086, %1090
  %1092 = bitcast i8* %837 to float*
  %1093 = load float, float* %1092, align 4
  %1094 = load float, float* %856, align 4
  %1095 = fmul float %1093, %1094
  %1096 = fadd float %1091, %1095
  %1097 = getelementptr inbounds i8, i8* %839, i64 52
  %1098 = bitcast i8* %1097 to float*
  %1099 = load float, float* %826, align 4
  %1100 = load float, float* %863, align 4
  %1101 = fmul float %1099, %1100
  %1102 = fadd float 0.000000e+00, %1101
  %1103 = load float, float* %1082, align 4
  %1104 = load float, float* %868, align 4
  %1105 = fmul float %1103, %1104
  %1106 = fadd float %1102, %1105
  %1107 = load float, float* %1087, align 4
  %1108 = load float, float* %873, align 4
  %1109 = fmul float %1107, %1108
  %1110 = fadd float %1106, %1109
  %1111 = load float, float* %1092, align 4
  %1112 = load float, float* %878, align 4
  %1113 = fmul float %1111, %1112
  %1114 = fadd float %1110, %1113
  %1115 = getelementptr inbounds i8, i8* %839, i64 56
  %1116 = bitcast i8* %1115 to float*
  %1117 = load float, float* %826, align 4
  %1118 = load float, float* %885, align 4
  %1119 = fmul float %1117, %1118
  %1120 = fadd float 0.000000e+00, %1119
  %1121 = load float, float* %1082, align 4
  %1122 = load float, float* %890, align 4
  %1123 = fmul float %1121, %1122
  %1124 = fadd float %1120, %1123
  %1125 = load float, float* %1087, align 4
  %1126 = load float, float* %895, align 4
  %1127 = fmul float %1125, %1126
  %1128 = fadd float %1124, %1127
  %1129 = load float, float* %1092, align 4
  %1130 = load float, float* %900, align 4
  %1131 = fmul float %1129, %1130
  %1132 = fadd float %1128, %1131
  %1133 = getelementptr inbounds i8, i8* %839, i64 60
  %1134 = bitcast i8* %1133 to float*
  %1135 = load float, float* %826, align 4
  %1136 = load float, float* %907, align 4
  %1137 = fmul float %1135, %1136
  %1138 = fadd float 0.000000e+00, %1137
  %1139 = load float, float* %1082, align 4
  %1140 = load float, float* %912, align 4
  %1141 = fmul float %1139, %1140
  %1142 = fadd float %1138, %1141
  %1143 = load float, float* %1087, align 4
  %1144 = load float, float* %917, align 4
  %1145 = fmul float %1143, %1144
  %1146 = fadd float %1142, %1145
  %1147 = load float, float* %1092, align 4
  %1148 = load float, float* %922, align 4
  %1149 = fmul float %1147, %1148
  %1150 = fadd float %1146, %1149
  %1151 = call i8* @__memcpy_chk(i8* %21, i8* %839, i64 64, i64 %22) #8
  %1152 = load float, float* %790, align 4
  %1153 = load float, float* %2, align 4
  %1154 = fmul float %1152, %1153
  %1155 = fadd float %1154, 0.000000e+00
  %1156 = load float, float* %792, align 4
  %1157 = load float, float* %33, align 4
  %1158 = fmul float %1156, %1157
  %1159 = fadd float %1155, %1158
  %1160 = load float, float* %794, align 4
  %1161 = load float, float* %42, align 4
  %1162 = fmul float %1160, %1161
  %1163 = fadd float %1159, %1162
  %1164 = load float, float* %796, align 4
  %1165 = load float, float* %51, align 4
  %1166 = fmul float %1164, %1165
  %1167 = fadd float %1163, %1166
  %1168 = load float, float* %790, align 4
  %1169 = load float, float* %353, align 4
  %1170 = fmul float %1168, %1169
  %1171 = fadd float 0.000000e+00, %1170
  %1172 = load float, float* %792, align 4
  %1173 = load float, float* %436, align 4
  %1174 = fmul float %1172, %1173
  %1175 = fadd float %1171, %1174
  %1176 = load float, float* %794, align 4
  %1177 = load float, float* %507, align 4
  %1178 = fmul float %1176, %1177
  %1179 = fadd float %1175, %1178
  %1180 = load float, float* %796, align 4
  %1181 = load float, float* %578, align 4
  %1182 = fmul float %1180, %1181
  %1183 = fadd float %1179, %1182
  %1184 = load float, float* %790, align 4
  %1185 = load float, float* %374, align 4
  %1186 = fmul float %1184, %1185
  %1187 = fadd float 0.000000e+00, %1186
  %1188 = load float, float* %792, align 4
  %1189 = load float, float* %453, align 4
  %1190 = fmul float %1188, %1189
  %1191 = fadd float %1187, %1190
  %1192 = load float, float* %794, align 4
  %1193 = load float, float* %524, align 4
  %1194 = fmul float %1192, %1193
  %1195 = fadd float %1191, %1194
  %1196 = load float, float* %796, align 4
  %1197 = load float, float* %595, align 4
  %1198 = fmul float %1196, %1197
  %1199 = fadd float %1195, %1198
  %1200 = load float, float* %790, align 4
  %1201 = load float, float* %395, align 4
  %1202 = fmul float %1200, %1201
  %1203 = fadd float 0.000000e+00, %1202
  %1204 = load float, float* %792, align 4
  %1205 = load float, float* %470, align 4
  %1206 = fmul float %1204, %1205
  %1207 = fadd float %1203, %1206
  %1208 = load float, float* %794, align 4
  %1209 = load float, float* %541, align 4
  %1210 = fmul float %1208, %1209
  %1211 = fadd float %1207, %1210
  %1212 = load float, float* %796, align 4
  %1213 = load float, float* %612, align 4
  %1214 = fmul float %1212, %1213
  %1215 = fadd float %1211, %1214
  %1216 = load float, float* %798, align 4
  %1217 = load float, float* %2, align 4
  %1218 = fmul float %1216, %1217
  %1219 = fadd float %1218, 0.000000e+00
  %1220 = load float, float* %932, align 4
  %1221 = load float, float* %33, align 4
  %1222 = fmul float %1220, %1221
  %1223 = fadd float %1219, %1222
  %1224 = load float, float* %937, align 4
  %1225 = load float, float* %42, align 4
  %1226 = fmul float %1224, %1225
  %1227 = fadd float %1223, %1226
  %1228 = load float, float* %942, align 4
  %1229 = load float, float* %51, align 4
  %1230 = fmul float %1228, %1229
  %1231 = fadd float %1227, %1230
  %1232 = load float, float* %798, align 4
  %1233 = load float, float* %353, align 4
  %1234 = fmul float %1232, %1233
  %1235 = fadd float 0.000000e+00, %1234
  %1236 = load float, float* %932, align 4
  %1237 = load float, float* %436, align 4
  %1238 = fmul float %1236, %1237
  %1239 = fadd float %1235, %1238
  %1240 = load float, float* %937, align 4
  %1241 = load float, float* %507, align 4
  %1242 = fmul float %1240, %1241
  %1243 = fadd float %1239, %1242
  %1244 = load float, float* %942, align 4
  %1245 = load float, float* %578, align 4
  %1246 = fmul float %1244, %1245
  %1247 = fadd float %1243, %1246
  %1248 = load float, float* %798, align 4
  %1249 = load float, float* %374, align 4
  %1250 = fmul float %1248, %1249
  %1251 = fadd float 0.000000e+00, %1250
  %1252 = load float, float* %932, align 4
  %1253 = load float, float* %453, align 4
  %1254 = fmul float %1252, %1253
  %1255 = fadd float %1251, %1254
  %1256 = load float, float* %937, align 4
  %1257 = load float, float* %524, align 4
  %1258 = fmul float %1256, %1257
  %1259 = fadd float %1255, %1258
  %1260 = load float, float* %942, align 4
  %1261 = load float, float* %595, align 4
  %1262 = fmul float %1260, %1261
  %1263 = fadd float %1259, %1262
  %1264 = load float, float* %798, align 4
  %1265 = load float, float* %395, align 4
  %1266 = fmul float %1264, %1265
  %1267 = fadd float 0.000000e+00, %1266
  %1268 = load float, float* %932, align 4
  %1269 = load float, float* %470, align 4
  %1270 = fmul float %1268, %1269
  %1271 = fadd float %1267, %1270
  %1272 = load float, float* %937, align 4
  %1273 = load float, float* %541, align 4
  %1274 = fmul float %1272, %1273
  %1275 = fadd float %1271, %1274
  %1276 = load float, float* %942, align 4
  %1277 = load float, float* %612, align 4
  %1278 = fmul float %1276, %1277
  %1279 = fadd float %1275, %1278
  %1280 = load float, float* %812, align 4
  %1281 = load float, float* %2, align 4
  %1282 = fmul float %1280, %1281
  %1283 = fadd float %1282, 0.000000e+00
  %1284 = load float, float* %1007, align 4
  %1285 = load float, float* %33, align 4
  %1286 = fmul float %1284, %1285
  %1287 = fadd float %1283, %1286
  %1288 = load float, float* %1012, align 4
  %1289 = load float, float* %42, align 4
  %1290 = fmul float %1288, %1289
  %1291 = fadd float %1287, %1290
  %1292 = load float, float* %1017, align 4
  %1293 = load float, float* %51, align 4
  %1294 = fmul float %1292, %1293
  %1295 = fadd float %1291, %1294
  %1296 = load float, float* %812, align 4
  %1297 = load float, float* %353, align 4
  %1298 = fmul float %1296, %1297
  %1299 = fadd float 0.000000e+00, %1298
  %1300 = load float, float* %1007, align 4
  %1301 = load float, float* %436, align 4
  %1302 = fmul float %1300, %1301
  %1303 = fadd float %1299, %1302
  %1304 = load float, float* %1012, align 4
  %1305 = load float, float* %507, align 4
  %1306 = fmul float %1304, %1305
  %1307 = fadd float %1303, %1306
  %1308 = load float, float* %1017, align 4
  %1309 = load float, float* %578, align 4
  %1310 = fmul float %1308, %1309
  %1311 = fadd float %1307, %1310
  %1312 = load float, float* %812, align 4
  %1313 = load float, float* %374, align 4
  %1314 = fmul float %1312, %1313
  %1315 = fadd float 0.000000e+00, %1314
  %1316 = load float, float* %1007, align 4
  %1317 = load float, float* %453, align 4
  %1318 = fmul float %1316, %1317
  %1319 = fadd float %1315, %1318
  %1320 = load float, float* %1012, align 4
  %1321 = load float, float* %524, align 4
  %1322 = fmul float %1320, %1321
  %1323 = fadd float %1319, %1322
  %1324 = load float, float* %1017, align 4
  %1325 = load float, float* %595, align 4
  %1326 = fmul float %1324, %1325
  %1327 = fadd float %1323, %1326
  %1328 = load float, float* %812, align 4
  %1329 = load float, float* %395, align 4
  %1330 = fmul float %1328, %1329
  %1331 = fadd float 0.000000e+00, %1330
  %1332 = load float, float* %1007, align 4
  %1333 = load float, float* %470, align 4
  %1334 = fmul float %1332, %1333
  %1335 = fadd float %1331, %1334
  %1336 = load float, float* %1012, align 4
  %1337 = load float, float* %541, align 4
  %1338 = fmul float %1336, %1337
  %1339 = fadd float %1335, %1338
  %1340 = load float, float* %1017, align 4
  %1341 = load float, float* %612, align 4
  %1342 = fmul float %1340, %1341
  %1343 = fadd float %1339, %1342
  %1344 = load float, float* %826, align 4
  %1345 = load float, float* %2, align 4
  %1346 = fmul float %1344, %1345
  %1347 = fadd float %1346, 0.000000e+00
  %1348 = load float, float* %1082, align 4
  %1349 = load float, float* %33, align 4
  %1350 = fmul float %1348, %1349
  %1351 = fadd float %1347, %1350
  %1352 = load float, float* %1087, align 4
  %1353 = load float, float* %42, align 4
  %1354 = fmul float %1352, %1353
  %1355 = fadd float %1351, %1354
  %1356 = load float, float* %1092, align 4
  %1357 = load float, float* %51, align 4
  %1358 = fmul float %1356, %1357
  %1359 = fadd float %1355, %1358
  %1360 = load float, float* %826, align 4
  %1361 = load float, float* %353, align 4
  %1362 = fmul float %1360, %1361
  %1363 = fadd float 0.000000e+00, %1362
  %1364 = load float, float* %1082, align 4
  %1365 = load float, float* %436, align 4
  %1366 = fmul float %1364, %1365
  %1367 = fadd float %1363, %1366
  %1368 = load float, float* %1087, align 4
  %1369 = load float, float* %507, align 4
  %1370 = fmul float %1368, %1369
  %1371 = fadd float %1367, %1370
  %1372 = load float, float* %1092, align 4
  %1373 = load float, float* %578, align 4
  %1374 = fmul float %1372, %1373
  %1375 = fadd float %1371, %1374
  %1376 = load float, float* %826, align 4
  %1377 = load float, float* %374, align 4
  %1378 = fmul float %1376, %1377
  %1379 = fadd float 0.000000e+00, %1378
  %1380 = load float, float* %1082, align 4
  %1381 = load float, float* %453, align 4
  %1382 = fmul float %1380, %1381
  %1383 = fadd float %1379, %1382
  %1384 = load float, float* %1087, align 4
  %1385 = load float, float* %524, align 4
  %1386 = fmul float %1384, %1385
  %1387 = fadd float %1383, %1386
  %1388 = load float, float* %1092, align 4
  %1389 = load float, float* %595, align 4
  %1390 = fmul float %1388, %1389
  %1391 = fadd float %1387, %1390
  %1392 = load float, float* %826, align 4
  %1393 = load float, float* %395, align 4
  %1394 = fmul float %1392, %1393
  %1395 = fadd float 0.000000e+00, %1394
  %1396 = load float, float* %1082, align 4
  %1397 = load float, float* %470, align 4
  %1398 = fmul float %1396, %1397
  %1399 = fadd float %1395, %1398
  %1400 = load float, float* %1087, align 4
  %1401 = load float, float* %541, align 4
  %1402 = fmul float %1400, %1401
  %1403 = fadd float %1399, %1402
  %1404 = load float, float* %1092, align 4
  %1405 = load float, float* %612, align 4
  %1406 = fmul float %1404, %1405
  %1407 = fadd float %1403, %1406
  %1408 = call i8* @__memcpy_chk(i8* %3, i8* %839, i64 64, i64 %5) #8
  call void @free(i8* %629)
  call void @free(i8* %631)
  call void @free(i8* %683)
  call void @free(i8* %685)
  call void @free(i8* %729)
  call void @free(i8* %789)
  %1409 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %1410 = bitcast i8* %1409 to float*
  %1411 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %1412 = bitcast i8* %1411 to float*
  %1413 = bitcast float* %524 to i32*
  %1414 = load i32, i32* %1413, align 4
  %1415 = bitcast i8* %1409 to i32*
  %1416 = bitcast i8* %14 to i32*
  %1417 = load i32, i32* %1416, align 4
  %1418 = bitcast i8* %1411 to i32*
  %1419 = bitcast float* %595 to i32*
  %1420 = load i32, i32* %1419, align 4
  %1421 = getelementptr inbounds i8, i8* %1409, i64 4
  %1422 = bitcast i8* %1421 to i32*
  %1423 = bitcast i8* %18 to i32*
  %1424 = load i32, i32* %1423, align 4
  %1425 = getelementptr inbounds i8, i8* %1411, i64 4
  %1426 = bitcast i8* %1425 to i32*
  %1427 = load float, float* %1410, align 4
  %1428 = fcmp ogt float %1427, 0.000000e+00
  %1429 = zext i1 %1428 to i32
  %1430 = fcmp olt float %1427, 0.000000e+00
  %1431 = sext i1 %1430 to i32
  %1432 = add nsw i32 %1431, %1429
  %1433 = sitofp i32 %1432 to float
  %1434 = fpext float %1427 to double
  %1435 = fmul double %1434, %1434
  %1436 = fadd double %1435, 0.000000e+00
  %1437 = fptrunc double %1436 to float
  %1438 = bitcast i8* %1421 to float*
  %1439 = load float, float* %1438, align 4
  %1440 = fpext float %1439 to double
  %1441 = fmul double %1440, %1440
  %1442 = fpext float %1437 to double
  %1443 = fadd double %1441, %1442
  %1444 = fptrunc double %1443 to float
  %1445 = fneg float %1433
  %1446 = call float @llvm.sqrt.f32(float %1444) #8
  %1447 = fmul float %1446, %1445
  %1448 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %1449 = bitcast i8* %1448 to float*
  %1450 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %1451 = load float, float* %1410, align 4
  %1452 = load float, float* %1412, align 4
  %1453 = fmul float %1447, %1452
  %1454 = fadd float %1451, %1453
  %1455 = load float, float* %1438, align 4
  %1456 = bitcast i8* %1425 to float*
  %1457 = load float, float* %1456, align 4
  %1458 = fmul float %1447, %1457
  %1459 = fadd float %1455, %1458
  %1460 = getelementptr inbounds i8, i8* %1448, i64 4
  %1461 = bitcast i8* %1460 to float*
  %1462 = fpext float %1454 to double
  %1463 = fmul double %1462, %1462
  %1464 = fadd double %1463, 0.000000e+00
  %1465 = fptrunc double %1464 to float
  %1466 = fpext float %1459 to double
  %1467 = fmul double %1466, %1466
  %1468 = fpext float %1465 to double
  %1469 = fadd double %1467, %1468
  %1470 = fptrunc double %1469 to float
  %1471 = bitcast i8* %1450 to float*
  %1472 = call float @llvm.sqrt.f32(float %1470) #8
  %1473 = fdiv float %1454, %1472
  %1474 = load float, float* %1461, align 4
  %1475 = fdiv float %1474, %1472
  %1476 = getelementptr inbounds i8, i8* %1450, i64 4
  %1477 = bitcast i8* %1476 to float*
  %1478 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %1479 = bitcast i8* %1478 to float*
  %1480 = load float, float* %1471, align 4
  %1481 = fmul float %1480, 2.000000e+00
  %1482 = fmul float %1481, %1480
  %1483 = fsub float 1.000000e+00, %1482
  %1484 = load float, float* %1471, align 4
  %1485 = fmul float %1484, 2.000000e+00
  %1486 = load float, float* %1477, align 4
  %1487 = fmul float %1485, %1486
  %1488 = fsub float 0.000000e+00, %1487
  %1489 = getelementptr inbounds i8, i8* %1478, i64 4
  %1490 = bitcast i8* %1489 to float*
  %1491 = load float, float* %1477, align 4
  %1492 = fmul float %1491, 2.000000e+00
  %1493 = load float, float* %1471, align 4
  %1494 = fmul float %1492, %1493
  %1495 = fsub float 0.000000e+00, %1494
  %1496 = getelementptr inbounds i8, i8* %1478, i64 8
  %1497 = bitcast i8* %1496 to float*
  %1498 = load float, float* %1477, align 4
  %1499 = fmul float %1498, 2.000000e+00
  %1500 = fmul float %1499, %1498
  %1501 = fsub float 1.000000e+00, %1500
  %1502 = getelementptr inbounds i8, i8* %1478, i64 12
  %1503 = bitcast i8* %1502 to float*
  %1504 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1505 = bitcast i8* %1504 to float*
  %1506 = getelementptr inbounds i8, i8* %1504, i64 4
  %1507 = bitcast i8* %1506 to float*
  %1508 = getelementptr inbounds i8, i8* %1504, i64 8
  %1509 = bitcast i8* %1508 to float*
  %1510 = getelementptr inbounds i8, i8* %1504, i64 12
  %1511 = bitcast i8* %1510 to float*
  %1512 = getelementptr inbounds i8, i8* %1504, i64 16
  %1513 = bitcast i8* %1512 to float*
  %1514 = getelementptr inbounds i8, i8* %1504, i64 20
  %1515 = bitcast i8* %1514 to float*
  %1516 = getelementptr inbounds i8, i8* %1504, i64 24
  %1517 = bitcast i8* %1516 to float*
  %1518 = getelementptr inbounds i8, i8* %1504, i64 28
  %1519 = bitcast i8* %1518 to float*
  %1520 = getelementptr inbounds i8, i8* %1504, i64 32
  %1521 = bitcast i8* %1520 to float*
  %1522 = getelementptr inbounds i8, i8* %1504, i64 36
  %1523 = bitcast i8* %1522 to float*
  %1524 = bitcast i8* %1478 to i32*
  %1525 = load i32, i32* %1524, align 4
  %1526 = getelementptr inbounds i8, i8* %1504, i64 40
  %1527 = bitcast i8* %1526 to i32*
  %1528 = bitcast i8* %1489 to i32*
  %1529 = load i32, i32* %1528, align 4
  %1530 = getelementptr inbounds i8, i8* %1504, i64 44
  %1531 = bitcast i8* %1530 to i32*
  %1532 = getelementptr inbounds i8, i8* %1504, i64 48
  %1533 = bitcast i8* %1532 to float*
  %1534 = getelementptr inbounds i8, i8* %1504, i64 52
  %1535 = bitcast i8* %1534 to float*
  %1536 = bitcast i8* %1496 to i32*
  %1537 = load i32, i32* %1536, align 4
  %1538 = getelementptr inbounds i8, i8* %1504, i64 56
  %1539 = bitcast i8* %1538 to i32*
  %1540 = bitcast i8* %1502 to i32*
  %1541 = load i32, i32* %1540, align 4
  %1542 = getelementptr inbounds i8, i8* %1504, i64 60
  %1543 = bitcast i8* %1542 to i32*
  %1544 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1545 = bitcast i8* %1544 to float*
  %1546 = load float, float* %1505, align 4
  %1547 = load float, float* %1, align 4
  %1548 = fmul float %1546, %1547
  %1549 = fadd float %1548, 0.000000e+00
  %1550 = load float, float* %1507, align 4
  %1551 = load float, float* %846, align 4
  %1552 = fmul float %1550, %1551
  %1553 = fadd float %1549, %1552
  %1554 = load float, float* %1509, align 4
  %1555 = load float, float* %851, align 4
  %1556 = fmul float %1554, %1555
  %1557 = fadd float %1553, %1556
  %1558 = load float, float* %1511, align 4
  %1559 = load float, float* %856, align 4
  %1560 = fmul float %1558, %1559
  %1561 = fadd float %1557, %1560
  %1562 = getelementptr inbounds i8, i8* %1544, i64 4
  %1563 = bitcast i8* %1562 to float*
  %1564 = load float, float* %1505, align 4
  %1565 = load float, float* %863, align 4
  %1566 = fmul float %1564, %1565
  %1567 = fadd float 0.000000e+00, %1566
  %1568 = load float, float* %1507, align 4
  %1569 = load float, float* %868, align 4
  %1570 = fmul float %1568, %1569
  %1571 = fadd float %1567, %1570
  %1572 = load float, float* %1509, align 4
  %1573 = load float, float* %873, align 4
  %1574 = fmul float %1572, %1573
  %1575 = fadd float %1571, %1574
  %1576 = load float, float* %1511, align 4
  %1577 = load float, float* %878, align 4
  %1578 = fmul float %1576, %1577
  %1579 = fadd float %1575, %1578
  %1580 = getelementptr inbounds i8, i8* %1544, i64 8
  %1581 = bitcast i8* %1580 to float*
  %1582 = load float, float* %1505, align 4
  %1583 = load float, float* %885, align 4
  %1584 = fmul float %1582, %1583
  %1585 = fadd float 0.000000e+00, %1584
  %1586 = load float, float* %1507, align 4
  %1587 = load float, float* %890, align 4
  %1588 = fmul float %1586, %1587
  %1589 = fadd float %1585, %1588
  %1590 = load float, float* %1509, align 4
  %1591 = load float, float* %895, align 4
  %1592 = fmul float %1590, %1591
  %1593 = fadd float %1589, %1592
  %1594 = load float, float* %1511, align 4
  %1595 = load float, float* %900, align 4
  %1596 = fmul float %1594, %1595
  %1597 = fadd float %1593, %1596
  %1598 = getelementptr inbounds i8, i8* %1544, i64 12
  %1599 = bitcast i8* %1598 to float*
  %1600 = load float, float* %1505, align 4
  %1601 = load float, float* %907, align 4
  %1602 = fmul float %1600, %1601
  %1603 = fadd float 0.000000e+00, %1602
  %1604 = load float, float* %1507, align 4
  %1605 = load float, float* %912, align 4
  %1606 = fmul float %1604, %1605
  %1607 = fadd float %1603, %1606
  %1608 = load float, float* %1509, align 4
  %1609 = load float, float* %917, align 4
  %1610 = fmul float %1608, %1609
  %1611 = fadd float %1607, %1610
  %1612 = load float, float* %1511, align 4
  %1613 = load float, float* %922, align 4
  %1614 = fmul float %1612, %1613
  %1615 = fadd float %1611, %1614
  %1616 = getelementptr inbounds i8, i8* %1544, i64 16
  %1617 = bitcast i8* %1616 to float*
  %1618 = load float, float* %1513, align 4
  %1619 = load float, float* %1, align 4
  %1620 = fmul float %1618, %1619
  %1621 = fadd float %1620, 0.000000e+00
  %1622 = load float, float* %1515, align 4
  %1623 = load float, float* %846, align 4
  %1624 = fmul float %1622, %1623
  %1625 = fadd float %1621, %1624
  %1626 = load float, float* %1517, align 4
  %1627 = load float, float* %851, align 4
  %1628 = fmul float %1626, %1627
  %1629 = fadd float %1625, %1628
  %1630 = load float, float* %1519, align 4
  %1631 = load float, float* %856, align 4
  %1632 = fmul float %1630, %1631
  %1633 = fadd float %1629, %1632
  %1634 = getelementptr inbounds i8, i8* %1544, i64 20
  %1635 = bitcast i8* %1634 to float*
  %1636 = load float, float* %1513, align 4
  %1637 = load float, float* %863, align 4
  %1638 = fmul float %1636, %1637
  %1639 = fadd float 0.000000e+00, %1638
  %1640 = load float, float* %1515, align 4
  %1641 = load float, float* %868, align 4
  %1642 = fmul float %1640, %1641
  %1643 = fadd float %1639, %1642
  %1644 = load float, float* %1517, align 4
  %1645 = load float, float* %873, align 4
  %1646 = fmul float %1644, %1645
  %1647 = fadd float %1643, %1646
  %1648 = load float, float* %1519, align 4
  %1649 = load float, float* %878, align 4
  %1650 = fmul float %1648, %1649
  %1651 = fadd float %1647, %1650
  %1652 = getelementptr inbounds i8, i8* %1544, i64 24
  %1653 = bitcast i8* %1652 to float*
  %1654 = load float, float* %1513, align 4
  %1655 = load float, float* %885, align 4
  %1656 = fmul float %1654, %1655
  %1657 = fadd float 0.000000e+00, %1656
  %1658 = load float, float* %1515, align 4
  %1659 = load float, float* %890, align 4
  %1660 = fmul float %1658, %1659
  %1661 = fadd float %1657, %1660
  %1662 = load float, float* %1517, align 4
  %1663 = load float, float* %895, align 4
  %1664 = fmul float %1662, %1663
  %1665 = fadd float %1661, %1664
  %1666 = load float, float* %1519, align 4
  %1667 = load float, float* %900, align 4
  %1668 = fmul float %1666, %1667
  %1669 = fadd float %1665, %1668
  %1670 = getelementptr inbounds i8, i8* %1544, i64 28
  %1671 = bitcast i8* %1670 to float*
  %1672 = load float, float* %1513, align 4
  %1673 = load float, float* %907, align 4
  %1674 = fmul float %1672, %1673
  %1675 = fadd float 0.000000e+00, %1674
  %1676 = load float, float* %1515, align 4
  %1677 = load float, float* %912, align 4
  %1678 = fmul float %1676, %1677
  %1679 = fadd float %1675, %1678
  %1680 = load float, float* %1517, align 4
  %1681 = load float, float* %917, align 4
  %1682 = fmul float %1680, %1681
  %1683 = fadd float %1679, %1682
  %1684 = load float, float* %1519, align 4
  %1685 = load float, float* %922, align 4
  %1686 = fmul float %1684, %1685
  %1687 = fadd float %1683, %1686
  %1688 = getelementptr inbounds i8, i8* %1544, i64 32
  %1689 = bitcast i8* %1688 to float*
  %1690 = load float, float* %1521, align 4
  %1691 = load float, float* %1, align 4
  %1692 = fmul float %1690, %1691
  %1693 = fadd float %1692, 0.000000e+00
  %1694 = load float, float* %1523, align 4
  %1695 = load float, float* %846, align 4
  %1696 = fmul float %1694, %1695
  %1697 = fadd float %1693, %1696
  %1698 = bitcast i8* %1526 to float*
  %1699 = load float, float* %1698, align 4
  %1700 = load float, float* %851, align 4
  %1701 = fmul float %1699, %1700
  %1702 = fadd float %1697, %1701
  %1703 = bitcast i8* %1530 to float*
  %1704 = load float, float* %1703, align 4
  %1705 = load float, float* %856, align 4
  %1706 = fmul float %1704, %1705
  %1707 = fadd float %1702, %1706
  %1708 = getelementptr inbounds i8, i8* %1544, i64 36
  %1709 = bitcast i8* %1708 to float*
  %1710 = load float, float* %1521, align 4
  %1711 = load float, float* %863, align 4
  %1712 = fmul float %1710, %1711
  %1713 = fadd float 0.000000e+00, %1712
  %1714 = load float, float* %1523, align 4
  %1715 = load float, float* %868, align 4
  %1716 = fmul float %1714, %1715
  %1717 = fadd float %1713, %1716
  %1718 = load float, float* %1698, align 4
  %1719 = load float, float* %873, align 4
  %1720 = fmul float %1718, %1719
  %1721 = fadd float %1717, %1720
  %1722 = load float, float* %1703, align 4
  %1723 = load float, float* %878, align 4
  %1724 = fmul float %1722, %1723
  %1725 = fadd float %1721, %1724
  %1726 = getelementptr inbounds i8, i8* %1544, i64 40
  %1727 = bitcast i8* %1726 to float*
  %1728 = load float, float* %1521, align 4
  %1729 = load float, float* %885, align 4
  %1730 = fmul float %1728, %1729
  %1731 = fadd float 0.000000e+00, %1730
  %1732 = load float, float* %1523, align 4
  %1733 = load float, float* %890, align 4
  %1734 = fmul float %1732, %1733
  %1735 = fadd float %1731, %1734
  %1736 = load float, float* %1698, align 4
  %1737 = load float, float* %895, align 4
  %1738 = fmul float %1736, %1737
  %1739 = fadd float %1735, %1738
  %1740 = load float, float* %1703, align 4
  %1741 = load float, float* %900, align 4
  %1742 = fmul float %1740, %1741
  %1743 = fadd float %1739, %1742
  %1744 = getelementptr inbounds i8, i8* %1544, i64 44
  %1745 = bitcast i8* %1744 to float*
  %1746 = load float, float* %1521, align 4
  %1747 = load float, float* %907, align 4
  %1748 = fmul float %1746, %1747
  %1749 = fadd float 0.000000e+00, %1748
  %1750 = load float, float* %1523, align 4
  %1751 = load float, float* %912, align 4
  %1752 = fmul float %1750, %1751
  %1753 = fadd float %1749, %1752
  %1754 = load float, float* %1698, align 4
  %1755 = load float, float* %917, align 4
  %1756 = fmul float %1754, %1755
  %1757 = fadd float %1753, %1756
  %1758 = load float, float* %1703, align 4
  %1759 = load float, float* %922, align 4
  %1760 = fmul float %1758, %1759
  %1761 = fadd float %1757, %1760
  %1762 = getelementptr inbounds i8, i8* %1544, i64 48
  %1763 = bitcast i8* %1762 to float*
  %1764 = load float, float* %1533, align 4
  %1765 = load float, float* %1, align 4
  %1766 = fmul float %1764, %1765
  %1767 = fadd float %1766, 0.000000e+00
  %1768 = load float, float* %1535, align 4
  %1769 = load float, float* %846, align 4
  %1770 = fmul float %1768, %1769
  %1771 = fadd float %1767, %1770
  %1772 = bitcast i8* %1538 to float*
  %1773 = load float, float* %1772, align 4
  %1774 = load float, float* %851, align 4
  %1775 = fmul float %1773, %1774
  %1776 = fadd float %1771, %1775
  %1777 = bitcast i8* %1542 to float*
  %1778 = load float, float* %1777, align 4
  %1779 = load float, float* %856, align 4
  %1780 = fmul float %1778, %1779
  %1781 = fadd float %1776, %1780
  %1782 = getelementptr inbounds i8, i8* %1544, i64 52
  %1783 = bitcast i8* %1782 to float*
  %1784 = load float, float* %1533, align 4
  %1785 = load float, float* %863, align 4
  %1786 = fmul float %1784, %1785
  %1787 = fadd float 0.000000e+00, %1786
  %1788 = load float, float* %1535, align 4
  %1789 = load float, float* %868, align 4
  %1790 = fmul float %1788, %1789
  %1791 = fadd float %1787, %1790
  %1792 = load float, float* %1772, align 4
  %1793 = load float, float* %873, align 4
  %1794 = fmul float %1792, %1793
  %1795 = fadd float %1791, %1794
  %1796 = load float, float* %1777, align 4
  %1797 = load float, float* %878, align 4
  %1798 = fmul float %1796, %1797
  %1799 = fadd float %1795, %1798
  %1800 = getelementptr inbounds i8, i8* %1544, i64 56
  %1801 = bitcast i8* %1800 to float*
  %1802 = load float, float* %1533, align 4
  %1803 = load float, float* %885, align 4
  %1804 = fmul float %1802, %1803
  %1805 = fadd float 0.000000e+00, %1804
  %1806 = load float, float* %1535, align 4
  %1807 = load float, float* %890, align 4
  %1808 = fmul float %1806, %1807
  %1809 = fadd float %1805, %1808
  %1810 = load float, float* %1772, align 4
  %1811 = load float, float* %895, align 4
  %1812 = fmul float %1810, %1811
  %1813 = fadd float %1809, %1812
  %1814 = load float, float* %1777, align 4
  %1815 = load float, float* %900, align 4
  %1816 = fmul float %1814, %1815
  %1817 = fadd float %1813, %1816
  %1818 = getelementptr inbounds i8, i8* %1544, i64 60
  %1819 = bitcast i8* %1818 to float*
  %1820 = load float, float* %1533, align 4
  %1821 = load float, float* %907, align 4
  %1822 = fmul float %1820, %1821
  %1823 = fadd float 0.000000e+00, %1822
  %1824 = load float, float* %1535, align 4
  %1825 = load float, float* %912, align 4
  %1826 = fmul float %1824, %1825
  %1827 = fadd float %1823, %1826
  %1828 = load float, float* %1772, align 4
  %1829 = load float, float* %917, align 4
  %1830 = fmul float %1828, %1829
  %1831 = fadd float %1827, %1830
  %1832 = load float, float* %1777, align 4
  %1833 = load float, float* %922, align 4
  %1834 = fmul float %1832, %1833
  %1835 = fadd float %1831, %1834
  %1836 = call i8* @__memcpy_chk(i8* nonnull %21, i8* %1544, i64 64, i64 %22) #8
  %1837 = load float, float* %1505, align 4
  %1838 = load float, float* %2, align 4
  %1839 = fmul float %1837, %1838
  %1840 = fadd float %1839, 0.000000e+00
  %1841 = load float, float* %1507, align 4
  %1842 = load float, float* %33, align 4
  %1843 = fmul float %1841, %1842
  %1844 = fadd float %1840, %1843
  %1845 = load float, float* %1509, align 4
  %1846 = load float, float* %42, align 4
  %1847 = fmul float %1845, %1846
  %1848 = fadd float %1844, %1847
  %1849 = load float, float* %1511, align 4
  %1850 = load float, float* %51, align 4
  %1851 = fmul float %1849, %1850
  %1852 = fadd float %1848, %1851
  %1853 = load float, float* %1505, align 4
  %1854 = load float, float* %353, align 4
  %1855 = fmul float %1853, %1854
  %1856 = fadd float 0.000000e+00, %1855
  %1857 = load float, float* %1507, align 4
  %1858 = load float, float* %436, align 4
  %1859 = fmul float %1857, %1858
  %1860 = fadd float %1856, %1859
  %1861 = load float, float* %1509, align 4
  %1862 = load float, float* %507, align 4
  %1863 = fmul float %1861, %1862
  %1864 = fadd float %1860, %1863
  %1865 = load float, float* %1511, align 4
  %1866 = load float, float* %578, align 4
  %1867 = fmul float %1865, %1866
  %1868 = fadd float %1864, %1867
  %1869 = load float, float* %1505, align 4
  %1870 = load float, float* %374, align 4
  %1871 = fmul float %1869, %1870
  %1872 = fadd float 0.000000e+00, %1871
  %1873 = load float, float* %1507, align 4
  %1874 = load float, float* %453, align 4
  %1875 = fmul float %1873, %1874
  %1876 = fadd float %1872, %1875
  %1877 = load float, float* %1509, align 4
  %1878 = load float, float* %524, align 4
  %1879 = fmul float %1877, %1878
  %1880 = fadd float %1876, %1879
  %1881 = load float, float* %1511, align 4
  %1882 = load float, float* %595, align 4
  %1883 = fmul float %1881, %1882
  %1884 = fadd float %1880, %1883
  %1885 = load float, float* %1505, align 4
  %1886 = load float, float* %395, align 4
  %1887 = fmul float %1885, %1886
  %1888 = fadd float 0.000000e+00, %1887
  %1889 = load float, float* %1507, align 4
  %1890 = load float, float* %470, align 4
  %1891 = fmul float %1889, %1890
  %1892 = fadd float %1888, %1891
  %1893 = load float, float* %1509, align 4
  %1894 = load float, float* %541, align 4
  %1895 = fmul float %1893, %1894
  %1896 = fadd float %1892, %1895
  %1897 = load float, float* %1511, align 4
  %1898 = load float, float* %612, align 4
  %1899 = fmul float %1897, %1898
  %1900 = fadd float %1896, %1899
  %1901 = load float, float* %1513, align 4
  %1902 = load float, float* %2, align 4
  %1903 = fmul float %1901, %1902
  %1904 = fadd float %1903, 0.000000e+00
  %1905 = load float, float* %1515, align 4
  %1906 = load float, float* %33, align 4
  %1907 = fmul float %1905, %1906
  %1908 = fadd float %1904, %1907
  %1909 = load float, float* %1517, align 4
  %1910 = load float, float* %42, align 4
  %1911 = fmul float %1909, %1910
  %1912 = fadd float %1908, %1911
  %1913 = load float, float* %1519, align 4
  %1914 = load float, float* %51, align 4
  %1915 = fmul float %1913, %1914
  %1916 = fadd float %1912, %1915
  %1917 = load float, float* %1513, align 4
  %1918 = load float, float* %353, align 4
  %1919 = fmul float %1917, %1918
  %1920 = fadd float 0.000000e+00, %1919
  %1921 = load float, float* %1515, align 4
  %1922 = load float, float* %436, align 4
  %1923 = fmul float %1921, %1922
  %1924 = fadd float %1920, %1923
  %1925 = load float, float* %1517, align 4
  %1926 = load float, float* %507, align 4
  %1927 = fmul float %1925, %1926
  %1928 = fadd float %1924, %1927
  %1929 = load float, float* %1519, align 4
  %1930 = load float, float* %578, align 4
  %1931 = fmul float %1929, %1930
  %1932 = fadd float %1928, %1931
  %1933 = load float, float* %1513, align 4
  %1934 = load float, float* %374, align 4
  %1935 = fmul float %1933, %1934
  %1936 = fadd float 0.000000e+00, %1935
  %1937 = load float, float* %1515, align 4
  %1938 = load float, float* %453, align 4
  %1939 = fmul float %1937, %1938
  %1940 = fadd float %1936, %1939
  %1941 = load float, float* %1517, align 4
  %1942 = load float, float* %524, align 4
  %1943 = fmul float %1941, %1942
  %1944 = fadd float %1940, %1943
  %1945 = load float, float* %1519, align 4
  %1946 = load float, float* %595, align 4
  %1947 = fmul float %1945, %1946
  %1948 = fadd float %1944, %1947
  %1949 = load float, float* %1513, align 4
  %1950 = load float, float* %395, align 4
  %1951 = fmul float %1949, %1950
  %1952 = fadd float 0.000000e+00, %1951
  %1953 = load float, float* %1515, align 4
  %1954 = load float, float* %470, align 4
  %1955 = fmul float %1953, %1954
  %1956 = fadd float %1952, %1955
  %1957 = load float, float* %1517, align 4
  %1958 = load float, float* %541, align 4
  %1959 = fmul float %1957, %1958
  %1960 = fadd float %1956, %1959
  %1961 = load float, float* %1519, align 4
  %1962 = load float, float* %612, align 4
  %1963 = fmul float %1961, %1962
  %1964 = fadd float %1960, %1963
  %1965 = load float, float* %1521, align 4
  %1966 = load float, float* %2, align 4
  %1967 = fmul float %1965, %1966
  %1968 = fadd float %1967, 0.000000e+00
  %1969 = load float, float* %1523, align 4
  %1970 = load float, float* %33, align 4
  %1971 = fmul float %1969, %1970
  %1972 = fadd float %1968, %1971
  %1973 = load float, float* %1698, align 4
  %1974 = load float, float* %42, align 4
  %1975 = fmul float %1973, %1974
  %1976 = fadd float %1972, %1975
  %1977 = load float, float* %1703, align 4
  %1978 = load float, float* %51, align 4
  %1979 = fmul float %1977, %1978
  %1980 = fadd float %1976, %1979
  %1981 = load float, float* %1521, align 4
  %1982 = load float, float* %353, align 4
  %1983 = fmul float %1981, %1982
  %1984 = fadd float 0.000000e+00, %1983
  %1985 = load float, float* %1523, align 4
  %1986 = load float, float* %436, align 4
  %1987 = fmul float %1985, %1986
  %1988 = fadd float %1984, %1987
  %1989 = load float, float* %1698, align 4
  %1990 = load float, float* %507, align 4
  %1991 = fmul float %1989, %1990
  %1992 = fadd float %1988, %1991
  %1993 = load float, float* %1703, align 4
  %1994 = load float, float* %578, align 4
  %1995 = fmul float %1993, %1994
  %1996 = fadd float %1992, %1995
  %1997 = load float, float* %1521, align 4
  %1998 = load float, float* %374, align 4
  %1999 = fmul float %1997, %1998
  %2000 = fadd float 0.000000e+00, %1999
  %2001 = load float, float* %1523, align 4
  %2002 = load float, float* %453, align 4
  %2003 = fmul float %2001, %2002
  %2004 = fadd float %2000, %2003
  %2005 = load float, float* %1698, align 4
  %2006 = load float, float* %524, align 4
  %2007 = fmul float %2005, %2006
  %2008 = fadd float %2004, %2007
  %2009 = load float, float* %1703, align 4
  %2010 = load float, float* %595, align 4
  %2011 = fmul float %2009, %2010
  %2012 = fadd float %2008, %2011
  %2013 = load float, float* %1521, align 4
  %2014 = load float, float* %395, align 4
  %2015 = fmul float %2013, %2014
  %2016 = fadd float 0.000000e+00, %2015
  %2017 = load float, float* %1523, align 4
  %2018 = load float, float* %470, align 4
  %2019 = fmul float %2017, %2018
  %2020 = fadd float %2016, %2019
  %2021 = load float, float* %1698, align 4
  %2022 = load float, float* %541, align 4
  %2023 = fmul float %2021, %2022
  %2024 = fadd float %2020, %2023
  %2025 = load float, float* %1703, align 4
  %2026 = load float, float* %612, align 4
  %2027 = fmul float %2025, %2026
  %2028 = fadd float %2024, %2027
  %2029 = load float, float* %1533, align 4
  %2030 = load float, float* %2, align 4
  %2031 = fmul float %2029, %2030
  %2032 = fadd float %2031, 0.000000e+00
  %2033 = load float, float* %1535, align 4
  %2034 = load float, float* %33, align 4
  %2035 = fmul float %2033, %2034
  %2036 = fadd float %2032, %2035
  %2037 = load float, float* %1772, align 4
  %2038 = load float, float* %42, align 4
  %2039 = fmul float %2037, %2038
  %2040 = fadd float %2036, %2039
  %2041 = load float, float* %1777, align 4
  %2042 = load float, float* %51, align 4
  %2043 = fmul float %2041, %2042
  %2044 = fadd float %2040, %2043
  %2045 = load float, float* %1533, align 4
  %2046 = load float, float* %353, align 4
  %2047 = fmul float %2045, %2046
  %2048 = fadd float 0.000000e+00, %2047
  %2049 = load float, float* %1535, align 4
  %2050 = load float, float* %436, align 4
  %2051 = fmul float %2049, %2050
  %2052 = fadd float %2048, %2051
  %2053 = load float, float* %1772, align 4
  %2054 = load float, float* %507, align 4
  %2055 = fmul float %2053, %2054
  %2056 = fadd float %2052, %2055
  %2057 = load float, float* %1777, align 4
  %2058 = load float, float* %578, align 4
  %2059 = fmul float %2057, %2058
  %2060 = fadd float %2056, %2059
  %2061 = load float, float* %1533, align 4
  %2062 = load float, float* %374, align 4
  %2063 = fmul float %2061, %2062
  %2064 = fadd float 0.000000e+00, %2063
  %2065 = load float, float* %1535, align 4
  %2066 = load float, float* %453, align 4
  %2067 = fmul float %2065, %2066
  %2068 = fadd float %2064, %2067
  %2069 = load float, float* %1772, align 4
  %2070 = load float, float* %524, align 4
  %2071 = fmul float %2069, %2070
  %2072 = fadd float %2068, %2071
  %2073 = load float, float* %1777, align 4
  %2074 = load float, float* %595, align 4
  %2075 = fmul float %2073, %2074
  %2076 = fadd float %2072, %2075
  %2077 = load float, float* %1533, align 4
  %2078 = load float, float* %395, align 4
  %2079 = fmul float %2077, %2078
  %2080 = fadd float 0.000000e+00, %2079
  %2081 = load float, float* %1535, align 4
  %2082 = load float, float* %470, align 4
  %2083 = fmul float %2081, %2082
  %2084 = fadd float %2080, %2083
  %2085 = load float, float* %1772, align 4
  %2086 = load float, float* %541, align 4
  %2087 = fmul float %2085, %2086
  %2088 = fadd float %2084, %2087
  %2089 = load float, float* %1777, align 4
  %2090 = load float, float* %612, align 4
  %2091 = fmul float %2089, %2090
  %2092 = fadd float %2088, %2091
  %2093 = call i8* @__memcpy_chk(i8* nonnull %3, i8* %1544, i64 64, i64 %5) #8
  call void @free(i8* %1409)
  call void @free(i8* %1411)
  call void @free(i8* %1448)
  call void @free(i8* %1450)
  call void @free(i8* %1478)
  call void @free(i8* %1504)
  %2094 = bitcast float* %863 to i32*
  %2095 = load i32, i32* %2094, align 4
  %2096 = bitcast float* %846 to i32*
  %2097 = load i32, i32* %2096, align 4
  %2098 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2099 = bitcast i8* %2098 to float*
  store float 1.000000e+00, float* %2099, align 4
  %2100 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2101 = getelementptr inbounds i8, i8* %2100, i64 20
  %2102 = bitcast i8* %2101 to float*
  store float 1.000000e+00, float* %2102, align 4
  %2103 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2104 = getelementptr inbounds i8, i8* %2103, i64 40
  %2105 = bitcast i8* %2104 to float*
  store float 1.000000e+00, float* %2105, align 4
  %2106 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2107 = getelementptr inbounds i8, i8* %2106, i64 60
  %2108 = bitcast i8* %2107 to float*
  store float 1.000000e+00, float* %2108, align 4
  %2109 = bitcast float* %2 to i32*
  %2110 = load i32, i32* %2109, align 4
  %2111 = sitofp i32 %2110 to float
  %2112 = insertelement <4 x float> zeroinitializer, float %2111, i32 0
  %2113 = insertelement <4 x float> %2112, float 0.000000e+00, i32 1
  %2114 = insertelement <4 x float> %2113, float 0.000000e+00, i32 2
  %2115 = insertelement <4 x float> %2114, float 0.000000e+00, i32 3
  %2116 = extractelement <4 x float> %2115, i32 0
  %2117 = fptosi float %2116 to i32
  %2118 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2119 = bitcast i8* %2118 to i32*
  store i32 %2117, i32* %2119, align 4
  %2120 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2121 = bitcast i8* %2120 to i32*
  %2122 = load i32, i32* %2121, align 4
  %2123 = sitofp i32 %2122 to float
  %2124 = insertelement <4 x float> zeroinitializer, float %2123, i32 0
  %2125 = insertelement <4 x float> %2124, float 0.000000e+00, i32 1
  %2126 = insertelement <4 x float> %2125, float 0.000000e+00, i32 2
  %2127 = insertelement <4 x float> %2126, float 0.000000e+00, i32 3
  %2128 = extractelement <4 x float> %2127, i32 0
  %2129 = fptosi float %2128 to i32
  %2130 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2131 = bitcast i8* %2130 to i32*
  store i32 %2129, i32* %2131, align 4
  %2132 = getelementptr inbounds float, float* %2, i64 4
  %2133 = bitcast float* %2132 to i32*
  %2134 = load i32, i32* %2133, align 4
  %2135 = sitofp i32 %2134 to float
  %2136 = insertelement <4 x float> zeroinitializer, float %2135, i32 0
  %2137 = insertelement <4 x float> %2136, float 0.000000e+00, i32 1
  %2138 = insertelement <4 x float> %2137, float 0.000000e+00, i32 2
  %2139 = insertelement <4 x float> %2138, float 0.000000e+00, i32 3
  %2140 = extractelement <4 x float> %2139, i32 0
  %2141 = fptosi float %2140 to i32
  %2142 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2143 = getelementptr inbounds i8, i8* %2142, i64 4
  %2144 = bitcast i8* %2143 to i32*
  store i32 %2141, i32* %2144, align 4
  %2145 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2146 = getelementptr inbounds i8, i8* %2145, i64 16
  %2147 = bitcast i8* %2146 to i32*
  %2148 = load i32, i32* %2147, align 4
  %2149 = sitofp i32 %2148 to float
  %2150 = insertelement <4 x float> zeroinitializer, float %2149, i32 0
  %2151 = insertelement <4 x float> %2150, float 0.000000e+00, i32 1
  %2152 = insertelement <4 x float> %2151, float 0.000000e+00, i32 2
  %2153 = insertelement <4 x float> %2152, float 0.000000e+00, i32 3
  %2154 = extractelement <4 x float> %2153, i32 0
  %2155 = fptosi float %2154 to i32
  %2156 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2157 = getelementptr inbounds i8, i8* %2156, i64 4
  %2158 = bitcast i8* %2157 to i32*
  store i32 %2155, i32* %2158, align 4
  %2159 = getelementptr inbounds float, float* %2, i64 8
  %2160 = bitcast float* %2159 to i32*
  %2161 = load i32, i32* %2160, align 4
  %2162 = sitofp i32 %2161 to float
  %2163 = insertelement <4 x float> zeroinitializer, float %2162, i32 0
  %2164 = insertelement <4 x float> %2163, float 0.000000e+00, i32 1
  %2165 = insertelement <4 x float> %2164, float 0.000000e+00, i32 2
  %2166 = insertelement <4 x float> %2165, float 0.000000e+00, i32 3
  %2167 = extractelement <4 x float> %2166, i32 0
  %2168 = fptosi float %2167 to i32
  %2169 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2170 = getelementptr inbounds i8, i8* %2169, i64 8
  %2171 = bitcast i8* %2170 to i32*
  store i32 %2168, i32* %2171, align 4
  %2172 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2173 = getelementptr inbounds i8, i8* %2172, i64 32
  %2174 = bitcast i8* %2173 to i32*
  %2175 = load i32, i32* %2174, align 4
  %2176 = sitofp i32 %2175 to float
  %2177 = insertelement <4 x float> zeroinitializer, float %2176, i32 0
  %2178 = insertelement <4 x float> %2177, float 0.000000e+00, i32 1
  %2179 = insertelement <4 x float> %2178, float 0.000000e+00, i32 2
  %2180 = insertelement <4 x float> %2179, float 0.000000e+00, i32 3
  %2181 = extractelement <4 x float> %2180, i32 0
  %2182 = fptosi float %2181 to i32
  %2183 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2184 = getelementptr inbounds i8, i8* %2183, i64 8
  %2185 = bitcast i8* %2184 to i32*
  store i32 %2182, i32* %2185, align 4
  %2186 = getelementptr inbounds float, float* %2, i64 12
  %2187 = bitcast float* %2186 to i32*
  %2188 = load i32, i32* %2187, align 4
  %2189 = sitofp i32 %2188 to float
  %2190 = insertelement <4 x float> zeroinitializer, float %2189, i32 0
  %2191 = insertelement <4 x float> %2190, float 0.000000e+00, i32 1
  %2192 = insertelement <4 x float> %2191, float 0.000000e+00, i32 2
  %2193 = insertelement <4 x float> %2192, float 0.000000e+00, i32 3
  %2194 = extractelement <4 x float> %2193, i32 0
  %2195 = fptosi float %2194 to i32
  %2196 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2197 = getelementptr inbounds i8, i8* %2196, i64 12
  %2198 = bitcast i8* %2197 to i32*
  store i32 %2195, i32* %2198, align 4
  %2199 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2200 = getelementptr inbounds i8, i8* %2199, i64 48
  %2201 = bitcast i8* %2200 to i32*
  %2202 = load i32, i32* %2201, align 4
  %2203 = sitofp i32 %2202 to float
  %2204 = insertelement <4 x float> zeroinitializer, float %2203, i32 0
  %2205 = insertelement <4 x float> %2204, float 0.000000e+00, i32 1
  %2206 = insertelement <4 x float> %2205, float 0.000000e+00, i32 2
  %2207 = insertelement <4 x float> %2206, float 0.000000e+00, i32 3
  %2208 = extractelement <4 x float> %2207, i32 0
  %2209 = fptosi float %2208 to i32
  %2210 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2211 = getelementptr inbounds i8, i8* %2210, i64 12
  %2212 = bitcast i8* %2211 to i32*
  store i32 %2209, i32* %2212, align 4
  %2213 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2214 = bitcast i8* %2213 to float*
  %2215 = load float, float* %2214, align 4
  %2216 = insertelement <4 x float> zeroinitializer, float %2215, i32 0
  %2217 = insertelement <4 x float> %2216, float 0.000000e+00, i32 1
  %2218 = insertelement <4 x float> %2217, float 0.000000e+00, i32 2
  %2219 = insertelement <4 x float> %2218, float 0.000000e+00, i32 3
  %2220 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2221 = getelementptr inbounds i8, i8* %2220, i64 12
  %2222 = bitcast i8* %2221 to float*
  %2223 = load float, float* %2222, align 4
  %2224 = insertelement <4 x float> zeroinitializer, float %2223, i32 0
  %2225 = insertelement <4 x float> %2224, float 1.000000e+00, i32 1
  %2226 = insertelement <4 x float> %2225, float 1.000000e+00, i32 2
  %2227 = insertelement <4 x float> %2226, float 1.000000e+00, i32 3
  %2228 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2229 = getelementptr inbounds i8, i8* %2228, i64 12
  %2230 = bitcast i8* %2229 to float*
  %2231 = load float, float* %2230, align 4
  %2232 = insertelement <4 x float> zeroinitializer, float %2231, i32 0
  %2233 = insertelement <4 x float> %2232, float 0.000000e+00, i32 1
  %2234 = insertelement <4 x float> %2233, float 0.000000e+00, i32 2
  %2235 = insertelement <4 x float> %2234, float 0.000000e+00, i32 3
  %2236 = fmul <4 x float> %2227, %2235
  %2237 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2238 = getelementptr inbounds i8, i8* %2237, i64 8
  %2239 = bitcast i8* %2238 to float*
  %2240 = load float, float* %2239, align 4
  %2241 = insertelement <4 x float> zeroinitializer, float %2240, i32 0
  %2242 = insertelement <4 x float> %2241, float 1.000000e+00, i32 1
  %2243 = insertelement <4 x float> %2242, float 1.000000e+00, i32 2
  %2244 = insertelement <4 x float> %2243, float 1.000000e+00, i32 3
  %2245 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2246 = getelementptr inbounds i8, i8* %2245, i64 8
  %2247 = bitcast i8* %2246 to float*
  %2248 = load float, float* %2247, align 4
  %2249 = insertelement <4 x float> zeroinitializer, float %2248, i32 0
  %2250 = insertelement <4 x float> %2249, float 0.000000e+00, i32 1
  %2251 = insertelement <4 x float> %2250, float 0.000000e+00, i32 2
  %2252 = insertelement <4 x float> %2251, float 0.000000e+00, i32 3
  %2253 = fmul <4 x float> %2244, %2252
  %2254 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2255 = getelementptr inbounds i8, i8* %2254, i64 4
  %2256 = bitcast i8* %2255 to float*
  %2257 = load float, float* %2256, align 4
  %2258 = insertelement <4 x float> zeroinitializer, float %2257, i32 0
  %2259 = insertelement <4 x float> %2258, float 1.000000e+00, i32 1
  %2260 = insertelement <4 x float> %2259, float 1.000000e+00, i32 2
  %2261 = insertelement <4 x float> %2260, float 1.000000e+00, i32 3
  %2262 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2263 = getelementptr inbounds i8, i8* %2262, i64 4
  %2264 = bitcast i8* %2263 to float*
  %2265 = load float, float* %2264, align 4
  %2266 = insertelement <4 x float> zeroinitializer, float %2265, i32 0
  %2267 = insertelement <4 x float> %2266, float 0.000000e+00, i32 1
  %2268 = insertelement <4 x float> %2267, float 0.000000e+00, i32 2
  %2269 = insertelement <4 x float> %2268, float 0.000000e+00, i32 3
  %2270 = fmul <4 x float> %2261, %2269
  %2271 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2272 = bitcast i8* %2271 to float*
  %2273 = load float, float* %2272, align 4
  %2274 = insertelement <4 x float> zeroinitializer, float %2273, i32 0
  %2275 = insertelement <4 x float> %2274, float 1.000000e+00, i32 1
  %2276 = insertelement <4 x float> %2275, float 1.000000e+00, i32 2
  %2277 = insertelement <4 x float> %2276, float 1.000000e+00, i32 3
  %2278 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2279 = bitcast i8* %2278 to float*
  %2280 = load float, float* %2279, align 4
  %2281 = insertelement <4 x float> zeroinitializer, float %2280, i32 0
  %2282 = insertelement <4 x float> %2281, float 0.000000e+00, i32 1
  %2283 = insertelement <4 x float> %2282, float 0.000000e+00, i32 2
  %2284 = insertelement <4 x float> %2283, float 0.000000e+00, i32 3
  %2285 = fmul <4 x float> %2277, %2284
  %2286 = fadd <4 x float> %2285, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2287 = fadd <4 x float> %2270, %2286
  %2288 = fadd <4 x float> %2253, %2287
  %2289 = fadd <4 x float> %2236, %2288
  %2290 = call <4 x float> @llvm.sqrt.f32.112(<4 x float> %2289)
  %2291 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2292 = bitcast i8* %2291 to float*
  %2293 = load float, float* %2292, align 4
  %2294 = fcmp olt float %2293, 0.000000e+00
  %2295 = sext i1 %2294 to i32
  %2296 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2297 = bitcast i8* %2296 to float*
  %2298 = load float, float* %2297, align 4
  %2299 = fcmp ogt float %2298, 0.000000e+00
  %2300 = zext i1 %2299 to i32
  %2301 = add nsw i32 %2295, %2300
  %2302 = sitofp i32 %2301 to float
  %2303 = insertelement <4 x float> zeroinitializer, float %2302, i32 0
  %2304 = insertelement <4 x float> %2303, float 0.000000e+00, i32 1
  %2305 = insertelement <4 x float> %2304, float 0.000000e+00, i32 2
  %2306 = insertelement <4 x float> %2305, float 0.000000e+00, i32 3
  %2307 = fneg <4 x float> %2306
  %2308 = fmul <4 x float> %2290, %2307
  %2309 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2310 = bitcast i8* %2309 to float*
  %2311 = load float, float* %2310, align 4
  %2312 = insertelement <4 x float> zeroinitializer, float %2311, i32 0
  %2313 = insertelement <4 x float> %2312, float 0.000000e+00, i32 1
  %2314 = insertelement <4 x float> %2313, float 0.000000e+00, i32 2
  %2315 = insertelement <4 x float> %2314, float 0.000000e+00, i32 3
  %2316 = call <4 x float> @llvm.fma.f32.113(<4 x float> %2308, <4 x float> %2315, <4 x float> %2219)
  %2317 = extractelement <4 x float> %2316, i32 0
  %2318 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2319 = bitcast i8* %2318 to float*
  store float %2317, float* %2319, align 4
  %2320 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2321 = getelementptr inbounds i8, i8* %2320, i64 4
  %2322 = bitcast i8* %2321 to float*
  %2323 = load float, float* %2322, align 4
  %2324 = insertelement <4 x float> zeroinitializer, float %2323, i32 0
  %2325 = insertelement <4 x float> %2324, float 0.000000e+00, i32 1
  %2326 = insertelement <4 x float> %2325, float 0.000000e+00, i32 2
  %2327 = insertelement <4 x float> %2326, float 0.000000e+00, i32 3
  %2328 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2329 = getelementptr inbounds i8, i8* %2328, i64 12
  %2330 = bitcast i8* %2329 to float*
  %2331 = load float, float* %2330, align 4
  %2332 = insertelement <4 x float> zeroinitializer, float %2331, i32 0
  %2333 = insertelement <4 x float> %2332, float 1.000000e+00, i32 1
  %2334 = insertelement <4 x float> %2333, float 1.000000e+00, i32 2
  %2335 = insertelement <4 x float> %2334, float 1.000000e+00, i32 3
  %2336 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2337 = getelementptr inbounds i8, i8* %2336, i64 12
  %2338 = bitcast i8* %2337 to float*
  %2339 = load float, float* %2338, align 4
  %2340 = insertelement <4 x float> zeroinitializer, float %2339, i32 0
  %2341 = insertelement <4 x float> %2340, float 0.000000e+00, i32 1
  %2342 = insertelement <4 x float> %2341, float 0.000000e+00, i32 2
  %2343 = insertelement <4 x float> %2342, float 0.000000e+00, i32 3
  %2344 = fmul <4 x float> %2335, %2343
  %2345 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2346 = getelementptr inbounds i8, i8* %2345, i64 8
  %2347 = bitcast i8* %2346 to float*
  %2348 = load float, float* %2347, align 4
  %2349 = insertelement <4 x float> zeroinitializer, float %2348, i32 0
  %2350 = insertelement <4 x float> %2349, float 1.000000e+00, i32 1
  %2351 = insertelement <4 x float> %2350, float 1.000000e+00, i32 2
  %2352 = insertelement <4 x float> %2351, float 1.000000e+00, i32 3
  %2353 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2354 = getelementptr inbounds i8, i8* %2353, i64 8
  %2355 = bitcast i8* %2354 to float*
  %2356 = load float, float* %2355, align 4
  %2357 = insertelement <4 x float> zeroinitializer, float %2356, i32 0
  %2358 = insertelement <4 x float> %2357, float 0.000000e+00, i32 1
  %2359 = insertelement <4 x float> %2358, float 0.000000e+00, i32 2
  %2360 = insertelement <4 x float> %2359, float 0.000000e+00, i32 3
  %2361 = fmul <4 x float> %2352, %2360
  %2362 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2363 = getelementptr inbounds i8, i8* %2362, i64 4
  %2364 = bitcast i8* %2363 to float*
  %2365 = load float, float* %2364, align 4
  %2366 = insertelement <4 x float> zeroinitializer, float %2365, i32 0
  %2367 = insertelement <4 x float> %2366, float 1.000000e+00, i32 1
  %2368 = insertelement <4 x float> %2367, float 1.000000e+00, i32 2
  %2369 = insertelement <4 x float> %2368, float 1.000000e+00, i32 3
  %2370 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2371 = getelementptr inbounds i8, i8* %2370, i64 4
  %2372 = bitcast i8* %2371 to float*
  %2373 = load float, float* %2372, align 4
  %2374 = insertelement <4 x float> zeroinitializer, float %2373, i32 0
  %2375 = insertelement <4 x float> %2374, float 0.000000e+00, i32 1
  %2376 = insertelement <4 x float> %2375, float 0.000000e+00, i32 2
  %2377 = insertelement <4 x float> %2376, float 0.000000e+00, i32 3
  %2378 = fmul <4 x float> %2369, %2377
  %2379 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2380 = bitcast i8* %2379 to float*
  %2381 = load float, float* %2380, align 4
  %2382 = insertelement <4 x float> zeroinitializer, float %2381, i32 0
  %2383 = insertelement <4 x float> %2382, float 1.000000e+00, i32 1
  %2384 = insertelement <4 x float> %2383, float 1.000000e+00, i32 2
  %2385 = insertelement <4 x float> %2384, float 1.000000e+00, i32 3
  %2386 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2387 = bitcast i8* %2386 to float*
  %2388 = load float, float* %2387, align 4
  %2389 = insertelement <4 x float> zeroinitializer, float %2388, i32 0
  %2390 = insertelement <4 x float> %2389, float 0.000000e+00, i32 1
  %2391 = insertelement <4 x float> %2390, float 0.000000e+00, i32 2
  %2392 = insertelement <4 x float> %2391, float 0.000000e+00, i32 3
  %2393 = fmul <4 x float> %2385, %2392
  %2394 = fadd <4 x float> %2393, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2395 = fadd <4 x float> %2378, %2394
  %2396 = fadd <4 x float> %2361, %2395
  %2397 = fadd <4 x float> %2344, %2396
  %2398 = call <4 x float> @llvm.sqrt.f32.114(<4 x float> %2397)
  %2399 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2400 = bitcast i8* %2399 to float*
  %2401 = load float, float* %2400, align 4
  %2402 = fcmp olt float %2401, 0.000000e+00
  %2403 = sext i1 %2402 to i32
  %2404 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2405 = bitcast i8* %2404 to float*
  %2406 = load float, float* %2405, align 4
  %2407 = fcmp ogt float %2406, 0.000000e+00
  %2408 = zext i1 %2407 to i32
  %2409 = add nsw i32 %2403, %2408
  %2410 = sitofp i32 %2409 to float
  %2411 = insertelement <4 x float> zeroinitializer, float %2410, i32 0
  %2412 = insertelement <4 x float> %2411, float 0.000000e+00, i32 1
  %2413 = insertelement <4 x float> %2412, float 0.000000e+00, i32 2
  %2414 = insertelement <4 x float> %2413, float 0.000000e+00, i32 3
  %2415 = fneg <4 x float> %2414
  %2416 = fmul <4 x float> %2398, %2415
  %2417 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2418 = getelementptr inbounds i8, i8* %2417, i64 4
  %2419 = bitcast i8* %2418 to float*
  %2420 = load float, float* %2419, align 4
  %2421 = insertelement <4 x float> zeroinitializer, float %2420, i32 0
  %2422 = insertelement <4 x float> %2421, float 0.000000e+00, i32 1
  %2423 = insertelement <4 x float> %2422, float 0.000000e+00, i32 2
  %2424 = insertelement <4 x float> %2423, float 0.000000e+00, i32 3
  %2425 = call <4 x float> @llvm.fma.f32.115(<4 x float> %2416, <4 x float> %2424, <4 x float> %2327)
  %2426 = extractelement <4 x float> %2425, i32 0
  %2427 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2428 = getelementptr inbounds i8, i8* %2427, i64 4
  %2429 = bitcast i8* %2428 to float*
  store float %2426, float* %2429, align 4
  %2430 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2431 = getelementptr inbounds i8, i8* %2430, i64 8
  %2432 = bitcast i8* %2431 to float*
  %2433 = load float, float* %2432, align 4
  %2434 = insertelement <4 x float> zeroinitializer, float %2433, i32 0
  %2435 = insertelement <4 x float> %2434, float 0.000000e+00, i32 1
  %2436 = insertelement <4 x float> %2435, float 0.000000e+00, i32 2
  %2437 = insertelement <4 x float> %2436, float 0.000000e+00, i32 3
  %2438 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2439 = getelementptr inbounds i8, i8* %2438, i64 12
  %2440 = bitcast i8* %2439 to float*
  %2441 = load float, float* %2440, align 4
  %2442 = insertelement <4 x float> zeroinitializer, float %2441, i32 0
  %2443 = insertelement <4 x float> %2442, float 1.000000e+00, i32 1
  %2444 = insertelement <4 x float> %2443, float 1.000000e+00, i32 2
  %2445 = insertelement <4 x float> %2444, float 1.000000e+00, i32 3
  %2446 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2447 = getelementptr inbounds i8, i8* %2446, i64 12
  %2448 = bitcast i8* %2447 to float*
  %2449 = load float, float* %2448, align 4
  %2450 = insertelement <4 x float> zeroinitializer, float %2449, i32 0
  %2451 = insertelement <4 x float> %2450, float 0.000000e+00, i32 1
  %2452 = insertelement <4 x float> %2451, float 0.000000e+00, i32 2
  %2453 = insertelement <4 x float> %2452, float 0.000000e+00, i32 3
  %2454 = fmul <4 x float> %2445, %2453
  %2455 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2456 = getelementptr inbounds i8, i8* %2455, i64 8
  %2457 = bitcast i8* %2456 to float*
  %2458 = load float, float* %2457, align 4
  %2459 = insertelement <4 x float> zeroinitializer, float %2458, i32 0
  %2460 = insertelement <4 x float> %2459, float 1.000000e+00, i32 1
  %2461 = insertelement <4 x float> %2460, float 1.000000e+00, i32 2
  %2462 = insertelement <4 x float> %2461, float 1.000000e+00, i32 3
  %2463 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2464 = getelementptr inbounds i8, i8* %2463, i64 8
  %2465 = bitcast i8* %2464 to float*
  %2466 = load float, float* %2465, align 4
  %2467 = insertelement <4 x float> zeroinitializer, float %2466, i32 0
  %2468 = insertelement <4 x float> %2467, float 0.000000e+00, i32 1
  %2469 = insertelement <4 x float> %2468, float 0.000000e+00, i32 2
  %2470 = insertelement <4 x float> %2469, float 0.000000e+00, i32 3
  %2471 = fmul <4 x float> %2462, %2470
  %2472 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2473 = getelementptr inbounds i8, i8* %2472, i64 4
  %2474 = bitcast i8* %2473 to float*
  %2475 = load float, float* %2474, align 4
  %2476 = insertelement <4 x float> zeroinitializer, float %2475, i32 0
  %2477 = insertelement <4 x float> %2476, float 1.000000e+00, i32 1
  %2478 = insertelement <4 x float> %2477, float 1.000000e+00, i32 2
  %2479 = insertelement <4 x float> %2478, float 1.000000e+00, i32 3
  %2480 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2481 = getelementptr inbounds i8, i8* %2480, i64 4
  %2482 = bitcast i8* %2481 to float*
  %2483 = load float, float* %2482, align 4
  %2484 = insertelement <4 x float> zeroinitializer, float %2483, i32 0
  %2485 = insertelement <4 x float> %2484, float 0.000000e+00, i32 1
  %2486 = insertelement <4 x float> %2485, float 0.000000e+00, i32 2
  %2487 = insertelement <4 x float> %2486, float 0.000000e+00, i32 3
  %2488 = fmul <4 x float> %2479, %2487
  %2489 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2490 = bitcast i8* %2489 to float*
  %2491 = load float, float* %2490, align 4
  %2492 = insertelement <4 x float> zeroinitializer, float %2491, i32 0
  %2493 = insertelement <4 x float> %2492, float 1.000000e+00, i32 1
  %2494 = insertelement <4 x float> %2493, float 1.000000e+00, i32 2
  %2495 = insertelement <4 x float> %2494, float 1.000000e+00, i32 3
  %2496 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2497 = bitcast i8* %2496 to float*
  %2498 = load float, float* %2497, align 4
  %2499 = insertelement <4 x float> zeroinitializer, float %2498, i32 0
  %2500 = insertelement <4 x float> %2499, float 0.000000e+00, i32 1
  %2501 = insertelement <4 x float> %2500, float 0.000000e+00, i32 2
  %2502 = insertelement <4 x float> %2501, float 0.000000e+00, i32 3
  %2503 = fmul <4 x float> %2495, %2502
  %2504 = fadd <4 x float> %2503, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2505 = fadd <4 x float> %2488, %2504
  %2506 = fadd <4 x float> %2471, %2505
  %2507 = fadd <4 x float> %2454, %2506
  %2508 = call <4 x float> @llvm.sqrt.f32.116(<4 x float> %2507)
  %2509 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2510 = bitcast i8* %2509 to float*
  %2511 = load float, float* %2510, align 4
  %2512 = fcmp olt float %2511, 0.000000e+00
  %2513 = sext i1 %2512 to i32
  %2514 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2515 = bitcast i8* %2514 to float*
  %2516 = load float, float* %2515, align 4
  %2517 = fcmp ogt float %2516, 0.000000e+00
  %2518 = zext i1 %2517 to i32
  %2519 = add nsw i32 %2513, %2518
  %2520 = sitofp i32 %2519 to float
  %2521 = insertelement <4 x float> zeroinitializer, float %2520, i32 0
  %2522 = insertelement <4 x float> %2521, float 0.000000e+00, i32 1
  %2523 = insertelement <4 x float> %2522, float 0.000000e+00, i32 2
  %2524 = insertelement <4 x float> %2523, float 0.000000e+00, i32 3
  %2525 = fneg <4 x float> %2524
  %2526 = fmul <4 x float> %2508, %2525
  %2527 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2528 = getelementptr inbounds i8, i8* %2527, i64 8
  %2529 = bitcast i8* %2528 to float*
  %2530 = load float, float* %2529, align 4
  %2531 = insertelement <4 x float> zeroinitializer, float %2530, i32 0
  %2532 = insertelement <4 x float> %2531, float 0.000000e+00, i32 1
  %2533 = insertelement <4 x float> %2532, float 0.000000e+00, i32 2
  %2534 = insertelement <4 x float> %2533, float 0.000000e+00, i32 3
  %2535 = call <4 x float> @llvm.fma.f32.117(<4 x float> %2526, <4 x float> %2534, <4 x float> %2437)
  %2536 = extractelement <4 x float> %2535, i32 0
  %2537 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2538 = getelementptr inbounds i8, i8* %2537, i64 8
  %2539 = bitcast i8* %2538 to float*
  store float %2536, float* %2539, align 4
  %2540 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2541 = getelementptr inbounds i8, i8* %2540, i64 12
  %2542 = bitcast i8* %2541 to float*
  %2543 = load float, float* %2542, align 4
  %2544 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2545 = getelementptr inbounds i8, i8* %2544, i64 12
  %2546 = bitcast i8* %2545 to float*
  %2547 = load float, float* %2546, align 4
  %2548 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2549 = getelementptr inbounds i8, i8* %2548, i64 12
  %2550 = bitcast i8* %2549 to float*
  %2551 = load float, float* %2550, align 4
  %2552 = fmul float %2547, %2551
  %2553 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2554 = getelementptr inbounds i8, i8* %2553, i64 8
  %2555 = bitcast i8* %2554 to float*
  %2556 = load float, float* %2555, align 4
  %2557 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2558 = getelementptr inbounds i8, i8* %2557, i64 8
  %2559 = bitcast i8* %2558 to float*
  %2560 = load float, float* %2559, align 4
  %2561 = fmul float %2556, %2560
  %2562 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2563 = getelementptr inbounds i8, i8* %2562, i64 4
  %2564 = bitcast i8* %2563 to float*
  %2565 = load float, float* %2564, align 4
  %2566 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2567 = getelementptr inbounds i8, i8* %2566, i64 4
  %2568 = bitcast i8* %2567 to float*
  %2569 = load float, float* %2568, align 4
  %2570 = fmul float %2565, %2569
  %2571 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2572 = bitcast i8* %2571 to float*
  %2573 = load float, float* %2572, align 4
  %2574 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2575 = bitcast i8* %2574 to float*
  %2576 = load float, float* %2575, align 4
  %2577 = fmul float %2573, %2576
  %2578 = fadd float %2577, 0.000000e+00
  %2579 = fadd float %2570, %2578
  %2580 = fadd float %2561, %2579
  %2581 = fadd float %2552, %2580
  %2582 = call float @llvm.sqrt.f32.118(float %2581)
  %2583 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2584 = bitcast i8* %2583 to float*
  %2585 = load float, float* %2584, align 4
  %2586 = fcmp olt float %2585, 0.000000e+00
  %2587 = sext i1 %2586 to i32
  %2588 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2589 = bitcast i8* %2588 to float*
  %2590 = load float, float* %2589, align 4
  %2591 = fcmp ogt float %2590, 0.000000e+00
  %2592 = zext i1 %2591 to i32
  %2593 = add nsw i32 %2587, %2592
  %2594 = sitofp i32 %2593 to float
  %2595 = fneg float %2594
  %2596 = fmul float %2582, %2595
  %2597 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2598 = getelementptr inbounds i8, i8* %2597, i64 12
  %2599 = bitcast i8* %2598 to float*
  %2600 = load float, float* %2599, align 4
  %2601 = fmul float %2596, %2600
  %2602 = fadd float %2543, %2601
  %2603 = insertelement <4 x float> zeroinitializer, float %2602, i32 0
  %2604 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2605 = bitcast i8* %2604 to float*
  %2606 = load float, float* %2605, align 4
  %2607 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2608 = getelementptr inbounds i8, i8* %2607, i64 12
  %2609 = bitcast i8* %2608 to float*
  %2610 = load float, float* %2609, align 4
  %2611 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2612 = getelementptr inbounds i8, i8* %2611, i64 12
  %2613 = bitcast i8* %2612 to float*
  %2614 = load float, float* %2613, align 4
  %2615 = fmul float %2610, %2614
  %2616 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2617 = getelementptr inbounds i8, i8* %2616, i64 8
  %2618 = bitcast i8* %2617 to float*
  %2619 = load float, float* %2618, align 4
  %2620 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2621 = getelementptr inbounds i8, i8* %2620, i64 8
  %2622 = bitcast i8* %2621 to float*
  %2623 = load float, float* %2622, align 4
  %2624 = fmul float %2619, %2623
  %2625 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2626 = getelementptr inbounds i8, i8* %2625, i64 4
  %2627 = bitcast i8* %2626 to float*
  %2628 = load float, float* %2627, align 4
  %2629 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2630 = getelementptr inbounds i8, i8* %2629, i64 4
  %2631 = bitcast i8* %2630 to float*
  %2632 = load float, float* %2631, align 4
  %2633 = fmul float %2628, %2632
  %2634 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2635 = bitcast i8* %2634 to float*
  %2636 = load float, float* %2635, align 4
  %2637 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2638 = bitcast i8* %2637 to float*
  %2639 = load float, float* %2638, align 4
  %2640 = fmul float %2636, %2639
  %2641 = fadd float %2640, 0.000000e+00
  %2642 = fadd float %2633, %2641
  %2643 = fadd float %2624, %2642
  %2644 = fadd float %2615, %2643
  %2645 = call float @llvm.sqrt.f32.119(float %2644)
  %2646 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2647 = bitcast i8* %2646 to float*
  %2648 = load float, float* %2647, align 4
  %2649 = fcmp olt float %2648, 0.000000e+00
  %2650 = sext i1 %2649 to i32
  %2651 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2652 = bitcast i8* %2651 to float*
  %2653 = load float, float* %2652, align 4
  %2654 = fcmp ogt float %2653, 0.000000e+00
  %2655 = zext i1 %2654 to i32
  %2656 = add nsw i32 %2650, %2655
  %2657 = sitofp i32 %2656 to float
  %2658 = fneg float %2657
  %2659 = fmul float %2645, %2658
  %2660 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2661 = bitcast i8* %2660 to float*
  %2662 = load float, float* %2661, align 4
  %2663 = fmul float %2659, %2662
  %2664 = fadd float %2606, %2663
  %2665 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2666 = getelementptr inbounds i8, i8* %2665, i64 12
  %2667 = bitcast i8* %2666 to float*
  %2668 = load float, float* %2667, align 4
  %2669 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2670 = getelementptr inbounds i8, i8* %2669, i64 12
  %2671 = bitcast i8* %2670 to float*
  %2672 = load float, float* %2671, align 4
  %2673 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2674 = getelementptr inbounds i8, i8* %2673, i64 12
  %2675 = bitcast i8* %2674 to float*
  %2676 = load float, float* %2675, align 4
  %2677 = fmul float %2672, %2676
  %2678 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2679 = getelementptr inbounds i8, i8* %2678, i64 8
  %2680 = bitcast i8* %2679 to float*
  %2681 = load float, float* %2680, align 4
  %2682 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2683 = getelementptr inbounds i8, i8* %2682, i64 8
  %2684 = bitcast i8* %2683 to float*
  %2685 = load float, float* %2684, align 4
  %2686 = fmul float %2681, %2685
  %2687 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2688 = getelementptr inbounds i8, i8* %2687, i64 4
  %2689 = bitcast i8* %2688 to float*
  %2690 = load float, float* %2689, align 4
  %2691 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2692 = getelementptr inbounds i8, i8* %2691, i64 4
  %2693 = bitcast i8* %2692 to float*
  %2694 = load float, float* %2693, align 4
  %2695 = fmul float %2690, %2694
  %2696 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2697 = bitcast i8* %2696 to float*
  %2698 = load float, float* %2697, align 4
  %2699 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2700 = bitcast i8* %2699 to float*
  %2701 = load float, float* %2700, align 4
  %2702 = fmul float %2698, %2701
  %2703 = fadd float %2702, 0.000000e+00
  %2704 = fadd float %2695, %2703
  %2705 = fadd float %2686, %2704
  %2706 = fadd float %2677, %2705
  %2707 = call float @llvm.sqrt.f32.120(float %2706)
  %2708 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2709 = bitcast i8* %2708 to float*
  %2710 = load float, float* %2709, align 4
  %2711 = fcmp olt float %2710, 0.000000e+00
  %2712 = sext i1 %2711 to i32
  %2713 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2714 = bitcast i8* %2713 to float*
  %2715 = load float, float* %2714, align 4
  %2716 = fcmp ogt float %2715, 0.000000e+00
  %2717 = zext i1 %2716 to i32
  %2718 = add nsw i32 %2712, %2717
  %2719 = sitofp i32 %2718 to float
  %2720 = fneg float %2719
  %2721 = fmul float %2707, %2720
  %2722 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2723 = getelementptr inbounds i8, i8* %2722, i64 12
  %2724 = bitcast i8* %2723 to float*
  %2725 = load float, float* %2724, align 4
  %2726 = fmul float %2721, %2725
  %2727 = fadd float %2668, %2726
  %2728 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2729 = getelementptr inbounds i8, i8* %2728, i64 12
  %2730 = bitcast i8* %2729 to float*
  %2731 = load float, float* %2730, align 4
  %2732 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2733 = getelementptr inbounds i8, i8* %2732, i64 12
  %2734 = bitcast i8* %2733 to float*
  %2735 = load float, float* %2734, align 4
  %2736 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2737 = getelementptr inbounds i8, i8* %2736, i64 12
  %2738 = bitcast i8* %2737 to float*
  %2739 = load float, float* %2738, align 4
  %2740 = fmul float %2735, %2739
  %2741 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2742 = getelementptr inbounds i8, i8* %2741, i64 8
  %2743 = bitcast i8* %2742 to float*
  %2744 = load float, float* %2743, align 4
  %2745 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2746 = getelementptr inbounds i8, i8* %2745, i64 8
  %2747 = bitcast i8* %2746 to float*
  %2748 = load float, float* %2747, align 4
  %2749 = fmul float %2744, %2748
  %2750 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2751 = getelementptr inbounds i8, i8* %2750, i64 4
  %2752 = bitcast i8* %2751 to float*
  %2753 = load float, float* %2752, align 4
  %2754 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2755 = getelementptr inbounds i8, i8* %2754, i64 4
  %2756 = bitcast i8* %2755 to float*
  %2757 = load float, float* %2756, align 4
  %2758 = fmul float %2753, %2757
  %2759 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2760 = bitcast i8* %2759 to float*
  %2761 = load float, float* %2760, align 4
  %2762 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2763 = bitcast i8* %2762 to float*
  %2764 = load float, float* %2763, align 4
  %2765 = fmul float %2761, %2764
  %2766 = fadd float %2765, 0.000000e+00
  %2767 = fadd float %2758, %2766
  %2768 = fadd float %2749, %2767
  %2769 = fadd float %2740, %2768
  %2770 = call float @llvm.sqrt.f32.121(float %2769)
  %2771 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2772 = bitcast i8* %2771 to float*
  %2773 = load float, float* %2772, align 4
  %2774 = fcmp olt float %2773, 0.000000e+00
  %2775 = sext i1 %2774 to i32
  %2776 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2777 = bitcast i8* %2776 to float*
  %2778 = load float, float* %2777, align 4
  %2779 = fcmp ogt float %2778, 0.000000e+00
  %2780 = zext i1 %2779 to i32
  %2781 = add nsw i32 %2775, %2780
  %2782 = sitofp i32 %2781 to float
  %2783 = fneg float %2782
  %2784 = fmul float %2770, %2783
  %2785 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2786 = getelementptr inbounds i8, i8* %2785, i64 12
  %2787 = bitcast i8* %2786 to float*
  %2788 = load float, float* %2787, align 4
  %2789 = fmul float %2784, %2788
  %2790 = fadd float %2731, %2789
  %2791 = fmul float %2727, %2790
  %2792 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2793 = getelementptr inbounds i8, i8* %2792, i64 8
  %2794 = bitcast i8* %2793 to float*
  %2795 = load float, float* %2794, align 4
  %2796 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2797 = getelementptr inbounds i8, i8* %2796, i64 12
  %2798 = bitcast i8* %2797 to float*
  %2799 = load float, float* %2798, align 4
  %2800 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2801 = getelementptr inbounds i8, i8* %2800, i64 12
  %2802 = bitcast i8* %2801 to float*
  %2803 = load float, float* %2802, align 4
  %2804 = fmul float %2799, %2803
  %2805 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2806 = getelementptr inbounds i8, i8* %2805, i64 8
  %2807 = bitcast i8* %2806 to float*
  %2808 = load float, float* %2807, align 4
  %2809 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2810 = getelementptr inbounds i8, i8* %2809, i64 8
  %2811 = bitcast i8* %2810 to float*
  %2812 = load float, float* %2811, align 4
  %2813 = fmul float %2808, %2812
  %2814 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2815 = getelementptr inbounds i8, i8* %2814, i64 4
  %2816 = bitcast i8* %2815 to float*
  %2817 = load float, float* %2816, align 4
  %2818 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2819 = getelementptr inbounds i8, i8* %2818, i64 4
  %2820 = bitcast i8* %2819 to float*
  %2821 = load float, float* %2820, align 4
  %2822 = fmul float %2817, %2821
  %2823 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2824 = bitcast i8* %2823 to float*
  %2825 = load float, float* %2824, align 4
  %2826 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2827 = bitcast i8* %2826 to float*
  %2828 = load float, float* %2827, align 4
  %2829 = fmul float %2825, %2828
  %2830 = fadd float %2829, 0.000000e+00
  %2831 = fadd float %2822, %2830
  %2832 = fadd float %2813, %2831
  %2833 = fadd float %2804, %2832
  %2834 = call float @llvm.sqrt.f32.122(float %2833)
  %2835 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2836 = bitcast i8* %2835 to float*
  %2837 = load float, float* %2836, align 4
  %2838 = fcmp olt float %2837, 0.000000e+00
  %2839 = sext i1 %2838 to i32
  %2840 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2841 = bitcast i8* %2840 to float*
  %2842 = load float, float* %2841, align 4
  %2843 = fcmp ogt float %2842, 0.000000e+00
  %2844 = zext i1 %2843 to i32
  %2845 = add nsw i32 %2839, %2844
  %2846 = sitofp i32 %2845 to float
  %2847 = fneg float %2846
  %2848 = fmul float %2834, %2847
  %2849 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2850 = getelementptr inbounds i8, i8* %2849, i64 8
  %2851 = bitcast i8* %2850 to float*
  %2852 = load float, float* %2851, align 4
  %2853 = fmul float %2848, %2852
  %2854 = fadd float %2795, %2853
  %2855 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2856 = getelementptr inbounds i8, i8* %2855, i64 8
  %2857 = bitcast i8* %2856 to float*
  %2858 = load float, float* %2857, align 4
  %2859 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2860 = getelementptr inbounds i8, i8* %2859, i64 12
  %2861 = bitcast i8* %2860 to float*
  %2862 = load float, float* %2861, align 4
  %2863 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2864 = getelementptr inbounds i8, i8* %2863, i64 12
  %2865 = bitcast i8* %2864 to float*
  %2866 = load float, float* %2865, align 4
  %2867 = fmul float %2862, %2866
  %2868 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2869 = getelementptr inbounds i8, i8* %2868, i64 8
  %2870 = bitcast i8* %2869 to float*
  %2871 = load float, float* %2870, align 4
  %2872 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2873 = getelementptr inbounds i8, i8* %2872, i64 8
  %2874 = bitcast i8* %2873 to float*
  %2875 = load float, float* %2874, align 4
  %2876 = fmul float %2871, %2875
  %2877 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2878 = getelementptr inbounds i8, i8* %2877, i64 4
  %2879 = bitcast i8* %2878 to float*
  %2880 = load float, float* %2879, align 4
  %2881 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2882 = getelementptr inbounds i8, i8* %2881, i64 4
  %2883 = bitcast i8* %2882 to float*
  %2884 = load float, float* %2883, align 4
  %2885 = fmul float %2880, %2884
  %2886 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2887 = bitcast i8* %2886 to float*
  %2888 = load float, float* %2887, align 4
  %2889 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2890 = bitcast i8* %2889 to float*
  %2891 = load float, float* %2890, align 4
  %2892 = fmul float %2888, %2891
  %2893 = fadd float %2892, 0.000000e+00
  %2894 = fadd float %2885, %2893
  %2895 = fadd float %2876, %2894
  %2896 = fadd float %2867, %2895
  %2897 = call float @llvm.sqrt.f32.123(float %2896)
  %2898 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2899 = bitcast i8* %2898 to float*
  %2900 = load float, float* %2899, align 4
  %2901 = fcmp olt float %2900, 0.000000e+00
  %2902 = sext i1 %2901 to i32
  %2903 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2904 = bitcast i8* %2903 to float*
  %2905 = load float, float* %2904, align 4
  %2906 = fcmp ogt float %2905, 0.000000e+00
  %2907 = zext i1 %2906 to i32
  %2908 = add nsw i32 %2902, %2907
  %2909 = sitofp i32 %2908 to float
  %2910 = fneg float %2909
  %2911 = fmul float %2897, %2910
  %2912 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2913 = getelementptr inbounds i8, i8* %2912, i64 8
  %2914 = bitcast i8* %2913 to float*
  %2915 = load float, float* %2914, align 4
  %2916 = fmul float %2911, %2915
  %2917 = fadd float %2858, %2916
  %2918 = fmul float %2854, %2917
  %2919 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2920 = getelementptr inbounds i8, i8* %2919, i64 4
  %2921 = bitcast i8* %2920 to float*
  %2922 = load float, float* %2921, align 4
  %2923 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2924 = getelementptr inbounds i8, i8* %2923, i64 12
  %2925 = bitcast i8* %2924 to float*
  %2926 = load float, float* %2925, align 4
  %2927 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2928 = getelementptr inbounds i8, i8* %2927, i64 12
  %2929 = bitcast i8* %2928 to float*
  %2930 = load float, float* %2929, align 4
  %2931 = fmul float %2926, %2930
  %2932 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2933 = getelementptr inbounds i8, i8* %2932, i64 8
  %2934 = bitcast i8* %2933 to float*
  %2935 = load float, float* %2934, align 4
  %2936 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2937 = getelementptr inbounds i8, i8* %2936, i64 8
  %2938 = bitcast i8* %2937 to float*
  %2939 = load float, float* %2938, align 4
  %2940 = fmul float %2935, %2939
  %2941 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2942 = getelementptr inbounds i8, i8* %2941, i64 4
  %2943 = bitcast i8* %2942 to float*
  %2944 = load float, float* %2943, align 4
  %2945 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2946 = getelementptr inbounds i8, i8* %2945, i64 4
  %2947 = bitcast i8* %2946 to float*
  %2948 = load float, float* %2947, align 4
  %2949 = fmul float %2944, %2948
  %2950 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2951 = bitcast i8* %2950 to float*
  %2952 = load float, float* %2951, align 4
  %2953 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2954 = bitcast i8* %2953 to float*
  %2955 = load float, float* %2954, align 4
  %2956 = fmul float %2952, %2955
  %2957 = fadd float %2956, 0.000000e+00
  %2958 = fadd float %2949, %2957
  %2959 = fadd float %2940, %2958
  %2960 = fadd float %2931, %2959
  %2961 = call float @llvm.sqrt.f32.124(float %2960)
  %2962 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2963 = bitcast i8* %2962 to float*
  %2964 = load float, float* %2963, align 4
  %2965 = fcmp olt float %2964, 0.000000e+00
  %2966 = sext i1 %2965 to i32
  %2967 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2968 = bitcast i8* %2967 to float*
  %2969 = load float, float* %2968, align 4
  %2970 = fcmp ogt float %2969, 0.000000e+00
  %2971 = zext i1 %2970 to i32
  %2972 = add nsw i32 %2966, %2971
  %2973 = sitofp i32 %2972 to float
  %2974 = fneg float %2973
  %2975 = fmul float %2961, %2974
  %2976 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2977 = getelementptr inbounds i8, i8* %2976, i64 4
  %2978 = bitcast i8* %2977 to float*
  %2979 = load float, float* %2978, align 4
  %2980 = fmul float %2975, %2979
  %2981 = fadd float %2922, %2980
  %2982 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2983 = getelementptr inbounds i8, i8* %2982, i64 4
  %2984 = bitcast i8* %2983 to float*
  %2985 = load float, float* %2984, align 4
  %2986 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2987 = getelementptr inbounds i8, i8* %2986, i64 12
  %2988 = bitcast i8* %2987 to float*
  %2989 = load float, float* %2988, align 4
  %2990 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2991 = getelementptr inbounds i8, i8* %2990, i64 12
  %2992 = bitcast i8* %2991 to float*
  %2993 = load float, float* %2992, align 4
  %2994 = fmul float %2989, %2993
  %2995 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %2996 = getelementptr inbounds i8, i8* %2995, i64 8
  %2997 = bitcast i8* %2996 to float*
  %2998 = load float, float* %2997, align 4
  %2999 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3000 = getelementptr inbounds i8, i8* %2999, i64 8
  %3001 = bitcast i8* %3000 to float*
  %3002 = load float, float* %3001, align 4
  %3003 = fmul float %2998, %3002
  %3004 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3005 = getelementptr inbounds i8, i8* %3004, i64 4
  %3006 = bitcast i8* %3005 to float*
  %3007 = load float, float* %3006, align 4
  %3008 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3009 = getelementptr inbounds i8, i8* %3008, i64 4
  %3010 = bitcast i8* %3009 to float*
  %3011 = load float, float* %3010, align 4
  %3012 = fmul float %3007, %3011
  %3013 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3014 = bitcast i8* %3013 to float*
  %3015 = load float, float* %3014, align 4
  %3016 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3017 = bitcast i8* %3016 to float*
  %3018 = load float, float* %3017, align 4
  %3019 = fmul float %3015, %3018
  %3020 = fadd float %3019, 0.000000e+00
  %3021 = fadd float %3012, %3020
  %3022 = fadd float %3003, %3021
  %3023 = fadd float %2994, %3022
  %3024 = call float @llvm.sqrt.f32.125(float %3023)
  %3025 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3026 = bitcast i8* %3025 to float*
  %3027 = load float, float* %3026, align 4
  %3028 = fcmp olt float %3027, 0.000000e+00
  %3029 = sext i1 %3028 to i32
  %3030 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3031 = bitcast i8* %3030 to float*
  %3032 = load float, float* %3031, align 4
  %3033 = fcmp ogt float %3032, 0.000000e+00
  %3034 = zext i1 %3033 to i32
  %3035 = add nsw i32 %3029, %3034
  %3036 = sitofp i32 %3035 to float
  %3037 = fneg float %3036
  %3038 = fmul float %3024, %3037
  %3039 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3040 = getelementptr inbounds i8, i8* %3039, i64 4
  %3041 = bitcast i8* %3040 to float*
  %3042 = load float, float* %3041, align 4
  %3043 = fmul float %3038, %3042
  %3044 = fadd float %2985, %3043
  %3045 = fmul float %2981, %3044
  %3046 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3047 = bitcast i8* %3046 to float*
  %3048 = load float, float* %3047, align 4
  %3049 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3050 = getelementptr inbounds i8, i8* %3049, i64 12
  %3051 = bitcast i8* %3050 to float*
  %3052 = load float, float* %3051, align 4
  %3053 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3054 = getelementptr inbounds i8, i8* %3053, i64 12
  %3055 = bitcast i8* %3054 to float*
  %3056 = load float, float* %3055, align 4
  %3057 = fmul float %3052, %3056
  %3058 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3059 = getelementptr inbounds i8, i8* %3058, i64 8
  %3060 = bitcast i8* %3059 to float*
  %3061 = load float, float* %3060, align 4
  %3062 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3063 = getelementptr inbounds i8, i8* %3062, i64 8
  %3064 = bitcast i8* %3063 to float*
  %3065 = load float, float* %3064, align 4
  %3066 = fmul float %3061, %3065
  %3067 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3068 = getelementptr inbounds i8, i8* %3067, i64 4
  %3069 = bitcast i8* %3068 to float*
  %3070 = load float, float* %3069, align 4
  %3071 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3072 = getelementptr inbounds i8, i8* %3071, i64 4
  %3073 = bitcast i8* %3072 to float*
  %3074 = load float, float* %3073, align 4
  %3075 = fmul float %3070, %3074
  %3076 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3077 = bitcast i8* %3076 to float*
  %3078 = load float, float* %3077, align 4
  %3079 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3080 = bitcast i8* %3079 to float*
  %3081 = load float, float* %3080, align 4
  %3082 = fmul float %3078, %3081
  %3083 = fadd float %3082, 0.000000e+00
  %3084 = fadd float %3075, %3083
  %3085 = fadd float %3066, %3084
  %3086 = fadd float %3057, %3085
  %3087 = call float @llvm.sqrt.f32.126(float %3086)
  %3088 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3089 = bitcast i8* %3088 to float*
  %3090 = load float, float* %3089, align 4
  %3091 = fcmp olt float %3090, 0.000000e+00
  %3092 = sext i1 %3091 to i32
  %3093 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3094 = bitcast i8* %3093 to float*
  %3095 = load float, float* %3094, align 4
  %3096 = fcmp ogt float %3095, 0.000000e+00
  %3097 = zext i1 %3096 to i32
  %3098 = add nsw i32 %3092, %3097
  %3099 = sitofp i32 %3098 to float
  %3100 = fneg float %3099
  %3101 = fmul float %3087, %3100
  %3102 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3103 = bitcast i8* %3102 to float*
  %3104 = load float, float* %3103, align 4
  %3105 = fmul float %3101, %3104
  %3106 = fadd float %3048, %3105
  %3107 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3108 = bitcast i8* %3107 to float*
  %3109 = load float, float* %3108, align 4
  %3110 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3111 = getelementptr inbounds i8, i8* %3110, i64 12
  %3112 = bitcast i8* %3111 to float*
  %3113 = load float, float* %3112, align 4
  %3114 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3115 = getelementptr inbounds i8, i8* %3114, i64 12
  %3116 = bitcast i8* %3115 to float*
  %3117 = load float, float* %3116, align 4
  %3118 = fmul float %3113, %3117
  %3119 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3120 = getelementptr inbounds i8, i8* %3119, i64 8
  %3121 = bitcast i8* %3120 to float*
  %3122 = load float, float* %3121, align 4
  %3123 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3124 = getelementptr inbounds i8, i8* %3123, i64 8
  %3125 = bitcast i8* %3124 to float*
  %3126 = load float, float* %3125, align 4
  %3127 = fmul float %3122, %3126
  %3128 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3129 = getelementptr inbounds i8, i8* %3128, i64 4
  %3130 = bitcast i8* %3129 to float*
  %3131 = load float, float* %3130, align 4
  %3132 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3133 = getelementptr inbounds i8, i8* %3132, i64 4
  %3134 = bitcast i8* %3133 to float*
  %3135 = load float, float* %3134, align 4
  %3136 = fmul float %3131, %3135
  %3137 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3138 = bitcast i8* %3137 to float*
  %3139 = load float, float* %3138, align 4
  %3140 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3141 = bitcast i8* %3140 to float*
  %3142 = load float, float* %3141, align 4
  %3143 = fmul float %3139, %3142
  %3144 = fadd float %3143, 0.000000e+00
  %3145 = fadd float %3136, %3144
  %3146 = fadd float %3127, %3145
  %3147 = fadd float %3118, %3146
  %3148 = call float @llvm.sqrt.f32.127(float %3147)
  %3149 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3150 = bitcast i8* %3149 to float*
  %3151 = load float, float* %3150, align 4
  %3152 = fcmp olt float %3151, 0.000000e+00
  %3153 = sext i1 %3152 to i32
  %3154 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3155 = bitcast i8* %3154 to float*
  %3156 = load float, float* %3155, align 4
  %3157 = fcmp ogt float %3156, 0.000000e+00
  %3158 = zext i1 %3157 to i32
  %3159 = add nsw i32 %3153, %3158
  %3160 = sitofp i32 %3159 to float
  %3161 = fneg float %3160
  %3162 = fmul float %3148, %3161
  %3163 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3164 = bitcast i8* %3163 to float*
  %3165 = load float, float* %3164, align 4
  %3166 = fmul float %3162, %3165
  %3167 = fadd float %3109, %3166
  %3168 = fmul float %3106, %3167
  %3169 = fadd float %3168, 0.000000e+00
  %3170 = fadd float %3045, %3169
  %3171 = fadd float %2918, %3170
  %3172 = fadd float %2791, %3171
  %3173 = call float @llvm.sqrt.f32.128(float %3172)
  %3174 = fdiv float %2664, %3173
  %3175 = insertelement <4 x float> %2603, float %3174, i32 1
  %3176 = insertelement <4 x float> %3175, float 0.000000e+00, i32 2
  %3177 = insertelement <4 x float> %3176, float 0.000000e+00, i32 3
  %3178 = extractelement <4 x float> %3177, i32 0
  %3179 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3180 = getelementptr inbounds i8, i8* %3179, i64 12
  %3181 = bitcast i8* %3180 to float*
  store float %3178, float* %3181, align 4
  %3182 = extractelement <4 x float> %3177, i32 1
  %3183 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3184 = bitcast i8* %3183 to float*
  store float %3182, float* %3184, align 4
  %3185 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3186 = getelementptr inbounds i8, i8* %3185, i64 4
  %3187 = bitcast i8* %3186 to float*
  %3188 = load float, float* %3187, align 4
  %3189 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3190 = getelementptr inbounds i8, i8* %3189, i64 12
  %3191 = bitcast i8* %3190 to float*
  %3192 = load float, float* %3191, align 4
  %3193 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3194 = getelementptr inbounds i8, i8* %3193, i64 12
  %3195 = bitcast i8* %3194 to float*
  %3196 = load float, float* %3195, align 4
  %3197 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3198 = getelementptr inbounds i8, i8* %3197, i64 12
  %3199 = bitcast i8* %3198 to float*
  %3200 = load float, float* %3199, align 4
  %3201 = fmul float %3196, %3200
  %3202 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3203 = getelementptr inbounds i8, i8* %3202, i64 8
  %3204 = bitcast i8* %3203 to float*
  %3205 = load float, float* %3204, align 4
  %3206 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3207 = getelementptr inbounds i8, i8* %3206, i64 8
  %3208 = bitcast i8* %3207 to float*
  %3209 = load float, float* %3208, align 4
  %3210 = fmul float %3205, %3209
  %3211 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3212 = getelementptr inbounds i8, i8* %3211, i64 4
  %3213 = bitcast i8* %3212 to float*
  %3214 = load float, float* %3213, align 4
  %3215 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3216 = getelementptr inbounds i8, i8* %3215, i64 4
  %3217 = bitcast i8* %3216 to float*
  %3218 = load float, float* %3217, align 4
  %3219 = fmul float %3214, %3218
  %3220 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3221 = bitcast i8* %3220 to float*
  %3222 = load float, float* %3221, align 4
  %3223 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3224 = bitcast i8* %3223 to float*
  %3225 = load float, float* %3224, align 4
  %3226 = fmul float %3222, %3225
  %3227 = fadd float %3226, 0.000000e+00
  %3228 = fadd float %3219, %3227
  %3229 = fadd float %3210, %3228
  %3230 = fadd float %3201, %3229
  %3231 = call float @llvm.sqrt.f32.129(float %3230)
  %3232 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3233 = bitcast i8* %3232 to float*
  %3234 = load float, float* %3233, align 4
  %3235 = fcmp olt float %3234, 0.000000e+00
  %3236 = sext i1 %3235 to i32
  %3237 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3238 = bitcast i8* %3237 to float*
  %3239 = load float, float* %3238, align 4
  %3240 = fcmp ogt float %3239, 0.000000e+00
  %3241 = zext i1 %3240 to i32
  %3242 = add nsw i32 %3236, %3241
  %3243 = sitofp i32 %3242 to float
  %3244 = fneg float %3243
  %3245 = fmul float %3231, %3244
  %3246 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3247 = getelementptr inbounds i8, i8* %3246, i64 12
  %3248 = bitcast i8* %3247 to float*
  %3249 = load float, float* %3248, align 4
  %3250 = fmul float %3245, %3249
  %3251 = fadd float %3192, %3250
  %3252 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3253 = getelementptr inbounds i8, i8* %3252, i64 12
  %3254 = bitcast i8* %3253 to float*
  %3255 = load float, float* %3254, align 4
  %3256 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3257 = getelementptr inbounds i8, i8* %3256, i64 12
  %3258 = bitcast i8* %3257 to float*
  %3259 = load float, float* %3258, align 4
  %3260 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3261 = getelementptr inbounds i8, i8* %3260, i64 12
  %3262 = bitcast i8* %3261 to float*
  %3263 = load float, float* %3262, align 4
  %3264 = fmul float %3259, %3263
  %3265 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3266 = getelementptr inbounds i8, i8* %3265, i64 8
  %3267 = bitcast i8* %3266 to float*
  %3268 = load float, float* %3267, align 4
  %3269 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3270 = getelementptr inbounds i8, i8* %3269, i64 8
  %3271 = bitcast i8* %3270 to float*
  %3272 = load float, float* %3271, align 4
  %3273 = fmul float %3268, %3272
  %3274 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3275 = getelementptr inbounds i8, i8* %3274, i64 4
  %3276 = bitcast i8* %3275 to float*
  %3277 = load float, float* %3276, align 4
  %3278 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3279 = getelementptr inbounds i8, i8* %3278, i64 4
  %3280 = bitcast i8* %3279 to float*
  %3281 = load float, float* %3280, align 4
  %3282 = fmul float %3277, %3281
  %3283 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3284 = bitcast i8* %3283 to float*
  %3285 = load float, float* %3284, align 4
  %3286 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3287 = bitcast i8* %3286 to float*
  %3288 = load float, float* %3287, align 4
  %3289 = fmul float %3285, %3288
  %3290 = fadd float %3289, 0.000000e+00
  %3291 = fadd float %3282, %3290
  %3292 = fadd float %3273, %3291
  %3293 = fadd float %3264, %3292
  %3294 = call float @llvm.sqrt.f32.130(float %3293)
  %3295 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3296 = bitcast i8* %3295 to float*
  %3297 = load float, float* %3296, align 4
  %3298 = fcmp olt float %3297, 0.000000e+00
  %3299 = sext i1 %3298 to i32
  %3300 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3301 = bitcast i8* %3300 to float*
  %3302 = load float, float* %3301, align 4
  %3303 = fcmp ogt float %3302, 0.000000e+00
  %3304 = zext i1 %3303 to i32
  %3305 = add nsw i32 %3299, %3304
  %3306 = sitofp i32 %3305 to float
  %3307 = fneg float %3306
  %3308 = fmul float %3294, %3307
  %3309 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3310 = getelementptr inbounds i8, i8* %3309, i64 12
  %3311 = bitcast i8* %3310 to float*
  %3312 = load float, float* %3311, align 4
  %3313 = fmul float %3308, %3312
  %3314 = fadd float %3255, %3313
  %3315 = fmul float %3251, %3314
  %3316 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3317 = getelementptr inbounds i8, i8* %3316, i64 8
  %3318 = bitcast i8* %3317 to float*
  %3319 = load float, float* %3318, align 4
  %3320 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3321 = getelementptr inbounds i8, i8* %3320, i64 12
  %3322 = bitcast i8* %3321 to float*
  %3323 = load float, float* %3322, align 4
  %3324 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3325 = getelementptr inbounds i8, i8* %3324, i64 12
  %3326 = bitcast i8* %3325 to float*
  %3327 = load float, float* %3326, align 4
  %3328 = fmul float %3323, %3327
  %3329 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3330 = getelementptr inbounds i8, i8* %3329, i64 8
  %3331 = bitcast i8* %3330 to float*
  %3332 = load float, float* %3331, align 4
  %3333 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3334 = getelementptr inbounds i8, i8* %3333, i64 8
  %3335 = bitcast i8* %3334 to float*
  %3336 = load float, float* %3335, align 4
  %3337 = fmul float %3332, %3336
  %3338 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3339 = getelementptr inbounds i8, i8* %3338, i64 4
  %3340 = bitcast i8* %3339 to float*
  %3341 = load float, float* %3340, align 4
  %3342 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3343 = getelementptr inbounds i8, i8* %3342, i64 4
  %3344 = bitcast i8* %3343 to float*
  %3345 = load float, float* %3344, align 4
  %3346 = fmul float %3341, %3345
  %3347 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3348 = bitcast i8* %3347 to float*
  %3349 = load float, float* %3348, align 4
  %3350 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3351 = bitcast i8* %3350 to float*
  %3352 = load float, float* %3351, align 4
  %3353 = fmul float %3349, %3352
  %3354 = fadd float %3353, 0.000000e+00
  %3355 = fadd float %3346, %3354
  %3356 = fadd float %3337, %3355
  %3357 = fadd float %3328, %3356
  %3358 = call float @llvm.sqrt.f32.131(float %3357)
  %3359 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3360 = bitcast i8* %3359 to float*
  %3361 = load float, float* %3360, align 4
  %3362 = fcmp olt float %3361, 0.000000e+00
  %3363 = sext i1 %3362 to i32
  %3364 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3365 = bitcast i8* %3364 to float*
  %3366 = load float, float* %3365, align 4
  %3367 = fcmp ogt float %3366, 0.000000e+00
  %3368 = zext i1 %3367 to i32
  %3369 = add nsw i32 %3363, %3368
  %3370 = sitofp i32 %3369 to float
  %3371 = fneg float %3370
  %3372 = fmul float %3358, %3371
  %3373 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3374 = getelementptr inbounds i8, i8* %3373, i64 8
  %3375 = bitcast i8* %3374 to float*
  %3376 = load float, float* %3375, align 4
  %3377 = fmul float %3372, %3376
  %3378 = fadd float %3319, %3377
  %3379 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3380 = getelementptr inbounds i8, i8* %3379, i64 8
  %3381 = bitcast i8* %3380 to float*
  %3382 = load float, float* %3381, align 4
  %3383 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3384 = getelementptr inbounds i8, i8* %3383, i64 12
  %3385 = bitcast i8* %3384 to float*
  %3386 = load float, float* %3385, align 4
  %3387 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3388 = getelementptr inbounds i8, i8* %3387, i64 12
  %3389 = bitcast i8* %3388 to float*
  %3390 = load float, float* %3389, align 4
  %3391 = fmul float %3386, %3390
  %3392 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3393 = getelementptr inbounds i8, i8* %3392, i64 8
  %3394 = bitcast i8* %3393 to float*
  %3395 = load float, float* %3394, align 4
  %3396 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3397 = getelementptr inbounds i8, i8* %3396, i64 8
  %3398 = bitcast i8* %3397 to float*
  %3399 = load float, float* %3398, align 4
  %3400 = fmul float %3395, %3399
  %3401 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3402 = getelementptr inbounds i8, i8* %3401, i64 4
  %3403 = bitcast i8* %3402 to float*
  %3404 = load float, float* %3403, align 4
  %3405 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3406 = getelementptr inbounds i8, i8* %3405, i64 4
  %3407 = bitcast i8* %3406 to float*
  %3408 = load float, float* %3407, align 4
  %3409 = fmul float %3404, %3408
  %3410 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3411 = bitcast i8* %3410 to float*
  %3412 = load float, float* %3411, align 4
  %3413 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3414 = bitcast i8* %3413 to float*
  %3415 = load float, float* %3414, align 4
  %3416 = fmul float %3412, %3415
  %3417 = fadd float %3416, 0.000000e+00
  %3418 = fadd float %3409, %3417
  %3419 = fadd float %3400, %3418
  %3420 = fadd float %3391, %3419
  %3421 = call float @llvm.sqrt.f32.132(float %3420)
  %3422 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3423 = bitcast i8* %3422 to float*
  %3424 = load float, float* %3423, align 4
  %3425 = fcmp olt float %3424, 0.000000e+00
  %3426 = sext i1 %3425 to i32
  %3427 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3428 = bitcast i8* %3427 to float*
  %3429 = load float, float* %3428, align 4
  %3430 = fcmp ogt float %3429, 0.000000e+00
  %3431 = zext i1 %3430 to i32
  %3432 = add nsw i32 %3426, %3431
  %3433 = sitofp i32 %3432 to float
  %3434 = fneg float %3433
  %3435 = fmul float %3421, %3434
  %3436 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3437 = getelementptr inbounds i8, i8* %3436, i64 8
  %3438 = bitcast i8* %3437 to float*
  %3439 = load float, float* %3438, align 4
  %3440 = fmul float %3435, %3439
  %3441 = fadd float %3382, %3440
  %3442 = fmul float %3378, %3441
  %3443 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3444 = getelementptr inbounds i8, i8* %3443, i64 4
  %3445 = bitcast i8* %3444 to float*
  %3446 = load float, float* %3445, align 4
  %3447 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3448 = getelementptr inbounds i8, i8* %3447, i64 12
  %3449 = bitcast i8* %3448 to float*
  %3450 = load float, float* %3449, align 4
  %3451 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3452 = getelementptr inbounds i8, i8* %3451, i64 12
  %3453 = bitcast i8* %3452 to float*
  %3454 = load float, float* %3453, align 4
  %3455 = fmul float %3450, %3454
  %3456 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3457 = getelementptr inbounds i8, i8* %3456, i64 8
  %3458 = bitcast i8* %3457 to float*
  %3459 = load float, float* %3458, align 4
  %3460 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3461 = getelementptr inbounds i8, i8* %3460, i64 8
  %3462 = bitcast i8* %3461 to float*
  %3463 = load float, float* %3462, align 4
  %3464 = fmul float %3459, %3463
  %3465 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3466 = getelementptr inbounds i8, i8* %3465, i64 4
  %3467 = bitcast i8* %3466 to float*
  %3468 = load float, float* %3467, align 4
  %3469 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3470 = getelementptr inbounds i8, i8* %3469, i64 4
  %3471 = bitcast i8* %3470 to float*
  %3472 = load float, float* %3471, align 4
  %3473 = fmul float %3468, %3472
  %3474 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3475 = bitcast i8* %3474 to float*
  %3476 = load float, float* %3475, align 4
  %3477 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3478 = bitcast i8* %3477 to float*
  %3479 = load float, float* %3478, align 4
  %3480 = fmul float %3476, %3479
  %3481 = fadd float %3480, 0.000000e+00
  %3482 = fadd float %3473, %3481
  %3483 = fadd float %3464, %3482
  %3484 = fadd float %3455, %3483
  %3485 = call float @llvm.sqrt.f32.133(float %3484)
  %3486 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3487 = bitcast i8* %3486 to float*
  %3488 = load float, float* %3487, align 4
  %3489 = fcmp olt float %3488, 0.000000e+00
  %3490 = sext i1 %3489 to i32
  %3491 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3492 = bitcast i8* %3491 to float*
  %3493 = load float, float* %3492, align 4
  %3494 = fcmp ogt float %3493, 0.000000e+00
  %3495 = zext i1 %3494 to i32
  %3496 = add nsw i32 %3490, %3495
  %3497 = sitofp i32 %3496 to float
  %3498 = fneg float %3497
  %3499 = fmul float %3485, %3498
  %3500 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3501 = getelementptr inbounds i8, i8* %3500, i64 4
  %3502 = bitcast i8* %3501 to float*
  %3503 = load float, float* %3502, align 4
  %3504 = fmul float %3499, %3503
  %3505 = fadd float %3446, %3504
  %3506 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3507 = getelementptr inbounds i8, i8* %3506, i64 4
  %3508 = bitcast i8* %3507 to float*
  %3509 = load float, float* %3508, align 4
  %3510 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3511 = getelementptr inbounds i8, i8* %3510, i64 12
  %3512 = bitcast i8* %3511 to float*
  %3513 = load float, float* %3512, align 4
  %3514 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3515 = getelementptr inbounds i8, i8* %3514, i64 12
  %3516 = bitcast i8* %3515 to float*
  %3517 = load float, float* %3516, align 4
  %3518 = fmul float %3513, %3517
  %3519 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3520 = getelementptr inbounds i8, i8* %3519, i64 8
  %3521 = bitcast i8* %3520 to float*
  %3522 = load float, float* %3521, align 4
  %3523 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3524 = getelementptr inbounds i8, i8* %3523, i64 8
  %3525 = bitcast i8* %3524 to float*
  %3526 = load float, float* %3525, align 4
  %3527 = fmul float %3522, %3526
  %3528 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3529 = getelementptr inbounds i8, i8* %3528, i64 4
  %3530 = bitcast i8* %3529 to float*
  %3531 = load float, float* %3530, align 4
  %3532 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3533 = getelementptr inbounds i8, i8* %3532, i64 4
  %3534 = bitcast i8* %3533 to float*
  %3535 = load float, float* %3534, align 4
  %3536 = fmul float %3531, %3535
  %3537 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3538 = bitcast i8* %3537 to float*
  %3539 = load float, float* %3538, align 4
  %3540 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3541 = bitcast i8* %3540 to float*
  %3542 = load float, float* %3541, align 4
  %3543 = fmul float %3539, %3542
  %3544 = fadd float %3543, 0.000000e+00
  %3545 = fadd float %3536, %3544
  %3546 = fadd float %3527, %3545
  %3547 = fadd float %3518, %3546
  %3548 = call float @llvm.sqrt.f32.134(float %3547)
  %3549 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3550 = bitcast i8* %3549 to float*
  %3551 = load float, float* %3550, align 4
  %3552 = fcmp olt float %3551, 0.000000e+00
  %3553 = sext i1 %3552 to i32
  %3554 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3555 = bitcast i8* %3554 to float*
  %3556 = load float, float* %3555, align 4
  %3557 = fcmp ogt float %3556, 0.000000e+00
  %3558 = zext i1 %3557 to i32
  %3559 = add nsw i32 %3553, %3558
  %3560 = sitofp i32 %3559 to float
  %3561 = fneg float %3560
  %3562 = fmul float %3548, %3561
  %3563 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3564 = getelementptr inbounds i8, i8* %3563, i64 4
  %3565 = bitcast i8* %3564 to float*
  %3566 = load float, float* %3565, align 4
  %3567 = fmul float %3562, %3566
  %3568 = fadd float %3509, %3567
  %3569 = fmul float %3505, %3568
  %3570 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3571 = bitcast i8* %3570 to float*
  %3572 = load float, float* %3571, align 4
  %3573 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3574 = getelementptr inbounds i8, i8* %3573, i64 12
  %3575 = bitcast i8* %3574 to float*
  %3576 = load float, float* %3575, align 4
  %3577 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3578 = getelementptr inbounds i8, i8* %3577, i64 12
  %3579 = bitcast i8* %3578 to float*
  %3580 = load float, float* %3579, align 4
  %3581 = fmul float %3576, %3580
  %3582 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3583 = getelementptr inbounds i8, i8* %3582, i64 8
  %3584 = bitcast i8* %3583 to float*
  %3585 = load float, float* %3584, align 4
  %3586 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3587 = getelementptr inbounds i8, i8* %3586, i64 8
  %3588 = bitcast i8* %3587 to float*
  %3589 = load float, float* %3588, align 4
  %3590 = fmul float %3585, %3589
  %3591 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3592 = getelementptr inbounds i8, i8* %3591, i64 4
  %3593 = bitcast i8* %3592 to float*
  %3594 = load float, float* %3593, align 4
  %3595 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3596 = getelementptr inbounds i8, i8* %3595, i64 4
  %3597 = bitcast i8* %3596 to float*
  %3598 = load float, float* %3597, align 4
  %3599 = fmul float %3594, %3598
  %3600 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3601 = bitcast i8* %3600 to float*
  %3602 = load float, float* %3601, align 4
  %3603 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3604 = bitcast i8* %3603 to float*
  %3605 = load float, float* %3604, align 4
  %3606 = fmul float %3602, %3605
  %3607 = fadd float %3606, 0.000000e+00
  %3608 = fadd float %3599, %3607
  %3609 = fadd float %3590, %3608
  %3610 = fadd float %3581, %3609
  %3611 = call float @llvm.sqrt.f32.135(float %3610)
  %3612 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3613 = bitcast i8* %3612 to float*
  %3614 = load float, float* %3613, align 4
  %3615 = fcmp olt float %3614, 0.000000e+00
  %3616 = sext i1 %3615 to i32
  %3617 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3618 = bitcast i8* %3617 to float*
  %3619 = load float, float* %3618, align 4
  %3620 = fcmp ogt float %3619, 0.000000e+00
  %3621 = zext i1 %3620 to i32
  %3622 = add nsw i32 %3616, %3621
  %3623 = sitofp i32 %3622 to float
  %3624 = fneg float %3623
  %3625 = fmul float %3611, %3624
  %3626 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3627 = bitcast i8* %3626 to float*
  %3628 = load float, float* %3627, align 4
  %3629 = fmul float %3625, %3628
  %3630 = fadd float %3572, %3629
  %3631 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3632 = bitcast i8* %3631 to float*
  %3633 = load float, float* %3632, align 4
  %3634 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3635 = getelementptr inbounds i8, i8* %3634, i64 12
  %3636 = bitcast i8* %3635 to float*
  %3637 = load float, float* %3636, align 4
  %3638 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3639 = getelementptr inbounds i8, i8* %3638, i64 12
  %3640 = bitcast i8* %3639 to float*
  %3641 = load float, float* %3640, align 4
  %3642 = fmul float %3637, %3641
  %3643 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3644 = getelementptr inbounds i8, i8* %3643, i64 8
  %3645 = bitcast i8* %3644 to float*
  %3646 = load float, float* %3645, align 4
  %3647 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3648 = getelementptr inbounds i8, i8* %3647, i64 8
  %3649 = bitcast i8* %3648 to float*
  %3650 = load float, float* %3649, align 4
  %3651 = fmul float %3646, %3650
  %3652 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3653 = getelementptr inbounds i8, i8* %3652, i64 4
  %3654 = bitcast i8* %3653 to float*
  %3655 = load float, float* %3654, align 4
  %3656 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3657 = getelementptr inbounds i8, i8* %3656, i64 4
  %3658 = bitcast i8* %3657 to float*
  %3659 = load float, float* %3658, align 4
  %3660 = fmul float %3655, %3659
  %3661 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3662 = bitcast i8* %3661 to float*
  %3663 = load float, float* %3662, align 4
  %3664 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3665 = bitcast i8* %3664 to float*
  %3666 = load float, float* %3665, align 4
  %3667 = fmul float %3663, %3666
  %3668 = fadd float %3667, 0.000000e+00
  %3669 = fadd float %3660, %3668
  %3670 = fadd float %3651, %3669
  %3671 = fadd float %3642, %3670
  %3672 = call float @llvm.sqrt.f32.136(float %3671)
  %3673 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3674 = bitcast i8* %3673 to float*
  %3675 = load float, float* %3674, align 4
  %3676 = fcmp olt float %3675, 0.000000e+00
  %3677 = sext i1 %3676 to i32
  %3678 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3679 = bitcast i8* %3678 to float*
  %3680 = load float, float* %3679, align 4
  %3681 = fcmp ogt float %3680, 0.000000e+00
  %3682 = zext i1 %3681 to i32
  %3683 = add nsw i32 %3677, %3682
  %3684 = sitofp i32 %3683 to float
  %3685 = fneg float %3684
  %3686 = fmul float %3672, %3685
  %3687 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3688 = bitcast i8* %3687 to float*
  %3689 = load float, float* %3688, align 4
  %3690 = fmul float %3686, %3689
  %3691 = fadd float %3633, %3690
  %3692 = fmul float %3630, %3691
  %3693 = fadd float %3692, 0.000000e+00
  %3694 = fadd float %3569, %3693
  %3695 = fadd float %3442, %3694
  %3696 = fadd float %3315, %3695
  %3697 = call float @llvm.sqrt.f32.137(float %3696)
  %3698 = fdiv float %3188, %3697
  %3699 = insertelement <4 x float> zeroinitializer, float %3698, i32 0
  %3700 = insertelement <4 x float> %3699, float 0.000000e+00, i32 1
  %3701 = insertelement <4 x float> %3700, float 0.000000e+00, i32 2
  %3702 = insertelement <4 x float> %3701, float 0.000000e+00, i32 3
  %3703 = extractelement <4 x float> %3702, i32 0
  %3704 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3705 = getelementptr inbounds i8, i8* %3704, i64 4
  %3706 = bitcast i8* %3705 to float*
  store float %3703, float* %3706, align 4
  %3707 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3708 = getelementptr inbounds i8, i8* %3707, i64 8
  %3709 = bitcast i8* %3708 to float*
  %3710 = load float, float* %3709, align 4
  %3711 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3712 = getelementptr inbounds i8, i8* %3711, i64 12
  %3713 = bitcast i8* %3712 to float*
  %3714 = load float, float* %3713, align 4
  %3715 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3716 = getelementptr inbounds i8, i8* %3715, i64 12
  %3717 = bitcast i8* %3716 to float*
  %3718 = load float, float* %3717, align 4
  %3719 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3720 = getelementptr inbounds i8, i8* %3719, i64 12
  %3721 = bitcast i8* %3720 to float*
  %3722 = load float, float* %3721, align 4
  %3723 = fmul float %3718, %3722
  %3724 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3725 = getelementptr inbounds i8, i8* %3724, i64 8
  %3726 = bitcast i8* %3725 to float*
  %3727 = load float, float* %3726, align 4
  %3728 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3729 = getelementptr inbounds i8, i8* %3728, i64 8
  %3730 = bitcast i8* %3729 to float*
  %3731 = load float, float* %3730, align 4
  %3732 = fmul float %3727, %3731
  %3733 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3734 = getelementptr inbounds i8, i8* %3733, i64 4
  %3735 = bitcast i8* %3734 to float*
  %3736 = load float, float* %3735, align 4
  %3737 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3738 = getelementptr inbounds i8, i8* %3737, i64 4
  %3739 = bitcast i8* %3738 to float*
  %3740 = load float, float* %3739, align 4
  %3741 = fmul float %3736, %3740
  %3742 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3743 = bitcast i8* %3742 to float*
  %3744 = load float, float* %3743, align 4
  %3745 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3746 = bitcast i8* %3745 to float*
  %3747 = load float, float* %3746, align 4
  %3748 = fmul float %3744, %3747
  %3749 = fadd float %3748, 0.000000e+00
  %3750 = fadd float %3741, %3749
  %3751 = fadd float %3732, %3750
  %3752 = fadd float %3723, %3751
  %3753 = call float @llvm.sqrt.f32.138(float %3752)
  %3754 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3755 = bitcast i8* %3754 to float*
  %3756 = load float, float* %3755, align 4
  %3757 = fcmp olt float %3756, 0.000000e+00
  %3758 = sext i1 %3757 to i32
  %3759 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3760 = bitcast i8* %3759 to float*
  %3761 = load float, float* %3760, align 4
  %3762 = fcmp ogt float %3761, 0.000000e+00
  %3763 = zext i1 %3762 to i32
  %3764 = add nsw i32 %3758, %3763
  %3765 = sitofp i32 %3764 to float
  %3766 = fneg float %3765
  %3767 = fmul float %3753, %3766
  %3768 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3769 = getelementptr inbounds i8, i8* %3768, i64 12
  %3770 = bitcast i8* %3769 to float*
  %3771 = load float, float* %3770, align 4
  %3772 = fmul float %3767, %3771
  %3773 = fadd float %3714, %3772
  %3774 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3775 = getelementptr inbounds i8, i8* %3774, i64 12
  %3776 = bitcast i8* %3775 to float*
  %3777 = load float, float* %3776, align 4
  %3778 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3779 = getelementptr inbounds i8, i8* %3778, i64 12
  %3780 = bitcast i8* %3779 to float*
  %3781 = load float, float* %3780, align 4
  %3782 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3783 = getelementptr inbounds i8, i8* %3782, i64 12
  %3784 = bitcast i8* %3783 to float*
  %3785 = load float, float* %3784, align 4
  %3786 = fmul float %3781, %3785
  %3787 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3788 = getelementptr inbounds i8, i8* %3787, i64 8
  %3789 = bitcast i8* %3788 to float*
  %3790 = load float, float* %3789, align 4
  %3791 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3792 = getelementptr inbounds i8, i8* %3791, i64 8
  %3793 = bitcast i8* %3792 to float*
  %3794 = load float, float* %3793, align 4
  %3795 = fmul float %3790, %3794
  %3796 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3797 = getelementptr inbounds i8, i8* %3796, i64 4
  %3798 = bitcast i8* %3797 to float*
  %3799 = load float, float* %3798, align 4
  %3800 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3801 = getelementptr inbounds i8, i8* %3800, i64 4
  %3802 = bitcast i8* %3801 to float*
  %3803 = load float, float* %3802, align 4
  %3804 = fmul float %3799, %3803
  %3805 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3806 = bitcast i8* %3805 to float*
  %3807 = load float, float* %3806, align 4
  %3808 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3809 = bitcast i8* %3808 to float*
  %3810 = load float, float* %3809, align 4
  %3811 = fmul float %3807, %3810
  %3812 = fadd float %3811, 0.000000e+00
  %3813 = fadd float %3804, %3812
  %3814 = fadd float %3795, %3813
  %3815 = fadd float %3786, %3814
  %3816 = call float @llvm.sqrt.f32.139(float %3815)
  %3817 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3818 = bitcast i8* %3817 to float*
  %3819 = load float, float* %3818, align 4
  %3820 = fcmp olt float %3819, 0.000000e+00
  %3821 = sext i1 %3820 to i32
  %3822 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3823 = bitcast i8* %3822 to float*
  %3824 = load float, float* %3823, align 4
  %3825 = fcmp ogt float %3824, 0.000000e+00
  %3826 = zext i1 %3825 to i32
  %3827 = add nsw i32 %3821, %3826
  %3828 = sitofp i32 %3827 to float
  %3829 = fneg float %3828
  %3830 = fmul float %3816, %3829
  %3831 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3832 = getelementptr inbounds i8, i8* %3831, i64 12
  %3833 = bitcast i8* %3832 to float*
  %3834 = load float, float* %3833, align 4
  %3835 = fmul float %3830, %3834
  %3836 = fadd float %3777, %3835
  %3837 = fmul float %3773, %3836
  %3838 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3839 = getelementptr inbounds i8, i8* %3838, i64 8
  %3840 = bitcast i8* %3839 to float*
  %3841 = load float, float* %3840, align 4
  %3842 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3843 = getelementptr inbounds i8, i8* %3842, i64 12
  %3844 = bitcast i8* %3843 to float*
  %3845 = load float, float* %3844, align 4
  %3846 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3847 = getelementptr inbounds i8, i8* %3846, i64 12
  %3848 = bitcast i8* %3847 to float*
  %3849 = load float, float* %3848, align 4
  %3850 = fmul float %3845, %3849
  %3851 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3852 = getelementptr inbounds i8, i8* %3851, i64 8
  %3853 = bitcast i8* %3852 to float*
  %3854 = load float, float* %3853, align 4
  %3855 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3856 = getelementptr inbounds i8, i8* %3855, i64 8
  %3857 = bitcast i8* %3856 to float*
  %3858 = load float, float* %3857, align 4
  %3859 = fmul float %3854, %3858
  %3860 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3861 = getelementptr inbounds i8, i8* %3860, i64 4
  %3862 = bitcast i8* %3861 to float*
  %3863 = load float, float* %3862, align 4
  %3864 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3865 = getelementptr inbounds i8, i8* %3864, i64 4
  %3866 = bitcast i8* %3865 to float*
  %3867 = load float, float* %3866, align 4
  %3868 = fmul float %3863, %3867
  %3869 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3870 = bitcast i8* %3869 to float*
  %3871 = load float, float* %3870, align 4
  %3872 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3873 = bitcast i8* %3872 to float*
  %3874 = load float, float* %3873, align 4
  %3875 = fmul float %3871, %3874
  %3876 = fadd float %3875, 0.000000e+00
  %3877 = fadd float %3868, %3876
  %3878 = fadd float %3859, %3877
  %3879 = fadd float %3850, %3878
  %3880 = call float @llvm.sqrt.f32.140(float %3879)
  %3881 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3882 = bitcast i8* %3881 to float*
  %3883 = load float, float* %3882, align 4
  %3884 = fcmp olt float %3883, 0.000000e+00
  %3885 = sext i1 %3884 to i32
  %3886 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3887 = bitcast i8* %3886 to float*
  %3888 = load float, float* %3887, align 4
  %3889 = fcmp ogt float %3888, 0.000000e+00
  %3890 = zext i1 %3889 to i32
  %3891 = add nsw i32 %3885, %3890
  %3892 = sitofp i32 %3891 to float
  %3893 = fneg float %3892
  %3894 = fmul float %3880, %3893
  %3895 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3896 = getelementptr inbounds i8, i8* %3895, i64 8
  %3897 = bitcast i8* %3896 to float*
  %3898 = load float, float* %3897, align 4
  %3899 = fmul float %3894, %3898
  %3900 = fadd float %3841, %3899
  %3901 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3902 = getelementptr inbounds i8, i8* %3901, i64 8
  %3903 = bitcast i8* %3902 to float*
  %3904 = load float, float* %3903, align 4
  %3905 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3906 = getelementptr inbounds i8, i8* %3905, i64 12
  %3907 = bitcast i8* %3906 to float*
  %3908 = load float, float* %3907, align 4
  %3909 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3910 = getelementptr inbounds i8, i8* %3909, i64 12
  %3911 = bitcast i8* %3910 to float*
  %3912 = load float, float* %3911, align 4
  %3913 = fmul float %3908, %3912
  %3914 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3915 = getelementptr inbounds i8, i8* %3914, i64 8
  %3916 = bitcast i8* %3915 to float*
  %3917 = load float, float* %3916, align 4
  %3918 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3919 = getelementptr inbounds i8, i8* %3918, i64 8
  %3920 = bitcast i8* %3919 to float*
  %3921 = load float, float* %3920, align 4
  %3922 = fmul float %3917, %3921
  %3923 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3924 = getelementptr inbounds i8, i8* %3923, i64 4
  %3925 = bitcast i8* %3924 to float*
  %3926 = load float, float* %3925, align 4
  %3927 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3928 = getelementptr inbounds i8, i8* %3927, i64 4
  %3929 = bitcast i8* %3928 to float*
  %3930 = load float, float* %3929, align 4
  %3931 = fmul float %3926, %3930
  %3932 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3933 = bitcast i8* %3932 to float*
  %3934 = load float, float* %3933, align 4
  %3935 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3936 = bitcast i8* %3935 to float*
  %3937 = load float, float* %3936, align 4
  %3938 = fmul float %3934, %3937
  %3939 = fadd float %3938, 0.000000e+00
  %3940 = fadd float %3931, %3939
  %3941 = fadd float %3922, %3940
  %3942 = fadd float %3913, %3941
  %3943 = call float @llvm.sqrt.f32.141(float %3942)
  %3944 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3945 = bitcast i8* %3944 to float*
  %3946 = load float, float* %3945, align 4
  %3947 = fcmp olt float %3946, 0.000000e+00
  %3948 = sext i1 %3947 to i32
  %3949 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3950 = bitcast i8* %3949 to float*
  %3951 = load float, float* %3950, align 4
  %3952 = fcmp ogt float %3951, 0.000000e+00
  %3953 = zext i1 %3952 to i32
  %3954 = add nsw i32 %3948, %3953
  %3955 = sitofp i32 %3954 to float
  %3956 = fneg float %3955
  %3957 = fmul float %3943, %3956
  %3958 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3959 = getelementptr inbounds i8, i8* %3958, i64 8
  %3960 = bitcast i8* %3959 to float*
  %3961 = load float, float* %3960, align 4
  %3962 = fmul float %3957, %3961
  %3963 = fadd float %3904, %3962
  %3964 = fmul float %3900, %3963
  %3965 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3966 = getelementptr inbounds i8, i8* %3965, i64 4
  %3967 = bitcast i8* %3966 to float*
  %3968 = load float, float* %3967, align 4
  %3969 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3970 = getelementptr inbounds i8, i8* %3969, i64 12
  %3971 = bitcast i8* %3970 to float*
  %3972 = load float, float* %3971, align 4
  %3973 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3974 = getelementptr inbounds i8, i8* %3973, i64 12
  %3975 = bitcast i8* %3974 to float*
  %3976 = load float, float* %3975, align 4
  %3977 = fmul float %3972, %3976
  %3978 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3979 = getelementptr inbounds i8, i8* %3978, i64 8
  %3980 = bitcast i8* %3979 to float*
  %3981 = load float, float* %3980, align 4
  %3982 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3983 = getelementptr inbounds i8, i8* %3982, i64 8
  %3984 = bitcast i8* %3983 to float*
  %3985 = load float, float* %3984, align 4
  %3986 = fmul float %3981, %3985
  %3987 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3988 = getelementptr inbounds i8, i8* %3987, i64 4
  %3989 = bitcast i8* %3988 to float*
  %3990 = load float, float* %3989, align 4
  %3991 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3992 = getelementptr inbounds i8, i8* %3991, i64 4
  %3993 = bitcast i8* %3992 to float*
  %3994 = load float, float* %3993, align 4
  %3995 = fmul float %3990, %3994
  %3996 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %3997 = bitcast i8* %3996 to float*
  %3998 = load float, float* %3997, align 4
  %3999 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4000 = bitcast i8* %3999 to float*
  %4001 = load float, float* %4000, align 4
  %4002 = fmul float %3998, %4001
  %4003 = fadd float %4002, 0.000000e+00
  %4004 = fadd float %3995, %4003
  %4005 = fadd float %3986, %4004
  %4006 = fadd float %3977, %4005
  %4007 = call float @llvm.sqrt.f32.142(float %4006)
  %4008 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4009 = bitcast i8* %4008 to float*
  %4010 = load float, float* %4009, align 4
  %4011 = fcmp olt float %4010, 0.000000e+00
  %4012 = sext i1 %4011 to i32
  %4013 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4014 = bitcast i8* %4013 to float*
  %4015 = load float, float* %4014, align 4
  %4016 = fcmp ogt float %4015, 0.000000e+00
  %4017 = zext i1 %4016 to i32
  %4018 = add nsw i32 %4012, %4017
  %4019 = sitofp i32 %4018 to float
  %4020 = fneg float %4019
  %4021 = fmul float %4007, %4020
  %4022 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4023 = getelementptr inbounds i8, i8* %4022, i64 4
  %4024 = bitcast i8* %4023 to float*
  %4025 = load float, float* %4024, align 4
  %4026 = fmul float %4021, %4025
  %4027 = fadd float %3968, %4026
  %4028 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4029 = getelementptr inbounds i8, i8* %4028, i64 4
  %4030 = bitcast i8* %4029 to float*
  %4031 = load float, float* %4030, align 4
  %4032 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4033 = getelementptr inbounds i8, i8* %4032, i64 12
  %4034 = bitcast i8* %4033 to float*
  %4035 = load float, float* %4034, align 4
  %4036 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4037 = getelementptr inbounds i8, i8* %4036, i64 12
  %4038 = bitcast i8* %4037 to float*
  %4039 = load float, float* %4038, align 4
  %4040 = fmul float %4035, %4039
  %4041 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4042 = getelementptr inbounds i8, i8* %4041, i64 8
  %4043 = bitcast i8* %4042 to float*
  %4044 = load float, float* %4043, align 4
  %4045 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4046 = getelementptr inbounds i8, i8* %4045, i64 8
  %4047 = bitcast i8* %4046 to float*
  %4048 = load float, float* %4047, align 4
  %4049 = fmul float %4044, %4048
  %4050 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4051 = getelementptr inbounds i8, i8* %4050, i64 4
  %4052 = bitcast i8* %4051 to float*
  %4053 = load float, float* %4052, align 4
  %4054 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4055 = getelementptr inbounds i8, i8* %4054, i64 4
  %4056 = bitcast i8* %4055 to float*
  %4057 = load float, float* %4056, align 4
  %4058 = fmul float %4053, %4057
  %4059 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4060 = bitcast i8* %4059 to float*
  %4061 = load float, float* %4060, align 4
  %4062 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4063 = bitcast i8* %4062 to float*
  %4064 = load float, float* %4063, align 4
  %4065 = fmul float %4061, %4064
  %4066 = fadd float %4065, 0.000000e+00
  %4067 = fadd float %4058, %4066
  %4068 = fadd float %4049, %4067
  %4069 = fadd float %4040, %4068
  %4070 = call float @llvm.sqrt.f32.143(float %4069)
  %4071 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4072 = bitcast i8* %4071 to float*
  %4073 = load float, float* %4072, align 4
  %4074 = fcmp olt float %4073, 0.000000e+00
  %4075 = sext i1 %4074 to i32
  %4076 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4077 = bitcast i8* %4076 to float*
  %4078 = load float, float* %4077, align 4
  %4079 = fcmp ogt float %4078, 0.000000e+00
  %4080 = zext i1 %4079 to i32
  %4081 = add nsw i32 %4075, %4080
  %4082 = sitofp i32 %4081 to float
  %4083 = fneg float %4082
  %4084 = fmul float %4070, %4083
  %4085 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4086 = getelementptr inbounds i8, i8* %4085, i64 4
  %4087 = bitcast i8* %4086 to float*
  %4088 = load float, float* %4087, align 4
  %4089 = fmul float %4084, %4088
  %4090 = fadd float %4031, %4089
  %4091 = fmul float %4027, %4090
  %4092 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4093 = bitcast i8* %4092 to float*
  %4094 = load float, float* %4093, align 4
  %4095 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4096 = getelementptr inbounds i8, i8* %4095, i64 12
  %4097 = bitcast i8* %4096 to float*
  %4098 = load float, float* %4097, align 4
  %4099 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4100 = getelementptr inbounds i8, i8* %4099, i64 12
  %4101 = bitcast i8* %4100 to float*
  %4102 = load float, float* %4101, align 4
  %4103 = fmul float %4098, %4102
  %4104 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4105 = getelementptr inbounds i8, i8* %4104, i64 8
  %4106 = bitcast i8* %4105 to float*
  %4107 = load float, float* %4106, align 4
  %4108 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4109 = getelementptr inbounds i8, i8* %4108, i64 8
  %4110 = bitcast i8* %4109 to float*
  %4111 = load float, float* %4110, align 4
  %4112 = fmul float %4107, %4111
  %4113 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4114 = getelementptr inbounds i8, i8* %4113, i64 4
  %4115 = bitcast i8* %4114 to float*
  %4116 = load float, float* %4115, align 4
  %4117 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4118 = getelementptr inbounds i8, i8* %4117, i64 4
  %4119 = bitcast i8* %4118 to float*
  %4120 = load float, float* %4119, align 4
  %4121 = fmul float %4116, %4120
  %4122 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4123 = bitcast i8* %4122 to float*
  %4124 = load float, float* %4123, align 4
  %4125 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4126 = bitcast i8* %4125 to float*
  %4127 = load float, float* %4126, align 4
  %4128 = fmul float %4124, %4127
  %4129 = fadd float %4128, 0.000000e+00
  %4130 = fadd float %4121, %4129
  %4131 = fadd float %4112, %4130
  %4132 = fadd float %4103, %4131
  %4133 = call float @llvm.sqrt.f32.144(float %4132)
  %4134 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4135 = bitcast i8* %4134 to float*
  %4136 = load float, float* %4135, align 4
  %4137 = fcmp olt float %4136, 0.000000e+00
  %4138 = sext i1 %4137 to i32
  %4139 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4140 = bitcast i8* %4139 to float*
  %4141 = load float, float* %4140, align 4
  %4142 = fcmp ogt float %4141, 0.000000e+00
  %4143 = zext i1 %4142 to i32
  %4144 = add nsw i32 %4138, %4143
  %4145 = sitofp i32 %4144 to float
  %4146 = fneg float %4145
  %4147 = fmul float %4133, %4146
  %4148 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4149 = bitcast i8* %4148 to float*
  %4150 = load float, float* %4149, align 4
  %4151 = fmul float %4147, %4150
  %4152 = fadd float %4094, %4151
  %4153 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4154 = bitcast i8* %4153 to float*
  %4155 = load float, float* %4154, align 4
  %4156 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4157 = getelementptr inbounds i8, i8* %4156, i64 12
  %4158 = bitcast i8* %4157 to float*
  %4159 = load float, float* %4158, align 4
  %4160 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4161 = getelementptr inbounds i8, i8* %4160, i64 12
  %4162 = bitcast i8* %4161 to float*
  %4163 = load float, float* %4162, align 4
  %4164 = fmul float %4159, %4163
  %4165 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4166 = getelementptr inbounds i8, i8* %4165, i64 8
  %4167 = bitcast i8* %4166 to float*
  %4168 = load float, float* %4167, align 4
  %4169 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4170 = getelementptr inbounds i8, i8* %4169, i64 8
  %4171 = bitcast i8* %4170 to float*
  %4172 = load float, float* %4171, align 4
  %4173 = fmul float %4168, %4172
  %4174 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4175 = getelementptr inbounds i8, i8* %4174, i64 4
  %4176 = bitcast i8* %4175 to float*
  %4177 = load float, float* %4176, align 4
  %4178 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4179 = getelementptr inbounds i8, i8* %4178, i64 4
  %4180 = bitcast i8* %4179 to float*
  %4181 = load float, float* %4180, align 4
  %4182 = fmul float %4177, %4181
  %4183 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4184 = bitcast i8* %4183 to float*
  %4185 = load float, float* %4184, align 4
  %4186 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4187 = bitcast i8* %4186 to float*
  %4188 = load float, float* %4187, align 4
  %4189 = fmul float %4185, %4188
  %4190 = fadd float %4189, 0.000000e+00
  %4191 = fadd float %4182, %4190
  %4192 = fadd float %4173, %4191
  %4193 = fadd float %4164, %4192
  %4194 = call float @llvm.sqrt.f32.145(float %4193)
  %4195 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4196 = bitcast i8* %4195 to float*
  %4197 = load float, float* %4196, align 4
  %4198 = fcmp olt float %4197, 0.000000e+00
  %4199 = sext i1 %4198 to i32
  %4200 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4201 = bitcast i8* %4200 to float*
  %4202 = load float, float* %4201, align 4
  %4203 = fcmp ogt float %4202, 0.000000e+00
  %4204 = zext i1 %4203 to i32
  %4205 = add nsw i32 %4199, %4204
  %4206 = sitofp i32 %4205 to float
  %4207 = fneg float %4206
  %4208 = fmul float %4194, %4207
  %4209 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4210 = bitcast i8* %4209 to float*
  %4211 = load float, float* %4210, align 4
  %4212 = fmul float %4208, %4211
  %4213 = fadd float %4155, %4212
  %4214 = fmul float %4152, %4213
  %4215 = fadd float %4214, 0.000000e+00
  %4216 = fadd float %4091, %4215
  %4217 = fadd float %3964, %4216
  %4218 = fadd float %3837, %4217
  %4219 = call float @llvm.sqrt.f32.146(float %4218)
  %4220 = fdiv float %3710, %4219
  %4221 = insertelement <4 x float> zeroinitializer, float %4220, i32 0
  %4222 = insertelement <4 x float> %4221, float 0.000000e+00, i32 1
  %4223 = insertelement <4 x float> %4222, float 0.000000e+00, i32 2
  %4224 = insertelement <4 x float> %4223, float 0.000000e+00, i32 3
  %4225 = extractelement <4 x float> %4224, i32 0
  %4226 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4227 = getelementptr inbounds i8, i8* %4226, i64 8
  %4228 = bitcast i8* %4227 to float*
  store float %4225, float* %4228, align 4
  %4229 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4230 = getelementptr inbounds i8, i8* %4229, i64 12
  %4231 = bitcast i8* %4230 to float*
  %4232 = load float, float* %4231, align 4
  %4233 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4234 = getelementptr inbounds i8, i8* %4233, i64 12
  %4235 = bitcast i8* %4234 to float*
  %4236 = load float, float* %4235, align 4
  %4237 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4238 = getelementptr inbounds i8, i8* %4237, i64 12
  %4239 = bitcast i8* %4238 to float*
  %4240 = load float, float* %4239, align 4
  %4241 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4242 = getelementptr inbounds i8, i8* %4241, i64 12
  %4243 = bitcast i8* %4242 to float*
  %4244 = load float, float* %4243, align 4
  %4245 = fmul float %4240, %4244
  %4246 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4247 = getelementptr inbounds i8, i8* %4246, i64 8
  %4248 = bitcast i8* %4247 to float*
  %4249 = load float, float* %4248, align 4
  %4250 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4251 = getelementptr inbounds i8, i8* %4250, i64 8
  %4252 = bitcast i8* %4251 to float*
  %4253 = load float, float* %4252, align 4
  %4254 = fmul float %4249, %4253
  %4255 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4256 = getelementptr inbounds i8, i8* %4255, i64 4
  %4257 = bitcast i8* %4256 to float*
  %4258 = load float, float* %4257, align 4
  %4259 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4260 = getelementptr inbounds i8, i8* %4259, i64 4
  %4261 = bitcast i8* %4260 to float*
  %4262 = load float, float* %4261, align 4
  %4263 = fmul float %4258, %4262
  %4264 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4265 = bitcast i8* %4264 to float*
  %4266 = load float, float* %4265, align 4
  %4267 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4268 = bitcast i8* %4267 to float*
  %4269 = load float, float* %4268, align 4
  %4270 = fmul float %4266, %4269
  %4271 = fadd float %4270, 0.000000e+00
  %4272 = fadd float %4263, %4271
  %4273 = fadd float %4254, %4272
  %4274 = fadd float %4245, %4273
  %4275 = call float @llvm.sqrt.f32.147(float %4274)
  %4276 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4277 = bitcast i8* %4276 to float*
  %4278 = load float, float* %4277, align 4
  %4279 = fcmp olt float %4278, 0.000000e+00
  %4280 = sext i1 %4279 to i32
  %4281 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4282 = bitcast i8* %4281 to float*
  %4283 = load float, float* %4282, align 4
  %4284 = fcmp ogt float %4283, 0.000000e+00
  %4285 = zext i1 %4284 to i32
  %4286 = add nsw i32 %4280, %4285
  %4287 = sitofp i32 %4286 to float
  %4288 = fneg float %4287
  %4289 = fmul float %4275, %4288
  %4290 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4291 = getelementptr inbounds i8, i8* %4290, i64 12
  %4292 = bitcast i8* %4291 to float*
  %4293 = load float, float* %4292, align 4
  %4294 = fmul float %4289, %4293
  %4295 = fadd float %4236, %4294
  %4296 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4297 = getelementptr inbounds i8, i8* %4296, i64 12
  %4298 = bitcast i8* %4297 to float*
  %4299 = load float, float* %4298, align 4
  %4300 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4301 = getelementptr inbounds i8, i8* %4300, i64 12
  %4302 = bitcast i8* %4301 to float*
  %4303 = load float, float* %4302, align 4
  %4304 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4305 = getelementptr inbounds i8, i8* %4304, i64 12
  %4306 = bitcast i8* %4305 to float*
  %4307 = load float, float* %4306, align 4
  %4308 = fmul float %4303, %4307
  %4309 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4310 = getelementptr inbounds i8, i8* %4309, i64 8
  %4311 = bitcast i8* %4310 to float*
  %4312 = load float, float* %4311, align 4
  %4313 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4314 = getelementptr inbounds i8, i8* %4313, i64 8
  %4315 = bitcast i8* %4314 to float*
  %4316 = load float, float* %4315, align 4
  %4317 = fmul float %4312, %4316
  %4318 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4319 = getelementptr inbounds i8, i8* %4318, i64 4
  %4320 = bitcast i8* %4319 to float*
  %4321 = load float, float* %4320, align 4
  %4322 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4323 = getelementptr inbounds i8, i8* %4322, i64 4
  %4324 = bitcast i8* %4323 to float*
  %4325 = load float, float* %4324, align 4
  %4326 = fmul float %4321, %4325
  %4327 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4328 = bitcast i8* %4327 to float*
  %4329 = load float, float* %4328, align 4
  %4330 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4331 = bitcast i8* %4330 to float*
  %4332 = load float, float* %4331, align 4
  %4333 = fmul float %4329, %4332
  %4334 = fadd float %4333, 0.000000e+00
  %4335 = fadd float %4326, %4334
  %4336 = fadd float %4317, %4335
  %4337 = fadd float %4308, %4336
  %4338 = call float @llvm.sqrt.f32.148(float %4337)
  %4339 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4340 = bitcast i8* %4339 to float*
  %4341 = load float, float* %4340, align 4
  %4342 = fcmp olt float %4341, 0.000000e+00
  %4343 = sext i1 %4342 to i32
  %4344 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4345 = bitcast i8* %4344 to float*
  %4346 = load float, float* %4345, align 4
  %4347 = fcmp ogt float %4346, 0.000000e+00
  %4348 = zext i1 %4347 to i32
  %4349 = add nsw i32 %4343, %4348
  %4350 = sitofp i32 %4349 to float
  %4351 = fneg float %4350
  %4352 = fmul float %4338, %4351
  %4353 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4354 = getelementptr inbounds i8, i8* %4353, i64 12
  %4355 = bitcast i8* %4354 to float*
  %4356 = load float, float* %4355, align 4
  %4357 = fmul float %4352, %4356
  %4358 = fadd float %4299, %4357
  %4359 = fmul float %4295, %4358
  %4360 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4361 = getelementptr inbounds i8, i8* %4360, i64 8
  %4362 = bitcast i8* %4361 to float*
  %4363 = load float, float* %4362, align 4
  %4364 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4365 = getelementptr inbounds i8, i8* %4364, i64 12
  %4366 = bitcast i8* %4365 to float*
  %4367 = load float, float* %4366, align 4
  %4368 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4369 = getelementptr inbounds i8, i8* %4368, i64 12
  %4370 = bitcast i8* %4369 to float*
  %4371 = load float, float* %4370, align 4
  %4372 = fmul float %4367, %4371
  %4373 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4374 = getelementptr inbounds i8, i8* %4373, i64 8
  %4375 = bitcast i8* %4374 to float*
  %4376 = load float, float* %4375, align 4
  %4377 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4378 = getelementptr inbounds i8, i8* %4377, i64 8
  %4379 = bitcast i8* %4378 to float*
  %4380 = load float, float* %4379, align 4
  %4381 = fmul float %4376, %4380
  %4382 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4383 = getelementptr inbounds i8, i8* %4382, i64 4
  %4384 = bitcast i8* %4383 to float*
  %4385 = load float, float* %4384, align 4
  %4386 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4387 = getelementptr inbounds i8, i8* %4386, i64 4
  %4388 = bitcast i8* %4387 to float*
  %4389 = load float, float* %4388, align 4
  %4390 = fmul float %4385, %4389
  %4391 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4392 = bitcast i8* %4391 to float*
  %4393 = load float, float* %4392, align 4
  %4394 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4395 = bitcast i8* %4394 to float*
  %4396 = load float, float* %4395, align 4
  %4397 = fmul float %4393, %4396
  %4398 = fadd float %4397, 0.000000e+00
  %4399 = fadd float %4390, %4398
  %4400 = fadd float %4381, %4399
  %4401 = fadd float %4372, %4400
  %4402 = call float @llvm.sqrt.f32.149(float %4401)
  %4403 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4404 = bitcast i8* %4403 to float*
  %4405 = load float, float* %4404, align 4
  %4406 = fcmp olt float %4405, 0.000000e+00
  %4407 = sext i1 %4406 to i32
  %4408 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4409 = bitcast i8* %4408 to float*
  %4410 = load float, float* %4409, align 4
  %4411 = fcmp ogt float %4410, 0.000000e+00
  %4412 = zext i1 %4411 to i32
  %4413 = add nsw i32 %4407, %4412
  %4414 = sitofp i32 %4413 to float
  %4415 = fneg float %4414
  %4416 = fmul float %4402, %4415
  %4417 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4418 = getelementptr inbounds i8, i8* %4417, i64 8
  %4419 = bitcast i8* %4418 to float*
  %4420 = load float, float* %4419, align 4
  %4421 = fmul float %4416, %4420
  %4422 = fadd float %4363, %4421
  %4423 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4424 = getelementptr inbounds i8, i8* %4423, i64 8
  %4425 = bitcast i8* %4424 to float*
  %4426 = load float, float* %4425, align 4
  %4427 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4428 = getelementptr inbounds i8, i8* %4427, i64 12
  %4429 = bitcast i8* %4428 to float*
  %4430 = load float, float* %4429, align 4
  %4431 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4432 = getelementptr inbounds i8, i8* %4431, i64 12
  %4433 = bitcast i8* %4432 to float*
  %4434 = load float, float* %4433, align 4
  %4435 = fmul float %4430, %4434
  %4436 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4437 = getelementptr inbounds i8, i8* %4436, i64 8
  %4438 = bitcast i8* %4437 to float*
  %4439 = load float, float* %4438, align 4
  %4440 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4441 = getelementptr inbounds i8, i8* %4440, i64 8
  %4442 = bitcast i8* %4441 to float*
  %4443 = load float, float* %4442, align 4
  %4444 = fmul float %4439, %4443
  %4445 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4446 = getelementptr inbounds i8, i8* %4445, i64 4
  %4447 = bitcast i8* %4446 to float*
  %4448 = load float, float* %4447, align 4
  %4449 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4450 = getelementptr inbounds i8, i8* %4449, i64 4
  %4451 = bitcast i8* %4450 to float*
  %4452 = load float, float* %4451, align 4
  %4453 = fmul float %4448, %4452
  %4454 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4455 = bitcast i8* %4454 to float*
  %4456 = load float, float* %4455, align 4
  %4457 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4458 = bitcast i8* %4457 to float*
  %4459 = load float, float* %4458, align 4
  %4460 = fmul float %4456, %4459
  %4461 = fadd float %4460, 0.000000e+00
  %4462 = fadd float %4453, %4461
  %4463 = fadd float %4444, %4462
  %4464 = fadd float %4435, %4463
  %4465 = call float @llvm.sqrt.f32.150(float %4464)
  %4466 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4467 = bitcast i8* %4466 to float*
  %4468 = load float, float* %4467, align 4
  %4469 = fcmp olt float %4468, 0.000000e+00
  %4470 = sext i1 %4469 to i32
  %4471 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4472 = bitcast i8* %4471 to float*
  %4473 = load float, float* %4472, align 4
  %4474 = fcmp ogt float %4473, 0.000000e+00
  %4475 = zext i1 %4474 to i32
  %4476 = add nsw i32 %4470, %4475
  %4477 = sitofp i32 %4476 to float
  %4478 = fneg float %4477
  %4479 = fmul float %4465, %4478
  %4480 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4481 = getelementptr inbounds i8, i8* %4480, i64 8
  %4482 = bitcast i8* %4481 to float*
  %4483 = load float, float* %4482, align 4
  %4484 = fmul float %4479, %4483
  %4485 = fadd float %4426, %4484
  %4486 = fmul float %4422, %4485
  %4487 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4488 = getelementptr inbounds i8, i8* %4487, i64 4
  %4489 = bitcast i8* %4488 to float*
  %4490 = load float, float* %4489, align 4
  %4491 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4492 = getelementptr inbounds i8, i8* %4491, i64 12
  %4493 = bitcast i8* %4492 to float*
  %4494 = load float, float* %4493, align 4
  %4495 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4496 = getelementptr inbounds i8, i8* %4495, i64 12
  %4497 = bitcast i8* %4496 to float*
  %4498 = load float, float* %4497, align 4
  %4499 = fmul float %4494, %4498
  %4500 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4501 = getelementptr inbounds i8, i8* %4500, i64 8
  %4502 = bitcast i8* %4501 to float*
  %4503 = load float, float* %4502, align 4
  %4504 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4505 = getelementptr inbounds i8, i8* %4504, i64 8
  %4506 = bitcast i8* %4505 to float*
  %4507 = load float, float* %4506, align 4
  %4508 = fmul float %4503, %4507
  %4509 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4510 = getelementptr inbounds i8, i8* %4509, i64 4
  %4511 = bitcast i8* %4510 to float*
  %4512 = load float, float* %4511, align 4
  %4513 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4514 = getelementptr inbounds i8, i8* %4513, i64 4
  %4515 = bitcast i8* %4514 to float*
  %4516 = load float, float* %4515, align 4
  %4517 = fmul float %4512, %4516
  %4518 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4519 = bitcast i8* %4518 to float*
  %4520 = load float, float* %4519, align 4
  %4521 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4522 = bitcast i8* %4521 to float*
  %4523 = load float, float* %4522, align 4
  %4524 = fmul float %4520, %4523
  %4525 = fadd float %4524, 0.000000e+00
  %4526 = fadd float %4517, %4525
  %4527 = fadd float %4508, %4526
  %4528 = fadd float %4499, %4527
  %4529 = call float @llvm.sqrt.f32.151(float %4528)
  %4530 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4531 = bitcast i8* %4530 to float*
  %4532 = load float, float* %4531, align 4
  %4533 = fcmp olt float %4532, 0.000000e+00
  %4534 = sext i1 %4533 to i32
  %4535 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4536 = bitcast i8* %4535 to float*
  %4537 = load float, float* %4536, align 4
  %4538 = fcmp ogt float %4537, 0.000000e+00
  %4539 = zext i1 %4538 to i32
  %4540 = add nsw i32 %4534, %4539
  %4541 = sitofp i32 %4540 to float
  %4542 = fneg float %4541
  %4543 = fmul float %4529, %4542
  %4544 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4545 = getelementptr inbounds i8, i8* %4544, i64 4
  %4546 = bitcast i8* %4545 to float*
  %4547 = load float, float* %4546, align 4
  %4548 = fmul float %4543, %4547
  %4549 = fadd float %4490, %4548
  %4550 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4551 = getelementptr inbounds i8, i8* %4550, i64 4
  %4552 = bitcast i8* %4551 to float*
  %4553 = load float, float* %4552, align 4
  %4554 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4555 = getelementptr inbounds i8, i8* %4554, i64 12
  %4556 = bitcast i8* %4555 to float*
  %4557 = load float, float* %4556, align 4
  %4558 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4559 = getelementptr inbounds i8, i8* %4558, i64 12
  %4560 = bitcast i8* %4559 to float*
  %4561 = load float, float* %4560, align 4
  %4562 = fmul float %4557, %4561
  %4563 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4564 = getelementptr inbounds i8, i8* %4563, i64 8
  %4565 = bitcast i8* %4564 to float*
  %4566 = load float, float* %4565, align 4
  %4567 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4568 = getelementptr inbounds i8, i8* %4567, i64 8
  %4569 = bitcast i8* %4568 to float*
  %4570 = load float, float* %4569, align 4
  %4571 = fmul float %4566, %4570
  %4572 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4573 = getelementptr inbounds i8, i8* %4572, i64 4
  %4574 = bitcast i8* %4573 to float*
  %4575 = load float, float* %4574, align 4
  %4576 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4577 = getelementptr inbounds i8, i8* %4576, i64 4
  %4578 = bitcast i8* %4577 to float*
  %4579 = load float, float* %4578, align 4
  %4580 = fmul float %4575, %4579
  %4581 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4582 = bitcast i8* %4581 to float*
  %4583 = load float, float* %4582, align 4
  %4584 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4585 = bitcast i8* %4584 to float*
  %4586 = load float, float* %4585, align 4
  %4587 = fmul float %4583, %4586
  %4588 = fadd float %4587, 0.000000e+00
  %4589 = fadd float %4580, %4588
  %4590 = fadd float %4571, %4589
  %4591 = fadd float %4562, %4590
  %4592 = call float @llvm.sqrt.f32.152(float %4591)
  %4593 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4594 = bitcast i8* %4593 to float*
  %4595 = load float, float* %4594, align 4
  %4596 = fcmp olt float %4595, 0.000000e+00
  %4597 = sext i1 %4596 to i32
  %4598 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4599 = bitcast i8* %4598 to float*
  %4600 = load float, float* %4599, align 4
  %4601 = fcmp ogt float %4600, 0.000000e+00
  %4602 = zext i1 %4601 to i32
  %4603 = add nsw i32 %4597, %4602
  %4604 = sitofp i32 %4603 to float
  %4605 = fneg float %4604
  %4606 = fmul float %4592, %4605
  %4607 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4608 = getelementptr inbounds i8, i8* %4607, i64 4
  %4609 = bitcast i8* %4608 to float*
  %4610 = load float, float* %4609, align 4
  %4611 = fmul float %4606, %4610
  %4612 = fadd float %4553, %4611
  %4613 = fmul float %4549, %4612
  %4614 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4615 = bitcast i8* %4614 to float*
  %4616 = load float, float* %4615, align 4
  %4617 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4618 = getelementptr inbounds i8, i8* %4617, i64 12
  %4619 = bitcast i8* %4618 to float*
  %4620 = load float, float* %4619, align 4
  %4621 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4622 = getelementptr inbounds i8, i8* %4621, i64 12
  %4623 = bitcast i8* %4622 to float*
  %4624 = load float, float* %4623, align 4
  %4625 = fmul float %4620, %4624
  %4626 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4627 = getelementptr inbounds i8, i8* %4626, i64 8
  %4628 = bitcast i8* %4627 to float*
  %4629 = load float, float* %4628, align 4
  %4630 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4631 = getelementptr inbounds i8, i8* %4630, i64 8
  %4632 = bitcast i8* %4631 to float*
  %4633 = load float, float* %4632, align 4
  %4634 = fmul float %4629, %4633
  %4635 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4636 = getelementptr inbounds i8, i8* %4635, i64 4
  %4637 = bitcast i8* %4636 to float*
  %4638 = load float, float* %4637, align 4
  %4639 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4640 = getelementptr inbounds i8, i8* %4639, i64 4
  %4641 = bitcast i8* %4640 to float*
  %4642 = load float, float* %4641, align 4
  %4643 = fmul float %4638, %4642
  %4644 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4645 = bitcast i8* %4644 to float*
  %4646 = load float, float* %4645, align 4
  %4647 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4648 = bitcast i8* %4647 to float*
  %4649 = load float, float* %4648, align 4
  %4650 = fmul float %4646, %4649
  %4651 = fadd float %4650, 0.000000e+00
  %4652 = fadd float %4643, %4651
  %4653 = fadd float %4634, %4652
  %4654 = fadd float %4625, %4653
  %4655 = call float @llvm.sqrt.f32.153(float %4654)
  %4656 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4657 = bitcast i8* %4656 to float*
  %4658 = load float, float* %4657, align 4
  %4659 = fcmp olt float %4658, 0.000000e+00
  %4660 = sext i1 %4659 to i32
  %4661 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4662 = bitcast i8* %4661 to float*
  %4663 = load float, float* %4662, align 4
  %4664 = fcmp ogt float %4663, 0.000000e+00
  %4665 = zext i1 %4664 to i32
  %4666 = add nsw i32 %4660, %4665
  %4667 = sitofp i32 %4666 to float
  %4668 = fneg float %4667
  %4669 = fmul float %4655, %4668
  %4670 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4671 = bitcast i8* %4670 to float*
  %4672 = load float, float* %4671, align 4
  %4673 = fmul float %4669, %4672
  %4674 = fadd float %4616, %4673
  %4675 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4676 = bitcast i8* %4675 to float*
  %4677 = load float, float* %4676, align 4
  %4678 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4679 = getelementptr inbounds i8, i8* %4678, i64 12
  %4680 = bitcast i8* %4679 to float*
  %4681 = load float, float* %4680, align 4
  %4682 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4683 = getelementptr inbounds i8, i8* %4682, i64 12
  %4684 = bitcast i8* %4683 to float*
  %4685 = load float, float* %4684, align 4
  %4686 = fmul float %4681, %4685
  %4687 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4688 = getelementptr inbounds i8, i8* %4687, i64 8
  %4689 = bitcast i8* %4688 to float*
  %4690 = load float, float* %4689, align 4
  %4691 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4692 = getelementptr inbounds i8, i8* %4691, i64 8
  %4693 = bitcast i8* %4692 to float*
  %4694 = load float, float* %4693, align 4
  %4695 = fmul float %4690, %4694
  %4696 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4697 = getelementptr inbounds i8, i8* %4696, i64 4
  %4698 = bitcast i8* %4697 to float*
  %4699 = load float, float* %4698, align 4
  %4700 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4701 = getelementptr inbounds i8, i8* %4700, i64 4
  %4702 = bitcast i8* %4701 to float*
  %4703 = load float, float* %4702, align 4
  %4704 = fmul float %4699, %4703
  %4705 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4706 = bitcast i8* %4705 to float*
  %4707 = load float, float* %4706, align 4
  %4708 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4709 = bitcast i8* %4708 to float*
  %4710 = load float, float* %4709, align 4
  %4711 = fmul float %4707, %4710
  %4712 = fadd float %4711, 0.000000e+00
  %4713 = fadd float %4704, %4712
  %4714 = fadd float %4695, %4713
  %4715 = fadd float %4686, %4714
  %4716 = call float @llvm.sqrt.f32.154(float %4715)
  %4717 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4718 = bitcast i8* %4717 to float*
  %4719 = load float, float* %4718, align 4
  %4720 = fcmp olt float %4719, 0.000000e+00
  %4721 = sext i1 %4720 to i32
  %4722 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4723 = bitcast i8* %4722 to float*
  %4724 = load float, float* %4723, align 4
  %4725 = fcmp ogt float %4724, 0.000000e+00
  %4726 = zext i1 %4725 to i32
  %4727 = add nsw i32 %4721, %4726
  %4728 = sitofp i32 %4727 to float
  %4729 = fneg float %4728
  %4730 = fmul float %4716, %4729
  %4731 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4732 = bitcast i8* %4731 to float*
  %4733 = load float, float* %4732, align 4
  %4734 = fmul float %4730, %4733
  %4735 = fadd float %4677, %4734
  %4736 = fmul float %4674, %4735
  %4737 = fadd float %4736, 0.000000e+00
  %4738 = fadd float %4613, %4737
  %4739 = fadd float %4486, %4738
  %4740 = fadd float %4359, %4739
  %4741 = call float @llvm.sqrt.f32.155(float %4740)
  %4742 = fdiv float %4232, %4741
  %4743 = insertelement <4 x float> zeroinitializer, float %4742, i32 0
  %4744 = insertelement <4 x float> %4743, float 0.000000e+00, i32 1
  %4745 = insertelement <4 x float> %4744, float 0.000000e+00, i32 2
  %4746 = insertelement <4 x float> %4745, float 0.000000e+00, i32 3
  %4747 = extractelement <4 x float> %4746, i32 0
  %4748 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4749 = getelementptr inbounds i8, i8* %4748, i64 12
  %4750 = bitcast i8* %4749 to float*
  store float %4747, float* %4750, align 4
  %4751 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4752 = bitcast i8* %4751 to float*
  %4753 = load float, float* %4752, align 4
  %4754 = insertelement <4 x float> zeroinitializer, float %4753, i32 0
  %4755 = insertelement <4 x float> %4754, float 1.000000e+00, i32 1
  %4756 = insertelement <4 x float> %4755, float 1.000000e+00, i32 2
  %4757 = insertelement <4 x float> %4756, float 1.000000e+00, i32 3
  %4758 = fmul <4 x float> %4757, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4759 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4760 = bitcast i8* %4759 to float*
  %4761 = load float, float* %4760, align 4
  %4762 = insertelement <4 x float> zeroinitializer, float %4761, i32 0
  %4763 = insertelement <4 x float> %4762, float 0.000000e+00, i32 1
  %4764 = insertelement <4 x float> %4763, float 0.000000e+00, i32 2
  %4765 = insertelement <4 x float> %4764, float 0.000000e+00, i32 3
  %4766 = fmul <4 x float> %4758, %4765
  %4767 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %4766
  %4768 = extractelement <4 x float> %4767, i32 0
  %4769 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4770 = bitcast i8* %4769 to float*
  store float %4768, float* %4770, align 4
  %4771 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4772 = bitcast i8* %4771 to float*
  %4773 = load float, float* %4772, align 4
  %4774 = insertelement <4 x float> zeroinitializer, float %4773, i32 0
  %4775 = insertelement <4 x float> %4774, float 1.000000e+00, i32 1
  %4776 = insertelement <4 x float> %4775, float 1.000000e+00, i32 2
  %4777 = insertelement <4 x float> %4776, float 1.000000e+00, i32 3
  %4778 = fmul <4 x float> %4777, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4779 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4780 = getelementptr inbounds i8, i8* %4779, i64 4
  %4781 = bitcast i8* %4780 to float*
  %4782 = load float, float* %4781, align 4
  %4783 = insertelement <4 x float> zeroinitializer, float %4782, i32 0
  %4784 = insertelement <4 x float> %4783, float 0.000000e+00, i32 1
  %4785 = insertelement <4 x float> %4784, float 0.000000e+00, i32 2
  %4786 = insertelement <4 x float> %4785, float 0.000000e+00, i32 3
  %4787 = fmul <4 x float> %4778, %4786
  %4788 = fsub <4 x float> zeroinitializer, %4787
  %4789 = extractelement <4 x float> %4788, i32 0
  %4790 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4791 = getelementptr inbounds i8, i8* %4790, i64 4
  %4792 = bitcast i8* %4791 to float*
  store float %4789, float* %4792, align 4
  %4793 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4794 = bitcast i8* %4793 to float*
  %4795 = load float, float* %4794, align 4
  %4796 = insertelement <4 x float> zeroinitializer, float %4795, i32 0
  %4797 = insertelement <4 x float> %4796, float 1.000000e+00, i32 1
  %4798 = insertelement <4 x float> %4797, float 1.000000e+00, i32 2
  %4799 = insertelement <4 x float> %4798, float 1.000000e+00, i32 3
  %4800 = fmul <4 x float> %4799, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4801 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4802 = getelementptr inbounds i8, i8* %4801, i64 8
  %4803 = bitcast i8* %4802 to float*
  %4804 = load float, float* %4803, align 4
  %4805 = insertelement <4 x float> zeroinitializer, float %4804, i32 0
  %4806 = insertelement <4 x float> %4805, float 0.000000e+00, i32 1
  %4807 = insertelement <4 x float> %4806, float 0.000000e+00, i32 2
  %4808 = insertelement <4 x float> %4807, float 0.000000e+00, i32 3
  %4809 = fmul <4 x float> %4800, %4808
  %4810 = fsub <4 x float> zeroinitializer, %4809
  %4811 = extractelement <4 x float> %4810, i32 0
  %4812 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4813 = getelementptr inbounds i8, i8* %4812, i64 8
  %4814 = bitcast i8* %4813 to float*
  store float %4811, float* %4814, align 4
  %4815 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4816 = bitcast i8* %4815 to float*
  %4817 = load float, float* %4816, align 4
  %4818 = insertelement <4 x float> zeroinitializer, float %4817, i32 0
  %4819 = insertelement <4 x float> %4818, float 1.000000e+00, i32 1
  %4820 = insertelement <4 x float> %4819, float 1.000000e+00, i32 2
  %4821 = insertelement <4 x float> %4820, float 1.000000e+00, i32 3
  %4822 = fmul <4 x float> %4821, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4823 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4824 = getelementptr inbounds i8, i8* %4823, i64 12
  %4825 = bitcast i8* %4824 to float*
  %4826 = load float, float* %4825, align 4
  %4827 = insertelement <4 x float> zeroinitializer, float %4826, i32 0
  %4828 = insertelement <4 x float> %4827, float 0.000000e+00, i32 1
  %4829 = insertelement <4 x float> %4828, float 0.000000e+00, i32 2
  %4830 = insertelement <4 x float> %4829, float 0.000000e+00, i32 3
  %4831 = fmul <4 x float> %4822, %4830
  %4832 = fsub <4 x float> zeroinitializer, %4831
  %4833 = extractelement <4 x float> %4832, i32 0
  %4834 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4835 = getelementptr inbounds i8, i8* %4834, i64 12
  %4836 = bitcast i8* %4835 to float*
  store float %4833, float* %4836, align 4
  %4837 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4838 = getelementptr inbounds i8, i8* %4837, i64 4
  %4839 = bitcast i8* %4838 to float*
  %4840 = load float, float* %4839, align 4
  %4841 = insertelement <4 x float> zeroinitializer, float %4840, i32 0
  %4842 = insertelement <4 x float> %4841, float 1.000000e+00, i32 1
  %4843 = insertelement <4 x float> %4842, float 1.000000e+00, i32 2
  %4844 = insertelement <4 x float> %4843, float 1.000000e+00, i32 3
  %4845 = fmul <4 x float> %4844, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4846 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4847 = bitcast i8* %4846 to float*
  %4848 = load float, float* %4847, align 4
  %4849 = insertelement <4 x float> zeroinitializer, float %4848, i32 0
  %4850 = insertelement <4 x float> %4849, float 0.000000e+00, i32 1
  %4851 = insertelement <4 x float> %4850, float 0.000000e+00, i32 2
  %4852 = insertelement <4 x float> %4851, float 0.000000e+00, i32 3
  %4853 = fmul <4 x float> %4845, %4852
  %4854 = fsub <4 x float> zeroinitializer, %4853
  %4855 = extractelement <4 x float> %4854, i32 0
  %4856 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4857 = getelementptr inbounds i8, i8* %4856, i64 16
  %4858 = bitcast i8* %4857 to float*
  store float %4855, float* %4858, align 4
  %4859 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4860 = getelementptr inbounds i8, i8* %4859, i64 4
  %4861 = bitcast i8* %4860 to float*
  %4862 = load float, float* %4861, align 4
  %4863 = insertelement <4 x float> zeroinitializer, float %4862, i32 0
  %4864 = insertelement <4 x float> %4863, float 1.000000e+00, i32 1
  %4865 = insertelement <4 x float> %4864, float 1.000000e+00, i32 2
  %4866 = insertelement <4 x float> %4865, float 1.000000e+00, i32 3
  %4867 = fmul <4 x float> %4866, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4868 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4869 = getelementptr inbounds i8, i8* %4868, i64 4
  %4870 = bitcast i8* %4869 to float*
  %4871 = load float, float* %4870, align 4
  %4872 = insertelement <4 x float> zeroinitializer, float %4871, i32 0
  %4873 = insertelement <4 x float> %4872, float 0.000000e+00, i32 1
  %4874 = insertelement <4 x float> %4873, float 0.000000e+00, i32 2
  %4875 = insertelement <4 x float> %4874, float 0.000000e+00, i32 3
  %4876 = fmul <4 x float> %4867, %4875
  %4877 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %4876
  %4878 = extractelement <4 x float> %4877, i32 0
  %4879 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4880 = getelementptr inbounds i8, i8* %4879, i64 20
  %4881 = bitcast i8* %4880 to float*
  store float %4878, float* %4881, align 4
  %4882 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4883 = getelementptr inbounds i8, i8* %4882, i64 4
  %4884 = bitcast i8* %4883 to float*
  %4885 = load float, float* %4884, align 4
  %4886 = insertelement <4 x float> zeroinitializer, float %4885, i32 0
  %4887 = insertelement <4 x float> %4886, float 1.000000e+00, i32 1
  %4888 = insertelement <4 x float> %4887, float 1.000000e+00, i32 2
  %4889 = insertelement <4 x float> %4888, float 1.000000e+00, i32 3
  %4890 = fmul <4 x float> %4889, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4891 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4892 = getelementptr inbounds i8, i8* %4891, i64 8
  %4893 = bitcast i8* %4892 to float*
  %4894 = load float, float* %4893, align 4
  %4895 = insertelement <4 x float> zeroinitializer, float %4894, i32 0
  %4896 = insertelement <4 x float> %4895, float 0.000000e+00, i32 1
  %4897 = insertelement <4 x float> %4896, float 0.000000e+00, i32 2
  %4898 = insertelement <4 x float> %4897, float 0.000000e+00, i32 3
  %4899 = fmul <4 x float> %4890, %4898
  %4900 = fsub <4 x float> zeroinitializer, %4899
  %4901 = extractelement <4 x float> %4900, i32 0
  %4902 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4903 = getelementptr inbounds i8, i8* %4902, i64 24
  %4904 = bitcast i8* %4903 to float*
  store float %4901, float* %4904, align 4
  %4905 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4906 = getelementptr inbounds i8, i8* %4905, i64 4
  %4907 = bitcast i8* %4906 to float*
  %4908 = load float, float* %4907, align 4
  %4909 = insertelement <4 x float> zeroinitializer, float %4908, i32 0
  %4910 = insertelement <4 x float> %4909, float 1.000000e+00, i32 1
  %4911 = insertelement <4 x float> %4910, float 1.000000e+00, i32 2
  %4912 = insertelement <4 x float> %4911, float 1.000000e+00, i32 3
  %4913 = fmul <4 x float> %4912, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4914 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4915 = getelementptr inbounds i8, i8* %4914, i64 12
  %4916 = bitcast i8* %4915 to float*
  %4917 = load float, float* %4916, align 4
  %4918 = insertelement <4 x float> zeroinitializer, float %4917, i32 0
  %4919 = insertelement <4 x float> %4918, float 0.000000e+00, i32 1
  %4920 = insertelement <4 x float> %4919, float 0.000000e+00, i32 2
  %4921 = insertelement <4 x float> %4920, float 0.000000e+00, i32 3
  %4922 = fmul <4 x float> %4913, %4921
  %4923 = fsub <4 x float> zeroinitializer, %4922
  %4924 = extractelement <4 x float> %4923, i32 0
  %4925 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4926 = getelementptr inbounds i8, i8* %4925, i64 28
  %4927 = bitcast i8* %4926 to float*
  store float %4924, float* %4927, align 4
  %4928 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4929 = getelementptr inbounds i8, i8* %4928, i64 8
  %4930 = bitcast i8* %4929 to float*
  %4931 = load float, float* %4930, align 4
  %4932 = insertelement <4 x float> zeroinitializer, float %4931, i32 0
  %4933 = insertelement <4 x float> %4932, float 1.000000e+00, i32 1
  %4934 = insertelement <4 x float> %4933, float 1.000000e+00, i32 2
  %4935 = insertelement <4 x float> %4934, float 1.000000e+00, i32 3
  %4936 = fmul <4 x float> %4935, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4937 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4938 = bitcast i8* %4937 to float*
  %4939 = load float, float* %4938, align 4
  %4940 = insertelement <4 x float> zeroinitializer, float %4939, i32 0
  %4941 = insertelement <4 x float> %4940, float 0.000000e+00, i32 1
  %4942 = insertelement <4 x float> %4941, float 0.000000e+00, i32 2
  %4943 = insertelement <4 x float> %4942, float 0.000000e+00, i32 3
  %4944 = fmul <4 x float> %4936, %4943
  %4945 = fsub <4 x float> zeroinitializer, %4944
  %4946 = extractelement <4 x float> %4945, i32 0
  %4947 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4948 = getelementptr inbounds i8, i8* %4947, i64 32
  %4949 = bitcast i8* %4948 to float*
  store float %4946, float* %4949, align 4
  %4950 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4951 = getelementptr inbounds i8, i8* %4950, i64 8
  %4952 = bitcast i8* %4951 to float*
  %4953 = load float, float* %4952, align 4
  %4954 = insertelement <4 x float> zeroinitializer, float %4953, i32 0
  %4955 = insertelement <4 x float> %4954, float 1.000000e+00, i32 1
  %4956 = insertelement <4 x float> %4955, float 1.000000e+00, i32 2
  %4957 = insertelement <4 x float> %4956, float 1.000000e+00, i32 3
  %4958 = fmul <4 x float> %4957, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4959 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4960 = getelementptr inbounds i8, i8* %4959, i64 4
  %4961 = bitcast i8* %4960 to float*
  %4962 = load float, float* %4961, align 4
  %4963 = insertelement <4 x float> zeroinitializer, float %4962, i32 0
  %4964 = insertelement <4 x float> %4963, float 0.000000e+00, i32 1
  %4965 = insertelement <4 x float> %4964, float 0.000000e+00, i32 2
  %4966 = insertelement <4 x float> %4965, float 0.000000e+00, i32 3
  %4967 = fmul <4 x float> %4958, %4966
  %4968 = fsub <4 x float> zeroinitializer, %4967
  %4969 = extractelement <4 x float> %4968, i32 0
  %4970 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4971 = getelementptr inbounds i8, i8* %4970, i64 36
  %4972 = bitcast i8* %4971 to float*
  store float %4969, float* %4972, align 4
  %4973 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4974 = getelementptr inbounds i8, i8* %4973, i64 8
  %4975 = bitcast i8* %4974 to float*
  %4976 = load float, float* %4975, align 4
  %4977 = insertelement <4 x float> zeroinitializer, float %4976, i32 0
  %4978 = insertelement <4 x float> %4977, float 1.000000e+00, i32 1
  %4979 = insertelement <4 x float> %4978, float 1.000000e+00, i32 2
  %4980 = insertelement <4 x float> %4979, float 1.000000e+00, i32 3
  %4981 = fmul <4 x float> %4980, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %4982 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4983 = getelementptr inbounds i8, i8* %4982, i64 8
  %4984 = bitcast i8* %4983 to float*
  %4985 = load float, float* %4984, align 4
  %4986 = insertelement <4 x float> zeroinitializer, float %4985, i32 0
  %4987 = insertelement <4 x float> %4986, float 0.000000e+00, i32 1
  %4988 = insertelement <4 x float> %4987, float 0.000000e+00, i32 2
  %4989 = insertelement <4 x float> %4988, float 0.000000e+00, i32 3
  %4990 = fmul <4 x float> %4981, %4989
  %4991 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %4990
  %4992 = extractelement <4 x float> %4991, i32 0
  %4993 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4994 = getelementptr inbounds i8, i8* %4993, i64 40
  %4995 = bitcast i8* %4994 to float*
  store float %4992, float* %4995, align 4
  %4996 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %4997 = getelementptr inbounds i8, i8* %4996, i64 8
  %4998 = bitcast i8* %4997 to float*
  %4999 = load float, float* %4998, align 4
  %5000 = insertelement <4 x float> zeroinitializer, float %4999, i32 0
  %5001 = insertelement <4 x float> %5000, float 1.000000e+00, i32 1
  %5002 = insertelement <4 x float> %5001, float 1.000000e+00, i32 2
  %5003 = insertelement <4 x float> %5002, float 1.000000e+00, i32 3
  %5004 = fmul <4 x float> %5003, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %5005 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %5006 = getelementptr inbounds i8, i8* %5005, i64 12
  %5007 = bitcast i8* %5006 to float*
  %5008 = load float, float* %5007, align 4
  %5009 = insertelement <4 x float> zeroinitializer, float %5008, i32 0
  %5010 = insertelement <4 x float> %5009, float 0.000000e+00, i32 1
  %5011 = insertelement <4 x float> %5010, float 0.000000e+00, i32 2
  %5012 = insertelement <4 x float> %5011, float 0.000000e+00, i32 3
  %5013 = fmul <4 x float> %5004, %5012
  %5014 = fsub <4 x float> zeroinitializer, %5013
  %5015 = extractelement <4 x float> %5014, i32 0
  %5016 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5017 = getelementptr inbounds i8, i8* %5016, i64 44
  %5018 = bitcast i8* %5017 to float*
  store float %5015, float* %5018, align 4
  %5019 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %5020 = getelementptr inbounds i8, i8* %5019, i64 12
  %5021 = bitcast i8* %5020 to float*
  %5022 = load float, float* %5021, align 4
  %5023 = insertelement <4 x float> zeroinitializer, float %5022, i32 0
  %5024 = insertelement <4 x float> %5023, float 1.000000e+00, i32 1
  %5025 = insertelement <4 x float> %5024, float 1.000000e+00, i32 2
  %5026 = insertelement <4 x float> %5025, float 1.000000e+00, i32 3
  %5027 = fmul <4 x float> %5026, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %5028 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %5029 = bitcast i8* %5028 to float*
  %5030 = load float, float* %5029, align 4
  %5031 = insertelement <4 x float> zeroinitializer, float %5030, i32 0
  %5032 = insertelement <4 x float> %5031, float 0.000000e+00, i32 1
  %5033 = insertelement <4 x float> %5032, float 0.000000e+00, i32 2
  %5034 = insertelement <4 x float> %5033, float 0.000000e+00, i32 3
  %5035 = fmul <4 x float> %5027, %5034
  %5036 = fsub <4 x float> zeroinitializer, %5035
  %5037 = extractelement <4 x float> %5036, i32 0
  %5038 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5039 = getelementptr inbounds i8, i8* %5038, i64 48
  %5040 = bitcast i8* %5039 to float*
  store float %5037, float* %5040, align 4
  %5041 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %5042 = getelementptr inbounds i8, i8* %5041, i64 12
  %5043 = bitcast i8* %5042 to float*
  %5044 = load float, float* %5043, align 4
  %5045 = insertelement <4 x float> zeroinitializer, float %5044, i32 0
  %5046 = insertelement <4 x float> %5045, float 1.000000e+00, i32 1
  %5047 = insertelement <4 x float> %5046, float 1.000000e+00, i32 2
  %5048 = insertelement <4 x float> %5047, float 1.000000e+00, i32 3
  %5049 = fmul <4 x float> %5048, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %5050 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %5051 = getelementptr inbounds i8, i8* %5050, i64 4
  %5052 = bitcast i8* %5051 to float*
  %5053 = load float, float* %5052, align 4
  %5054 = insertelement <4 x float> zeroinitializer, float %5053, i32 0
  %5055 = insertelement <4 x float> %5054, float 0.000000e+00, i32 1
  %5056 = insertelement <4 x float> %5055, float 0.000000e+00, i32 2
  %5057 = insertelement <4 x float> %5056, float 0.000000e+00, i32 3
  %5058 = fmul <4 x float> %5049, %5057
  %5059 = fsub <4 x float> zeroinitializer, %5058
  %5060 = extractelement <4 x float> %5059, i32 0
  %5061 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5062 = getelementptr inbounds i8, i8* %5061, i64 52
  %5063 = bitcast i8* %5062 to float*
  store float %5060, float* %5063, align 4
  %5064 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %5065 = getelementptr inbounds i8, i8* %5064, i64 12
  %5066 = bitcast i8* %5065 to float*
  %5067 = load float, float* %5066, align 4
  %5068 = insertelement <4 x float> zeroinitializer, float %5067, i32 0
  %5069 = insertelement <4 x float> %5068, float 1.000000e+00, i32 1
  %5070 = insertelement <4 x float> %5069, float 1.000000e+00, i32 2
  %5071 = insertelement <4 x float> %5070, float 1.000000e+00, i32 3
  %5072 = fmul <4 x float> %5071, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %5073 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %5074 = getelementptr inbounds i8, i8* %5073, i64 8
  %5075 = bitcast i8* %5074 to float*
  %5076 = load float, float* %5075, align 4
  %5077 = insertelement <4 x float> zeroinitializer, float %5076, i32 0
  %5078 = insertelement <4 x float> %5077, float 0.000000e+00, i32 1
  %5079 = insertelement <4 x float> %5078, float 0.000000e+00, i32 2
  %5080 = insertelement <4 x float> %5079, float 0.000000e+00, i32 3
  %5081 = fmul <4 x float> %5072, %5080
  %5082 = fsub <4 x float> zeroinitializer, %5081
  %5083 = extractelement <4 x float> %5082, i32 0
  %5084 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5085 = getelementptr inbounds i8, i8* %5084, i64 56
  %5086 = bitcast i8* %5085 to float*
  store float %5083, float* %5086, align 4
  %5087 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %5088 = getelementptr inbounds i8, i8* %5087, i64 12
  %5089 = bitcast i8* %5088 to float*
  %5090 = load float, float* %5089, align 4
  %5091 = insertelement <4 x float> zeroinitializer, float %5090, i32 0
  %5092 = insertelement <4 x float> %5091, float 1.000000e+00, i32 1
  %5093 = insertelement <4 x float> %5092, float 1.000000e+00, i32 2
  %5094 = insertelement <4 x float> %5093, float 1.000000e+00, i32 3
  %5095 = fmul <4 x float> %5094, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %5096 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %5097 = getelementptr inbounds i8, i8* %5096, i64 12
  %5098 = bitcast i8* %5097 to float*
  %5099 = load float, float* %5098, align 4
  %5100 = insertelement <4 x float> zeroinitializer, float %5099, i32 0
  %5101 = insertelement <4 x float> %5100, float 0.000000e+00, i32 1
  %5102 = insertelement <4 x float> %5101, float 0.000000e+00, i32 2
  %5103 = insertelement <4 x float> %5102, float 0.000000e+00, i32 3
  %5104 = fmul <4 x float> %5095, %5103
  %5105 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %5104
  %5106 = extractelement <4 x float> %5105, i32 0
  %5107 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5108 = getelementptr inbounds i8, i8* %5107, i64 60
  %5109 = bitcast i8* %5108 to float*
  store float %5106, float* %5109, align 4
  %5110 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5111 = bitcast i8* %5110 to i32*
  %5112 = load i32, i32* %5111, align 4
  %5113 = sitofp i32 %5112 to float
  %5114 = insertelement <4 x float> zeroinitializer, float %5113, i32 0
  %5115 = insertelement <4 x float> %5114, float 0.000000e+00, i32 1
  %5116 = insertelement <4 x float> %5115, float 0.000000e+00, i32 2
  %5117 = insertelement <4 x float> %5116, float 0.000000e+00, i32 3
  %5118 = extractelement <4 x float> %5117, i32 0
  %5119 = fptosi float %5118 to i32
  %5120 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5121 = bitcast i8* %5120 to i32*
  store i32 %5119, i32* %5121, align 4
  %5122 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5123 = getelementptr inbounds i8, i8* %5122, i64 4
  %5124 = bitcast i8* %5123 to i32*
  %5125 = load i32, i32* %5124, align 4
  %5126 = sitofp i32 %5125 to float
  %5127 = insertelement <4 x float> zeroinitializer, float %5126, i32 0
  %5128 = insertelement <4 x float> %5127, float 0.000000e+00, i32 1
  %5129 = insertelement <4 x float> %5128, float 0.000000e+00, i32 2
  %5130 = insertelement <4 x float> %5129, float 0.000000e+00, i32 3
  %5131 = extractelement <4 x float> %5130, i32 0
  %5132 = fptosi float %5131 to i32
  %5133 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5134 = getelementptr inbounds i8, i8* %5133, i64 4
  %5135 = bitcast i8* %5134 to i32*
  store i32 %5132, i32* %5135, align 4
  %5136 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5137 = getelementptr inbounds i8, i8* %5136, i64 8
  %5138 = bitcast i8* %5137 to i32*
  %5139 = load i32, i32* %5138, align 4
  %5140 = sitofp i32 %5139 to float
  %5141 = insertelement <4 x float> zeroinitializer, float %5140, i32 0
  %5142 = insertelement <4 x float> %5141, float 0.000000e+00, i32 1
  %5143 = insertelement <4 x float> %5142, float 0.000000e+00, i32 2
  %5144 = insertelement <4 x float> %5143, float 0.000000e+00, i32 3
  %5145 = extractelement <4 x float> %5144, i32 0
  %5146 = fptosi float %5145 to i32
  %5147 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5148 = getelementptr inbounds i8, i8* %5147, i64 8
  %5149 = bitcast i8* %5148 to i32*
  store i32 %5146, i32* %5149, align 4
  %5150 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5151 = getelementptr inbounds i8, i8* %5150, i64 12
  %5152 = bitcast i8* %5151 to i32*
  %5153 = load i32, i32* %5152, align 4
  %5154 = sitofp i32 %5153 to float
  %5155 = insertelement <4 x float> zeroinitializer, float %5154, i32 0
  %5156 = insertelement <4 x float> %5155, float 0.000000e+00, i32 1
  %5157 = insertelement <4 x float> %5156, float 0.000000e+00, i32 2
  %5158 = insertelement <4 x float> %5157, float 0.000000e+00, i32 3
  %5159 = extractelement <4 x float> %5158, i32 0
  %5160 = fptosi float %5159 to i32
  %5161 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5162 = getelementptr inbounds i8, i8* %5161, i64 12
  %5163 = bitcast i8* %5162 to i32*
  store i32 %5160, i32* %5163, align 4
  %5164 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5165 = getelementptr inbounds i8, i8* %5164, i64 16
  %5166 = bitcast i8* %5165 to i32*
  %5167 = load i32, i32* %5166, align 4
  %5168 = sitofp i32 %5167 to float
  %5169 = insertelement <4 x float> zeroinitializer, float %5168, i32 0
  %5170 = insertelement <4 x float> %5169, float 0.000000e+00, i32 1
  %5171 = insertelement <4 x float> %5170, float 0.000000e+00, i32 2
  %5172 = insertelement <4 x float> %5171, float 0.000000e+00, i32 3
  %5173 = extractelement <4 x float> %5172, i32 0
  %5174 = fptosi float %5173 to i32
  %5175 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5176 = getelementptr inbounds i8, i8* %5175, i64 16
  %5177 = bitcast i8* %5176 to i32*
  store i32 %5174, i32* %5177, align 4
  %5178 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5179 = getelementptr inbounds i8, i8* %5178, i64 20
  %5180 = bitcast i8* %5179 to i32*
  %5181 = load i32, i32* %5180, align 4
  %5182 = sitofp i32 %5181 to float
  %5183 = insertelement <4 x float> zeroinitializer, float %5182, i32 0
  %5184 = insertelement <4 x float> %5183, float 0.000000e+00, i32 1
  %5185 = insertelement <4 x float> %5184, float 0.000000e+00, i32 2
  %5186 = insertelement <4 x float> %5185, float 0.000000e+00, i32 3
  %5187 = extractelement <4 x float> %5186, i32 0
  %5188 = fptosi float %5187 to i32
  %5189 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5190 = getelementptr inbounds i8, i8* %5189, i64 20
  %5191 = bitcast i8* %5190 to i32*
  store i32 %5188, i32* %5191, align 4
  %5192 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5193 = getelementptr inbounds i8, i8* %5192, i64 24
  %5194 = bitcast i8* %5193 to i32*
  %5195 = load i32, i32* %5194, align 4
  %5196 = sitofp i32 %5195 to float
  %5197 = insertelement <4 x float> zeroinitializer, float %5196, i32 0
  %5198 = insertelement <4 x float> %5197, float 0.000000e+00, i32 1
  %5199 = insertelement <4 x float> %5198, float 0.000000e+00, i32 2
  %5200 = insertelement <4 x float> %5199, float 0.000000e+00, i32 3
  %5201 = extractelement <4 x float> %5200, i32 0
  %5202 = fptosi float %5201 to i32
  %5203 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5204 = getelementptr inbounds i8, i8* %5203, i64 24
  %5205 = bitcast i8* %5204 to i32*
  store i32 %5202, i32* %5205, align 4
  %5206 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5207 = getelementptr inbounds i8, i8* %5206, i64 28
  %5208 = bitcast i8* %5207 to i32*
  %5209 = load i32, i32* %5208, align 4
  %5210 = sitofp i32 %5209 to float
  %5211 = insertelement <4 x float> zeroinitializer, float %5210, i32 0
  %5212 = insertelement <4 x float> %5211, float 0.000000e+00, i32 1
  %5213 = insertelement <4 x float> %5212, float 0.000000e+00, i32 2
  %5214 = insertelement <4 x float> %5213, float 0.000000e+00, i32 3
  %5215 = extractelement <4 x float> %5214, i32 0
  %5216 = fptosi float %5215 to i32
  %5217 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5218 = getelementptr inbounds i8, i8* %5217, i64 28
  %5219 = bitcast i8* %5218 to i32*
  store i32 %5216, i32* %5219, align 4
  %5220 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5221 = getelementptr inbounds i8, i8* %5220, i64 32
  %5222 = bitcast i8* %5221 to i32*
  %5223 = load i32, i32* %5222, align 4
  %5224 = sitofp i32 %5223 to float
  %5225 = insertelement <4 x float> zeroinitializer, float %5224, i32 0
  %5226 = insertelement <4 x float> %5225, float 0.000000e+00, i32 1
  %5227 = insertelement <4 x float> %5226, float 0.000000e+00, i32 2
  %5228 = insertelement <4 x float> %5227, float 0.000000e+00, i32 3
  %5229 = extractelement <4 x float> %5228, i32 0
  %5230 = fptosi float %5229 to i32
  %5231 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5232 = getelementptr inbounds i8, i8* %5231, i64 32
  %5233 = bitcast i8* %5232 to i32*
  store i32 %5230, i32* %5233, align 4
  %5234 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5235 = getelementptr inbounds i8, i8* %5234, i64 36
  %5236 = bitcast i8* %5235 to i32*
  %5237 = load i32, i32* %5236, align 4
  %5238 = sitofp i32 %5237 to float
  %5239 = insertelement <4 x float> zeroinitializer, float %5238, i32 0
  %5240 = insertelement <4 x float> %5239, float 0.000000e+00, i32 1
  %5241 = insertelement <4 x float> %5240, float 0.000000e+00, i32 2
  %5242 = insertelement <4 x float> %5241, float 0.000000e+00, i32 3
  %5243 = extractelement <4 x float> %5242, i32 0
  %5244 = fptosi float %5243 to i32
  %5245 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5246 = getelementptr inbounds i8, i8* %5245, i64 36
  %5247 = bitcast i8* %5246 to i32*
  store i32 %5244, i32* %5247, align 4
  %5248 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5249 = getelementptr inbounds i8, i8* %5248, i64 40
  %5250 = bitcast i8* %5249 to i32*
  %5251 = load i32, i32* %5250, align 4
  %5252 = sitofp i32 %5251 to float
  %5253 = insertelement <4 x float> zeroinitializer, float %5252, i32 0
  %5254 = insertelement <4 x float> %5253, float 0.000000e+00, i32 1
  %5255 = insertelement <4 x float> %5254, float 0.000000e+00, i32 2
  %5256 = insertelement <4 x float> %5255, float 0.000000e+00, i32 3
  %5257 = extractelement <4 x float> %5256, i32 0
  %5258 = fptosi float %5257 to i32
  %5259 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5260 = getelementptr inbounds i8, i8* %5259, i64 40
  %5261 = bitcast i8* %5260 to i32*
  store i32 %5258, i32* %5261, align 4
  %5262 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5263 = getelementptr inbounds i8, i8* %5262, i64 44
  %5264 = bitcast i8* %5263 to i32*
  %5265 = load i32, i32* %5264, align 4
  %5266 = sitofp i32 %5265 to float
  %5267 = insertelement <4 x float> zeroinitializer, float %5266, i32 0
  %5268 = insertelement <4 x float> %5267, float 0.000000e+00, i32 1
  %5269 = insertelement <4 x float> %5268, float 0.000000e+00, i32 2
  %5270 = insertelement <4 x float> %5269, float 0.000000e+00, i32 3
  %5271 = extractelement <4 x float> %5270, i32 0
  %5272 = fptosi float %5271 to i32
  %5273 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5274 = getelementptr inbounds i8, i8* %5273, i64 44
  %5275 = bitcast i8* %5274 to i32*
  store i32 %5272, i32* %5275, align 4
  %5276 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5277 = getelementptr inbounds i8, i8* %5276, i64 48
  %5278 = bitcast i8* %5277 to i32*
  %5279 = load i32, i32* %5278, align 4
  %5280 = sitofp i32 %5279 to float
  %5281 = insertelement <4 x float> zeroinitializer, float %5280, i32 0
  %5282 = insertelement <4 x float> %5281, float 0.000000e+00, i32 1
  %5283 = insertelement <4 x float> %5282, float 0.000000e+00, i32 2
  %5284 = insertelement <4 x float> %5283, float 0.000000e+00, i32 3
  %5285 = extractelement <4 x float> %5284, i32 0
  %5286 = fptosi float %5285 to i32
  %5287 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5288 = getelementptr inbounds i8, i8* %5287, i64 48
  %5289 = bitcast i8* %5288 to i32*
  store i32 %5286, i32* %5289, align 4
  %5290 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5291 = getelementptr inbounds i8, i8* %5290, i64 52
  %5292 = bitcast i8* %5291 to i32*
  %5293 = load i32, i32* %5292, align 4
  %5294 = sitofp i32 %5293 to float
  %5295 = insertelement <4 x float> zeroinitializer, float %5294, i32 0
  %5296 = insertelement <4 x float> %5295, float 0.000000e+00, i32 1
  %5297 = insertelement <4 x float> %5296, float 0.000000e+00, i32 2
  %5298 = insertelement <4 x float> %5297, float 0.000000e+00, i32 3
  %5299 = extractelement <4 x float> %5298, i32 0
  %5300 = fptosi float %5299 to i32
  %5301 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5302 = getelementptr inbounds i8, i8* %5301, i64 52
  %5303 = bitcast i8* %5302 to i32*
  store i32 %5300, i32* %5303, align 4
  %5304 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5305 = getelementptr inbounds i8, i8* %5304, i64 56
  %5306 = bitcast i8* %5305 to i32*
  %5307 = load i32, i32* %5306, align 4
  %5308 = sitofp i32 %5307 to float
  %5309 = insertelement <4 x float> zeroinitializer, float %5308, i32 0
  %5310 = insertelement <4 x float> %5309, float 0.000000e+00, i32 1
  %5311 = insertelement <4 x float> %5310, float 0.000000e+00, i32 2
  %5312 = insertelement <4 x float> %5311, float 0.000000e+00, i32 3
  %5313 = extractelement <4 x float> %5312, i32 0
  %5314 = fptosi float %5313 to i32
  %5315 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5316 = getelementptr inbounds i8, i8* %5315, i64 56
  %5317 = bitcast i8* %5316 to i32*
  store i32 %5314, i32* %5317, align 4
  %5318 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5319 = getelementptr inbounds i8, i8* %5318, i64 60
  %5320 = bitcast i8* %5319 to i32*
  %5321 = load i32, i32* %5320, align 4
  %5322 = sitofp i32 %5321 to float
  %5323 = insertelement <4 x float> zeroinitializer, float %5322, i32 0
  %5324 = insertelement <4 x float> %5323, float 0.000000e+00, i32 1
  %5325 = insertelement <4 x float> %5324, float 0.000000e+00, i32 2
  %5326 = insertelement <4 x float> %5325, float 0.000000e+00, i32 3
  %5327 = extractelement <4 x float> %5326, i32 0
  %5328 = fptosi float %5327 to i32
  %5329 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5330 = getelementptr inbounds i8, i8* %5329, i64 60
  %5331 = bitcast i8* %5330 to i32*
  store i32 %5328, i32* %5331, align 4
  store float 0.000000e+00, float* %2, align 4
  %5332 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5333 = bitcast i8* %5332 to float*
  %5334 = load float, float* %5333, align 4
  %5335 = insertelement <4 x float> zeroinitializer, float %5334, i32 0
  %5336 = insertelement <4 x float> %5335, float 0.000000e+00, i32 1
  %5337 = insertelement <4 x float> %5336, float 0.000000e+00, i32 2
  %5338 = insertelement <4 x float> %5337, float 0.000000e+00, i32 3
  %5339 = load float, float* %0, align 4
  %5340 = insertelement <4 x float> zeroinitializer, float %5339, i32 0
  %5341 = insertelement <4 x float> %5340, float 0.000000e+00, i32 1
  %5342 = insertelement <4 x float> %5341, float 0.000000e+00, i32 2
  %5343 = insertelement <4 x float> %5342, float 0.000000e+00, i32 3
  %5344 = call <4 x float> @llvm.fma.f32.156(<4 x float> %5338, <4 x float> %5343, <4 x float> zeroinitializer)
  %5345 = extractelement <4 x float> %5344, i32 0
  store float %5345, float* %2, align 4
  %5346 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5347 = bitcast i8* %5346 to float*
  %5348 = load float, float* %5347, align 4
  %5349 = insertelement <4 x float> zeroinitializer, float %5348, i32 0
  %5350 = insertelement <4 x float> %5349, float 1.000000e+00, i32 1
  %5351 = insertelement <4 x float> %5350, float 1.000000e+00, i32 2
  %5352 = insertelement <4 x float> %5351, float 1.000000e+00, i32 3
  %5353 = load float, float* %0, align 4
  %5354 = insertelement <4 x float> zeroinitializer, float %5353, i32 0
  %5355 = insertelement <4 x float> %5354, float 0.000000e+00, i32 1
  %5356 = insertelement <4 x float> %5355, float 0.000000e+00, i32 2
  %5357 = insertelement <4 x float> %5356, float 0.000000e+00, i32 3
  %5358 = fmul <4 x float> %5352, %5357
  %5359 = fadd <4 x float> %5358, zeroinitializer
  %5360 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5361 = getelementptr inbounds i8, i8* %5360, i64 4
  %5362 = bitcast i8* %5361 to float*
  %5363 = load float, float* %5362, align 4
  %5364 = insertelement <4 x float> zeroinitializer, float %5363, i32 0
  %5365 = insertelement <4 x float> %5364, float 0.000000e+00, i32 1
  %5366 = insertelement <4 x float> %5365, float 0.000000e+00, i32 2
  %5367 = insertelement <4 x float> %5366, float 0.000000e+00, i32 3
  %5368 = getelementptr inbounds float, float* %0, i64 4
  %5369 = load float, float* %5368, align 4
  %5370 = insertelement <4 x float> zeroinitializer, float %5369, i32 0
  %5371 = insertelement <4 x float> %5370, float 0.000000e+00, i32 1
  %5372 = insertelement <4 x float> %5371, float 0.000000e+00, i32 2
  %5373 = insertelement <4 x float> %5372, float 0.000000e+00, i32 3
  %5374 = call <4 x float> @llvm.fma.f32.157(<4 x float> %5367, <4 x float> %5373, <4 x float> %5359)
  %5375 = extractelement <4 x float> %5374, i32 0
  store float %5375, float* %2, align 4
  %5376 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5377 = bitcast i8* %5376 to float*
  %5378 = load float, float* %5377, align 4
  %5379 = insertelement <4 x float> zeroinitializer, float %5378, i32 0
  %5380 = insertelement <4 x float> %5379, float 1.000000e+00, i32 1
  %5381 = insertelement <4 x float> %5380, float 1.000000e+00, i32 2
  %5382 = insertelement <4 x float> %5381, float 1.000000e+00, i32 3
  %5383 = load float, float* %0, align 4
  %5384 = insertelement <4 x float> zeroinitializer, float %5383, i32 0
  %5385 = insertelement <4 x float> %5384, float 0.000000e+00, i32 1
  %5386 = insertelement <4 x float> %5385, float 0.000000e+00, i32 2
  %5387 = insertelement <4 x float> %5386, float 0.000000e+00, i32 3
  %5388 = fmul <4 x float> %5382, %5387
  %5389 = fadd <4 x float> %5388, zeroinitializer
  %5390 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5391 = getelementptr inbounds i8, i8* %5390, i64 4
  %5392 = bitcast i8* %5391 to float*
  %5393 = load float, float* %5392, align 4
  %5394 = insertelement <4 x float> zeroinitializer, float %5393, i32 0
  %5395 = insertelement <4 x float> %5394, float 1.000000e+00, i32 1
  %5396 = insertelement <4 x float> %5395, float 1.000000e+00, i32 2
  %5397 = insertelement <4 x float> %5396, float 1.000000e+00, i32 3
  %5398 = getelementptr inbounds float, float* %0, i64 4
  %5399 = load float, float* %5398, align 4
  %5400 = insertelement <4 x float> zeroinitializer, float %5399, i32 0
  %5401 = insertelement <4 x float> %5400, float 0.000000e+00, i32 1
  %5402 = insertelement <4 x float> %5401, float 0.000000e+00, i32 2
  %5403 = insertelement <4 x float> %5402, float 0.000000e+00, i32 3
  %5404 = call <4 x float> @llvm.fma.f32.158(<4 x float> %5397, <4 x float> %5403, <4 x float> %5389)
  %5405 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5406 = getelementptr inbounds i8, i8* %5405, i64 8
  %5407 = bitcast i8* %5406 to float*
  %5408 = load float, float* %5407, align 4
  %5409 = insertelement <4 x float> zeroinitializer, float %5408, i32 0
  %5410 = insertelement <4 x float> %5409, float 0.000000e+00, i32 1
  %5411 = insertelement <4 x float> %5410, float 0.000000e+00, i32 2
  %5412 = insertelement <4 x float> %5411, float 0.000000e+00, i32 3
  %5413 = getelementptr inbounds float, float* %0, i64 8
  %5414 = load float, float* %5413, align 4
  %5415 = insertelement <4 x float> zeroinitializer, float %5414, i32 0
  %5416 = insertelement <4 x float> %5415, float 0.000000e+00, i32 1
  %5417 = insertelement <4 x float> %5416, float 0.000000e+00, i32 2
  %5418 = insertelement <4 x float> %5417, float 0.000000e+00, i32 3
  %5419 = call <4 x float> @llvm.fma.f32.159(<4 x float> %5412, <4 x float> %5418, <4 x float> %5404)
  %5420 = extractelement <4 x float> %5419, i32 0
  store float %5420, float* %2, align 4
  %5421 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5422 = bitcast i8* %5421 to float*
  %5423 = load float, float* %5422, align 4
  %5424 = insertelement <4 x float> zeroinitializer, float %5423, i32 0
  %5425 = insertelement <4 x float> %5424, float 1.000000e+00, i32 1
  %5426 = insertelement <4 x float> %5425, float 1.000000e+00, i32 2
  %5427 = insertelement <4 x float> %5426, float 1.000000e+00, i32 3
  %5428 = load float, float* %0, align 4
  %5429 = insertelement <4 x float> zeroinitializer, float %5428, i32 0
  %5430 = insertelement <4 x float> %5429, float 0.000000e+00, i32 1
  %5431 = insertelement <4 x float> %5430, float 0.000000e+00, i32 2
  %5432 = insertelement <4 x float> %5431, float 0.000000e+00, i32 3
  %5433 = fmul <4 x float> %5427, %5432
  %5434 = fadd <4 x float> %5433, zeroinitializer
  %5435 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5436 = getelementptr inbounds i8, i8* %5435, i64 4
  %5437 = bitcast i8* %5436 to float*
  %5438 = load float, float* %5437, align 4
  %5439 = insertelement <4 x float> zeroinitializer, float %5438, i32 0
  %5440 = insertelement <4 x float> %5439, float 1.000000e+00, i32 1
  %5441 = insertelement <4 x float> %5440, float 1.000000e+00, i32 2
  %5442 = insertelement <4 x float> %5441, float 1.000000e+00, i32 3
  %5443 = getelementptr inbounds float, float* %0, i64 4
  %5444 = load float, float* %5443, align 4
  %5445 = insertelement <4 x float> zeroinitializer, float %5444, i32 0
  %5446 = insertelement <4 x float> %5445, float 0.000000e+00, i32 1
  %5447 = insertelement <4 x float> %5446, float 0.000000e+00, i32 2
  %5448 = insertelement <4 x float> %5447, float 0.000000e+00, i32 3
  %5449 = call <4 x float> @llvm.fma.f32.160(<4 x float> %5442, <4 x float> %5448, <4 x float> %5434)
  %5450 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5451 = getelementptr inbounds i8, i8* %5450, i64 8
  %5452 = bitcast i8* %5451 to float*
  %5453 = load float, float* %5452, align 4
  %5454 = insertelement <4 x float> zeroinitializer, float %5453, i32 0
  %5455 = insertelement <4 x float> %5454, float 1.000000e+00, i32 1
  %5456 = insertelement <4 x float> %5455, float 1.000000e+00, i32 2
  %5457 = insertelement <4 x float> %5456, float 1.000000e+00, i32 3
  %5458 = getelementptr inbounds float, float* %0, i64 8
  %5459 = load float, float* %5458, align 4
  %5460 = insertelement <4 x float> zeroinitializer, float %5459, i32 0
  %5461 = insertelement <4 x float> %5460, float 0.000000e+00, i32 1
  %5462 = insertelement <4 x float> %5461, float 0.000000e+00, i32 2
  %5463 = insertelement <4 x float> %5462, float 0.000000e+00, i32 3
  %5464 = call <4 x float> @llvm.fma.f32.161(<4 x float> %5457, <4 x float> %5463, <4 x float> %5449)
  %5465 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5466 = getelementptr inbounds i8, i8* %5465, i64 12
  %5467 = bitcast i8* %5466 to float*
  %5468 = load float, float* %5467, align 4
  %5469 = insertelement <4 x float> zeroinitializer, float %5468, i32 0
  %5470 = insertelement <4 x float> %5469, float 0.000000e+00, i32 1
  %5471 = insertelement <4 x float> %5470, float 0.000000e+00, i32 2
  %5472 = insertelement <4 x float> %5471, float 0.000000e+00, i32 3
  %5473 = getelementptr inbounds float, float* %0, i64 12
  %5474 = load float, float* %5473, align 4
  %5475 = insertelement <4 x float> zeroinitializer, float %5474, i32 0
  %5476 = insertelement <4 x float> %5475, float 0.000000e+00, i32 1
  %5477 = insertelement <4 x float> %5476, float 0.000000e+00, i32 2
  %5478 = insertelement <4 x float> %5477, float 0.000000e+00, i32 3
  %5479 = call <4 x float> @llvm.fma.f32.162(<4 x float> %5472, <4 x float> %5478, <4 x float> %5464)
  %5480 = extractelement <4 x float> %5479, i32 0
  store float %5480, float* %2, align 4
  %5481 = extractelement <4 x float> %5479, i32 1
  %5482 = getelementptr inbounds float, float* %2, i64 1
  store float %5481, float* %5482, align 4
  %5483 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5484 = bitcast i8* %5483 to float*
  %5485 = load float, float* %5484, align 4
  %5486 = insertelement <4 x float> zeroinitializer, float %5485, i32 0
  %5487 = insertelement <4 x float> %5486, float 0.000000e+00, i32 1
  %5488 = insertelement <4 x float> %5487, float 0.000000e+00, i32 2
  %5489 = insertelement <4 x float> %5488, float 0.000000e+00, i32 3
  %5490 = getelementptr inbounds float, float* %0, i64 1
  %5491 = load float, float* %5490, align 4
  %5492 = insertelement <4 x float> zeroinitializer, float %5491, i32 0
  %5493 = insertelement <4 x float> %5492, float 0.000000e+00, i32 1
  %5494 = insertelement <4 x float> %5493, float 0.000000e+00, i32 2
  %5495 = insertelement <4 x float> %5494, float 0.000000e+00, i32 3
  %5496 = call <4 x float> @llvm.fma.f32.163(<4 x float> %5489, <4 x float> %5495, <4 x float> zeroinitializer)
  %5497 = extractelement <4 x float> %5496, i32 0
  %5498 = getelementptr inbounds float, float* %2, i64 1
  store float %5497, float* %5498, align 4
  %5499 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5500 = bitcast i8* %5499 to float*
  %5501 = load float, float* %5500, align 4
  %5502 = insertelement <4 x float> zeroinitializer, float %5501, i32 0
  %5503 = insertelement <4 x float> %5502, float 1.000000e+00, i32 1
  %5504 = insertelement <4 x float> %5503, float 1.000000e+00, i32 2
  %5505 = insertelement <4 x float> %5504, float 1.000000e+00, i32 3
  %5506 = getelementptr inbounds float, float* %0, i64 1
  %5507 = load float, float* %5506, align 4
  %5508 = insertelement <4 x float> zeroinitializer, float %5507, i32 0
  %5509 = insertelement <4 x float> %5508, float 0.000000e+00, i32 1
  %5510 = insertelement <4 x float> %5509, float 0.000000e+00, i32 2
  %5511 = insertelement <4 x float> %5510, float 0.000000e+00, i32 3
  %5512 = fmul <4 x float> %5505, %5511
  %5513 = fadd <4 x float> %5512, zeroinitializer
  %5514 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5515 = getelementptr inbounds i8, i8* %5514, i64 4
  %5516 = bitcast i8* %5515 to float*
  %5517 = load float, float* %5516, align 4
  %5518 = insertelement <4 x float> zeroinitializer, float %5517, i32 0
  %5519 = insertelement <4 x float> %5518, float 0.000000e+00, i32 1
  %5520 = insertelement <4 x float> %5519, float 0.000000e+00, i32 2
  %5521 = insertelement <4 x float> %5520, float 0.000000e+00, i32 3
  %5522 = getelementptr inbounds float, float* %0, i64 5
  %5523 = load float, float* %5522, align 4
  %5524 = insertelement <4 x float> zeroinitializer, float %5523, i32 0
  %5525 = insertelement <4 x float> %5524, float 0.000000e+00, i32 1
  %5526 = insertelement <4 x float> %5525, float 0.000000e+00, i32 2
  %5527 = insertelement <4 x float> %5526, float 0.000000e+00, i32 3
  %5528 = call <4 x float> @llvm.fma.f32.164(<4 x float> %5521, <4 x float> %5527, <4 x float> %5513)
  %5529 = extractelement <4 x float> %5528, i32 0
  %5530 = getelementptr inbounds float, float* %2, i64 1
  store float %5529, float* %5530, align 4
  %5531 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5532 = bitcast i8* %5531 to float*
  %5533 = load float, float* %5532, align 4
  %5534 = insertelement <4 x float> zeroinitializer, float %5533, i32 0
  %5535 = insertelement <4 x float> %5534, float 1.000000e+00, i32 1
  %5536 = insertelement <4 x float> %5535, float 1.000000e+00, i32 2
  %5537 = insertelement <4 x float> %5536, float 1.000000e+00, i32 3
  %5538 = getelementptr inbounds float, float* %0, i64 1
  %5539 = load float, float* %5538, align 4
  %5540 = insertelement <4 x float> zeroinitializer, float %5539, i32 0
  %5541 = insertelement <4 x float> %5540, float 0.000000e+00, i32 1
  %5542 = insertelement <4 x float> %5541, float 0.000000e+00, i32 2
  %5543 = insertelement <4 x float> %5542, float 0.000000e+00, i32 3
  %5544 = fmul <4 x float> %5537, %5543
  %5545 = fadd <4 x float> %5544, zeroinitializer
  %5546 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5547 = getelementptr inbounds i8, i8* %5546, i64 4
  %5548 = bitcast i8* %5547 to float*
  %5549 = load float, float* %5548, align 4
  %5550 = insertelement <4 x float> zeroinitializer, float %5549, i32 0
  %5551 = insertelement <4 x float> %5550, float 1.000000e+00, i32 1
  %5552 = insertelement <4 x float> %5551, float 1.000000e+00, i32 2
  %5553 = insertelement <4 x float> %5552, float 1.000000e+00, i32 3
  %5554 = getelementptr inbounds float, float* %0, i64 5
  %5555 = load float, float* %5554, align 4
  %5556 = insertelement <4 x float> zeroinitializer, float %5555, i32 0
  %5557 = insertelement <4 x float> %5556, float 0.000000e+00, i32 1
  %5558 = insertelement <4 x float> %5557, float 0.000000e+00, i32 2
  %5559 = insertelement <4 x float> %5558, float 0.000000e+00, i32 3
  %5560 = call <4 x float> @llvm.fma.f32.165(<4 x float> %5553, <4 x float> %5559, <4 x float> %5545)
  %5561 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5562 = getelementptr inbounds i8, i8* %5561, i64 8
  %5563 = bitcast i8* %5562 to float*
  %5564 = load float, float* %5563, align 4
  %5565 = insertelement <4 x float> zeroinitializer, float %5564, i32 0
  %5566 = insertelement <4 x float> %5565, float 0.000000e+00, i32 1
  %5567 = insertelement <4 x float> %5566, float 0.000000e+00, i32 2
  %5568 = insertelement <4 x float> %5567, float 0.000000e+00, i32 3
  %5569 = getelementptr inbounds float, float* %0, i64 9
  %5570 = load float, float* %5569, align 4
  %5571 = insertelement <4 x float> zeroinitializer, float %5570, i32 0
  %5572 = insertelement <4 x float> %5571, float 0.000000e+00, i32 1
  %5573 = insertelement <4 x float> %5572, float 0.000000e+00, i32 2
  %5574 = insertelement <4 x float> %5573, float 0.000000e+00, i32 3
  %5575 = call <4 x float> @llvm.fma.f32.166(<4 x float> %5568, <4 x float> %5574, <4 x float> %5560)
  %5576 = extractelement <4 x float> %5575, i32 0
  %5577 = getelementptr inbounds float, float* %2, i64 1
  store float %5576, float* %5577, align 4
  %5578 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5579 = bitcast i8* %5578 to float*
  %5580 = load float, float* %5579, align 4
  %5581 = insertelement <4 x float> zeroinitializer, float %5580, i32 0
  %5582 = insertelement <4 x float> %5581, float 1.000000e+00, i32 1
  %5583 = insertelement <4 x float> %5582, float 1.000000e+00, i32 2
  %5584 = insertelement <4 x float> %5583, float 1.000000e+00, i32 3
  %5585 = getelementptr inbounds float, float* %0, i64 1
  %5586 = load float, float* %5585, align 4
  %5587 = insertelement <4 x float> zeroinitializer, float %5586, i32 0
  %5588 = insertelement <4 x float> %5587, float 0.000000e+00, i32 1
  %5589 = insertelement <4 x float> %5588, float 0.000000e+00, i32 2
  %5590 = insertelement <4 x float> %5589, float 0.000000e+00, i32 3
  %5591 = fmul <4 x float> %5584, %5590
  %5592 = fadd <4 x float> %5591, zeroinitializer
  %5593 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5594 = getelementptr inbounds i8, i8* %5593, i64 4
  %5595 = bitcast i8* %5594 to float*
  %5596 = load float, float* %5595, align 4
  %5597 = insertelement <4 x float> zeroinitializer, float %5596, i32 0
  %5598 = insertelement <4 x float> %5597, float 1.000000e+00, i32 1
  %5599 = insertelement <4 x float> %5598, float 1.000000e+00, i32 2
  %5600 = insertelement <4 x float> %5599, float 1.000000e+00, i32 3
  %5601 = getelementptr inbounds float, float* %0, i64 5
  %5602 = load float, float* %5601, align 4
  %5603 = insertelement <4 x float> zeroinitializer, float %5602, i32 0
  %5604 = insertelement <4 x float> %5603, float 0.000000e+00, i32 1
  %5605 = insertelement <4 x float> %5604, float 0.000000e+00, i32 2
  %5606 = insertelement <4 x float> %5605, float 0.000000e+00, i32 3
  %5607 = call <4 x float> @llvm.fma.f32.167(<4 x float> %5600, <4 x float> %5606, <4 x float> %5592)
  %5608 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5609 = getelementptr inbounds i8, i8* %5608, i64 8
  %5610 = bitcast i8* %5609 to float*
  %5611 = load float, float* %5610, align 4
  %5612 = insertelement <4 x float> zeroinitializer, float %5611, i32 0
  %5613 = insertelement <4 x float> %5612, float 1.000000e+00, i32 1
  %5614 = insertelement <4 x float> %5613, float 1.000000e+00, i32 2
  %5615 = insertelement <4 x float> %5614, float 1.000000e+00, i32 3
  %5616 = getelementptr inbounds float, float* %0, i64 9
  %5617 = load float, float* %5616, align 4
  %5618 = insertelement <4 x float> zeroinitializer, float %5617, i32 0
  %5619 = insertelement <4 x float> %5618, float 0.000000e+00, i32 1
  %5620 = insertelement <4 x float> %5619, float 0.000000e+00, i32 2
  %5621 = insertelement <4 x float> %5620, float 0.000000e+00, i32 3
  %5622 = call <4 x float> @llvm.fma.f32.168(<4 x float> %5615, <4 x float> %5621, <4 x float> %5607)
  %5623 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5624 = getelementptr inbounds i8, i8* %5623, i64 12
  %5625 = bitcast i8* %5624 to float*
  %5626 = load float, float* %5625, align 4
  %5627 = insertelement <4 x float> zeroinitializer, float %5626, i32 0
  %5628 = insertelement <4 x float> %5627, float 0.000000e+00, i32 1
  %5629 = insertelement <4 x float> %5628, float 0.000000e+00, i32 2
  %5630 = insertelement <4 x float> %5629, float 0.000000e+00, i32 3
  %5631 = getelementptr inbounds float, float* %0, i64 13
  %5632 = load float, float* %5631, align 4
  %5633 = insertelement <4 x float> zeroinitializer, float %5632, i32 0
  %5634 = insertelement <4 x float> %5633, float 0.000000e+00, i32 1
  %5635 = insertelement <4 x float> %5634, float 0.000000e+00, i32 2
  %5636 = insertelement <4 x float> %5635, float 0.000000e+00, i32 3
  %5637 = call <4 x float> @llvm.fma.f32.169(<4 x float> %5630, <4 x float> %5636, <4 x float> %5622)
  %5638 = extractelement <4 x float> %5637, i32 0
  %5639 = getelementptr inbounds float, float* %2, i64 1
  store float %5638, float* %5639, align 4
  %5640 = extractelement <4 x float> %5637, i32 1
  %5641 = getelementptr inbounds float, float* %2, i64 2
  store float %5640, float* %5641, align 4
  %5642 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5643 = bitcast i8* %5642 to float*
  %5644 = load float, float* %5643, align 4
  %5645 = insertelement <4 x float> zeroinitializer, float %5644, i32 0
  %5646 = insertelement <4 x float> %5645, float 0.000000e+00, i32 1
  %5647 = insertelement <4 x float> %5646, float 0.000000e+00, i32 2
  %5648 = insertelement <4 x float> %5647, float 0.000000e+00, i32 3
  %5649 = getelementptr inbounds float, float* %0, i64 2
  %5650 = load float, float* %5649, align 4
  %5651 = insertelement <4 x float> zeroinitializer, float %5650, i32 0
  %5652 = insertelement <4 x float> %5651, float 0.000000e+00, i32 1
  %5653 = insertelement <4 x float> %5652, float 0.000000e+00, i32 2
  %5654 = insertelement <4 x float> %5653, float 0.000000e+00, i32 3
  %5655 = call <4 x float> @llvm.fma.f32.170(<4 x float> %5648, <4 x float> %5654, <4 x float> zeroinitializer)
  %5656 = extractelement <4 x float> %5655, i32 0
  %5657 = getelementptr inbounds float, float* %2, i64 2
  store float %5656, float* %5657, align 4
  %5658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5659 = bitcast i8* %5658 to float*
  %5660 = load float, float* %5659, align 4
  %5661 = insertelement <4 x float> zeroinitializer, float %5660, i32 0
  %5662 = insertelement <4 x float> %5661, float 1.000000e+00, i32 1
  %5663 = insertelement <4 x float> %5662, float 1.000000e+00, i32 2
  %5664 = insertelement <4 x float> %5663, float 1.000000e+00, i32 3
  %5665 = getelementptr inbounds float, float* %0, i64 2
  %5666 = load float, float* %5665, align 4
  %5667 = insertelement <4 x float> zeroinitializer, float %5666, i32 0
  %5668 = insertelement <4 x float> %5667, float 0.000000e+00, i32 1
  %5669 = insertelement <4 x float> %5668, float 0.000000e+00, i32 2
  %5670 = insertelement <4 x float> %5669, float 0.000000e+00, i32 3
  %5671 = fmul <4 x float> %5664, %5670
  %5672 = fadd <4 x float> %5671, zeroinitializer
  %5673 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5674 = getelementptr inbounds i8, i8* %5673, i64 4
  %5675 = bitcast i8* %5674 to float*
  %5676 = load float, float* %5675, align 4
  %5677 = insertelement <4 x float> zeroinitializer, float %5676, i32 0
  %5678 = insertelement <4 x float> %5677, float 0.000000e+00, i32 1
  %5679 = insertelement <4 x float> %5678, float 0.000000e+00, i32 2
  %5680 = insertelement <4 x float> %5679, float 0.000000e+00, i32 3
  %5681 = getelementptr inbounds float, float* %0, i64 6
  %5682 = load float, float* %5681, align 4
  %5683 = insertelement <4 x float> zeroinitializer, float %5682, i32 0
  %5684 = insertelement <4 x float> %5683, float 0.000000e+00, i32 1
  %5685 = insertelement <4 x float> %5684, float 0.000000e+00, i32 2
  %5686 = insertelement <4 x float> %5685, float 0.000000e+00, i32 3
  %5687 = call <4 x float> @llvm.fma.f32.171(<4 x float> %5680, <4 x float> %5686, <4 x float> %5672)
  %5688 = extractelement <4 x float> %5687, i32 0
  %5689 = getelementptr inbounds float, float* %2, i64 2
  store float %5688, float* %5689, align 4
  %5690 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5691 = bitcast i8* %5690 to float*
  %5692 = load float, float* %5691, align 4
  %5693 = insertelement <4 x float> zeroinitializer, float %5692, i32 0
  %5694 = insertelement <4 x float> %5693, float 1.000000e+00, i32 1
  %5695 = insertelement <4 x float> %5694, float 1.000000e+00, i32 2
  %5696 = insertelement <4 x float> %5695, float 1.000000e+00, i32 3
  %5697 = getelementptr inbounds float, float* %0, i64 2
  %5698 = load float, float* %5697, align 4
  %5699 = insertelement <4 x float> zeroinitializer, float %5698, i32 0
  %5700 = insertelement <4 x float> %5699, float 0.000000e+00, i32 1
  %5701 = insertelement <4 x float> %5700, float 0.000000e+00, i32 2
  %5702 = insertelement <4 x float> %5701, float 0.000000e+00, i32 3
  %5703 = fmul <4 x float> %5696, %5702
  %5704 = fadd <4 x float> %5703, zeroinitializer
  %5705 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5706 = getelementptr inbounds i8, i8* %5705, i64 4
  %5707 = bitcast i8* %5706 to float*
  %5708 = load float, float* %5707, align 4
  %5709 = insertelement <4 x float> zeroinitializer, float %5708, i32 0
  %5710 = insertelement <4 x float> %5709, float 1.000000e+00, i32 1
  %5711 = insertelement <4 x float> %5710, float 1.000000e+00, i32 2
  %5712 = insertelement <4 x float> %5711, float 1.000000e+00, i32 3
  %5713 = getelementptr inbounds float, float* %0, i64 6
  %5714 = load float, float* %5713, align 4
  %5715 = insertelement <4 x float> zeroinitializer, float %5714, i32 0
  %5716 = insertelement <4 x float> %5715, float 0.000000e+00, i32 1
  %5717 = insertelement <4 x float> %5716, float 0.000000e+00, i32 2
  %5718 = insertelement <4 x float> %5717, float 0.000000e+00, i32 3
  %5719 = call <4 x float> @llvm.fma.f32.172(<4 x float> %5712, <4 x float> %5718, <4 x float> %5704)
  %5720 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5721 = getelementptr inbounds i8, i8* %5720, i64 8
  %5722 = bitcast i8* %5721 to float*
  %5723 = load float, float* %5722, align 4
  %5724 = insertelement <4 x float> zeroinitializer, float %5723, i32 0
  %5725 = insertelement <4 x float> %5724, float 0.000000e+00, i32 1
  %5726 = insertelement <4 x float> %5725, float 0.000000e+00, i32 2
  %5727 = insertelement <4 x float> %5726, float 0.000000e+00, i32 3
  %5728 = getelementptr inbounds float, float* %0, i64 10
  %5729 = load float, float* %5728, align 4
  %5730 = insertelement <4 x float> zeroinitializer, float %5729, i32 0
  %5731 = insertelement <4 x float> %5730, float 0.000000e+00, i32 1
  %5732 = insertelement <4 x float> %5731, float 0.000000e+00, i32 2
  %5733 = insertelement <4 x float> %5732, float 0.000000e+00, i32 3
  %5734 = call <4 x float> @llvm.fma.f32.173(<4 x float> %5727, <4 x float> %5733, <4 x float> %5719)
  %5735 = extractelement <4 x float> %5734, i32 0
  %5736 = getelementptr inbounds float, float* %2, i64 2
  store float %5735, float* %5736, align 4
  %5737 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5738 = bitcast i8* %5737 to float*
  %5739 = load float, float* %5738, align 4
  %5740 = insertelement <4 x float> zeroinitializer, float %5739, i32 0
  %5741 = insertelement <4 x float> %5740, float 1.000000e+00, i32 1
  %5742 = insertelement <4 x float> %5741, float 1.000000e+00, i32 2
  %5743 = insertelement <4 x float> %5742, float 1.000000e+00, i32 3
  %5744 = getelementptr inbounds float, float* %0, i64 2
  %5745 = load float, float* %5744, align 4
  %5746 = insertelement <4 x float> zeroinitializer, float %5745, i32 0
  %5747 = insertelement <4 x float> %5746, float 0.000000e+00, i32 1
  %5748 = insertelement <4 x float> %5747, float 0.000000e+00, i32 2
  %5749 = insertelement <4 x float> %5748, float 0.000000e+00, i32 3
  %5750 = fmul <4 x float> %5743, %5749
  %5751 = fadd <4 x float> %5750, zeroinitializer
  %5752 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5753 = getelementptr inbounds i8, i8* %5752, i64 4
  %5754 = bitcast i8* %5753 to float*
  %5755 = load float, float* %5754, align 4
  %5756 = insertelement <4 x float> zeroinitializer, float %5755, i32 0
  %5757 = insertelement <4 x float> %5756, float 1.000000e+00, i32 1
  %5758 = insertelement <4 x float> %5757, float 1.000000e+00, i32 2
  %5759 = insertelement <4 x float> %5758, float 1.000000e+00, i32 3
  %5760 = getelementptr inbounds float, float* %0, i64 6
  %5761 = load float, float* %5760, align 4
  %5762 = insertelement <4 x float> zeroinitializer, float %5761, i32 0
  %5763 = insertelement <4 x float> %5762, float 0.000000e+00, i32 1
  %5764 = insertelement <4 x float> %5763, float 0.000000e+00, i32 2
  %5765 = insertelement <4 x float> %5764, float 0.000000e+00, i32 3
  %5766 = call <4 x float> @llvm.fma.f32.174(<4 x float> %5759, <4 x float> %5765, <4 x float> %5751)
  %5767 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5768 = getelementptr inbounds i8, i8* %5767, i64 8
  %5769 = bitcast i8* %5768 to float*
  %5770 = load float, float* %5769, align 4
  %5771 = insertelement <4 x float> zeroinitializer, float %5770, i32 0
  %5772 = insertelement <4 x float> %5771, float 1.000000e+00, i32 1
  %5773 = insertelement <4 x float> %5772, float 1.000000e+00, i32 2
  %5774 = insertelement <4 x float> %5773, float 1.000000e+00, i32 3
  %5775 = getelementptr inbounds float, float* %0, i64 10
  %5776 = load float, float* %5775, align 4
  %5777 = insertelement <4 x float> zeroinitializer, float %5776, i32 0
  %5778 = insertelement <4 x float> %5777, float 0.000000e+00, i32 1
  %5779 = insertelement <4 x float> %5778, float 0.000000e+00, i32 2
  %5780 = insertelement <4 x float> %5779, float 0.000000e+00, i32 3
  %5781 = call <4 x float> @llvm.fma.f32.175(<4 x float> %5774, <4 x float> %5780, <4 x float> %5766)
  %5782 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5783 = getelementptr inbounds i8, i8* %5782, i64 12
  %5784 = bitcast i8* %5783 to float*
  %5785 = load float, float* %5784, align 4
  %5786 = insertelement <4 x float> zeroinitializer, float %5785, i32 0
  %5787 = insertelement <4 x float> %5786, float 0.000000e+00, i32 1
  %5788 = insertelement <4 x float> %5787, float 0.000000e+00, i32 2
  %5789 = insertelement <4 x float> %5788, float 0.000000e+00, i32 3
  %5790 = getelementptr inbounds float, float* %0, i64 14
  %5791 = load float, float* %5790, align 4
  %5792 = insertelement <4 x float> zeroinitializer, float %5791, i32 0
  %5793 = insertelement <4 x float> %5792, float 0.000000e+00, i32 1
  %5794 = insertelement <4 x float> %5793, float 0.000000e+00, i32 2
  %5795 = insertelement <4 x float> %5794, float 0.000000e+00, i32 3
  %5796 = call <4 x float> @llvm.fma.f32.176(<4 x float> %5789, <4 x float> %5795, <4 x float> %5781)
  %5797 = extractelement <4 x float> %5796, i32 0
  %5798 = getelementptr inbounds float, float* %2, i64 2
  store float %5797, float* %5798, align 4
  %5799 = extractelement <4 x float> %5796, i32 1
  %5800 = getelementptr inbounds float, float* %2, i64 3
  store float %5799, float* %5800, align 4
  %5801 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5802 = bitcast i8* %5801 to float*
  %5803 = load float, float* %5802, align 4
  %5804 = insertelement <4 x float> zeroinitializer, float %5803, i32 0
  %5805 = insertelement <4 x float> %5804, float 0.000000e+00, i32 1
  %5806 = insertelement <4 x float> %5805, float 0.000000e+00, i32 2
  %5807 = insertelement <4 x float> %5806, float 0.000000e+00, i32 3
  %5808 = getelementptr inbounds float, float* %0, i64 3
  %5809 = load float, float* %5808, align 4
  %5810 = insertelement <4 x float> zeroinitializer, float %5809, i32 0
  %5811 = insertelement <4 x float> %5810, float 0.000000e+00, i32 1
  %5812 = insertelement <4 x float> %5811, float 0.000000e+00, i32 2
  %5813 = insertelement <4 x float> %5812, float 0.000000e+00, i32 3
  %5814 = call <4 x float> @llvm.fma.f32.177(<4 x float> %5807, <4 x float> %5813, <4 x float> zeroinitializer)
  %5815 = extractelement <4 x float> %5814, i32 0
  %5816 = getelementptr inbounds float, float* %2, i64 3
  store float %5815, float* %5816, align 4
  %5817 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5818 = bitcast i8* %5817 to float*
  %5819 = load float, float* %5818, align 4
  %5820 = insertelement <4 x float> zeroinitializer, float %5819, i32 0
  %5821 = insertelement <4 x float> %5820, float 1.000000e+00, i32 1
  %5822 = insertelement <4 x float> %5821, float 1.000000e+00, i32 2
  %5823 = insertelement <4 x float> %5822, float 1.000000e+00, i32 3
  %5824 = getelementptr inbounds float, float* %0, i64 3
  %5825 = load float, float* %5824, align 4
  %5826 = insertelement <4 x float> zeroinitializer, float %5825, i32 0
  %5827 = insertelement <4 x float> %5826, float 0.000000e+00, i32 1
  %5828 = insertelement <4 x float> %5827, float 0.000000e+00, i32 2
  %5829 = insertelement <4 x float> %5828, float 0.000000e+00, i32 3
  %5830 = fmul <4 x float> %5823, %5829
  %5831 = fadd <4 x float> %5830, zeroinitializer
  %5832 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5833 = getelementptr inbounds i8, i8* %5832, i64 4
  %5834 = bitcast i8* %5833 to float*
  %5835 = load float, float* %5834, align 4
  %5836 = insertelement <4 x float> zeroinitializer, float %5835, i32 0
  %5837 = insertelement <4 x float> %5836, float 0.000000e+00, i32 1
  %5838 = insertelement <4 x float> %5837, float 0.000000e+00, i32 2
  %5839 = insertelement <4 x float> %5838, float 0.000000e+00, i32 3
  %5840 = getelementptr inbounds float, float* %0, i64 7
  %5841 = load float, float* %5840, align 4
  %5842 = insertelement <4 x float> zeroinitializer, float %5841, i32 0
  %5843 = insertelement <4 x float> %5842, float 0.000000e+00, i32 1
  %5844 = insertelement <4 x float> %5843, float 0.000000e+00, i32 2
  %5845 = insertelement <4 x float> %5844, float 0.000000e+00, i32 3
  %5846 = call <4 x float> @llvm.fma.f32.178(<4 x float> %5839, <4 x float> %5845, <4 x float> %5831)
  %5847 = extractelement <4 x float> %5846, i32 0
  %5848 = getelementptr inbounds float, float* %2, i64 3
  store float %5847, float* %5848, align 4
  %5849 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5850 = bitcast i8* %5849 to float*
  %5851 = load float, float* %5850, align 4
  %5852 = insertelement <4 x float> zeroinitializer, float %5851, i32 0
  %5853 = insertelement <4 x float> %5852, float 1.000000e+00, i32 1
  %5854 = insertelement <4 x float> %5853, float 1.000000e+00, i32 2
  %5855 = insertelement <4 x float> %5854, float 1.000000e+00, i32 3
  %5856 = getelementptr inbounds float, float* %0, i64 3
  %5857 = load float, float* %5856, align 4
  %5858 = insertelement <4 x float> zeroinitializer, float %5857, i32 0
  %5859 = insertelement <4 x float> %5858, float 0.000000e+00, i32 1
  %5860 = insertelement <4 x float> %5859, float 0.000000e+00, i32 2
  %5861 = insertelement <4 x float> %5860, float 0.000000e+00, i32 3
  %5862 = fmul <4 x float> %5855, %5861
  %5863 = fadd <4 x float> %5862, zeroinitializer
  %5864 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5865 = getelementptr inbounds i8, i8* %5864, i64 4
  %5866 = bitcast i8* %5865 to float*
  %5867 = load float, float* %5866, align 4
  %5868 = insertelement <4 x float> zeroinitializer, float %5867, i32 0
  %5869 = insertelement <4 x float> %5868, float 1.000000e+00, i32 1
  %5870 = insertelement <4 x float> %5869, float 1.000000e+00, i32 2
  %5871 = insertelement <4 x float> %5870, float 1.000000e+00, i32 3
  %5872 = getelementptr inbounds float, float* %0, i64 7
  %5873 = load float, float* %5872, align 4
  %5874 = insertelement <4 x float> zeroinitializer, float %5873, i32 0
  %5875 = insertelement <4 x float> %5874, float 0.000000e+00, i32 1
  %5876 = insertelement <4 x float> %5875, float 0.000000e+00, i32 2
  %5877 = insertelement <4 x float> %5876, float 0.000000e+00, i32 3
  %5878 = call <4 x float> @llvm.fma.f32.179(<4 x float> %5871, <4 x float> %5877, <4 x float> %5863)
  %5879 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5880 = getelementptr inbounds i8, i8* %5879, i64 8
  %5881 = bitcast i8* %5880 to float*
  %5882 = load float, float* %5881, align 4
  %5883 = insertelement <4 x float> zeroinitializer, float %5882, i32 0
  %5884 = insertelement <4 x float> %5883, float 0.000000e+00, i32 1
  %5885 = insertelement <4 x float> %5884, float 0.000000e+00, i32 2
  %5886 = insertelement <4 x float> %5885, float 0.000000e+00, i32 3
  %5887 = getelementptr inbounds float, float* %0, i64 11
  %5888 = load float, float* %5887, align 4
  %5889 = insertelement <4 x float> zeroinitializer, float %5888, i32 0
  %5890 = insertelement <4 x float> %5889, float 0.000000e+00, i32 1
  %5891 = insertelement <4 x float> %5890, float 0.000000e+00, i32 2
  %5892 = insertelement <4 x float> %5891, float 0.000000e+00, i32 3
  %5893 = call <4 x float> @llvm.fma.f32.180(<4 x float> %5886, <4 x float> %5892, <4 x float> %5878)
  %5894 = extractelement <4 x float> %5893, i32 0
  %5895 = getelementptr inbounds float, float* %2, i64 3
  store float %5894, float* %5895, align 4
  %5896 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5897 = bitcast i8* %5896 to float*
  %5898 = load float, float* %5897, align 4
  %5899 = insertelement <4 x float> zeroinitializer, float %5898, i32 0
  %5900 = insertelement <4 x float> %5899, float 1.000000e+00, i32 1
  %5901 = insertelement <4 x float> %5900, float 1.000000e+00, i32 2
  %5902 = insertelement <4 x float> %5901, float 1.000000e+00, i32 3
  %5903 = getelementptr inbounds float, float* %0, i64 3
  %5904 = load float, float* %5903, align 4
  %5905 = insertelement <4 x float> zeroinitializer, float %5904, i32 0
  %5906 = insertelement <4 x float> %5905, float 0.000000e+00, i32 1
  %5907 = insertelement <4 x float> %5906, float 0.000000e+00, i32 2
  %5908 = insertelement <4 x float> %5907, float 0.000000e+00, i32 3
  %5909 = fmul <4 x float> %5902, %5908
  %5910 = fadd <4 x float> %5909, zeroinitializer
  %5911 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5912 = getelementptr inbounds i8, i8* %5911, i64 4
  %5913 = bitcast i8* %5912 to float*
  %5914 = load float, float* %5913, align 4
  %5915 = insertelement <4 x float> zeroinitializer, float %5914, i32 0
  %5916 = insertelement <4 x float> %5915, float 1.000000e+00, i32 1
  %5917 = insertelement <4 x float> %5916, float 1.000000e+00, i32 2
  %5918 = insertelement <4 x float> %5917, float 1.000000e+00, i32 3
  %5919 = getelementptr inbounds float, float* %0, i64 7
  %5920 = load float, float* %5919, align 4
  %5921 = insertelement <4 x float> zeroinitializer, float %5920, i32 0
  %5922 = insertelement <4 x float> %5921, float 0.000000e+00, i32 1
  %5923 = insertelement <4 x float> %5922, float 0.000000e+00, i32 2
  %5924 = insertelement <4 x float> %5923, float 0.000000e+00, i32 3
  %5925 = call <4 x float> @llvm.fma.f32.181(<4 x float> %5918, <4 x float> %5924, <4 x float> %5910)
  %5926 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5927 = getelementptr inbounds i8, i8* %5926, i64 8
  %5928 = bitcast i8* %5927 to float*
  %5929 = load float, float* %5928, align 4
  %5930 = insertelement <4 x float> zeroinitializer, float %5929, i32 0
  %5931 = insertelement <4 x float> %5930, float 1.000000e+00, i32 1
  %5932 = insertelement <4 x float> %5931, float 1.000000e+00, i32 2
  %5933 = insertelement <4 x float> %5932, float 1.000000e+00, i32 3
  %5934 = getelementptr inbounds float, float* %0, i64 11
  %5935 = load float, float* %5934, align 4
  %5936 = insertelement <4 x float> zeroinitializer, float %5935, i32 0
  %5937 = insertelement <4 x float> %5936, float 0.000000e+00, i32 1
  %5938 = insertelement <4 x float> %5937, float 0.000000e+00, i32 2
  %5939 = insertelement <4 x float> %5938, float 0.000000e+00, i32 3
  %5940 = call <4 x float> @llvm.fma.f32.182(<4 x float> %5933, <4 x float> %5939, <4 x float> %5925)
  %5941 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5942 = getelementptr inbounds i8, i8* %5941, i64 12
  %5943 = bitcast i8* %5942 to float*
  %5944 = load float, float* %5943, align 4
  %5945 = insertelement <4 x float> zeroinitializer, float %5944, i32 0
  %5946 = insertelement <4 x float> %5945, float 0.000000e+00, i32 1
  %5947 = insertelement <4 x float> %5946, float 0.000000e+00, i32 2
  %5948 = insertelement <4 x float> %5947, float 0.000000e+00, i32 3
  %5949 = getelementptr inbounds float, float* %0, i64 15
  %5950 = load float, float* %5949, align 4
  %5951 = insertelement <4 x float> zeroinitializer, float %5950, i32 0
  %5952 = insertelement <4 x float> %5951, float 0.000000e+00, i32 1
  %5953 = insertelement <4 x float> %5952, float 0.000000e+00, i32 2
  %5954 = insertelement <4 x float> %5953, float 0.000000e+00, i32 3
  %5955 = call <4 x float> @llvm.fma.f32.183(<4 x float> %5948, <4 x float> %5954, <4 x float> %5940)
  %5956 = extractelement <4 x float> %5955, i32 0
  %5957 = getelementptr inbounds float, float* %2, i64 3
  store float %5956, float* %5957, align 4
  %5958 = getelementptr inbounds float, float* %2, i64 4
  store float 0.000000e+00, float* %5958, align 4
  %5959 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5960 = getelementptr inbounds i8, i8* %5959, i64 16
  %5961 = bitcast i8* %5960 to float*
  %5962 = load float, float* %5961, align 4
  %5963 = insertelement <4 x float> zeroinitializer, float %5962, i32 0
  %5964 = insertelement <4 x float> %5963, float 0.000000e+00, i32 1
  %5965 = insertelement <4 x float> %5964, float 0.000000e+00, i32 2
  %5966 = insertelement <4 x float> %5965, float 0.000000e+00, i32 3
  %5967 = load float, float* %0, align 4
  %5968 = insertelement <4 x float> zeroinitializer, float %5967, i32 0
  %5969 = insertelement <4 x float> %5968, float 0.000000e+00, i32 1
  %5970 = insertelement <4 x float> %5969, float 0.000000e+00, i32 2
  %5971 = insertelement <4 x float> %5970, float 0.000000e+00, i32 3
  %5972 = call <4 x float> @llvm.fma.f32.184(<4 x float> %5966, <4 x float> %5971, <4 x float> zeroinitializer)
  %5973 = extractelement <4 x float> %5972, i32 0
  %5974 = getelementptr inbounds float, float* %2, i64 4
  store float %5973, float* %5974, align 4
  %5975 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5976 = getelementptr inbounds i8, i8* %5975, i64 16
  %5977 = bitcast i8* %5976 to float*
  %5978 = load float, float* %5977, align 4
  %5979 = insertelement <4 x float> zeroinitializer, float %5978, i32 0
  %5980 = insertelement <4 x float> %5979, float 1.000000e+00, i32 1
  %5981 = insertelement <4 x float> %5980, float 1.000000e+00, i32 2
  %5982 = insertelement <4 x float> %5981, float 1.000000e+00, i32 3
  %5983 = load float, float* %0, align 4
  %5984 = insertelement <4 x float> zeroinitializer, float %5983, i32 0
  %5985 = insertelement <4 x float> %5984, float 0.000000e+00, i32 1
  %5986 = insertelement <4 x float> %5985, float 0.000000e+00, i32 2
  %5987 = insertelement <4 x float> %5986, float 0.000000e+00, i32 3
  %5988 = fmul <4 x float> %5982, %5987
  %5989 = fadd <4 x float> %5988, zeroinitializer
  %5990 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5991 = getelementptr inbounds i8, i8* %5990, i64 20
  %5992 = bitcast i8* %5991 to float*
  %5993 = load float, float* %5992, align 4
  %5994 = insertelement <4 x float> zeroinitializer, float %5993, i32 0
  %5995 = insertelement <4 x float> %5994, float 0.000000e+00, i32 1
  %5996 = insertelement <4 x float> %5995, float 0.000000e+00, i32 2
  %5997 = insertelement <4 x float> %5996, float 0.000000e+00, i32 3
  %5998 = getelementptr inbounds float, float* %0, i64 4
  %5999 = load float, float* %5998, align 4
  %6000 = insertelement <4 x float> zeroinitializer, float %5999, i32 0
  %6001 = insertelement <4 x float> %6000, float 0.000000e+00, i32 1
  %6002 = insertelement <4 x float> %6001, float 0.000000e+00, i32 2
  %6003 = insertelement <4 x float> %6002, float 0.000000e+00, i32 3
  %6004 = call <4 x float> @llvm.fma.f32.185(<4 x float> %5997, <4 x float> %6003, <4 x float> %5989)
  %6005 = extractelement <4 x float> %6004, i32 0
  %6006 = getelementptr inbounds float, float* %2, i64 4
  store float %6005, float* %6006, align 4
  %6007 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6008 = getelementptr inbounds i8, i8* %6007, i64 16
  %6009 = bitcast i8* %6008 to float*
  %6010 = load float, float* %6009, align 4
  %6011 = insertelement <4 x float> zeroinitializer, float %6010, i32 0
  %6012 = insertelement <4 x float> %6011, float 1.000000e+00, i32 1
  %6013 = insertelement <4 x float> %6012, float 1.000000e+00, i32 2
  %6014 = insertelement <4 x float> %6013, float 1.000000e+00, i32 3
  %6015 = load float, float* %0, align 4
  %6016 = insertelement <4 x float> zeroinitializer, float %6015, i32 0
  %6017 = insertelement <4 x float> %6016, float 0.000000e+00, i32 1
  %6018 = insertelement <4 x float> %6017, float 0.000000e+00, i32 2
  %6019 = insertelement <4 x float> %6018, float 0.000000e+00, i32 3
  %6020 = fmul <4 x float> %6014, %6019
  %6021 = fadd <4 x float> %6020, zeroinitializer
  %6022 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6023 = getelementptr inbounds i8, i8* %6022, i64 20
  %6024 = bitcast i8* %6023 to float*
  %6025 = load float, float* %6024, align 4
  %6026 = insertelement <4 x float> zeroinitializer, float %6025, i32 0
  %6027 = insertelement <4 x float> %6026, float 1.000000e+00, i32 1
  %6028 = insertelement <4 x float> %6027, float 1.000000e+00, i32 2
  %6029 = insertelement <4 x float> %6028, float 1.000000e+00, i32 3
  %6030 = getelementptr inbounds float, float* %0, i64 4
  %6031 = load float, float* %6030, align 4
  %6032 = insertelement <4 x float> zeroinitializer, float %6031, i32 0
  %6033 = insertelement <4 x float> %6032, float 0.000000e+00, i32 1
  %6034 = insertelement <4 x float> %6033, float 0.000000e+00, i32 2
  %6035 = insertelement <4 x float> %6034, float 0.000000e+00, i32 3
  %6036 = call <4 x float> @llvm.fma.f32.186(<4 x float> %6029, <4 x float> %6035, <4 x float> %6021)
  %6037 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6038 = getelementptr inbounds i8, i8* %6037, i64 24
  %6039 = bitcast i8* %6038 to float*
  %6040 = load float, float* %6039, align 4
  %6041 = insertelement <4 x float> zeroinitializer, float %6040, i32 0
  %6042 = insertelement <4 x float> %6041, float 0.000000e+00, i32 1
  %6043 = insertelement <4 x float> %6042, float 0.000000e+00, i32 2
  %6044 = insertelement <4 x float> %6043, float 0.000000e+00, i32 3
  %6045 = getelementptr inbounds float, float* %0, i64 8
  %6046 = load float, float* %6045, align 4
  %6047 = insertelement <4 x float> zeroinitializer, float %6046, i32 0
  %6048 = insertelement <4 x float> %6047, float 0.000000e+00, i32 1
  %6049 = insertelement <4 x float> %6048, float 0.000000e+00, i32 2
  %6050 = insertelement <4 x float> %6049, float 0.000000e+00, i32 3
  %6051 = call <4 x float> @llvm.fma.f32.187(<4 x float> %6044, <4 x float> %6050, <4 x float> %6036)
  %6052 = extractelement <4 x float> %6051, i32 0
  %6053 = getelementptr inbounds float, float* %2, i64 4
  store float %6052, float* %6053, align 4
  %6054 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6055 = getelementptr inbounds i8, i8* %6054, i64 16
  %6056 = bitcast i8* %6055 to float*
  %6057 = load float, float* %6056, align 4
  %6058 = insertelement <4 x float> zeroinitializer, float %6057, i32 0
  %6059 = insertelement <4 x float> %6058, float 1.000000e+00, i32 1
  %6060 = insertelement <4 x float> %6059, float 1.000000e+00, i32 2
  %6061 = insertelement <4 x float> %6060, float 1.000000e+00, i32 3
  %6062 = load float, float* %0, align 4
  %6063 = insertelement <4 x float> zeroinitializer, float %6062, i32 0
  %6064 = insertelement <4 x float> %6063, float 0.000000e+00, i32 1
  %6065 = insertelement <4 x float> %6064, float 0.000000e+00, i32 2
  %6066 = insertelement <4 x float> %6065, float 0.000000e+00, i32 3
  %6067 = fmul <4 x float> %6061, %6066
  %6068 = fadd <4 x float> %6067, zeroinitializer
  %6069 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6070 = getelementptr inbounds i8, i8* %6069, i64 20
  %6071 = bitcast i8* %6070 to float*
  %6072 = load float, float* %6071, align 4
  %6073 = insertelement <4 x float> zeroinitializer, float %6072, i32 0
  %6074 = insertelement <4 x float> %6073, float 1.000000e+00, i32 1
  %6075 = insertelement <4 x float> %6074, float 1.000000e+00, i32 2
  %6076 = insertelement <4 x float> %6075, float 1.000000e+00, i32 3
  %6077 = getelementptr inbounds float, float* %0, i64 4
  %6078 = load float, float* %6077, align 4
  %6079 = insertelement <4 x float> zeroinitializer, float %6078, i32 0
  %6080 = insertelement <4 x float> %6079, float 0.000000e+00, i32 1
  %6081 = insertelement <4 x float> %6080, float 0.000000e+00, i32 2
  %6082 = insertelement <4 x float> %6081, float 0.000000e+00, i32 3
  %6083 = call <4 x float> @llvm.fma.f32.188(<4 x float> %6076, <4 x float> %6082, <4 x float> %6068)
  %6084 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6085 = getelementptr inbounds i8, i8* %6084, i64 24
  %6086 = bitcast i8* %6085 to float*
  %6087 = load float, float* %6086, align 4
  %6088 = insertelement <4 x float> zeroinitializer, float %6087, i32 0
  %6089 = insertelement <4 x float> %6088, float 1.000000e+00, i32 1
  %6090 = insertelement <4 x float> %6089, float 1.000000e+00, i32 2
  %6091 = insertelement <4 x float> %6090, float 1.000000e+00, i32 3
  %6092 = getelementptr inbounds float, float* %0, i64 8
  %6093 = load float, float* %6092, align 4
  %6094 = insertelement <4 x float> zeroinitializer, float %6093, i32 0
  %6095 = insertelement <4 x float> %6094, float 0.000000e+00, i32 1
  %6096 = insertelement <4 x float> %6095, float 0.000000e+00, i32 2
  %6097 = insertelement <4 x float> %6096, float 0.000000e+00, i32 3
  %6098 = call <4 x float> @llvm.fma.f32.189(<4 x float> %6091, <4 x float> %6097, <4 x float> %6083)
  %6099 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6100 = getelementptr inbounds i8, i8* %6099, i64 28
  %6101 = bitcast i8* %6100 to float*
  %6102 = load float, float* %6101, align 4
  %6103 = insertelement <4 x float> zeroinitializer, float %6102, i32 0
  %6104 = insertelement <4 x float> %6103, float 0.000000e+00, i32 1
  %6105 = insertelement <4 x float> %6104, float 0.000000e+00, i32 2
  %6106 = insertelement <4 x float> %6105, float 0.000000e+00, i32 3
  %6107 = getelementptr inbounds float, float* %0, i64 12
  %6108 = load float, float* %6107, align 4
  %6109 = insertelement <4 x float> zeroinitializer, float %6108, i32 0
  %6110 = insertelement <4 x float> %6109, float 0.000000e+00, i32 1
  %6111 = insertelement <4 x float> %6110, float 0.000000e+00, i32 2
  %6112 = insertelement <4 x float> %6111, float 0.000000e+00, i32 3
  %6113 = call <4 x float> @llvm.fma.f32.190(<4 x float> %6106, <4 x float> %6112, <4 x float> %6098)
  %6114 = extractelement <4 x float> %6113, i32 0
  %6115 = getelementptr inbounds float, float* %2, i64 4
  store float %6114, float* %6115, align 4
  %6116 = extractelement <4 x float> %6113, i32 1
  %6117 = getelementptr inbounds float, float* %2, i64 5
  store float %6116, float* %6117, align 4
  %6118 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6119 = getelementptr inbounds i8, i8* %6118, i64 16
  %6120 = bitcast i8* %6119 to float*
  %6121 = load float, float* %6120, align 4
  %6122 = insertelement <4 x float> zeroinitializer, float %6121, i32 0
  %6123 = insertelement <4 x float> %6122, float 0.000000e+00, i32 1
  %6124 = insertelement <4 x float> %6123, float 0.000000e+00, i32 2
  %6125 = insertelement <4 x float> %6124, float 0.000000e+00, i32 3
  %6126 = getelementptr inbounds float, float* %0, i64 1
  %6127 = load float, float* %6126, align 4
  %6128 = insertelement <4 x float> zeroinitializer, float %6127, i32 0
  %6129 = insertelement <4 x float> %6128, float 0.000000e+00, i32 1
  %6130 = insertelement <4 x float> %6129, float 0.000000e+00, i32 2
  %6131 = insertelement <4 x float> %6130, float 0.000000e+00, i32 3
  %6132 = call <4 x float> @llvm.fma.f32.191(<4 x float> %6125, <4 x float> %6131, <4 x float> zeroinitializer)
  %6133 = extractelement <4 x float> %6132, i32 0
  %6134 = getelementptr inbounds float, float* %2, i64 5
  store float %6133, float* %6134, align 4
  %6135 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6136 = getelementptr inbounds i8, i8* %6135, i64 16
  %6137 = bitcast i8* %6136 to float*
  %6138 = load float, float* %6137, align 4
  %6139 = insertelement <4 x float> zeroinitializer, float %6138, i32 0
  %6140 = insertelement <4 x float> %6139, float 1.000000e+00, i32 1
  %6141 = insertelement <4 x float> %6140, float 1.000000e+00, i32 2
  %6142 = insertelement <4 x float> %6141, float 1.000000e+00, i32 3
  %6143 = getelementptr inbounds float, float* %0, i64 1
  %6144 = load float, float* %6143, align 4
  %6145 = insertelement <4 x float> zeroinitializer, float %6144, i32 0
  %6146 = insertelement <4 x float> %6145, float 0.000000e+00, i32 1
  %6147 = insertelement <4 x float> %6146, float 0.000000e+00, i32 2
  %6148 = insertelement <4 x float> %6147, float 0.000000e+00, i32 3
  %6149 = fmul <4 x float> %6142, %6148
  %6150 = fadd <4 x float> %6149, zeroinitializer
  %6151 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6152 = getelementptr inbounds i8, i8* %6151, i64 20
  %6153 = bitcast i8* %6152 to float*
  %6154 = load float, float* %6153, align 4
  %6155 = insertelement <4 x float> zeroinitializer, float %6154, i32 0
  %6156 = insertelement <4 x float> %6155, float 0.000000e+00, i32 1
  %6157 = insertelement <4 x float> %6156, float 0.000000e+00, i32 2
  %6158 = insertelement <4 x float> %6157, float 0.000000e+00, i32 3
  %6159 = getelementptr inbounds float, float* %0, i64 5
  %6160 = load float, float* %6159, align 4
  %6161 = insertelement <4 x float> zeroinitializer, float %6160, i32 0
  %6162 = insertelement <4 x float> %6161, float 0.000000e+00, i32 1
  %6163 = insertelement <4 x float> %6162, float 0.000000e+00, i32 2
  %6164 = insertelement <4 x float> %6163, float 0.000000e+00, i32 3
  %6165 = call <4 x float> @llvm.fma.f32.192(<4 x float> %6158, <4 x float> %6164, <4 x float> %6150)
  %6166 = extractelement <4 x float> %6165, i32 0
  %6167 = getelementptr inbounds float, float* %2, i64 5
  store float %6166, float* %6167, align 4
  %6168 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6169 = getelementptr inbounds i8, i8* %6168, i64 16
  %6170 = bitcast i8* %6169 to float*
  %6171 = load float, float* %6170, align 4
  %6172 = insertelement <4 x float> zeroinitializer, float %6171, i32 0
  %6173 = insertelement <4 x float> %6172, float 1.000000e+00, i32 1
  %6174 = insertelement <4 x float> %6173, float 1.000000e+00, i32 2
  %6175 = insertelement <4 x float> %6174, float 1.000000e+00, i32 3
  %6176 = getelementptr inbounds float, float* %0, i64 1
  %6177 = load float, float* %6176, align 4
  %6178 = insertelement <4 x float> zeroinitializer, float %6177, i32 0
  %6179 = insertelement <4 x float> %6178, float 0.000000e+00, i32 1
  %6180 = insertelement <4 x float> %6179, float 0.000000e+00, i32 2
  %6181 = insertelement <4 x float> %6180, float 0.000000e+00, i32 3
  %6182 = fmul <4 x float> %6175, %6181
  %6183 = fadd <4 x float> %6182, zeroinitializer
  %6184 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6185 = getelementptr inbounds i8, i8* %6184, i64 20
  %6186 = bitcast i8* %6185 to float*
  %6187 = load float, float* %6186, align 4
  %6188 = insertelement <4 x float> zeroinitializer, float %6187, i32 0
  %6189 = insertelement <4 x float> %6188, float 1.000000e+00, i32 1
  %6190 = insertelement <4 x float> %6189, float 1.000000e+00, i32 2
  %6191 = insertelement <4 x float> %6190, float 1.000000e+00, i32 3
  %6192 = getelementptr inbounds float, float* %0, i64 5
  %6193 = load float, float* %6192, align 4
  %6194 = insertelement <4 x float> zeroinitializer, float %6193, i32 0
  %6195 = insertelement <4 x float> %6194, float 0.000000e+00, i32 1
  %6196 = insertelement <4 x float> %6195, float 0.000000e+00, i32 2
  %6197 = insertelement <4 x float> %6196, float 0.000000e+00, i32 3
  %6198 = call <4 x float> @llvm.fma.f32.193(<4 x float> %6191, <4 x float> %6197, <4 x float> %6183)
  %6199 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6200 = getelementptr inbounds i8, i8* %6199, i64 24
  %6201 = bitcast i8* %6200 to float*
  %6202 = load float, float* %6201, align 4
  %6203 = insertelement <4 x float> zeroinitializer, float %6202, i32 0
  %6204 = insertelement <4 x float> %6203, float 0.000000e+00, i32 1
  %6205 = insertelement <4 x float> %6204, float 0.000000e+00, i32 2
  %6206 = insertelement <4 x float> %6205, float 0.000000e+00, i32 3
  %6207 = getelementptr inbounds float, float* %0, i64 9
  %6208 = load float, float* %6207, align 4
  %6209 = insertelement <4 x float> zeroinitializer, float %6208, i32 0
  %6210 = insertelement <4 x float> %6209, float 0.000000e+00, i32 1
  %6211 = insertelement <4 x float> %6210, float 0.000000e+00, i32 2
  %6212 = insertelement <4 x float> %6211, float 0.000000e+00, i32 3
  %6213 = call <4 x float> @llvm.fma.f32.194(<4 x float> %6206, <4 x float> %6212, <4 x float> %6198)
  %6214 = extractelement <4 x float> %6213, i32 0
  %6215 = getelementptr inbounds float, float* %2, i64 5
  store float %6214, float* %6215, align 4
  %6216 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6217 = getelementptr inbounds i8, i8* %6216, i64 16
  %6218 = bitcast i8* %6217 to float*
  %6219 = load float, float* %6218, align 4
  %6220 = insertelement <4 x float> zeroinitializer, float %6219, i32 0
  %6221 = insertelement <4 x float> %6220, float 1.000000e+00, i32 1
  %6222 = insertelement <4 x float> %6221, float 1.000000e+00, i32 2
  %6223 = insertelement <4 x float> %6222, float 1.000000e+00, i32 3
  %6224 = getelementptr inbounds float, float* %0, i64 1
  %6225 = load float, float* %6224, align 4
  %6226 = insertelement <4 x float> zeroinitializer, float %6225, i32 0
  %6227 = insertelement <4 x float> %6226, float 0.000000e+00, i32 1
  %6228 = insertelement <4 x float> %6227, float 0.000000e+00, i32 2
  %6229 = insertelement <4 x float> %6228, float 0.000000e+00, i32 3
  %6230 = fmul <4 x float> %6223, %6229
  %6231 = fadd <4 x float> %6230, zeroinitializer
  %6232 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6233 = getelementptr inbounds i8, i8* %6232, i64 20
  %6234 = bitcast i8* %6233 to float*
  %6235 = load float, float* %6234, align 4
  %6236 = insertelement <4 x float> zeroinitializer, float %6235, i32 0
  %6237 = insertelement <4 x float> %6236, float 1.000000e+00, i32 1
  %6238 = insertelement <4 x float> %6237, float 1.000000e+00, i32 2
  %6239 = insertelement <4 x float> %6238, float 1.000000e+00, i32 3
  %6240 = getelementptr inbounds float, float* %0, i64 5
  %6241 = load float, float* %6240, align 4
  %6242 = insertelement <4 x float> zeroinitializer, float %6241, i32 0
  %6243 = insertelement <4 x float> %6242, float 0.000000e+00, i32 1
  %6244 = insertelement <4 x float> %6243, float 0.000000e+00, i32 2
  %6245 = insertelement <4 x float> %6244, float 0.000000e+00, i32 3
  %6246 = call <4 x float> @llvm.fma.f32.195(<4 x float> %6239, <4 x float> %6245, <4 x float> %6231)
  %6247 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6248 = getelementptr inbounds i8, i8* %6247, i64 24
  %6249 = bitcast i8* %6248 to float*
  %6250 = load float, float* %6249, align 4
  %6251 = insertelement <4 x float> zeroinitializer, float %6250, i32 0
  %6252 = insertelement <4 x float> %6251, float 1.000000e+00, i32 1
  %6253 = insertelement <4 x float> %6252, float 1.000000e+00, i32 2
  %6254 = insertelement <4 x float> %6253, float 1.000000e+00, i32 3
  %6255 = getelementptr inbounds float, float* %0, i64 9
  %6256 = load float, float* %6255, align 4
  %6257 = insertelement <4 x float> zeroinitializer, float %6256, i32 0
  %6258 = insertelement <4 x float> %6257, float 0.000000e+00, i32 1
  %6259 = insertelement <4 x float> %6258, float 0.000000e+00, i32 2
  %6260 = insertelement <4 x float> %6259, float 0.000000e+00, i32 3
  %6261 = call <4 x float> @llvm.fma.f32.196(<4 x float> %6254, <4 x float> %6260, <4 x float> %6246)
  %6262 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6263 = getelementptr inbounds i8, i8* %6262, i64 28
  %6264 = bitcast i8* %6263 to float*
  %6265 = load float, float* %6264, align 4
  %6266 = insertelement <4 x float> zeroinitializer, float %6265, i32 0
  %6267 = insertelement <4 x float> %6266, float 0.000000e+00, i32 1
  %6268 = insertelement <4 x float> %6267, float 0.000000e+00, i32 2
  %6269 = insertelement <4 x float> %6268, float 0.000000e+00, i32 3
  %6270 = getelementptr inbounds float, float* %0, i64 13
  %6271 = load float, float* %6270, align 4
  %6272 = insertelement <4 x float> zeroinitializer, float %6271, i32 0
  %6273 = insertelement <4 x float> %6272, float 0.000000e+00, i32 1
  %6274 = insertelement <4 x float> %6273, float 0.000000e+00, i32 2
  %6275 = insertelement <4 x float> %6274, float 0.000000e+00, i32 3
  %6276 = call <4 x float> @llvm.fma.f32.197(<4 x float> %6269, <4 x float> %6275, <4 x float> %6261)
  %6277 = extractelement <4 x float> %6276, i32 0
  %6278 = getelementptr inbounds float, float* %2, i64 5
  store float %6277, float* %6278, align 4
  %6279 = extractelement <4 x float> %6276, i32 1
  %6280 = getelementptr inbounds float, float* %2, i64 6
  store float %6279, float* %6280, align 4
  %6281 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6282 = getelementptr inbounds i8, i8* %6281, i64 16
  %6283 = bitcast i8* %6282 to float*
  %6284 = load float, float* %6283, align 4
  %6285 = insertelement <4 x float> zeroinitializer, float %6284, i32 0
  %6286 = insertelement <4 x float> %6285, float 0.000000e+00, i32 1
  %6287 = insertelement <4 x float> %6286, float 0.000000e+00, i32 2
  %6288 = insertelement <4 x float> %6287, float 0.000000e+00, i32 3
  %6289 = getelementptr inbounds float, float* %0, i64 2
  %6290 = load float, float* %6289, align 4
  %6291 = insertelement <4 x float> zeroinitializer, float %6290, i32 0
  %6292 = insertelement <4 x float> %6291, float 0.000000e+00, i32 1
  %6293 = insertelement <4 x float> %6292, float 0.000000e+00, i32 2
  %6294 = insertelement <4 x float> %6293, float 0.000000e+00, i32 3
  %6295 = call <4 x float> @llvm.fma.f32.198(<4 x float> %6288, <4 x float> %6294, <4 x float> zeroinitializer)
  %6296 = extractelement <4 x float> %6295, i32 0
  %6297 = getelementptr inbounds float, float* %2, i64 6
  store float %6296, float* %6297, align 4
  %6298 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6299 = getelementptr inbounds i8, i8* %6298, i64 16
  %6300 = bitcast i8* %6299 to float*
  %6301 = load float, float* %6300, align 4
  %6302 = insertelement <4 x float> zeroinitializer, float %6301, i32 0
  %6303 = insertelement <4 x float> %6302, float 1.000000e+00, i32 1
  %6304 = insertelement <4 x float> %6303, float 1.000000e+00, i32 2
  %6305 = insertelement <4 x float> %6304, float 1.000000e+00, i32 3
  %6306 = getelementptr inbounds float, float* %0, i64 2
  %6307 = load float, float* %6306, align 4
  %6308 = insertelement <4 x float> zeroinitializer, float %6307, i32 0
  %6309 = insertelement <4 x float> %6308, float 0.000000e+00, i32 1
  %6310 = insertelement <4 x float> %6309, float 0.000000e+00, i32 2
  %6311 = insertelement <4 x float> %6310, float 0.000000e+00, i32 3
  %6312 = fmul <4 x float> %6305, %6311
  %6313 = fadd <4 x float> %6312, zeroinitializer
  %6314 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6315 = getelementptr inbounds i8, i8* %6314, i64 20
  %6316 = bitcast i8* %6315 to float*
  %6317 = load float, float* %6316, align 4
  %6318 = insertelement <4 x float> zeroinitializer, float %6317, i32 0
  %6319 = insertelement <4 x float> %6318, float 0.000000e+00, i32 1
  %6320 = insertelement <4 x float> %6319, float 0.000000e+00, i32 2
  %6321 = insertelement <4 x float> %6320, float 0.000000e+00, i32 3
  %6322 = getelementptr inbounds float, float* %0, i64 6
  %6323 = load float, float* %6322, align 4
  %6324 = insertelement <4 x float> zeroinitializer, float %6323, i32 0
  %6325 = insertelement <4 x float> %6324, float 0.000000e+00, i32 1
  %6326 = insertelement <4 x float> %6325, float 0.000000e+00, i32 2
  %6327 = insertelement <4 x float> %6326, float 0.000000e+00, i32 3
  %6328 = call <4 x float> @llvm.fma.f32.199(<4 x float> %6321, <4 x float> %6327, <4 x float> %6313)
  %6329 = extractelement <4 x float> %6328, i32 0
  %6330 = getelementptr inbounds float, float* %2, i64 6
  store float %6329, float* %6330, align 4
  %6331 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6332 = getelementptr inbounds i8, i8* %6331, i64 16
  %6333 = bitcast i8* %6332 to float*
  %6334 = load float, float* %6333, align 4
  %6335 = insertelement <4 x float> zeroinitializer, float %6334, i32 0
  %6336 = insertelement <4 x float> %6335, float 1.000000e+00, i32 1
  %6337 = insertelement <4 x float> %6336, float 1.000000e+00, i32 2
  %6338 = insertelement <4 x float> %6337, float 1.000000e+00, i32 3
  %6339 = getelementptr inbounds float, float* %0, i64 2
  %6340 = load float, float* %6339, align 4
  %6341 = insertelement <4 x float> zeroinitializer, float %6340, i32 0
  %6342 = insertelement <4 x float> %6341, float 0.000000e+00, i32 1
  %6343 = insertelement <4 x float> %6342, float 0.000000e+00, i32 2
  %6344 = insertelement <4 x float> %6343, float 0.000000e+00, i32 3
  %6345 = fmul <4 x float> %6338, %6344
  %6346 = fadd <4 x float> %6345, zeroinitializer
  %6347 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6348 = getelementptr inbounds i8, i8* %6347, i64 20
  %6349 = bitcast i8* %6348 to float*
  %6350 = load float, float* %6349, align 4
  %6351 = insertelement <4 x float> zeroinitializer, float %6350, i32 0
  %6352 = insertelement <4 x float> %6351, float 1.000000e+00, i32 1
  %6353 = insertelement <4 x float> %6352, float 1.000000e+00, i32 2
  %6354 = insertelement <4 x float> %6353, float 1.000000e+00, i32 3
  %6355 = getelementptr inbounds float, float* %0, i64 6
  %6356 = load float, float* %6355, align 4
  %6357 = insertelement <4 x float> zeroinitializer, float %6356, i32 0
  %6358 = insertelement <4 x float> %6357, float 0.000000e+00, i32 1
  %6359 = insertelement <4 x float> %6358, float 0.000000e+00, i32 2
  %6360 = insertelement <4 x float> %6359, float 0.000000e+00, i32 3
  %6361 = call <4 x float> @llvm.fma.f32.200(<4 x float> %6354, <4 x float> %6360, <4 x float> %6346)
  %6362 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6363 = getelementptr inbounds i8, i8* %6362, i64 24
  %6364 = bitcast i8* %6363 to float*
  %6365 = load float, float* %6364, align 4
  %6366 = insertelement <4 x float> zeroinitializer, float %6365, i32 0
  %6367 = insertelement <4 x float> %6366, float 0.000000e+00, i32 1
  %6368 = insertelement <4 x float> %6367, float 0.000000e+00, i32 2
  %6369 = insertelement <4 x float> %6368, float 0.000000e+00, i32 3
  %6370 = getelementptr inbounds float, float* %0, i64 10
  %6371 = load float, float* %6370, align 4
  %6372 = insertelement <4 x float> zeroinitializer, float %6371, i32 0
  %6373 = insertelement <4 x float> %6372, float 0.000000e+00, i32 1
  %6374 = insertelement <4 x float> %6373, float 0.000000e+00, i32 2
  %6375 = insertelement <4 x float> %6374, float 0.000000e+00, i32 3
  %6376 = call <4 x float> @llvm.fma.f32.201(<4 x float> %6369, <4 x float> %6375, <4 x float> %6361)
  %6377 = extractelement <4 x float> %6376, i32 0
  %6378 = getelementptr inbounds float, float* %2, i64 6
  store float %6377, float* %6378, align 4
  %6379 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6380 = getelementptr inbounds i8, i8* %6379, i64 16
  %6381 = bitcast i8* %6380 to float*
  %6382 = load float, float* %6381, align 4
  %6383 = insertelement <4 x float> zeroinitializer, float %6382, i32 0
  %6384 = insertelement <4 x float> %6383, float 1.000000e+00, i32 1
  %6385 = insertelement <4 x float> %6384, float 1.000000e+00, i32 2
  %6386 = insertelement <4 x float> %6385, float 1.000000e+00, i32 3
  %6387 = getelementptr inbounds float, float* %0, i64 2
  %6388 = load float, float* %6387, align 4
  %6389 = insertelement <4 x float> zeroinitializer, float %6388, i32 0
  %6390 = insertelement <4 x float> %6389, float 0.000000e+00, i32 1
  %6391 = insertelement <4 x float> %6390, float 0.000000e+00, i32 2
  %6392 = insertelement <4 x float> %6391, float 0.000000e+00, i32 3
  %6393 = fmul <4 x float> %6386, %6392
  %6394 = fadd <4 x float> %6393, zeroinitializer
  %6395 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6396 = getelementptr inbounds i8, i8* %6395, i64 20
  %6397 = bitcast i8* %6396 to float*
  %6398 = load float, float* %6397, align 4
  %6399 = insertelement <4 x float> zeroinitializer, float %6398, i32 0
  %6400 = insertelement <4 x float> %6399, float 1.000000e+00, i32 1
  %6401 = insertelement <4 x float> %6400, float 1.000000e+00, i32 2
  %6402 = insertelement <4 x float> %6401, float 1.000000e+00, i32 3
  %6403 = getelementptr inbounds float, float* %0, i64 6
  %6404 = load float, float* %6403, align 4
  %6405 = insertelement <4 x float> zeroinitializer, float %6404, i32 0
  %6406 = insertelement <4 x float> %6405, float 0.000000e+00, i32 1
  %6407 = insertelement <4 x float> %6406, float 0.000000e+00, i32 2
  %6408 = insertelement <4 x float> %6407, float 0.000000e+00, i32 3
  %6409 = call <4 x float> @llvm.fma.f32.202(<4 x float> %6402, <4 x float> %6408, <4 x float> %6394)
  %6410 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6411 = getelementptr inbounds i8, i8* %6410, i64 24
  %6412 = bitcast i8* %6411 to float*
  %6413 = load float, float* %6412, align 4
  %6414 = insertelement <4 x float> zeroinitializer, float %6413, i32 0
  %6415 = insertelement <4 x float> %6414, float 1.000000e+00, i32 1
  %6416 = insertelement <4 x float> %6415, float 1.000000e+00, i32 2
  %6417 = insertelement <4 x float> %6416, float 1.000000e+00, i32 3
  %6418 = getelementptr inbounds float, float* %0, i64 10
  %6419 = load float, float* %6418, align 4
  %6420 = insertelement <4 x float> zeroinitializer, float %6419, i32 0
  %6421 = insertelement <4 x float> %6420, float 0.000000e+00, i32 1
  %6422 = insertelement <4 x float> %6421, float 0.000000e+00, i32 2
  %6423 = insertelement <4 x float> %6422, float 0.000000e+00, i32 3
  %6424 = call <4 x float> @llvm.fma.f32.203(<4 x float> %6417, <4 x float> %6423, <4 x float> %6409)
  %6425 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6426 = getelementptr inbounds i8, i8* %6425, i64 28
  %6427 = bitcast i8* %6426 to float*
  %6428 = load float, float* %6427, align 4
  %6429 = insertelement <4 x float> zeroinitializer, float %6428, i32 0
  %6430 = insertelement <4 x float> %6429, float 0.000000e+00, i32 1
  %6431 = insertelement <4 x float> %6430, float 0.000000e+00, i32 2
  %6432 = insertelement <4 x float> %6431, float 0.000000e+00, i32 3
  %6433 = getelementptr inbounds float, float* %0, i64 14
  %6434 = load float, float* %6433, align 4
  %6435 = insertelement <4 x float> zeroinitializer, float %6434, i32 0
  %6436 = insertelement <4 x float> %6435, float 0.000000e+00, i32 1
  %6437 = insertelement <4 x float> %6436, float 0.000000e+00, i32 2
  %6438 = insertelement <4 x float> %6437, float 0.000000e+00, i32 3
  %6439 = call <4 x float> @llvm.fma.f32.204(<4 x float> %6432, <4 x float> %6438, <4 x float> %6424)
  %6440 = extractelement <4 x float> %6439, i32 0
  %6441 = getelementptr inbounds float, float* %2, i64 6
  store float %6440, float* %6441, align 4
  %6442 = extractelement <4 x float> %6439, i32 1
  %6443 = getelementptr inbounds float, float* %2, i64 7
  store float %6442, float* %6443, align 4
  %6444 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6445 = getelementptr inbounds i8, i8* %6444, i64 16
  %6446 = bitcast i8* %6445 to float*
  %6447 = load float, float* %6446, align 4
  %6448 = insertelement <4 x float> zeroinitializer, float %6447, i32 0
  %6449 = insertelement <4 x float> %6448, float 0.000000e+00, i32 1
  %6450 = insertelement <4 x float> %6449, float 0.000000e+00, i32 2
  %6451 = insertelement <4 x float> %6450, float 0.000000e+00, i32 3
  %6452 = getelementptr inbounds float, float* %0, i64 3
  %6453 = load float, float* %6452, align 4
  %6454 = insertelement <4 x float> zeroinitializer, float %6453, i32 0
  %6455 = insertelement <4 x float> %6454, float 0.000000e+00, i32 1
  %6456 = insertelement <4 x float> %6455, float 0.000000e+00, i32 2
  %6457 = insertelement <4 x float> %6456, float 0.000000e+00, i32 3
  %6458 = call <4 x float> @llvm.fma.f32.205(<4 x float> %6451, <4 x float> %6457, <4 x float> zeroinitializer)
  %6459 = extractelement <4 x float> %6458, i32 0
  %6460 = getelementptr inbounds float, float* %2, i64 7
  store float %6459, float* %6460, align 4
  %6461 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6462 = getelementptr inbounds i8, i8* %6461, i64 16
  %6463 = bitcast i8* %6462 to float*
  %6464 = load float, float* %6463, align 4
  %6465 = insertelement <4 x float> zeroinitializer, float %6464, i32 0
  %6466 = insertelement <4 x float> %6465, float 1.000000e+00, i32 1
  %6467 = insertelement <4 x float> %6466, float 1.000000e+00, i32 2
  %6468 = insertelement <4 x float> %6467, float 1.000000e+00, i32 3
  %6469 = getelementptr inbounds float, float* %0, i64 3
  %6470 = load float, float* %6469, align 4
  %6471 = insertelement <4 x float> zeroinitializer, float %6470, i32 0
  %6472 = insertelement <4 x float> %6471, float 0.000000e+00, i32 1
  %6473 = insertelement <4 x float> %6472, float 0.000000e+00, i32 2
  %6474 = insertelement <4 x float> %6473, float 0.000000e+00, i32 3
  %6475 = fmul <4 x float> %6468, %6474
  %6476 = fadd <4 x float> %6475, zeroinitializer
  %6477 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6478 = getelementptr inbounds i8, i8* %6477, i64 20
  %6479 = bitcast i8* %6478 to float*
  %6480 = load float, float* %6479, align 4
  %6481 = insertelement <4 x float> zeroinitializer, float %6480, i32 0
  %6482 = insertelement <4 x float> %6481, float 0.000000e+00, i32 1
  %6483 = insertelement <4 x float> %6482, float 0.000000e+00, i32 2
  %6484 = insertelement <4 x float> %6483, float 0.000000e+00, i32 3
  %6485 = getelementptr inbounds float, float* %0, i64 7
  %6486 = load float, float* %6485, align 4
  %6487 = insertelement <4 x float> zeroinitializer, float %6486, i32 0
  %6488 = insertelement <4 x float> %6487, float 0.000000e+00, i32 1
  %6489 = insertelement <4 x float> %6488, float 0.000000e+00, i32 2
  %6490 = insertelement <4 x float> %6489, float 0.000000e+00, i32 3
  %6491 = call <4 x float> @llvm.fma.f32.206(<4 x float> %6484, <4 x float> %6490, <4 x float> %6476)
  %6492 = extractelement <4 x float> %6491, i32 0
  %6493 = getelementptr inbounds float, float* %2, i64 7
  store float %6492, float* %6493, align 4
  %6494 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6495 = getelementptr inbounds i8, i8* %6494, i64 16
  %6496 = bitcast i8* %6495 to float*
  %6497 = load float, float* %6496, align 4
  %6498 = insertelement <4 x float> zeroinitializer, float %6497, i32 0
  %6499 = insertelement <4 x float> %6498, float 1.000000e+00, i32 1
  %6500 = insertelement <4 x float> %6499, float 1.000000e+00, i32 2
  %6501 = insertelement <4 x float> %6500, float 1.000000e+00, i32 3
  %6502 = getelementptr inbounds float, float* %0, i64 3
  %6503 = load float, float* %6502, align 4
  %6504 = insertelement <4 x float> zeroinitializer, float %6503, i32 0
  %6505 = insertelement <4 x float> %6504, float 0.000000e+00, i32 1
  %6506 = insertelement <4 x float> %6505, float 0.000000e+00, i32 2
  %6507 = insertelement <4 x float> %6506, float 0.000000e+00, i32 3
  %6508 = fmul <4 x float> %6501, %6507
  %6509 = fadd <4 x float> %6508, zeroinitializer
  %6510 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6511 = getelementptr inbounds i8, i8* %6510, i64 20
  %6512 = bitcast i8* %6511 to float*
  %6513 = load float, float* %6512, align 4
  %6514 = insertelement <4 x float> zeroinitializer, float %6513, i32 0
  %6515 = insertelement <4 x float> %6514, float 1.000000e+00, i32 1
  %6516 = insertelement <4 x float> %6515, float 1.000000e+00, i32 2
  %6517 = insertelement <4 x float> %6516, float 1.000000e+00, i32 3
  %6518 = getelementptr inbounds float, float* %0, i64 7
  %6519 = load float, float* %6518, align 4
  %6520 = insertelement <4 x float> zeroinitializer, float %6519, i32 0
  %6521 = insertelement <4 x float> %6520, float 0.000000e+00, i32 1
  %6522 = insertelement <4 x float> %6521, float 0.000000e+00, i32 2
  %6523 = insertelement <4 x float> %6522, float 0.000000e+00, i32 3
  %6524 = call <4 x float> @llvm.fma.f32.207(<4 x float> %6517, <4 x float> %6523, <4 x float> %6509)
  %6525 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6526 = getelementptr inbounds i8, i8* %6525, i64 24
  %6527 = bitcast i8* %6526 to float*
  %6528 = load float, float* %6527, align 4
  %6529 = insertelement <4 x float> zeroinitializer, float %6528, i32 0
  %6530 = insertelement <4 x float> %6529, float 0.000000e+00, i32 1
  %6531 = insertelement <4 x float> %6530, float 0.000000e+00, i32 2
  %6532 = insertelement <4 x float> %6531, float 0.000000e+00, i32 3
  %6533 = getelementptr inbounds float, float* %0, i64 11
  %6534 = load float, float* %6533, align 4
  %6535 = insertelement <4 x float> zeroinitializer, float %6534, i32 0
  %6536 = insertelement <4 x float> %6535, float 0.000000e+00, i32 1
  %6537 = insertelement <4 x float> %6536, float 0.000000e+00, i32 2
  %6538 = insertelement <4 x float> %6537, float 0.000000e+00, i32 3
  %6539 = call <4 x float> @llvm.fma.f32.208(<4 x float> %6532, <4 x float> %6538, <4 x float> %6524)
  %6540 = extractelement <4 x float> %6539, i32 0
  %6541 = getelementptr inbounds float, float* %2, i64 7
  store float %6540, float* %6541, align 4
  %6542 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6543 = getelementptr inbounds i8, i8* %6542, i64 16
  %6544 = bitcast i8* %6543 to float*
  %6545 = load float, float* %6544, align 4
  %6546 = insertelement <4 x float> zeroinitializer, float %6545, i32 0
  %6547 = insertelement <4 x float> %6546, float 1.000000e+00, i32 1
  %6548 = insertelement <4 x float> %6547, float 1.000000e+00, i32 2
  %6549 = insertelement <4 x float> %6548, float 1.000000e+00, i32 3
  %6550 = getelementptr inbounds float, float* %0, i64 3
  %6551 = load float, float* %6550, align 4
  %6552 = insertelement <4 x float> zeroinitializer, float %6551, i32 0
  %6553 = insertelement <4 x float> %6552, float 0.000000e+00, i32 1
  %6554 = insertelement <4 x float> %6553, float 0.000000e+00, i32 2
  %6555 = insertelement <4 x float> %6554, float 0.000000e+00, i32 3
  %6556 = fmul <4 x float> %6549, %6555
  %6557 = fadd <4 x float> %6556, zeroinitializer
  %6558 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6559 = getelementptr inbounds i8, i8* %6558, i64 20
  %6560 = bitcast i8* %6559 to float*
  %6561 = load float, float* %6560, align 4
  %6562 = insertelement <4 x float> zeroinitializer, float %6561, i32 0
  %6563 = insertelement <4 x float> %6562, float 1.000000e+00, i32 1
  %6564 = insertelement <4 x float> %6563, float 1.000000e+00, i32 2
  %6565 = insertelement <4 x float> %6564, float 1.000000e+00, i32 3
  %6566 = getelementptr inbounds float, float* %0, i64 7
  %6567 = load float, float* %6566, align 4
  %6568 = insertelement <4 x float> zeroinitializer, float %6567, i32 0
  %6569 = insertelement <4 x float> %6568, float 0.000000e+00, i32 1
  %6570 = insertelement <4 x float> %6569, float 0.000000e+00, i32 2
  %6571 = insertelement <4 x float> %6570, float 0.000000e+00, i32 3
  %6572 = call <4 x float> @llvm.fma.f32.209(<4 x float> %6565, <4 x float> %6571, <4 x float> %6557)
  %6573 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6574 = getelementptr inbounds i8, i8* %6573, i64 24
  %6575 = bitcast i8* %6574 to float*
  %6576 = load float, float* %6575, align 4
  %6577 = insertelement <4 x float> zeroinitializer, float %6576, i32 0
  %6578 = insertelement <4 x float> %6577, float 1.000000e+00, i32 1
  %6579 = insertelement <4 x float> %6578, float 1.000000e+00, i32 2
  %6580 = insertelement <4 x float> %6579, float 1.000000e+00, i32 3
  %6581 = getelementptr inbounds float, float* %0, i64 11
  %6582 = load float, float* %6581, align 4
  %6583 = insertelement <4 x float> zeroinitializer, float %6582, i32 0
  %6584 = insertelement <4 x float> %6583, float 0.000000e+00, i32 1
  %6585 = insertelement <4 x float> %6584, float 0.000000e+00, i32 2
  %6586 = insertelement <4 x float> %6585, float 0.000000e+00, i32 3
  %6587 = call <4 x float> @llvm.fma.f32.210(<4 x float> %6580, <4 x float> %6586, <4 x float> %6572)
  %6588 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6589 = getelementptr inbounds i8, i8* %6588, i64 28
  %6590 = bitcast i8* %6589 to float*
  %6591 = load float, float* %6590, align 4
  %6592 = insertelement <4 x float> zeroinitializer, float %6591, i32 0
  %6593 = insertelement <4 x float> %6592, float 0.000000e+00, i32 1
  %6594 = insertelement <4 x float> %6593, float 0.000000e+00, i32 2
  %6595 = insertelement <4 x float> %6594, float 0.000000e+00, i32 3
  %6596 = getelementptr inbounds float, float* %0, i64 15
  %6597 = load float, float* %6596, align 4
  %6598 = insertelement <4 x float> zeroinitializer, float %6597, i32 0
  %6599 = insertelement <4 x float> %6598, float 0.000000e+00, i32 1
  %6600 = insertelement <4 x float> %6599, float 0.000000e+00, i32 2
  %6601 = insertelement <4 x float> %6600, float 0.000000e+00, i32 3
  %6602 = call <4 x float> @llvm.fma.f32.211(<4 x float> %6595, <4 x float> %6601, <4 x float> %6587)
  %6603 = extractelement <4 x float> %6602, i32 0
  %6604 = getelementptr inbounds float, float* %2, i64 7
  store float %6603, float* %6604, align 4
  %6605 = getelementptr inbounds float, float* %2, i64 8
  store float 0.000000e+00, float* %6605, align 4
  %6606 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6607 = getelementptr inbounds i8, i8* %6606, i64 32
  %6608 = bitcast i8* %6607 to float*
  %6609 = load float, float* %6608, align 4
  %6610 = insertelement <4 x float> zeroinitializer, float %6609, i32 0
  %6611 = insertelement <4 x float> %6610, float 0.000000e+00, i32 1
  %6612 = insertelement <4 x float> %6611, float 0.000000e+00, i32 2
  %6613 = insertelement <4 x float> %6612, float 0.000000e+00, i32 3
  %6614 = load float, float* %0, align 4
  %6615 = insertelement <4 x float> zeroinitializer, float %6614, i32 0
  %6616 = insertelement <4 x float> %6615, float 0.000000e+00, i32 1
  %6617 = insertelement <4 x float> %6616, float 0.000000e+00, i32 2
  %6618 = insertelement <4 x float> %6617, float 0.000000e+00, i32 3
  %6619 = call <4 x float> @llvm.fma.f32.212(<4 x float> %6613, <4 x float> %6618, <4 x float> zeroinitializer)
  %6620 = extractelement <4 x float> %6619, i32 0
  %6621 = getelementptr inbounds float, float* %2, i64 8
  store float %6620, float* %6621, align 4
  %6622 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6623 = getelementptr inbounds i8, i8* %6622, i64 32
  %6624 = bitcast i8* %6623 to float*
  %6625 = load float, float* %6624, align 4
  %6626 = insertelement <4 x float> zeroinitializer, float %6625, i32 0
  %6627 = insertelement <4 x float> %6626, float 1.000000e+00, i32 1
  %6628 = insertelement <4 x float> %6627, float 1.000000e+00, i32 2
  %6629 = insertelement <4 x float> %6628, float 1.000000e+00, i32 3
  %6630 = load float, float* %0, align 4
  %6631 = insertelement <4 x float> zeroinitializer, float %6630, i32 0
  %6632 = insertelement <4 x float> %6631, float 0.000000e+00, i32 1
  %6633 = insertelement <4 x float> %6632, float 0.000000e+00, i32 2
  %6634 = insertelement <4 x float> %6633, float 0.000000e+00, i32 3
  %6635 = fmul <4 x float> %6629, %6634
  %6636 = fadd <4 x float> %6635, zeroinitializer
  %6637 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6638 = getelementptr inbounds i8, i8* %6637, i64 36
  %6639 = bitcast i8* %6638 to float*
  %6640 = load float, float* %6639, align 4
  %6641 = insertelement <4 x float> zeroinitializer, float %6640, i32 0
  %6642 = insertelement <4 x float> %6641, float 0.000000e+00, i32 1
  %6643 = insertelement <4 x float> %6642, float 0.000000e+00, i32 2
  %6644 = insertelement <4 x float> %6643, float 0.000000e+00, i32 3
  %6645 = getelementptr inbounds float, float* %0, i64 4
  %6646 = load float, float* %6645, align 4
  %6647 = insertelement <4 x float> zeroinitializer, float %6646, i32 0
  %6648 = insertelement <4 x float> %6647, float 0.000000e+00, i32 1
  %6649 = insertelement <4 x float> %6648, float 0.000000e+00, i32 2
  %6650 = insertelement <4 x float> %6649, float 0.000000e+00, i32 3
  %6651 = call <4 x float> @llvm.fma.f32.213(<4 x float> %6644, <4 x float> %6650, <4 x float> %6636)
  %6652 = extractelement <4 x float> %6651, i32 0
  %6653 = getelementptr inbounds float, float* %2, i64 8
  store float %6652, float* %6653, align 4
  %6654 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6655 = getelementptr inbounds i8, i8* %6654, i64 32
  %6656 = bitcast i8* %6655 to float*
  %6657 = load float, float* %6656, align 4
  %6658 = insertelement <4 x float> zeroinitializer, float %6657, i32 0
  %6659 = insertelement <4 x float> %6658, float 1.000000e+00, i32 1
  %6660 = insertelement <4 x float> %6659, float 1.000000e+00, i32 2
  %6661 = insertelement <4 x float> %6660, float 1.000000e+00, i32 3
  %6662 = load float, float* %0, align 4
  %6663 = insertelement <4 x float> zeroinitializer, float %6662, i32 0
  %6664 = insertelement <4 x float> %6663, float 0.000000e+00, i32 1
  %6665 = insertelement <4 x float> %6664, float 0.000000e+00, i32 2
  %6666 = insertelement <4 x float> %6665, float 0.000000e+00, i32 3
  %6667 = fmul <4 x float> %6661, %6666
  %6668 = fadd <4 x float> %6667, zeroinitializer
  %6669 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6670 = getelementptr inbounds i8, i8* %6669, i64 36
  %6671 = bitcast i8* %6670 to float*
  %6672 = load float, float* %6671, align 4
  %6673 = insertelement <4 x float> zeroinitializer, float %6672, i32 0
  %6674 = insertelement <4 x float> %6673, float 1.000000e+00, i32 1
  %6675 = insertelement <4 x float> %6674, float 1.000000e+00, i32 2
  %6676 = insertelement <4 x float> %6675, float 1.000000e+00, i32 3
  %6677 = getelementptr inbounds float, float* %0, i64 4
  %6678 = load float, float* %6677, align 4
  %6679 = insertelement <4 x float> zeroinitializer, float %6678, i32 0
  %6680 = insertelement <4 x float> %6679, float 0.000000e+00, i32 1
  %6681 = insertelement <4 x float> %6680, float 0.000000e+00, i32 2
  %6682 = insertelement <4 x float> %6681, float 0.000000e+00, i32 3
  %6683 = call <4 x float> @llvm.fma.f32.214(<4 x float> %6676, <4 x float> %6682, <4 x float> %6668)
  %6684 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6685 = getelementptr inbounds i8, i8* %6684, i64 40
  %6686 = bitcast i8* %6685 to float*
  %6687 = load float, float* %6686, align 4
  %6688 = insertelement <4 x float> zeroinitializer, float %6687, i32 0
  %6689 = insertelement <4 x float> %6688, float 0.000000e+00, i32 1
  %6690 = insertelement <4 x float> %6689, float 0.000000e+00, i32 2
  %6691 = insertelement <4 x float> %6690, float 0.000000e+00, i32 3
  %6692 = getelementptr inbounds float, float* %0, i64 8
  %6693 = load float, float* %6692, align 4
  %6694 = insertelement <4 x float> zeroinitializer, float %6693, i32 0
  %6695 = insertelement <4 x float> %6694, float 0.000000e+00, i32 1
  %6696 = insertelement <4 x float> %6695, float 0.000000e+00, i32 2
  %6697 = insertelement <4 x float> %6696, float 0.000000e+00, i32 3
  %6698 = call <4 x float> @llvm.fma.f32.215(<4 x float> %6691, <4 x float> %6697, <4 x float> %6683)
  %6699 = extractelement <4 x float> %6698, i32 0
  %6700 = getelementptr inbounds float, float* %2, i64 8
  store float %6699, float* %6700, align 4
  %6701 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6702 = getelementptr inbounds i8, i8* %6701, i64 32
  %6703 = bitcast i8* %6702 to float*
  %6704 = load float, float* %6703, align 4
  %6705 = insertelement <4 x float> zeroinitializer, float %6704, i32 0
  %6706 = insertelement <4 x float> %6705, float 1.000000e+00, i32 1
  %6707 = insertelement <4 x float> %6706, float 1.000000e+00, i32 2
  %6708 = insertelement <4 x float> %6707, float 1.000000e+00, i32 3
  %6709 = load float, float* %0, align 4
  %6710 = insertelement <4 x float> zeroinitializer, float %6709, i32 0
  %6711 = insertelement <4 x float> %6710, float 0.000000e+00, i32 1
  %6712 = insertelement <4 x float> %6711, float 0.000000e+00, i32 2
  %6713 = insertelement <4 x float> %6712, float 0.000000e+00, i32 3
  %6714 = fmul <4 x float> %6708, %6713
  %6715 = fadd <4 x float> %6714, zeroinitializer
  %6716 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6717 = getelementptr inbounds i8, i8* %6716, i64 36
  %6718 = bitcast i8* %6717 to float*
  %6719 = load float, float* %6718, align 4
  %6720 = insertelement <4 x float> zeroinitializer, float %6719, i32 0
  %6721 = insertelement <4 x float> %6720, float 1.000000e+00, i32 1
  %6722 = insertelement <4 x float> %6721, float 1.000000e+00, i32 2
  %6723 = insertelement <4 x float> %6722, float 1.000000e+00, i32 3
  %6724 = getelementptr inbounds float, float* %0, i64 4
  %6725 = load float, float* %6724, align 4
  %6726 = insertelement <4 x float> zeroinitializer, float %6725, i32 0
  %6727 = insertelement <4 x float> %6726, float 0.000000e+00, i32 1
  %6728 = insertelement <4 x float> %6727, float 0.000000e+00, i32 2
  %6729 = insertelement <4 x float> %6728, float 0.000000e+00, i32 3
  %6730 = call <4 x float> @llvm.fma.f32.216(<4 x float> %6723, <4 x float> %6729, <4 x float> %6715)
  %6731 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6732 = getelementptr inbounds i8, i8* %6731, i64 40
  %6733 = bitcast i8* %6732 to float*
  %6734 = load float, float* %6733, align 4
  %6735 = insertelement <4 x float> zeroinitializer, float %6734, i32 0
  %6736 = insertelement <4 x float> %6735, float 1.000000e+00, i32 1
  %6737 = insertelement <4 x float> %6736, float 1.000000e+00, i32 2
  %6738 = insertelement <4 x float> %6737, float 1.000000e+00, i32 3
  %6739 = getelementptr inbounds float, float* %0, i64 8
  %6740 = load float, float* %6739, align 4
  %6741 = insertelement <4 x float> zeroinitializer, float %6740, i32 0
  %6742 = insertelement <4 x float> %6741, float 0.000000e+00, i32 1
  %6743 = insertelement <4 x float> %6742, float 0.000000e+00, i32 2
  %6744 = insertelement <4 x float> %6743, float 0.000000e+00, i32 3
  %6745 = call <4 x float> @llvm.fma.f32.217(<4 x float> %6738, <4 x float> %6744, <4 x float> %6730)
  %6746 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6747 = getelementptr inbounds i8, i8* %6746, i64 44
  %6748 = bitcast i8* %6747 to float*
  %6749 = load float, float* %6748, align 4
  %6750 = insertelement <4 x float> zeroinitializer, float %6749, i32 0
  %6751 = insertelement <4 x float> %6750, float 0.000000e+00, i32 1
  %6752 = insertelement <4 x float> %6751, float 0.000000e+00, i32 2
  %6753 = insertelement <4 x float> %6752, float 0.000000e+00, i32 3
  %6754 = getelementptr inbounds float, float* %0, i64 12
  %6755 = load float, float* %6754, align 4
  %6756 = insertelement <4 x float> zeroinitializer, float %6755, i32 0
  %6757 = insertelement <4 x float> %6756, float 0.000000e+00, i32 1
  %6758 = insertelement <4 x float> %6757, float 0.000000e+00, i32 2
  %6759 = insertelement <4 x float> %6758, float 0.000000e+00, i32 3
  %6760 = call <4 x float> @llvm.fma.f32.218(<4 x float> %6753, <4 x float> %6759, <4 x float> %6745)
  %6761 = extractelement <4 x float> %6760, i32 0
  %6762 = getelementptr inbounds float, float* %2, i64 8
  store float %6761, float* %6762, align 4
  %6763 = extractelement <4 x float> %6760, i32 1
  %6764 = getelementptr inbounds float, float* %2, i64 9
  store float %6763, float* %6764, align 4
  %6765 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6766 = getelementptr inbounds i8, i8* %6765, i64 32
  %6767 = bitcast i8* %6766 to float*
  %6768 = load float, float* %6767, align 4
  %6769 = insertelement <4 x float> zeroinitializer, float %6768, i32 0
  %6770 = insertelement <4 x float> %6769, float 0.000000e+00, i32 1
  %6771 = insertelement <4 x float> %6770, float 0.000000e+00, i32 2
  %6772 = insertelement <4 x float> %6771, float 0.000000e+00, i32 3
  %6773 = getelementptr inbounds float, float* %0, i64 1
  %6774 = load float, float* %6773, align 4
  %6775 = insertelement <4 x float> zeroinitializer, float %6774, i32 0
  %6776 = insertelement <4 x float> %6775, float 0.000000e+00, i32 1
  %6777 = insertelement <4 x float> %6776, float 0.000000e+00, i32 2
  %6778 = insertelement <4 x float> %6777, float 0.000000e+00, i32 3
  %6779 = call <4 x float> @llvm.fma.f32.219(<4 x float> %6772, <4 x float> %6778, <4 x float> zeroinitializer)
  %6780 = extractelement <4 x float> %6779, i32 0
  %6781 = getelementptr inbounds float, float* %2, i64 9
  store float %6780, float* %6781, align 4
  %6782 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6783 = getelementptr inbounds i8, i8* %6782, i64 32
  %6784 = bitcast i8* %6783 to float*
  %6785 = load float, float* %6784, align 4
  %6786 = insertelement <4 x float> zeroinitializer, float %6785, i32 0
  %6787 = insertelement <4 x float> %6786, float 1.000000e+00, i32 1
  %6788 = insertelement <4 x float> %6787, float 1.000000e+00, i32 2
  %6789 = insertelement <4 x float> %6788, float 1.000000e+00, i32 3
  %6790 = getelementptr inbounds float, float* %0, i64 1
  %6791 = load float, float* %6790, align 4
  %6792 = insertelement <4 x float> zeroinitializer, float %6791, i32 0
  %6793 = insertelement <4 x float> %6792, float 0.000000e+00, i32 1
  %6794 = insertelement <4 x float> %6793, float 0.000000e+00, i32 2
  %6795 = insertelement <4 x float> %6794, float 0.000000e+00, i32 3
  %6796 = fmul <4 x float> %6789, %6795
  %6797 = fadd <4 x float> %6796, zeroinitializer
  %6798 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6799 = getelementptr inbounds i8, i8* %6798, i64 36
  %6800 = bitcast i8* %6799 to float*
  %6801 = load float, float* %6800, align 4
  %6802 = insertelement <4 x float> zeroinitializer, float %6801, i32 0
  %6803 = insertelement <4 x float> %6802, float 0.000000e+00, i32 1
  %6804 = insertelement <4 x float> %6803, float 0.000000e+00, i32 2
  %6805 = insertelement <4 x float> %6804, float 0.000000e+00, i32 3
  %6806 = getelementptr inbounds float, float* %0, i64 5
  %6807 = load float, float* %6806, align 4
  %6808 = insertelement <4 x float> zeroinitializer, float %6807, i32 0
  %6809 = insertelement <4 x float> %6808, float 0.000000e+00, i32 1
  %6810 = insertelement <4 x float> %6809, float 0.000000e+00, i32 2
  %6811 = insertelement <4 x float> %6810, float 0.000000e+00, i32 3
  %6812 = call <4 x float> @llvm.fma.f32.220(<4 x float> %6805, <4 x float> %6811, <4 x float> %6797)
  %6813 = extractelement <4 x float> %6812, i32 0
  %6814 = getelementptr inbounds float, float* %2, i64 9
  store float %6813, float* %6814, align 4
  %6815 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6816 = getelementptr inbounds i8, i8* %6815, i64 32
  %6817 = bitcast i8* %6816 to float*
  %6818 = load float, float* %6817, align 4
  %6819 = insertelement <4 x float> zeroinitializer, float %6818, i32 0
  %6820 = insertelement <4 x float> %6819, float 1.000000e+00, i32 1
  %6821 = insertelement <4 x float> %6820, float 1.000000e+00, i32 2
  %6822 = insertelement <4 x float> %6821, float 1.000000e+00, i32 3
  %6823 = getelementptr inbounds float, float* %0, i64 1
  %6824 = load float, float* %6823, align 4
  %6825 = insertelement <4 x float> zeroinitializer, float %6824, i32 0
  %6826 = insertelement <4 x float> %6825, float 0.000000e+00, i32 1
  %6827 = insertelement <4 x float> %6826, float 0.000000e+00, i32 2
  %6828 = insertelement <4 x float> %6827, float 0.000000e+00, i32 3
  %6829 = fmul <4 x float> %6822, %6828
  %6830 = fadd <4 x float> %6829, zeroinitializer
  %6831 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6832 = getelementptr inbounds i8, i8* %6831, i64 36
  %6833 = bitcast i8* %6832 to float*
  %6834 = load float, float* %6833, align 4
  %6835 = insertelement <4 x float> zeroinitializer, float %6834, i32 0
  %6836 = insertelement <4 x float> %6835, float 1.000000e+00, i32 1
  %6837 = insertelement <4 x float> %6836, float 1.000000e+00, i32 2
  %6838 = insertelement <4 x float> %6837, float 1.000000e+00, i32 3
  %6839 = getelementptr inbounds float, float* %0, i64 5
  %6840 = load float, float* %6839, align 4
  %6841 = insertelement <4 x float> zeroinitializer, float %6840, i32 0
  %6842 = insertelement <4 x float> %6841, float 0.000000e+00, i32 1
  %6843 = insertelement <4 x float> %6842, float 0.000000e+00, i32 2
  %6844 = insertelement <4 x float> %6843, float 0.000000e+00, i32 3
  %6845 = call <4 x float> @llvm.fma.f32.221(<4 x float> %6838, <4 x float> %6844, <4 x float> %6830)
  %6846 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6847 = getelementptr inbounds i8, i8* %6846, i64 40
  %6848 = bitcast i8* %6847 to float*
  %6849 = load float, float* %6848, align 4
  %6850 = insertelement <4 x float> zeroinitializer, float %6849, i32 0
  %6851 = insertelement <4 x float> %6850, float 0.000000e+00, i32 1
  %6852 = insertelement <4 x float> %6851, float 0.000000e+00, i32 2
  %6853 = insertelement <4 x float> %6852, float 0.000000e+00, i32 3
  %6854 = getelementptr inbounds float, float* %0, i64 9
  %6855 = load float, float* %6854, align 4
  %6856 = insertelement <4 x float> zeroinitializer, float %6855, i32 0
  %6857 = insertelement <4 x float> %6856, float 0.000000e+00, i32 1
  %6858 = insertelement <4 x float> %6857, float 0.000000e+00, i32 2
  %6859 = insertelement <4 x float> %6858, float 0.000000e+00, i32 3
  %6860 = call <4 x float> @llvm.fma.f32.222(<4 x float> %6853, <4 x float> %6859, <4 x float> %6845)
  %6861 = extractelement <4 x float> %6860, i32 0
  %6862 = getelementptr inbounds float, float* %2, i64 9
  store float %6861, float* %6862, align 4
  %6863 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6864 = getelementptr inbounds i8, i8* %6863, i64 32
  %6865 = bitcast i8* %6864 to float*
  %6866 = load float, float* %6865, align 4
  %6867 = insertelement <4 x float> zeroinitializer, float %6866, i32 0
  %6868 = insertelement <4 x float> %6867, float 1.000000e+00, i32 1
  %6869 = insertelement <4 x float> %6868, float 1.000000e+00, i32 2
  %6870 = insertelement <4 x float> %6869, float 1.000000e+00, i32 3
  %6871 = getelementptr inbounds float, float* %0, i64 1
  %6872 = load float, float* %6871, align 4
  %6873 = insertelement <4 x float> zeroinitializer, float %6872, i32 0
  %6874 = insertelement <4 x float> %6873, float 0.000000e+00, i32 1
  %6875 = insertelement <4 x float> %6874, float 0.000000e+00, i32 2
  %6876 = insertelement <4 x float> %6875, float 0.000000e+00, i32 3
  %6877 = fmul <4 x float> %6870, %6876
  %6878 = fadd <4 x float> %6877, zeroinitializer
  %6879 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6880 = getelementptr inbounds i8, i8* %6879, i64 36
  %6881 = bitcast i8* %6880 to float*
  %6882 = load float, float* %6881, align 4
  %6883 = insertelement <4 x float> zeroinitializer, float %6882, i32 0
  %6884 = insertelement <4 x float> %6883, float 1.000000e+00, i32 1
  %6885 = insertelement <4 x float> %6884, float 1.000000e+00, i32 2
  %6886 = insertelement <4 x float> %6885, float 1.000000e+00, i32 3
  %6887 = getelementptr inbounds float, float* %0, i64 5
  %6888 = load float, float* %6887, align 4
  %6889 = insertelement <4 x float> zeroinitializer, float %6888, i32 0
  %6890 = insertelement <4 x float> %6889, float 0.000000e+00, i32 1
  %6891 = insertelement <4 x float> %6890, float 0.000000e+00, i32 2
  %6892 = insertelement <4 x float> %6891, float 0.000000e+00, i32 3
  %6893 = call <4 x float> @llvm.fma.f32.223(<4 x float> %6886, <4 x float> %6892, <4 x float> %6878)
  %6894 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6895 = getelementptr inbounds i8, i8* %6894, i64 40
  %6896 = bitcast i8* %6895 to float*
  %6897 = load float, float* %6896, align 4
  %6898 = insertelement <4 x float> zeroinitializer, float %6897, i32 0
  %6899 = insertelement <4 x float> %6898, float 1.000000e+00, i32 1
  %6900 = insertelement <4 x float> %6899, float 1.000000e+00, i32 2
  %6901 = insertelement <4 x float> %6900, float 1.000000e+00, i32 3
  %6902 = getelementptr inbounds float, float* %0, i64 9
  %6903 = load float, float* %6902, align 4
  %6904 = insertelement <4 x float> zeroinitializer, float %6903, i32 0
  %6905 = insertelement <4 x float> %6904, float 0.000000e+00, i32 1
  %6906 = insertelement <4 x float> %6905, float 0.000000e+00, i32 2
  %6907 = insertelement <4 x float> %6906, float 0.000000e+00, i32 3
  %6908 = call <4 x float> @llvm.fma.f32.224(<4 x float> %6901, <4 x float> %6907, <4 x float> %6893)
  %6909 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6910 = getelementptr inbounds i8, i8* %6909, i64 44
  %6911 = bitcast i8* %6910 to float*
  %6912 = load float, float* %6911, align 4
  %6913 = insertelement <4 x float> zeroinitializer, float %6912, i32 0
  %6914 = insertelement <4 x float> %6913, float 0.000000e+00, i32 1
  %6915 = insertelement <4 x float> %6914, float 0.000000e+00, i32 2
  %6916 = insertelement <4 x float> %6915, float 0.000000e+00, i32 3
  %6917 = getelementptr inbounds float, float* %0, i64 13
  %6918 = load float, float* %6917, align 4
  %6919 = insertelement <4 x float> zeroinitializer, float %6918, i32 0
  %6920 = insertelement <4 x float> %6919, float 0.000000e+00, i32 1
  %6921 = insertelement <4 x float> %6920, float 0.000000e+00, i32 2
  %6922 = insertelement <4 x float> %6921, float 0.000000e+00, i32 3
  %6923 = call <4 x float> @llvm.fma.f32.225(<4 x float> %6916, <4 x float> %6922, <4 x float> %6908)
  %6924 = extractelement <4 x float> %6923, i32 0
  %6925 = getelementptr inbounds float, float* %2, i64 9
  store float %6924, float* %6925, align 4
  %6926 = extractelement <4 x float> %6923, i32 1
  %6927 = getelementptr inbounds float, float* %2, i64 10
  store float %6926, float* %6927, align 4
  %6928 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6929 = getelementptr inbounds i8, i8* %6928, i64 32
  %6930 = bitcast i8* %6929 to float*
  %6931 = load float, float* %6930, align 4
  %6932 = insertelement <4 x float> zeroinitializer, float %6931, i32 0
  %6933 = insertelement <4 x float> %6932, float 0.000000e+00, i32 1
  %6934 = insertelement <4 x float> %6933, float 0.000000e+00, i32 2
  %6935 = insertelement <4 x float> %6934, float 0.000000e+00, i32 3
  %6936 = getelementptr inbounds float, float* %0, i64 2
  %6937 = load float, float* %6936, align 4
  %6938 = insertelement <4 x float> zeroinitializer, float %6937, i32 0
  %6939 = insertelement <4 x float> %6938, float 0.000000e+00, i32 1
  %6940 = insertelement <4 x float> %6939, float 0.000000e+00, i32 2
  %6941 = insertelement <4 x float> %6940, float 0.000000e+00, i32 3
  %6942 = call <4 x float> @llvm.fma.f32.226(<4 x float> %6935, <4 x float> %6941, <4 x float> zeroinitializer)
  %6943 = extractelement <4 x float> %6942, i32 0
  %6944 = getelementptr inbounds float, float* %2, i64 10
  store float %6943, float* %6944, align 4
  %6945 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6946 = getelementptr inbounds i8, i8* %6945, i64 32
  %6947 = bitcast i8* %6946 to float*
  %6948 = load float, float* %6947, align 4
  %6949 = insertelement <4 x float> zeroinitializer, float %6948, i32 0
  %6950 = insertelement <4 x float> %6949, float 1.000000e+00, i32 1
  %6951 = insertelement <4 x float> %6950, float 1.000000e+00, i32 2
  %6952 = insertelement <4 x float> %6951, float 1.000000e+00, i32 3
  %6953 = getelementptr inbounds float, float* %0, i64 2
  %6954 = load float, float* %6953, align 4
  %6955 = insertelement <4 x float> zeroinitializer, float %6954, i32 0
  %6956 = insertelement <4 x float> %6955, float 0.000000e+00, i32 1
  %6957 = insertelement <4 x float> %6956, float 0.000000e+00, i32 2
  %6958 = insertelement <4 x float> %6957, float 0.000000e+00, i32 3
  %6959 = fmul <4 x float> %6952, %6958
  %6960 = fadd <4 x float> %6959, zeroinitializer
  %6961 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6962 = getelementptr inbounds i8, i8* %6961, i64 36
  %6963 = bitcast i8* %6962 to float*
  %6964 = load float, float* %6963, align 4
  %6965 = insertelement <4 x float> zeroinitializer, float %6964, i32 0
  %6966 = insertelement <4 x float> %6965, float 0.000000e+00, i32 1
  %6967 = insertelement <4 x float> %6966, float 0.000000e+00, i32 2
  %6968 = insertelement <4 x float> %6967, float 0.000000e+00, i32 3
  %6969 = getelementptr inbounds float, float* %0, i64 6
  %6970 = load float, float* %6969, align 4
  %6971 = insertelement <4 x float> zeroinitializer, float %6970, i32 0
  %6972 = insertelement <4 x float> %6971, float 0.000000e+00, i32 1
  %6973 = insertelement <4 x float> %6972, float 0.000000e+00, i32 2
  %6974 = insertelement <4 x float> %6973, float 0.000000e+00, i32 3
  %6975 = call <4 x float> @llvm.fma.f32.227(<4 x float> %6968, <4 x float> %6974, <4 x float> %6960)
  %6976 = extractelement <4 x float> %6975, i32 0
  %6977 = getelementptr inbounds float, float* %2, i64 10
  store float %6976, float* %6977, align 4
  %6978 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6979 = getelementptr inbounds i8, i8* %6978, i64 32
  %6980 = bitcast i8* %6979 to float*
  %6981 = load float, float* %6980, align 4
  %6982 = insertelement <4 x float> zeroinitializer, float %6981, i32 0
  %6983 = insertelement <4 x float> %6982, float 1.000000e+00, i32 1
  %6984 = insertelement <4 x float> %6983, float 1.000000e+00, i32 2
  %6985 = insertelement <4 x float> %6984, float 1.000000e+00, i32 3
  %6986 = getelementptr inbounds float, float* %0, i64 2
  %6987 = load float, float* %6986, align 4
  %6988 = insertelement <4 x float> zeroinitializer, float %6987, i32 0
  %6989 = insertelement <4 x float> %6988, float 0.000000e+00, i32 1
  %6990 = insertelement <4 x float> %6989, float 0.000000e+00, i32 2
  %6991 = insertelement <4 x float> %6990, float 0.000000e+00, i32 3
  %6992 = fmul <4 x float> %6985, %6991
  %6993 = fadd <4 x float> %6992, zeroinitializer
  %6994 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6995 = getelementptr inbounds i8, i8* %6994, i64 36
  %6996 = bitcast i8* %6995 to float*
  %6997 = load float, float* %6996, align 4
  %6998 = insertelement <4 x float> zeroinitializer, float %6997, i32 0
  %6999 = insertelement <4 x float> %6998, float 1.000000e+00, i32 1
  %7000 = insertelement <4 x float> %6999, float 1.000000e+00, i32 2
  %7001 = insertelement <4 x float> %7000, float 1.000000e+00, i32 3
  %7002 = getelementptr inbounds float, float* %0, i64 6
  %7003 = load float, float* %7002, align 4
  %7004 = insertelement <4 x float> zeroinitializer, float %7003, i32 0
  %7005 = insertelement <4 x float> %7004, float 0.000000e+00, i32 1
  %7006 = insertelement <4 x float> %7005, float 0.000000e+00, i32 2
  %7007 = insertelement <4 x float> %7006, float 0.000000e+00, i32 3
  %7008 = call <4 x float> @llvm.fma.f32.228(<4 x float> %7001, <4 x float> %7007, <4 x float> %6993)
  %7009 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7010 = getelementptr inbounds i8, i8* %7009, i64 40
  %7011 = bitcast i8* %7010 to float*
  %7012 = load float, float* %7011, align 4
  %7013 = insertelement <4 x float> zeroinitializer, float %7012, i32 0
  %7014 = insertelement <4 x float> %7013, float 0.000000e+00, i32 1
  %7015 = insertelement <4 x float> %7014, float 0.000000e+00, i32 2
  %7016 = insertelement <4 x float> %7015, float 0.000000e+00, i32 3
  %7017 = getelementptr inbounds float, float* %0, i64 10
  %7018 = load float, float* %7017, align 4
  %7019 = insertelement <4 x float> zeroinitializer, float %7018, i32 0
  %7020 = insertelement <4 x float> %7019, float 0.000000e+00, i32 1
  %7021 = insertelement <4 x float> %7020, float 0.000000e+00, i32 2
  %7022 = insertelement <4 x float> %7021, float 0.000000e+00, i32 3
  %7023 = call <4 x float> @llvm.fma.f32.229(<4 x float> %7016, <4 x float> %7022, <4 x float> %7008)
  %7024 = extractelement <4 x float> %7023, i32 0
  %7025 = getelementptr inbounds float, float* %2, i64 10
  store float %7024, float* %7025, align 4
  %7026 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7027 = getelementptr inbounds i8, i8* %7026, i64 32
  %7028 = bitcast i8* %7027 to float*
  %7029 = load float, float* %7028, align 4
  %7030 = insertelement <4 x float> zeroinitializer, float %7029, i32 0
  %7031 = insertelement <4 x float> %7030, float 1.000000e+00, i32 1
  %7032 = insertelement <4 x float> %7031, float 1.000000e+00, i32 2
  %7033 = insertelement <4 x float> %7032, float 1.000000e+00, i32 3
  %7034 = getelementptr inbounds float, float* %0, i64 2
  %7035 = load float, float* %7034, align 4
  %7036 = insertelement <4 x float> zeroinitializer, float %7035, i32 0
  %7037 = insertelement <4 x float> %7036, float 0.000000e+00, i32 1
  %7038 = insertelement <4 x float> %7037, float 0.000000e+00, i32 2
  %7039 = insertelement <4 x float> %7038, float 0.000000e+00, i32 3
  %7040 = fmul <4 x float> %7033, %7039
  %7041 = fadd <4 x float> %7040, zeroinitializer
  %7042 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7043 = getelementptr inbounds i8, i8* %7042, i64 36
  %7044 = bitcast i8* %7043 to float*
  %7045 = load float, float* %7044, align 4
  %7046 = insertelement <4 x float> zeroinitializer, float %7045, i32 0
  %7047 = insertelement <4 x float> %7046, float 1.000000e+00, i32 1
  %7048 = insertelement <4 x float> %7047, float 1.000000e+00, i32 2
  %7049 = insertelement <4 x float> %7048, float 1.000000e+00, i32 3
  %7050 = getelementptr inbounds float, float* %0, i64 6
  %7051 = load float, float* %7050, align 4
  %7052 = insertelement <4 x float> zeroinitializer, float %7051, i32 0
  %7053 = insertelement <4 x float> %7052, float 0.000000e+00, i32 1
  %7054 = insertelement <4 x float> %7053, float 0.000000e+00, i32 2
  %7055 = insertelement <4 x float> %7054, float 0.000000e+00, i32 3
  %7056 = call <4 x float> @llvm.fma.f32.230(<4 x float> %7049, <4 x float> %7055, <4 x float> %7041)
  %7057 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7058 = getelementptr inbounds i8, i8* %7057, i64 40
  %7059 = bitcast i8* %7058 to float*
  %7060 = load float, float* %7059, align 4
  %7061 = insertelement <4 x float> zeroinitializer, float %7060, i32 0
  %7062 = insertelement <4 x float> %7061, float 1.000000e+00, i32 1
  %7063 = insertelement <4 x float> %7062, float 1.000000e+00, i32 2
  %7064 = insertelement <4 x float> %7063, float 1.000000e+00, i32 3
  %7065 = getelementptr inbounds float, float* %0, i64 10
  %7066 = load float, float* %7065, align 4
  %7067 = insertelement <4 x float> zeroinitializer, float %7066, i32 0
  %7068 = insertelement <4 x float> %7067, float 0.000000e+00, i32 1
  %7069 = insertelement <4 x float> %7068, float 0.000000e+00, i32 2
  %7070 = insertelement <4 x float> %7069, float 0.000000e+00, i32 3
  %7071 = call <4 x float> @llvm.fma.f32.231(<4 x float> %7064, <4 x float> %7070, <4 x float> %7056)
  %7072 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7073 = getelementptr inbounds i8, i8* %7072, i64 44
  %7074 = bitcast i8* %7073 to float*
  %7075 = load float, float* %7074, align 4
  %7076 = insertelement <4 x float> zeroinitializer, float %7075, i32 0
  %7077 = insertelement <4 x float> %7076, float 0.000000e+00, i32 1
  %7078 = insertelement <4 x float> %7077, float 0.000000e+00, i32 2
  %7079 = insertelement <4 x float> %7078, float 0.000000e+00, i32 3
  %7080 = getelementptr inbounds float, float* %0, i64 14
  %7081 = load float, float* %7080, align 4
  %7082 = insertelement <4 x float> zeroinitializer, float %7081, i32 0
  %7083 = insertelement <4 x float> %7082, float 0.000000e+00, i32 1
  %7084 = insertelement <4 x float> %7083, float 0.000000e+00, i32 2
  %7085 = insertelement <4 x float> %7084, float 0.000000e+00, i32 3
  %7086 = call <4 x float> @llvm.fma.f32.232(<4 x float> %7079, <4 x float> %7085, <4 x float> %7071)
  %7087 = extractelement <4 x float> %7086, i32 0
  %7088 = getelementptr inbounds float, float* %2, i64 10
  store float %7087, float* %7088, align 4
  %7089 = extractelement <4 x float> %7086, i32 1
  %7090 = getelementptr inbounds float, float* %2, i64 11
  store float %7089, float* %7090, align 4
  %7091 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7092 = getelementptr inbounds i8, i8* %7091, i64 32
  %7093 = bitcast i8* %7092 to float*
  %7094 = load float, float* %7093, align 4
  %7095 = insertelement <4 x float> zeroinitializer, float %7094, i32 0
  %7096 = insertelement <4 x float> %7095, float 0.000000e+00, i32 1
  %7097 = insertelement <4 x float> %7096, float 0.000000e+00, i32 2
  %7098 = insertelement <4 x float> %7097, float 0.000000e+00, i32 3
  %7099 = getelementptr inbounds float, float* %0, i64 3
  %7100 = load float, float* %7099, align 4
  %7101 = insertelement <4 x float> zeroinitializer, float %7100, i32 0
  %7102 = insertelement <4 x float> %7101, float 0.000000e+00, i32 1
  %7103 = insertelement <4 x float> %7102, float 0.000000e+00, i32 2
  %7104 = insertelement <4 x float> %7103, float 0.000000e+00, i32 3
  %7105 = call <4 x float> @llvm.fma.f32.233(<4 x float> %7098, <4 x float> %7104, <4 x float> zeroinitializer)
  %7106 = extractelement <4 x float> %7105, i32 0
  %7107 = getelementptr inbounds float, float* %2, i64 11
  store float %7106, float* %7107, align 4
  %7108 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7109 = getelementptr inbounds i8, i8* %7108, i64 32
  %7110 = bitcast i8* %7109 to float*
  %7111 = load float, float* %7110, align 4
  %7112 = insertelement <4 x float> zeroinitializer, float %7111, i32 0
  %7113 = insertelement <4 x float> %7112, float 1.000000e+00, i32 1
  %7114 = insertelement <4 x float> %7113, float 1.000000e+00, i32 2
  %7115 = insertelement <4 x float> %7114, float 1.000000e+00, i32 3
  %7116 = getelementptr inbounds float, float* %0, i64 3
  %7117 = load float, float* %7116, align 4
  %7118 = insertelement <4 x float> zeroinitializer, float %7117, i32 0
  %7119 = insertelement <4 x float> %7118, float 0.000000e+00, i32 1
  %7120 = insertelement <4 x float> %7119, float 0.000000e+00, i32 2
  %7121 = insertelement <4 x float> %7120, float 0.000000e+00, i32 3
  %7122 = fmul <4 x float> %7115, %7121
  %7123 = fadd <4 x float> %7122, zeroinitializer
  %7124 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7125 = getelementptr inbounds i8, i8* %7124, i64 36
  %7126 = bitcast i8* %7125 to float*
  %7127 = load float, float* %7126, align 4
  %7128 = insertelement <4 x float> zeroinitializer, float %7127, i32 0
  %7129 = insertelement <4 x float> %7128, float 0.000000e+00, i32 1
  %7130 = insertelement <4 x float> %7129, float 0.000000e+00, i32 2
  %7131 = insertelement <4 x float> %7130, float 0.000000e+00, i32 3
  %7132 = getelementptr inbounds float, float* %0, i64 7
  %7133 = load float, float* %7132, align 4
  %7134 = insertelement <4 x float> zeroinitializer, float %7133, i32 0
  %7135 = insertelement <4 x float> %7134, float 0.000000e+00, i32 1
  %7136 = insertelement <4 x float> %7135, float 0.000000e+00, i32 2
  %7137 = insertelement <4 x float> %7136, float 0.000000e+00, i32 3
  %7138 = call <4 x float> @llvm.fma.f32.234(<4 x float> %7131, <4 x float> %7137, <4 x float> %7123)
  %7139 = extractelement <4 x float> %7138, i32 0
  %7140 = getelementptr inbounds float, float* %2, i64 11
  store float %7139, float* %7140, align 4
  %7141 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7142 = getelementptr inbounds i8, i8* %7141, i64 32
  %7143 = bitcast i8* %7142 to float*
  %7144 = load float, float* %7143, align 4
  %7145 = insertelement <4 x float> zeroinitializer, float %7144, i32 0
  %7146 = insertelement <4 x float> %7145, float 1.000000e+00, i32 1
  %7147 = insertelement <4 x float> %7146, float 1.000000e+00, i32 2
  %7148 = insertelement <4 x float> %7147, float 1.000000e+00, i32 3
  %7149 = getelementptr inbounds float, float* %0, i64 3
  %7150 = load float, float* %7149, align 4
  %7151 = insertelement <4 x float> zeroinitializer, float %7150, i32 0
  %7152 = insertelement <4 x float> %7151, float 0.000000e+00, i32 1
  %7153 = insertelement <4 x float> %7152, float 0.000000e+00, i32 2
  %7154 = insertelement <4 x float> %7153, float 0.000000e+00, i32 3
  %7155 = fmul <4 x float> %7148, %7154
  %7156 = fadd <4 x float> %7155, zeroinitializer
  %7157 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7158 = getelementptr inbounds i8, i8* %7157, i64 36
  %7159 = bitcast i8* %7158 to float*
  %7160 = load float, float* %7159, align 4
  %7161 = insertelement <4 x float> zeroinitializer, float %7160, i32 0
  %7162 = insertelement <4 x float> %7161, float 1.000000e+00, i32 1
  %7163 = insertelement <4 x float> %7162, float 1.000000e+00, i32 2
  %7164 = insertelement <4 x float> %7163, float 1.000000e+00, i32 3
  %7165 = getelementptr inbounds float, float* %0, i64 7
  %7166 = load float, float* %7165, align 4
  %7167 = insertelement <4 x float> zeroinitializer, float %7166, i32 0
  %7168 = insertelement <4 x float> %7167, float 0.000000e+00, i32 1
  %7169 = insertelement <4 x float> %7168, float 0.000000e+00, i32 2
  %7170 = insertelement <4 x float> %7169, float 0.000000e+00, i32 3
  %7171 = call <4 x float> @llvm.fma.f32.235(<4 x float> %7164, <4 x float> %7170, <4 x float> %7156)
  %7172 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7173 = getelementptr inbounds i8, i8* %7172, i64 40
  %7174 = bitcast i8* %7173 to float*
  %7175 = load float, float* %7174, align 4
  %7176 = insertelement <4 x float> zeroinitializer, float %7175, i32 0
  %7177 = insertelement <4 x float> %7176, float 0.000000e+00, i32 1
  %7178 = insertelement <4 x float> %7177, float 0.000000e+00, i32 2
  %7179 = insertelement <4 x float> %7178, float 0.000000e+00, i32 3
  %7180 = getelementptr inbounds float, float* %0, i64 11
  %7181 = load float, float* %7180, align 4
  %7182 = insertelement <4 x float> zeroinitializer, float %7181, i32 0
  %7183 = insertelement <4 x float> %7182, float 0.000000e+00, i32 1
  %7184 = insertelement <4 x float> %7183, float 0.000000e+00, i32 2
  %7185 = insertelement <4 x float> %7184, float 0.000000e+00, i32 3
  %7186 = call <4 x float> @llvm.fma.f32.236(<4 x float> %7179, <4 x float> %7185, <4 x float> %7171)
  %7187 = extractelement <4 x float> %7186, i32 0
  %7188 = getelementptr inbounds float, float* %2, i64 11
  store float %7187, float* %7188, align 4
  %7189 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7190 = getelementptr inbounds i8, i8* %7189, i64 32
  %7191 = bitcast i8* %7190 to float*
  %7192 = load float, float* %7191, align 4
  %7193 = insertelement <4 x float> zeroinitializer, float %7192, i32 0
  %7194 = insertelement <4 x float> %7193, float 1.000000e+00, i32 1
  %7195 = insertelement <4 x float> %7194, float 1.000000e+00, i32 2
  %7196 = insertelement <4 x float> %7195, float 1.000000e+00, i32 3
  %7197 = getelementptr inbounds float, float* %0, i64 3
  %7198 = load float, float* %7197, align 4
  %7199 = insertelement <4 x float> zeroinitializer, float %7198, i32 0
  %7200 = insertelement <4 x float> %7199, float 0.000000e+00, i32 1
  %7201 = insertelement <4 x float> %7200, float 0.000000e+00, i32 2
  %7202 = insertelement <4 x float> %7201, float 0.000000e+00, i32 3
  %7203 = fmul <4 x float> %7196, %7202
  %7204 = fadd <4 x float> %7203, zeroinitializer
  %7205 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7206 = getelementptr inbounds i8, i8* %7205, i64 36
  %7207 = bitcast i8* %7206 to float*
  %7208 = load float, float* %7207, align 4
  %7209 = insertelement <4 x float> zeroinitializer, float %7208, i32 0
  %7210 = insertelement <4 x float> %7209, float 1.000000e+00, i32 1
  %7211 = insertelement <4 x float> %7210, float 1.000000e+00, i32 2
  %7212 = insertelement <4 x float> %7211, float 1.000000e+00, i32 3
  %7213 = getelementptr inbounds float, float* %0, i64 7
  %7214 = load float, float* %7213, align 4
  %7215 = insertelement <4 x float> zeroinitializer, float %7214, i32 0
  %7216 = insertelement <4 x float> %7215, float 0.000000e+00, i32 1
  %7217 = insertelement <4 x float> %7216, float 0.000000e+00, i32 2
  %7218 = insertelement <4 x float> %7217, float 0.000000e+00, i32 3
  %7219 = call <4 x float> @llvm.fma.f32.237(<4 x float> %7212, <4 x float> %7218, <4 x float> %7204)
  %7220 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7221 = getelementptr inbounds i8, i8* %7220, i64 40
  %7222 = bitcast i8* %7221 to float*
  %7223 = load float, float* %7222, align 4
  %7224 = insertelement <4 x float> zeroinitializer, float %7223, i32 0
  %7225 = insertelement <4 x float> %7224, float 1.000000e+00, i32 1
  %7226 = insertelement <4 x float> %7225, float 1.000000e+00, i32 2
  %7227 = insertelement <4 x float> %7226, float 1.000000e+00, i32 3
  %7228 = getelementptr inbounds float, float* %0, i64 11
  %7229 = load float, float* %7228, align 4
  %7230 = insertelement <4 x float> zeroinitializer, float %7229, i32 0
  %7231 = insertelement <4 x float> %7230, float 0.000000e+00, i32 1
  %7232 = insertelement <4 x float> %7231, float 0.000000e+00, i32 2
  %7233 = insertelement <4 x float> %7232, float 0.000000e+00, i32 3
  %7234 = call <4 x float> @llvm.fma.f32.238(<4 x float> %7227, <4 x float> %7233, <4 x float> %7219)
  %7235 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7236 = getelementptr inbounds i8, i8* %7235, i64 44
  %7237 = bitcast i8* %7236 to float*
  %7238 = load float, float* %7237, align 4
  %7239 = insertelement <4 x float> zeroinitializer, float %7238, i32 0
  %7240 = insertelement <4 x float> %7239, float 0.000000e+00, i32 1
  %7241 = insertelement <4 x float> %7240, float 0.000000e+00, i32 2
  %7242 = insertelement <4 x float> %7241, float 0.000000e+00, i32 3
  %7243 = getelementptr inbounds float, float* %0, i64 15
  %7244 = load float, float* %7243, align 4
  %7245 = insertelement <4 x float> zeroinitializer, float %7244, i32 0
  %7246 = insertelement <4 x float> %7245, float 0.000000e+00, i32 1
  %7247 = insertelement <4 x float> %7246, float 0.000000e+00, i32 2
  %7248 = insertelement <4 x float> %7247, float 0.000000e+00, i32 3
  %7249 = call <4 x float> @llvm.fma.f32.239(<4 x float> %7242, <4 x float> %7248, <4 x float> %7234)
  %7250 = extractelement <4 x float> %7249, i32 0
  %7251 = getelementptr inbounds float, float* %2, i64 11
  store float %7250, float* %7251, align 4
  %7252 = getelementptr inbounds float, float* %2, i64 12
  store float 0.000000e+00, float* %7252, align 4
  %7253 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7254 = getelementptr inbounds i8, i8* %7253, i64 48
  %7255 = bitcast i8* %7254 to float*
  %7256 = load float, float* %7255, align 4
  %7257 = insertelement <4 x float> zeroinitializer, float %7256, i32 0
  %7258 = insertelement <4 x float> %7257, float 0.000000e+00, i32 1
  %7259 = insertelement <4 x float> %7258, float 0.000000e+00, i32 2
  %7260 = insertelement <4 x float> %7259, float 0.000000e+00, i32 3
  %7261 = load float, float* %0, align 4
  %7262 = insertelement <4 x float> zeroinitializer, float %7261, i32 0
  %7263 = insertelement <4 x float> %7262, float 0.000000e+00, i32 1
  %7264 = insertelement <4 x float> %7263, float 0.000000e+00, i32 2
  %7265 = insertelement <4 x float> %7264, float 0.000000e+00, i32 3
  %7266 = call <4 x float> @llvm.fma.f32.240(<4 x float> %7260, <4 x float> %7265, <4 x float> zeroinitializer)
  %7267 = extractelement <4 x float> %7266, i32 0
  %7268 = getelementptr inbounds float, float* %2, i64 12
  store float %7267, float* %7268, align 4
  %7269 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7270 = getelementptr inbounds i8, i8* %7269, i64 48
  %7271 = bitcast i8* %7270 to float*
  %7272 = load float, float* %7271, align 4
  %7273 = insertelement <4 x float> zeroinitializer, float %7272, i32 0
  %7274 = insertelement <4 x float> %7273, float 1.000000e+00, i32 1
  %7275 = insertelement <4 x float> %7274, float 1.000000e+00, i32 2
  %7276 = insertelement <4 x float> %7275, float 1.000000e+00, i32 3
  %7277 = load float, float* %0, align 4
  %7278 = insertelement <4 x float> zeroinitializer, float %7277, i32 0
  %7279 = insertelement <4 x float> %7278, float 0.000000e+00, i32 1
  %7280 = insertelement <4 x float> %7279, float 0.000000e+00, i32 2
  %7281 = insertelement <4 x float> %7280, float 0.000000e+00, i32 3
  %7282 = fmul <4 x float> %7276, %7281
  %7283 = fadd <4 x float> %7282, zeroinitializer
  %7284 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7285 = getelementptr inbounds i8, i8* %7284, i64 52
  %7286 = bitcast i8* %7285 to float*
  %7287 = load float, float* %7286, align 4
  %7288 = insertelement <4 x float> zeroinitializer, float %7287, i32 0
  %7289 = insertelement <4 x float> %7288, float 0.000000e+00, i32 1
  %7290 = insertelement <4 x float> %7289, float 0.000000e+00, i32 2
  %7291 = insertelement <4 x float> %7290, float 0.000000e+00, i32 3
  %7292 = getelementptr inbounds float, float* %0, i64 4
  %7293 = load float, float* %7292, align 4
  %7294 = insertelement <4 x float> zeroinitializer, float %7293, i32 0
  %7295 = insertelement <4 x float> %7294, float 0.000000e+00, i32 1
  %7296 = insertelement <4 x float> %7295, float 0.000000e+00, i32 2
  %7297 = insertelement <4 x float> %7296, float 0.000000e+00, i32 3
  %7298 = call <4 x float> @llvm.fma.f32.241(<4 x float> %7291, <4 x float> %7297, <4 x float> %7283)
  %7299 = extractelement <4 x float> %7298, i32 0
  %7300 = getelementptr inbounds float, float* %2, i64 12
  store float %7299, float* %7300, align 4
  %7301 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7302 = getelementptr inbounds i8, i8* %7301, i64 48
  %7303 = bitcast i8* %7302 to float*
  %7304 = load float, float* %7303, align 4
  %7305 = insertelement <4 x float> zeroinitializer, float %7304, i32 0
  %7306 = insertelement <4 x float> %7305, float 1.000000e+00, i32 1
  %7307 = insertelement <4 x float> %7306, float 1.000000e+00, i32 2
  %7308 = insertelement <4 x float> %7307, float 1.000000e+00, i32 3
  %7309 = load float, float* %0, align 4
  %7310 = insertelement <4 x float> zeroinitializer, float %7309, i32 0
  %7311 = insertelement <4 x float> %7310, float 0.000000e+00, i32 1
  %7312 = insertelement <4 x float> %7311, float 0.000000e+00, i32 2
  %7313 = insertelement <4 x float> %7312, float 0.000000e+00, i32 3
  %7314 = fmul <4 x float> %7308, %7313
  %7315 = fadd <4 x float> %7314, zeroinitializer
  %7316 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7317 = getelementptr inbounds i8, i8* %7316, i64 52
  %7318 = bitcast i8* %7317 to float*
  %7319 = load float, float* %7318, align 4
  %7320 = insertelement <4 x float> zeroinitializer, float %7319, i32 0
  %7321 = insertelement <4 x float> %7320, float 1.000000e+00, i32 1
  %7322 = insertelement <4 x float> %7321, float 1.000000e+00, i32 2
  %7323 = insertelement <4 x float> %7322, float 1.000000e+00, i32 3
  %7324 = getelementptr inbounds float, float* %0, i64 4
  %7325 = load float, float* %7324, align 4
  %7326 = insertelement <4 x float> zeroinitializer, float %7325, i32 0
  %7327 = insertelement <4 x float> %7326, float 0.000000e+00, i32 1
  %7328 = insertelement <4 x float> %7327, float 0.000000e+00, i32 2
  %7329 = insertelement <4 x float> %7328, float 0.000000e+00, i32 3
  %7330 = call <4 x float> @llvm.fma.f32.242(<4 x float> %7323, <4 x float> %7329, <4 x float> %7315)
  %7331 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7332 = getelementptr inbounds i8, i8* %7331, i64 56
  %7333 = bitcast i8* %7332 to float*
  %7334 = load float, float* %7333, align 4
  %7335 = insertelement <4 x float> zeroinitializer, float %7334, i32 0
  %7336 = insertelement <4 x float> %7335, float 0.000000e+00, i32 1
  %7337 = insertelement <4 x float> %7336, float 0.000000e+00, i32 2
  %7338 = insertelement <4 x float> %7337, float 0.000000e+00, i32 3
  %7339 = getelementptr inbounds float, float* %0, i64 8
  %7340 = load float, float* %7339, align 4
  %7341 = insertelement <4 x float> zeroinitializer, float %7340, i32 0
  %7342 = insertelement <4 x float> %7341, float 0.000000e+00, i32 1
  %7343 = insertelement <4 x float> %7342, float 0.000000e+00, i32 2
  %7344 = insertelement <4 x float> %7343, float 0.000000e+00, i32 3
  %7345 = call <4 x float> @llvm.fma.f32.243(<4 x float> %7338, <4 x float> %7344, <4 x float> %7330)
  %7346 = extractelement <4 x float> %7345, i32 0
  %7347 = getelementptr inbounds float, float* %2, i64 12
  store float %7346, float* %7347, align 4
  %7348 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7349 = getelementptr inbounds i8, i8* %7348, i64 48
  %7350 = bitcast i8* %7349 to float*
  %7351 = load float, float* %7350, align 4
  %7352 = insertelement <4 x float> zeroinitializer, float %7351, i32 0
  %7353 = insertelement <4 x float> %7352, float 1.000000e+00, i32 1
  %7354 = insertelement <4 x float> %7353, float 1.000000e+00, i32 2
  %7355 = insertelement <4 x float> %7354, float 1.000000e+00, i32 3
  %7356 = load float, float* %0, align 4
  %7357 = insertelement <4 x float> zeroinitializer, float %7356, i32 0
  %7358 = insertelement <4 x float> %7357, float 0.000000e+00, i32 1
  %7359 = insertelement <4 x float> %7358, float 0.000000e+00, i32 2
  %7360 = insertelement <4 x float> %7359, float 0.000000e+00, i32 3
  %7361 = fmul <4 x float> %7355, %7360
  %7362 = fadd <4 x float> %7361, zeroinitializer
  %7363 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7364 = getelementptr inbounds i8, i8* %7363, i64 52
  %7365 = bitcast i8* %7364 to float*
  %7366 = load float, float* %7365, align 4
  %7367 = insertelement <4 x float> zeroinitializer, float %7366, i32 0
  %7368 = insertelement <4 x float> %7367, float 1.000000e+00, i32 1
  %7369 = insertelement <4 x float> %7368, float 1.000000e+00, i32 2
  %7370 = insertelement <4 x float> %7369, float 1.000000e+00, i32 3
  %7371 = getelementptr inbounds float, float* %0, i64 4
  %7372 = load float, float* %7371, align 4
  %7373 = insertelement <4 x float> zeroinitializer, float %7372, i32 0
  %7374 = insertelement <4 x float> %7373, float 0.000000e+00, i32 1
  %7375 = insertelement <4 x float> %7374, float 0.000000e+00, i32 2
  %7376 = insertelement <4 x float> %7375, float 0.000000e+00, i32 3
  %7377 = call <4 x float> @llvm.fma.f32.244(<4 x float> %7370, <4 x float> %7376, <4 x float> %7362)
  %7378 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7379 = getelementptr inbounds i8, i8* %7378, i64 56
  %7380 = bitcast i8* %7379 to float*
  %7381 = load float, float* %7380, align 4
  %7382 = insertelement <4 x float> zeroinitializer, float %7381, i32 0
  %7383 = insertelement <4 x float> %7382, float 1.000000e+00, i32 1
  %7384 = insertelement <4 x float> %7383, float 1.000000e+00, i32 2
  %7385 = insertelement <4 x float> %7384, float 1.000000e+00, i32 3
  %7386 = getelementptr inbounds float, float* %0, i64 8
  %7387 = load float, float* %7386, align 4
  %7388 = insertelement <4 x float> zeroinitializer, float %7387, i32 0
  %7389 = insertelement <4 x float> %7388, float 0.000000e+00, i32 1
  %7390 = insertelement <4 x float> %7389, float 0.000000e+00, i32 2
  %7391 = insertelement <4 x float> %7390, float 0.000000e+00, i32 3
  %7392 = call <4 x float> @llvm.fma.f32.245(<4 x float> %7385, <4 x float> %7391, <4 x float> %7377)
  %7393 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7394 = getelementptr inbounds i8, i8* %7393, i64 60
  %7395 = bitcast i8* %7394 to float*
  %7396 = load float, float* %7395, align 4
  %7397 = insertelement <4 x float> zeroinitializer, float %7396, i32 0
  %7398 = insertelement <4 x float> %7397, float 0.000000e+00, i32 1
  %7399 = insertelement <4 x float> %7398, float 0.000000e+00, i32 2
  %7400 = insertelement <4 x float> %7399, float 0.000000e+00, i32 3
  %7401 = getelementptr inbounds float, float* %0, i64 12
  %7402 = load float, float* %7401, align 4
  %7403 = insertelement <4 x float> zeroinitializer, float %7402, i32 0
  %7404 = insertelement <4 x float> %7403, float 0.000000e+00, i32 1
  %7405 = insertelement <4 x float> %7404, float 0.000000e+00, i32 2
  %7406 = insertelement <4 x float> %7405, float 0.000000e+00, i32 3
  %7407 = call <4 x float> @llvm.fma.f32.246(<4 x float> %7400, <4 x float> %7406, <4 x float> %7392)
  %7408 = extractelement <4 x float> %7407, i32 0
  %7409 = getelementptr inbounds float, float* %2, i64 12
  store float %7408, float* %7409, align 4
  %7410 = extractelement <4 x float> %7407, i32 1
  %7411 = getelementptr inbounds float, float* %2, i64 13
  store float %7410, float* %7411, align 4
  %7412 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7413 = getelementptr inbounds i8, i8* %7412, i64 48
  %7414 = bitcast i8* %7413 to float*
  %7415 = load float, float* %7414, align 4
  %7416 = insertelement <4 x float> zeroinitializer, float %7415, i32 0
  %7417 = insertelement <4 x float> %7416, float 0.000000e+00, i32 1
  %7418 = insertelement <4 x float> %7417, float 0.000000e+00, i32 2
  %7419 = insertelement <4 x float> %7418, float 0.000000e+00, i32 3
  %7420 = getelementptr inbounds float, float* %0, i64 1
  %7421 = load float, float* %7420, align 4
  %7422 = insertelement <4 x float> zeroinitializer, float %7421, i32 0
  %7423 = insertelement <4 x float> %7422, float 0.000000e+00, i32 1
  %7424 = insertelement <4 x float> %7423, float 0.000000e+00, i32 2
  %7425 = insertelement <4 x float> %7424, float 0.000000e+00, i32 3
  %7426 = call <4 x float> @llvm.fma.f32.247(<4 x float> %7419, <4 x float> %7425, <4 x float> zeroinitializer)
  %7427 = extractelement <4 x float> %7426, i32 0
  %7428 = getelementptr inbounds float, float* %2, i64 13
  store float %7427, float* %7428, align 4
  %7429 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7430 = getelementptr inbounds i8, i8* %7429, i64 48
  %7431 = bitcast i8* %7430 to float*
  %7432 = load float, float* %7431, align 4
  %7433 = insertelement <4 x float> zeroinitializer, float %7432, i32 0
  %7434 = insertelement <4 x float> %7433, float 1.000000e+00, i32 1
  %7435 = insertelement <4 x float> %7434, float 1.000000e+00, i32 2
  %7436 = insertelement <4 x float> %7435, float 1.000000e+00, i32 3
  %7437 = getelementptr inbounds float, float* %0, i64 1
  %7438 = load float, float* %7437, align 4
  %7439 = insertelement <4 x float> zeroinitializer, float %7438, i32 0
  %7440 = insertelement <4 x float> %7439, float 0.000000e+00, i32 1
  %7441 = insertelement <4 x float> %7440, float 0.000000e+00, i32 2
  %7442 = insertelement <4 x float> %7441, float 0.000000e+00, i32 3
  %7443 = fmul <4 x float> %7436, %7442
  %7444 = fadd <4 x float> %7443, zeroinitializer
  %7445 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7446 = getelementptr inbounds i8, i8* %7445, i64 52
  %7447 = bitcast i8* %7446 to float*
  %7448 = load float, float* %7447, align 4
  %7449 = insertelement <4 x float> zeroinitializer, float %7448, i32 0
  %7450 = insertelement <4 x float> %7449, float 0.000000e+00, i32 1
  %7451 = insertelement <4 x float> %7450, float 0.000000e+00, i32 2
  %7452 = insertelement <4 x float> %7451, float 0.000000e+00, i32 3
  %7453 = getelementptr inbounds float, float* %0, i64 5
  %7454 = load float, float* %7453, align 4
  %7455 = insertelement <4 x float> zeroinitializer, float %7454, i32 0
  %7456 = insertelement <4 x float> %7455, float 0.000000e+00, i32 1
  %7457 = insertelement <4 x float> %7456, float 0.000000e+00, i32 2
  %7458 = insertelement <4 x float> %7457, float 0.000000e+00, i32 3
  %7459 = call <4 x float> @llvm.fma.f32.248(<4 x float> %7452, <4 x float> %7458, <4 x float> %7444)
  %7460 = extractelement <4 x float> %7459, i32 0
  %7461 = getelementptr inbounds float, float* %2, i64 13
  store float %7460, float* %7461, align 4
  %7462 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7463 = getelementptr inbounds i8, i8* %7462, i64 48
  %7464 = bitcast i8* %7463 to float*
  %7465 = load float, float* %7464, align 4
  %7466 = insertelement <4 x float> zeroinitializer, float %7465, i32 0
  %7467 = insertelement <4 x float> %7466, float 1.000000e+00, i32 1
  %7468 = insertelement <4 x float> %7467, float 1.000000e+00, i32 2
  %7469 = insertelement <4 x float> %7468, float 1.000000e+00, i32 3
  %7470 = getelementptr inbounds float, float* %0, i64 1
  %7471 = load float, float* %7470, align 4
  %7472 = insertelement <4 x float> zeroinitializer, float %7471, i32 0
  %7473 = insertelement <4 x float> %7472, float 0.000000e+00, i32 1
  %7474 = insertelement <4 x float> %7473, float 0.000000e+00, i32 2
  %7475 = insertelement <4 x float> %7474, float 0.000000e+00, i32 3
  %7476 = fmul <4 x float> %7469, %7475
  %7477 = fadd <4 x float> %7476, zeroinitializer
  %7478 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7479 = getelementptr inbounds i8, i8* %7478, i64 52
  %7480 = bitcast i8* %7479 to float*
  %7481 = load float, float* %7480, align 4
  %7482 = insertelement <4 x float> zeroinitializer, float %7481, i32 0
  %7483 = insertelement <4 x float> %7482, float 1.000000e+00, i32 1
  %7484 = insertelement <4 x float> %7483, float 1.000000e+00, i32 2
  %7485 = insertelement <4 x float> %7484, float 1.000000e+00, i32 3
  %7486 = getelementptr inbounds float, float* %0, i64 5
  %7487 = load float, float* %7486, align 4
  %7488 = insertelement <4 x float> zeroinitializer, float %7487, i32 0
  %7489 = insertelement <4 x float> %7488, float 0.000000e+00, i32 1
  %7490 = insertelement <4 x float> %7489, float 0.000000e+00, i32 2
  %7491 = insertelement <4 x float> %7490, float 0.000000e+00, i32 3
  %7492 = call <4 x float> @llvm.fma.f32.249(<4 x float> %7485, <4 x float> %7491, <4 x float> %7477)
  %7493 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7494 = getelementptr inbounds i8, i8* %7493, i64 56
  %7495 = bitcast i8* %7494 to float*
  %7496 = load float, float* %7495, align 4
  %7497 = insertelement <4 x float> zeroinitializer, float %7496, i32 0
  %7498 = insertelement <4 x float> %7497, float 0.000000e+00, i32 1
  %7499 = insertelement <4 x float> %7498, float 0.000000e+00, i32 2
  %7500 = insertelement <4 x float> %7499, float 0.000000e+00, i32 3
  %7501 = getelementptr inbounds float, float* %0, i64 9
  %7502 = load float, float* %7501, align 4
  %7503 = insertelement <4 x float> zeroinitializer, float %7502, i32 0
  %7504 = insertelement <4 x float> %7503, float 0.000000e+00, i32 1
  %7505 = insertelement <4 x float> %7504, float 0.000000e+00, i32 2
  %7506 = insertelement <4 x float> %7505, float 0.000000e+00, i32 3
  %7507 = call <4 x float> @llvm.fma.f32.250(<4 x float> %7500, <4 x float> %7506, <4 x float> %7492)
  %7508 = extractelement <4 x float> %7507, i32 0
  %7509 = getelementptr inbounds float, float* %2, i64 13
  store float %7508, float* %7509, align 4
  %7510 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7511 = getelementptr inbounds i8, i8* %7510, i64 48
  %7512 = bitcast i8* %7511 to float*
  %7513 = load float, float* %7512, align 4
  %7514 = insertelement <4 x float> zeroinitializer, float %7513, i32 0
  %7515 = insertelement <4 x float> %7514, float 1.000000e+00, i32 1
  %7516 = insertelement <4 x float> %7515, float 1.000000e+00, i32 2
  %7517 = insertelement <4 x float> %7516, float 1.000000e+00, i32 3
  %7518 = getelementptr inbounds float, float* %0, i64 1
  %7519 = load float, float* %7518, align 4
  %7520 = insertelement <4 x float> zeroinitializer, float %7519, i32 0
  %7521 = insertelement <4 x float> %7520, float 0.000000e+00, i32 1
  %7522 = insertelement <4 x float> %7521, float 0.000000e+00, i32 2
  %7523 = insertelement <4 x float> %7522, float 0.000000e+00, i32 3
  %7524 = fmul <4 x float> %7517, %7523
  %7525 = fadd <4 x float> %7524, zeroinitializer
  %7526 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7527 = getelementptr inbounds i8, i8* %7526, i64 52
  %7528 = bitcast i8* %7527 to float*
  %7529 = load float, float* %7528, align 4
  %7530 = insertelement <4 x float> zeroinitializer, float %7529, i32 0
  %7531 = insertelement <4 x float> %7530, float 1.000000e+00, i32 1
  %7532 = insertelement <4 x float> %7531, float 1.000000e+00, i32 2
  %7533 = insertelement <4 x float> %7532, float 1.000000e+00, i32 3
  %7534 = getelementptr inbounds float, float* %0, i64 5
  %7535 = load float, float* %7534, align 4
  %7536 = insertelement <4 x float> zeroinitializer, float %7535, i32 0
  %7537 = insertelement <4 x float> %7536, float 0.000000e+00, i32 1
  %7538 = insertelement <4 x float> %7537, float 0.000000e+00, i32 2
  %7539 = insertelement <4 x float> %7538, float 0.000000e+00, i32 3
  %7540 = call <4 x float> @llvm.fma.f32.251(<4 x float> %7533, <4 x float> %7539, <4 x float> %7525)
  %7541 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7542 = getelementptr inbounds i8, i8* %7541, i64 56
  %7543 = bitcast i8* %7542 to float*
  %7544 = load float, float* %7543, align 4
  %7545 = insertelement <4 x float> zeroinitializer, float %7544, i32 0
  %7546 = insertelement <4 x float> %7545, float 1.000000e+00, i32 1
  %7547 = insertelement <4 x float> %7546, float 1.000000e+00, i32 2
  %7548 = insertelement <4 x float> %7547, float 1.000000e+00, i32 3
  %7549 = getelementptr inbounds float, float* %0, i64 9
  %7550 = load float, float* %7549, align 4
  %7551 = insertelement <4 x float> zeroinitializer, float %7550, i32 0
  %7552 = insertelement <4 x float> %7551, float 0.000000e+00, i32 1
  %7553 = insertelement <4 x float> %7552, float 0.000000e+00, i32 2
  %7554 = insertelement <4 x float> %7553, float 0.000000e+00, i32 3
  %7555 = call <4 x float> @llvm.fma.f32.252(<4 x float> %7548, <4 x float> %7554, <4 x float> %7540)
  %7556 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7557 = getelementptr inbounds i8, i8* %7556, i64 60
  %7558 = bitcast i8* %7557 to float*
  %7559 = load float, float* %7558, align 4
  %7560 = insertelement <4 x float> zeroinitializer, float %7559, i32 0
  %7561 = insertelement <4 x float> %7560, float 0.000000e+00, i32 1
  %7562 = insertelement <4 x float> %7561, float 0.000000e+00, i32 2
  %7563 = insertelement <4 x float> %7562, float 0.000000e+00, i32 3
  %7564 = getelementptr inbounds float, float* %0, i64 13
  %7565 = load float, float* %7564, align 4
  %7566 = insertelement <4 x float> zeroinitializer, float %7565, i32 0
  %7567 = insertelement <4 x float> %7566, float 0.000000e+00, i32 1
  %7568 = insertelement <4 x float> %7567, float 0.000000e+00, i32 2
  %7569 = insertelement <4 x float> %7568, float 0.000000e+00, i32 3
  %7570 = call <4 x float> @llvm.fma.f32.253(<4 x float> %7563, <4 x float> %7569, <4 x float> %7555)
  %7571 = extractelement <4 x float> %7570, i32 0
  %7572 = getelementptr inbounds float, float* %2, i64 13
  store float %7571, float* %7572, align 4
  %7573 = extractelement <4 x float> %7570, i32 1
  %7574 = getelementptr inbounds float, float* %2, i64 14
  store float %7573, float* %7574, align 4
  %7575 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7576 = getelementptr inbounds i8, i8* %7575, i64 48
  %7577 = bitcast i8* %7576 to float*
  %7578 = load float, float* %7577, align 4
  %7579 = insertelement <4 x float> zeroinitializer, float %7578, i32 0
  %7580 = insertelement <4 x float> %7579, float 0.000000e+00, i32 1
  %7581 = insertelement <4 x float> %7580, float 0.000000e+00, i32 2
  %7582 = insertelement <4 x float> %7581, float 0.000000e+00, i32 3
  %7583 = getelementptr inbounds float, float* %0, i64 2
  %7584 = load float, float* %7583, align 4
  %7585 = insertelement <4 x float> zeroinitializer, float %7584, i32 0
  %7586 = insertelement <4 x float> %7585, float 0.000000e+00, i32 1
  %7587 = insertelement <4 x float> %7586, float 0.000000e+00, i32 2
  %7588 = insertelement <4 x float> %7587, float 0.000000e+00, i32 3
  %7589 = call <4 x float> @llvm.fma.f32.254(<4 x float> %7582, <4 x float> %7588, <4 x float> zeroinitializer)
  %7590 = extractelement <4 x float> %7589, i32 0
  %7591 = getelementptr inbounds float, float* %2, i64 14
  store float %7590, float* %7591, align 4
  %7592 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7593 = getelementptr inbounds i8, i8* %7592, i64 48
  %7594 = bitcast i8* %7593 to float*
  %7595 = load float, float* %7594, align 4
  %7596 = insertelement <4 x float> zeroinitializer, float %7595, i32 0
  %7597 = insertelement <4 x float> %7596, float 1.000000e+00, i32 1
  %7598 = insertelement <4 x float> %7597, float 1.000000e+00, i32 2
  %7599 = insertelement <4 x float> %7598, float 1.000000e+00, i32 3
  %7600 = getelementptr inbounds float, float* %0, i64 2
  %7601 = load float, float* %7600, align 4
  %7602 = insertelement <4 x float> zeroinitializer, float %7601, i32 0
  %7603 = insertelement <4 x float> %7602, float 0.000000e+00, i32 1
  %7604 = insertelement <4 x float> %7603, float 0.000000e+00, i32 2
  %7605 = insertelement <4 x float> %7604, float 0.000000e+00, i32 3
  %7606 = fmul <4 x float> %7599, %7605
  %7607 = fadd <4 x float> %7606, zeroinitializer
  %7608 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7609 = getelementptr inbounds i8, i8* %7608, i64 52
  %7610 = bitcast i8* %7609 to float*
  %7611 = load float, float* %7610, align 4
  %7612 = insertelement <4 x float> zeroinitializer, float %7611, i32 0
  %7613 = insertelement <4 x float> %7612, float 0.000000e+00, i32 1
  %7614 = insertelement <4 x float> %7613, float 0.000000e+00, i32 2
  %7615 = insertelement <4 x float> %7614, float 0.000000e+00, i32 3
  %7616 = getelementptr inbounds float, float* %0, i64 6
  %7617 = load float, float* %7616, align 4
  %7618 = insertelement <4 x float> zeroinitializer, float %7617, i32 0
  %7619 = insertelement <4 x float> %7618, float 0.000000e+00, i32 1
  %7620 = insertelement <4 x float> %7619, float 0.000000e+00, i32 2
  %7621 = insertelement <4 x float> %7620, float 0.000000e+00, i32 3
  %7622 = call <4 x float> @llvm.fma.f32.255(<4 x float> %7615, <4 x float> %7621, <4 x float> %7607)
  %7623 = extractelement <4 x float> %7622, i32 0
  %7624 = getelementptr inbounds float, float* %2, i64 14
  store float %7623, float* %7624, align 4
  %7625 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7626 = getelementptr inbounds i8, i8* %7625, i64 48
  %7627 = bitcast i8* %7626 to float*
  %7628 = load float, float* %7627, align 4
  %7629 = insertelement <4 x float> zeroinitializer, float %7628, i32 0
  %7630 = insertelement <4 x float> %7629, float 1.000000e+00, i32 1
  %7631 = insertelement <4 x float> %7630, float 1.000000e+00, i32 2
  %7632 = insertelement <4 x float> %7631, float 1.000000e+00, i32 3
  %7633 = getelementptr inbounds float, float* %0, i64 2
  %7634 = load float, float* %7633, align 4
  %7635 = insertelement <4 x float> zeroinitializer, float %7634, i32 0
  %7636 = insertelement <4 x float> %7635, float 0.000000e+00, i32 1
  %7637 = insertelement <4 x float> %7636, float 0.000000e+00, i32 2
  %7638 = insertelement <4 x float> %7637, float 0.000000e+00, i32 3
  %7639 = fmul <4 x float> %7632, %7638
  %7640 = fadd <4 x float> %7639, zeroinitializer
  %7641 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7642 = getelementptr inbounds i8, i8* %7641, i64 52
  %7643 = bitcast i8* %7642 to float*
  %7644 = load float, float* %7643, align 4
  %7645 = insertelement <4 x float> zeroinitializer, float %7644, i32 0
  %7646 = insertelement <4 x float> %7645, float 1.000000e+00, i32 1
  %7647 = insertelement <4 x float> %7646, float 1.000000e+00, i32 2
  %7648 = insertelement <4 x float> %7647, float 1.000000e+00, i32 3
  %7649 = getelementptr inbounds float, float* %0, i64 6
  %7650 = load float, float* %7649, align 4
  %7651 = insertelement <4 x float> zeroinitializer, float %7650, i32 0
  %7652 = insertelement <4 x float> %7651, float 0.000000e+00, i32 1
  %7653 = insertelement <4 x float> %7652, float 0.000000e+00, i32 2
  %7654 = insertelement <4 x float> %7653, float 0.000000e+00, i32 3
  %7655 = call <4 x float> @llvm.fma.f32.256(<4 x float> %7648, <4 x float> %7654, <4 x float> %7640)
  %7656 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7657 = getelementptr inbounds i8, i8* %7656, i64 56
  %7658 = bitcast i8* %7657 to float*
  %7659 = load float, float* %7658, align 4
  %7660 = insertelement <4 x float> zeroinitializer, float %7659, i32 0
  %7661 = insertelement <4 x float> %7660, float 0.000000e+00, i32 1
  %7662 = insertelement <4 x float> %7661, float 0.000000e+00, i32 2
  %7663 = insertelement <4 x float> %7662, float 0.000000e+00, i32 3
  %7664 = getelementptr inbounds float, float* %0, i64 10
  %7665 = load float, float* %7664, align 4
  %7666 = insertelement <4 x float> zeroinitializer, float %7665, i32 0
  %7667 = insertelement <4 x float> %7666, float 0.000000e+00, i32 1
  %7668 = insertelement <4 x float> %7667, float 0.000000e+00, i32 2
  %7669 = insertelement <4 x float> %7668, float 0.000000e+00, i32 3
  %7670 = call <4 x float> @llvm.fma.f32.257(<4 x float> %7663, <4 x float> %7669, <4 x float> %7655)
  %7671 = extractelement <4 x float> %7670, i32 0
  %7672 = getelementptr inbounds float, float* %2, i64 14
  store float %7671, float* %7672, align 4
  %7673 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7674 = getelementptr inbounds i8, i8* %7673, i64 48
  %7675 = bitcast i8* %7674 to float*
  %7676 = load float, float* %7675, align 4
  %7677 = insertelement <4 x float> zeroinitializer, float %7676, i32 0
  %7678 = insertelement <4 x float> %7677, float 1.000000e+00, i32 1
  %7679 = insertelement <4 x float> %7678, float 1.000000e+00, i32 2
  %7680 = insertelement <4 x float> %7679, float 1.000000e+00, i32 3
  %7681 = getelementptr inbounds float, float* %0, i64 2
  %7682 = load float, float* %7681, align 4
  %7683 = insertelement <4 x float> zeroinitializer, float %7682, i32 0
  %7684 = insertelement <4 x float> %7683, float 0.000000e+00, i32 1
  %7685 = insertelement <4 x float> %7684, float 0.000000e+00, i32 2
  %7686 = insertelement <4 x float> %7685, float 0.000000e+00, i32 3
  %7687 = fmul <4 x float> %7680, %7686
  %7688 = fadd <4 x float> %7687, zeroinitializer
  %7689 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7690 = getelementptr inbounds i8, i8* %7689, i64 52
  %7691 = bitcast i8* %7690 to float*
  %7692 = load float, float* %7691, align 4
  %7693 = insertelement <4 x float> zeroinitializer, float %7692, i32 0
  %7694 = insertelement <4 x float> %7693, float 1.000000e+00, i32 1
  %7695 = insertelement <4 x float> %7694, float 1.000000e+00, i32 2
  %7696 = insertelement <4 x float> %7695, float 1.000000e+00, i32 3
  %7697 = getelementptr inbounds float, float* %0, i64 6
  %7698 = load float, float* %7697, align 4
  %7699 = insertelement <4 x float> zeroinitializer, float %7698, i32 0
  %7700 = insertelement <4 x float> %7699, float 0.000000e+00, i32 1
  %7701 = insertelement <4 x float> %7700, float 0.000000e+00, i32 2
  %7702 = insertelement <4 x float> %7701, float 0.000000e+00, i32 3
  %7703 = call <4 x float> @llvm.fma.f32.258(<4 x float> %7696, <4 x float> %7702, <4 x float> %7688)
  %7704 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7705 = getelementptr inbounds i8, i8* %7704, i64 56
  %7706 = bitcast i8* %7705 to float*
  %7707 = load float, float* %7706, align 4
  %7708 = insertelement <4 x float> zeroinitializer, float %7707, i32 0
  %7709 = insertelement <4 x float> %7708, float 1.000000e+00, i32 1
  %7710 = insertelement <4 x float> %7709, float 1.000000e+00, i32 2
  %7711 = insertelement <4 x float> %7710, float 1.000000e+00, i32 3
  %7712 = getelementptr inbounds float, float* %0, i64 10
  %7713 = load float, float* %7712, align 4
  %7714 = insertelement <4 x float> zeroinitializer, float %7713, i32 0
  %7715 = insertelement <4 x float> %7714, float 0.000000e+00, i32 1
  %7716 = insertelement <4 x float> %7715, float 0.000000e+00, i32 2
  %7717 = insertelement <4 x float> %7716, float 0.000000e+00, i32 3
  %7718 = call <4 x float> @llvm.fma.f32.259(<4 x float> %7711, <4 x float> %7717, <4 x float> %7703)
  %7719 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7720 = getelementptr inbounds i8, i8* %7719, i64 60
  %7721 = bitcast i8* %7720 to float*
  %7722 = load float, float* %7721, align 4
  %7723 = insertelement <4 x float> zeroinitializer, float %7722, i32 0
  %7724 = insertelement <4 x float> %7723, float 0.000000e+00, i32 1
  %7725 = insertelement <4 x float> %7724, float 0.000000e+00, i32 2
  %7726 = insertelement <4 x float> %7725, float 0.000000e+00, i32 3
  %7727 = getelementptr inbounds float, float* %0, i64 14
  %7728 = load float, float* %7727, align 4
  %7729 = insertelement <4 x float> zeroinitializer, float %7728, i32 0
  %7730 = insertelement <4 x float> %7729, float 0.000000e+00, i32 1
  %7731 = insertelement <4 x float> %7730, float 0.000000e+00, i32 2
  %7732 = insertelement <4 x float> %7731, float 0.000000e+00, i32 3
  %7733 = call <4 x float> @llvm.fma.f32.260(<4 x float> %7726, <4 x float> %7732, <4 x float> %7718)
  %7734 = extractelement <4 x float> %7733, i32 0
  %7735 = getelementptr inbounds float, float* %2, i64 14
  store float %7734, float* %7735, align 4
  %7736 = extractelement <4 x float> %7733, i32 1
  %7737 = getelementptr inbounds float, float* %2, i64 15
  store float %7736, float* %7737, align 4
  %7738 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7739 = getelementptr inbounds i8, i8* %7738, i64 48
  %7740 = bitcast i8* %7739 to float*
  %7741 = load float, float* %7740, align 4
  %7742 = insertelement <4 x float> zeroinitializer, float %7741, i32 0
  %7743 = insertelement <4 x float> %7742, float 0.000000e+00, i32 1
  %7744 = insertelement <4 x float> %7743, float 0.000000e+00, i32 2
  %7745 = insertelement <4 x float> %7744, float 0.000000e+00, i32 3
  %7746 = getelementptr inbounds float, float* %0, i64 3
  %7747 = load float, float* %7746, align 4
  %7748 = insertelement <4 x float> zeroinitializer, float %7747, i32 0
  %7749 = insertelement <4 x float> %7748, float 0.000000e+00, i32 1
  %7750 = insertelement <4 x float> %7749, float 0.000000e+00, i32 2
  %7751 = insertelement <4 x float> %7750, float 0.000000e+00, i32 3
  %7752 = call <4 x float> @llvm.fma.f32.261(<4 x float> %7745, <4 x float> %7751, <4 x float> zeroinitializer)
  %7753 = extractelement <4 x float> %7752, i32 0
  %7754 = getelementptr inbounds float, float* %2, i64 15
  store float %7753, float* %7754, align 4
  %7755 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7756 = getelementptr inbounds i8, i8* %7755, i64 48
  %7757 = bitcast i8* %7756 to float*
  %7758 = load float, float* %7757, align 4
  %7759 = insertelement <4 x float> zeroinitializer, float %7758, i32 0
  %7760 = insertelement <4 x float> %7759, float 1.000000e+00, i32 1
  %7761 = insertelement <4 x float> %7760, float 1.000000e+00, i32 2
  %7762 = insertelement <4 x float> %7761, float 1.000000e+00, i32 3
  %7763 = getelementptr inbounds float, float* %0, i64 3
  %7764 = load float, float* %7763, align 4
  %7765 = insertelement <4 x float> zeroinitializer, float %7764, i32 0
  %7766 = insertelement <4 x float> %7765, float 0.000000e+00, i32 1
  %7767 = insertelement <4 x float> %7766, float 0.000000e+00, i32 2
  %7768 = insertelement <4 x float> %7767, float 0.000000e+00, i32 3
  %7769 = fmul <4 x float> %7762, %7768
  %7770 = fadd <4 x float> %7769, zeroinitializer
  %7771 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7772 = getelementptr inbounds i8, i8* %7771, i64 52
  %7773 = bitcast i8* %7772 to float*
  %7774 = load float, float* %7773, align 4
  %7775 = insertelement <4 x float> zeroinitializer, float %7774, i32 0
  %7776 = insertelement <4 x float> %7775, float 0.000000e+00, i32 1
  %7777 = insertelement <4 x float> %7776, float 0.000000e+00, i32 2
  %7778 = insertelement <4 x float> %7777, float 0.000000e+00, i32 3
  %7779 = getelementptr inbounds float, float* %0, i64 7
  %7780 = load float, float* %7779, align 4
  %7781 = insertelement <4 x float> zeroinitializer, float %7780, i32 0
  %7782 = insertelement <4 x float> %7781, float 0.000000e+00, i32 1
  %7783 = insertelement <4 x float> %7782, float 0.000000e+00, i32 2
  %7784 = insertelement <4 x float> %7783, float 0.000000e+00, i32 3
  %7785 = call <4 x float> @llvm.fma.f32.262(<4 x float> %7778, <4 x float> %7784, <4 x float> %7770)
  %7786 = extractelement <4 x float> %7785, i32 0
  %7787 = getelementptr inbounds float, float* %2, i64 15
  store float %7786, float* %7787, align 4
  %7788 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7789 = getelementptr inbounds i8, i8* %7788, i64 48
  %7790 = bitcast i8* %7789 to float*
  %7791 = load float, float* %7790, align 4
  %7792 = insertelement <4 x float> zeroinitializer, float %7791, i32 0
  %7793 = insertelement <4 x float> %7792, float 1.000000e+00, i32 1
  %7794 = insertelement <4 x float> %7793, float 1.000000e+00, i32 2
  %7795 = insertelement <4 x float> %7794, float 1.000000e+00, i32 3
  %7796 = getelementptr inbounds float, float* %0, i64 3
  %7797 = load float, float* %7796, align 4
  %7798 = insertelement <4 x float> zeroinitializer, float %7797, i32 0
  %7799 = insertelement <4 x float> %7798, float 0.000000e+00, i32 1
  %7800 = insertelement <4 x float> %7799, float 0.000000e+00, i32 2
  %7801 = insertelement <4 x float> %7800, float 0.000000e+00, i32 3
  %7802 = fmul <4 x float> %7795, %7801
  %7803 = fadd <4 x float> %7802, zeroinitializer
  %7804 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7805 = getelementptr inbounds i8, i8* %7804, i64 52
  %7806 = bitcast i8* %7805 to float*
  %7807 = load float, float* %7806, align 4
  %7808 = insertelement <4 x float> zeroinitializer, float %7807, i32 0
  %7809 = insertelement <4 x float> %7808, float 1.000000e+00, i32 1
  %7810 = insertelement <4 x float> %7809, float 1.000000e+00, i32 2
  %7811 = insertelement <4 x float> %7810, float 1.000000e+00, i32 3
  %7812 = getelementptr inbounds float, float* %0, i64 7
  %7813 = load float, float* %7812, align 4
  %7814 = insertelement <4 x float> zeroinitializer, float %7813, i32 0
  %7815 = insertelement <4 x float> %7814, float 0.000000e+00, i32 1
  %7816 = insertelement <4 x float> %7815, float 0.000000e+00, i32 2
  %7817 = insertelement <4 x float> %7816, float 0.000000e+00, i32 3
  %7818 = call <4 x float> @llvm.fma.f32.263(<4 x float> %7811, <4 x float> %7817, <4 x float> %7803)
  %7819 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7820 = getelementptr inbounds i8, i8* %7819, i64 56
  %7821 = bitcast i8* %7820 to float*
  %7822 = load float, float* %7821, align 4
  %7823 = insertelement <4 x float> zeroinitializer, float %7822, i32 0
  %7824 = insertelement <4 x float> %7823, float 0.000000e+00, i32 1
  %7825 = insertelement <4 x float> %7824, float 0.000000e+00, i32 2
  %7826 = insertelement <4 x float> %7825, float 0.000000e+00, i32 3
  %7827 = getelementptr inbounds float, float* %0, i64 11
  %7828 = load float, float* %7827, align 4
  %7829 = insertelement <4 x float> zeroinitializer, float %7828, i32 0
  %7830 = insertelement <4 x float> %7829, float 0.000000e+00, i32 1
  %7831 = insertelement <4 x float> %7830, float 0.000000e+00, i32 2
  %7832 = insertelement <4 x float> %7831, float 0.000000e+00, i32 3
  %7833 = call <4 x float> @llvm.fma.f32.264(<4 x float> %7826, <4 x float> %7832, <4 x float> %7818)
  %7834 = extractelement <4 x float> %7833, i32 0
  %7835 = getelementptr inbounds float, float* %2, i64 15
  store float %7834, float* %7835, align 4
  %7836 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7837 = getelementptr inbounds i8, i8* %7836, i64 48
  %7838 = bitcast i8* %7837 to float*
  %7839 = load float, float* %7838, align 4
  %7840 = insertelement <4 x float> zeroinitializer, float %7839, i32 0
  %7841 = insertelement <4 x float> %7840, float 1.000000e+00, i32 1
  %7842 = insertelement <4 x float> %7841, float 1.000000e+00, i32 2
  %7843 = insertelement <4 x float> %7842, float 1.000000e+00, i32 3
  %7844 = getelementptr inbounds float, float* %0, i64 3
  %7845 = load float, float* %7844, align 4
  %7846 = insertelement <4 x float> zeroinitializer, float %7845, i32 0
  %7847 = insertelement <4 x float> %7846, float 0.000000e+00, i32 1
  %7848 = insertelement <4 x float> %7847, float 0.000000e+00, i32 2
  %7849 = insertelement <4 x float> %7848, float 0.000000e+00, i32 3
  %7850 = fmul <4 x float> %7843, %7849
  %7851 = fadd <4 x float> %7850, zeroinitializer
  %7852 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7853 = getelementptr inbounds i8, i8* %7852, i64 52
  %7854 = bitcast i8* %7853 to float*
  %7855 = load float, float* %7854, align 4
  %7856 = insertelement <4 x float> zeroinitializer, float %7855, i32 0
  %7857 = insertelement <4 x float> %7856, float 1.000000e+00, i32 1
  %7858 = insertelement <4 x float> %7857, float 1.000000e+00, i32 2
  %7859 = insertelement <4 x float> %7858, float 1.000000e+00, i32 3
  %7860 = getelementptr inbounds float, float* %0, i64 7
  %7861 = load float, float* %7860, align 4
  %7862 = insertelement <4 x float> zeroinitializer, float %7861, i32 0
  %7863 = insertelement <4 x float> %7862, float 0.000000e+00, i32 1
  %7864 = insertelement <4 x float> %7863, float 0.000000e+00, i32 2
  %7865 = insertelement <4 x float> %7864, float 0.000000e+00, i32 3
  %7866 = call <4 x float> @llvm.fma.f32.265(<4 x float> %7859, <4 x float> %7865, <4 x float> %7851)
  %7867 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7868 = getelementptr inbounds i8, i8* %7867, i64 56
  %7869 = bitcast i8* %7868 to float*
  %7870 = load float, float* %7869, align 4
  %7871 = insertelement <4 x float> zeroinitializer, float %7870, i32 0
  %7872 = insertelement <4 x float> %7871, float 1.000000e+00, i32 1
  %7873 = insertelement <4 x float> %7872, float 1.000000e+00, i32 2
  %7874 = insertelement <4 x float> %7873, float 1.000000e+00, i32 3
  %7875 = getelementptr inbounds float, float* %0, i64 11
  %7876 = load float, float* %7875, align 4
  %7877 = insertelement <4 x float> zeroinitializer, float %7876, i32 0
  %7878 = insertelement <4 x float> %7877, float 0.000000e+00, i32 1
  %7879 = insertelement <4 x float> %7878, float 0.000000e+00, i32 2
  %7880 = insertelement <4 x float> %7879, float 0.000000e+00, i32 3
  %7881 = call <4 x float> @llvm.fma.f32.266(<4 x float> %7874, <4 x float> %7880, <4 x float> %7866)
  %7882 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7883 = getelementptr inbounds i8, i8* %7882, i64 60
  %7884 = bitcast i8* %7883 to float*
  %7885 = load float, float* %7884, align 4
  %7886 = insertelement <4 x float> zeroinitializer, float %7885, i32 0
  %7887 = insertelement <4 x float> %7886, float 0.000000e+00, i32 1
  %7888 = insertelement <4 x float> %7887, float 0.000000e+00, i32 2
  %7889 = insertelement <4 x float> %7888, float 0.000000e+00, i32 3
  %7890 = getelementptr inbounds float, float* %0, i64 15
  %7891 = load float, float* %7890, align 4
  %7892 = insertelement <4 x float> zeroinitializer, float %7891, i32 0
  %7893 = insertelement <4 x float> %7892, float 0.000000e+00, i32 1
  %7894 = insertelement <4 x float> %7893, float 0.000000e+00, i32 2
  %7895 = insertelement <4 x float> %7894, float 0.000000e+00, i32 3
  %7896 = call <4 x float> @llvm.fma.f32.267(<4 x float> %7889, <4 x float> %7895, <4 x float> %7881)
  %7897 = extractelement <4 x float> %7896, i32 0
  %7898 = getelementptr inbounds float, float* %2, i64 15
  store float %7897, float* %7898, align 4
  %7899 = getelementptr inbounds float, float* %2, i64 5
  %7900 = bitcast float* %7899 to i32*
  %7901 = load i32, i32* %7900, align 4
  %7902 = sitofp i32 %7901 to float
  %7903 = insertelement <4 x float> zeroinitializer, float %7902, i32 0
  %7904 = insertelement <4 x float> %7903, float 0.000000e+00, i32 1
  %7905 = insertelement <4 x float> %7904, float 0.000000e+00, i32 2
  %7906 = insertelement <4 x float> %7905, float 0.000000e+00, i32 3
  %7907 = extractelement <4 x float> %7906, i32 0
  %7908 = fptosi float %7907 to i32
  %7909 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7910 = bitcast i8* %7909 to i32*
  store i32 %7908, i32* %7910, align 4
  %7911 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7912 = getelementptr inbounds i8, i8* %7911, i64 20
  %7913 = bitcast i8* %7912 to i32*
  %7914 = load i32, i32* %7913, align 4
  %7915 = sitofp i32 %7914 to float
  %7916 = insertelement <4 x float> zeroinitializer, float %7915, i32 0
  %7917 = insertelement <4 x float> %7916, float 0.000000e+00, i32 1
  %7918 = insertelement <4 x float> %7917, float 0.000000e+00, i32 2
  %7919 = insertelement <4 x float> %7918, float 0.000000e+00, i32 3
  %7920 = extractelement <4 x float> %7919, i32 0
  %7921 = fptosi float %7920 to i32
  %7922 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7923 = bitcast i8* %7922 to i32*
  store i32 %7921, i32* %7923, align 4
  %7924 = getelementptr inbounds float, float* %2, i64 9
  %7925 = bitcast float* %7924 to i32*
  %7926 = load i32, i32* %7925, align 4
  %7927 = sitofp i32 %7926 to float
  %7928 = insertelement <4 x float> zeroinitializer, float %7927, i32 0
  %7929 = insertelement <4 x float> %7928, float 0.000000e+00, i32 1
  %7930 = insertelement <4 x float> %7929, float 0.000000e+00, i32 2
  %7931 = insertelement <4 x float> %7930, float 0.000000e+00, i32 3
  %7932 = extractelement <4 x float> %7931, i32 0
  %7933 = fptosi float %7932 to i32
  %7934 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7935 = getelementptr inbounds i8, i8* %7934, i64 4
  %7936 = bitcast i8* %7935 to i32*
  store i32 %7933, i32* %7936, align 4
  %7937 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7938 = getelementptr inbounds i8, i8* %7937, i64 36
  %7939 = bitcast i8* %7938 to i32*
  %7940 = load i32, i32* %7939, align 4
  %7941 = sitofp i32 %7940 to float
  %7942 = insertelement <4 x float> zeroinitializer, float %7941, i32 0
  %7943 = insertelement <4 x float> %7942, float 0.000000e+00, i32 1
  %7944 = insertelement <4 x float> %7943, float 0.000000e+00, i32 2
  %7945 = insertelement <4 x float> %7944, float 0.000000e+00, i32 3
  %7946 = extractelement <4 x float> %7945, i32 0
  %7947 = fptosi float %7946 to i32
  %7948 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7949 = getelementptr inbounds i8, i8* %7948, i64 4
  %7950 = bitcast i8* %7949 to i32*
  store i32 %7947, i32* %7950, align 4
  %7951 = getelementptr inbounds float, float* %2, i64 13
  %7952 = bitcast float* %7951 to i32*
  %7953 = load i32, i32* %7952, align 4
  %7954 = sitofp i32 %7953 to float
  %7955 = insertelement <4 x float> zeroinitializer, float %7954, i32 0
  %7956 = insertelement <4 x float> %7955, float 0.000000e+00, i32 1
  %7957 = insertelement <4 x float> %7956, float 0.000000e+00, i32 2
  %7958 = insertelement <4 x float> %7957, float 0.000000e+00, i32 3
  %7959 = extractelement <4 x float> %7958, i32 0
  %7960 = fptosi float %7959 to i32
  %7961 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7962 = getelementptr inbounds i8, i8* %7961, i64 8
  %7963 = bitcast i8* %7962 to i32*
  store i32 %7960, i32* %7963, align 4
  %7964 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7965 = getelementptr inbounds i8, i8* %7964, i64 52
  %7966 = bitcast i8* %7965 to i32*
  %7967 = load i32, i32* %7966, align 4
  %7968 = sitofp i32 %7967 to float
  %7969 = insertelement <4 x float> zeroinitializer, float %7968, i32 0
  %7970 = insertelement <4 x float> %7969, float 0.000000e+00, i32 1
  %7971 = insertelement <4 x float> %7970, float 0.000000e+00, i32 2
  %7972 = insertelement <4 x float> %7971, float 0.000000e+00, i32 3
  %7973 = extractelement <4 x float> %7972, i32 0
  %7974 = fptosi float %7973 to i32
  %7975 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7976 = getelementptr inbounds i8, i8* %7975, i64 8
  %7977 = bitcast i8* %7976 to i32*
  store i32 %7974, i32* %7977, align 4
  %7978 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7979 = bitcast i8* %7978 to float*
  %7980 = load float, float* %7979, align 4
  %7981 = insertelement <4 x float> zeroinitializer, float %7980, i32 0
  %7982 = insertelement <4 x float> %7981, float 0.000000e+00, i32 1
  %7983 = insertelement <4 x float> %7982, float 0.000000e+00, i32 2
  %7984 = insertelement <4 x float> %7983, float 0.000000e+00, i32 3
  %7985 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7986 = getelementptr inbounds i8, i8* %7985, i64 8
  %7987 = bitcast i8* %7986 to float*
  %7988 = load float, float* %7987, align 4
  %7989 = insertelement <4 x float> zeroinitializer, float %7988, i32 0
  %7990 = insertelement <4 x float> %7989, float 1.000000e+00, i32 1
  %7991 = insertelement <4 x float> %7990, float 1.000000e+00, i32 2
  %7992 = insertelement <4 x float> %7991, float 1.000000e+00, i32 3
  %7993 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %7994 = getelementptr inbounds i8, i8* %7993, i64 8
  %7995 = bitcast i8* %7994 to float*
  %7996 = load float, float* %7995, align 4
  %7997 = insertelement <4 x float> zeroinitializer, float %7996, i32 0
  %7998 = insertelement <4 x float> %7997, float 0.000000e+00, i32 1
  %7999 = insertelement <4 x float> %7998, float 0.000000e+00, i32 2
  %8000 = insertelement <4 x float> %7999, float 0.000000e+00, i32 3
  %8001 = fmul <4 x float> %7992, %8000
  %8002 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8003 = getelementptr inbounds i8, i8* %8002, i64 4
  %8004 = bitcast i8* %8003 to float*
  %8005 = load float, float* %8004, align 4
  %8006 = insertelement <4 x float> zeroinitializer, float %8005, i32 0
  %8007 = insertelement <4 x float> %8006, float 1.000000e+00, i32 1
  %8008 = insertelement <4 x float> %8007, float 1.000000e+00, i32 2
  %8009 = insertelement <4 x float> %8008, float 1.000000e+00, i32 3
  %8010 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8011 = getelementptr inbounds i8, i8* %8010, i64 4
  %8012 = bitcast i8* %8011 to float*
  %8013 = load float, float* %8012, align 4
  %8014 = insertelement <4 x float> zeroinitializer, float %8013, i32 0
  %8015 = insertelement <4 x float> %8014, float 0.000000e+00, i32 1
  %8016 = insertelement <4 x float> %8015, float 0.000000e+00, i32 2
  %8017 = insertelement <4 x float> %8016, float 0.000000e+00, i32 3
  %8018 = fmul <4 x float> %8009, %8017
  %8019 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8020 = bitcast i8* %8019 to float*
  %8021 = load float, float* %8020, align 4
  %8022 = insertelement <4 x float> zeroinitializer, float %8021, i32 0
  %8023 = insertelement <4 x float> %8022, float 1.000000e+00, i32 1
  %8024 = insertelement <4 x float> %8023, float 1.000000e+00, i32 2
  %8025 = insertelement <4 x float> %8024, float 1.000000e+00, i32 3
  %8026 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8027 = bitcast i8* %8026 to float*
  %8028 = load float, float* %8027, align 4
  %8029 = insertelement <4 x float> zeroinitializer, float %8028, i32 0
  %8030 = insertelement <4 x float> %8029, float 0.000000e+00, i32 1
  %8031 = insertelement <4 x float> %8030, float 0.000000e+00, i32 2
  %8032 = insertelement <4 x float> %8031, float 0.000000e+00, i32 3
  %8033 = fmul <4 x float> %8025, %8032
  %8034 = fadd <4 x float> %8033, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %8035 = fadd <4 x float> %8018, %8034
  %8036 = fadd <4 x float> %8001, %8035
  %8037 = call <4 x float> @llvm.sqrt.f32.268(<4 x float> %8036)
  %8038 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8039 = bitcast i8* %8038 to float*
  %8040 = load float, float* %8039, align 4
  %8041 = fcmp olt float %8040, 0.000000e+00
  %8042 = sext i1 %8041 to i32
  %8043 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8044 = bitcast i8* %8043 to float*
  %8045 = load float, float* %8044, align 4
  %8046 = fcmp ogt float %8045, 0.000000e+00
  %8047 = zext i1 %8046 to i32
  %8048 = add nsw i32 %8042, %8047
  %8049 = sitofp i32 %8048 to float
  %8050 = insertelement <4 x float> zeroinitializer, float %8049, i32 0
  %8051 = insertelement <4 x float> %8050, float 0.000000e+00, i32 1
  %8052 = insertelement <4 x float> %8051, float 0.000000e+00, i32 2
  %8053 = insertelement <4 x float> %8052, float 0.000000e+00, i32 3
  %8054 = fneg <4 x float> %8053
  %8055 = fmul <4 x float> %8037, %8054
  %8056 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8057 = bitcast i8* %8056 to float*
  %8058 = load float, float* %8057, align 4
  %8059 = insertelement <4 x float> zeroinitializer, float %8058, i32 0
  %8060 = insertelement <4 x float> %8059, float 0.000000e+00, i32 1
  %8061 = insertelement <4 x float> %8060, float 0.000000e+00, i32 2
  %8062 = insertelement <4 x float> %8061, float 0.000000e+00, i32 3
  %8063 = call <4 x float> @llvm.fma.f32.269(<4 x float> %8055, <4 x float> %8062, <4 x float> %7984)
  %8064 = extractelement <4 x float> %8063, i32 0
  %8065 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8066 = bitcast i8* %8065 to float*
  store float %8064, float* %8066, align 4
  %8067 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8068 = getelementptr inbounds i8, i8* %8067, i64 4
  %8069 = bitcast i8* %8068 to float*
  %8070 = load float, float* %8069, align 4
  %8071 = insertelement <4 x float> zeroinitializer, float %8070, i32 0
  %8072 = insertelement <4 x float> %8071, float 0.000000e+00, i32 1
  %8073 = insertelement <4 x float> %8072, float 0.000000e+00, i32 2
  %8074 = insertelement <4 x float> %8073, float 0.000000e+00, i32 3
  %8075 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8076 = getelementptr inbounds i8, i8* %8075, i64 8
  %8077 = bitcast i8* %8076 to float*
  %8078 = load float, float* %8077, align 4
  %8079 = insertelement <4 x float> zeroinitializer, float %8078, i32 0
  %8080 = insertelement <4 x float> %8079, float 1.000000e+00, i32 1
  %8081 = insertelement <4 x float> %8080, float 1.000000e+00, i32 2
  %8082 = insertelement <4 x float> %8081, float 1.000000e+00, i32 3
  %8083 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8084 = getelementptr inbounds i8, i8* %8083, i64 8
  %8085 = bitcast i8* %8084 to float*
  %8086 = load float, float* %8085, align 4
  %8087 = insertelement <4 x float> zeroinitializer, float %8086, i32 0
  %8088 = insertelement <4 x float> %8087, float 0.000000e+00, i32 1
  %8089 = insertelement <4 x float> %8088, float 0.000000e+00, i32 2
  %8090 = insertelement <4 x float> %8089, float 0.000000e+00, i32 3
  %8091 = fmul <4 x float> %8082, %8090
  %8092 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8093 = getelementptr inbounds i8, i8* %8092, i64 4
  %8094 = bitcast i8* %8093 to float*
  %8095 = load float, float* %8094, align 4
  %8096 = insertelement <4 x float> zeroinitializer, float %8095, i32 0
  %8097 = insertelement <4 x float> %8096, float 1.000000e+00, i32 1
  %8098 = insertelement <4 x float> %8097, float 1.000000e+00, i32 2
  %8099 = insertelement <4 x float> %8098, float 1.000000e+00, i32 3
  %8100 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8101 = getelementptr inbounds i8, i8* %8100, i64 4
  %8102 = bitcast i8* %8101 to float*
  %8103 = load float, float* %8102, align 4
  %8104 = insertelement <4 x float> zeroinitializer, float %8103, i32 0
  %8105 = insertelement <4 x float> %8104, float 0.000000e+00, i32 1
  %8106 = insertelement <4 x float> %8105, float 0.000000e+00, i32 2
  %8107 = insertelement <4 x float> %8106, float 0.000000e+00, i32 3
  %8108 = fmul <4 x float> %8099, %8107
  %8109 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8110 = bitcast i8* %8109 to float*
  %8111 = load float, float* %8110, align 4
  %8112 = insertelement <4 x float> zeroinitializer, float %8111, i32 0
  %8113 = insertelement <4 x float> %8112, float 1.000000e+00, i32 1
  %8114 = insertelement <4 x float> %8113, float 1.000000e+00, i32 2
  %8115 = insertelement <4 x float> %8114, float 1.000000e+00, i32 3
  %8116 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8117 = bitcast i8* %8116 to float*
  %8118 = load float, float* %8117, align 4
  %8119 = insertelement <4 x float> zeroinitializer, float %8118, i32 0
  %8120 = insertelement <4 x float> %8119, float 0.000000e+00, i32 1
  %8121 = insertelement <4 x float> %8120, float 0.000000e+00, i32 2
  %8122 = insertelement <4 x float> %8121, float 0.000000e+00, i32 3
  %8123 = fmul <4 x float> %8115, %8122
  %8124 = fadd <4 x float> %8123, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %8125 = fadd <4 x float> %8108, %8124
  %8126 = fadd <4 x float> %8091, %8125
  %8127 = call <4 x float> @llvm.sqrt.f32.270(<4 x float> %8126)
  %8128 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8129 = bitcast i8* %8128 to float*
  %8130 = load float, float* %8129, align 4
  %8131 = fcmp olt float %8130, 0.000000e+00
  %8132 = sext i1 %8131 to i32
  %8133 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8134 = bitcast i8* %8133 to float*
  %8135 = load float, float* %8134, align 4
  %8136 = fcmp ogt float %8135, 0.000000e+00
  %8137 = zext i1 %8136 to i32
  %8138 = add nsw i32 %8132, %8137
  %8139 = sitofp i32 %8138 to float
  %8140 = insertelement <4 x float> zeroinitializer, float %8139, i32 0
  %8141 = insertelement <4 x float> %8140, float 0.000000e+00, i32 1
  %8142 = insertelement <4 x float> %8141, float 0.000000e+00, i32 2
  %8143 = insertelement <4 x float> %8142, float 0.000000e+00, i32 3
  %8144 = fneg <4 x float> %8143
  %8145 = fmul <4 x float> %8127, %8144
  %8146 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8147 = getelementptr inbounds i8, i8* %8146, i64 4
  %8148 = bitcast i8* %8147 to float*
  %8149 = load float, float* %8148, align 4
  %8150 = insertelement <4 x float> zeroinitializer, float %8149, i32 0
  %8151 = insertelement <4 x float> %8150, float 0.000000e+00, i32 1
  %8152 = insertelement <4 x float> %8151, float 0.000000e+00, i32 2
  %8153 = insertelement <4 x float> %8152, float 0.000000e+00, i32 3
  %8154 = call <4 x float> @llvm.fma.f32.271(<4 x float> %8145, <4 x float> %8153, <4 x float> %8074)
  %8155 = extractelement <4 x float> %8154, i32 0
  %8156 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8157 = getelementptr inbounds i8, i8* %8156, i64 4
  %8158 = bitcast i8* %8157 to float*
  store float %8155, float* %8158, align 4
  %8159 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8160 = getelementptr inbounds i8, i8* %8159, i64 8
  %8161 = bitcast i8* %8160 to float*
  %8162 = load float, float* %8161, align 4
  %8163 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8164 = getelementptr inbounds i8, i8* %8163, i64 8
  %8165 = bitcast i8* %8164 to float*
  %8166 = load float, float* %8165, align 4
  %8167 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8168 = getelementptr inbounds i8, i8* %8167, i64 8
  %8169 = bitcast i8* %8168 to float*
  %8170 = load float, float* %8169, align 4
  %8171 = fmul float %8166, %8170
  %8172 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8173 = getelementptr inbounds i8, i8* %8172, i64 4
  %8174 = bitcast i8* %8173 to float*
  %8175 = load float, float* %8174, align 4
  %8176 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8177 = getelementptr inbounds i8, i8* %8176, i64 4
  %8178 = bitcast i8* %8177 to float*
  %8179 = load float, float* %8178, align 4
  %8180 = fmul float %8175, %8179
  %8181 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8182 = bitcast i8* %8181 to float*
  %8183 = load float, float* %8182, align 4
  %8184 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8185 = bitcast i8* %8184 to float*
  %8186 = load float, float* %8185, align 4
  %8187 = fmul float %8183, %8186
  %8188 = fadd float %8187, 0.000000e+00
  %8189 = fadd float %8180, %8188
  %8190 = fadd float %8171, %8189
  %8191 = call float @llvm.sqrt.f32.272(float %8190)
  %8192 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8193 = bitcast i8* %8192 to float*
  %8194 = load float, float* %8193, align 4
  %8195 = fcmp olt float %8194, 0.000000e+00
  %8196 = sext i1 %8195 to i32
  %8197 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8198 = bitcast i8* %8197 to float*
  %8199 = load float, float* %8198, align 4
  %8200 = fcmp ogt float %8199, 0.000000e+00
  %8201 = zext i1 %8200 to i32
  %8202 = add nsw i32 %8196, %8201
  %8203 = sitofp i32 %8202 to float
  %8204 = fneg float %8203
  %8205 = fmul float %8191, %8204
  %8206 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8207 = getelementptr inbounds i8, i8* %8206, i64 8
  %8208 = bitcast i8* %8207 to float*
  %8209 = load float, float* %8208, align 4
  %8210 = fmul float %8205, %8209
  %8211 = fadd float %8162, %8210
  %8212 = insertelement <4 x float> zeroinitializer, float %8211, i32 0
  %8213 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8214 = bitcast i8* %8213 to float*
  %8215 = load float, float* %8214, align 4
  %8216 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8217 = getelementptr inbounds i8, i8* %8216, i64 8
  %8218 = bitcast i8* %8217 to float*
  %8219 = load float, float* %8218, align 4
  %8220 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8221 = getelementptr inbounds i8, i8* %8220, i64 8
  %8222 = bitcast i8* %8221 to float*
  %8223 = load float, float* %8222, align 4
  %8224 = fmul float %8219, %8223
  %8225 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8226 = getelementptr inbounds i8, i8* %8225, i64 4
  %8227 = bitcast i8* %8226 to float*
  %8228 = load float, float* %8227, align 4
  %8229 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8230 = getelementptr inbounds i8, i8* %8229, i64 4
  %8231 = bitcast i8* %8230 to float*
  %8232 = load float, float* %8231, align 4
  %8233 = fmul float %8228, %8232
  %8234 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8235 = bitcast i8* %8234 to float*
  %8236 = load float, float* %8235, align 4
  %8237 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8238 = bitcast i8* %8237 to float*
  %8239 = load float, float* %8238, align 4
  %8240 = fmul float %8236, %8239
  %8241 = fadd float %8240, 0.000000e+00
  %8242 = fadd float %8233, %8241
  %8243 = fadd float %8224, %8242
  %8244 = call float @llvm.sqrt.f32.273(float %8243)
  %8245 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8246 = bitcast i8* %8245 to float*
  %8247 = load float, float* %8246, align 4
  %8248 = fcmp olt float %8247, 0.000000e+00
  %8249 = sext i1 %8248 to i32
  %8250 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8251 = bitcast i8* %8250 to float*
  %8252 = load float, float* %8251, align 4
  %8253 = fcmp ogt float %8252, 0.000000e+00
  %8254 = zext i1 %8253 to i32
  %8255 = add nsw i32 %8249, %8254
  %8256 = sitofp i32 %8255 to float
  %8257 = fneg float %8256
  %8258 = fmul float %8244, %8257
  %8259 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8260 = bitcast i8* %8259 to float*
  %8261 = load float, float* %8260, align 4
  %8262 = fmul float %8258, %8261
  %8263 = fadd float %8215, %8262
  %8264 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8265 = getelementptr inbounds i8, i8* %8264, i64 8
  %8266 = bitcast i8* %8265 to float*
  %8267 = load float, float* %8266, align 4
  %8268 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8269 = getelementptr inbounds i8, i8* %8268, i64 8
  %8270 = bitcast i8* %8269 to float*
  %8271 = load float, float* %8270, align 4
  %8272 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8273 = getelementptr inbounds i8, i8* %8272, i64 8
  %8274 = bitcast i8* %8273 to float*
  %8275 = load float, float* %8274, align 4
  %8276 = fmul float %8271, %8275
  %8277 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8278 = getelementptr inbounds i8, i8* %8277, i64 4
  %8279 = bitcast i8* %8278 to float*
  %8280 = load float, float* %8279, align 4
  %8281 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8282 = getelementptr inbounds i8, i8* %8281, i64 4
  %8283 = bitcast i8* %8282 to float*
  %8284 = load float, float* %8283, align 4
  %8285 = fmul float %8280, %8284
  %8286 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8287 = bitcast i8* %8286 to float*
  %8288 = load float, float* %8287, align 4
  %8289 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8290 = bitcast i8* %8289 to float*
  %8291 = load float, float* %8290, align 4
  %8292 = fmul float %8288, %8291
  %8293 = fadd float %8292, 0.000000e+00
  %8294 = fadd float %8285, %8293
  %8295 = fadd float %8276, %8294
  %8296 = call float @llvm.sqrt.f32.274(float %8295)
  %8297 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8298 = bitcast i8* %8297 to float*
  %8299 = load float, float* %8298, align 4
  %8300 = fcmp olt float %8299, 0.000000e+00
  %8301 = sext i1 %8300 to i32
  %8302 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8303 = bitcast i8* %8302 to float*
  %8304 = load float, float* %8303, align 4
  %8305 = fcmp ogt float %8304, 0.000000e+00
  %8306 = zext i1 %8305 to i32
  %8307 = add nsw i32 %8301, %8306
  %8308 = sitofp i32 %8307 to float
  %8309 = fneg float %8308
  %8310 = fmul float %8296, %8309
  %8311 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8312 = getelementptr inbounds i8, i8* %8311, i64 8
  %8313 = bitcast i8* %8312 to float*
  %8314 = load float, float* %8313, align 4
  %8315 = fmul float %8310, %8314
  %8316 = fadd float %8267, %8315
  %8317 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8318 = getelementptr inbounds i8, i8* %8317, i64 8
  %8319 = bitcast i8* %8318 to float*
  %8320 = load float, float* %8319, align 4
  %8321 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8322 = getelementptr inbounds i8, i8* %8321, i64 8
  %8323 = bitcast i8* %8322 to float*
  %8324 = load float, float* %8323, align 4
  %8325 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8326 = getelementptr inbounds i8, i8* %8325, i64 8
  %8327 = bitcast i8* %8326 to float*
  %8328 = load float, float* %8327, align 4
  %8329 = fmul float %8324, %8328
  %8330 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8331 = getelementptr inbounds i8, i8* %8330, i64 4
  %8332 = bitcast i8* %8331 to float*
  %8333 = load float, float* %8332, align 4
  %8334 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8335 = getelementptr inbounds i8, i8* %8334, i64 4
  %8336 = bitcast i8* %8335 to float*
  %8337 = load float, float* %8336, align 4
  %8338 = fmul float %8333, %8337
  %8339 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8340 = bitcast i8* %8339 to float*
  %8341 = load float, float* %8340, align 4
  %8342 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8343 = bitcast i8* %8342 to float*
  %8344 = load float, float* %8343, align 4
  %8345 = fmul float %8341, %8344
  %8346 = fadd float %8345, 0.000000e+00
  %8347 = fadd float %8338, %8346
  %8348 = fadd float %8329, %8347
  %8349 = call float @llvm.sqrt.f32.275(float %8348)
  %8350 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8351 = bitcast i8* %8350 to float*
  %8352 = load float, float* %8351, align 4
  %8353 = fcmp olt float %8352, 0.000000e+00
  %8354 = sext i1 %8353 to i32
  %8355 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8356 = bitcast i8* %8355 to float*
  %8357 = load float, float* %8356, align 4
  %8358 = fcmp ogt float %8357, 0.000000e+00
  %8359 = zext i1 %8358 to i32
  %8360 = add nsw i32 %8354, %8359
  %8361 = sitofp i32 %8360 to float
  %8362 = fneg float %8361
  %8363 = fmul float %8349, %8362
  %8364 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8365 = getelementptr inbounds i8, i8* %8364, i64 8
  %8366 = bitcast i8* %8365 to float*
  %8367 = load float, float* %8366, align 4
  %8368 = fmul float %8363, %8367
  %8369 = fadd float %8320, %8368
  %8370 = fmul float %8316, %8369
  %8371 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8372 = getelementptr inbounds i8, i8* %8371, i64 4
  %8373 = bitcast i8* %8372 to float*
  %8374 = load float, float* %8373, align 4
  %8375 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8376 = getelementptr inbounds i8, i8* %8375, i64 8
  %8377 = bitcast i8* %8376 to float*
  %8378 = load float, float* %8377, align 4
  %8379 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8380 = getelementptr inbounds i8, i8* %8379, i64 8
  %8381 = bitcast i8* %8380 to float*
  %8382 = load float, float* %8381, align 4
  %8383 = fmul float %8378, %8382
  %8384 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8385 = getelementptr inbounds i8, i8* %8384, i64 4
  %8386 = bitcast i8* %8385 to float*
  %8387 = load float, float* %8386, align 4
  %8388 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8389 = getelementptr inbounds i8, i8* %8388, i64 4
  %8390 = bitcast i8* %8389 to float*
  %8391 = load float, float* %8390, align 4
  %8392 = fmul float %8387, %8391
  %8393 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8394 = bitcast i8* %8393 to float*
  %8395 = load float, float* %8394, align 4
  %8396 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8397 = bitcast i8* %8396 to float*
  %8398 = load float, float* %8397, align 4
  %8399 = fmul float %8395, %8398
  %8400 = fadd float %8399, 0.000000e+00
  %8401 = fadd float %8392, %8400
  %8402 = fadd float %8383, %8401
  %8403 = call float @llvm.sqrt.f32.276(float %8402)
  %8404 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8405 = bitcast i8* %8404 to float*
  %8406 = load float, float* %8405, align 4
  %8407 = fcmp olt float %8406, 0.000000e+00
  %8408 = sext i1 %8407 to i32
  %8409 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8410 = bitcast i8* %8409 to float*
  %8411 = load float, float* %8410, align 4
  %8412 = fcmp ogt float %8411, 0.000000e+00
  %8413 = zext i1 %8412 to i32
  %8414 = add nsw i32 %8408, %8413
  %8415 = sitofp i32 %8414 to float
  %8416 = fneg float %8415
  %8417 = fmul float %8403, %8416
  %8418 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8419 = getelementptr inbounds i8, i8* %8418, i64 4
  %8420 = bitcast i8* %8419 to float*
  %8421 = load float, float* %8420, align 4
  %8422 = fmul float %8417, %8421
  %8423 = fadd float %8374, %8422
  %8424 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8425 = getelementptr inbounds i8, i8* %8424, i64 4
  %8426 = bitcast i8* %8425 to float*
  %8427 = load float, float* %8426, align 4
  %8428 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8429 = getelementptr inbounds i8, i8* %8428, i64 8
  %8430 = bitcast i8* %8429 to float*
  %8431 = load float, float* %8430, align 4
  %8432 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8433 = getelementptr inbounds i8, i8* %8432, i64 8
  %8434 = bitcast i8* %8433 to float*
  %8435 = load float, float* %8434, align 4
  %8436 = fmul float %8431, %8435
  %8437 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8438 = getelementptr inbounds i8, i8* %8437, i64 4
  %8439 = bitcast i8* %8438 to float*
  %8440 = load float, float* %8439, align 4
  %8441 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8442 = getelementptr inbounds i8, i8* %8441, i64 4
  %8443 = bitcast i8* %8442 to float*
  %8444 = load float, float* %8443, align 4
  %8445 = fmul float %8440, %8444
  %8446 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8447 = bitcast i8* %8446 to float*
  %8448 = load float, float* %8447, align 4
  %8449 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8450 = bitcast i8* %8449 to float*
  %8451 = load float, float* %8450, align 4
  %8452 = fmul float %8448, %8451
  %8453 = fadd float %8452, 0.000000e+00
  %8454 = fadd float %8445, %8453
  %8455 = fadd float %8436, %8454
  %8456 = call float @llvm.sqrt.f32.277(float %8455)
  %8457 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8458 = bitcast i8* %8457 to float*
  %8459 = load float, float* %8458, align 4
  %8460 = fcmp olt float %8459, 0.000000e+00
  %8461 = sext i1 %8460 to i32
  %8462 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8463 = bitcast i8* %8462 to float*
  %8464 = load float, float* %8463, align 4
  %8465 = fcmp ogt float %8464, 0.000000e+00
  %8466 = zext i1 %8465 to i32
  %8467 = add nsw i32 %8461, %8466
  %8468 = sitofp i32 %8467 to float
  %8469 = fneg float %8468
  %8470 = fmul float %8456, %8469
  %8471 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8472 = getelementptr inbounds i8, i8* %8471, i64 4
  %8473 = bitcast i8* %8472 to float*
  %8474 = load float, float* %8473, align 4
  %8475 = fmul float %8470, %8474
  %8476 = fadd float %8427, %8475
  %8477 = fmul float %8423, %8476
  %8478 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8479 = bitcast i8* %8478 to float*
  %8480 = load float, float* %8479, align 4
  %8481 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8482 = getelementptr inbounds i8, i8* %8481, i64 8
  %8483 = bitcast i8* %8482 to float*
  %8484 = load float, float* %8483, align 4
  %8485 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8486 = getelementptr inbounds i8, i8* %8485, i64 8
  %8487 = bitcast i8* %8486 to float*
  %8488 = load float, float* %8487, align 4
  %8489 = fmul float %8484, %8488
  %8490 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8491 = getelementptr inbounds i8, i8* %8490, i64 4
  %8492 = bitcast i8* %8491 to float*
  %8493 = load float, float* %8492, align 4
  %8494 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8495 = getelementptr inbounds i8, i8* %8494, i64 4
  %8496 = bitcast i8* %8495 to float*
  %8497 = load float, float* %8496, align 4
  %8498 = fmul float %8493, %8497
  %8499 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8500 = bitcast i8* %8499 to float*
  %8501 = load float, float* %8500, align 4
  %8502 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8503 = bitcast i8* %8502 to float*
  %8504 = load float, float* %8503, align 4
  %8505 = fmul float %8501, %8504
  %8506 = fadd float %8505, 0.000000e+00
  %8507 = fadd float %8498, %8506
  %8508 = fadd float %8489, %8507
  %8509 = call float @llvm.sqrt.f32.278(float %8508)
  %8510 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8511 = bitcast i8* %8510 to float*
  %8512 = load float, float* %8511, align 4
  %8513 = fcmp olt float %8512, 0.000000e+00
  %8514 = sext i1 %8513 to i32
  %8515 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8516 = bitcast i8* %8515 to float*
  %8517 = load float, float* %8516, align 4
  %8518 = fcmp ogt float %8517, 0.000000e+00
  %8519 = zext i1 %8518 to i32
  %8520 = add nsw i32 %8514, %8519
  %8521 = sitofp i32 %8520 to float
  %8522 = fneg float %8521
  %8523 = fmul float %8509, %8522
  %8524 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8525 = bitcast i8* %8524 to float*
  %8526 = load float, float* %8525, align 4
  %8527 = fmul float %8523, %8526
  %8528 = fadd float %8480, %8527
  %8529 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8530 = bitcast i8* %8529 to float*
  %8531 = load float, float* %8530, align 4
  %8532 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8533 = getelementptr inbounds i8, i8* %8532, i64 8
  %8534 = bitcast i8* %8533 to float*
  %8535 = load float, float* %8534, align 4
  %8536 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8537 = getelementptr inbounds i8, i8* %8536, i64 8
  %8538 = bitcast i8* %8537 to float*
  %8539 = load float, float* %8538, align 4
  %8540 = fmul float %8535, %8539
  %8541 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8542 = getelementptr inbounds i8, i8* %8541, i64 4
  %8543 = bitcast i8* %8542 to float*
  %8544 = load float, float* %8543, align 4
  %8545 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8546 = getelementptr inbounds i8, i8* %8545, i64 4
  %8547 = bitcast i8* %8546 to float*
  %8548 = load float, float* %8547, align 4
  %8549 = fmul float %8544, %8548
  %8550 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8551 = bitcast i8* %8550 to float*
  %8552 = load float, float* %8551, align 4
  %8553 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8554 = bitcast i8* %8553 to float*
  %8555 = load float, float* %8554, align 4
  %8556 = fmul float %8552, %8555
  %8557 = fadd float %8556, 0.000000e+00
  %8558 = fadd float %8549, %8557
  %8559 = fadd float %8540, %8558
  %8560 = call float @llvm.sqrt.f32.279(float %8559)
  %8561 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8562 = bitcast i8* %8561 to float*
  %8563 = load float, float* %8562, align 4
  %8564 = fcmp olt float %8563, 0.000000e+00
  %8565 = sext i1 %8564 to i32
  %8566 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8567 = bitcast i8* %8566 to float*
  %8568 = load float, float* %8567, align 4
  %8569 = fcmp ogt float %8568, 0.000000e+00
  %8570 = zext i1 %8569 to i32
  %8571 = add nsw i32 %8565, %8570
  %8572 = sitofp i32 %8571 to float
  %8573 = fneg float %8572
  %8574 = fmul float %8560, %8573
  %8575 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8576 = bitcast i8* %8575 to float*
  %8577 = load float, float* %8576, align 4
  %8578 = fmul float %8574, %8577
  %8579 = fadd float %8531, %8578
  %8580 = fmul float %8528, %8579
  %8581 = fadd float %8580, 0.000000e+00
  %8582 = fadd float %8477, %8581
  %8583 = fadd float %8370, %8582
  %8584 = call float @llvm.sqrt.f32.280(float %8583)
  %8585 = fdiv float %8263, %8584
  %8586 = insertelement <4 x float> %8212, float %8585, i32 1
  %8587 = insertelement <4 x float> %8586, float 0.000000e+00, i32 2
  %8588 = insertelement <4 x float> %8587, float 0.000000e+00, i32 3
  %8589 = extractelement <4 x float> %8588, i32 0
  %8590 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8591 = getelementptr inbounds i8, i8* %8590, i64 8
  %8592 = bitcast i8* %8591 to float*
  store float %8589, float* %8592, align 4
  %8593 = extractelement <4 x float> %8588, i32 1
  %8594 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8595 = bitcast i8* %8594 to float*
  store float %8593, float* %8595, align 4
  %8596 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8597 = getelementptr inbounds i8, i8* %8596, i64 4
  %8598 = bitcast i8* %8597 to float*
  %8599 = load float, float* %8598, align 4
  %8600 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8601 = getelementptr inbounds i8, i8* %8600, i64 8
  %8602 = bitcast i8* %8601 to float*
  %8603 = load float, float* %8602, align 4
  %8604 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8605 = getelementptr inbounds i8, i8* %8604, i64 8
  %8606 = bitcast i8* %8605 to float*
  %8607 = load float, float* %8606, align 4
  %8608 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8609 = getelementptr inbounds i8, i8* %8608, i64 8
  %8610 = bitcast i8* %8609 to float*
  %8611 = load float, float* %8610, align 4
  %8612 = fmul float %8607, %8611
  %8613 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8614 = getelementptr inbounds i8, i8* %8613, i64 4
  %8615 = bitcast i8* %8614 to float*
  %8616 = load float, float* %8615, align 4
  %8617 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8618 = getelementptr inbounds i8, i8* %8617, i64 4
  %8619 = bitcast i8* %8618 to float*
  %8620 = load float, float* %8619, align 4
  %8621 = fmul float %8616, %8620
  %8622 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8623 = bitcast i8* %8622 to float*
  %8624 = load float, float* %8623, align 4
  %8625 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8626 = bitcast i8* %8625 to float*
  %8627 = load float, float* %8626, align 4
  %8628 = fmul float %8624, %8627
  %8629 = fadd float %8628, 0.000000e+00
  %8630 = fadd float %8621, %8629
  %8631 = fadd float %8612, %8630
  %8632 = call float @llvm.sqrt.f32.281(float %8631)
  %8633 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8634 = bitcast i8* %8633 to float*
  %8635 = load float, float* %8634, align 4
  %8636 = fcmp olt float %8635, 0.000000e+00
  %8637 = sext i1 %8636 to i32
  %8638 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8639 = bitcast i8* %8638 to float*
  %8640 = load float, float* %8639, align 4
  %8641 = fcmp ogt float %8640, 0.000000e+00
  %8642 = zext i1 %8641 to i32
  %8643 = add nsw i32 %8637, %8642
  %8644 = sitofp i32 %8643 to float
  %8645 = fneg float %8644
  %8646 = fmul float %8632, %8645
  %8647 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8648 = getelementptr inbounds i8, i8* %8647, i64 8
  %8649 = bitcast i8* %8648 to float*
  %8650 = load float, float* %8649, align 4
  %8651 = fmul float %8646, %8650
  %8652 = fadd float %8603, %8651
  %8653 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8654 = getelementptr inbounds i8, i8* %8653, i64 8
  %8655 = bitcast i8* %8654 to float*
  %8656 = load float, float* %8655, align 4
  %8657 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8658 = getelementptr inbounds i8, i8* %8657, i64 8
  %8659 = bitcast i8* %8658 to float*
  %8660 = load float, float* %8659, align 4
  %8661 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8662 = getelementptr inbounds i8, i8* %8661, i64 8
  %8663 = bitcast i8* %8662 to float*
  %8664 = load float, float* %8663, align 4
  %8665 = fmul float %8660, %8664
  %8666 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8667 = getelementptr inbounds i8, i8* %8666, i64 4
  %8668 = bitcast i8* %8667 to float*
  %8669 = load float, float* %8668, align 4
  %8670 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8671 = getelementptr inbounds i8, i8* %8670, i64 4
  %8672 = bitcast i8* %8671 to float*
  %8673 = load float, float* %8672, align 4
  %8674 = fmul float %8669, %8673
  %8675 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8676 = bitcast i8* %8675 to float*
  %8677 = load float, float* %8676, align 4
  %8678 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8679 = bitcast i8* %8678 to float*
  %8680 = load float, float* %8679, align 4
  %8681 = fmul float %8677, %8680
  %8682 = fadd float %8681, 0.000000e+00
  %8683 = fadd float %8674, %8682
  %8684 = fadd float %8665, %8683
  %8685 = call float @llvm.sqrt.f32.282(float %8684)
  %8686 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8687 = bitcast i8* %8686 to float*
  %8688 = load float, float* %8687, align 4
  %8689 = fcmp olt float %8688, 0.000000e+00
  %8690 = sext i1 %8689 to i32
  %8691 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8692 = bitcast i8* %8691 to float*
  %8693 = load float, float* %8692, align 4
  %8694 = fcmp ogt float %8693, 0.000000e+00
  %8695 = zext i1 %8694 to i32
  %8696 = add nsw i32 %8690, %8695
  %8697 = sitofp i32 %8696 to float
  %8698 = fneg float %8697
  %8699 = fmul float %8685, %8698
  %8700 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8701 = getelementptr inbounds i8, i8* %8700, i64 8
  %8702 = bitcast i8* %8701 to float*
  %8703 = load float, float* %8702, align 4
  %8704 = fmul float %8699, %8703
  %8705 = fadd float %8656, %8704
  %8706 = fmul float %8652, %8705
  %8707 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8708 = getelementptr inbounds i8, i8* %8707, i64 4
  %8709 = bitcast i8* %8708 to float*
  %8710 = load float, float* %8709, align 4
  %8711 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8712 = getelementptr inbounds i8, i8* %8711, i64 8
  %8713 = bitcast i8* %8712 to float*
  %8714 = load float, float* %8713, align 4
  %8715 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8716 = getelementptr inbounds i8, i8* %8715, i64 8
  %8717 = bitcast i8* %8716 to float*
  %8718 = load float, float* %8717, align 4
  %8719 = fmul float %8714, %8718
  %8720 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8721 = getelementptr inbounds i8, i8* %8720, i64 4
  %8722 = bitcast i8* %8721 to float*
  %8723 = load float, float* %8722, align 4
  %8724 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8725 = getelementptr inbounds i8, i8* %8724, i64 4
  %8726 = bitcast i8* %8725 to float*
  %8727 = load float, float* %8726, align 4
  %8728 = fmul float %8723, %8727
  %8729 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8730 = bitcast i8* %8729 to float*
  %8731 = load float, float* %8730, align 4
  %8732 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8733 = bitcast i8* %8732 to float*
  %8734 = load float, float* %8733, align 4
  %8735 = fmul float %8731, %8734
  %8736 = fadd float %8735, 0.000000e+00
  %8737 = fadd float %8728, %8736
  %8738 = fadd float %8719, %8737
  %8739 = call float @llvm.sqrt.f32.283(float %8738)
  %8740 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8741 = bitcast i8* %8740 to float*
  %8742 = load float, float* %8741, align 4
  %8743 = fcmp olt float %8742, 0.000000e+00
  %8744 = sext i1 %8743 to i32
  %8745 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8746 = bitcast i8* %8745 to float*
  %8747 = load float, float* %8746, align 4
  %8748 = fcmp ogt float %8747, 0.000000e+00
  %8749 = zext i1 %8748 to i32
  %8750 = add nsw i32 %8744, %8749
  %8751 = sitofp i32 %8750 to float
  %8752 = fneg float %8751
  %8753 = fmul float %8739, %8752
  %8754 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8755 = getelementptr inbounds i8, i8* %8754, i64 4
  %8756 = bitcast i8* %8755 to float*
  %8757 = load float, float* %8756, align 4
  %8758 = fmul float %8753, %8757
  %8759 = fadd float %8710, %8758
  %8760 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8761 = getelementptr inbounds i8, i8* %8760, i64 4
  %8762 = bitcast i8* %8761 to float*
  %8763 = load float, float* %8762, align 4
  %8764 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8765 = getelementptr inbounds i8, i8* %8764, i64 8
  %8766 = bitcast i8* %8765 to float*
  %8767 = load float, float* %8766, align 4
  %8768 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8769 = getelementptr inbounds i8, i8* %8768, i64 8
  %8770 = bitcast i8* %8769 to float*
  %8771 = load float, float* %8770, align 4
  %8772 = fmul float %8767, %8771
  %8773 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8774 = getelementptr inbounds i8, i8* %8773, i64 4
  %8775 = bitcast i8* %8774 to float*
  %8776 = load float, float* %8775, align 4
  %8777 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8778 = getelementptr inbounds i8, i8* %8777, i64 4
  %8779 = bitcast i8* %8778 to float*
  %8780 = load float, float* %8779, align 4
  %8781 = fmul float %8776, %8780
  %8782 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8783 = bitcast i8* %8782 to float*
  %8784 = load float, float* %8783, align 4
  %8785 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8786 = bitcast i8* %8785 to float*
  %8787 = load float, float* %8786, align 4
  %8788 = fmul float %8784, %8787
  %8789 = fadd float %8788, 0.000000e+00
  %8790 = fadd float %8781, %8789
  %8791 = fadd float %8772, %8790
  %8792 = call float @llvm.sqrt.f32.284(float %8791)
  %8793 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8794 = bitcast i8* %8793 to float*
  %8795 = load float, float* %8794, align 4
  %8796 = fcmp olt float %8795, 0.000000e+00
  %8797 = sext i1 %8796 to i32
  %8798 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8799 = bitcast i8* %8798 to float*
  %8800 = load float, float* %8799, align 4
  %8801 = fcmp ogt float %8800, 0.000000e+00
  %8802 = zext i1 %8801 to i32
  %8803 = add nsw i32 %8797, %8802
  %8804 = sitofp i32 %8803 to float
  %8805 = fneg float %8804
  %8806 = fmul float %8792, %8805
  %8807 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8808 = getelementptr inbounds i8, i8* %8807, i64 4
  %8809 = bitcast i8* %8808 to float*
  %8810 = load float, float* %8809, align 4
  %8811 = fmul float %8806, %8810
  %8812 = fadd float %8763, %8811
  %8813 = fmul float %8759, %8812
  %8814 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8815 = bitcast i8* %8814 to float*
  %8816 = load float, float* %8815, align 4
  %8817 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8818 = getelementptr inbounds i8, i8* %8817, i64 8
  %8819 = bitcast i8* %8818 to float*
  %8820 = load float, float* %8819, align 4
  %8821 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8822 = getelementptr inbounds i8, i8* %8821, i64 8
  %8823 = bitcast i8* %8822 to float*
  %8824 = load float, float* %8823, align 4
  %8825 = fmul float %8820, %8824
  %8826 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8827 = getelementptr inbounds i8, i8* %8826, i64 4
  %8828 = bitcast i8* %8827 to float*
  %8829 = load float, float* %8828, align 4
  %8830 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8831 = getelementptr inbounds i8, i8* %8830, i64 4
  %8832 = bitcast i8* %8831 to float*
  %8833 = load float, float* %8832, align 4
  %8834 = fmul float %8829, %8833
  %8835 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8836 = bitcast i8* %8835 to float*
  %8837 = load float, float* %8836, align 4
  %8838 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8839 = bitcast i8* %8838 to float*
  %8840 = load float, float* %8839, align 4
  %8841 = fmul float %8837, %8840
  %8842 = fadd float %8841, 0.000000e+00
  %8843 = fadd float %8834, %8842
  %8844 = fadd float %8825, %8843
  %8845 = call float @llvm.sqrt.f32.285(float %8844)
  %8846 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8847 = bitcast i8* %8846 to float*
  %8848 = load float, float* %8847, align 4
  %8849 = fcmp olt float %8848, 0.000000e+00
  %8850 = sext i1 %8849 to i32
  %8851 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8852 = bitcast i8* %8851 to float*
  %8853 = load float, float* %8852, align 4
  %8854 = fcmp ogt float %8853, 0.000000e+00
  %8855 = zext i1 %8854 to i32
  %8856 = add nsw i32 %8850, %8855
  %8857 = sitofp i32 %8856 to float
  %8858 = fneg float %8857
  %8859 = fmul float %8845, %8858
  %8860 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8861 = bitcast i8* %8860 to float*
  %8862 = load float, float* %8861, align 4
  %8863 = fmul float %8859, %8862
  %8864 = fadd float %8816, %8863
  %8865 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8866 = bitcast i8* %8865 to float*
  %8867 = load float, float* %8866, align 4
  %8868 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8869 = getelementptr inbounds i8, i8* %8868, i64 8
  %8870 = bitcast i8* %8869 to float*
  %8871 = load float, float* %8870, align 4
  %8872 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8873 = getelementptr inbounds i8, i8* %8872, i64 8
  %8874 = bitcast i8* %8873 to float*
  %8875 = load float, float* %8874, align 4
  %8876 = fmul float %8871, %8875
  %8877 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8878 = getelementptr inbounds i8, i8* %8877, i64 4
  %8879 = bitcast i8* %8878 to float*
  %8880 = load float, float* %8879, align 4
  %8881 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8882 = getelementptr inbounds i8, i8* %8881, i64 4
  %8883 = bitcast i8* %8882 to float*
  %8884 = load float, float* %8883, align 4
  %8885 = fmul float %8880, %8884
  %8886 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8887 = bitcast i8* %8886 to float*
  %8888 = load float, float* %8887, align 4
  %8889 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8890 = bitcast i8* %8889 to float*
  %8891 = load float, float* %8890, align 4
  %8892 = fmul float %8888, %8891
  %8893 = fadd float %8892, 0.000000e+00
  %8894 = fadd float %8885, %8893
  %8895 = fadd float %8876, %8894
  %8896 = call float @llvm.sqrt.f32.286(float %8895)
  %8897 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8898 = bitcast i8* %8897 to float*
  %8899 = load float, float* %8898, align 4
  %8900 = fcmp olt float %8899, 0.000000e+00
  %8901 = sext i1 %8900 to i32
  %8902 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8903 = bitcast i8* %8902 to float*
  %8904 = load float, float* %8903, align 4
  %8905 = fcmp ogt float %8904, 0.000000e+00
  %8906 = zext i1 %8905 to i32
  %8907 = add nsw i32 %8901, %8906
  %8908 = sitofp i32 %8907 to float
  %8909 = fneg float %8908
  %8910 = fmul float %8896, %8909
  %8911 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8912 = bitcast i8* %8911 to float*
  %8913 = load float, float* %8912, align 4
  %8914 = fmul float %8910, %8913
  %8915 = fadd float %8867, %8914
  %8916 = fmul float %8864, %8915
  %8917 = fadd float %8916, 0.000000e+00
  %8918 = fadd float %8813, %8917
  %8919 = fadd float %8706, %8918
  %8920 = call float @llvm.sqrt.f32.287(float %8919)
  %8921 = fdiv float %8599, %8920
  %8922 = insertelement <4 x float> zeroinitializer, float %8921, i32 0
  %8923 = insertelement <4 x float> %8922, float 0.000000e+00, i32 1
  %8924 = insertelement <4 x float> %8923, float 0.000000e+00, i32 2
  %8925 = insertelement <4 x float> %8924, float 0.000000e+00, i32 3
  %8926 = extractelement <4 x float> %8925, i32 0
  %8927 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8928 = getelementptr inbounds i8, i8* %8927, i64 4
  %8929 = bitcast i8* %8928 to float*
  store float %8926, float* %8929, align 4
  %8930 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8931 = getelementptr inbounds i8, i8* %8930, i64 8
  %8932 = bitcast i8* %8931 to float*
  %8933 = load float, float* %8932, align 4
  %8934 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8935 = getelementptr inbounds i8, i8* %8934, i64 8
  %8936 = bitcast i8* %8935 to float*
  %8937 = load float, float* %8936, align 4
  %8938 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8939 = getelementptr inbounds i8, i8* %8938, i64 8
  %8940 = bitcast i8* %8939 to float*
  %8941 = load float, float* %8940, align 4
  %8942 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8943 = getelementptr inbounds i8, i8* %8942, i64 8
  %8944 = bitcast i8* %8943 to float*
  %8945 = load float, float* %8944, align 4
  %8946 = fmul float %8941, %8945
  %8947 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8948 = getelementptr inbounds i8, i8* %8947, i64 4
  %8949 = bitcast i8* %8948 to float*
  %8950 = load float, float* %8949, align 4
  %8951 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8952 = getelementptr inbounds i8, i8* %8951, i64 4
  %8953 = bitcast i8* %8952 to float*
  %8954 = load float, float* %8953, align 4
  %8955 = fmul float %8950, %8954
  %8956 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8957 = bitcast i8* %8956 to float*
  %8958 = load float, float* %8957, align 4
  %8959 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8960 = bitcast i8* %8959 to float*
  %8961 = load float, float* %8960, align 4
  %8962 = fmul float %8958, %8961
  %8963 = fadd float %8962, 0.000000e+00
  %8964 = fadd float %8955, %8963
  %8965 = fadd float %8946, %8964
  %8966 = call float @llvm.sqrt.f32.288(float %8965)
  %8967 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8968 = bitcast i8* %8967 to float*
  %8969 = load float, float* %8968, align 4
  %8970 = fcmp olt float %8969, 0.000000e+00
  %8971 = sext i1 %8970 to i32
  %8972 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8973 = bitcast i8* %8972 to float*
  %8974 = load float, float* %8973, align 4
  %8975 = fcmp ogt float %8974, 0.000000e+00
  %8976 = zext i1 %8975 to i32
  %8977 = add nsw i32 %8971, %8976
  %8978 = sitofp i32 %8977 to float
  %8979 = fneg float %8978
  %8980 = fmul float %8966, %8979
  %8981 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8982 = getelementptr inbounds i8, i8* %8981, i64 8
  %8983 = bitcast i8* %8982 to float*
  %8984 = load float, float* %8983, align 4
  %8985 = fmul float %8980, %8984
  %8986 = fadd float %8937, %8985
  %8987 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8988 = getelementptr inbounds i8, i8* %8987, i64 8
  %8989 = bitcast i8* %8988 to float*
  %8990 = load float, float* %8989, align 4
  %8991 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8992 = getelementptr inbounds i8, i8* %8991, i64 8
  %8993 = bitcast i8* %8992 to float*
  %8994 = load float, float* %8993, align 4
  %8995 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %8996 = getelementptr inbounds i8, i8* %8995, i64 8
  %8997 = bitcast i8* %8996 to float*
  %8998 = load float, float* %8997, align 4
  %8999 = fmul float %8994, %8998
  %9000 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9001 = getelementptr inbounds i8, i8* %9000, i64 4
  %9002 = bitcast i8* %9001 to float*
  %9003 = load float, float* %9002, align 4
  %9004 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9005 = getelementptr inbounds i8, i8* %9004, i64 4
  %9006 = bitcast i8* %9005 to float*
  %9007 = load float, float* %9006, align 4
  %9008 = fmul float %9003, %9007
  %9009 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9010 = bitcast i8* %9009 to float*
  %9011 = load float, float* %9010, align 4
  %9012 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9013 = bitcast i8* %9012 to float*
  %9014 = load float, float* %9013, align 4
  %9015 = fmul float %9011, %9014
  %9016 = fadd float %9015, 0.000000e+00
  %9017 = fadd float %9008, %9016
  %9018 = fadd float %8999, %9017
  %9019 = call float @llvm.sqrt.f32.289(float %9018)
  %9020 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9021 = bitcast i8* %9020 to float*
  %9022 = load float, float* %9021, align 4
  %9023 = fcmp olt float %9022, 0.000000e+00
  %9024 = sext i1 %9023 to i32
  %9025 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9026 = bitcast i8* %9025 to float*
  %9027 = load float, float* %9026, align 4
  %9028 = fcmp ogt float %9027, 0.000000e+00
  %9029 = zext i1 %9028 to i32
  %9030 = add nsw i32 %9024, %9029
  %9031 = sitofp i32 %9030 to float
  %9032 = fneg float %9031
  %9033 = fmul float %9019, %9032
  %9034 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9035 = getelementptr inbounds i8, i8* %9034, i64 8
  %9036 = bitcast i8* %9035 to float*
  %9037 = load float, float* %9036, align 4
  %9038 = fmul float %9033, %9037
  %9039 = fadd float %8990, %9038
  %9040 = fmul float %8986, %9039
  %9041 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9042 = getelementptr inbounds i8, i8* %9041, i64 4
  %9043 = bitcast i8* %9042 to float*
  %9044 = load float, float* %9043, align 4
  %9045 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9046 = getelementptr inbounds i8, i8* %9045, i64 8
  %9047 = bitcast i8* %9046 to float*
  %9048 = load float, float* %9047, align 4
  %9049 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9050 = getelementptr inbounds i8, i8* %9049, i64 8
  %9051 = bitcast i8* %9050 to float*
  %9052 = load float, float* %9051, align 4
  %9053 = fmul float %9048, %9052
  %9054 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9055 = getelementptr inbounds i8, i8* %9054, i64 4
  %9056 = bitcast i8* %9055 to float*
  %9057 = load float, float* %9056, align 4
  %9058 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9059 = getelementptr inbounds i8, i8* %9058, i64 4
  %9060 = bitcast i8* %9059 to float*
  %9061 = load float, float* %9060, align 4
  %9062 = fmul float %9057, %9061
  %9063 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9064 = bitcast i8* %9063 to float*
  %9065 = load float, float* %9064, align 4
  %9066 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9067 = bitcast i8* %9066 to float*
  %9068 = load float, float* %9067, align 4
  %9069 = fmul float %9065, %9068
  %9070 = fadd float %9069, 0.000000e+00
  %9071 = fadd float %9062, %9070
  %9072 = fadd float %9053, %9071
  %9073 = call float @llvm.sqrt.f32.290(float %9072)
  %9074 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9075 = bitcast i8* %9074 to float*
  %9076 = load float, float* %9075, align 4
  %9077 = fcmp olt float %9076, 0.000000e+00
  %9078 = sext i1 %9077 to i32
  %9079 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9080 = bitcast i8* %9079 to float*
  %9081 = load float, float* %9080, align 4
  %9082 = fcmp ogt float %9081, 0.000000e+00
  %9083 = zext i1 %9082 to i32
  %9084 = add nsw i32 %9078, %9083
  %9085 = sitofp i32 %9084 to float
  %9086 = fneg float %9085
  %9087 = fmul float %9073, %9086
  %9088 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9089 = getelementptr inbounds i8, i8* %9088, i64 4
  %9090 = bitcast i8* %9089 to float*
  %9091 = load float, float* %9090, align 4
  %9092 = fmul float %9087, %9091
  %9093 = fadd float %9044, %9092
  %9094 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9095 = getelementptr inbounds i8, i8* %9094, i64 4
  %9096 = bitcast i8* %9095 to float*
  %9097 = load float, float* %9096, align 4
  %9098 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9099 = getelementptr inbounds i8, i8* %9098, i64 8
  %9100 = bitcast i8* %9099 to float*
  %9101 = load float, float* %9100, align 4
  %9102 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9103 = getelementptr inbounds i8, i8* %9102, i64 8
  %9104 = bitcast i8* %9103 to float*
  %9105 = load float, float* %9104, align 4
  %9106 = fmul float %9101, %9105
  %9107 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9108 = getelementptr inbounds i8, i8* %9107, i64 4
  %9109 = bitcast i8* %9108 to float*
  %9110 = load float, float* %9109, align 4
  %9111 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9112 = getelementptr inbounds i8, i8* %9111, i64 4
  %9113 = bitcast i8* %9112 to float*
  %9114 = load float, float* %9113, align 4
  %9115 = fmul float %9110, %9114
  %9116 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9117 = bitcast i8* %9116 to float*
  %9118 = load float, float* %9117, align 4
  %9119 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9120 = bitcast i8* %9119 to float*
  %9121 = load float, float* %9120, align 4
  %9122 = fmul float %9118, %9121
  %9123 = fadd float %9122, 0.000000e+00
  %9124 = fadd float %9115, %9123
  %9125 = fadd float %9106, %9124
  %9126 = call float @llvm.sqrt.f32.291(float %9125)
  %9127 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9128 = bitcast i8* %9127 to float*
  %9129 = load float, float* %9128, align 4
  %9130 = fcmp olt float %9129, 0.000000e+00
  %9131 = sext i1 %9130 to i32
  %9132 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9133 = bitcast i8* %9132 to float*
  %9134 = load float, float* %9133, align 4
  %9135 = fcmp ogt float %9134, 0.000000e+00
  %9136 = zext i1 %9135 to i32
  %9137 = add nsw i32 %9131, %9136
  %9138 = sitofp i32 %9137 to float
  %9139 = fneg float %9138
  %9140 = fmul float %9126, %9139
  %9141 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9142 = getelementptr inbounds i8, i8* %9141, i64 4
  %9143 = bitcast i8* %9142 to float*
  %9144 = load float, float* %9143, align 4
  %9145 = fmul float %9140, %9144
  %9146 = fadd float %9097, %9145
  %9147 = fmul float %9093, %9146
  %9148 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9149 = bitcast i8* %9148 to float*
  %9150 = load float, float* %9149, align 4
  %9151 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9152 = getelementptr inbounds i8, i8* %9151, i64 8
  %9153 = bitcast i8* %9152 to float*
  %9154 = load float, float* %9153, align 4
  %9155 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9156 = getelementptr inbounds i8, i8* %9155, i64 8
  %9157 = bitcast i8* %9156 to float*
  %9158 = load float, float* %9157, align 4
  %9159 = fmul float %9154, %9158
  %9160 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9161 = getelementptr inbounds i8, i8* %9160, i64 4
  %9162 = bitcast i8* %9161 to float*
  %9163 = load float, float* %9162, align 4
  %9164 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9165 = getelementptr inbounds i8, i8* %9164, i64 4
  %9166 = bitcast i8* %9165 to float*
  %9167 = load float, float* %9166, align 4
  %9168 = fmul float %9163, %9167
  %9169 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9170 = bitcast i8* %9169 to float*
  %9171 = load float, float* %9170, align 4
  %9172 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9173 = bitcast i8* %9172 to float*
  %9174 = load float, float* %9173, align 4
  %9175 = fmul float %9171, %9174
  %9176 = fadd float %9175, 0.000000e+00
  %9177 = fadd float %9168, %9176
  %9178 = fadd float %9159, %9177
  %9179 = call float @llvm.sqrt.f32.292(float %9178)
  %9180 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9181 = bitcast i8* %9180 to float*
  %9182 = load float, float* %9181, align 4
  %9183 = fcmp olt float %9182, 0.000000e+00
  %9184 = sext i1 %9183 to i32
  %9185 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9186 = bitcast i8* %9185 to float*
  %9187 = load float, float* %9186, align 4
  %9188 = fcmp ogt float %9187, 0.000000e+00
  %9189 = zext i1 %9188 to i32
  %9190 = add nsw i32 %9184, %9189
  %9191 = sitofp i32 %9190 to float
  %9192 = fneg float %9191
  %9193 = fmul float %9179, %9192
  %9194 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9195 = bitcast i8* %9194 to float*
  %9196 = load float, float* %9195, align 4
  %9197 = fmul float %9193, %9196
  %9198 = fadd float %9150, %9197
  %9199 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9200 = bitcast i8* %9199 to float*
  %9201 = load float, float* %9200, align 4
  %9202 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9203 = getelementptr inbounds i8, i8* %9202, i64 8
  %9204 = bitcast i8* %9203 to float*
  %9205 = load float, float* %9204, align 4
  %9206 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9207 = getelementptr inbounds i8, i8* %9206, i64 8
  %9208 = bitcast i8* %9207 to float*
  %9209 = load float, float* %9208, align 4
  %9210 = fmul float %9205, %9209
  %9211 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9212 = getelementptr inbounds i8, i8* %9211, i64 4
  %9213 = bitcast i8* %9212 to float*
  %9214 = load float, float* %9213, align 4
  %9215 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9216 = getelementptr inbounds i8, i8* %9215, i64 4
  %9217 = bitcast i8* %9216 to float*
  %9218 = load float, float* %9217, align 4
  %9219 = fmul float %9214, %9218
  %9220 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9221 = bitcast i8* %9220 to float*
  %9222 = load float, float* %9221, align 4
  %9223 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9224 = bitcast i8* %9223 to float*
  %9225 = load float, float* %9224, align 4
  %9226 = fmul float %9222, %9225
  %9227 = fadd float %9226, 0.000000e+00
  %9228 = fadd float %9219, %9227
  %9229 = fadd float %9210, %9228
  %9230 = call float @llvm.sqrt.f32.293(float %9229)
  %9231 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9232 = bitcast i8* %9231 to float*
  %9233 = load float, float* %9232, align 4
  %9234 = fcmp olt float %9233, 0.000000e+00
  %9235 = sext i1 %9234 to i32
  %9236 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9237 = bitcast i8* %9236 to float*
  %9238 = load float, float* %9237, align 4
  %9239 = fcmp ogt float %9238, 0.000000e+00
  %9240 = zext i1 %9239 to i32
  %9241 = add nsw i32 %9235, %9240
  %9242 = sitofp i32 %9241 to float
  %9243 = fneg float %9242
  %9244 = fmul float %9230, %9243
  %9245 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9246 = bitcast i8* %9245 to float*
  %9247 = load float, float* %9246, align 4
  %9248 = fmul float %9244, %9247
  %9249 = fadd float %9201, %9248
  %9250 = fmul float %9198, %9249
  %9251 = fadd float %9250, 0.000000e+00
  %9252 = fadd float %9147, %9251
  %9253 = fadd float %9040, %9252
  %9254 = call float @llvm.sqrt.f32.294(float %9253)
  %9255 = fdiv float %8933, %9254
  %9256 = insertelement <4 x float> zeroinitializer, float %9255, i32 0
  %9257 = insertelement <4 x float> %9256, float 0.000000e+00, i32 1
  %9258 = insertelement <4 x float> %9257, float 0.000000e+00, i32 2
  %9259 = insertelement <4 x float> %9258, float 0.000000e+00, i32 3
  %9260 = extractelement <4 x float> %9259, i32 0
  %9261 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9262 = getelementptr inbounds i8, i8* %9261, i64 8
  %9263 = bitcast i8* %9262 to float*
  store float %9260, float* %9263, align 4
  %9264 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9265 = bitcast i8* %9264 to float*
  %9266 = load float, float* %9265, align 4
  %9267 = insertelement <4 x float> zeroinitializer, float %9266, i32 0
  %9268 = insertelement <4 x float> %9267, float 1.000000e+00, i32 1
  %9269 = insertelement <4 x float> %9268, float 1.000000e+00, i32 2
  %9270 = insertelement <4 x float> %9269, float 1.000000e+00, i32 3
  %9271 = fmul <4 x float> %9270, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %9272 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9273 = bitcast i8* %9272 to float*
  %9274 = load float, float* %9273, align 4
  %9275 = insertelement <4 x float> zeroinitializer, float %9274, i32 0
  %9276 = insertelement <4 x float> %9275, float 0.000000e+00, i32 1
  %9277 = insertelement <4 x float> %9276, float 0.000000e+00, i32 2
  %9278 = insertelement <4 x float> %9277, float 0.000000e+00, i32 3
  %9279 = fmul <4 x float> %9271, %9278
  %9280 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %9279
  %9281 = extractelement <4 x float> %9280, i32 0
  %9282 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9283 = bitcast i8* %9282 to float*
  store float %9281, float* %9283, align 4
  %9284 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9285 = bitcast i8* %9284 to float*
  %9286 = load float, float* %9285, align 4
  %9287 = insertelement <4 x float> zeroinitializer, float %9286, i32 0
  %9288 = insertelement <4 x float> %9287, float 1.000000e+00, i32 1
  %9289 = insertelement <4 x float> %9288, float 1.000000e+00, i32 2
  %9290 = insertelement <4 x float> %9289, float 1.000000e+00, i32 3
  %9291 = fmul <4 x float> %9290, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %9292 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9293 = getelementptr inbounds i8, i8* %9292, i64 4
  %9294 = bitcast i8* %9293 to float*
  %9295 = load float, float* %9294, align 4
  %9296 = insertelement <4 x float> zeroinitializer, float %9295, i32 0
  %9297 = insertelement <4 x float> %9296, float 0.000000e+00, i32 1
  %9298 = insertelement <4 x float> %9297, float 0.000000e+00, i32 2
  %9299 = insertelement <4 x float> %9298, float 0.000000e+00, i32 3
  %9300 = fmul <4 x float> %9291, %9299
  %9301 = fsub <4 x float> zeroinitializer, %9300
  %9302 = extractelement <4 x float> %9301, i32 0
  %9303 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9304 = getelementptr inbounds i8, i8* %9303, i64 4
  %9305 = bitcast i8* %9304 to float*
  store float %9302, float* %9305, align 4
  %9306 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9307 = bitcast i8* %9306 to float*
  %9308 = load float, float* %9307, align 4
  %9309 = insertelement <4 x float> zeroinitializer, float %9308, i32 0
  %9310 = insertelement <4 x float> %9309, float 1.000000e+00, i32 1
  %9311 = insertelement <4 x float> %9310, float 1.000000e+00, i32 2
  %9312 = insertelement <4 x float> %9311, float 1.000000e+00, i32 3
  %9313 = fmul <4 x float> %9312, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %9314 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9315 = getelementptr inbounds i8, i8* %9314, i64 8
  %9316 = bitcast i8* %9315 to float*
  %9317 = load float, float* %9316, align 4
  %9318 = insertelement <4 x float> zeroinitializer, float %9317, i32 0
  %9319 = insertelement <4 x float> %9318, float 0.000000e+00, i32 1
  %9320 = insertelement <4 x float> %9319, float 0.000000e+00, i32 2
  %9321 = insertelement <4 x float> %9320, float 0.000000e+00, i32 3
  %9322 = fmul <4 x float> %9313, %9321
  %9323 = fsub <4 x float> zeroinitializer, %9322
  %9324 = extractelement <4 x float> %9323, i32 0
  %9325 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9326 = getelementptr inbounds i8, i8* %9325, i64 8
  %9327 = bitcast i8* %9326 to float*
  store float %9324, float* %9327, align 4
  %9328 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9329 = getelementptr inbounds i8, i8* %9328, i64 4
  %9330 = bitcast i8* %9329 to float*
  %9331 = load float, float* %9330, align 4
  %9332 = insertelement <4 x float> zeroinitializer, float %9331, i32 0
  %9333 = insertelement <4 x float> %9332, float 1.000000e+00, i32 1
  %9334 = insertelement <4 x float> %9333, float 1.000000e+00, i32 2
  %9335 = insertelement <4 x float> %9334, float 1.000000e+00, i32 3
  %9336 = fmul <4 x float> %9335, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %9337 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9338 = bitcast i8* %9337 to float*
  %9339 = load float, float* %9338, align 4
  %9340 = insertelement <4 x float> zeroinitializer, float %9339, i32 0
  %9341 = insertelement <4 x float> %9340, float 0.000000e+00, i32 1
  %9342 = insertelement <4 x float> %9341, float 0.000000e+00, i32 2
  %9343 = insertelement <4 x float> %9342, float 0.000000e+00, i32 3
  %9344 = fmul <4 x float> %9336, %9343
  %9345 = fsub <4 x float> zeroinitializer, %9344
  %9346 = extractelement <4 x float> %9345, i32 0
  %9347 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9348 = getelementptr inbounds i8, i8* %9347, i64 12
  %9349 = bitcast i8* %9348 to float*
  store float %9346, float* %9349, align 4
  %9350 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9351 = getelementptr inbounds i8, i8* %9350, i64 4
  %9352 = bitcast i8* %9351 to float*
  %9353 = load float, float* %9352, align 4
  %9354 = insertelement <4 x float> zeroinitializer, float %9353, i32 0
  %9355 = insertelement <4 x float> %9354, float 1.000000e+00, i32 1
  %9356 = insertelement <4 x float> %9355, float 1.000000e+00, i32 2
  %9357 = insertelement <4 x float> %9356, float 1.000000e+00, i32 3
  %9358 = fmul <4 x float> %9357, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %9359 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9360 = getelementptr inbounds i8, i8* %9359, i64 4
  %9361 = bitcast i8* %9360 to float*
  %9362 = load float, float* %9361, align 4
  %9363 = insertelement <4 x float> zeroinitializer, float %9362, i32 0
  %9364 = insertelement <4 x float> %9363, float 0.000000e+00, i32 1
  %9365 = insertelement <4 x float> %9364, float 0.000000e+00, i32 2
  %9366 = insertelement <4 x float> %9365, float 0.000000e+00, i32 3
  %9367 = fmul <4 x float> %9358, %9366
  %9368 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %9367
  %9369 = extractelement <4 x float> %9368, i32 0
  %9370 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9371 = getelementptr inbounds i8, i8* %9370, i64 16
  %9372 = bitcast i8* %9371 to float*
  store float %9369, float* %9372, align 4
  %9373 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9374 = getelementptr inbounds i8, i8* %9373, i64 4
  %9375 = bitcast i8* %9374 to float*
  %9376 = load float, float* %9375, align 4
  %9377 = insertelement <4 x float> zeroinitializer, float %9376, i32 0
  %9378 = insertelement <4 x float> %9377, float 1.000000e+00, i32 1
  %9379 = insertelement <4 x float> %9378, float 1.000000e+00, i32 2
  %9380 = insertelement <4 x float> %9379, float 1.000000e+00, i32 3
  %9381 = fmul <4 x float> %9380, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %9382 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9383 = getelementptr inbounds i8, i8* %9382, i64 8
  %9384 = bitcast i8* %9383 to float*
  %9385 = load float, float* %9384, align 4
  %9386 = insertelement <4 x float> zeroinitializer, float %9385, i32 0
  %9387 = insertelement <4 x float> %9386, float 0.000000e+00, i32 1
  %9388 = insertelement <4 x float> %9387, float 0.000000e+00, i32 2
  %9389 = insertelement <4 x float> %9388, float 0.000000e+00, i32 3
  %9390 = fmul <4 x float> %9381, %9389
  %9391 = fsub <4 x float> zeroinitializer, %9390
  %9392 = extractelement <4 x float> %9391, i32 0
  %9393 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9394 = getelementptr inbounds i8, i8* %9393, i64 20
  %9395 = bitcast i8* %9394 to float*
  store float %9392, float* %9395, align 4
  %9396 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9397 = getelementptr inbounds i8, i8* %9396, i64 8
  %9398 = bitcast i8* %9397 to float*
  %9399 = load float, float* %9398, align 4
  %9400 = insertelement <4 x float> zeroinitializer, float %9399, i32 0
  %9401 = insertelement <4 x float> %9400, float 1.000000e+00, i32 1
  %9402 = insertelement <4 x float> %9401, float 1.000000e+00, i32 2
  %9403 = insertelement <4 x float> %9402, float 1.000000e+00, i32 3
  %9404 = fmul <4 x float> %9403, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %9405 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9406 = bitcast i8* %9405 to float*
  %9407 = load float, float* %9406, align 4
  %9408 = insertelement <4 x float> zeroinitializer, float %9407, i32 0
  %9409 = insertelement <4 x float> %9408, float 0.000000e+00, i32 1
  %9410 = insertelement <4 x float> %9409, float 0.000000e+00, i32 2
  %9411 = insertelement <4 x float> %9410, float 0.000000e+00, i32 3
  %9412 = fmul <4 x float> %9404, %9411
  %9413 = fsub <4 x float> zeroinitializer, %9412
  %9414 = extractelement <4 x float> %9413, i32 0
  %9415 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9416 = getelementptr inbounds i8, i8* %9415, i64 24
  %9417 = bitcast i8* %9416 to float*
  store float %9414, float* %9417, align 4
  %9418 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9419 = getelementptr inbounds i8, i8* %9418, i64 8
  %9420 = bitcast i8* %9419 to float*
  %9421 = load float, float* %9420, align 4
  %9422 = insertelement <4 x float> zeroinitializer, float %9421, i32 0
  %9423 = insertelement <4 x float> %9422, float 1.000000e+00, i32 1
  %9424 = insertelement <4 x float> %9423, float 1.000000e+00, i32 2
  %9425 = insertelement <4 x float> %9424, float 1.000000e+00, i32 3
  %9426 = fmul <4 x float> %9425, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %9427 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9428 = getelementptr inbounds i8, i8* %9427, i64 4
  %9429 = bitcast i8* %9428 to float*
  %9430 = load float, float* %9429, align 4
  %9431 = insertelement <4 x float> zeroinitializer, float %9430, i32 0
  %9432 = insertelement <4 x float> %9431, float 0.000000e+00, i32 1
  %9433 = insertelement <4 x float> %9432, float 0.000000e+00, i32 2
  %9434 = insertelement <4 x float> %9433, float 0.000000e+00, i32 3
  %9435 = fmul <4 x float> %9426, %9434
  %9436 = fsub <4 x float> zeroinitializer, %9435
  %9437 = extractelement <4 x float> %9436, i32 0
  %9438 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9439 = getelementptr inbounds i8, i8* %9438, i64 28
  %9440 = bitcast i8* %9439 to float*
  store float %9437, float* %9440, align 4
  %9441 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9442 = getelementptr inbounds i8, i8* %9441, i64 8
  %9443 = bitcast i8* %9442 to float*
  %9444 = load float, float* %9443, align 4
  %9445 = fmul float %9444, 2.000000e+00
  %9446 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %9447 = getelementptr inbounds i8, i8* %9446, i64 8
  %9448 = bitcast i8* %9447 to float*
  %9449 = load float, float* %9448, align 4
  %9450 = fmul float %9445, %9449
  %9451 = fsub float 1.000000e+00, %9450
  %9452 = insertelement <4 x float> zeroinitializer, float %9451, i32 0
  %9453 = insertelement <4 x float> %9452, float 1.000000e+00, i32 1
  %9454 = insertelement <4 x float> %9453, float 0.000000e+00, i32 2
  %9455 = insertelement <4 x float> %9454, float 0.000000e+00, i32 3
  %9456 = extractelement <4 x float> %9455, i32 0
  %9457 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9458 = getelementptr inbounds i8, i8* %9457, i64 32
  %9459 = bitcast i8* %9458 to float*
  store float %9456, float* %9459, align 4
  %9460 = extractelement <4 x float> %9455, i32 1
  %9461 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9462 = bitcast i8* %9461 to float*
  store float %9460, float* %9462, align 4
  %9463 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9464 = bitcast i8* %9463 to i32*
  %9465 = load i32, i32* %9464, align 4
  %9466 = sitofp i32 %9465 to float
  %9467 = insertelement <4 x float> zeroinitializer, float %9466, i32 0
  %9468 = insertelement <4 x float> %9467, float 0.000000e+00, i32 1
  %9469 = insertelement <4 x float> %9468, float 0.000000e+00, i32 2
  %9470 = insertelement <4 x float> %9469, float 0.000000e+00, i32 3
  %9471 = extractelement <4 x float> %9470, i32 0
  %9472 = fptosi float %9471 to i32
  %9473 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9474 = getelementptr inbounds i8, i8* %9473, i64 20
  %9475 = bitcast i8* %9474 to i32*
  store i32 %9472, i32* %9475, align 4
  %9476 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9477 = getelementptr inbounds i8, i8* %9476, i64 4
  %9478 = bitcast i8* %9477 to i32*
  %9479 = load i32, i32* %9478, align 4
  %9480 = sitofp i32 %9479 to float
  %9481 = insertelement <4 x float> zeroinitializer, float %9480, i32 0
  %9482 = insertelement <4 x float> %9481, float 0.000000e+00, i32 1
  %9483 = insertelement <4 x float> %9482, float 0.000000e+00, i32 2
  %9484 = insertelement <4 x float> %9483, float 0.000000e+00, i32 3
  %9485 = extractelement <4 x float> %9484, i32 0
  %9486 = fptosi float %9485 to i32
  %9487 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9488 = getelementptr inbounds i8, i8* %9487, i64 24
  %9489 = bitcast i8* %9488 to i32*
  store i32 %9486, i32* %9489, align 4
  %9490 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9491 = getelementptr inbounds i8, i8* %9490, i64 8
  %9492 = bitcast i8* %9491 to i32*
  %9493 = load i32, i32* %9492, align 4
  %9494 = sitofp i32 %9493 to float
  %9495 = insertelement <4 x float> zeroinitializer, float %9494, i32 0
  %9496 = insertelement <4 x float> %9495, float 0.000000e+00, i32 1
  %9497 = insertelement <4 x float> %9496, float 0.000000e+00, i32 2
  %9498 = insertelement <4 x float> %9497, float 0.000000e+00, i32 3
  %9499 = extractelement <4 x float> %9498, i32 0
  %9500 = fptosi float %9499 to i32
  %9501 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9502 = getelementptr inbounds i8, i8* %9501, i64 28
  %9503 = bitcast i8* %9502 to i32*
  store i32 %9500, i32* %9503, align 4
  %9504 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9505 = getelementptr inbounds i8, i8* %9504, i64 12
  %9506 = bitcast i8* %9505 to i32*
  %9507 = load i32, i32* %9506, align 4
  %9508 = sitofp i32 %9507 to float
  %9509 = insertelement <4 x float> zeroinitializer, float %9508, i32 0
  %9510 = insertelement <4 x float> %9509, float 0.000000e+00, i32 1
  %9511 = insertelement <4 x float> %9510, float 0.000000e+00, i32 2
  %9512 = insertelement <4 x float> %9511, float 0.000000e+00, i32 3
  %9513 = extractelement <4 x float> %9512, i32 0
  %9514 = fptosi float %9513 to i32
  %9515 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9516 = getelementptr inbounds i8, i8* %9515, i64 36
  %9517 = bitcast i8* %9516 to i32*
  store i32 %9514, i32* %9517, align 4
  %9518 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9519 = getelementptr inbounds i8, i8* %9518, i64 16
  %9520 = bitcast i8* %9519 to i32*
  %9521 = load i32, i32* %9520, align 4
  %9522 = sitofp i32 %9521 to float
  %9523 = insertelement <4 x float> zeroinitializer, float %9522, i32 0
  %9524 = insertelement <4 x float> %9523, float 0.000000e+00, i32 1
  %9525 = insertelement <4 x float> %9524, float 0.000000e+00, i32 2
  %9526 = insertelement <4 x float> %9525, float 0.000000e+00, i32 3
  %9527 = extractelement <4 x float> %9526, i32 0
  %9528 = fptosi float %9527 to i32
  %9529 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9530 = getelementptr inbounds i8, i8* %9529, i64 40
  %9531 = bitcast i8* %9530 to i32*
  store i32 %9528, i32* %9531, align 4
  %9532 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9533 = getelementptr inbounds i8, i8* %9532, i64 20
  %9534 = bitcast i8* %9533 to i32*
  %9535 = load i32, i32* %9534, align 4
  %9536 = sitofp i32 %9535 to float
  %9537 = insertelement <4 x float> zeroinitializer, float %9536, i32 0
  %9538 = insertelement <4 x float> %9537, float 0.000000e+00, i32 1
  %9539 = insertelement <4 x float> %9538, float 0.000000e+00, i32 2
  %9540 = insertelement <4 x float> %9539, float 0.000000e+00, i32 3
  %9541 = extractelement <4 x float> %9540, i32 0
  %9542 = fptosi float %9541 to i32
  %9543 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9544 = getelementptr inbounds i8, i8* %9543, i64 44
  %9545 = bitcast i8* %9544 to i32*
  store i32 %9542, i32* %9545, align 4
  %9546 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9547 = getelementptr inbounds i8, i8* %9546, i64 24
  %9548 = bitcast i8* %9547 to i32*
  %9549 = load i32, i32* %9548, align 4
  %9550 = sitofp i32 %9549 to float
  %9551 = insertelement <4 x float> zeroinitializer, float %9550, i32 0
  %9552 = insertelement <4 x float> %9551, float 0.000000e+00, i32 1
  %9553 = insertelement <4 x float> %9552, float 0.000000e+00, i32 2
  %9554 = insertelement <4 x float> %9553, float 0.000000e+00, i32 3
  %9555 = extractelement <4 x float> %9554, i32 0
  %9556 = fptosi float %9555 to i32
  %9557 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9558 = getelementptr inbounds i8, i8* %9557, i64 52
  %9559 = bitcast i8* %9558 to i32*
  store i32 %9556, i32* %9559, align 4
  %9560 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9561 = getelementptr inbounds i8, i8* %9560, i64 28
  %9562 = bitcast i8* %9561 to i32*
  %9563 = load i32, i32* %9562, align 4
  %9564 = sitofp i32 %9563 to float
  %9565 = insertelement <4 x float> zeroinitializer, float %9564, i32 0
  %9566 = insertelement <4 x float> %9565, float 0.000000e+00, i32 1
  %9567 = insertelement <4 x float> %9566, float 0.000000e+00, i32 2
  %9568 = insertelement <4 x float> %9567, float 0.000000e+00, i32 3
  %9569 = extractelement <4 x float> %9568, i32 0
  %9570 = fptosi float %9569 to i32
  %9571 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9572 = getelementptr inbounds i8, i8* %9571, i64 56
  %9573 = bitcast i8* %9572 to i32*
  store i32 %9570, i32* %9573, align 4
  %9574 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %9575 = getelementptr inbounds i8, i8* %9574, i64 32
  %9576 = bitcast i8* %9575 to i32*
  %9577 = load i32, i32* %9576, align 4
  %9578 = sitofp i32 %9577 to float
  %9579 = insertelement <4 x float> zeroinitializer, float %9578, i32 0
  %9580 = insertelement <4 x float> %9579, float 0.000000e+00, i32 1
  %9581 = insertelement <4 x float> %9580, float 0.000000e+00, i32 2
  %9582 = insertelement <4 x float> %9581, float 0.000000e+00, i32 3
  %9583 = extractelement <4 x float> %9582, i32 0
  %9584 = fptosi float %9583 to i32
  %9585 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9586 = getelementptr inbounds i8, i8* %9585, i64 60
  %9587 = bitcast i8* %9586 to i32*
  store i32 %9584, i32* %9587, align 4
  %9588 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9589 = bitcast i8* %9588 to float*
  %9590 = load float, float* %9589, align 4
  %9591 = insertelement <4 x float> zeroinitializer, float %9590, i32 0
  %9592 = insertelement <4 x float> %9591, float 0.000000e+00, i32 1
  %9593 = insertelement <4 x float> %9592, float 0.000000e+00, i32 2
  %9594 = insertelement <4 x float> %9593, float 0.000000e+00, i32 3
  %9595 = load float, float* %1, align 4
  %9596 = insertelement <4 x float> zeroinitializer, float %9595, i32 0
  %9597 = insertelement <4 x float> %9596, float 0.000000e+00, i32 1
  %9598 = insertelement <4 x float> %9597, float 0.000000e+00, i32 2
  %9599 = insertelement <4 x float> %9598, float 0.000000e+00, i32 3
  %9600 = call <4 x float> @llvm.fma.f32.295(<4 x float> %9594, <4 x float> %9599, <4 x float> zeroinitializer)
  %9601 = extractelement <4 x float> %9600, i32 0
  %9602 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9603 = bitcast i8* %9602 to float*
  store float %9601, float* %9603, align 4
  %9604 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9605 = bitcast i8* %9604 to float*
  %9606 = load float, float* %9605, align 4
  %9607 = insertelement <4 x float> zeroinitializer, float %9606, i32 0
  %9608 = insertelement <4 x float> %9607, float 1.000000e+00, i32 1
  %9609 = insertelement <4 x float> %9608, float 1.000000e+00, i32 2
  %9610 = insertelement <4 x float> %9609, float 1.000000e+00, i32 3
  %9611 = load float, float* %1, align 4
  %9612 = insertelement <4 x float> zeroinitializer, float %9611, i32 0
  %9613 = insertelement <4 x float> %9612, float 0.000000e+00, i32 1
  %9614 = insertelement <4 x float> %9613, float 0.000000e+00, i32 2
  %9615 = insertelement <4 x float> %9614, float 0.000000e+00, i32 3
  %9616 = fmul <4 x float> %9610, %9615
  %9617 = fadd <4 x float> %9616, zeroinitializer
  %9618 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9619 = getelementptr inbounds i8, i8* %9618, i64 4
  %9620 = bitcast i8* %9619 to float*
  %9621 = load float, float* %9620, align 4
  %9622 = insertelement <4 x float> zeroinitializer, float %9621, i32 0
  %9623 = insertelement <4 x float> %9622, float 0.000000e+00, i32 1
  %9624 = insertelement <4 x float> %9623, float 0.000000e+00, i32 2
  %9625 = insertelement <4 x float> %9624, float 0.000000e+00, i32 3
  %9626 = getelementptr inbounds float, float* %1, i64 4
  %9627 = load float, float* %9626, align 4
  %9628 = insertelement <4 x float> zeroinitializer, float %9627, i32 0
  %9629 = insertelement <4 x float> %9628, float 0.000000e+00, i32 1
  %9630 = insertelement <4 x float> %9629, float 0.000000e+00, i32 2
  %9631 = insertelement <4 x float> %9630, float 0.000000e+00, i32 3
  %9632 = call <4 x float> @llvm.fma.f32.296(<4 x float> %9625, <4 x float> %9631, <4 x float> %9617)
  %9633 = extractelement <4 x float> %9632, i32 0
  %9634 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9635 = bitcast i8* %9634 to float*
  store float %9633, float* %9635, align 4
  %9636 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9637 = bitcast i8* %9636 to float*
  %9638 = load float, float* %9637, align 4
  %9639 = insertelement <4 x float> zeroinitializer, float %9638, i32 0
  %9640 = insertelement <4 x float> %9639, float 1.000000e+00, i32 1
  %9641 = insertelement <4 x float> %9640, float 1.000000e+00, i32 2
  %9642 = insertelement <4 x float> %9641, float 1.000000e+00, i32 3
  %9643 = load float, float* %1, align 4
  %9644 = insertelement <4 x float> zeroinitializer, float %9643, i32 0
  %9645 = insertelement <4 x float> %9644, float 0.000000e+00, i32 1
  %9646 = insertelement <4 x float> %9645, float 0.000000e+00, i32 2
  %9647 = insertelement <4 x float> %9646, float 0.000000e+00, i32 3
  %9648 = fmul <4 x float> %9642, %9647
  %9649 = fadd <4 x float> %9648, zeroinitializer
  %9650 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9651 = getelementptr inbounds i8, i8* %9650, i64 4
  %9652 = bitcast i8* %9651 to float*
  %9653 = load float, float* %9652, align 4
  %9654 = insertelement <4 x float> zeroinitializer, float %9653, i32 0
  %9655 = insertelement <4 x float> %9654, float 1.000000e+00, i32 1
  %9656 = insertelement <4 x float> %9655, float 1.000000e+00, i32 2
  %9657 = insertelement <4 x float> %9656, float 1.000000e+00, i32 3
  %9658 = getelementptr inbounds float, float* %1, i64 4
  %9659 = load float, float* %9658, align 4
  %9660 = insertelement <4 x float> zeroinitializer, float %9659, i32 0
  %9661 = insertelement <4 x float> %9660, float 0.000000e+00, i32 1
  %9662 = insertelement <4 x float> %9661, float 0.000000e+00, i32 2
  %9663 = insertelement <4 x float> %9662, float 0.000000e+00, i32 3
  %9664 = call <4 x float> @llvm.fma.f32.297(<4 x float> %9657, <4 x float> %9663, <4 x float> %9649)
  %9665 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9666 = getelementptr inbounds i8, i8* %9665, i64 8
  %9667 = bitcast i8* %9666 to float*
  %9668 = load float, float* %9667, align 4
  %9669 = insertelement <4 x float> zeroinitializer, float %9668, i32 0
  %9670 = insertelement <4 x float> %9669, float 0.000000e+00, i32 1
  %9671 = insertelement <4 x float> %9670, float 0.000000e+00, i32 2
  %9672 = insertelement <4 x float> %9671, float 0.000000e+00, i32 3
  %9673 = getelementptr inbounds float, float* %1, i64 8
  %9674 = load float, float* %9673, align 4
  %9675 = insertelement <4 x float> zeroinitializer, float %9674, i32 0
  %9676 = insertelement <4 x float> %9675, float 0.000000e+00, i32 1
  %9677 = insertelement <4 x float> %9676, float 0.000000e+00, i32 2
  %9678 = insertelement <4 x float> %9677, float 0.000000e+00, i32 3
  %9679 = call <4 x float> @llvm.fma.f32.298(<4 x float> %9672, <4 x float> %9678, <4 x float> %9664)
  %9680 = extractelement <4 x float> %9679, i32 0
  %9681 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9682 = bitcast i8* %9681 to float*
  store float %9680, float* %9682, align 4
  %9683 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9684 = bitcast i8* %9683 to float*
  %9685 = load float, float* %9684, align 4
  %9686 = insertelement <4 x float> zeroinitializer, float %9685, i32 0
  %9687 = insertelement <4 x float> %9686, float 1.000000e+00, i32 1
  %9688 = insertelement <4 x float> %9687, float 1.000000e+00, i32 2
  %9689 = insertelement <4 x float> %9688, float 1.000000e+00, i32 3
  %9690 = load float, float* %1, align 4
  %9691 = insertelement <4 x float> zeroinitializer, float %9690, i32 0
  %9692 = insertelement <4 x float> %9691, float 0.000000e+00, i32 1
  %9693 = insertelement <4 x float> %9692, float 0.000000e+00, i32 2
  %9694 = insertelement <4 x float> %9693, float 0.000000e+00, i32 3
  %9695 = fmul <4 x float> %9689, %9694
  %9696 = fadd <4 x float> %9695, zeroinitializer
  %9697 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9698 = getelementptr inbounds i8, i8* %9697, i64 4
  %9699 = bitcast i8* %9698 to float*
  %9700 = load float, float* %9699, align 4
  %9701 = insertelement <4 x float> zeroinitializer, float %9700, i32 0
  %9702 = insertelement <4 x float> %9701, float 1.000000e+00, i32 1
  %9703 = insertelement <4 x float> %9702, float 1.000000e+00, i32 2
  %9704 = insertelement <4 x float> %9703, float 1.000000e+00, i32 3
  %9705 = getelementptr inbounds float, float* %1, i64 4
  %9706 = load float, float* %9705, align 4
  %9707 = insertelement <4 x float> zeroinitializer, float %9706, i32 0
  %9708 = insertelement <4 x float> %9707, float 0.000000e+00, i32 1
  %9709 = insertelement <4 x float> %9708, float 0.000000e+00, i32 2
  %9710 = insertelement <4 x float> %9709, float 0.000000e+00, i32 3
  %9711 = call <4 x float> @llvm.fma.f32.299(<4 x float> %9704, <4 x float> %9710, <4 x float> %9696)
  %9712 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9713 = getelementptr inbounds i8, i8* %9712, i64 8
  %9714 = bitcast i8* %9713 to float*
  %9715 = load float, float* %9714, align 4
  %9716 = insertelement <4 x float> zeroinitializer, float %9715, i32 0
  %9717 = insertelement <4 x float> %9716, float 1.000000e+00, i32 1
  %9718 = insertelement <4 x float> %9717, float 1.000000e+00, i32 2
  %9719 = insertelement <4 x float> %9718, float 1.000000e+00, i32 3
  %9720 = getelementptr inbounds float, float* %1, i64 8
  %9721 = load float, float* %9720, align 4
  %9722 = insertelement <4 x float> zeroinitializer, float %9721, i32 0
  %9723 = insertelement <4 x float> %9722, float 0.000000e+00, i32 1
  %9724 = insertelement <4 x float> %9723, float 0.000000e+00, i32 2
  %9725 = insertelement <4 x float> %9724, float 0.000000e+00, i32 3
  %9726 = call <4 x float> @llvm.fma.f32.300(<4 x float> %9719, <4 x float> %9725, <4 x float> %9711)
  %9727 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9728 = getelementptr inbounds i8, i8* %9727, i64 12
  %9729 = bitcast i8* %9728 to float*
  %9730 = load float, float* %9729, align 4
  %9731 = insertelement <4 x float> zeroinitializer, float %9730, i32 0
  %9732 = insertelement <4 x float> %9731, float 0.000000e+00, i32 1
  %9733 = insertelement <4 x float> %9732, float 0.000000e+00, i32 2
  %9734 = insertelement <4 x float> %9733, float 0.000000e+00, i32 3
  %9735 = getelementptr inbounds float, float* %1, i64 12
  %9736 = load float, float* %9735, align 4
  %9737 = insertelement <4 x float> zeroinitializer, float %9736, i32 0
  %9738 = insertelement <4 x float> %9737, float 0.000000e+00, i32 1
  %9739 = insertelement <4 x float> %9738, float 0.000000e+00, i32 2
  %9740 = insertelement <4 x float> %9739, float 0.000000e+00, i32 3
  %9741 = call <4 x float> @llvm.fma.f32.301(<4 x float> %9734, <4 x float> %9740, <4 x float> %9726)
  %9742 = extractelement <4 x float> %9741, i32 0
  %9743 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9744 = bitcast i8* %9743 to float*
  store float %9742, float* %9744, align 4
  %9745 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9746 = bitcast i8* %9745 to float*
  %9747 = load float, float* %9746, align 4
  %9748 = insertelement <4 x float> zeroinitializer, float %9747, i32 0
  %9749 = insertelement <4 x float> %9748, float 0.000000e+00, i32 1
  %9750 = insertelement <4 x float> %9749, float 0.000000e+00, i32 2
  %9751 = insertelement <4 x float> %9750, float 0.000000e+00, i32 3
  %9752 = getelementptr inbounds float, float* %1, i64 1
  %9753 = load float, float* %9752, align 4
  %9754 = insertelement <4 x float> zeroinitializer, float %9753, i32 0
  %9755 = insertelement <4 x float> %9754, float 0.000000e+00, i32 1
  %9756 = insertelement <4 x float> %9755, float 0.000000e+00, i32 2
  %9757 = insertelement <4 x float> %9756, float 0.000000e+00, i32 3
  %9758 = call <4 x float> @llvm.fma.f32.302(<4 x float> %9751, <4 x float> %9757, <4 x float> zeroinitializer)
  %9759 = extractelement <4 x float> %9758, i32 0
  %9760 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9761 = getelementptr inbounds i8, i8* %9760, i64 4
  %9762 = bitcast i8* %9761 to float*
  store float %9759, float* %9762, align 4
  %9763 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9764 = bitcast i8* %9763 to float*
  %9765 = load float, float* %9764, align 4
  %9766 = insertelement <4 x float> zeroinitializer, float %9765, i32 0
  %9767 = insertelement <4 x float> %9766, float 1.000000e+00, i32 1
  %9768 = insertelement <4 x float> %9767, float 1.000000e+00, i32 2
  %9769 = insertelement <4 x float> %9768, float 1.000000e+00, i32 3
  %9770 = getelementptr inbounds float, float* %1, i64 1
  %9771 = load float, float* %9770, align 4
  %9772 = insertelement <4 x float> zeroinitializer, float %9771, i32 0
  %9773 = insertelement <4 x float> %9772, float 0.000000e+00, i32 1
  %9774 = insertelement <4 x float> %9773, float 0.000000e+00, i32 2
  %9775 = insertelement <4 x float> %9774, float 0.000000e+00, i32 3
  %9776 = fmul <4 x float> %9769, %9775
  %9777 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9778 = getelementptr inbounds i8, i8* %9777, i64 4
  %9779 = bitcast i8* %9778 to float*
  %9780 = load float, float* %9779, align 4
  %9781 = insertelement <4 x float> zeroinitializer, float %9780, i32 0
  %9782 = insertelement <4 x float> %9781, float 0.000000e+00, i32 1
  %9783 = insertelement <4 x float> %9782, float 0.000000e+00, i32 2
  %9784 = insertelement <4 x float> %9783, float 0.000000e+00, i32 3
  %9785 = getelementptr inbounds float, float* %1, i64 5
  %9786 = load float, float* %9785, align 4
  %9787 = insertelement <4 x float> zeroinitializer, float %9786, i32 0
  %9788 = insertelement <4 x float> %9787, float 0.000000e+00, i32 1
  %9789 = insertelement <4 x float> %9788, float 0.000000e+00, i32 2
  %9790 = insertelement <4 x float> %9789, float 0.000000e+00, i32 3
  %9791 = call <4 x float> @llvm.fma.f32.303(<4 x float> %9784, <4 x float> %9790, <4 x float> %9776)
  %9792 = extractelement <4 x float> %9791, i32 0
  %9793 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9794 = getelementptr inbounds i8, i8* %9793, i64 4
  %9795 = bitcast i8* %9794 to float*
  store float %9792, float* %9795, align 4
  %9796 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9797 = bitcast i8* %9796 to float*
  %9798 = load float, float* %9797, align 4
  %9799 = insertelement <4 x float> zeroinitializer, float %9798, i32 0
  %9800 = insertelement <4 x float> %9799, float 1.000000e+00, i32 1
  %9801 = insertelement <4 x float> %9800, float 1.000000e+00, i32 2
  %9802 = insertelement <4 x float> %9801, float 1.000000e+00, i32 3
  %9803 = getelementptr inbounds float, float* %1, i64 1
  %9804 = load float, float* %9803, align 4
  %9805 = insertelement <4 x float> zeroinitializer, float %9804, i32 0
  %9806 = insertelement <4 x float> %9805, float 0.000000e+00, i32 1
  %9807 = insertelement <4 x float> %9806, float 0.000000e+00, i32 2
  %9808 = insertelement <4 x float> %9807, float 0.000000e+00, i32 3
  %9809 = fmul <4 x float> %9802, %9808
  %9810 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9811 = getelementptr inbounds i8, i8* %9810, i64 4
  %9812 = bitcast i8* %9811 to float*
  %9813 = load float, float* %9812, align 4
  %9814 = insertelement <4 x float> zeroinitializer, float %9813, i32 0
  %9815 = insertelement <4 x float> %9814, float 1.000000e+00, i32 1
  %9816 = insertelement <4 x float> %9815, float 1.000000e+00, i32 2
  %9817 = insertelement <4 x float> %9816, float 1.000000e+00, i32 3
  %9818 = getelementptr inbounds float, float* %1, i64 5
  %9819 = load float, float* %9818, align 4
  %9820 = insertelement <4 x float> zeroinitializer, float %9819, i32 0
  %9821 = insertelement <4 x float> %9820, float 0.000000e+00, i32 1
  %9822 = insertelement <4 x float> %9821, float 0.000000e+00, i32 2
  %9823 = insertelement <4 x float> %9822, float 0.000000e+00, i32 3
  %9824 = call <4 x float> @llvm.fma.f32.304(<4 x float> %9817, <4 x float> %9823, <4 x float> %9809)
  %9825 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9826 = getelementptr inbounds i8, i8* %9825, i64 8
  %9827 = bitcast i8* %9826 to float*
  %9828 = load float, float* %9827, align 4
  %9829 = insertelement <4 x float> zeroinitializer, float %9828, i32 0
  %9830 = insertelement <4 x float> %9829, float 0.000000e+00, i32 1
  %9831 = insertelement <4 x float> %9830, float 0.000000e+00, i32 2
  %9832 = insertelement <4 x float> %9831, float 0.000000e+00, i32 3
  %9833 = getelementptr inbounds float, float* %1, i64 9
  %9834 = load float, float* %9833, align 4
  %9835 = insertelement <4 x float> zeroinitializer, float %9834, i32 0
  %9836 = insertelement <4 x float> %9835, float 0.000000e+00, i32 1
  %9837 = insertelement <4 x float> %9836, float 0.000000e+00, i32 2
  %9838 = insertelement <4 x float> %9837, float 0.000000e+00, i32 3
  %9839 = call <4 x float> @llvm.fma.f32.305(<4 x float> %9832, <4 x float> %9838, <4 x float> %9824)
  %9840 = extractelement <4 x float> %9839, i32 0
  %9841 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9842 = getelementptr inbounds i8, i8* %9841, i64 4
  %9843 = bitcast i8* %9842 to float*
  store float %9840, float* %9843, align 4
  %9844 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9845 = bitcast i8* %9844 to float*
  %9846 = load float, float* %9845, align 4
  %9847 = insertelement <4 x float> zeroinitializer, float %9846, i32 0
  %9848 = insertelement <4 x float> %9847, float 1.000000e+00, i32 1
  %9849 = insertelement <4 x float> %9848, float 1.000000e+00, i32 2
  %9850 = insertelement <4 x float> %9849, float 1.000000e+00, i32 3
  %9851 = getelementptr inbounds float, float* %1, i64 1
  %9852 = load float, float* %9851, align 4
  %9853 = insertelement <4 x float> zeroinitializer, float %9852, i32 0
  %9854 = insertelement <4 x float> %9853, float 0.000000e+00, i32 1
  %9855 = insertelement <4 x float> %9854, float 0.000000e+00, i32 2
  %9856 = insertelement <4 x float> %9855, float 0.000000e+00, i32 3
  %9857 = fmul <4 x float> %9850, %9856
  %9858 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9859 = getelementptr inbounds i8, i8* %9858, i64 4
  %9860 = bitcast i8* %9859 to float*
  %9861 = load float, float* %9860, align 4
  %9862 = insertelement <4 x float> zeroinitializer, float %9861, i32 0
  %9863 = insertelement <4 x float> %9862, float 1.000000e+00, i32 1
  %9864 = insertelement <4 x float> %9863, float 1.000000e+00, i32 2
  %9865 = insertelement <4 x float> %9864, float 1.000000e+00, i32 3
  %9866 = getelementptr inbounds float, float* %1, i64 5
  %9867 = load float, float* %9866, align 4
  %9868 = insertelement <4 x float> zeroinitializer, float %9867, i32 0
  %9869 = insertelement <4 x float> %9868, float 0.000000e+00, i32 1
  %9870 = insertelement <4 x float> %9869, float 0.000000e+00, i32 2
  %9871 = insertelement <4 x float> %9870, float 0.000000e+00, i32 3
  %9872 = call <4 x float> @llvm.fma.f32.306(<4 x float> %9865, <4 x float> %9871, <4 x float> %9857)
  %9873 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9874 = getelementptr inbounds i8, i8* %9873, i64 8
  %9875 = bitcast i8* %9874 to float*
  %9876 = load float, float* %9875, align 4
  %9877 = insertelement <4 x float> zeroinitializer, float %9876, i32 0
  %9878 = insertelement <4 x float> %9877, float 1.000000e+00, i32 1
  %9879 = insertelement <4 x float> %9878, float 1.000000e+00, i32 2
  %9880 = insertelement <4 x float> %9879, float 1.000000e+00, i32 3
  %9881 = getelementptr inbounds float, float* %1, i64 9
  %9882 = load float, float* %9881, align 4
  %9883 = insertelement <4 x float> zeroinitializer, float %9882, i32 0
  %9884 = insertelement <4 x float> %9883, float 0.000000e+00, i32 1
  %9885 = insertelement <4 x float> %9884, float 0.000000e+00, i32 2
  %9886 = insertelement <4 x float> %9885, float 0.000000e+00, i32 3
  %9887 = call <4 x float> @llvm.fma.f32.307(<4 x float> %9880, <4 x float> %9886, <4 x float> %9872)
  %9888 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9889 = getelementptr inbounds i8, i8* %9888, i64 12
  %9890 = bitcast i8* %9889 to float*
  %9891 = load float, float* %9890, align 4
  %9892 = insertelement <4 x float> zeroinitializer, float %9891, i32 0
  %9893 = insertelement <4 x float> %9892, float 0.000000e+00, i32 1
  %9894 = insertelement <4 x float> %9893, float 0.000000e+00, i32 2
  %9895 = insertelement <4 x float> %9894, float 0.000000e+00, i32 3
  %9896 = getelementptr inbounds float, float* %1, i64 13
  %9897 = load float, float* %9896, align 4
  %9898 = insertelement <4 x float> zeroinitializer, float %9897, i32 0
  %9899 = insertelement <4 x float> %9898, float 0.000000e+00, i32 1
  %9900 = insertelement <4 x float> %9899, float 0.000000e+00, i32 2
  %9901 = insertelement <4 x float> %9900, float 0.000000e+00, i32 3
  %9902 = call <4 x float> @llvm.fma.f32.308(<4 x float> %9895, <4 x float> %9901, <4 x float> %9887)
  %9903 = extractelement <4 x float> %9902, i32 0
  %9904 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9905 = getelementptr inbounds i8, i8* %9904, i64 4
  %9906 = bitcast i8* %9905 to float*
  store float %9903, float* %9906, align 4
  %9907 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9908 = bitcast i8* %9907 to float*
  %9909 = load float, float* %9908, align 4
  %9910 = insertelement <4 x float> zeroinitializer, float %9909, i32 0
  %9911 = insertelement <4 x float> %9910, float 0.000000e+00, i32 1
  %9912 = insertelement <4 x float> %9911, float 0.000000e+00, i32 2
  %9913 = insertelement <4 x float> %9912, float 0.000000e+00, i32 3
  %9914 = getelementptr inbounds float, float* %1, i64 2
  %9915 = load float, float* %9914, align 4
  %9916 = insertelement <4 x float> zeroinitializer, float %9915, i32 0
  %9917 = insertelement <4 x float> %9916, float 0.000000e+00, i32 1
  %9918 = insertelement <4 x float> %9917, float 0.000000e+00, i32 2
  %9919 = insertelement <4 x float> %9918, float 0.000000e+00, i32 3
  %9920 = call <4 x float> @llvm.fma.f32.309(<4 x float> %9913, <4 x float> %9919, <4 x float> zeroinitializer)
  %9921 = extractelement <4 x float> %9920, i32 0
  %9922 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9923 = getelementptr inbounds i8, i8* %9922, i64 8
  %9924 = bitcast i8* %9923 to float*
  store float %9921, float* %9924, align 4
  %9925 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9926 = bitcast i8* %9925 to float*
  %9927 = load float, float* %9926, align 4
  %9928 = insertelement <4 x float> zeroinitializer, float %9927, i32 0
  %9929 = insertelement <4 x float> %9928, float 1.000000e+00, i32 1
  %9930 = insertelement <4 x float> %9929, float 1.000000e+00, i32 2
  %9931 = insertelement <4 x float> %9930, float 1.000000e+00, i32 3
  %9932 = getelementptr inbounds float, float* %1, i64 2
  %9933 = load float, float* %9932, align 4
  %9934 = insertelement <4 x float> zeroinitializer, float %9933, i32 0
  %9935 = insertelement <4 x float> %9934, float 0.000000e+00, i32 1
  %9936 = insertelement <4 x float> %9935, float 0.000000e+00, i32 2
  %9937 = insertelement <4 x float> %9936, float 0.000000e+00, i32 3
  %9938 = fmul <4 x float> %9931, %9937
  %9939 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9940 = getelementptr inbounds i8, i8* %9939, i64 4
  %9941 = bitcast i8* %9940 to float*
  %9942 = load float, float* %9941, align 4
  %9943 = insertelement <4 x float> zeroinitializer, float %9942, i32 0
  %9944 = insertelement <4 x float> %9943, float 0.000000e+00, i32 1
  %9945 = insertelement <4 x float> %9944, float 0.000000e+00, i32 2
  %9946 = insertelement <4 x float> %9945, float 0.000000e+00, i32 3
  %9947 = getelementptr inbounds float, float* %1, i64 6
  %9948 = load float, float* %9947, align 4
  %9949 = insertelement <4 x float> zeroinitializer, float %9948, i32 0
  %9950 = insertelement <4 x float> %9949, float 0.000000e+00, i32 1
  %9951 = insertelement <4 x float> %9950, float 0.000000e+00, i32 2
  %9952 = insertelement <4 x float> %9951, float 0.000000e+00, i32 3
  %9953 = call <4 x float> @llvm.fma.f32.310(<4 x float> %9946, <4 x float> %9952, <4 x float> %9938)
  %9954 = extractelement <4 x float> %9953, i32 0
  %9955 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9956 = getelementptr inbounds i8, i8* %9955, i64 8
  %9957 = bitcast i8* %9956 to float*
  store float %9954, float* %9957, align 4
  %9958 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9959 = bitcast i8* %9958 to float*
  %9960 = load float, float* %9959, align 4
  %9961 = insertelement <4 x float> zeroinitializer, float %9960, i32 0
  %9962 = insertelement <4 x float> %9961, float 1.000000e+00, i32 1
  %9963 = insertelement <4 x float> %9962, float 1.000000e+00, i32 2
  %9964 = insertelement <4 x float> %9963, float 1.000000e+00, i32 3
  %9965 = getelementptr inbounds float, float* %1, i64 2
  %9966 = load float, float* %9965, align 4
  %9967 = insertelement <4 x float> zeroinitializer, float %9966, i32 0
  %9968 = insertelement <4 x float> %9967, float 0.000000e+00, i32 1
  %9969 = insertelement <4 x float> %9968, float 0.000000e+00, i32 2
  %9970 = insertelement <4 x float> %9969, float 0.000000e+00, i32 3
  %9971 = fmul <4 x float> %9964, %9970
  %9972 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9973 = getelementptr inbounds i8, i8* %9972, i64 4
  %9974 = bitcast i8* %9973 to float*
  %9975 = load float, float* %9974, align 4
  %9976 = insertelement <4 x float> zeroinitializer, float %9975, i32 0
  %9977 = insertelement <4 x float> %9976, float 1.000000e+00, i32 1
  %9978 = insertelement <4 x float> %9977, float 1.000000e+00, i32 2
  %9979 = insertelement <4 x float> %9978, float 1.000000e+00, i32 3
  %9980 = getelementptr inbounds float, float* %1, i64 6
  %9981 = load float, float* %9980, align 4
  %9982 = insertelement <4 x float> zeroinitializer, float %9981, i32 0
  %9983 = insertelement <4 x float> %9982, float 0.000000e+00, i32 1
  %9984 = insertelement <4 x float> %9983, float 0.000000e+00, i32 2
  %9985 = insertelement <4 x float> %9984, float 0.000000e+00, i32 3
  %9986 = call <4 x float> @llvm.fma.f32.311(<4 x float> %9979, <4 x float> %9985, <4 x float> %9971)
  %9987 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9988 = getelementptr inbounds i8, i8* %9987, i64 8
  %9989 = bitcast i8* %9988 to float*
  %9990 = load float, float* %9989, align 4
  %9991 = insertelement <4 x float> zeroinitializer, float %9990, i32 0
  %9992 = insertelement <4 x float> %9991, float 0.000000e+00, i32 1
  %9993 = insertelement <4 x float> %9992, float 0.000000e+00, i32 2
  %9994 = insertelement <4 x float> %9993, float 0.000000e+00, i32 3
  %9995 = getelementptr inbounds float, float* %1, i64 10
  %9996 = load float, float* %9995, align 4
  %9997 = insertelement <4 x float> zeroinitializer, float %9996, i32 0
  %9998 = insertelement <4 x float> %9997, float 0.000000e+00, i32 1
  %9999 = insertelement <4 x float> %9998, float 0.000000e+00, i32 2
  %10000 = insertelement <4 x float> %9999, float 0.000000e+00, i32 3
  %10001 = call <4 x float> @llvm.fma.f32.312(<4 x float> %9994, <4 x float> %10000, <4 x float> %9986)
  %10002 = extractelement <4 x float> %10001, i32 0
  %10003 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10004 = getelementptr inbounds i8, i8* %10003, i64 8
  %10005 = bitcast i8* %10004 to float*
  store float %10002, float* %10005, align 4
  %10006 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10007 = bitcast i8* %10006 to float*
  %10008 = load float, float* %10007, align 4
  %10009 = insertelement <4 x float> zeroinitializer, float %10008, i32 0
  %10010 = insertelement <4 x float> %10009, float 1.000000e+00, i32 1
  %10011 = insertelement <4 x float> %10010, float 1.000000e+00, i32 2
  %10012 = insertelement <4 x float> %10011, float 1.000000e+00, i32 3
  %10013 = getelementptr inbounds float, float* %1, i64 2
  %10014 = load float, float* %10013, align 4
  %10015 = insertelement <4 x float> zeroinitializer, float %10014, i32 0
  %10016 = insertelement <4 x float> %10015, float 0.000000e+00, i32 1
  %10017 = insertelement <4 x float> %10016, float 0.000000e+00, i32 2
  %10018 = insertelement <4 x float> %10017, float 0.000000e+00, i32 3
  %10019 = fmul <4 x float> %10012, %10018
  %10020 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10021 = getelementptr inbounds i8, i8* %10020, i64 4
  %10022 = bitcast i8* %10021 to float*
  %10023 = load float, float* %10022, align 4
  %10024 = insertelement <4 x float> zeroinitializer, float %10023, i32 0
  %10025 = insertelement <4 x float> %10024, float 1.000000e+00, i32 1
  %10026 = insertelement <4 x float> %10025, float 1.000000e+00, i32 2
  %10027 = insertelement <4 x float> %10026, float 1.000000e+00, i32 3
  %10028 = getelementptr inbounds float, float* %1, i64 6
  %10029 = load float, float* %10028, align 4
  %10030 = insertelement <4 x float> zeroinitializer, float %10029, i32 0
  %10031 = insertelement <4 x float> %10030, float 0.000000e+00, i32 1
  %10032 = insertelement <4 x float> %10031, float 0.000000e+00, i32 2
  %10033 = insertelement <4 x float> %10032, float 0.000000e+00, i32 3
  %10034 = call <4 x float> @llvm.fma.f32.313(<4 x float> %10027, <4 x float> %10033, <4 x float> %10019)
  %10035 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10036 = getelementptr inbounds i8, i8* %10035, i64 8
  %10037 = bitcast i8* %10036 to float*
  %10038 = load float, float* %10037, align 4
  %10039 = insertelement <4 x float> zeroinitializer, float %10038, i32 0
  %10040 = insertelement <4 x float> %10039, float 1.000000e+00, i32 1
  %10041 = insertelement <4 x float> %10040, float 1.000000e+00, i32 2
  %10042 = insertelement <4 x float> %10041, float 1.000000e+00, i32 3
  %10043 = getelementptr inbounds float, float* %1, i64 10
  %10044 = load float, float* %10043, align 4
  %10045 = insertelement <4 x float> zeroinitializer, float %10044, i32 0
  %10046 = insertelement <4 x float> %10045, float 0.000000e+00, i32 1
  %10047 = insertelement <4 x float> %10046, float 0.000000e+00, i32 2
  %10048 = insertelement <4 x float> %10047, float 0.000000e+00, i32 3
  %10049 = call <4 x float> @llvm.fma.f32.314(<4 x float> %10042, <4 x float> %10048, <4 x float> %10034)
  %10050 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10051 = getelementptr inbounds i8, i8* %10050, i64 12
  %10052 = bitcast i8* %10051 to float*
  %10053 = load float, float* %10052, align 4
  %10054 = insertelement <4 x float> zeroinitializer, float %10053, i32 0
  %10055 = insertelement <4 x float> %10054, float 0.000000e+00, i32 1
  %10056 = insertelement <4 x float> %10055, float 0.000000e+00, i32 2
  %10057 = insertelement <4 x float> %10056, float 0.000000e+00, i32 3
  %10058 = getelementptr inbounds float, float* %1, i64 14
  %10059 = load float, float* %10058, align 4
  %10060 = insertelement <4 x float> zeroinitializer, float %10059, i32 0
  %10061 = insertelement <4 x float> %10060, float 0.000000e+00, i32 1
  %10062 = insertelement <4 x float> %10061, float 0.000000e+00, i32 2
  %10063 = insertelement <4 x float> %10062, float 0.000000e+00, i32 3
  %10064 = call <4 x float> @llvm.fma.f32.315(<4 x float> %10057, <4 x float> %10063, <4 x float> %10049)
  %10065 = extractelement <4 x float> %10064, i32 0
  %10066 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10067 = getelementptr inbounds i8, i8* %10066, i64 8
  %10068 = bitcast i8* %10067 to float*
  store float %10065, float* %10068, align 4
  %10069 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10070 = bitcast i8* %10069 to float*
  %10071 = load float, float* %10070, align 4
  %10072 = insertelement <4 x float> zeroinitializer, float %10071, i32 0
  %10073 = insertelement <4 x float> %10072, float 0.000000e+00, i32 1
  %10074 = insertelement <4 x float> %10073, float 0.000000e+00, i32 2
  %10075 = insertelement <4 x float> %10074, float 0.000000e+00, i32 3
  %10076 = getelementptr inbounds float, float* %1, i64 3
  %10077 = load float, float* %10076, align 4
  %10078 = insertelement <4 x float> zeroinitializer, float %10077, i32 0
  %10079 = insertelement <4 x float> %10078, float 0.000000e+00, i32 1
  %10080 = insertelement <4 x float> %10079, float 0.000000e+00, i32 2
  %10081 = insertelement <4 x float> %10080, float 0.000000e+00, i32 3
  %10082 = call <4 x float> @llvm.fma.f32.316(<4 x float> %10075, <4 x float> %10081, <4 x float> zeroinitializer)
  %10083 = extractelement <4 x float> %10082, i32 0
  %10084 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10085 = getelementptr inbounds i8, i8* %10084, i64 12
  %10086 = bitcast i8* %10085 to float*
  store float %10083, float* %10086, align 4
  %10087 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10088 = bitcast i8* %10087 to float*
  %10089 = load float, float* %10088, align 4
  %10090 = insertelement <4 x float> zeroinitializer, float %10089, i32 0
  %10091 = insertelement <4 x float> %10090, float 1.000000e+00, i32 1
  %10092 = insertelement <4 x float> %10091, float 1.000000e+00, i32 2
  %10093 = insertelement <4 x float> %10092, float 1.000000e+00, i32 3
  %10094 = getelementptr inbounds float, float* %1, i64 3
  %10095 = load float, float* %10094, align 4
  %10096 = insertelement <4 x float> zeroinitializer, float %10095, i32 0
  %10097 = insertelement <4 x float> %10096, float 0.000000e+00, i32 1
  %10098 = insertelement <4 x float> %10097, float 0.000000e+00, i32 2
  %10099 = insertelement <4 x float> %10098, float 0.000000e+00, i32 3
  %10100 = fmul <4 x float> %10093, %10099
  %10101 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10102 = getelementptr inbounds i8, i8* %10101, i64 4
  %10103 = bitcast i8* %10102 to float*
  %10104 = load float, float* %10103, align 4
  %10105 = insertelement <4 x float> zeroinitializer, float %10104, i32 0
  %10106 = insertelement <4 x float> %10105, float 0.000000e+00, i32 1
  %10107 = insertelement <4 x float> %10106, float 0.000000e+00, i32 2
  %10108 = insertelement <4 x float> %10107, float 0.000000e+00, i32 3
  %10109 = getelementptr inbounds float, float* %1, i64 7
  %10110 = load float, float* %10109, align 4
  %10111 = insertelement <4 x float> zeroinitializer, float %10110, i32 0
  %10112 = insertelement <4 x float> %10111, float 0.000000e+00, i32 1
  %10113 = insertelement <4 x float> %10112, float 0.000000e+00, i32 2
  %10114 = insertelement <4 x float> %10113, float 0.000000e+00, i32 3
  %10115 = call <4 x float> @llvm.fma.f32.317(<4 x float> %10108, <4 x float> %10114, <4 x float> %10100)
  %10116 = extractelement <4 x float> %10115, i32 0
  %10117 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10118 = getelementptr inbounds i8, i8* %10117, i64 12
  %10119 = bitcast i8* %10118 to float*
  store float %10116, float* %10119, align 4
  %10120 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10121 = bitcast i8* %10120 to float*
  %10122 = load float, float* %10121, align 4
  %10123 = insertelement <4 x float> zeroinitializer, float %10122, i32 0
  %10124 = insertelement <4 x float> %10123, float 1.000000e+00, i32 1
  %10125 = insertelement <4 x float> %10124, float 1.000000e+00, i32 2
  %10126 = insertelement <4 x float> %10125, float 1.000000e+00, i32 3
  %10127 = getelementptr inbounds float, float* %1, i64 3
  %10128 = load float, float* %10127, align 4
  %10129 = insertelement <4 x float> zeroinitializer, float %10128, i32 0
  %10130 = insertelement <4 x float> %10129, float 0.000000e+00, i32 1
  %10131 = insertelement <4 x float> %10130, float 0.000000e+00, i32 2
  %10132 = insertelement <4 x float> %10131, float 0.000000e+00, i32 3
  %10133 = fmul <4 x float> %10126, %10132
  %10134 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10135 = getelementptr inbounds i8, i8* %10134, i64 4
  %10136 = bitcast i8* %10135 to float*
  %10137 = load float, float* %10136, align 4
  %10138 = insertelement <4 x float> zeroinitializer, float %10137, i32 0
  %10139 = insertelement <4 x float> %10138, float 1.000000e+00, i32 1
  %10140 = insertelement <4 x float> %10139, float 1.000000e+00, i32 2
  %10141 = insertelement <4 x float> %10140, float 1.000000e+00, i32 3
  %10142 = getelementptr inbounds float, float* %1, i64 7
  %10143 = load float, float* %10142, align 4
  %10144 = insertelement <4 x float> zeroinitializer, float %10143, i32 0
  %10145 = insertelement <4 x float> %10144, float 0.000000e+00, i32 1
  %10146 = insertelement <4 x float> %10145, float 0.000000e+00, i32 2
  %10147 = insertelement <4 x float> %10146, float 0.000000e+00, i32 3
  %10148 = call <4 x float> @llvm.fma.f32.318(<4 x float> %10141, <4 x float> %10147, <4 x float> %10133)
  %10149 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10150 = getelementptr inbounds i8, i8* %10149, i64 8
  %10151 = bitcast i8* %10150 to float*
  %10152 = load float, float* %10151, align 4
  %10153 = insertelement <4 x float> zeroinitializer, float %10152, i32 0
  %10154 = insertelement <4 x float> %10153, float 0.000000e+00, i32 1
  %10155 = insertelement <4 x float> %10154, float 0.000000e+00, i32 2
  %10156 = insertelement <4 x float> %10155, float 0.000000e+00, i32 3
  %10157 = getelementptr inbounds float, float* %1, i64 11
  %10158 = load float, float* %10157, align 4
  %10159 = insertelement <4 x float> zeroinitializer, float %10158, i32 0
  %10160 = insertelement <4 x float> %10159, float 0.000000e+00, i32 1
  %10161 = insertelement <4 x float> %10160, float 0.000000e+00, i32 2
  %10162 = insertelement <4 x float> %10161, float 0.000000e+00, i32 3
  %10163 = call <4 x float> @llvm.fma.f32.319(<4 x float> %10156, <4 x float> %10162, <4 x float> %10148)
  %10164 = extractelement <4 x float> %10163, i32 0
  %10165 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10166 = getelementptr inbounds i8, i8* %10165, i64 12
  %10167 = bitcast i8* %10166 to float*
  store float %10164, float* %10167, align 4
  %10168 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10169 = bitcast i8* %10168 to float*
  %10170 = load float, float* %10169, align 4
  %10171 = insertelement <4 x float> zeroinitializer, float %10170, i32 0
  %10172 = insertelement <4 x float> %10171, float 1.000000e+00, i32 1
  %10173 = insertelement <4 x float> %10172, float 1.000000e+00, i32 2
  %10174 = insertelement <4 x float> %10173, float 1.000000e+00, i32 3
  %10175 = getelementptr inbounds float, float* %1, i64 3
  %10176 = load float, float* %10175, align 4
  %10177 = insertelement <4 x float> zeroinitializer, float %10176, i32 0
  %10178 = insertelement <4 x float> %10177, float 0.000000e+00, i32 1
  %10179 = insertelement <4 x float> %10178, float 0.000000e+00, i32 2
  %10180 = insertelement <4 x float> %10179, float 0.000000e+00, i32 3
  %10181 = fmul <4 x float> %10174, %10180
  %10182 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10183 = getelementptr inbounds i8, i8* %10182, i64 4
  %10184 = bitcast i8* %10183 to float*
  %10185 = load float, float* %10184, align 4
  %10186 = insertelement <4 x float> zeroinitializer, float %10185, i32 0
  %10187 = insertelement <4 x float> %10186, float 1.000000e+00, i32 1
  %10188 = insertelement <4 x float> %10187, float 1.000000e+00, i32 2
  %10189 = insertelement <4 x float> %10188, float 1.000000e+00, i32 3
  %10190 = getelementptr inbounds float, float* %1, i64 7
  %10191 = load float, float* %10190, align 4
  %10192 = insertelement <4 x float> zeroinitializer, float %10191, i32 0
  %10193 = insertelement <4 x float> %10192, float 0.000000e+00, i32 1
  %10194 = insertelement <4 x float> %10193, float 0.000000e+00, i32 2
  %10195 = insertelement <4 x float> %10194, float 0.000000e+00, i32 3
  %10196 = call <4 x float> @llvm.fma.f32.320(<4 x float> %10189, <4 x float> %10195, <4 x float> %10181)
  %10197 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10198 = getelementptr inbounds i8, i8* %10197, i64 8
  %10199 = bitcast i8* %10198 to float*
  %10200 = load float, float* %10199, align 4
  %10201 = insertelement <4 x float> zeroinitializer, float %10200, i32 0
  %10202 = insertelement <4 x float> %10201, float 1.000000e+00, i32 1
  %10203 = insertelement <4 x float> %10202, float 1.000000e+00, i32 2
  %10204 = insertelement <4 x float> %10203, float 1.000000e+00, i32 3
  %10205 = getelementptr inbounds float, float* %1, i64 11
  %10206 = load float, float* %10205, align 4
  %10207 = insertelement <4 x float> zeroinitializer, float %10206, i32 0
  %10208 = insertelement <4 x float> %10207, float 0.000000e+00, i32 1
  %10209 = insertelement <4 x float> %10208, float 0.000000e+00, i32 2
  %10210 = insertelement <4 x float> %10209, float 0.000000e+00, i32 3
  %10211 = call <4 x float> @llvm.fma.f32.321(<4 x float> %10204, <4 x float> %10210, <4 x float> %10196)
  %10212 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10213 = getelementptr inbounds i8, i8* %10212, i64 12
  %10214 = bitcast i8* %10213 to float*
  %10215 = load float, float* %10214, align 4
  %10216 = insertelement <4 x float> zeroinitializer, float %10215, i32 0
  %10217 = insertelement <4 x float> %10216, float 0.000000e+00, i32 1
  %10218 = insertelement <4 x float> %10217, float 0.000000e+00, i32 2
  %10219 = insertelement <4 x float> %10218, float 0.000000e+00, i32 3
  %10220 = getelementptr inbounds float, float* %1, i64 15
  %10221 = load float, float* %10220, align 4
  %10222 = insertelement <4 x float> zeroinitializer, float %10221, i32 0
  %10223 = insertelement <4 x float> %10222, float 0.000000e+00, i32 1
  %10224 = insertelement <4 x float> %10223, float 0.000000e+00, i32 2
  %10225 = insertelement <4 x float> %10224, float 0.000000e+00, i32 3
  %10226 = call <4 x float> @llvm.fma.f32.322(<4 x float> %10219, <4 x float> %10225, <4 x float> %10211)
  %10227 = extractelement <4 x float> %10226, i32 0
  %10228 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10229 = getelementptr inbounds i8, i8* %10228, i64 12
  %10230 = bitcast i8* %10229 to float*
  store float %10227, float* %10230, align 4
  %10231 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10232 = getelementptr inbounds i8, i8* %10231, i64 16
  %10233 = bitcast i8* %10232 to float*
  %10234 = load float, float* %10233, align 4
  %10235 = insertelement <4 x float> zeroinitializer, float %10234, i32 0
  %10236 = insertelement <4 x float> %10235, float 0.000000e+00, i32 1
  %10237 = insertelement <4 x float> %10236, float 0.000000e+00, i32 2
  %10238 = insertelement <4 x float> %10237, float 0.000000e+00, i32 3
  %10239 = load float, float* %1, align 4
  %10240 = insertelement <4 x float> zeroinitializer, float %10239, i32 0
  %10241 = insertelement <4 x float> %10240, float 0.000000e+00, i32 1
  %10242 = insertelement <4 x float> %10241, float 0.000000e+00, i32 2
  %10243 = insertelement <4 x float> %10242, float 0.000000e+00, i32 3
  %10244 = call <4 x float> @llvm.fma.f32.323(<4 x float> %10238, <4 x float> %10243, <4 x float> zeroinitializer)
  %10245 = extractelement <4 x float> %10244, i32 0
  %10246 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10247 = getelementptr inbounds i8, i8* %10246, i64 16
  %10248 = bitcast i8* %10247 to float*
  store float %10245, float* %10248, align 4
  %10249 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10250 = getelementptr inbounds i8, i8* %10249, i64 16
  %10251 = bitcast i8* %10250 to float*
  %10252 = load float, float* %10251, align 4
  %10253 = insertelement <4 x float> zeroinitializer, float %10252, i32 0
  %10254 = insertelement <4 x float> %10253, float 1.000000e+00, i32 1
  %10255 = insertelement <4 x float> %10254, float 1.000000e+00, i32 2
  %10256 = insertelement <4 x float> %10255, float 1.000000e+00, i32 3
  %10257 = load float, float* %1, align 4
  %10258 = insertelement <4 x float> zeroinitializer, float %10257, i32 0
  %10259 = insertelement <4 x float> %10258, float 0.000000e+00, i32 1
  %10260 = insertelement <4 x float> %10259, float 0.000000e+00, i32 2
  %10261 = insertelement <4 x float> %10260, float 0.000000e+00, i32 3
  %10262 = fmul <4 x float> %10256, %10261
  %10263 = fadd <4 x float> %10262, zeroinitializer
  %10264 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10265 = getelementptr inbounds i8, i8* %10264, i64 20
  %10266 = bitcast i8* %10265 to float*
  %10267 = load float, float* %10266, align 4
  %10268 = insertelement <4 x float> zeroinitializer, float %10267, i32 0
  %10269 = insertelement <4 x float> %10268, float 0.000000e+00, i32 1
  %10270 = insertelement <4 x float> %10269, float 0.000000e+00, i32 2
  %10271 = insertelement <4 x float> %10270, float 0.000000e+00, i32 3
  %10272 = getelementptr inbounds float, float* %1, i64 4
  %10273 = load float, float* %10272, align 4
  %10274 = insertelement <4 x float> zeroinitializer, float %10273, i32 0
  %10275 = insertelement <4 x float> %10274, float 0.000000e+00, i32 1
  %10276 = insertelement <4 x float> %10275, float 0.000000e+00, i32 2
  %10277 = insertelement <4 x float> %10276, float 0.000000e+00, i32 3
  %10278 = call <4 x float> @llvm.fma.f32.324(<4 x float> %10271, <4 x float> %10277, <4 x float> %10263)
  %10279 = extractelement <4 x float> %10278, i32 0
  %10280 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10281 = getelementptr inbounds i8, i8* %10280, i64 16
  %10282 = bitcast i8* %10281 to float*
  store float %10279, float* %10282, align 4
  %10283 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10284 = getelementptr inbounds i8, i8* %10283, i64 16
  %10285 = bitcast i8* %10284 to float*
  %10286 = load float, float* %10285, align 4
  %10287 = insertelement <4 x float> zeroinitializer, float %10286, i32 0
  %10288 = insertelement <4 x float> %10287, float 1.000000e+00, i32 1
  %10289 = insertelement <4 x float> %10288, float 1.000000e+00, i32 2
  %10290 = insertelement <4 x float> %10289, float 1.000000e+00, i32 3
  %10291 = load float, float* %1, align 4
  %10292 = insertelement <4 x float> zeroinitializer, float %10291, i32 0
  %10293 = insertelement <4 x float> %10292, float 0.000000e+00, i32 1
  %10294 = insertelement <4 x float> %10293, float 0.000000e+00, i32 2
  %10295 = insertelement <4 x float> %10294, float 0.000000e+00, i32 3
  %10296 = fmul <4 x float> %10290, %10295
  %10297 = fadd <4 x float> %10296, zeroinitializer
  %10298 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10299 = getelementptr inbounds i8, i8* %10298, i64 20
  %10300 = bitcast i8* %10299 to float*
  %10301 = load float, float* %10300, align 4
  %10302 = insertelement <4 x float> zeroinitializer, float %10301, i32 0
  %10303 = insertelement <4 x float> %10302, float 1.000000e+00, i32 1
  %10304 = insertelement <4 x float> %10303, float 1.000000e+00, i32 2
  %10305 = insertelement <4 x float> %10304, float 1.000000e+00, i32 3
  %10306 = getelementptr inbounds float, float* %1, i64 4
  %10307 = load float, float* %10306, align 4
  %10308 = insertelement <4 x float> zeroinitializer, float %10307, i32 0
  %10309 = insertelement <4 x float> %10308, float 0.000000e+00, i32 1
  %10310 = insertelement <4 x float> %10309, float 0.000000e+00, i32 2
  %10311 = insertelement <4 x float> %10310, float 0.000000e+00, i32 3
  %10312 = call <4 x float> @llvm.fma.f32.325(<4 x float> %10305, <4 x float> %10311, <4 x float> %10297)
  %10313 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10314 = getelementptr inbounds i8, i8* %10313, i64 24
  %10315 = bitcast i8* %10314 to float*
  %10316 = load float, float* %10315, align 4
  %10317 = insertelement <4 x float> zeroinitializer, float %10316, i32 0
  %10318 = insertelement <4 x float> %10317, float 0.000000e+00, i32 1
  %10319 = insertelement <4 x float> %10318, float 0.000000e+00, i32 2
  %10320 = insertelement <4 x float> %10319, float 0.000000e+00, i32 3
  %10321 = getelementptr inbounds float, float* %1, i64 8
  %10322 = load float, float* %10321, align 4
  %10323 = insertelement <4 x float> zeroinitializer, float %10322, i32 0
  %10324 = insertelement <4 x float> %10323, float 0.000000e+00, i32 1
  %10325 = insertelement <4 x float> %10324, float 0.000000e+00, i32 2
  %10326 = insertelement <4 x float> %10325, float 0.000000e+00, i32 3
  %10327 = call <4 x float> @llvm.fma.f32.326(<4 x float> %10320, <4 x float> %10326, <4 x float> %10312)
  %10328 = extractelement <4 x float> %10327, i32 0
  %10329 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10330 = getelementptr inbounds i8, i8* %10329, i64 16
  %10331 = bitcast i8* %10330 to float*
  store float %10328, float* %10331, align 4
  %10332 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10333 = getelementptr inbounds i8, i8* %10332, i64 16
  %10334 = bitcast i8* %10333 to float*
  %10335 = load float, float* %10334, align 4
  %10336 = insertelement <4 x float> zeroinitializer, float %10335, i32 0
  %10337 = insertelement <4 x float> %10336, float 1.000000e+00, i32 1
  %10338 = insertelement <4 x float> %10337, float 1.000000e+00, i32 2
  %10339 = insertelement <4 x float> %10338, float 1.000000e+00, i32 3
  %10340 = load float, float* %1, align 4
  %10341 = insertelement <4 x float> zeroinitializer, float %10340, i32 0
  %10342 = insertelement <4 x float> %10341, float 0.000000e+00, i32 1
  %10343 = insertelement <4 x float> %10342, float 0.000000e+00, i32 2
  %10344 = insertelement <4 x float> %10343, float 0.000000e+00, i32 3
  %10345 = fmul <4 x float> %10339, %10344
  %10346 = fadd <4 x float> %10345, zeroinitializer
  %10347 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10348 = getelementptr inbounds i8, i8* %10347, i64 20
  %10349 = bitcast i8* %10348 to float*
  %10350 = load float, float* %10349, align 4
  %10351 = insertelement <4 x float> zeroinitializer, float %10350, i32 0
  %10352 = insertelement <4 x float> %10351, float 1.000000e+00, i32 1
  %10353 = insertelement <4 x float> %10352, float 1.000000e+00, i32 2
  %10354 = insertelement <4 x float> %10353, float 1.000000e+00, i32 3
  %10355 = getelementptr inbounds float, float* %1, i64 4
  %10356 = load float, float* %10355, align 4
  %10357 = insertelement <4 x float> zeroinitializer, float %10356, i32 0
  %10358 = insertelement <4 x float> %10357, float 0.000000e+00, i32 1
  %10359 = insertelement <4 x float> %10358, float 0.000000e+00, i32 2
  %10360 = insertelement <4 x float> %10359, float 0.000000e+00, i32 3
  %10361 = call <4 x float> @llvm.fma.f32.327(<4 x float> %10354, <4 x float> %10360, <4 x float> %10346)
  %10362 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10363 = getelementptr inbounds i8, i8* %10362, i64 24
  %10364 = bitcast i8* %10363 to float*
  %10365 = load float, float* %10364, align 4
  %10366 = insertelement <4 x float> zeroinitializer, float %10365, i32 0
  %10367 = insertelement <4 x float> %10366, float 1.000000e+00, i32 1
  %10368 = insertelement <4 x float> %10367, float 1.000000e+00, i32 2
  %10369 = insertelement <4 x float> %10368, float 1.000000e+00, i32 3
  %10370 = getelementptr inbounds float, float* %1, i64 8
  %10371 = load float, float* %10370, align 4
  %10372 = insertelement <4 x float> zeroinitializer, float %10371, i32 0
  %10373 = insertelement <4 x float> %10372, float 0.000000e+00, i32 1
  %10374 = insertelement <4 x float> %10373, float 0.000000e+00, i32 2
  %10375 = insertelement <4 x float> %10374, float 0.000000e+00, i32 3
  %10376 = call <4 x float> @llvm.fma.f32.328(<4 x float> %10369, <4 x float> %10375, <4 x float> %10361)
  %10377 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10378 = getelementptr inbounds i8, i8* %10377, i64 28
  %10379 = bitcast i8* %10378 to float*
  %10380 = load float, float* %10379, align 4
  %10381 = insertelement <4 x float> zeroinitializer, float %10380, i32 0
  %10382 = insertelement <4 x float> %10381, float 0.000000e+00, i32 1
  %10383 = insertelement <4 x float> %10382, float 0.000000e+00, i32 2
  %10384 = insertelement <4 x float> %10383, float 0.000000e+00, i32 3
  %10385 = getelementptr inbounds float, float* %1, i64 12
  %10386 = load float, float* %10385, align 4
  %10387 = insertelement <4 x float> zeroinitializer, float %10386, i32 0
  %10388 = insertelement <4 x float> %10387, float 0.000000e+00, i32 1
  %10389 = insertelement <4 x float> %10388, float 0.000000e+00, i32 2
  %10390 = insertelement <4 x float> %10389, float 0.000000e+00, i32 3
  %10391 = call <4 x float> @llvm.fma.f32.329(<4 x float> %10384, <4 x float> %10390, <4 x float> %10376)
  %10392 = extractelement <4 x float> %10391, i32 0
  %10393 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10394 = getelementptr inbounds i8, i8* %10393, i64 16
  %10395 = bitcast i8* %10394 to float*
  store float %10392, float* %10395, align 4
  %10396 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10397 = getelementptr inbounds i8, i8* %10396, i64 16
  %10398 = bitcast i8* %10397 to float*
  %10399 = load float, float* %10398, align 4
  %10400 = insertelement <4 x float> zeroinitializer, float %10399, i32 0
  %10401 = insertelement <4 x float> %10400, float 0.000000e+00, i32 1
  %10402 = insertelement <4 x float> %10401, float 0.000000e+00, i32 2
  %10403 = insertelement <4 x float> %10402, float 0.000000e+00, i32 3
  %10404 = getelementptr inbounds float, float* %1, i64 1
  %10405 = load float, float* %10404, align 4
  %10406 = insertelement <4 x float> zeroinitializer, float %10405, i32 0
  %10407 = insertelement <4 x float> %10406, float 0.000000e+00, i32 1
  %10408 = insertelement <4 x float> %10407, float 0.000000e+00, i32 2
  %10409 = insertelement <4 x float> %10408, float 0.000000e+00, i32 3
  %10410 = call <4 x float> @llvm.fma.f32.330(<4 x float> %10403, <4 x float> %10409, <4 x float> zeroinitializer)
  %10411 = extractelement <4 x float> %10410, i32 0
  %10412 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10413 = getelementptr inbounds i8, i8* %10412, i64 20
  %10414 = bitcast i8* %10413 to float*
  store float %10411, float* %10414, align 4
  %10415 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10416 = getelementptr inbounds i8, i8* %10415, i64 16
  %10417 = bitcast i8* %10416 to float*
  %10418 = load float, float* %10417, align 4
  %10419 = insertelement <4 x float> zeroinitializer, float %10418, i32 0
  %10420 = insertelement <4 x float> %10419, float 1.000000e+00, i32 1
  %10421 = insertelement <4 x float> %10420, float 1.000000e+00, i32 2
  %10422 = insertelement <4 x float> %10421, float 1.000000e+00, i32 3
  %10423 = getelementptr inbounds float, float* %1, i64 1
  %10424 = load float, float* %10423, align 4
  %10425 = insertelement <4 x float> zeroinitializer, float %10424, i32 0
  %10426 = insertelement <4 x float> %10425, float 0.000000e+00, i32 1
  %10427 = insertelement <4 x float> %10426, float 0.000000e+00, i32 2
  %10428 = insertelement <4 x float> %10427, float 0.000000e+00, i32 3
  %10429 = fmul <4 x float> %10422, %10428
  %10430 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10431 = getelementptr inbounds i8, i8* %10430, i64 20
  %10432 = bitcast i8* %10431 to float*
  %10433 = load float, float* %10432, align 4
  %10434 = insertelement <4 x float> zeroinitializer, float %10433, i32 0
  %10435 = insertelement <4 x float> %10434, float 0.000000e+00, i32 1
  %10436 = insertelement <4 x float> %10435, float 0.000000e+00, i32 2
  %10437 = insertelement <4 x float> %10436, float 0.000000e+00, i32 3
  %10438 = getelementptr inbounds float, float* %1, i64 5
  %10439 = load float, float* %10438, align 4
  %10440 = insertelement <4 x float> zeroinitializer, float %10439, i32 0
  %10441 = insertelement <4 x float> %10440, float 0.000000e+00, i32 1
  %10442 = insertelement <4 x float> %10441, float 0.000000e+00, i32 2
  %10443 = insertelement <4 x float> %10442, float 0.000000e+00, i32 3
  %10444 = call <4 x float> @llvm.fma.f32.331(<4 x float> %10437, <4 x float> %10443, <4 x float> %10429)
  %10445 = extractelement <4 x float> %10444, i32 0
  %10446 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10447 = getelementptr inbounds i8, i8* %10446, i64 20
  %10448 = bitcast i8* %10447 to float*
  store float %10445, float* %10448, align 4
  %10449 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10450 = getelementptr inbounds i8, i8* %10449, i64 16
  %10451 = bitcast i8* %10450 to float*
  %10452 = load float, float* %10451, align 4
  %10453 = insertelement <4 x float> zeroinitializer, float %10452, i32 0
  %10454 = insertelement <4 x float> %10453, float 1.000000e+00, i32 1
  %10455 = insertelement <4 x float> %10454, float 1.000000e+00, i32 2
  %10456 = insertelement <4 x float> %10455, float 1.000000e+00, i32 3
  %10457 = getelementptr inbounds float, float* %1, i64 1
  %10458 = load float, float* %10457, align 4
  %10459 = insertelement <4 x float> zeroinitializer, float %10458, i32 0
  %10460 = insertelement <4 x float> %10459, float 0.000000e+00, i32 1
  %10461 = insertelement <4 x float> %10460, float 0.000000e+00, i32 2
  %10462 = insertelement <4 x float> %10461, float 0.000000e+00, i32 3
  %10463 = fmul <4 x float> %10456, %10462
  %10464 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10465 = getelementptr inbounds i8, i8* %10464, i64 20
  %10466 = bitcast i8* %10465 to float*
  %10467 = load float, float* %10466, align 4
  %10468 = insertelement <4 x float> zeroinitializer, float %10467, i32 0
  %10469 = insertelement <4 x float> %10468, float 1.000000e+00, i32 1
  %10470 = insertelement <4 x float> %10469, float 1.000000e+00, i32 2
  %10471 = insertelement <4 x float> %10470, float 1.000000e+00, i32 3
  %10472 = getelementptr inbounds float, float* %1, i64 5
  %10473 = load float, float* %10472, align 4
  %10474 = insertelement <4 x float> zeroinitializer, float %10473, i32 0
  %10475 = insertelement <4 x float> %10474, float 0.000000e+00, i32 1
  %10476 = insertelement <4 x float> %10475, float 0.000000e+00, i32 2
  %10477 = insertelement <4 x float> %10476, float 0.000000e+00, i32 3
  %10478 = call <4 x float> @llvm.fma.f32.332(<4 x float> %10471, <4 x float> %10477, <4 x float> %10463)
  %10479 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10480 = getelementptr inbounds i8, i8* %10479, i64 24
  %10481 = bitcast i8* %10480 to float*
  %10482 = load float, float* %10481, align 4
  %10483 = insertelement <4 x float> zeroinitializer, float %10482, i32 0
  %10484 = insertelement <4 x float> %10483, float 0.000000e+00, i32 1
  %10485 = insertelement <4 x float> %10484, float 0.000000e+00, i32 2
  %10486 = insertelement <4 x float> %10485, float 0.000000e+00, i32 3
  %10487 = getelementptr inbounds float, float* %1, i64 9
  %10488 = load float, float* %10487, align 4
  %10489 = insertelement <4 x float> zeroinitializer, float %10488, i32 0
  %10490 = insertelement <4 x float> %10489, float 0.000000e+00, i32 1
  %10491 = insertelement <4 x float> %10490, float 0.000000e+00, i32 2
  %10492 = insertelement <4 x float> %10491, float 0.000000e+00, i32 3
  %10493 = call <4 x float> @llvm.fma.f32.333(<4 x float> %10486, <4 x float> %10492, <4 x float> %10478)
  %10494 = extractelement <4 x float> %10493, i32 0
  %10495 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10496 = getelementptr inbounds i8, i8* %10495, i64 20
  %10497 = bitcast i8* %10496 to float*
  store float %10494, float* %10497, align 4
  %10498 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10499 = getelementptr inbounds i8, i8* %10498, i64 16
  %10500 = bitcast i8* %10499 to float*
  %10501 = load float, float* %10500, align 4
  %10502 = insertelement <4 x float> zeroinitializer, float %10501, i32 0
  %10503 = insertelement <4 x float> %10502, float 1.000000e+00, i32 1
  %10504 = insertelement <4 x float> %10503, float 1.000000e+00, i32 2
  %10505 = insertelement <4 x float> %10504, float 1.000000e+00, i32 3
  %10506 = getelementptr inbounds float, float* %1, i64 1
  %10507 = load float, float* %10506, align 4
  %10508 = insertelement <4 x float> zeroinitializer, float %10507, i32 0
  %10509 = insertelement <4 x float> %10508, float 0.000000e+00, i32 1
  %10510 = insertelement <4 x float> %10509, float 0.000000e+00, i32 2
  %10511 = insertelement <4 x float> %10510, float 0.000000e+00, i32 3
  %10512 = fmul <4 x float> %10505, %10511
  %10513 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10514 = getelementptr inbounds i8, i8* %10513, i64 20
  %10515 = bitcast i8* %10514 to float*
  %10516 = load float, float* %10515, align 4
  %10517 = insertelement <4 x float> zeroinitializer, float %10516, i32 0
  %10518 = insertelement <4 x float> %10517, float 1.000000e+00, i32 1
  %10519 = insertelement <4 x float> %10518, float 1.000000e+00, i32 2
  %10520 = insertelement <4 x float> %10519, float 1.000000e+00, i32 3
  %10521 = getelementptr inbounds float, float* %1, i64 5
  %10522 = load float, float* %10521, align 4
  %10523 = insertelement <4 x float> zeroinitializer, float %10522, i32 0
  %10524 = insertelement <4 x float> %10523, float 0.000000e+00, i32 1
  %10525 = insertelement <4 x float> %10524, float 0.000000e+00, i32 2
  %10526 = insertelement <4 x float> %10525, float 0.000000e+00, i32 3
  %10527 = call <4 x float> @llvm.fma.f32.334(<4 x float> %10520, <4 x float> %10526, <4 x float> %10512)
  %10528 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10529 = getelementptr inbounds i8, i8* %10528, i64 24
  %10530 = bitcast i8* %10529 to float*
  %10531 = load float, float* %10530, align 4
  %10532 = insertelement <4 x float> zeroinitializer, float %10531, i32 0
  %10533 = insertelement <4 x float> %10532, float 1.000000e+00, i32 1
  %10534 = insertelement <4 x float> %10533, float 1.000000e+00, i32 2
  %10535 = insertelement <4 x float> %10534, float 1.000000e+00, i32 3
  %10536 = getelementptr inbounds float, float* %1, i64 9
  %10537 = load float, float* %10536, align 4
  %10538 = insertelement <4 x float> zeroinitializer, float %10537, i32 0
  %10539 = insertelement <4 x float> %10538, float 0.000000e+00, i32 1
  %10540 = insertelement <4 x float> %10539, float 0.000000e+00, i32 2
  %10541 = insertelement <4 x float> %10540, float 0.000000e+00, i32 3
  %10542 = call <4 x float> @llvm.fma.f32.335(<4 x float> %10535, <4 x float> %10541, <4 x float> %10527)
  %10543 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10544 = getelementptr inbounds i8, i8* %10543, i64 28
  %10545 = bitcast i8* %10544 to float*
  %10546 = load float, float* %10545, align 4
  %10547 = insertelement <4 x float> zeroinitializer, float %10546, i32 0
  %10548 = insertelement <4 x float> %10547, float 0.000000e+00, i32 1
  %10549 = insertelement <4 x float> %10548, float 0.000000e+00, i32 2
  %10550 = insertelement <4 x float> %10549, float 0.000000e+00, i32 3
  %10551 = getelementptr inbounds float, float* %1, i64 13
  %10552 = load float, float* %10551, align 4
  %10553 = insertelement <4 x float> zeroinitializer, float %10552, i32 0
  %10554 = insertelement <4 x float> %10553, float 0.000000e+00, i32 1
  %10555 = insertelement <4 x float> %10554, float 0.000000e+00, i32 2
  %10556 = insertelement <4 x float> %10555, float 0.000000e+00, i32 3
  %10557 = call <4 x float> @llvm.fma.f32.336(<4 x float> %10550, <4 x float> %10556, <4 x float> %10542)
  %10558 = extractelement <4 x float> %10557, i32 0
  %10559 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10560 = getelementptr inbounds i8, i8* %10559, i64 20
  %10561 = bitcast i8* %10560 to float*
  store float %10558, float* %10561, align 4
  %10562 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10563 = getelementptr inbounds i8, i8* %10562, i64 16
  %10564 = bitcast i8* %10563 to float*
  %10565 = load float, float* %10564, align 4
  %10566 = insertelement <4 x float> zeroinitializer, float %10565, i32 0
  %10567 = insertelement <4 x float> %10566, float 0.000000e+00, i32 1
  %10568 = insertelement <4 x float> %10567, float 0.000000e+00, i32 2
  %10569 = insertelement <4 x float> %10568, float 0.000000e+00, i32 3
  %10570 = getelementptr inbounds float, float* %1, i64 2
  %10571 = load float, float* %10570, align 4
  %10572 = insertelement <4 x float> zeroinitializer, float %10571, i32 0
  %10573 = insertelement <4 x float> %10572, float 0.000000e+00, i32 1
  %10574 = insertelement <4 x float> %10573, float 0.000000e+00, i32 2
  %10575 = insertelement <4 x float> %10574, float 0.000000e+00, i32 3
  %10576 = call <4 x float> @llvm.fma.f32.337(<4 x float> %10569, <4 x float> %10575, <4 x float> zeroinitializer)
  %10577 = extractelement <4 x float> %10576, i32 0
  %10578 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10579 = getelementptr inbounds i8, i8* %10578, i64 24
  %10580 = bitcast i8* %10579 to float*
  store float %10577, float* %10580, align 4
  %10581 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10582 = getelementptr inbounds i8, i8* %10581, i64 16
  %10583 = bitcast i8* %10582 to float*
  %10584 = load float, float* %10583, align 4
  %10585 = insertelement <4 x float> zeroinitializer, float %10584, i32 0
  %10586 = insertelement <4 x float> %10585, float 1.000000e+00, i32 1
  %10587 = insertelement <4 x float> %10586, float 1.000000e+00, i32 2
  %10588 = insertelement <4 x float> %10587, float 1.000000e+00, i32 3
  %10589 = getelementptr inbounds float, float* %1, i64 2
  %10590 = load float, float* %10589, align 4
  %10591 = insertelement <4 x float> zeroinitializer, float %10590, i32 0
  %10592 = insertelement <4 x float> %10591, float 0.000000e+00, i32 1
  %10593 = insertelement <4 x float> %10592, float 0.000000e+00, i32 2
  %10594 = insertelement <4 x float> %10593, float 0.000000e+00, i32 3
  %10595 = fmul <4 x float> %10588, %10594
  %10596 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10597 = getelementptr inbounds i8, i8* %10596, i64 20
  %10598 = bitcast i8* %10597 to float*
  %10599 = load float, float* %10598, align 4
  %10600 = insertelement <4 x float> zeroinitializer, float %10599, i32 0
  %10601 = insertelement <4 x float> %10600, float 0.000000e+00, i32 1
  %10602 = insertelement <4 x float> %10601, float 0.000000e+00, i32 2
  %10603 = insertelement <4 x float> %10602, float 0.000000e+00, i32 3
  %10604 = getelementptr inbounds float, float* %1, i64 6
  %10605 = load float, float* %10604, align 4
  %10606 = insertelement <4 x float> zeroinitializer, float %10605, i32 0
  %10607 = insertelement <4 x float> %10606, float 0.000000e+00, i32 1
  %10608 = insertelement <4 x float> %10607, float 0.000000e+00, i32 2
  %10609 = insertelement <4 x float> %10608, float 0.000000e+00, i32 3
  %10610 = call <4 x float> @llvm.fma.f32.338(<4 x float> %10603, <4 x float> %10609, <4 x float> %10595)
  %10611 = extractelement <4 x float> %10610, i32 0
  %10612 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10613 = getelementptr inbounds i8, i8* %10612, i64 24
  %10614 = bitcast i8* %10613 to float*
  store float %10611, float* %10614, align 4
  %10615 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10616 = getelementptr inbounds i8, i8* %10615, i64 16
  %10617 = bitcast i8* %10616 to float*
  %10618 = load float, float* %10617, align 4
  %10619 = insertelement <4 x float> zeroinitializer, float %10618, i32 0
  %10620 = insertelement <4 x float> %10619, float 1.000000e+00, i32 1
  %10621 = insertelement <4 x float> %10620, float 1.000000e+00, i32 2
  %10622 = insertelement <4 x float> %10621, float 1.000000e+00, i32 3
  %10623 = getelementptr inbounds float, float* %1, i64 2
  %10624 = load float, float* %10623, align 4
  %10625 = insertelement <4 x float> zeroinitializer, float %10624, i32 0
  %10626 = insertelement <4 x float> %10625, float 0.000000e+00, i32 1
  %10627 = insertelement <4 x float> %10626, float 0.000000e+00, i32 2
  %10628 = insertelement <4 x float> %10627, float 0.000000e+00, i32 3
  %10629 = fmul <4 x float> %10622, %10628
  %10630 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10631 = getelementptr inbounds i8, i8* %10630, i64 20
  %10632 = bitcast i8* %10631 to float*
  %10633 = load float, float* %10632, align 4
  %10634 = insertelement <4 x float> zeroinitializer, float %10633, i32 0
  %10635 = insertelement <4 x float> %10634, float 1.000000e+00, i32 1
  %10636 = insertelement <4 x float> %10635, float 1.000000e+00, i32 2
  %10637 = insertelement <4 x float> %10636, float 1.000000e+00, i32 3
  %10638 = getelementptr inbounds float, float* %1, i64 6
  %10639 = load float, float* %10638, align 4
  %10640 = insertelement <4 x float> zeroinitializer, float %10639, i32 0
  %10641 = insertelement <4 x float> %10640, float 0.000000e+00, i32 1
  %10642 = insertelement <4 x float> %10641, float 0.000000e+00, i32 2
  %10643 = insertelement <4 x float> %10642, float 0.000000e+00, i32 3
  %10644 = call <4 x float> @llvm.fma.f32.339(<4 x float> %10637, <4 x float> %10643, <4 x float> %10629)
  %10645 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10646 = getelementptr inbounds i8, i8* %10645, i64 24
  %10647 = bitcast i8* %10646 to float*
  %10648 = load float, float* %10647, align 4
  %10649 = insertelement <4 x float> zeroinitializer, float %10648, i32 0
  %10650 = insertelement <4 x float> %10649, float 0.000000e+00, i32 1
  %10651 = insertelement <4 x float> %10650, float 0.000000e+00, i32 2
  %10652 = insertelement <4 x float> %10651, float 0.000000e+00, i32 3
  %10653 = getelementptr inbounds float, float* %1, i64 10
  %10654 = load float, float* %10653, align 4
  %10655 = insertelement <4 x float> zeroinitializer, float %10654, i32 0
  %10656 = insertelement <4 x float> %10655, float 0.000000e+00, i32 1
  %10657 = insertelement <4 x float> %10656, float 0.000000e+00, i32 2
  %10658 = insertelement <4 x float> %10657, float 0.000000e+00, i32 3
  %10659 = call <4 x float> @llvm.fma.f32.340(<4 x float> %10652, <4 x float> %10658, <4 x float> %10644)
  %10660 = extractelement <4 x float> %10659, i32 0
  %10661 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10662 = getelementptr inbounds i8, i8* %10661, i64 24
  %10663 = bitcast i8* %10662 to float*
  store float %10660, float* %10663, align 4
  %10664 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10665 = getelementptr inbounds i8, i8* %10664, i64 16
  %10666 = bitcast i8* %10665 to float*
  %10667 = load float, float* %10666, align 4
  %10668 = insertelement <4 x float> zeroinitializer, float %10667, i32 0
  %10669 = insertelement <4 x float> %10668, float 1.000000e+00, i32 1
  %10670 = insertelement <4 x float> %10669, float 1.000000e+00, i32 2
  %10671 = insertelement <4 x float> %10670, float 1.000000e+00, i32 3
  %10672 = getelementptr inbounds float, float* %1, i64 2
  %10673 = load float, float* %10672, align 4
  %10674 = insertelement <4 x float> zeroinitializer, float %10673, i32 0
  %10675 = insertelement <4 x float> %10674, float 0.000000e+00, i32 1
  %10676 = insertelement <4 x float> %10675, float 0.000000e+00, i32 2
  %10677 = insertelement <4 x float> %10676, float 0.000000e+00, i32 3
  %10678 = fmul <4 x float> %10671, %10677
  %10679 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10680 = getelementptr inbounds i8, i8* %10679, i64 20
  %10681 = bitcast i8* %10680 to float*
  %10682 = load float, float* %10681, align 4
  %10683 = insertelement <4 x float> zeroinitializer, float %10682, i32 0
  %10684 = insertelement <4 x float> %10683, float 1.000000e+00, i32 1
  %10685 = insertelement <4 x float> %10684, float 1.000000e+00, i32 2
  %10686 = insertelement <4 x float> %10685, float 1.000000e+00, i32 3
  %10687 = getelementptr inbounds float, float* %1, i64 6
  %10688 = load float, float* %10687, align 4
  %10689 = insertelement <4 x float> zeroinitializer, float %10688, i32 0
  %10690 = insertelement <4 x float> %10689, float 0.000000e+00, i32 1
  %10691 = insertelement <4 x float> %10690, float 0.000000e+00, i32 2
  %10692 = insertelement <4 x float> %10691, float 0.000000e+00, i32 3
  %10693 = call <4 x float> @llvm.fma.f32.341(<4 x float> %10686, <4 x float> %10692, <4 x float> %10678)
  %10694 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10695 = getelementptr inbounds i8, i8* %10694, i64 24
  %10696 = bitcast i8* %10695 to float*
  %10697 = load float, float* %10696, align 4
  %10698 = insertelement <4 x float> zeroinitializer, float %10697, i32 0
  %10699 = insertelement <4 x float> %10698, float 1.000000e+00, i32 1
  %10700 = insertelement <4 x float> %10699, float 1.000000e+00, i32 2
  %10701 = insertelement <4 x float> %10700, float 1.000000e+00, i32 3
  %10702 = getelementptr inbounds float, float* %1, i64 10
  %10703 = load float, float* %10702, align 4
  %10704 = insertelement <4 x float> zeroinitializer, float %10703, i32 0
  %10705 = insertelement <4 x float> %10704, float 0.000000e+00, i32 1
  %10706 = insertelement <4 x float> %10705, float 0.000000e+00, i32 2
  %10707 = insertelement <4 x float> %10706, float 0.000000e+00, i32 3
  %10708 = call <4 x float> @llvm.fma.f32.342(<4 x float> %10701, <4 x float> %10707, <4 x float> %10693)
  %10709 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10710 = getelementptr inbounds i8, i8* %10709, i64 28
  %10711 = bitcast i8* %10710 to float*
  %10712 = load float, float* %10711, align 4
  %10713 = insertelement <4 x float> zeroinitializer, float %10712, i32 0
  %10714 = insertelement <4 x float> %10713, float 0.000000e+00, i32 1
  %10715 = insertelement <4 x float> %10714, float 0.000000e+00, i32 2
  %10716 = insertelement <4 x float> %10715, float 0.000000e+00, i32 3
  %10717 = getelementptr inbounds float, float* %1, i64 14
  %10718 = load float, float* %10717, align 4
  %10719 = insertelement <4 x float> zeroinitializer, float %10718, i32 0
  %10720 = insertelement <4 x float> %10719, float 0.000000e+00, i32 1
  %10721 = insertelement <4 x float> %10720, float 0.000000e+00, i32 2
  %10722 = insertelement <4 x float> %10721, float 0.000000e+00, i32 3
  %10723 = call <4 x float> @llvm.fma.f32.343(<4 x float> %10716, <4 x float> %10722, <4 x float> %10708)
  %10724 = extractelement <4 x float> %10723, i32 0
  %10725 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10726 = getelementptr inbounds i8, i8* %10725, i64 24
  %10727 = bitcast i8* %10726 to float*
  store float %10724, float* %10727, align 4
  %10728 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10729 = getelementptr inbounds i8, i8* %10728, i64 16
  %10730 = bitcast i8* %10729 to float*
  %10731 = load float, float* %10730, align 4
  %10732 = insertelement <4 x float> zeroinitializer, float %10731, i32 0
  %10733 = insertelement <4 x float> %10732, float 0.000000e+00, i32 1
  %10734 = insertelement <4 x float> %10733, float 0.000000e+00, i32 2
  %10735 = insertelement <4 x float> %10734, float 0.000000e+00, i32 3
  %10736 = getelementptr inbounds float, float* %1, i64 3
  %10737 = load float, float* %10736, align 4
  %10738 = insertelement <4 x float> zeroinitializer, float %10737, i32 0
  %10739 = insertelement <4 x float> %10738, float 0.000000e+00, i32 1
  %10740 = insertelement <4 x float> %10739, float 0.000000e+00, i32 2
  %10741 = insertelement <4 x float> %10740, float 0.000000e+00, i32 3
  %10742 = call <4 x float> @llvm.fma.f32.344(<4 x float> %10735, <4 x float> %10741, <4 x float> zeroinitializer)
  %10743 = extractelement <4 x float> %10742, i32 0
  %10744 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10745 = getelementptr inbounds i8, i8* %10744, i64 28
  %10746 = bitcast i8* %10745 to float*
  store float %10743, float* %10746, align 4
  %10747 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10748 = getelementptr inbounds i8, i8* %10747, i64 16
  %10749 = bitcast i8* %10748 to float*
  %10750 = load float, float* %10749, align 4
  %10751 = insertelement <4 x float> zeroinitializer, float %10750, i32 0
  %10752 = insertelement <4 x float> %10751, float 1.000000e+00, i32 1
  %10753 = insertelement <4 x float> %10752, float 1.000000e+00, i32 2
  %10754 = insertelement <4 x float> %10753, float 1.000000e+00, i32 3
  %10755 = getelementptr inbounds float, float* %1, i64 3
  %10756 = load float, float* %10755, align 4
  %10757 = insertelement <4 x float> zeroinitializer, float %10756, i32 0
  %10758 = insertelement <4 x float> %10757, float 0.000000e+00, i32 1
  %10759 = insertelement <4 x float> %10758, float 0.000000e+00, i32 2
  %10760 = insertelement <4 x float> %10759, float 0.000000e+00, i32 3
  %10761 = fmul <4 x float> %10754, %10760
  %10762 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10763 = getelementptr inbounds i8, i8* %10762, i64 20
  %10764 = bitcast i8* %10763 to float*
  %10765 = load float, float* %10764, align 4
  %10766 = insertelement <4 x float> zeroinitializer, float %10765, i32 0
  %10767 = insertelement <4 x float> %10766, float 0.000000e+00, i32 1
  %10768 = insertelement <4 x float> %10767, float 0.000000e+00, i32 2
  %10769 = insertelement <4 x float> %10768, float 0.000000e+00, i32 3
  %10770 = getelementptr inbounds float, float* %1, i64 7
  %10771 = load float, float* %10770, align 4
  %10772 = insertelement <4 x float> zeroinitializer, float %10771, i32 0
  %10773 = insertelement <4 x float> %10772, float 0.000000e+00, i32 1
  %10774 = insertelement <4 x float> %10773, float 0.000000e+00, i32 2
  %10775 = insertelement <4 x float> %10774, float 0.000000e+00, i32 3
  %10776 = call <4 x float> @llvm.fma.f32.345(<4 x float> %10769, <4 x float> %10775, <4 x float> %10761)
  %10777 = extractelement <4 x float> %10776, i32 0
  %10778 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10779 = getelementptr inbounds i8, i8* %10778, i64 28
  %10780 = bitcast i8* %10779 to float*
  store float %10777, float* %10780, align 4
  %10781 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10782 = getelementptr inbounds i8, i8* %10781, i64 16
  %10783 = bitcast i8* %10782 to float*
  %10784 = load float, float* %10783, align 4
  %10785 = insertelement <4 x float> zeroinitializer, float %10784, i32 0
  %10786 = insertelement <4 x float> %10785, float 1.000000e+00, i32 1
  %10787 = insertelement <4 x float> %10786, float 1.000000e+00, i32 2
  %10788 = insertelement <4 x float> %10787, float 1.000000e+00, i32 3
  %10789 = getelementptr inbounds float, float* %1, i64 3
  %10790 = load float, float* %10789, align 4
  %10791 = insertelement <4 x float> zeroinitializer, float %10790, i32 0
  %10792 = insertelement <4 x float> %10791, float 0.000000e+00, i32 1
  %10793 = insertelement <4 x float> %10792, float 0.000000e+00, i32 2
  %10794 = insertelement <4 x float> %10793, float 0.000000e+00, i32 3
  %10795 = fmul <4 x float> %10788, %10794
  %10796 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10797 = getelementptr inbounds i8, i8* %10796, i64 20
  %10798 = bitcast i8* %10797 to float*
  %10799 = load float, float* %10798, align 4
  %10800 = insertelement <4 x float> zeroinitializer, float %10799, i32 0
  %10801 = insertelement <4 x float> %10800, float 1.000000e+00, i32 1
  %10802 = insertelement <4 x float> %10801, float 1.000000e+00, i32 2
  %10803 = insertelement <4 x float> %10802, float 1.000000e+00, i32 3
  %10804 = getelementptr inbounds float, float* %1, i64 7
  %10805 = load float, float* %10804, align 4
  %10806 = insertelement <4 x float> zeroinitializer, float %10805, i32 0
  %10807 = insertelement <4 x float> %10806, float 0.000000e+00, i32 1
  %10808 = insertelement <4 x float> %10807, float 0.000000e+00, i32 2
  %10809 = insertelement <4 x float> %10808, float 0.000000e+00, i32 3
  %10810 = call <4 x float> @llvm.fma.f32.346(<4 x float> %10803, <4 x float> %10809, <4 x float> %10795)
  %10811 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10812 = getelementptr inbounds i8, i8* %10811, i64 24
  %10813 = bitcast i8* %10812 to float*
  %10814 = load float, float* %10813, align 4
  %10815 = insertelement <4 x float> zeroinitializer, float %10814, i32 0
  %10816 = insertelement <4 x float> %10815, float 0.000000e+00, i32 1
  %10817 = insertelement <4 x float> %10816, float 0.000000e+00, i32 2
  %10818 = insertelement <4 x float> %10817, float 0.000000e+00, i32 3
  %10819 = getelementptr inbounds float, float* %1, i64 11
  %10820 = load float, float* %10819, align 4
  %10821 = insertelement <4 x float> zeroinitializer, float %10820, i32 0
  %10822 = insertelement <4 x float> %10821, float 0.000000e+00, i32 1
  %10823 = insertelement <4 x float> %10822, float 0.000000e+00, i32 2
  %10824 = insertelement <4 x float> %10823, float 0.000000e+00, i32 3
  %10825 = call <4 x float> @llvm.fma.f32.347(<4 x float> %10818, <4 x float> %10824, <4 x float> %10810)
  %10826 = extractelement <4 x float> %10825, i32 0
  %10827 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10828 = getelementptr inbounds i8, i8* %10827, i64 28
  %10829 = bitcast i8* %10828 to float*
  store float %10826, float* %10829, align 4
  %10830 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10831 = getelementptr inbounds i8, i8* %10830, i64 16
  %10832 = bitcast i8* %10831 to float*
  %10833 = load float, float* %10832, align 4
  %10834 = insertelement <4 x float> zeroinitializer, float %10833, i32 0
  %10835 = insertelement <4 x float> %10834, float 1.000000e+00, i32 1
  %10836 = insertelement <4 x float> %10835, float 1.000000e+00, i32 2
  %10837 = insertelement <4 x float> %10836, float 1.000000e+00, i32 3
  %10838 = getelementptr inbounds float, float* %1, i64 3
  %10839 = load float, float* %10838, align 4
  %10840 = insertelement <4 x float> zeroinitializer, float %10839, i32 0
  %10841 = insertelement <4 x float> %10840, float 0.000000e+00, i32 1
  %10842 = insertelement <4 x float> %10841, float 0.000000e+00, i32 2
  %10843 = insertelement <4 x float> %10842, float 0.000000e+00, i32 3
  %10844 = fmul <4 x float> %10837, %10843
  %10845 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10846 = getelementptr inbounds i8, i8* %10845, i64 20
  %10847 = bitcast i8* %10846 to float*
  %10848 = load float, float* %10847, align 4
  %10849 = insertelement <4 x float> zeroinitializer, float %10848, i32 0
  %10850 = insertelement <4 x float> %10849, float 1.000000e+00, i32 1
  %10851 = insertelement <4 x float> %10850, float 1.000000e+00, i32 2
  %10852 = insertelement <4 x float> %10851, float 1.000000e+00, i32 3
  %10853 = getelementptr inbounds float, float* %1, i64 7
  %10854 = load float, float* %10853, align 4
  %10855 = insertelement <4 x float> zeroinitializer, float %10854, i32 0
  %10856 = insertelement <4 x float> %10855, float 0.000000e+00, i32 1
  %10857 = insertelement <4 x float> %10856, float 0.000000e+00, i32 2
  %10858 = insertelement <4 x float> %10857, float 0.000000e+00, i32 3
  %10859 = call <4 x float> @llvm.fma.f32.348(<4 x float> %10852, <4 x float> %10858, <4 x float> %10844)
  %10860 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10861 = getelementptr inbounds i8, i8* %10860, i64 24
  %10862 = bitcast i8* %10861 to float*
  %10863 = load float, float* %10862, align 4
  %10864 = insertelement <4 x float> zeroinitializer, float %10863, i32 0
  %10865 = insertelement <4 x float> %10864, float 1.000000e+00, i32 1
  %10866 = insertelement <4 x float> %10865, float 1.000000e+00, i32 2
  %10867 = insertelement <4 x float> %10866, float 1.000000e+00, i32 3
  %10868 = getelementptr inbounds float, float* %1, i64 11
  %10869 = load float, float* %10868, align 4
  %10870 = insertelement <4 x float> zeroinitializer, float %10869, i32 0
  %10871 = insertelement <4 x float> %10870, float 0.000000e+00, i32 1
  %10872 = insertelement <4 x float> %10871, float 0.000000e+00, i32 2
  %10873 = insertelement <4 x float> %10872, float 0.000000e+00, i32 3
  %10874 = call <4 x float> @llvm.fma.f32.349(<4 x float> %10867, <4 x float> %10873, <4 x float> %10859)
  %10875 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10876 = getelementptr inbounds i8, i8* %10875, i64 28
  %10877 = bitcast i8* %10876 to float*
  %10878 = load float, float* %10877, align 4
  %10879 = insertelement <4 x float> zeroinitializer, float %10878, i32 0
  %10880 = insertelement <4 x float> %10879, float 0.000000e+00, i32 1
  %10881 = insertelement <4 x float> %10880, float 0.000000e+00, i32 2
  %10882 = insertelement <4 x float> %10881, float 0.000000e+00, i32 3
  %10883 = getelementptr inbounds float, float* %1, i64 15
  %10884 = load float, float* %10883, align 4
  %10885 = insertelement <4 x float> zeroinitializer, float %10884, i32 0
  %10886 = insertelement <4 x float> %10885, float 0.000000e+00, i32 1
  %10887 = insertelement <4 x float> %10886, float 0.000000e+00, i32 2
  %10888 = insertelement <4 x float> %10887, float 0.000000e+00, i32 3
  %10889 = call <4 x float> @llvm.fma.f32.350(<4 x float> %10882, <4 x float> %10888, <4 x float> %10874)
  %10890 = extractelement <4 x float> %10889, i32 0
  %10891 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10892 = getelementptr inbounds i8, i8* %10891, i64 28
  %10893 = bitcast i8* %10892 to float*
  store float %10890, float* %10893, align 4
  %10894 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10895 = getelementptr inbounds i8, i8* %10894, i64 32
  %10896 = bitcast i8* %10895 to float*
  %10897 = load float, float* %10896, align 4
  %10898 = insertelement <4 x float> zeroinitializer, float %10897, i32 0
  %10899 = insertelement <4 x float> %10898, float 0.000000e+00, i32 1
  %10900 = insertelement <4 x float> %10899, float 0.000000e+00, i32 2
  %10901 = insertelement <4 x float> %10900, float 0.000000e+00, i32 3
  %10902 = load float, float* %1, align 4
  %10903 = insertelement <4 x float> zeroinitializer, float %10902, i32 0
  %10904 = insertelement <4 x float> %10903, float 0.000000e+00, i32 1
  %10905 = insertelement <4 x float> %10904, float 0.000000e+00, i32 2
  %10906 = insertelement <4 x float> %10905, float 0.000000e+00, i32 3
  %10907 = call <4 x float> @llvm.fma.f32.351(<4 x float> %10901, <4 x float> %10906, <4 x float> zeroinitializer)
  %10908 = extractelement <4 x float> %10907, i32 0
  %10909 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10910 = getelementptr inbounds i8, i8* %10909, i64 32
  %10911 = bitcast i8* %10910 to float*
  store float %10908, float* %10911, align 4
  %10912 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10913 = getelementptr inbounds i8, i8* %10912, i64 32
  %10914 = bitcast i8* %10913 to float*
  %10915 = load float, float* %10914, align 4
  %10916 = insertelement <4 x float> zeroinitializer, float %10915, i32 0
  %10917 = insertelement <4 x float> %10916, float 1.000000e+00, i32 1
  %10918 = insertelement <4 x float> %10917, float 1.000000e+00, i32 2
  %10919 = insertelement <4 x float> %10918, float 1.000000e+00, i32 3
  %10920 = load float, float* %1, align 4
  %10921 = insertelement <4 x float> zeroinitializer, float %10920, i32 0
  %10922 = insertelement <4 x float> %10921, float 0.000000e+00, i32 1
  %10923 = insertelement <4 x float> %10922, float 0.000000e+00, i32 2
  %10924 = insertelement <4 x float> %10923, float 0.000000e+00, i32 3
  %10925 = fmul <4 x float> %10919, %10924
  %10926 = fadd <4 x float> %10925, zeroinitializer
  %10927 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10928 = getelementptr inbounds i8, i8* %10927, i64 36
  %10929 = bitcast i8* %10928 to float*
  %10930 = load float, float* %10929, align 4
  %10931 = insertelement <4 x float> zeroinitializer, float %10930, i32 0
  %10932 = insertelement <4 x float> %10931, float 0.000000e+00, i32 1
  %10933 = insertelement <4 x float> %10932, float 0.000000e+00, i32 2
  %10934 = insertelement <4 x float> %10933, float 0.000000e+00, i32 3
  %10935 = getelementptr inbounds float, float* %1, i64 4
  %10936 = load float, float* %10935, align 4
  %10937 = insertelement <4 x float> zeroinitializer, float %10936, i32 0
  %10938 = insertelement <4 x float> %10937, float 0.000000e+00, i32 1
  %10939 = insertelement <4 x float> %10938, float 0.000000e+00, i32 2
  %10940 = insertelement <4 x float> %10939, float 0.000000e+00, i32 3
  %10941 = call <4 x float> @llvm.fma.f32.352(<4 x float> %10934, <4 x float> %10940, <4 x float> %10926)
  %10942 = extractelement <4 x float> %10941, i32 0
  %10943 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10944 = getelementptr inbounds i8, i8* %10943, i64 32
  %10945 = bitcast i8* %10944 to float*
  store float %10942, float* %10945, align 4
  %10946 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10947 = getelementptr inbounds i8, i8* %10946, i64 32
  %10948 = bitcast i8* %10947 to float*
  %10949 = load float, float* %10948, align 4
  %10950 = insertelement <4 x float> zeroinitializer, float %10949, i32 0
  %10951 = insertelement <4 x float> %10950, float 1.000000e+00, i32 1
  %10952 = insertelement <4 x float> %10951, float 1.000000e+00, i32 2
  %10953 = insertelement <4 x float> %10952, float 1.000000e+00, i32 3
  %10954 = load float, float* %1, align 4
  %10955 = insertelement <4 x float> zeroinitializer, float %10954, i32 0
  %10956 = insertelement <4 x float> %10955, float 0.000000e+00, i32 1
  %10957 = insertelement <4 x float> %10956, float 0.000000e+00, i32 2
  %10958 = insertelement <4 x float> %10957, float 0.000000e+00, i32 3
  %10959 = fmul <4 x float> %10953, %10958
  %10960 = fadd <4 x float> %10959, zeroinitializer
  %10961 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10962 = getelementptr inbounds i8, i8* %10961, i64 36
  %10963 = bitcast i8* %10962 to float*
  %10964 = load float, float* %10963, align 4
  %10965 = insertelement <4 x float> zeroinitializer, float %10964, i32 0
  %10966 = insertelement <4 x float> %10965, float 1.000000e+00, i32 1
  %10967 = insertelement <4 x float> %10966, float 1.000000e+00, i32 2
  %10968 = insertelement <4 x float> %10967, float 1.000000e+00, i32 3
  %10969 = getelementptr inbounds float, float* %1, i64 4
  %10970 = load float, float* %10969, align 4
  %10971 = insertelement <4 x float> zeroinitializer, float %10970, i32 0
  %10972 = insertelement <4 x float> %10971, float 0.000000e+00, i32 1
  %10973 = insertelement <4 x float> %10972, float 0.000000e+00, i32 2
  %10974 = insertelement <4 x float> %10973, float 0.000000e+00, i32 3
  %10975 = call <4 x float> @llvm.fma.f32.353(<4 x float> %10968, <4 x float> %10974, <4 x float> %10960)
  %10976 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10977 = getelementptr inbounds i8, i8* %10976, i64 40
  %10978 = bitcast i8* %10977 to float*
  %10979 = load float, float* %10978, align 4
  %10980 = insertelement <4 x float> zeroinitializer, float %10979, i32 0
  %10981 = insertelement <4 x float> %10980, float 0.000000e+00, i32 1
  %10982 = insertelement <4 x float> %10981, float 0.000000e+00, i32 2
  %10983 = insertelement <4 x float> %10982, float 0.000000e+00, i32 3
  %10984 = getelementptr inbounds float, float* %1, i64 8
  %10985 = load float, float* %10984, align 4
  %10986 = insertelement <4 x float> zeroinitializer, float %10985, i32 0
  %10987 = insertelement <4 x float> %10986, float 0.000000e+00, i32 1
  %10988 = insertelement <4 x float> %10987, float 0.000000e+00, i32 2
  %10989 = insertelement <4 x float> %10988, float 0.000000e+00, i32 3
  %10990 = call <4 x float> @llvm.fma.f32.354(<4 x float> %10983, <4 x float> %10989, <4 x float> %10975)
  %10991 = extractelement <4 x float> %10990, i32 0
  %10992 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10993 = getelementptr inbounds i8, i8* %10992, i64 32
  %10994 = bitcast i8* %10993 to float*
  store float %10991, float* %10994, align 4
  %10995 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %10996 = getelementptr inbounds i8, i8* %10995, i64 32
  %10997 = bitcast i8* %10996 to float*
  %10998 = load float, float* %10997, align 4
  %10999 = insertelement <4 x float> zeroinitializer, float %10998, i32 0
  %11000 = insertelement <4 x float> %10999, float 1.000000e+00, i32 1
  %11001 = insertelement <4 x float> %11000, float 1.000000e+00, i32 2
  %11002 = insertelement <4 x float> %11001, float 1.000000e+00, i32 3
  %11003 = load float, float* %1, align 4
  %11004 = insertelement <4 x float> zeroinitializer, float %11003, i32 0
  %11005 = insertelement <4 x float> %11004, float 0.000000e+00, i32 1
  %11006 = insertelement <4 x float> %11005, float 0.000000e+00, i32 2
  %11007 = insertelement <4 x float> %11006, float 0.000000e+00, i32 3
  %11008 = fmul <4 x float> %11002, %11007
  %11009 = fadd <4 x float> %11008, zeroinitializer
  %11010 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11011 = getelementptr inbounds i8, i8* %11010, i64 36
  %11012 = bitcast i8* %11011 to float*
  %11013 = load float, float* %11012, align 4
  %11014 = insertelement <4 x float> zeroinitializer, float %11013, i32 0
  %11015 = insertelement <4 x float> %11014, float 1.000000e+00, i32 1
  %11016 = insertelement <4 x float> %11015, float 1.000000e+00, i32 2
  %11017 = insertelement <4 x float> %11016, float 1.000000e+00, i32 3
  %11018 = getelementptr inbounds float, float* %1, i64 4
  %11019 = load float, float* %11018, align 4
  %11020 = insertelement <4 x float> zeroinitializer, float %11019, i32 0
  %11021 = insertelement <4 x float> %11020, float 0.000000e+00, i32 1
  %11022 = insertelement <4 x float> %11021, float 0.000000e+00, i32 2
  %11023 = insertelement <4 x float> %11022, float 0.000000e+00, i32 3
  %11024 = call <4 x float> @llvm.fma.f32.355(<4 x float> %11017, <4 x float> %11023, <4 x float> %11009)
  %11025 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11026 = getelementptr inbounds i8, i8* %11025, i64 40
  %11027 = bitcast i8* %11026 to float*
  %11028 = load float, float* %11027, align 4
  %11029 = insertelement <4 x float> zeroinitializer, float %11028, i32 0
  %11030 = insertelement <4 x float> %11029, float 1.000000e+00, i32 1
  %11031 = insertelement <4 x float> %11030, float 1.000000e+00, i32 2
  %11032 = insertelement <4 x float> %11031, float 1.000000e+00, i32 3
  %11033 = getelementptr inbounds float, float* %1, i64 8
  %11034 = load float, float* %11033, align 4
  %11035 = insertelement <4 x float> zeroinitializer, float %11034, i32 0
  %11036 = insertelement <4 x float> %11035, float 0.000000e+00, i32 1
  %11037 = insertelement <4 x float> %11036, float 0.000000e+00, i32 2
  %11038 = insertelement <4 x float> %11037, float 0.000000e+00, i32 3
  %11039 = call <4 x float> @llvm.fma.f32.356(<4 x float> %11032, <4 x float> %11038, <4 x float> %11024)
  %11040 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11041 = getelementptr inbounds i8, i8* %11040, i64 44
  %11042 = bitcast i8* %11041 to float*
  %11043 = load float, float* %11042, align 4
  %11044 = insertelement <4 x float> zeroinitializer, float %11043, i32 0
  %11045 = insertelement <4 x float> %11044, float 0.000000e+00, i32 1
  %11046 = insertelement <4 x float> %11045, float 0.000000e+00, i32 2
  %11047 = insertelement <4 x float> %11046, float 0.000000e+00, i32 3
  %11048 = getelementptr inbounds float, float* %1, i64 12
  %11049 = load float, float* %11048, align 4
  %11050 = insertelement <4 x float> zeroinitializer, float %11049, i32 0
  %11051 = insertelement <4 x float> %11050, float 0.000000e+00, i32 1
  %11052 = insertelement <4 x float> %11051, float 0.000000e+00, i32 2
  %11053 = insertelement <4 x float> %11052, float 0.000000e+00, i32 3
  %11054 = call <4 x float> @llvm.fma.f32.357(<4 x float> %11047, <4 x float> %11053, <4 x float> %11039)
  %11055 = extractelement <4 x float> %11054, i32 0
  %11056 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11057 = getelementptr inbounds i8, i8* %11056, i64 32
  %11058 = bitcast i8* %11057 to float*
  store float %11055, float* %11058, align 4
  %11059 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11060 = getelementptr inbounds i8, i8* %11059, i64 32
  %11061 = bitcast i8* %11060 to float*
  %11062 = load float, float* %11061, align 4
  %11063 = insertelement <4 x float> zeroinitializer, float %11062, i32 0
  %11064 = insertelement <4 x float> %11063, float 0.000000e+00, i32 1
  %11065 = insertelement <4 x float> %11064, float 0.000000e+00, i32 2
  %11066 = insertelement <4 x float> %11065, float 0.000000e+00, i32 3
  %11067 = getelementptr inbounds float, float* %1, i64 1
  %11068 = load float, float* %11067, align 4
  %11069 = insertelement <4 x float> zeroinitializer, float %11068, i32 0
  %11070 = insertelement <4 x float> %11069, float 0.000000e+00, i32 1
  %11071 = insertelement <4 x float> %11070, float 0.000000e+00, i32 2
  %11072 = insertelement <4 x float> %11071, float 0.000000e+00, i32 3
  %11073 = call <4 x float> @llvm.fma.f32.358(<4 x float> %11066, <4 x float> %11072, <4 x float> zeroinitializer)
  %11074 = extractelement <4 x float> %11073, i32 0
  %11075 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11076 = getelementptr inbounds i8, i8* %11075, i64 36
  %11077 = bitcast i8* %11076 to float*
  store float %11074, float* %11077, align 4
  %11078 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11079 = getelementptr inbounds i8, i8* %11078, i64 32
  %11080 = bitcast i8* %11079 to float*
  %11081 = load float, float* %11080, align 4
  %11082 = insertelement <4 x float> zeroinitializer, float %11081, i32 0
  %11083 = insertelement <4 x float> %11082, float 1.000000e+00, i32 1
  %11084 = insertelement <4 x float> %11083, float 1.000000e+00, i32 2
  %11085 = insertelement <4 x float> %11084, float 1.000000e+00, i32 3
  %11086 = getelementptr inbounds float, float* %1, i64 1
  %11087 = load float, float* %11086, align 4
  %11088 = insertelement <4 x float> zeroinitializer, float %11087, i32 0
  %11089 = insertelement <4 x float> %11088, float 0.000000e+00, i32 1
  %11090 = insertelement <4 x float> %11089, float 0.000000e+00, i32 2
  %11091 = insertelement <4 x float> %11090, float 0.000000e+00, i32 3
  %11092 = fmul <4 x float> %11085, %11091
  %11093 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11094 = getelementptr inbounds i8, i8* %11093, i64 36
  %11095 = bitcast i8* %11094 to float*
  %11096 = load float, float* %11095, align 4
  %11097 = insertelement <4 x float> zeroinitializer, float %11096, i32 0
  %11098 = insertelement <4 x float> %11097, float 0.000000e+00, i32 1
  %11099 = insertelement <4 x float> %11098, float 0.000000e+00, i32 2
  %11100 = insertelement <4 x float> %11099, float 0.000000e+00, i32 3
  %11101 = getelementptr inbounds float, float* %1, i64 5
  %11102 = load float, float* %11101, align 4
  %11103 = insertelement <4 x float> zeroinitializer, float %11102, i32 0
  %11104 = insertelement <4 x float> %11103, float 0.000000e+00, i32 1
  %11105 = insertelement <4 x float> %11104, float 0.000000e+00, i32 2
  %11106 = insertelement <4 x float> %11105, float 0.000000e+00, i32 3
  %11107 = call <4 x float> @llvm.fma.f32.359(<4 x float> %11100, <4 x float> %11106, <4 x float> %11092)
  %11108 = extractelement <4 x float> %11107, i32 0
  %11109 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11110 = getelementptr inbounds i8, i8* %11109, i64 36
  %11111 = bitcast i8* %11110 to float*
  store float %11108, float* %11111, align 4
  %11112 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11113 = getelementptr inbounds i8, i8* %11112, i64 32
  %11114 = bitcast i8* %11113 to float*
  %11115 = load float, float* %11114, align 4
  %11116 = insertelement <4 x float> zeroinitializer, float %11115, i32 0
  %11117 = insertelement <4 x float> %11116, float 1.000000e+00, i32 1
  %11118 = insertelement <4 x float> %11117, float 1.000000e+00, i32 2
  %11119 = insertelement <4 x float> %11118, float 1.000000e+00, i32 3
  %11120 = getelementptr inbounds float, float* %1, i64 1
  %11121 = load float, float* %11120, align 4
  %11122 = insertelement <4 x float> zeroinitializer, float %11121, i32 0
  %11123 = insertelement <4 x float> %11122, float 0.000000e+00, i32 1
  %11124 = insertelement <4 x float> %11123, float 0.000000e+00, i32 2
  %11125 = insertelement <4 x float> %11124, float 0.000000e+00, i32 3
  %11126 = fmul <4 x float> %11119, %11125
  %11127 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11128 = getelementptr inbounds i8, i8* %11127, i64 36
  %11129 = bitcast i8* %11128 to float*
  %11130 = load float, float* %11129, align 4
  %11131 = insertelement <4 x float> zeroinitializer, float %11130, i32 0
  %11132 = insertelement <4 x float> %11131, float 1.000000e+00, i32 1
  %11133 = insertelement <4 x float> %11132, float 1.000000e+00, i32 2
  %11134 = insertelement <4 x float> %11133, float 1.000000e+00, i32 3
  %11135 = getelementptr inbounds float, float* %1, i64 5
  %11136 = load float, float* %11135, align 4
  %11137 = insertelement <4 x float> zeroinitializer, float %11136, i32 0
  %11138 = insertelement <4 x float> %11137, float 0.000000e+00, i32 1
  %11139 = insertelement <4 x float> %11138, float 0.000000e+00, i32 2
  %11140 = insertelement <4 x float> %11139, float 0.000000e+00, i32 3
  %11141 = call <4 x float> @llvm.fma.f32.360(<4 x float> %11134, <4 x float> %11140, <4 x float> %11126)
  %11142 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11143 = getelementptr inbounds i8, i8* %11142, i64 40
  %11144 = bitcast i8* %11143 to float*
  %11145 = load float, float* %11144, align 4
  %11146 = insertelement <4 x float> zeroinitializer, float %11145, i32 0
  %11147 = insertelement <4 x float> %11146, float 0.000000e+00, i32 1
  %11148 = insertelement <4 x float> %11147, float 0.000000e+00, i32 2
  %11149 = insertelement <4 x float> %11148, float 0.000000e+00, i32 3
  %11150 = getelementptr inbounds float, float* %1, i64 9
  %11151 = load float, float* %11150, align 4
  %11152 = insertelement <4 x float> zeroinitializer, float %11151, i32 0
  %11153 = insertelement <4 x float> %11152, float 0.000000e+00, i32 1
  %11154 = insertelement <4 x float> %11153, float 0.000000e+00, i32 2
  %11155 = insertelement <4 x float> %11154, float 0.000000e+00, i32 3
  %11156 = call <4 x float> @llvm.fma.f32.361(<4 x float> %11149, <4 x float> %11155, <4 x float> %11141)
  %11157 = extractelement <4 x float> %11156, i32 0
  %11158 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11159 = getelementptr inbounds i8, i8* %11158, i64 36
  %11160 = bitcast i8* %11159 to float*
  store float %11157, float* %11160, align 4
  %11161 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11162 = getelementptr inbounds i8, i8* %11161, i64 32
  %11163 = bitcast i8* %11162 to float*
  %11164 = load float, float* %11163, align 4
  %11165 = insertelement <4 x float> zeroinitializer, float %11164, i32 0
  %11166 = insertelement <4 x float> %11165, float 1.000000e+00, i32 1
  %11167 = insertelement <4 x float> %11166, float 1.000000e+00, i32 2
  %11168 = insertelement <4 x float> %11167, float 1.000000e+00, i32 3
  %11169 = getelementptr inbounds float, float* %1, i64 1
  %11170 = load float, float* %11169, align 4
  %11171 = insertelement <4 x float> zeroinitializer, float %11170, i32 0
  %11172 = insertelement <4 x float> %11171, float 0.000000e+00, i32 1
  %11173 = insertelement <4 x float> %11172, float 0.000000e+00, i32 2
  %11174 = insertelement <4 x float> %11173, float 0.000000e+00, i32 3
  %11175 = fmul <4 x float> %11168, %11174
  %11176 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11177 = getelementptr inbounds i8, i8* %11176, i64 36
  %11178 = bitcast i8* %11177 to float*
  %11179 = load float, float* %11178, align 4
  %11180 = insertelement <4 x float> zeroinitializer, float %11179, i32 0
  %11181 = insertelement <4 x float> %11180, float 1.000000e+00, i32 1
  %11182 = insertelement <4 x float> %11181, float 1.000000e+00, i32 2
  %11183 = insertelement <4 x float> %11182, float 1.000000e+00, i32 3
  %11184 = getelementptr inbounds float, float* %1, i64 5
  %11185 = load float, float* %11184, align 4
  %11186 = insertelement <4 x float> zeroinitializer, float %11185, i32 0
  %11187 = insertelement <4 x float> %11186, float 0.000000e+00, i32 1
  %11188 = insertelement <4 x float> %11187, float 0.000000e+00, i32 2
  %11189 = insertelement <4 x float> %11188, float 0.000000e+00, i32 3
  %11190 = call <4 x float> @llvm.fma.f32.362(<4 x float> %11183, <4 x float> %11189, <4 x float> %11175)
  %11191 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11192 = getelementptr inbounds i8, i8* %11191, i64 40
  %11193 = bitcast i8* %11192 to float*
  %11194 = load float, float* %11193, align 4
  %11195 = insertelement <4 x float> zeroinitializer, float %11194, i32 0
  %11196 = insertelement <4 x float> %11195, float 1.000000e+00, i32 1
  %11197 = insertelement <4 x float> %11196, float 1.000000e+00, i32 2
  %11198 = insertelement <4 x float> %11197, float 1.000000e+00, i32 3
  %11199 = getelementptr inbounds float, float* %1, i64 9
  %11200 = load float, float* %11199, align 4
  %11201 = insertelement <4 x float> zeroinitializer, float %11200, i32 0
  %11202 = insertelement <4 x float> %11201, float 0.000000e+00, i32 1
  %11203 = insertelement <4 x float> %11202, float 0.000000e+00, i32 2
  %11204 = insertelement <4 x float> %11203, float 0.000000e+00, i32 3
  %11205 = call <4 x float> @llvm.fma.f32.363(<4 x float> %11198, <4 x float> %11204, <4 x float> %11190)
  %11206 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11207 = getelementptr inbounds i8, i8* %11206, i64 44
  %11208 = bitcast i8* %11207 to float*
  %11209 = load float, float* %11208, align 4
  %11210 = insertelement <4 x float> zeroinitializer, float %11209, i32 0
  %11211 = insertelement <4 x float> %11210, float 0.000000e+00, i32 1
  %11212 = insertelement <4 x float> %11211, float 0.000000e+00, i32 2
  %11213 = insertelement <4 x float> %11212, float 0.000000e+00, i32 3
  %11214 = getelementptr inbounds float, float* %1, i64 13
  %11215 = load float, float* %11214, align 4
  %11216 = insertelement <4 x float> zeroinitializer, float %11215, i32 0
  %11217 = insertelement <4 x float> %11216, float 0.000000e+00, i32 1
  %11218 = insertelement <4 x float> %11217, float 0.000000e+00, i32 2
  %11219 = insertelement <4 x float> %11218, float 0.000000e+00, i32 3
  %11220 = call <4 x float> @llvm.fma.f32.364(<4 x float> %11213, <4 x float> %11219, <4 x float> %11205)
  %11221 = extractelement <4 x float> %11220, i32 0
  %11222 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11223 = getelementptr inbounds i8, i8* %11222, i64 36
  %11224 = bitcast i8* %11223 to float*
  store float %11221, float* %11224, align 4
  %11225 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11226 = getelementptr inbounds i8, i8* %11225, i64 32
  %11227 = bitcast i8* %11226 to float*
  %11228 = load float, float* %11227, align 4
  %11229 = insertelement <4 x float> zeroinitializer, float %11228, i32 0
  %11230 = insertelement <4 x float> %11229, float 0.000000e+00, i32 1
  %11231 = insertelement <4 x float> %11230, float 0.000000e+00, i32 2
  %11232 = insertelement <4 x float> %11231, float 0.000000e+00, i32 3
  %11233 = getelementptr inbounds float, float* %1, i64 2
  %11234 = load float, float* %11233, align 4
  %11235 = insertelement <4 x float> zeroinitializer, float %11234, i32 0
  %11236 = insertelement <4 x float> %11235, float 0.000000e+00, i32 1
  %11237 = insertelement <4 x float> %11236, float 0.000000e+00, i32 2
  %11238 = insertelement <4 x float> %11237, float 0.000000e+00, i32 3
  %11239 = call <4 x float> @llvm.fma.f32.365(<4 x float> %11232, <4 x float> %11238, <4 x float> zeroinitializer)
  %11240 = extractelement <4 x float> %11239, i32 0
  %11241 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11242 = getelementptr inbounds i8, i8* %11241, i64 40
  %11243 = bitcast i8* %11242 to float*
  store float %11240, float* %11243, align 4
  %11244 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11245 = getelementptr inbounds i8, i8* %11244, i64 32
  %11246 = bitcast i8* %11245 to float*
  %11247 = load float, float* %11246, align 4
  %11248 = insertelement <4 x float> zeroinitializer, float %11247, i32 0
  %11249 = insertelement <4 x float> %11248, float 1.000000e+00, i32 1
  %11250 = insertelement <4 x float> %11249, float 1.000000e+00, i32 2
  %11251 = insertelement <4 x float> %11250, float 1.000000e+00, i32 3
  %11252 = getelementptr inbounds float, float* %1, i64 2
  %11253 = load float, float* %11252, align 4
  %11254 = insertelement <4 x float> zeroinitializer, float %11253, i32 0
  %11255 = insertelement <4 x float> %11254, float 0.000000e+00, i32 1
  %11256 = insertelement <4 x float> %11255, float 0.000000e+00, i32 2
  %11257 = insertelement <4 x float> %11256, float 0.000000e+00, i32 3
  %11258 = fmul <4 x float> %11251, %11257
  %11259 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11260 = getelementptr inbounds i8, i8* %11259, i64 36
  %11261 = bitcast i8* %11260 to float*
  %11262 = load float, float* %11261, align 4
  %11263 = insertelement <4 x float> zeroinitializer, float %11262, i32 0
  %11264 = insertelement <4 x float> %11263, float 0.000000e+00, i32 1
  %11265 = insertelement <4 x float> %11264, float 0.000000e+00, i32 2
  %11266 = insertelement <4 x float> %11265, float 0.000000e+00, i32 3
  %11267 = getelementptr inbounds float, float* %1, i64 6
  %11268 = load float, float* %11267, align 4
  %11269 = insertelement <4 x float> zeroinitializer, float %11268, i32 0
  %11270 = insertelement <4 x float> %11269, float 0.000000e+00, i32 1
  %11271 = insertelement <4 x float> %11270, float 0.000000e+00, i32 2
  %11272 = insertelement <4 x float> %11271, float 0.000000e+00, i32 3
  %11273 = call <4 x float> @llvm.fma.f32.366(<4 x float> %11266, <4 x float> %11272, <4 x float> %11258)
  %11274 = extractelement <4 x float> %11273, i32 0
  %11275 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11276 = getelementptr inbounds i8, i8* %11275, i64 40
  %11277 = bitcast i8* %11276 to float*
  store float %11274, float* %11277, align 4
  %11278 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11279 = getelementptr inbounds i8, i8* %11278, i64 32
  %11280 = bitcast i8* %11279 to float*
  %11281 = load float, float* %11280, align 4
  %11282 = insertelement <4 x float> zeroinitializer, float %11281, i32 0
  %11283 = insertelement <4 x float> %11282, float 1.000000e+00, i32 1
  %11284 = insertelement <4 x float> %11283, float 1.000000e+00, i32 2
  %11285 = insertelement <4 x float> %11284, float 1.000000e+00, i32 3
  %11286 = getelementptr inbounds float, float* %1, i64 2
  %11287 = load float, float* %11286, align 4
  %11288 = insertelement <4 x float> zeroinitializer, float %11287, i32 0
  %11289 = insertelement <4 x float> %11288, float 0.000000e+00, i32 1
  %11290 = insertelement <4 x float> %11289, float 0.000000e+00, i32 2
  %11291 = insertelement <4 x float> %11290, float 0.000000e+00, i32 3
  %11292 = fmul <4 x float> %11285, %11291
  %11293 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11294 = getelementptr inbounds i8, i8* %11293, i64 36
  %11295 = bitcast i8* %11294 to float*
  %11296 = load float, float* %11295, align 4
  %11297 = insertelement <4 x float> zeroinitializer, float %11296, i32 0
  %11298 = insertelement <4 x float> %11297, float 1.000000e+00, i32 1
  %11299 = insertelement <4 x float> %11298, float 1.000000e+00, i32 2
  %11300 = insertelement <4 x float> %11299, float 1.000000e+00, i32 3
  %11301 = getelementptr inbounds float, float* %1, i64 6
  %11302 = load float, float* %11301, align 4
  %11303 = insertelement <4 x float> zeroinitializer, float %11302, i32 0
  %11304 = insertelement <4 x float> %11303, float 0.000000e+00, i32 1
  %11305 = insertelement <4 x float> %11304, float 0.000000e+00, i32 2
  %11306 = insertelement <4 x float> %11305, float 0.000000e+00, i32 3
  %11307 = call <4 x float> @llvm.fma.f32.367(<4 x float> %11300, <4 x float> %11306, <4 x float> %11292)
  %11308 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11309 = getelementptr inbounds i8, i8* %11308, i64 40
  %11310 = bitcast i8* %11309 to float*
  %11311 = load float, float* %11310, align 4
  %11312 = insertelement <4 x float> zeroinitializer, float %11311, i32 0
  %11313 = insertelement <4 x float> %11312, float 0.000000e+00, i32 1
  %11314 = insertelement <4 x float> %11313, float 0.000000e+00, i32 2
  %11315 = insertelement <4 x float> %11314, float 0.000000e+00, i32 3
  %11316 = getelementptr inbounds float, float* %1, i64 10
  %11317 = load float, float* %11316, align 4
  %11318 = insertelement <4 x float> zeroinitializer, float %11317, i32 0
  %11319 = insertelement <4 x float> %11318, float 0.000000e+00, i32 1
  %11320 = insertelement <4 x float> %11319, float 0.000000e+00, i32 2
  %11321 = insertelement <4 x float> %11320, float 0.000000e+00, i32 3
  %11322 = call <4 x float> @llvm.fma.f32.368(<4 x float> %11315, <4 x float> %11321, <4 x float> %11307)
  %11323 = extractelement <4 x float> %11322, i32 0
  %11324 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11325 = getelementptr inbounds i8, i8* %11324, i64 40
  %11326 = bitcast i8* %11325 to float*
  store float %11323, float* %11326, align 4
  %11327 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11328 = getelementptr inbounds i8, i8* %11327, i64 32
  %11329 = bitcast i8* %11328 to float*
  %11330 = load float, float* %11329, align 4
  %11331 = insertelement <4 x float> zeroinitializer, float %11330, i32 0
  %11332 = insertelement <4 x float> %11331, float 1.000000e+00, i32 1
  %11333 = insertelement <4 x float> %11332, float 1.000000e+00, i32 2
  %11334 = insertelement <4 x float> %11333, float 1.000000e+00, i32 3
  %11335 = getelementptr inbounds float, float* %1, i64 2
  %11336 = load float, float* %11335, align 4
  %11337 = insertelement <4 x float> zeroinitializer, float %11336, i32 0
  %11338 = insertelement <4 x float> %11337, float 0.000000e+00, i32 1
  %11339 = insertelement <4 x float> %11338, float 0.000000e+00, i32 2
  %11340 = insertelement <4 x float> %11339, float 0.000000e+00, i32 3
  %11341 = fmul <4 x float> %11334, %11340
  %11342 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11343 = getelementptr inbounds i8, i8* %11342, i64 36
  %11344 = bitcast i8* %11343 to float*
  %11345 = load float, float* %11344, align 4
  %11346 = insertelement <4 x float> zeroinitializer, float %11345, i32 0
  %11347 = insertelement <4 x float> %11346, float 1.000000e+00, i32 1
  %11348 = insertelement <4 x float> %11347, float 1.000000e+00, i32 2
  %11349 = insertelement <4 x float> %11348, float 1.000000e+00, i32 3
  %11350 = getelementptr inbounds float, float* %1, i64 6
  %11351 = load float, float* %11350, align 4
  %11352 = insertelement <4 x float> zeroinitializer, float %11351, i32 0
  %11353 = insertelement <4 x float> %11352, float 0.000000e+00, i32 1
  %11354 = insertelement <4 x float> %11353, float 0.000000e+00, i32 2
  %11355 = insertelement <4 x float> %11354, float 0.000000e+00, i32 3
  %11356 = call <4 x float> @llvm.fma.f32.369(<4 x float> %11349, <4 x float> %11355, <4 x float> %11341)
  %11357 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11358 = getelementptr inbounds i8, i8* %11357, i64 40
  %11359 = bitcast i8* %11358 to float*
  %11360 = load float, float* %11359, align 4
  %11361 = insertelement <4 x float> zeroinitializer, float %11360, i32 0
  %11362 = insertelement <4 x float> %11361, float 1.000000e+00, i32 1
  %11363 = insertelement <4 x float> %11362, float 1.000000e+00, i32 2
  %11364 = insertelement <4 x float> %11363, float 1.000000e+00, i32 3
  %11365 = getelementptr inbounds float, float* %1, i64 10
  %11366 = load float, float* %11365, align 4
  %11367 = insertelement <4 x float> zeroinitializer, float %11366, i32 0
  %11368 = insertelement <4 x float> %11367, float 0.000000e+00, i32 1
  %11369 = insertelement <4 x float> %11368, float 0.000000e+00, i32 2
  %11370 = insertelement <4 x float> %11369, float 0.000000e+00, i32 3
  %11371 = call <4 x float> @llvm.fma.f32.370(<4 x float> %11364, <4 x float> %11370, <4 x float> %11356)
  %11372 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11373 = getelementptr inbounds i8, i8* %11372, i64 44
  %11374 = bitcast i8* %11373 to float*
  %11375 = load float, float* %11374, align 4
  %11376 = insertelement <4 x float> zeroinitializer, float %11375, i32 0
  %11377 = insertelement <4 x float> %11376, float 0.000000e+00, i32 1
  %11378 = insertelement <4 x float> %11377, float 0.000000e+00, i32 2
  %11379 = insertelement <4 x float> %11378, float 0.000000e+00, i32 3
  %11380 = getelementptr inbounds float, float* %1, i64 14
  %11381 = load float, float* %11380, align 4
  %11382 = insertelement <4 x float> zeroinitializer, float %11381, i32 0
  %11383 = insertelement <4 x float> %11382, float 0.000000e+00, i32 1
  %11384 = insertelement <4 x float> %11383, float 0.000000e+00, i32 2
  %11385 = insertelement <4 x float> %11384, float 0.000000e+00, i32 3
  %11386 = call <4 x float> @llvm.fma.f32.371(<4 x float> %11379, <4 x float> %11385, <4 x float> %11371)
  %11387 = extractelement <4 x float> %11386, i32 0
  %11388 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11389 = getelementptr inbounds i8, i8* %11388, i64 40
  %11390 = bitcast i8* %11389 to float*
  store float %11387, float* %11390, align 4
  %11391 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11392 = getelementptr inbounds i8, i8* %11391, i64 32
  %11393 = bitcast i8* %11392 to float*
  %11394 = load float, float* %11393, align 4
  %11395 = insertelement <4 x float> zeroinitializer, float %11394, i32 0
  %11396 = insertelement <4 x float> %11395, float 0.000000e+00, i32 1
  %11397 = insertelement <4 x float> %11396, float 0.000000e+00, i32 2
  %11398 = insertelement <4 x float> %11397, float 0.000000e+00, i32 3
  %11399 = getelementptr inbounds float, float* %1, i64 3
  %11400 = load float, float* %11399, align 4
  %11401 = insertelement <4 x float> zeroinitializer, float %11400, i32 0
  %11402 = insertelement <4 x float> %11401, float 0.000000e+00, i32 1
  %11403 = insertelement <4 x float> %11402, float 0.000000e+00, i32 2
  %11404 = insertelement <4 x float> %11403, float 0.000000e+00, i32 3
  %11405 = call <4 x float> @llvm.fma.f32.372(<4 x float> %11398, <4 x float> %11404, <4 x float> zeroinitializer)
  %11406 = extractelement <4 x float> %11405, i32 0
  %11407 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11408 = getelementptr inbounds i8, i8* %11407, i64 44
  %11409 = bitcast i8* %11408 to float*
  store float %11406, float* %11409, align 4
  %11410 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11411 = getelementptr inbounds i8, i8* %11410, i64 32
  %11412 = bitcast i8* %11411 to float*
  %11413 = load float, float* %11412, align 4
  %11414 = insertelement <4 x float> zeroinitializer, float %11413, i32 0
  %11415 = insertelement <4 x float> %11414, float 1.000000e+00, i32 1
  %11416 = insertelement <4 x float> %11415, float 1.000000e+00, i32 2
  %11417 = insertelement <4 x float> %11416, float 1.000000e+00, i32 3
  %11418 = getelementptr inbounds float, float* %1, i64 3
  %11419 = load float, float* %11418, align 4
  %11420 = insertelement <4 x float> zeroinitializer, float %11419, i32 0
  %11421 = insertelement <4 x float> %11420, float 0.000000e+00, i32 1
  %11422 = insertelement <4 x float> %11421, float 0.000000e+00, i32 2
  %11423 = insertelement <4 x float> %11422, float 0.000000e+00, i32 3
  %11424 = fmul <4 x float> %11417, %11423
  %11425 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11426 = getelementptr inbounds i8, i8* %11425, i64 36
  %11427 = bitcast i8* %11426 to float*
  %11428 = load float, float* %11427, align 4
  %11429 = insertelement <4 x float> zeroinitializer, float %11428, i32 0
  %11430 = insertelement <4 x float> %11429, float 0.000000e+00, i32 1
  %11431 = insertelement <4 x float> %11430, float 0.000000e+00, i32 2
  %11432 = insertelement <4 x float> %11431, float 0.000000e+00, i32 3
  %11433 = getelementptr inbounds float, float* %1, i64 7
  %11434 = load float, float* %11433, align 4
  %11435 = insertelement <4 x float> zeroinitializer, float %11434, i32 0
  %11436 = insertelement <4 x float> %11435, float 0.000000e+00, i32 1
  %11437 = insertelement <4 x float> %11436, float 0.000000e+00, i32 2
  %11438 = insertelement <4 x float> %11437, float 0.000000e+00, i32 3
  %11439 = call <4 x float> @llvm.fma.f32.373(<4 x float> %11432, <4 x float> %11438, <4 x float> %11424)
  %11440 = extractelement <4 x float> %11439, i32 0
  %11441 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11442 = getelementptr inbounds i8, i8* %11441, i64 44
  %11443 = bitcast i8* %11442 to float*
  store float %11440, float* %11443, align 4
  %11444 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11445 = getelementptr inbounds i8, i8* %11444, i64 32
  %11446 = bitcast i8* %11445 to float*
  %11447 = load float, float* %11446, align 4
  %11448 = insertelement <4 x float> zeroinitializer, float %11447, i32 0
  %11449 = insertelement <4 x float> %11448, float 1.000000e+00, i32 1
  %11450 = insertelement <4 x float> %11449, float 1.000000e+00, i32 2
  %11451 = insertelement <4 x float> %11450, float 1.000000e+00, i32 3
  %11452 = getelementptr inbounds float, float* %1, i64 3
  %11453 = load float, float* %11452, align 4
  %11454 = insertelement <4 x float> zeroinitializer, float %11453, i32 0
  %11455 = insertelement <4 x float> %11454, float 0.000000e+00, i32 1
  %11456 = insertelement <4 x float> %11455, float 0.000000e+00, i32 2
  %11457 = insertelement <4 x float> %11456, float 0.000000e+00, i32 3
  %11458 = fmul <4 x float> %11451, %11457
  %11459 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11460 = getelementptr inbounds i8, i8* %11459, i64 36
  %11461 = bitcast i8* %11460 to float*
  %11462 = load float, float* %11461, align 4
  %11463 = insertelement <4 x float> zeroinitializer, float %11462, i32 0
  %11464 = insertelement <4 x float> %11463, float 1.000000e+00, i32 1
  %11465 = insertelement <4 x float> %11464, float 1.000000e+00, i32 2
  %11466 = insertelement <4 x float> %11465, float 1.000000e+00, i32 3
  %11467 = getelementptr inbounds float, float* %1, i64 7
  %11468 = load float, float* %11467, align 4
  %11469 = insertelement <4 x float> zeroinitializer, float %11468, i32 0
  %11470 = insertelement <4 x float> %11469, float 0.000000e+00, i32 1
  %11471 = insertelement <4 x float> %11470, float 0.000000e+00, i32 2
  %11472 = insertelement <4 x float> %11471, float 0.000000e+00, i32 3
  %11473 = call <4 x float> @llvm.fma.f32.374(<4 x float> %11466, <4 x float> %11472, <4 x float> %11458)
  %11474 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11475 = getelementptr inbounds i8, i8* %11474, i64 40
  %11476 = bitcast i8* %11475 to float*
  %11477 = load float, float* %11476, align 4
  %11478 = insertelement <4 x float> zeroinitializer, float %11477, i32 0
  %11479 = insertelement <4 x float> %11478, float 0.000000e+00, i32 1
  %11480 = insertelement <4 x float> %11479, float 0.000000e+00, i32 2
  %11481 = insertelement <4 x float> %11480, float 0.000000e+00, i32 3
  %11482 = getelementptr inbounds float, float* %1, i64 11
  %11483 = load float, float* %11482, align 4
  %11484 = insertelement <4 x float> zeroinitializer, float %11483, i32 0
  %11485 = insertelement <4 x float> %11484, float 0.000000e+00, i32 1
  %11486 = insertelement <4 x float> %11485, float 0.000000e+00, i32 2
  %11487 = insertelement <4 x float> %11486, float 0.000000e+00, i32 3
  %11488 = call <4 x float> @llvm.fma.f32.375(<4 x float> %11481, <4 x float> %11487, <4 x float> %11473)
  %11489 = extractelement <4 x float> %11488, i32 0
  %11490 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11491 = getelementptr inbounds i8, i8* %11490, i64 44
  %11492 = bitcast i8* %11491 to float*
  store float %11489, float* %11492, align 4
  %11493 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11494 = getelementptr inbounds i8, i8* %11493, i64 32
  %11495 = bitcast i8* %11494 to float*
  %11496 = load float, float* %11495, align 4
  %11497 = insertelement <4 x float> zeroinitializer, float %11496, i32 0
  %11498 = insertelement <4 x float> %11497, float 1.000000e+00, i32 1
  %11499 = insertelement <4 x float> %11498, float 1.000000e+00, i32 2
  %11500 = insertelement <4 x float> %11499, float 1.000000e+00, i32 3
  %11501 = getelementptr inbounds float, float* %1, i64 3
  %11502 = load float, float* %11501, align 4
  %11503 = insertelement <4 x float> zeroinitializer, float %11502, i32 0
  %11504 = insertelement <4 x float> %11503, float 0.000000e+00, i32 1
  %11505 = insertelement <4 x float> %11504, float 0.000000e+00, i32 2
  %11506 = insertelement <4 x float> %11505, float 0.000000e+00, i32 3
  %11507 = fmul <4 x float> %11500, %11506
  %11508 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11509 = getelementptr inbounds i8, i8* %11508, i64 36
  %11510 = bitcast i8* %11509 to float*
  %11511 = load float, float* %11510, align 4
  %11512 = insertelement <4 x float> zeroinitializer, float %11511, i32 0
  %11513 = insertelement <4 x float> %11512, float 1.000000e+00, i32 1
  %11514 = insertelement <4 x float> %11513, float 1.000000e+00, i32 2
  %11515 = insertelement <4 x float> %11514, float 1.000000e+00, i32 3
  %11516 = getelementptr inbounds float, float* %1, i64 7
  %11517 = load float, float* %11516, align 4
  %11518 = insertelement <4 x float> zeroinitializer, float %11517, i32 0
  %11519 = insertelement <4 x float> %11518, float 0.000000e+00, i32 1
  %11520 = insertelement <4 x float> %11519, float 0.000000e+00, i32 2
  %11521 = insertelement <4 x float> %11520, float 0.000000e+00, i32 3
  %11522 = call <4 x float> @llvm.fma.f32.376(<4 x float> %11515, <4 x float> %11521, <4 x float> %11507)
  %11523 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11524 = getelementptr inbounds i8, i8* %11523, i64 40
  %11525 = bitcast i8* %11524 to float*
  %11526 = load float, float* %11525, align 4
  %11527 = insertelement <4 x float> zeroinitializer, float %11526, i32 0
  %11528 = insertelement <4 x float> %11527, float 1.000000e+00, i32 1
  %11529 = insertelement <4 x float> %11528, float 1.000000e+00, i32 2
  %11530 = insertelement <4 x float> %11529, float 1.000000e+00, i32 3
  %11531 = getelementptr inbounds float, float* %1, i64 11
  %11532 = load float, float* %11531, align 4
  %11533 = insertelement <4 x float> zeroinitializer, float %11532, i32 0
  %11534 = insertelement <4 x float> %11533, float 0.000000e+00, i32 1
  %11535 = insertelement <4 x float> %11534, float 0.000000e+00, i32 2
  %11536 = insertelement <4 x float> %11535, float 0.000000e+00, i32 3
  %11537 = call <4 x float> @llvm.fma.f32.377(<4 x float> %11530, <4 x float> %11536, <4 x float> %11522)
  %11538 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11539 = getelementptr inbounds i8, i8* %11538, i64 44
  %11540 = bitcast i8* %11539 to float*
  %11541 = load float, float* %11540, align 4
  %11542 = insertelement <4 x float> zeroinitializer, float %11541, i32 0
  %11543 = insertelement <4 x float> %11542, float 0.000000e+00, i32 1
  %11544 = insertelement <4 x float> %11543, float 0.000000e+00, i32 2
  %11545 = insertelement <4 x float> %11544, float 0.000000e+00, i32 3
  %11546 = getelementptr inbounds float, float* %1, i64 15
  %11547 = load float, float* %11546, align 4
  %11548 = insertelement <4 x float> zeroinitializer, float %11547, i32 0
  %11549 = insertelement <4 x float> %11548, float 0.000000e+00, i32 1
  %11550 = insertelement <4 x float> %11549, float 0.000000e+00, i32 2
  %11551 = insertelement <4 x float> %11550, float 0.000000e+00, i32 3
  %11552 = call <4 x float> @llvm.fma.f32.378(<4 x float> %11545, <4 x float> %11551, <4 x float> %11537)
  %11553 = extractelement <4 x float> %11552, i32 0
  %11554 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11555 = getelementptr inbounds i8, i8* %11554, i64 44
  %11556 = bitcast i8* %11555 to float*
  store float %11553, float* %11556, align 4
  %11557 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11558 = getelementptr inbounds i8, i8* %11557, i64 48
  %11559 = bitcast i8* %11558 to float*
  %11560 = load float, float* %11559, align 4
  %11561 = insertelement <4 x float> zeroinitializer, float %11560, i32 0
  %11562 = insertelement <4 x float> %11561, float 0.000000e+00, i32 1
  %11563 = insertelement <4 x float> %11562, float 0.000000e+00, i32 2
  %11564 = insertelement <4 x float> %11563, float 0.000000e+00, i32 3
  %11565 = load float, float* %1, align 4
  %11566 = insertelement <4 x float> zeroinitializer, float %11565, i32 0
  %11567 = insertelement <4 x float> %11566, float 0.000000e+00, i32 1
  %11568 = insertelement <4 x float> %11567, float 0.000000e+00, i32 2
  %11569 = insertelement <4 x float> %11568, float 0.000000e+00, i32 3
  %11570 = call <4 x float> @llvm.fma.f32.379(<4 x float> %11564, <4 x float> %11569, <4 x float> zeroinitializer)
  %11571 = extractelement <4 x float> %11570, i32 0
  %11572 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11573 = getelementptr inbounds i8, i8* %11572, i64 48
  %11574 = bitcast i8* %11573 to float*
  store float %11571, float* %11574, align 4
  %11575 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11576 = getelementptr inbounds i8, i8* %11575, i64 48
  %11577 = bitcast i8* %11576 to float*
  %11578 = load float, float* %11577, align 4
  %11579 = insertelement <4 x float> zeroinitializer, float %11578, i32 0
  %11580 = insertelement <4 x float> %11579, float 1.000000e+00, i32 1
  %11581 = insertelement <4 x float> %11580, float 1.000000e+00, i32 2
  %11582 = insertelement <4 x float> %11581, float 1.000000e+00, i32 3
  %11583 = load float, float* %1, align 4
  %11584 = insertelement <4 x float> zeroinitializer, float %11583, i32 0
  %11585 = insertelement <4 x float> %11584, float 0.000000e+00, i32 1
  %11586 = insertelement <4 x float> %11585, float 0.000000e+00, i32 2
  %11587 = insertelement <4 x float> %11586, float 0.000000e+00, i32 3
  %11588 = fmul <4 x float> %11582, %11587
  %11589 = fadd <4 x float> %11588, zeroinitializer
  %11590 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11591 = getelementptr inbounds i8, i8* %11590, i64 52
  %11592 = bitcast i8* %11591 to float*
  %11593 = load float, float* %11592, align 4
  %11594 = insertelement <4 x float> zeroinitializer, float %11593, i32 0
  %11595 = insertelement <4 x float> %11594, float 0.000000e+00, i32 1
  %11596 = insertelement <4 x float> %11595, float 0.000000e+00, i32 2
  %11597 = insertelement <4 x float> %11596, float 0.000000e+00, i32 3
  %11598 = getelementptr inbounds float, float* %1, i64 4
  %11599 = load float, float* %11598, align 4
  %11600 = insertelement <4 x float> zeroinitializer, float %11599, i32 0
  %11601 = insertelement <4 x float> %11600, float 0.000000e+00, i32 1
  %11602 = insertelement <4 x float> %11601, float 0.000000e+00, i32 2
  %11603 = insertelement <4 x float> %11602, float 0.000000e+00, i32 3
  %11604 = call <4 x float> @llvm.fma.f32.380(<4 x float> %11597, <4 x float> %11603, <4 x float> %11589)
  %11605 = extractelement <4 x float> %11604, i32 0
  %11606 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11607 = getelementptr inbounds i8, i8* %11606, i64 48
  %11608 = bitcast i8* %11607 to float*
  store float %11605, float* %11608, align 4
  %11609 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11610 = getelementptr inbounds i8, i8* %11609, i64 48
  %11611 = bitcast i8* %11610 to float*
  %11612 = load float, float* %11611, align 4
  %11613 = insertelement <4 x float> zeroinitializer, float %11612, i32 0
  %11614 = insertelement <4 x float> %11613, float 1.000000e+00, i32 1
  %11615 = insertelement <4 x float> %11614, float 1.000000e+00, i32 2
  %11616 = insertelement <4 x float> %11615, float 1.000000e+00, i32 3
  %11617 = load float, float* %1, align 4
  %11618 = insertelement <4 x float> zeroinitializer, float %11617, i32 0
  %11619 = insertelement <4 x float> %11618, float 0.000000e+00, i32 1
  %11620 = insertelement <4 x float> %11619, float 0.000000e+00, i32 2
  %11621 = insertelement <4 x float> %11620, float 0.000000e+00, i32 3
  %11622 = fmul <4 x float> %11616, %11621
  %11623 = fadd <4 x float> %11622, zeroinitializer
  %11624 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11625 = getelementptr inbounds i8, i8* %11624, i64 52
  %11626 = bitcast i8* %11625 to float*
  %11627 = load float, float* %11626, align 4
  %11628 = insertelement <4 x float> zeroinitializer, float %11627, i32 0
  %11629 = insertelement <4 x float> %11628, float 1.000000e+00, i32 1
  %11630 = insertelement <4 x float> %11629, float 1.000000e+00, i32 2
  %11631 = insertelement <4 x float> %11630, float 1.000000e+00, i32 3
  %11632 = getelementptr inbounds float, float* %1, i64 4
  %11633 = load float, float* %11632, align 4
  %11634 = insertelement <4 x float> zeroinitializer, float %11633, i32 0
  %11635 = insertelement <4 x float> %11634, float 0.000000e+00, i32 1
  %11636 = insertelement <4 x float> %11635, float 0.000000e+00, i32 2
  %11637 = insertelement <4 x float> %11636, float 0.000000e+00, i32 3
  %11638 = call <4 x float> @llvm.fma.f32.381(<4 x float> %11631, <4 x float> %11637, <4 x float> %11623)
  %11639 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11640 = getelementptr inbounds i8, i8* %11639, i64 56
  %11641 = bitcast i8* %11640 to float*
  %11642 = load float, float* %11641, align 4
  %11643 = insertelement <4 x float> zeroinitializer, float %11642, i32 0
  %11644 = insertelement <4 x float> %11643, float 0.000000e+00, i32 1
  %11645 = insertelement <4 x float> %11644, float 0.000000e+00, i32 2
  %11646 = insertelement <4 x float> %11645, float 0.000000e+00, i32 3
  %11647 = getelementptr inbounds float, float* %1, i64 8
  %11648 = load float, float* %11647, align 4
  %11649 = insertelement <4 x float> zeroinitializer, float %11648, i32 0
  %11650 = insertelement <4 x float> %11649, float 0.000000e+00, i32 1
  %11651 = insertelement <4 x float> %11650, float 0.000000e+00, i32 2
  %11652 = insertelement <4 x float> %11651, float 0.000000e+00, i32 3
  %11653 = call <4 x float> @llvm.fma.f32.382(<4 x float> %11646, <4 x float> %11652, <4 x float> %11638)
  %11654 = extractelement <4 x float> %11653, i32 0
  %11655 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11656 = getelementptr inbounds i8, i8* %11655, i64 48
  %11657 = bitcast i8* %11656 to float*
  store float %11654, float* %11657, align 4
  %11658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11659 = getelementptr inbounds i8, i8* %11658, i64 48
  %11660 = bitcast i8* %11659 to float*
  %11661 = load float, float* %11660, align 4
  %11662 = insertelement <4 x float> zeroinitializer, float %11661, i32 0
  %11663 = insertelement <4 x float> %11662, float 1.000000e+00, i32 1
  %11664 = insertelement <4 x float> %11663, float 1.000000e+00, i32 2
  %11665 = insertelement <4 x float> %11664, float 1.000000e+00, i32 3
  %11666 = load float, float* %1, align 4
  %11667 = insertelement <4 x float> zeroinitializer, float %11666, i32 0
  %11668 = insertelement <4 x float> %11667, float 0.000000e+00, i32 1
  %11669 = insertelement <4 x float> %11668, float 0.000000e+00, i32 2
  %11670 = insertelement <4 x float> %11669, float 0.000000e+00, i32 3
  %11671 = fmul <4 x float> %11665, %11670
  %11672 = fadd <4 x float> %11671, zeroinitializer
  %11673 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11674 = getelementptr inbounds i8, i8* %11673, i64 52
  %11675 = bitcast i8* %11674 to float*
  %11676 = load float, float* %11675, align 4
  %11677 = insertelement <4 x float> zeroinitializer, float %11676, i32 0
  %11678 = insertelement <4 x float> %11677, float 1.000000e+00, i32 1
  %11679 = insertelement <4 x float> %11678, float 1.000000e+00, i32 2
  %11680 = insertelement <4 x float> %11679, float 1.000000e+00, i32 3
  %11681 = getelementptr inbounds float, float* %1, i64 4
  %11682 = load float, float* %11681, align 4
  %11683 = insertelement <4 x float> zeroinitializer, float %11682, i32 0
  %11684 = insertelement <4 x float> %11683, float 0.000000e+00, i32 1
  %11685 = insertelement <4 x float> %11684, float 0.000000e+00, i32 2
  %11686 = insertelement <4 x float> %11685, float 0.000000e+00, i32 3
  %11687 = call <4 x float> @llvm.fma.f32.383(<4 x float> %11680, <4 x float> %11686, <4 x float> %11672)
  %11688 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11689 = getelementptr inbounds i8, i8* %11688, i64 56
  %11690 = bitcast i8* %11689 to float*
  %11691 = load float, float* %11690, align 4
  %11692 = insertelement <4 x float> zeroinitializer, float %11691, i32 0
  %11693 = insertelement <4 x float> %11692, float 1.000000e+00, i32 1
  %11694 = insertelement <4 x float> %11693, float 1.000000e+00, i32 2
  %11695 = insertelement <4 x float> %11694, float 1.000000e+00, i32 3
  %11696 = getelementptr inbounds float, float* %1, i64 8
  %11697 = load float, float* %11696, align 4
  %11698 = insertelement <4 x float> zeroinitializer, float %11697, i32 0
  %11699 = insertelement <4 x float> %11698, float 0.000000e+00, i32 1
  %11700 = insertelement <4 x float> %11699, float 0.000000e+00, i32 2
  %11701 = insertelement <4 x float> %11700, float 0.000000e+00, i32 3
  %11702 = call <4 x float> @llvm.fma.f32.384(<4 x float> %11695, <4 x float> %11701, <4 x float> %11687)
  %11703 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11704 = getelementptr inbounds i8, i8* %11703, i64 60
  %11705 = bitcast i8* %11704 to float*
  %11706 = load float, float* %11705, align 4
  %11707 = insertelement <4 x float> zeroinitializer, float %11706, i32 0
  %11708 = insertelement <4 x float> %11707, float 0.000000e+00, i32 1
  %11709 = insertelement <4 x float> %11708, float 0.000000e+00, i32 2
  %11710 = insertelement <4 x float> %11709, float 0.000000e+00, i32 3
  %11711 = getelementptr inbounds float, float* %1, i64 12
  %11712 = load float, float* %11711, align 4
  %11713 = insertelement <4 x float> zeroinitializer, float %11712, i32 0
  %11714 = insertelement <4 x float> %11713, float 0.000000e+00, i32 1
  %11715 = insertelement <4 x float> %11714, float 0.000000e+00, i32 2
  %11716 = insertelement <4 x float> %11715, float 0.000000e+00, i32 3
  %11717 = call <4 x float> @llvm.fma.f32.385(<4 x float> %11710, <4 x float> %11716, <4 x float> %11702)
  %11718 = extractelement <4 x float> %11717, i32 0
  %11719 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11720 = getelementptr inbounds i8, i8* %11719, i64 48
  %11721 = bitcast i8* %11720 to float*
  store float %11718, float* %11721, align 4
  %11722 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11723 = getelementptr inbounds i8, i8* %11722, i64 48
  %11724 = bitcast i8* %11723 to float*
  %11725 = load float, float* %11724, align 4
  %11726 = insertelement <4 x float> zeroinitializer, float %11725, i32 0
  %11727 = insertelement <4 x float> %11726, float 0.000000e+00, i32 1
  %11728 = insertelement <4 x float> %11727, float 0.000000e+00, i32 2
  %11729 = insertelement <4 x float> %11728, float 0.000000e+00, i32 3
  %11730 = getelementptr inbounds float, float* %1, i64 1
  %11731 = load float, float* %11730, align 4
  %11732 = insertelement <4 x float> zeroinitializer, float %11731, i32 0
  %11733 = insertelement <4 x float> %11732, float 0.000000e+00, i32 1
  %11734 = insertelement <4 x float> %11733, float 0.000000e+00, i32 2
  %11735 = insertelement <4 x float> %11734, float 0.000000e+00, i32 3
  %11736 = call <4 x float> @llvm.fma.f32.386(<4 x float> %11729, <4 x float> %11735, <4 x float> zeroinitializer)
  %11737 = extractelement <4 x float> %11736, i32 0
  %11738 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11739 = getelementptr inbounds i8, i8* %11738, i64 52
  %11740 = bitcast i8* %11739 to float*
  store float %11737, float* %11740, align 4
  %11741 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11742 = getelementptr inbounds i8, i8* %11741, i64 48
  %11743 = bitcast i8* %11742 to float*
  %11744 = load float, float* %11743, align 4
  %11745 = insertelement <4 x float> zeroinitializer, float %11744, i32 0
  %11746 = insertelement <4 x float> %11745, float 1.000000e+00, i32 1
  %11747 = insertelement <4 x float> %11746, float 1.000000e+00, i32 2
  %11748 = insertelement <4 x float> %11747, float 1.000000e+00, i32 3
  %11749 = getelementptr inbounds float, float* %1, i64 1
  %11750 = load float, float* %11749, align 4
  %11751 = insertelement <4 x float> zeroinitializer, float %11750, i32 0
  %11752 = insertelement <4 x float> %11751, float 0.000000e+00, i32 1
  %11753 = insertelement <4 x float> %11752, float 0.000000e+00, i32 2
  %11754 = insertelement <4 x float> %11753, float 0.000000e+00, i32 3
  %11755 = fmul <4 x float> %11748, %11754
  %11756 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11757 = getelementptr inbounds i8, i8* %11756, i64 52
  %11758 = bitcast i8* %11757 to float*
  %11759 = load float, float* %11758, align 4
  %11760 = insertelement <4 x float> zeroinitializer, float %11759, i32 0
  %11761 = insertelement <4 x float> %11760, float 0.000000e+00, i32 1
  %11762 = insertelement <4 x float> %11761, float 0.000000e+00, i32 2
  %11763 = insertelement <4 x float> %11762, float 0.000000e+00, i32 3
  %11764 = getelementptr inbounds float, float* %1, i64 5
  %11765 = load float, float* %11764, align 4
  %11766 = insertelement <4 x float> zeroinitializer, float %11765, i32 0
  %11767 = insertelement <4 x float> %11766, float 0.000000e+00, i32 1
  %11768 = insertelement <4 x float> %11767, float 0.000000e+00, i32 2
  %11769 = insertelement <4 x float> %11768, float 0.000000e+00, i32 3
  %11770 = call <4 x float> @llvm.fma.f32.387(<4 x float> %11763, <4 x float> %11769, <4 x float> %11755)
  %11771 = extractelement <4 x float> %11770, i32 0
  %11772 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11773 = getelementptr inbounds i8, i8* %11772, i64 52
  %11774 = bitcast i8* %11773 to float*
  store float %11771, float* %11774, align 4
  %11775 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11776 = getelementptr inbounds i8, i8* %11775, i64 48
  %11777 = bitcast i8* %11776 to float*
  %11778 = load float, float* %11777, align 4
  %11779 = insertelement <4 x float> zeroinitializer, float %11778, i32 0
  %11780 = insertelement <4 x float> %11779, float 1.000000e+00, i32 1
  %11781 = insertelement <4 x float> %11780, float 1.000000e+00, i32 2
  %11782 = insertelement <4 x float> %11781, float 1.000000e+00, i32 3
  %11783 = getelementptr inbounds float, float* %1, i64 1
  %11784 = load float, float* %11783, align 4
  %11785 = insertelement <4 x float> zeroinitializer, float %11784, i32 0
  %11786 = insertelement <4 x float> %11785, float 0.000000e+00, i32 1
  %11787 = insertelement <4 x float> %11786, float 0.000000e+00, i32 2
  %11788 = insertelement <4 x float> %11787, float 0.000000e+00, i32 3
  %11789 = fmul <4 x float> %11782, %11788
  %11790 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11791 = getelementptr inbounds i8, i8* %11790, i64 52
  %11792 = bitcast i8* %11791 to float*
  %11793 = load float, float* %11792, align 4
  %11794 = insertelement <4 x float> zeroinitializer, float %11793, i32 0
  %11795 = insertelement <4 x float> %11794, float 1.000000e+00, i32 1
  %11796 = insertelement <4 x float> %11795, float 1.000000e+00, i32 2
  %11797 = insertelement <4 x float> %11796, float 1.000000e+00, i32 3
  %11798 = getelementptr inbounds float, float* %1, i64 5
  %11799 = load float, float* %11798, align 4
  %11800 = insertelement <4 x float> zeroinitializer, float %11799, i32 0
  %11801 = insertelement <4 x float> %11800, float 0.000000e+00, i32 1
  %11802 = insertelement <4 x float> %11801, float 0.000000e+00, i32 2
  %11803 = insertelement <4 x float> %11802, float 0.000000e+00, i32 3
  %11804 = call <4 x float> @llvm.fma.f32.388(<4 x float> %11797, <4 x float> %11803, <4 x float> %11789)
  %11805 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11806 = getelementptr inbounds i8, i8* %11805, i64 56
  %11807 = bitcast i8* %11806 to float*
  %11808 = load float, float* %11807, align 4
  %11809 = insertelement <4 x float> zeroinitializer, float %11808, i32 0
  %11810 = insertelement <4 x float> %11809, float 0.000000e+00, i32 1
  %11811 = insertelement <4 x float> %11810, float 0.000000e+00, i32 2
  %11812 = insertelement <4 x float> %11811, float 0.000000e+00, i32 3
  %11813 = getelementptr inbounds float, float* %1, i64 9
  %11814 = load float, float* %11813, align 4
  %11815 = insertelement <4 x float> zeroinitializer, float %11814, i32 0
  %11816 = insertelement <4 x float> %11815, float 0.000000e+00, i32 1
  %11817 = insertelement <4 x float> %11816, float 0.000000e+00, i32 2
  %11818 = insertelement <4 x float> %11817, float 0.000000e+00, i32 3
  %11819 = call <4 x float> @llvm.fma.f32.389(<4 x float> %11812, <4 x float> %11818, <4 x float> %11804)
  %11820 = extractelement <4 x float> %11819, i32 0
  %11821 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11822 = getelementptr inbounds i8, i8* %11821, i64 52
  %11823 = bitcast i8* %11822 to float*
  store float %11820, float* %11823, align 4
  %11824 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11825 = getelementptr inbounds i8, i8* %11824, i64 48
  %11826 = bitcast i8* %11825 to float*
  %11827 = load float, float* %11826, align 4
  %11828 = insertelement <4 x float> zeroinitializer, float %11827, i32 0
  %11829 = insertelement <4 x float> %11828, float 1.000000e+00, i32 1
  %11830 = insertelement <4 x float> %11829, float 1.000000e+00, i32 2
  %11831 = insertelement <4 x float> %11830, float 1.000000e+00, i32 3
  %11832 = getelementptr inbounds float, float* %1, i64 1
  %11833 = load float, float* %11832, align 4
  %11834 = insertelement <4 x float> zeroinitializer, float %11833, i32 0
  %11835 = insertelement <4 x float> %11834, float 0.000000e+00, i32 1
  %11836 = insertelement <4 x float> %11835, float 0.000000e+00, i32 2
  %11837 = insertelement <4 x float> %11836, float 0.000000e+00, i32 3
  %11838 = fmul <4 x float> %11831, %11837
  %11839 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11840 = getelementptr inbounds i8, i8* %11839, i64 52
  %11841 = bitcast i8* %11840 to float*
  %11842 = load float, float* %11841, align 4
  %11843 = insertelement <4 x float> zeroinitializer, float %11842, i32 0
  %11844 = insertelement <4 x float> %11843, float 1.000000e+00, i32 1
  %11845 = insertelement <4 x float> %11844, float 1.000000e+00, i32 2
  %11846 = insertelement <4 x float> %11845, float 1.000000e+00, i32 3
  %11847 = getelementptr inbounds float, float* %1, i64 5
  %11848 = load float, float* %11847, align 4
  %11849 = insertelement <4 x float> zeroinitializer, float %11848, i32 0
  %11850 = insertelement <4 x float> %11849, float 0.000000e+00, i32 1
  %11851 = insertelement <4 x float> %11850, float 0.000000e+00, i32 2
  %11852 = insertelement <4 x float> %11851, float 0.000000e+00, i32 3
  %11853 = call <4 x float> @llvm.fma.f32.390(<4 x float> %11846, <4 x float> %11852, <4 x float> %11838)
  %11854 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11855 = getelementptr inbounds i8, i8* %11854, i64 56
  %11856 = bitcast i8* %11855 to float*
  %11857 = load float, float* %11856, align 4
  %11858 = insertelement <4 x float> zeroinitializer, float %11857, i32 0
  %11859 = insertelement <4 x float> %11858, float 1.000000e+00, i32 1
  %11860 = insertelement <4 x float> %11859, float 1.000000e+00, i32 2
  %11861 = insertelement <4 x float> %11860, float 1.000000e+00, i32 3
  %11862 = getelementptr inbounds float, float* %1, i64 9
  %11863 = load float, float* %11862, align 4
  %11864 = insertelement <4 x float> zeroinitializer, float %11863, i32 0
  %11865 = insertelement <4 x float> %11864, float 0.000000e+00, i32 1
  %11866 = insertelement <4 x float> %11865, float 0.000000e+00, i32 2
  %11867 = insertelement <4 x float> %11866, float 0.000000e+00, i32 3
  %11868 = call <4 x float> @llvm.fma.f32.391(<4 x float> %11861, <4 x float> %11867, <4 x float> %11853)
  %11869 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11870 = getelementptr inbounds i8, i8* %11869, i64 60
  %11871 = bitcast i8* %11870 to float*
  %11872 = load float, float* %11871, align 4
  %11873 = insertelement <4 x float> zeroinitializer, float %11872, i32 0
  %11874 = insertelement <4 x float> %11873, float 0.000000e+00, i32 1
  %11875 = insertelement <4 x float> %11874, float 0.000000e+00, i32 2
  %11876 = insertelement <4 x float> %11875, float 0.000000e+00, i32 3
  %11877 = getelementptr inbounds float, float* %1, i64 13
  %11878 = load float, float* %11877, align 4
  %11879 = insertelement <4 x float> zeroinitializer, float %11878, i32 0
  %11880 = insertelement <4 x float> %11879, float 0.000000e+00, i32 1
  %11881 = insertelement <4 x float> %11880, float 0.000000e+00, i32 2
  %11882 = insertelement <4 x float> %11881, float 0.000000e+00, i32 3
  %11883 = call <4 x float> @llvm.fma.f32.392(<4 x float> %11876, <4 x float> %11882, <4 x float> %11868)
  %11884 = extractelement <4 x float> %11883, i32 0
  %11885 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11886 = getelementptr inbounds i8, i8* %11885, i64 52
  %11887 = bitcast i8* %11886 to float*
  store float %11884, float* %11887, align 4
  %11888 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11889 = getelementptr inbounds i8, i8* %11888, i64 48
  %11890 = bitcast i8* %11889 to float*
  %11891 = load float, float* %11890, align 4
  %11892 = insertelement <4 x float> zeroinitializer, float %11891, i32 0
  %11893 = insertelement <4 x float> %11892, float 0.000000e+00, i32 1
  %11894 = insertelement <4 x float> %11893, float 0.000000e+00, i32 2
  %11895 = insertelement <4 x float> %11894, float 0.000000e+00, i32 3
  %11896 = getelementptr inbounds float, float* %1, i64 2
  %11897 = load float, float* %11896, align 4
  %11898 = insertelement <4 x float> zeroinitializer, float %11897, i32 0
  %11899 = insertelement <4 x float> %11898, float 0.000000e+00, i32 1
  %11900 = insertelement <4 x float> %11899, float 0.000000e+00, i32 2
  %11901 = insertelement <4 x float> %11900, float 0.000000e+00, i32 3
  %11902 = call <4 x float> @llvm.fma.f32.393(<4 x float> %11895, <4 x float> %11901, <4 x float> zeroinitializer)
  %11903 = extractelement <4 x float> %11902, i32 0
  %11904 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11905 = getelementptr inbounds i8, i8* %11904, i64 56
  %11906 = bitcast i8* %11905 to float*
  store float %11903, float* %11906, align 4
  %11907 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11908 = getelementptr inbounds i8, i8* %11907, i64 48
  %11909 = bitcast i8* %11908 to float*
  %11910 = load float, float* %11909, align 4
  %11911 = insertelement <4 x float> zeroinitializer, float %11910, i32 0
  %11912 = insertelement <4 x float> %11911, float 1.000000e+00, i32 1
  %11913 = insertelement <4 x float> %11912, float 1.000000e+00, i32 2
  %11914 = insertelement <4 x float> %11913, float 1.000000e+00, i32 3
  %11915 = getelementptr inbounds float, float* %1, i64 2
  %11916 = load float, float* %11915, align 4
  %11917 = insertelement <4 x float> zeroinitializer, float %11916, i32 0
  %11918 = insertelement <4 x float> %11917, float 0.000000e+00, i32 1
  %11919 = insertelement <4 x float> %11918, float 0.000000e+00, i32 2
  %11920 = insertelement <4 x float> %11919, float 0.000000e+00, i32 3
  %11921 = fmul <4 x float> %11914, %11920
  %11922 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11923 = getelementptr inbounds i8, i8* %11922, i64 52
  %11924 = bitcast i8* %11923 to float*
  %11925 = load float, float* %11924, align 4
  %11926 = insertelement <4 x float> zeroinitializer, float %11925, i32 0
  %11927 = insertelement <4 x float> %11926, float 0.000000e+00, i32 1
  %11928 = insertelement <4 x float> %11927, float 0.000000e+00, i32 2
  %11929 = insertelement <4 x float> %11928, float 0.000000e+00, i32 3
  %11930 = getelementptr inbounds float, float* %1, i64 6
  %11931 = load float, float* %11930, align 4
  %11932 = insertelement <4 x float> zeroinitializer, float %11931, i32 0
  %11933 = insertelement <4 x float> %11932, float 0.000000e+00, i32 1
  %11934 = insertelement <4 x float> %11933, float 0.000000e+00, i32 2
  %11935 = insertelement <4 x float> %11934, float 0.000000e+00, i32 3
  %11936 = call <4 x float> @llvm.fma.f32.394(<4 x float> %11929, <4 x float> %11935, <4 x float> %11921)
  %11937 = extractelement <4 x float> %11936, i32 0
  %11938 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11939 = getelementptr inbounds i8, i8* %11938, i64 56
  %11940 = bitcast i8* %11939 to float*
  store float %11937, float* %11940, align 4
  %11941 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11942 = getelementptr inbounds i8, i8* %11941, i64 48
  %11943 = bitcast i8* %11942 to float*
  %11944 = load float, float* %11943, align 4
  %11945 = insertelement <4 x float> zeroinitializer, float %11944, i32 0
  %11946 = insertelement <4 x float> %11945, float 1.000000e+00, i32 1
  %11947 = insertelement <4 x float> %11946, float 1.000000e+00, i32 2
  %11948 = insertelement <4 x float> %11947, float 1.000000e+00, i32 3
  %11949 = getelementptr inbounds float, float* %1, i64 2
  %11950 = load float, float* %11949, align 4
  %11951 = insertelement <4 x float> zeroinitializer, float %11950, i32 0
  %11952 = insertelement <4 x float> %11951, float 0.000000e+00, i32 1
  %11953 = insertelement <4 x float> %11952, float 0.000000e+00, i32 2
  %11954 = insertelement <4 x float> %11953, float 0.000000e+00, i32 3
  %11955 = fmul <4 x float> %11948, %11954
  %11956 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11957 = getelementptr inbounds i8, i8* %11956, i64 52
  %11958 = bitcast i8* %11957 to float*
  %11959 = load float, float* %11958, align 4
  %11960 = insertelement <4 x float> zeroinitializer, float %11959, i32 0
  %11961 = insertelement <4 x float> %11960, float 1.000000e+00, i32 1
  %11962 = insertelement <4 x float> %11961, float 1.000000e+00, i32 2
  %11963 = insertelement <4 x float> %11962, float 1.000000e+00, i32 3
  %11964 = getelementptr inbounds float, float* %1, i64 6
  %11965 = load float, float* %11964, align 4
  %11966 = insertelement <4 x float> zeroinitializer, float %11965, i32 0
  %11967 = insertelement <4 x float> %11966, float 0.000000e+00, i32 1
  %11968 = insertelement <4 x float> %11967, float 0.000000e+00, i32 2
  %11969 = insertelement <4 x float> %11968, float 0.000000e+00, i32 3
  %11970 = call <4 x float> @llvm.fma.f32.395(<4 x float> %11963, <4 x float> %11969, <4 x float> %11955)
  %11971 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11972 = getelementptr inbounds i8, i8* %11971, i64 56
  %11973 = bitcast i8* %11972 to float*
  %11974 = load float, float* %11973, align 4
  %11975 = insertelement <4 x float> zeroinitializer, float %11974, i32 0
  %11976 = insertelement <4 x float> %11975, float 0.000000e+00, i32 1
  %11977 = insertelement <4 x float> %11976, float 0.000000e+00, i32 2
  %11978 = insertelement <4 x float> %11977, float 0.000000e+00, i32 3
  %11979 = getelementptr inbounds float, float* %1, i64 10
  %11980 = load float, float* %11979, align 4
  %11981 = insertelement <4 x float> zeroinitializer, float %11980, i32 0
  %11982 = insertelement <4 x float> %11981, float 0.000000e+00, i32 1
  %11983 = insertelement <4 x float> %11982, float 0.000000e+00, i32 2
  %11984 = insertelement <4 x float> %11983, float 0.000000e+00, i32 3
  %11985 = call <4 x float> @llvm.fma.f32.396(<4 x float> %11978, <4 x float> %11984, <4 x float> %11970)
  %11986 = extractelement <4 x float> %11985, i32 0
  %11987 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11988 = getelementptr inbounds i8, i8* %11987, i64 56
  %11989 = bitcast i8* %11988 to float*
  store float %11986, float* %11989, align 4
  %11990 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %11991 = getelementptr inbounds i8, i8* %11990, i64 48
  %11992 = bitcast i8* %11991 to float*
  %11993 = load float, float* %11992, align 4
  %11994 = insertelement <4 x float> zeroinitializer, float %11993, i32 0
  %11995 = insertelement <4 x float> %11994, float 1.000000e+00, i32 1
  %11996 = insertelement <4 x float> %11995, float 1.000000e+00, i32 2
  %11997 = insertelement <4 x float> %11996, float 1.000000e+00, i32 3
  %11998 = getelementptr inbounds float, float* %1, i64 2
  %11999 = load float, float* %11998, align 4
  %12000 = insertelement <4 x float> zeroinitializer, float %11999, i32 0
  %12001 = insertelement <4 x float> %12000, float 0.000000e+00, i32 1
  %12002 = insertelement <4 x float> %12001, float 0.000000e+00, i32 2
  %12003 = insertelement <4 x float> %12002, float 0.000000e+00, i32 3
  %12004 = fmul <4 x float> %11997, %12003
  %12005 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12006 = getelementptr inbounds i8, i8* %12005, i64 52
  %12007 = bitcast i8* %12006 to float*
  %12008 = load float, float* %12007, align 4
  %12009 = insertelement <4 x float> zeroinitializer, float %12008, i32 0
  %12010 = insertelement <4 x float> %12009, float 1.000000e+00, i32 1
  %12011 = insertelement <4 x float> %12010, float 1.000000e+00, i32 2
  %12012 = insertelement <4 x float> %12011, float 1.000000e+00, i32 3
  %12013 = getelementptr inbounds float, float* %1, i64 6
  %12014 = load float, float* %12013, align 4
  %12015 = insertelement <4 x float> zeroinitializer, float %12014, i32 0
  %12016 = insertelement <4 x float> %12015, float 0.000000e+00, i32 1
  %12017 = insertelement <4 x float> %12016, float 0.000000e+00, i32 2
  %12018 = insertelement <4 x float> %12017, float 0.000000e+00, i32 3
  %12019 = call <4 x float> @llvm.fma.f32.397(<4 x float> %12012, <4 x float> %12018, <4 x float> %12004)
  %12020 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12021 = getelementptr inbounds i8, i8* %12020, i64 56
  %12022 = bitcast i8* %12021 to float*
  %12023 = load float, float* %12022, align 4
  %12024 = insertelement <4 x float> zeroinitializer, float %12023, i32 0
  %12025 = insertelement <4 x float> %12024, float 1.000000e+00, i32 1
  %12026 = insertelement <4 x float> %12025, float 1.000000e+00, i32 2
  %12027 = insertelement <4 x float> %12026, float 1.000000e+00, i32 3
  %12028 = getelementptr inbounds float, float* %1, i64 10
  %12029 = load float, float* %12028, align 4
  %12030 = insertelement <4 x float> zeroinitializer, float %12029, i32 0
  %12031 = insertelement <4 x float> %12030, float 0.000000e+00, i32 1
  %12032 = insertelement <4 x float> %12031, float 0.000000e+00, i32 2
  %12033 = insertelement <4 x float> %12032, float 0.000000e+00, i32 3
  %12034 = call <4 x float> @llvm.fma.f32.398(<4 x float> %12027, <4 x float> %12033, <4 x float> %12019)
  %12035 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12036 = getelementptr inbounds i8, i8* %12035, i64 60
  %12037 = bitcast i8* %12036 to float*
  %12038 = load float, float* %12037, align 4
  %12039 = insertelement <4 x float> zeroinitializer, float %12038, i32 0
  %12040 = insertelement <4 x float> %12039, float 0.000000e+00, i32 1
  %12041 = insertelement <4 x float> %12040, float 0.000000e+00, i32 2
  %12042 = insertelement <4 x float> %12041, float 0.000000e+00, i32 3
  %12043 = getelementptr inbounds float, float* %1, i64 14
  %12044 = load float, float* %12043, align 4
  %12045 = insertelement <4 x float> zeroinitializer, float %12044, i32 0
  %12046 = insertelement <4 x float> %12045, float 0.000000e+00, i32 1
  %12047 = insertelement <4 x float> %12046, float 0.000000e+00, i32 2
  %12048 = insertelement <4 x float> %12047, float 0.000000e+00, i32 3
  %12049 = call <4 x float> @llvm.fma.f32.399(<4 x float> %12042, <4 x float> %12048, <4 x float> %12034)
  %12050 = extractelement <4 x float> %12049, i32 0
  %12051 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12052 = getelementptr inbounds i8, i8* %12051, i64 56
  %12053 = bitcast i8* %12052 to float*
  store float %12050, float* %12053, align 4
  %12054 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12055 = getelementptr inbounds i8, i8* %12054, i64 48
  %12056 = bitcast i8* %12055 to float*
  %12057 = load float, float* %12056, align 4
  %12058 = insertelement <4 x float> zeroinitializer, float %12057, i32 0
  %12059 = insertelement <4 x float> %12058, float 0.000000e+00, i32 1
  %12060 = insertelement <4 x float> %12059, float 0.000000e+00, i32 2
  %12061 = insertelement <4 x float> %12060, float 0.000000e+00, i32 3
  %12062 = getelementptr inbounds float, float* %1, i64 3
  %12063 = load float, float* %12062, align 4
  %12064 = insertelement <4 x float> zeroinitializer, float %12063, i32 0
  %12065 = insertelement <4 x float> %12064, float 0.000000e+00, i32 1
  %12066 = insertelement <4 x float> %12065, float 0.000000e+00, i32 2
  %12067 = insertelement <4 x float> %12066, float 0.000000e+00, i32 3
  %12068 = call <4 x float> @llvm.fma.f32.400(<4 x float> %12061, <4 x float> %12067, <4 x float> zeroinitializer)
  %12069 = extractelement <4 x float> %12068, i32 0
  %12070 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12071 = getelementptr inbounds i8, i8* %12070, i64 60
  %12072 = bitcast i8* %12071 to float*
  store float %12069, float* %12072, align 4
  %12073 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12074 = getelementptr inbounds i8, i8* %12073, i64 48
  %12075 = bitcast i8* %12074 to float*
  %12076 = load float, float* %12075, align 4
  %12077 = insertelement <4 x float> zeroinitializer, float %12076, i32 0
  %12078 = insertelement <4 x float> %12077, float 1.000000e+00, i32 1
  %12079 = insertelement <4 x float> %12078, float 1.000000e+00, i32 2
  %12080 = insertelement <4 x float> %12079, float 1.000000e+00, i32 3
  %12081 = getelementptr inbounds float, float* %1, i64 3
  %12082 = load float, float* %12081, align 4
  %12083 = insertelement <4 x float> zeroinitializer, float %12082, i32 0
  %12084 = insertelement <4 x float> %12083, float 0.000000e+00, i32 1
  %12085 = insertelement <4 x float> %12084, float 0.000000e+00, i32 2
  %12086 = insertelement <4 x float> %12085, float 0.000000e+00, i32 3
  %12087 = fmul <4 x float> %12080, %12086
  %12088 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12089 = getelementptr inbounds i8, i8* %12088, i64 52
  %12090 = bitcast i8* %12089 to float*
  %12091 = load float, float* %12090, align 4
  %12092 = insertelement <4 x float> zeroinitializer, float %12091, i32 0
  %12093 = insertelement <4 x float> %12092, float 0.000000e+00, i32 1
  %12094 = insertelement <4 x float> %12093, float 0.000000e+00, i32 2
  %12095 = insertelement <4 x float> %12094, float 0.000000e+00, i32 3
  %12096 = getelementptr inbounds float, float* %1, i64 7
  %12097 = load float, float* %12096, align 4
  %12098 = insertelement <4 x float> zeroinitializer, float %12097, i32 0
  %12099 = insertelement <4 x float> %12098, float 0.000000e+00, i32 1
  %12100 = insertelement <4 x float> %12099, float 0.000000e+00, i32 2
  %12101 = insertelement <4 x float> %12100, float 0.000000e+00, i32 3
  %12102 = call <4 x float> @llvm.fma.f32.401(<4 x float> %12095, <4 x float> %12101, <4 x float> %12087)
  %12103 = extractelement <4 x float> %12102, i32 0
  %12104 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12105 = getelementptr inbounds i8, i8* %12104, i64 60
  %12106 = bitcast i8* %12105 to float*
  store float %12103, float* %12106, align 4
  %12107 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12108 = getelementptr inbounds i8, i8* %12107, i64 48
  %12109 = bitcast i8* %12108 to float*
  %12110 = load float, float* %12109, align 4
  %12111 = insertelement <4 x float> zeroinitializer, float %12110, i32 0
  %12112 = insertelement <4 x float> %12111, float 1.000000e+00, i32 1
  %12113 = insertelement <4 x float> %12112, float 1.000000e+00, i32 2
  %12114 = insertelement <4 x float> %12113, float 1.000000e+00, i32 3
  %12115 = getelementptr inbounds float, float* %1, i64 3
  %12116 = load float, float* %12115, align 4
  %12117 = insertelement <4 x float> zeroinitializer, float %12116, i32 0
  %12118 = insertelement <4 x float> %12117, float 0.000000e+00, i32 1
  %12119 = insertelement <4 x float> %12118, float 0.000000e+00, i32 2
  %12120 = insertelement <4 x float> %12119, float 0.000000e+00, i32 3
  %12121 = fmul <4 x float> %12114, %12120
  %12122 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12123 = getelementptr inbounds i8, i8* %12122, i64 52
  %12124 = bitcast i8* %12123 to float*
  %12125 = load float, float* %12124, align 4
  %12126 = insertelement <4 x float> zeroinitializer, float %12125, i32 0
  %12127 = insertelement <4 x float> %12126, float 1.000000e+00, i32 1
  %12128 = insertelement <4 x float> %12127, float 1.000000e+00, i32 2
  %12129 = insertelement <4 x float> %12128, float 1.000000e+00, i32 3
  %12130 = getelementptr inbounds float, float* %1, i64 7
  %12131 = load float, float* %12130, align 4
  %12132 = insertelement <4 x float> zeroinitializer, float %12131, i32 0
  %12133 = insertelement <4 x float> %12132, float 0.000000e+00, i32 1
  %12134 = insertelement <4 x float> %12133, float 0.000000e+00, i32 2
  %12135 = insertelement <4 x float> %12134, float 0.000000e+00, i32 3
  %12136 = call <4 x float> @llvm.fma.f32.402(<4 x float> %12129, <4 x float> %12135, <4 x float> %12121)
  %12137 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12138 = getelementptr inbounds i8, i8* %12137, i64 56
  %12139 = bitcast i8* %12138 to float*
  %12140 = load float, float* %12139, align 4
  %12141 = insertelement <4 x float> zeroinitializer, float %12140, i32 0
  %12142 = insertelement <4 x float> %12141, float 0.000000e+00, i32 1
  %12143 = insertelement <4 x float> %12142, float 0.000000e+00, i32 2
  %12144 = insertelement <4 x float> %12143, float 0.000000e+00, i32 3
  %12145 = getelementptr inbounds float, float* %1, i64 11
  %12146 = load float, float* %12145, align 4
  %12147 = insertelement <4 x float> zeroinitializer, float %12146, i32 0
  %12148 = insertelement <4 x float> %12147, float 0.000000e+00, i32 1
  %12149 = insertelement <4 x float> %12148, float 0.000000e+00, i32 2
  %12150 = insertelement <4 x float> %12149, float 0.000000e+00, i32 3
  %12151 = call <4 x float> @llvm.fma.f32.403(<4 x float> %12144, <4 x float> %12150, <4 x float> %12136)
  %12152 = extractelement <4 x float> %12151, i32 0
  %12153 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12154 = getelementptr inbounds i8, i8* %12153, i64 60
  %12155 = bitcast i8* %12154 to float*
  store float %12152, float* %12155, align 4
  %12156 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12157 = getelementptr inbounds i8, i8* %12156, i64 48
  %12158 = bitcast i8* %12157 to float*
  %12159 = load float, float* %12158, align 4
  %12160 = insertelement <4 x float> zeroinitializer, float %12159, i32 0
  %12161 = insertelement <4 x float> %12160, float 1.000000e+00, i32 1
  %12162 = insertelement <4 x float> %12161, float 1.000000e+00, i32 2
  %12163 = insertelement <4 x float> %12162, float 1.000000e+00, i32 3
  %12164 = getelementptr inbounds float, float* %1, i64 3
  %12165 = load float, float* %12164, align 4
  %12166 = insertelement <4 x float> zeroinitializer, float %12165, i32 0
  %12167 = insertelement <4 x float> %12166, float 0.000000e+00, i32 1
  %12168 = insertelement <4 x float> %12167, float 0.000000e+00, i32 2
  %12169 = insertelement <4 x float> %12168, float 0.000000e+00, i32 3
  %12170 = fmul <4 x float> %12163, %12169
  %12171 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12172 = getelementptr inbounds i8, i8* %12171, i64 52
  %12173 = bitcast i8* %12172 to float*
  %12174 = load float, float* %12173, align 4
  %12175 = insertelement <4 x float> zeroinitializer, float %12174, i32 0
  %12176 = insertelement <4 x float> %12175, float 1.000000e+00, i32 1
  %12177 = insertelement <4 x float> %12176, float 1.000000e+00, i32 2
  %12178 = insertelement <4 x float> %12177, float 1.000000e+00, i32 3
  %12179 = getelementptr inbounds float, float* %1, i64 7
  %12180 = load float, float* %12179, align 4
  %12181 = insertelement <4 x float> zeroinitializer, float %12180, i32 0
  %12182 = insertelement <4 x float> %12181, float 0.000000e+00, i32 1
  %12183 = insertelement <4 x float> %12182, float 0.000000e+00, i32 2
  %12184 = insertelement <4 x float> %12183, float 0.000000e+00, i32 3
  %12185 = call <4 x float> @llvm.fma.f32.404(<4 x float> %12178, <4 x float> %12184, <4 x float> %12170)
  %12186 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12187 = getelementptr inbounds i8, i8* %12186, i64 56
  %12188 = bitcast i8* %12187 to float*
  %12189 = load float, float* %12188, align 4
  %12190 = insertelement <4 x float> zeroinitializer, float %12189, i32 0
  %12191 = insertelement <4 x float> %12190, float 1.000000e+00, i32 1
  %12192 = insertelement <4 x float> %12191, float 1.000000e+00, i32 2
  %12193 = insertelement <4 x float> %12192, float 1.000000e+00, i32 3
  %12194 = getelementptr inbounds float, float* %1, i64 11
  %12195 = load float, float* %12194, align 4
  %12196 = insertelement <4 x float> zeroinitializer, float %12195, i32 0
  %12197 = insertelement <4 x float> %12196, float 0.000000e+00, i32 1
  %12198 = insertelement <4 x float> %12197, float 0.000000e+00, i32 2
  %12199 = insertelement <4 x float> %12198, float 0.000000e+00, i32 3
  %12200 = call <4 x float> @llvm.fma.f32.405(<4 x float> %12193, <4 x float> %12199, <4 x float> %12185)
  %12201 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12202 = getelementptr inbounds i8, i8* %12201, i64 60
  %12203 = bitcast i8* %12202 to float*
  %12204 = load float, float* %12203, align 4
  %12205 = insertelement <4 x float> zeroinitializer, float %12204, i32 0
  %12206 = insertelement <4 x float> %12205, float 0.000000e+00, i32 1
  %12207 = insertelement <4 x float> %12206, float 0.000000e+00, i32 2
  %12208 = insertelement <4 x float> %12207, float 0.000000e+00, i32 3
  %12209 = getelementptr inbounds float, float* %1, i64 15
  %12210 = load float, float* %12209, align 4
  %12211 = insertelement <4 x float> zeroinitializer, float %12210, i32 0
  %12212 = insertelement <4 x float> %12211, float 0.000000e+00, i32 1
  %12213 = insertelement <4 x float> %12212, float 0.000000e+00, i32 2
  %12214 = insertelement <4 x float> %12213, float 0.000000e+00, i32 3
  %12215 = call <4 x float> @llvm.fma.f32.406(<4 x float> %12208, <4 x float> %12214, <4 x float> %12200)
  %12216 = extractelement <4 x float> %12215, i32 0
  %12217 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12218 = getelementptr inbounds i8, i8* %12217, i64 60
  %12219 = bitcast i8* %12218 to float*
  store float %12216, float* %12219, align 4
  %12220 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12221 = bitcast i8* %12220 to float*
  store float 0.000000e+00, float* %12221, align 4
  %12222 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12223 = bitcast i8* %12222 to float*
  %12224 = load float, float* %12223, align 4
  %12225 = insertelement <4 x float> zeroinitializer, float %12224, i32 0
  %12226 = insertelement <4 x float> %12225, float 0.000000e+00, i32 1
  %12227 = insertelement <4 x float> %12226, float 0.000000e+00, i32 2
  %12228 = insertelement <4 x float> %12227, float 0.000000e+00, i32 3
  %12229 = load float, float* %2, align 4
  %12230 = insertelement <4 x float> zeroinitializer, float %12229, i32 0
  %12231 = insertelement <4 x float> %12230, float 0.000000e+00, i32 1
  %12232 = insertelement <4 x float> %12231, float 0.000000e+00, i32 2
  %12233 = insertelement <4 x float> %12232, float 0.000000e+00, i32 3
  %12234 = call <4 x float> @llvm.fma.f32.407(<4 x float> %12228, <4 x float> %12233, <4 x float> zeroinitializer)
  %12235 = extractelement <4 x float> %12234, i32 0
  %12236 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12237 = bitcast i8* %12236 to float*
  store float %12235, float* %12237, align 4
  %12238 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12239 = bitcast i8* %12238 to float*
  %12240 = load float, float* %12239, align 4
  %12241 = insertelement <4 x float> zeroinitializer, float %12240, i32 0
  %12242 = insertelement <4 x float> %12241, float 1.000000e+00, i32 1
  %12243 = insertelement <4 x float> %12242, float 1.000000e+00, i32 2
  %12244 = insertelement <4 x float> %12243, float 1.000000e+00, i32 3
  %12245 = load float, float* %2, align 4
  %12246 = insertelement <4 x float> zeroinitializer, float %12245, i32 0
  %12247 = insertelement <4 x float> %12246, float 0.000000e+00, i32 1
  %12248 = insertelement <4 x float> %12247, float 0.000000e+00, i32 2
  %12249 = insertelement <4 x float> %12248, float 0.000000e+00, i32 3
  %12250 = fmul <4 x float> %12244, %12249
  %12251 = fadd <4 x float> %12250, zeroinitializer
  %12252 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12253 = getelementptr inbounds i8, i8* %12252, i64 4
  %12254 = bitcast i8* %12253 to float*
  %12255 = load float, float* %12254, align 4
  %12256 = insertelement <4 x float> zeroinitializer, float %12255, i32 0
  %12257 = insertelement <4 x float> %12256, float 0.000000e+00, i32 1
  %12258 = insertelement <4 x float> %12257, float 0.000000e+00, i32 2
  %12259 = insertelement <4 x float> %12258, float 0.000000e+00, i32 3
  %12260 = getelementptr inbounds float, float* %2, i64 4
  %12261 = load float, float* %12260, align 4
  %12262 = insertelement <4 x float> zeroinitializer, float %12261, i32 0
  %12263 = insertelement <4 x float> %12262, float 0.000000e+00, i32 1
  %12264 = insertelement <4 x float> %12263, float 0.000000e+00, i32 2
  %12265 = insertelement <4 x float> %12264, float 0.000000e+00, i32 3
  %12266 = call <4 x float> @llvm.fma.f32.408(<4 x float> %12259, <4 x float> %12265, <4 x float> %12251)
  %12267 = extractelement <4 x float> %12266, i32 0
  %12268 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12269 = bitcast i8* %12268 to float*
  store float %12267, float* %12269, align 4
  %12270 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12271 = bitcast i8* %12270 to float*
  %12272 = load float, float* %12271, align 4
  %12273 = insertelement <4 x float> zeroinitializer, float %12272, i32 0
  %12274 = insertelement <4 x float> %12273, float 1.000000e+00, i32 1
  %12275 = insertelement <4 x float> %12274, float 1.000000e+00, i32 2
  %12276 = insertelement <4 x float> %12275, float 1.000000e+00, i32 3
  %12277 = load float, float* %2, align 4
  %12278 = insertelement <4 x float> zeroinitializer, float %12277, i32 0
  %12279 = insertelement <4 x float> %12278, float 0.000000e+00, i32 1
  %12280 = insertelement <4 x float> %12279, float 0.000000e+00, i32 2
  %12281 = insertelement <4 x float> %12280, float 0.000000e+00, i32 3
  %12282 = fmul <4 x float> %12276, %12281
  %12283 = fadd <4 x float> %12282, zeroinitializer
  %12284 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12285 = getelementptr inbounds i8, i8* %12284, i64 4
  %12286 = bitcast i8* %12285 to float*
  %12287 = load float, float* %12286, align 4
  %12288 = insertelement <4 x float> zeroinitializer, float %12287, i32 0
  %12289 = insertelement <4 x float> %12288, float 1.000000e+00, i32 1
  %12290 = insertelement <4 x float> %12289, float 1.000000e+00, i32 2
  %12291 = insertelement <4 x float> %12290, float 1.000000e+00, i32 3
  %12292 = getelementptr inbounds float, float* %2, i64 4
  %12293 = load float, float* %12292, align 4
  %12294 = insertelement <4 x float> zeroinitializer, float %12293, i32 0
  %12295 = insertelement <4 x float> %12294, float 0.000000e+00, i32 1
  %12296 = insertelement <4 x float> %12295, float 0.000000e+00, i32 2
  %12297 = insertelement <4 x float> %12296, float 0.000000e+00, i32 3
  %12298 = call <4 x float> @llvm.fma.f32.409(<4 x float> %12291, <4 x float> %12297, <4 x float> %12283)
  %12299 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12300 = getelementptr inbounds i8, i8* %12299, i64 8
  %12301 = bitcast i8* %12300 to float*
  %12302 = load float, float* %12301, align 4
  %12303 = insertelement <4 x float> zeroinitializer, float %12302, i32 0
  %12304 = insertelement <4 x float> %12303, float 0.000000e+00, i32 1
  %12305 = insertelement <4 x float> %12304, float 0.000000e+00, i32 2
  %12306 = insertelement <4 x float> %12305, float 0.000000e+00, i32 3
  %12307 = getelementptr inbounds float, float* %2, i64 8
  %12308 = load float, float* %12307, align 4
  %12309 = insertelement <4 x float> zeroinitializer, float %12308, i32 0
  %12310 = insertelement <4 x float> %12309, float 0.000000e+00, i32 1
  %12311 = insertelement <4 x float> %12310, float 0.000000e+00, i32 2
  %12312 = insertelement <4 x float> %12311, float 0.000000e+00, i32 3
  %12313 = call <4 x float> @llvm.fma.f32.410(<4 x float> %12306, <4 x float> %12312, <4 x float> %12298)
  %12314 = extractelement <4 x float> %12313, i32 0
  %12315 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12316 = bitcast i8* %12315 to float*
  store float %12314, float* %12316, align 4
  %12317 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12318 = bitcast i8* %12317 to float*
  %12319 = load float, float* %12318, align 4
  %12320 = insertelement <4 x float> zeroinitializer, float %12319, i32 0
  %12321 = insertelement <4 x float> %12320, float 1.000000e+00, i32 1
  %12322 = insertelement <4 x float> %12321, float 1.000000e+00, i32 2
  %12323 = insertelement <4 x float> %12322, float 1.000000e+00, i32 3
  %12324 = load float, float* %2, align 4
  %12325 = insertelement <4 x float> zeroinitializer, float %12324, i32 0
  %12326 = insertelement <4 x float> %12325, float 0.000000e+00, i32 1
  %12327 = insertelement <4 x float> %12326, float 0.000000e+00, i32 2
  %12328 = insertelement <4 x float> %12327, float 0.000000e+00, i32 3
  %12329 = fmul <4 x float> %12323, %12328
  %12330 = fadd <4 x float> %12329, zeroinitializer
  %12331 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12332 = getelementptr inbounds i8, i8* %12331, i64 4
  %12333 = bitcast i8* %12332 to float*
  %12334 = load float, float* %12333, align 4
  %12335 = insertelement <4 x float> zeroinitializer, float %12334, i32 0
  %12336 = insertelement <4 x float> %12335, float 1.000000e+00, i32 1
  %12337 = insertelement <4 x float> %12336, float 1.000000e+00, i32 2
  %12338 = insertelement <4 x float> %12337, float 1.000000e+00, i32 3
  %12339 = getelementptr inbounds float, float* %2, i64 4
  %12340 = load float, float* %12339, align 4
  %12341 = insertelement <4 x float> zeroinitializer, float %12340, i32 0
  %12342 = insertelement <4 x float> %12341, float 0.000000e+00, i32 1
  %12343 = insertelement <4 x float> %12342, float 0.000000e+00, i32 2
  %12344 = insertelement <4 x float> %12343, float 0.000000e+00, i32 3
  %12345 = call <4 x float> @llvm.fma.f32.411(<4 x float> %12338, <4 x float> %12344, <4 x float> %12330)
  %12346 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12347 = getelementptr inbounds i8, i8* %12346, i64 8
  %12348 = bitcast i8* %12347 to float*
  %12349 = load float, float* %12348, align 4
  %12350 = insertelement <4 x float> zeroinitializer, float %12349, i32 0
  %12351 = insertelement <4 x float> %12350, float 1.000000e+00, i32 1
  %12352 = insertelement <4 x float> %12351, float 1.000000e+00, i32 2
  %12353 = insertelement <4 x float> %12352, float 1.000000e+00, i32 3
  %12354 = getelementptr inbounds float, float* %2, i64 8
  %12355 = load float, float* %12354, align 4
  %12356 = insertelement <4 x float> zeroinitializer, float %12355, i32 0
  %12357 = insertelement <4 x float> %12356, float 0.000000e+00, i32 1
  %12358 = insertelement <4 x float> %12357, float 0.000000e+00, i32 2
  %12359 = insertelement <4 x float> %12358, float 0.000000e+00, i32 3
  %12360 = call <4 x float> @llvm.fma.f32.412(<4 x float> %12353, <4 x float> %12359, <4 x float> %12345)
  %12361 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12362 = getelementptr inbounds i8, i8* %12361, i64 12
  %12363 = bitcast i8* %12362 to float*
  %12364 = load float, float* %12363, align 4
  %12365 = insertelement <4 x float> zeroinitializer, float %12364, i32 0
  %12366 = insertelement <4 x float> %12365, float 0.000000e+00, i32 1
  %12367 = insertelement <4 x float> %12366, float 0.000000e+00, i32 2
  %12368 = insertelement <4 x float> %12367, float 0.000000e+00, i32 3
  %12369 = getelementptr inbounds float, float* %2, i64 12
  %12370 = load float, float* %12369, align 4
  %12371 = insertelement <4 x float> zeroinitializer, float %12370, i32 0
  %12372 = insertelement <4 x float> %12371, float 0.000000e+00, i32 1
  %12373 = insertelement <4 x float> %12372, float 0.000000e+00, i32 2
  %12374 = insertelement <4 x float> %12373, float 0.000000e+00, i32 3
  %12375 = call <4 x float> @llvm.fma.f32.413(<4 x float> %12368, <4 x float> %12374, <4 x float> %12360)
  %12376 = extractelement <4 x float> %12375, i32 0
  %12377 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12378 = bitcast i8* %12377 to float*
  store float %12376, float* %12378, align 4
  %12379 = extractelement <4 x float> %12375, i32 1
  %12380 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12381 = getelementptr inbounds i8, i8* %12380, i64 4
  %12382 = bitcast i8* %12381 to float*
  store float %12379, float* %12382, align 4
  %12383 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12384 = bitcast i8* %12383 to float*
  %12385 = load float, float* %12384, align 4
  %12386 = insertelement <4 x float> zeroinitializer, float %12385, i32 0
  %12387 = insertelement <4 x float> %12386, float 0.000000e+00, i32 1
  %12388 = insertelement <4 x float> %12387, float 0.000000e+00, i32 2
  %12389 = insertelement <4 x float> %12388, float 0.000000e+00, i32 3
  %12390 = getelementptr inbounds float, float* %2, i64 1
  %12391 = load float, float* %12390, align 4
  %12392 = insertelement <4 x float> zeroinitializer, float %12391, i32 0
  %12393 = insertelement <4 x float> %12392, float 0.000000e+00, i32 1
  %12394 = insertelement <4 x float> %12393, float 0.000000e+00, i32 2
  %12395 = insertelement <4 x float> %12394, float 0.000000e+00, i32 3
  %12396 = call <4 x float> @llvm.fma.f32.414(<4 x float> %12389, <4 x float> %12395, <4 x float> zeroinitializer)
  %12397 = extractelement <4 x float> %12396, i32 0
  %12398 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12399 = getelementptr inbounds i8, i8* %12398, i64 4
  %12400 = bitcast i8* %12399 to float*
  store float %12397, float* %12400, align 4
  %12401 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12402 = bitcast i8* %12401 to float*
  %12403 = load float, float* %12402, align 4
  %12404 = insertelement <4 x float> zeroinitializer, float %12403, i32 0
  %12405 = insertelement <4 x float> %12404, float 1.000000e+00, i32 1
  %12406 = insertelement <4 x float> %12405, float 1.000000e+00, i32 2
  %12407 = insertelement <4 x float> %12406, float 1.000000e+00, i32 3
  %12408 = getelementptr inbounds float, float* %2, i64 1
  %12409 = load float, float* %12408, align 4
  %12410 = insertelement <4 x float> zeroinitializer, float %12409, i32 0
  %12411 = insertelement <4 x float> %12410, float 0.000000e+00, i32 1
  %12412 = insertelement <4 x float> %12411, float 0.000000e+00, i32 2
  %12413 = insertelement <4 x float> %12412, float 0.000000e+00, i32 3
  %12414 = fmul <4 x float> %12407, %12413
  %12415 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12416 = getelementptr inbounds i8, i8* %12415, i64 4
  %12417 = bitcast i8* %12416 to float*
  %12418 = load float, float* %12417, align 4
  %12419 = insertelement <4 x float> zeroinitializer, float %12418, i32 0
  %12420 = insertelement <4 x float> %12419, float 0.000000e+00, i32 1
  %12421 = insertelement <4 x float> %12420, float 0.000000e+00, i32 2
  %12422 = insertelement <4 x float> %12421, float 0.000000e+00, i32 3
  %12423 = getelementptr inbounds float, float* %2, i64 5
  %12424 = load float, float* %12423, align 4
  %12425 = insertelement <4 x float> zeroinitializer, float %12424, i32 0
  %12426 = insertelement <4 x float> %12425, float 0.000000e+00, i32 1
  %12427 = insertelement <4 x float> %12426, float 0.000000e+00, i32 2
  %12428 = insertelement <4 x float> %12427, float 0.000000e+00, i32 3
  %12429 = call <4 x float> @llvm.fma.f32.415(<4 x float> %12422, <4 x float> %12428, <4 x float> %12414)
  %12430 = extractelement <4 x float> %12429, i32 0
  %12431 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12432 = getelementptr inbounds i8, i8* %12431, i64 4
  %12433 = bitcast i8* %12432 to float*
  store float %12430, float* %12433, align 4
  %12434 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12435 = bitcast i8* %12434 to float*
  %12436 = load float, float* %12435, align 4
  %12437 = insertelement <4 x float> zeroinitializer, float %12436, i32 0
  %12438 = insertelement <4 x float> %12437, float 1.000000e+00, i32 1
  %12439 = insertelement <4 x float> %12438, float 1.000000e+00, i32 2
  %12440 = insertelement <4 x float> %12439, float 1.000000e+00, i32 3
  %12441 = getelementptr inbounds float, float* %2, i64 1
  %12442 = load float, float* %12441, align 4
  %12443 = insertelement <4 x float> zeroinitializer, float %12442, i32 0
  %12444 = insertelement <4 x float> %12443, float 0.000000e+00, i32 1
  %12445 = insertelement <4 x float> %12444, float 0.000000e+00, i32 2
  %12446 = insertelement <4 x float> %12445, float 0.000000e+00, i32 3
  %12447 = fmul <4 x float> %12440, %12446
  %12448 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12449 = getelementptr inbounds i8, i8* %12448, i64 4
  %12450 = bitcast i8* %12449 to float*
  %12451 = load float, float* %12450, align 4
  %12452 = insertelement <4 x float> zeroinitializer, float %12451, i32 0
  %12453 = insertelement <4 x float> %12452, float 1.000000e+00, i32 1
  %12454 = insertelement <4 x float> %12453, float 1.000000e+00, i32 2
  %12455 = insertelement <4 x float> %12454, float 1.000000e+00, i32 3
  %12456 = getelementptr inbounds float, float* %2, i64 5
  %12457 = load float, float* %12456, align 4
  %12458 = insertelement <4 x float> zeroinitializer, float %12457, i32 0
  %12459 = insertelement <4 x float> %12458, float 0.000000e+00, i32 1
  %12460 = insertelement <4 x float> %12459, float 0.000000e+00, i32 2
  %12461 = insertelement <4 x float> %12460, float 0.000000e+00, i32 3
  %12462 = call <4 x float> @llvm.fma.f32.416(<4 x float> %12455, <4 x float> %12461, <4 x float> %12447)
  %12463 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12464 = getelementptr inbounds i8, i8* %12463, i64 8
  %12465 = bitcast i8* %12464 to float*
  %12466 = load float, float* %12465, align 4
  %12467 = insertelement <4 x float> zeroinitializer, float %12466, i32 0
  %12468 = insertelement <4 x float> %12467, float 0.000000e+00, i32 1
  %12469 = insertelement <4 x float> %12468, float 0.000000e+00, i32 2
  %12470 = insertelement <4 x float> %12469, float 0.000000e+00, i32 3
  %12471 = getelementptr inbounds float, float* %2, i64 9
  %12472 = load float, float* %12471, align 4
  %12473 = insertelement <4 x float> zeroinitializer, float %12472, i32 0
  %12474 = insertelement <4 x float> %12473, float 0.000000e+00, i32 1
  %12475 = insertelement <4 x float> %12474, float 0.000000e+00, i32 2
  %12476 = insertelement <4 x float> %12475, float 0.000000e+00, i32 3
  %12477 = call <4 x float> @llvm.fma.f32.417(<4 x float> %12470, <4 x float> %12476, <4 x float> %12462)
  %12478 = extractelement <4 x float> %12477, i32 0
  %12479 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12480 = getelementptr inbounds i8, i8* %12479, i64 4
  %12481 = bitcast i8* %12480 to float*
  store float %12478, float* %12481, align 4
  %12482 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12483 = bitcast i8* %12482 to float*
  %12484 = load float, float* %12483, align 4
  %12485 = insertelement <4 x float> zeroinitializer, float %12484, i32 0
  %12486 = insertelement <4 x float> %12485, float 1.000000e+00, i32 1
  %12487 = insertelement <4 x float> %12486, float 1.000000e+00, i32 2
  %12488 = insertelement <4 x float> %12487, float 1.000000e+00, i32 3
  %12489 = getelementptr inbounds float, float* %2, i64 1
  %12490 = load float, float* %12489, align 4
  %12491 = insertelement <4 x float> zeroinitializer, float %12490, i32 0
  %12492 = insertelement <4 x float> %12491, float 0.000000e+00, i32 1
  %12493 = insertelement <4 x float> %12492, float 0.000000e+00, i32 2
  %12494 = insertelement <4 x float> %12493, float 0.000000e+00, i32 3
  %12495 = fmul <4 x float> %12488, %12494
  %12496 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12497 = getelementptr inbounds i8, i8* %12496, i64 4
  %12498 = bitcast i8* %12497 to float*
  %12499 = load float, float* %12498, align 4
  %12500 = insertelement <4 x float> zeroinitializer, float %12499, i32 0
  %12501 = insertelement <4 x float> %12500, float 1.000000e+00, i32 1
  %12502 = insertelement <4 x float> %12501, float 1.000000e+00, i32 2
  %12503 = insertelement <4 x float> %12502, float 1.000000e+00, i32 3
  %12504 = getelementptr inbounds float, float* %2, i64 5
  %12505 = load float, float* %12504, align 4
  %12506 = insertelement <4 x float> zeroinitializer, float %12505, i32 0
  %12507 = insertelement <4 x float> %12506, float 0.000000e+00, i32 1
  %12508 = insertelement <4 x float> %12507, float 0.000000e+00, i32 2
  %12509 = insertelement <4 x float> %12508, float 0.000000e+00, i32 3
  %12510 = call <4 x float> @llvm.fma.f32.418(<4 x float> %12503, <4 x float> %12509, <4 x float> %12495)
  %12511 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12512 = getelementptr inbounds i8, i8* %12511, i64 8
  %12513 = bitcast i8* %12512 to float*
  %12514 = load float, float* %12513, align 4
  %12515 = insertelement <4 x float> zeroinitializer, float %12514, i32 0
  %12516 = insertelement <4 x float> %12515, float 1.000000e+00, i32 1
  %12517 = insertelement <4 x float> %12516, float 1.000000e+00, i32 2
  %12518 = insertelement <4 x float> %12517, float 1.000000e+00, i32 3
  %12519 = getelementptr inbounds float, float* %2, i64 9
  %12520 = load float, float* %12519, align 4
  %12521 = insertelement <4 x float> zeroinitializer, float %12520, i32 0
  %12522 = insertelement <4 x float> %12521, float 0.000000e+00, i32 1
  %12523 = insertelement <4 x float> %12522, float 0.000000e+00, i32 2
  %12524 = insertelement <4 x float> %12523, float 0.000000e+00, i32 3
  %12525 = call <4 x float> @llvm.fma.f32.419(<4 x float> %12518, <4 x float> %12524, <4 x float> %12510)
  %12526 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12527 = getelementptr inbounds i8, i8* %12526, i64 12
  %12528 = bitcast i8* %12527 to float*
  %12529 = load float, float* %12528, align 4
  %12530 = insertelement <4 x float> zeroinitializer, float %12529, i32 0
  %12531 = insertelement <4 x float> %12530, float 0.000000e+00, i32 1
  %12532 = insertelement <4 x float> %12531, float 0.000000e+00, i32 2
  %12533 = insertelement <4 x float> %12532, float 0.000000e+00, i32 3
  %12534 = getelementptr inbounds float, float* %2, i64 13
  %12535 = load float, float* %12534, align 4
  %12536 = insertelement <4 x float> zeroinitializer, float %12535, i32 0
  %12537 = insertelement <4 x float> %12536, float 0.000000e+00, i32 1
  %12538 = insertelement <4 x float> %12537, float 0.000000e+00, i32 2
  %12539 = insertelement <4 x float> %12538, float 0.000000e+00, i32 3
  %12540 = call <4 x float> @llvm.fma.f32.420(<4 x float> %12533, <4 x float> %12539, <4 x float> %12525)
  %12541 = extractelement <4 x float> %12540, i32 0
  %12542 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12543 = getelementptr inbounds i8, i8* %12542, i64 4
  %12544 = bitcast i8* %12543 to float*
  store float %12541, float* %12544, align 4
  %12545 = extractelement <4 x float> %12540, i32 1
  %12546 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12547 = getelementptr inbounds i8, i8* %12546, i64 8
  %12548 = bitcast i8* %12547 to float*
  store float %12545, float* %12548, align 4
  %12549 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12550 = bitcast i8* %12549 to float*
  %12551 = load float, float* %12550, align 4
  %12552 = insertelement <4 x float> zeroinitializer, float %12551, i32 0
  %12553 = insertelement <4 x float> %12552, float 0.000000e+00, i32 1
  %12554 = insertelement <4 x float> %12553, float 0.000000e+00, i32 2
  %12555 = insertelement <4 x float> %12554, float 0.000000e+00, i32 3
  %12556 = getelementptr inbounds float, float* %2, i64 2
  %12557 = load float, float* %12556, align 4
  %12558 = insertelement <4 x float> zeroinitializer, float %12557, i32 0
  %12559 = insertelement <4 x float> %12558, float 0.000000e+00, i32 1
  %12560 = insertelement <4 x float> %12559, float 0.000000e+00, i32 2
  %12561 = insertelement <4 x float> %12560, float 0.000000e+00, i32 3
  %12562 = call <4 x float> @llvm.fma.f32.421(<4 x float> %12555, <4 x float> %12561, <4 x float> zeroinitializer)
  %12563 = extractelement <4 x float> %12562, i32 0
  %12564 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12565 = getelementptr inbounds i8, i8* %12564, i64 8
  %12566 = bitcast i8* %12565 to float*
  store float %12563, float* %12566, align 4
  %12567 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12568 = bitcast i8* %12567 to float*
  %12569 = load float, float* %12568, align 4
  %12570 = insertelement <4 x float> zeroinitializer, float %12569, i32 0
  %12571 = insertelement <4 x float> %12570, float 1.000000e+00, i32 1
  %12572 = insertelement <4 x float> %12571, float 1.000000e+00, i32 2
  %12573 = insertelement <4 x float> %12572, float 1.000000e+00, i32 3
  %12574 = getelementptr inbounds float, float* %2, i64 2
  %12575 = load float, float* %12574, align 4
  %12576 = insertelement <4 x float> zeroinitializer, float %12575, i32 0
  %12577 = insertelement <4 x float> %12576, float 0.000000e+00, i32 1
  %12578 = insertelement <4 x float> %12577, float 0.000000e+00, i32 2
  %12579 = insertelement <4 x float> %12578, float 0.000000e+00, i32 3
  %12580 = fmul <4 x float> %12573, %12579
  %12581 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12582 = getelementptr inbounds i8, i8* %12581, i64 4
  %12583 = bitcast i8* %12582 to float*
  %12584 = load float, float* %12583, align 4
  %12585 = insertelement <4 x float> zeroinitializer, float %12584, i32 0
  %12586 = insertelement <4 x float> %12585, float 0.000000e+00, i32 1
  %12587 = insertelement <4 x float> %12586, float 0.000000e+00, i32 2
  %12588 = insertelement <4 x float> %12587, float 0.000000e+00, i32 3
  %12589 = getelementptr inbounds float, float* %2, i64 6
  %12590 = load float, float* %12589, align 4
  %12591 = insertelement <4 x float> zeroinitializer, float %12590, i32 0
  %12592 = insertelement <4 x float> %12591, float 0.000000e+00, i32 1
  %12593 = insertelement <4 x float> %12592, float 0.000000e+00, i32 2
  %12594 = insertelement <4 x float> %12593, float 0.000000e+00, i32 3
  %12595 = call <4 x float> @llvm.fma.f32.422(<4 x float> %12588, <4 x float> %12594, <4 x float> %12580)
  %12596 = extractelement <4 x float> %12595, i32 0
  %12597 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12598 = getelementptr inbounds i8, i8* %12597, i64 8
  %12599 = bitcast i8* %12598 to float*
  store float %12596, float* %12599, align 4
  %12600 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12601 = bitcast i8* %12600 to float*
  %12602 = load float, float* %12601, align 4
  %12603 = insertelement <4 x float> zeroinitializer, float %12602, i32 0
  %12604 = insertelement <4 x float> %12603, float 1.000000e+00, i32 1
  %12605 = insertelement <4 x float> %12604, float 1.000000e+00, i32 2
  %12606 = insertelement <4 x float> %12605, float 1.000000e+00, i32 3
  %12607 = getelementptr inbounds float, float* %2, i64 2
  %12608 = load float, float* %12607, align 4
  %12609 = insertelement <4 x float> zeroinitializer, float %12608, i32 0
  %12610 = insertelement <4 x float> %12609, float 0.000000e+00, i32 1
  %12611 = insertelement <4 x float> %12610, float 0.000000e+00, i32 2
  %12612 = insertelement <4 x float> %12611, float 0.000000e+00, i32 3
  %12613 = fmul <4 x float> %12606, %12612
  %12614 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12615 = getelementptr inbounds i8, i8* %12614, i64 4
  %12616 = bitcast i8* %12615 to float*
  %12617 = load float, float* %12616, align 4
  %12618 = insertelement <4 x float> zeroinitializer, float %12617, i32 0
  %12619 = insertelement <4 x float> %12618, float 1.000000e+00, i32 1
  %12620 = insertelement <4 x float> %12619, float 1.000000e+00, i32 2
  %12621 = insertelement <4 x float> %12620, float 1.000000e+00, i32 3
  %12622 = getelementptr inbounds float, float* %2, i64 6
  %12623 = load float, float* %12622, align 4
  %12624 = insertelement <4 x float> zeroinitializer, float %12623, i32 0
  %12625 = insertelement <4 x float> %12624, float 0.000000e+00, i32 1
  %12626 = insertelement <4 x float> %12625, float 0.000000e+00, i32 2
  %12627 = insertelement <4 x float> %12626, float 0.000000e+00, i32 3
  %12628 = call <4 x float> @llvm.fma.f32.423(<4 x float> %12621, <4 x float> %12627, <4 x float> %12613)
  %12629 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12630 = getelementptr inbounds i8, i8* %12629, i64 8
  %12631 = bitcast i8* %12630 to float*
  %12632 = load float, float* %12631, align 4
  %12633 = insertelement <4 x float> zeroinitializer, float %12632, i32 0
  %12634 = insertelement <4 x float> %12633, float 0.000000e+00, i32 1
  %12635 = insertelement <4 x float> %12634, float 0.000000e+00, i32 2
  %12636 = insertelement <4 x float> %12635, float 0.000000e+00, i32 3
  %12637 = getelementptr inbounds float, float* %2, i64 10
  %12638 = load float, float* %12637, align 4
  %12639 = insertelement <4 x float> zeroinitializer, float %12638, i32 0
  %12640 = insertelement <4 x float> %12639, float 0.000000e+00, i32 1
  %12641 = insertelement <4 x float> %12640, float 0.000000e+00, i32 2
  %12642 = insertelement <4 x float> %12641, float 0.000000e+00, i32 3
  %12643 = call <4 x float> @llvm.fma.f32.424(<4 x float> %12636, <4 x float> %12642, <4 x float> %12628)
  %12644 = extractelement <4 x float> %12643, i32 0
  %12645 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12646 = getelementptr inbounds i8, i8* %12645, i64 8
  %12647 = bitcast i8* %12646 to float*
  store float %12644, float* %12647, align 4
  %12648 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12649 = bitcast i8* %12648 to float*
  %12650 = load float, float* %12649, align 4
  %12651 = insertelement <4 x float> zeroinitializer, float %12650, i32 0
  %12652 = insertelement <4 x float> %12651, float 1.000000e+00, i32 1
  %12653 = insertelement <4 x float> %12652, float 1.000000e+00, i32 2
  %12654 = insertelement <4 x float> %12653, float 1.000000e+00, i32 3
  %12655 = getelementptr inbounds float, float* %2, i64 2
  %12656 = load float, float* %12655, align 4
  %12657 = insertelement <4 x float> zeroinitializer, float %12656, i32 0
  %12658 = insertelement <4 x float> %12657, float 0.000000e+00, i32 1
  %12659 = insertelement <4 x float> %12658, float 0.000000e+00, i32 2
  %12660 = insertelement <4 x float> %12659, float 0.000000e+00, i32 3
  %12661 = fmul <4 x float> %12654, %12660
  %12662 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12663 = getelementptr inbounds i8, i8* %12662, i64 4
  %12664 = bitcast i8* %12663 to float*
  %12665 = load float, float* %12664, align 4
  %12666 = insertelement <4 x float> zeroinitializer, float %12665, i32 0
  %12667 = insertelement <4 x float> %12666, float 1.000000e+00, i32 1
  %12668 = insertelement <4 x float> %12667, float 1.000000e+00, i32 2
  %12669 = insertelement <4 x float> %12668, float 1.000000e+00, i32 3
  %12670 = getelementptr inbounds float, float* %2, i64 6
  %12671 = load float, float* %12670, align 4
  %12672 = insertelement <4 x float> zeroinitializer, float %12671, i32 0
  %12673 = insertelement <4 x float> %12672, float 0.000000e+00, i32 1
  %12674 = insertelement <4 x float> %12673, float 0.000000e+00, i32 2
  %12675 = insertelement <4 x float> %12674, float 0.000000e+00, i32 3
  %12676 = call <4 x float> @llvm.fma.f32.425(<4 x float> %12669, <4 x float> %12675, <4 x float> %12661)
  %12677 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12678 = getelementptr inbounds i8, i8* %12677, i64 8
  %12679 = bitcast i8* %12678 to float*
  %12680 = load float, float* %12679, align 4
  %12681 = insertelement <4 x float> zeroinitializer, float %12680, i32 0
  %12682 = insertelement <4 x float> %12681, float 1.000000e+00, i32 1
  %12683 = insertelement <4 x float> %12682, float 1.000000e+00, i32 2
  %12684 = insertelement <4 x float> %12683, float 1.000000e+00, i32 3
  %12685 = getelementptr inbounds float, float* %2, i64 10
  %12686 = load float, float* %12685, align 4
  %12687 = insertelement <4 x float> zeroinitializer, float %12686, i32 0
  %12688 = insertelement <4 x float> %12687, float 0.000000e+00, i32 1
  %12689 = insertelement <4 x float> %12688, float 0.000000e+00, i32 2
  %12690 = insertelement <4 x float> %12689, float 0.000000e+00, i32 3
  %12691 = call <4 x float> @llvm.fma.f32.426(<4 x float> %12684, <4 x float> %12690, <4 x float> %12676)
  %12692 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12693 = getelementptr inbounds i8, i8* %12692, i64 12
  %12694 = bitcast i8* %12693 to float*
  %12695 = load float, float* %12694, align 4
  %12696 = insertelement <4 x float> zeroinitializer, float %12695, i32 0
  %12697 = insertelement <4 x float> %12696, float 0.000000e+00, i32 1
  %12698 = insertelement <4 x float> %12697, float 0.000000e+00, i32 2
  %12699 = insertelement <4 x float> %12698, float 0.000000e+00, i32 3
  %12700 = getelementptr inbounds float, float* %2, i64 14
  %12701 = load float, float* %12700, align 4
  %12702 = insertelement <4 x float> zeroinitializer, float %12701, i32 0
  %12703 = insertelement <4 x float> %12702, float 0.000000e+00, i32 1
  %12704 = insertelement <4 x float> %12703, float 0.000000e+00, i32 2
  %12705 = insertelement <4 x float> %12704, float 0.000000e+00, i32 3
  %12706 = call <4 x float> @llvm.fma.f32.427(<4 x float> %12699, <4 x float> %12705, <4 x float> %12691)
  %12707 = extractelement <4 x float> %12706, i32 0
  %12708 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12709 = getelementptr inbounds i8, i8* %12708, i64 8
  %12710 = bitcast i8* %12709 to float*
  store float %12707, float* %12710, align 4
  %12711 = extractelement <4 x float> %12706, i32 1
  %12712 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12713 = getelementptr inbounds i8, i8* %12712, i64 12
  %12714 = bitcast i8* %12713 to float*
  store float %12711, float* %12714, align 4
  %12715 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12716 = bitcast i8* %12715 to float*
  %12717 = load float, float* %12716, align 4
  %12718 = insertelement <4 x float> zeroinitializer, float %12717, i32 0
  %12719 = insertelement <4 x float> %12718, float 0.000000e+00, i32 1
  %12720 = insertelement <4 x float> %12719, float 0.000000e+00, i32 2
  %12721 = insertelement <4 x float> %12720, float 0.000000e+00, i32 3
  %12722 = getelementptr inbounds float, float* %2, i64 3
  %12723 = load float, float* %12722, align 4
  %12724 = insertelement <4 x float> zeroinitializer, float %12723, i32 0
  %12725 = insertelement <4 x float> %12724, float 0.000000e+00, i32 1
  %12726 = insertelement <4 x float> %12725, float 0.000000e+00, i32 2
  %12727 = insertelement <4 x float> %12726, float 0.000000e+00, i32 3
  %12728 = call <4 x float> @llvm.fma.f32.428(<4 x float> %12721, <4 x float> %12727, <4 x float> zeroinitializer)
  %12729 = extractelement <4 x float> %12728, i32 0
  %12730 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12731 = getelementptr inbounds i8, i8* %12730, i64 12
  %12732 = bitcast i8* %12731 to float*
  store float %12729, float* %12732, align 4
  %12733 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12734 = bitcast i8* %12733 to float*
  %12735 = load float, float* %12734, align 4
  %12736 = insertelement <4 x float> zeroinitializer, float %12735, i32 0
  %12737 = insertelement <4 x float> %12736, float 1.000000e+00, i32 1
  %12738 = insertelement <4 x float> %12737, float 1.000000e+00, i32 2
  %12739 = insertelement <4 x float> %12738, float 1.000000e+00, i32 3
  %12740 = getelementptr inbounds float, float* %2, i64 3
  %12741 = load float, float* %12740, align 4
  %12742 = insertelement <4 x float> zeroinitializer, float %12741, i32 0
  %12743 = insertelement <4 x float> %12742, float 0.000000e+00, i32 1
  %12744 = insertelement <4 x float> %12743, float 0.000000e+00, i32 2
  %12745 = insertelement <4 x float> %12744, float 0.000000e+00, i32 3
  %12746 = fmul <4 x float> %12739, %12745
  %12747 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12748 = getelementptr inbounds i8, i8* %12747, i64 4
  %12749 = bitcast i8* %12748 to float*
  %12750 = load float, float* %12749, align 4
  %12751 = insertelement <4 x float> zeroinitializer, float %12750, i32 0
  %12752 = insertelement <4 x float> %12751, float 0.000000e+00, i32 1
  %12753 = insertelement <4 x float> %12752, float 0.000000e+00, i32 2
  %12754 = insertelement <4 x float> %12753, float 0.000000e+00, i32 3
  %12755 = getelementptr inbounds float, float* %2, i64 7
  %12756 = load float, float* %12755, align 4
  %12757 = insertelement <4 x float> zeroinitializer, float %12756, i32 0
  %12758 = insertelement <4 x float> %12757, float 0.000000e+00, i32 1
  %12759 = insertelement <4 x float> %12758, float 0.000000e+00, i32 2
  %12760 = insertelement <4 x float> %12759, float 0.000000e+00, i32 3
  %12761 = call <4 x float> @llvm.fma.f32.429(<4 x float> %12754, <4 x float> %12760, <4 x float> %12746)
  %12762 = extractelement <4 x float> %12761, i32 0
  %12763 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12764 = getelementptr inbounds i8, i8* %12763, i64 12
  %12765 = bitcast i8* %12764 to float*
  store float %12762, float* %12765, align 4
  %12766 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12767 = bitcast i8* %12766 to float*
  %12768 = load float, float* %12767, align 4
  %12769 = insertelement <4 x float> zeroinitializer, float %12768, i32 0
  %12770 = insertelement <4 x float> %12769, float 1.000000e+00, i32 1
  %12771 = insertelement <4 x float> %12770, float 1.000000e+00, i32 2
  %12772 = insertelement <4 x float> %12771, float 1.000000e+00, i32 3
  %12773 = getelementptr inbounds float, float* %2, i64 3
  %12774 = load float, float* %12773, align 4
  %12775 = insertelement <4 x float> zeroinitializer, float %12774, i32 0
  %12776 = insertelement <4 x float> %12775, float 0.000000e+00, i32 1
  %12777 = insertelement <4 x float> %12776, float 0.000000e+00, i32 2
  %12778 = insertelement <4 x float> %12777, float 0.000000e+00, i32 3
  %12779 = fmul <4 x float> %12772, %12778
  %12780 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12781 = getelementptr inbounds i8, i8* %12780, i64 4
  %12782 = bitcast i8* %12781 to float*
  %12783 = load float, float* %12782, align 4
  %12784 = insertelement <4 x float> zeroinitializer, float %12783, i32 0
  %12785 = insertelement <4 x float> %12784, float 1.000000e+00, i32 1
  %12786 = insertelement <4 x float> %12785, float 1.000000e+00, i32 2
  %12787 = insertelement <4 x float> %12786, float 1.000000e+00, i32 3
  %12788 = getelementptr inbounds float, float* %2, i64 7
  %12789 = load float, float* %12788, align 4
  %12790 = insertelement <4 x float> zeroinitializer, float %12789, i32 0
  %12791 = insertelement <4 x float> %12790, float 0.000000e+00, i32 1
  %12792 = insertelement <4 x float> %12791, float 0.000000e+00, i32 2
  %12793 = insertelement <4 x float> %12792, float 0.000000e+00, i32 3
  %12794 = call <4 x float> @llvm.fma.f32.430(<4 x float> %12787, <4 x float> %12793, <4 x float> %12779)
  %12795 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12796 = getelementptr inbounds i8, i8* %12795, i64 8
  %12797 = bitcast i8* %12796 to float*
  %12798 = load float, float* %12797, align 4
  %12799 = insertelement <4 x float> zeroinitializer, float %12798, i32 0
  %12800 = insertelement <4 x float> %12799, float 0.000000e+00, i32 1
  %12801 = insertelement <4 x float> %12800, float 0.000000e+00, i32 2
  %12802 = insertelement <4 x float> %12801, float 0.000000e+00, i32 3
  %12803 = getelementptr inbounds float, float* %2, i64 11
  %12804 = load float, float* %12803, align 4
  %12805 = insertelement <4 x float> zeroinitializer, float %12804, i32 0
  %12806 = insertelement <4 x float> %12805, float 0.000000e+00, i32 1
  %12807 = insertelement <4 x float> %12806, float 0.000000e+00, i32 2
  %12808 = insertelement <4 x float> %12807, float 0.000000e+00, i32 3
  %12809 = call <4 x float> @llvm.fma.f32.431(<4 x float> %12802, <4 x float> %12808, <4 x float> %12794)
  %12810 = extractelement <4 x float> %12809, i32 0
  %12811 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12812 = getelementptr inbounds i8, i8* %12811, i64 12
  %12813 = bitcast i8* %12812 to float*
  store float %12810, float* %12813, align 4
  %12814 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12815 = bitcast i8* %12814 to float*
  %12816 = load float, float* %12815, align 4
  %12817 = insertelement <4 x float> zeroinitializer, float %12816, i32 0
  %12818 = insertelement <4 x float> %12817, float 1.000000e+00, i32 1
  %12819 = insertelement <4 x float> %12818, float 1.000000e+00, i32 2
  %12820 = insertelement <4 x float> %12819, float 1.000000e+00, i32 3
  %12821 = getelementptr inbounds float, float* %2, i64 3
  %12822 = load float, float* %12821, align 4
  %12823 = insertelement <4 x float> zeroinitializer, float %12822, i32 0
  %12824 = insertelement <4 x float> %12823, float 0.000000e+00, i32 1
  %12825 = insertelement <4 x float> %12824, float 0.000000e+00, i32 2
  %12826 = insertelement <4 x float> %12825, float 0.000000e+00, i32 3
  %12827 = fmul <4 x float> %12820, %12826
  %12828 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12829 = getelementptr inbounds i8, i8* %12828, i64 4
  %12830 = bitcast i8* %12829 to float*
  %12831 = load float, float* %12830, align 4
  %12832 = insertelement <4 x float> zeroinitializer, float %12831, i32 0
  %12833 = insertelement <4 x float> %12832, float 1.000000e+00, i32 1
  %12834 = insertelement <4 x float> %12833, float 1.000000e+00, i32 2
  %12835 = insertelement <4 x float> %12834, float 1.000000e+00, i32 3
  %12836 = getelementptr inbounds float, float* %2, i64 7
  %12837 = load float, float* %12836, align 4
  %12838 = insertelement <4 x float> zeroinitializer, float %12837, i32 0
  %12839 = insertelement <4 x float> %12838, float 0.000000e+00, i32 1
  %12840 = insertelement <4 x float> %12839, float 0.000000e+00, i32 2
  %12841 = insertelement <4 x float> %12840, float 0.000000e+00, i32 3
  %12842 = call <4 x float> @llvm.fma.f32.432(<4 x float> %12835, <4 x float> %12841, <4 x float> %12827)
  %12843 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12844 = getelementptr inbounds i8, i8* %12843, i64 8
  %12845 = bitcast i8* %12844 to float*
  %12846 = load float, float* %12845, align 4
  %12847 = insertelement <4 x float> zeroinitializer, float %12846, i32 0
  %12848 = insertelement <4 x float> %12847, float 1.000000e+00, i32 1
  %12849 = insertelement <4 x float> %12848, float 1.000000e+00, i32 2
  %12850 = insertelement <4 x float> %12849, float 1.000000e+00, i32 3
  %12851 = getelementptr inbounds float, float* %2, i64 11
  %12852 = load float, float* %12851, align 4
  %12853 = insertelement <4 x float> zeroinitializer, float %12852, i32 0
  %12854 = insertelement <4 x float> %12853, float 0.000000e+00, i32 1
  %12855 = insertelement <4 x float> %12854, float 0.000000e+00, i32 2
  %12856 = insertelement <4 x float> %12855, float 0.000000e+00, i32 3
  %12857 = call <4 x float> @llvm.fma.f32.433(<4 x float> %12850, <4 x float> %12856, <4 x float> %12842)
  %12858 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12859 = getelementptr inbounds i8, i8* %12858, i64 12
  %12860 = bitcast i8* %12859 to float*
  %12861 = load float, float* %12860, align 4
  %12862 = insertelement <4 x float> zeroinitializer, float %12861, i32 0
  %12863 = insertelement <4 x float> %12862, float 0.000000e+00, i32 1
  %12864 = insertelement <4 x float> %12863, float 0.000000e+00, i32 2
  %12865 = insertelement <4 x float> %12864, float 0.000000e+00, i32 3
  %12866 = getelementptr inbounds float, float* %2, i64 15
  %12867 = load float, float* %12866, align 4
  %12868 = insertelement <4 x float> zeroinitializer, float %12867, i32 0
  %12869 = insertelement <4 x float> %12868, float 0.000000e+00, i32 1
  %12870 = insertelement <4 x float> %12869, float 0.000000e+00, i32 2
  %12871 = insertelement <4 x float> %12870, float 0.000000e+00, i32 3
  %12872 = call <4 x float> @llvm.fma.f32.434(<4 x float> %12865, <4 x float> %12871, <4 x float> %12857)
  %12873 = extractelement <4 x float> %12872, i32 0
  %12874 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12875 = getelementptr inbounds i8, i8* %12874, i64 12
  %12876 = bitcast i8* %12875 to float*
  store float %12873, float* %12876, align 4
  %12877 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12878 = getelementptr inbounds i8, i8* %12877, i64 16
  %12879 = bitcast i8* %12878 to float*
  store float 0.000000e+00, float* %12879, align 4
  %12880 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12881 = getelementptr inbounds i8, i8* %12880, i64 16
  %12882 = bitcast i8* %12881 to float*
  %12883 = load float, float* %12882, align 4
  %12884 = insertelement <4 x float> zeroinitializer, float %12883, i32 0
  %12885 = insertelement <4 x float> %12884, float 0.000000e+00, i32 1
  %12886 = insertelement <4 x float> %12885, float 0.000000e+00, i32 2
  %12887 = insertelement <4 x float> %12886, float 0.000000e+00, i32 3
  %12888 = load float, float* %2, align 4
  %12889 = insertelement <4 x float> zeroinitializer, float %12888, i32 0
  %12890 = insertelement <4 x float> %12889, float 0.000000e+00, i32 1
  %12891 = insertelement <4 x float> %12890, float 0.000000e+00, i32 2
  %12892 = insertelement <4 x float> %12891, float 0.000000e+00, i32 3
  %12893 = call <4 x float> @llvm.fma.f32.435(<4 x float> %12887, <4 x float> %12892, <4 x float> zeroinitializer)
  %12894 = extractelement <4 x float> %12893, i32 0
  %12895 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12896 = getelementptr inbounds i8, i8* %12895, i64 16
  %12897 = bitcast i8* %12896 to float*
  store float %12894, float* %12897, align 4
  %12898 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12899 = getelementptr inbounds i8, i8* %12898, i64 16
  %12900 = bitcast i8* %12899 to float*
  %12901 = load float, float* %12900, align 4
  %12902 = insertelement <4 x float> zeroinitializer, float %12901, i32 0
  %12903 = insertelement <4 x float> %12902, float 1.000000e+00, i32 1
  %12904 = insertelement <4 x float> %12903, float 1.000000e+00, i32 2
  %12905 = insertelement <4 x float> %12904, float 1.000000e+00, i32 3
  %12906 = load float, float* %2, align 4
  %12907 = insertelement <4 x float> zeroinitializer, float %12906, i32 0
  %12908 = insertelement <4 x float> %12907, float 0.000000e+00, i32 1
  %12909 = insertelement <4 x float> %12908, float 0.000000e+00, i32 2
  %12910 = insertelement <4 x float> %12909, float 0.000000e+00, i32 3
  %12911 = fmul <4 x float> %12905, %12910
  %12912 = fadd <4 x float> %12911, zeroinitializer
  %12913 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12914 = getelementptr inbounds i8, i8* %12913, i64 20
  %12915 = bitcast i8* %12914 to float*
  %12916 = load float, float* %12915, align 4
  %12917 = insertelement <4 x float> zeroinitializer, float %12916, i32 0
  %12918 = insertelement <4 x float> %12917, float 0.000000e+00, i32 1
  %12919 = insertelement <4 x float> %12918, float 0.000000e+00, i32 2
  %12920 = insertelement <4 x float> %12919, float 0.000000e+00, i32 3
  %12921 = getelementptr inbounds float, float* %2, i64 4
  %12922 = load float, float* %12921, align 4
  %12923 = insertelement <4 x float> zeroinitializer, float %12922, i32 0
  %12924 = insertelement <4 x float> %12923, float 0.000000e+00, i32 1
  %12925 = insertelement <4 x float> %12924, float 0.000000e+00, i32 2
  %12926 = insertelement <4 x float> %12925, float 0.000000e+00, i32 3
  %12927 = call <4 x float> @llvm.fma.f32.436(<4 x float> %12920, <4 x float> %12926, <4 x float> %12912)
  %12928 = extractelement <4 x float> %12927, i32 0
  %12929 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12930 = getelementptr inbounds i8, i8* %12929, i64 16
  %12931 = bitcast i8* %12930 to float*
  store float %12928, float* %12931, align 4
  %12932 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12933 = getelementptr inbounds i8, i8* %12932, i64 16
  %12934 = bitcast i8* %12933 to float*
  %12935 = load float, float* %12934, align 4
  %12936 = insertelement <4 x float> zeroinitializer, float %12935, i32 0
  %12937 = insertelement <4 x float> %12936, float 1.000000e+00, i32 1
  %12938 = insertelement <4 x float> %12937, float 1.000000e+00, i32 2
  %12939 = insertelement <4 x float> %12938, float 1.000000e+00, i32 3
  %12940 = load float, float* %2, align 4
  %12941 = insertelement <4 x float> zeroinitializer, float %12940, i32 0
  %12942 = insertelement <4 x float> %12941, float 0.000000e+00, i32 1
  %12943 = insertelement <4 x float> %12942, float 0.000000e+00, i32 2
  %12944 = insertelement <4 x float> %12943, float 0.000000e+00, i32 3
  %12945 = fmul <4 x float> %12939, %12944
  %12946 = fadd <4 x float> %12945, zeroinitializer
  %12947 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12948 = getelementptr inbounds i8, i8* %12947, i64 20
  %12949 = bitcast i8* %12948 to float*
  %12950 = load float, float* %12949, align 4
  %12951 = insertelement <4 x float> zeroinitializer, float %12950, i32 0
  %12952 = insertelement <4 x float> %12951, float 1.000000e+00, i32 1
  %12953 = insertelement <4 x float> %12952, float 1.000000e+00, i32 2
  %12954 = insertelement <4 x float> %12953, float 1.000000e+00, i32 3
  %12955 = getelementptr inbounds float, float* %2, i64 4
  %12956 = load float, float* %12955, align 4
  %12957 = insertelement <4 x float> zeroinitializer, float %12956, i32 0
  %12958 = insertelement <4 x float> %12957, float 0.000000e+00, i32 1
  %12959 = insertelement <4 x float> %12958, float 0.000000e+00, i32 2
  %12960 = insertelement <4 x float> %12959, float 0.000000e+00, i32 3
  %12961 = call <4 x float> @llvm.fma.f32.437(<4 x float> %12954, <4 x float> %12960, <4 x float> %12946)
  %12962 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12963 = getelementptr inbounds i8, i8* %12962, i64 24
  %12964 = bitcast i8* %12963 to float*
  %12965 = load float, float* %12964, align 4
  %12966 = insertelement <4 x float> zeroinitializer, float %12965, i32 0
  %12967 = insertelement <4 x float> %12966, float 0.000000e+00, i32 1
  %12968 = insertelement <4 x float> %12967, float 0.000000e+00, i32 2
  %12969 = insertelement <4 x float> %12968, float 0.000000e+00, i32 3
  %12970 = getelementptr inbounds float, float* %2, i64 8
  %12971 = load float, float* %12970, align 4
  %12972 = insertelement <4 x float> zeroinitializer, float %12971, i32 0
  %12973 = insertelement <4 x float> %12972, float 0.000000e+00, i32 1
  %12974 = insertelement <4 x float> %12973, float 0.000000e+00, i32 2
  %12975 = insertelement <4 x float> %12974, float 0.000000e+00, i32 3
  %12976 = call <4 x float> @llvm.fma.f32.438(<4 x float> %12969, <4 x float> %12975, <4 x float> %12961)
  %12977 = extractelement <4 x float> %12976, i32 0
  %12978 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12979 = getelementptr inbounds i8, i8* %12978, i64 16
  %12980 = bitcast i8* %12979 to float*
  store float %12977, float* %12980, align 4
  %12981 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12982 = getelementptr inbounds i8, i8* %12981, i64 16
  %12983 = bitcast i8* %12982 to float*
  %12984 = load float, float* %12983, align 4
  %12985 = insertelement <4 x float> zeroinitializer, float %12984, i32 0
  %12986 = insertelement <4 x float> %12985, float 1.000000e+00, i32 1
  %12987 = insertelement <4 x float> %12986, float 1.000000e+00, i32 2
  %12988 = insertelement <4 x float> %12987, float 1.000000e+00, i32 3
  %12989 = load float, float* %2, align 4
  %12990 = insertelement <4 x float> zeroinitializer, float %12989, i32 0
  %12991 = insertelement <4 x float> %12990, float 0.000000e+00, i32 1
  %12992 = insertelement <4 x float> %12991, float 0.000000e+00, i32 2
  %12993 = insertelement <4 x float> %12992, float 0.000000e+00, i32 3
  %12994 = fmul <4 x float> %12988, %12993
  %12995 = fadd <4 x float> %12994, zeroinitializer
  %12996 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %12997 = getelementptr inbounds i8, i8* %12996, i64 20
  %12998 = bitcast i8* %12997 to float*
  %12999 = load float, float* %12998, align 4
  %13000 = insertelement <4 x float> zeroinitializer, float %12999, i32 0
  %13001 = insertelement <4 x float> %13000, float 1.000000e+00, i32 1
  %13002 = insertelement <4 x float> %13001, float 1.000000e+00, i32 2
  %13003 = insertelement <4 x float> %13002, float 1.000000e+00, i32 3
  %13004 = getelementptr inbounds float, float* %2, i64 4
  %13005 = load float, float* %13004, align 4
  %13006 = insertelement <4 x float> zeroinitializer, float %13005, i32 0
  %13007 = insertelement <4 x float> %13006, float 0.000000e+00, i32 1
  %13008 = insertelement <4 x float> %13007, float 0.000000e+00, i32 2
  %13009 = insertelement <4 x float> %13008, float 0.000000e+00, i32 3
  %13010 = call <4 x float> @llvm.fma.f32.439(<4 x float> %13003, <4 x float> %13009, <4 x float> %12995)
  %13011 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13012 = getelementptr inbounds i8, i8* %13011, i64 24
  %13013 = bitcast i8* %13012 to float*
  %13014 = load float, float* %13013, align 4
  %13015 = insertelement <4 x float> zeroinitializer, float %13014, i32 0
  %13016 = insertelement <4 x float> %13015, float 1.000000e+00, i32 1
  %13017 = insertelement <4 x float> %13016, float 1.000000e+00, i32 2
  %13018 = insertelement <4 x float> %13017, float 1.000000e+00, i32 3
  %13019 = getelementptr inbounds float, float* %2, i64 8
  %13020 = load float, float* %13019, align 4
  %13021 = insertelement <4 x float> zeroinitializer, float %13020, i32 0
  %13022 = insertelement <4 x float> %13021, float 0.000000e+00, i32 1
  %13023 = insertelement <4 x float> %13022, float 0.000000e+00, i32 2
  %13024 = insertelement <4 x float> %13023, float 0.000000e+00, i32 3
  %13025 = call <4 x float> @llvm.fma.f32.440(<4 x float> %13018, <4 x float> %13024, <4 x float> %13010)
  %13026 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13027 = getelementptr inbounds i8, i8* %13026, i64 28
  %13028 = bitcast i8* %13027 to float*
  %13029 = load float, float* %13028, align 4
  %13030 = insertelement <4 x float> zeroinitializer, float %13029, i32 0
  %13031 = insertelement <4 x float> %13030, float 0.000000e+00, i32 1
  %13032 = insertelement <4 x float> %13031, float 0.000000e+00, i32 2
  %13033 = insertelement <4 x float> %13032, float 0.000000e+00, i32 3
  %13034 = getelementptr inbounds float, float* %2, i64 12
  %13035 = load float, float* %13034, align 4
  %13036 = insertelement <4 x float> zeroinitializer, float %13035, i32 0
  %13037 = insertelement <4 x float> %13036, float 0.000000e+00, i32 1
  %13038 = insertelement <4 x float> %13037, float 0.000000e+00, i32 2
  %13039 = insertelement <4 x float> %13038, float 0.000000e+00, i32 3
  %13040 = call <4 x float> @llvm.fma.f32.441(<4 x float> %13033, <4 x float> %13039, <4 x float> %13025)
  %13041 = extractelement <4 x float> %13040, i32 0
  %13042 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13043 = getelementptr inbounds i8, i8* %13042, i64 16
  %13044 = bitcast i8* %13043 to float*
  store float %13041, float* %13044, align 4
  %13045 = extractelement <4 x float> %13040, i32 1
  %13046 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13047 = getelementptr inbounds i8, i8* %13046, i64 20
  %13048 = bitcast i8* %13047 to float*
  store float %13045, float* %13048, align 4
  %13049 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13050 = getelementptr inbounds i8, i8* %13049, i64 16
  %13051 = bitcast i8* %13050 to float*
  %13052 = load float, float* %13051, align 4
  %13053 = insertelement <4 x float> zeroinitializer, float %13052, i32 0
  %13054 = insertelement <4 x float> %13053, float 0.000000e+00, i32 1
  %13055 = insertelement <4 x float> %13054, float 0.000000e+00, i32 2
  %13056 = insertelement <4 x float> %13055, float 0.000000e+00, i32 3
  %13057 = getelementptr inbounds float, float* %2, i64 1
  %13058 = load float, float* %13057, align 4
  %13059 = insertelement <4 x float> zeroinitializer, float %13058, i32 0
  %13060 = insertelement <4 x float> %13059, float 0.000000e+00, i32 1
  %13061 = insertelement <4 x float> %13060, float 0.000000e+00, i32 2
  %13062 = insertelement <4 x float> %13061, float 0.000000e+00, i32 3
  %13063 = call <4 x float> @llvm.fma.f32.442(<4 x float> %13056, <4 x float> %13062, <4 x float> zeroinitializer)
  %13064 = extractelement <4 x float> %13063, i32 0
  %13065 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13066 = getelementptr inbounds i8, i8* %13065, i64 20
  %13067 = bitcast i8* %13066 to float*
  store float %13064, float* %13067, align 4
  %13068 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13069 = getelementptr inbounds i8, i8* %13068, i64 16
  %13070 = bitcast i8* %13069 to float*
  %13071 = load float, float* %13070, align 4
  %13072 = insertelement <4 x float> zeroinitializer, float %13071, i32 0
  %13073 = insertelement <4 x float> %13072, float 1.000000e+00, i32 1
  %13074 = insertelement <4 x float> %13073, float 1.000000e+00, i32 2
  %13075 = insertelement <4 x float> %13074, float 1.000000e+00, i32 3
  %13076 = getelementptr inbounds float, float* %2, i64 1
  %13077 = load float, float* %13076, align 4
  %13078 = insertelement <4 x float> zeroinitializer, float %13077, i32 0
  %13079 = insertelement <4 x float> %13078, float 0.000000e+00, i32 1
  %13080 = insertelement <4 x float> %13079, float 0.000000e+00, i32 2
  %13081 = insertelement <4 x float> %13080, float 0.000000e+00, i32 3
  %13082 = fmul <4 x float> %13075, %13081
  %13083 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13084 = getelementptr inbounds i8, i8* %13083, i64 20
  %13085 = bitcast i8* %13084 to float*
  %13086 = load float, float* %13085, align 4
  %13087 = insertelement <4 x float> zeroinitializer, float %13086, i32 0
  %13088 = insertelement <4 x float> %13087, float 0.000000e+00, i32 1
  %13089 = insertelement <4 x float> %13088, float 0.000000e+00, i32 2
  %13090 = insertelement <4 x float> %13089, float 0.000000e+00, i32 3
  %13091 = getelementptr inbounds float, float* %2, i64 5
  %13092 = load float, float* %13091, align 4
  %13093 = insertelement <4 x float> zeroinitializer, float %13092, i32 0
  %13094 = insertelement <4 x float> %13093, float 0.000000e+00, i32 1
  %13095 = insertelement <4 x float> %13094, float 0.000000e+00, i32 2
  %13096 = insertelement <4 x float> %13095, float 0.000000e+00, i32 3
  %13097 = call <4 x float> @llvm.fma.f32.443(<4 x float> %13090, <4 x float> %13096, <4 x float> %13082)
  %13098 = extractelement <4 x float> %13097, i32 0
  %13099 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13100 = getelementptr inbounds i8, i8* %13099, i64 20
  %13101 = bitcast i8* %13100 to float*
  store float %13098, float* %13101, align 4
  %13102 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13103 = getelementptr inbounds i8, i8* %13102, i64 16
  %13104 = bitcast i8* %13103 to float*
  %13105 = load float, float* %13104, align 4
  %13106 = insertelement <4 x float> zeroinitializer, float %13105, i32 0
  %13107 = insertelement <4 x float> %13106, float 1.000000e+00, i32 1
  %13108 = insertelement <4 x float> %13107, float 1.000000e+00, i32 2
  %13109 = insertelement <4 x float> %13108, float 1.000000e+00, i32 3
  %13110 = getelementptr inbounds float, float* %2, i64 1
  %13111 = load float, float* %13110, align 4
  %13112 = insertelement <4 x float> zeroinitializer, float %13111, i32 0
  %13113 = insertelement <4 x float> %13112, float 0.000000e+00, i32 1
  %13114 = insertelement <4 x float> %13113, float 0.000000e+00, i32 2
  %13115 = insertelement <4 x float> %13114, float 0.000000e+00, i32 3
  %13116 = fmul <4 x float> %13109, %13115
  %13117 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13118 = getelementptr inbounds i8, i8* %13117, i64 20
  %13119 = bitcast i8* %13118 to float*
  %13120 = load float, float* %13119, align 4
  %13121 = insertelement <4 x float> zeroinitializer, float %13120, i32 0
  %13122 = insertelement <4 x float> %13121, float 1.000000e+00, i32 1
  %13123 = insertelement <4 x float> %13122, float 1.000000e+00, i32 2
  %13124 = insertelement <4 x float> %13123, float 1.000000e+00, i32 3
  %13125 = getelementptr inbounds float, float* %2, i64 5
  %13126 = load float, float* %13125, align 4
  %13127 = insertelement <4 x float> zeroinitializer, float %13126, i32 0
  %13128 = insertelement <4 x float> %13127, float 0.000000e+00, i32 1
  %13129 = insertelement <4 x float> %13128, float 0.000000e+00, i32 2
  %13130 = insertelement <4 x float> %13129, float 0.000000e+00, i32 3
  %13131 = call <4 x float> @llvm.fma.f32.444(<4 x float> %13124, <4 x float> %13130, <4 x float> %13116)
  %13132 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13133 = getelementptr inbounds i8, i8* %13132, i64 24
  %13134 = bitcast i8* %13133 to float*
  %13135 = load float, float* %13134, align 4
  %13136 = insertelement <4 x float> zeroinitializer, float %13135, i32 0
  %13137 = insertelement <4 x float> %13136, float 0.000000e+00, i32 1
  %13138 = insertelement <4 x float> %13137, float 0.000000e+00, i32 2
  %13139 = insertelement <4 x float> %13138, float 0.000000e+00, i32 3
  %13140 = getelementptr inbounds float, float* %2, i64 9
  %13141 = load float, float* %13140, align 4
  %13142 = insertelement <4 x float> zeroinitializer, float %13141, i32 0
  %13143 = insertelement <4 x float> %13142, float 0.000000e+00, i32 1
  %13144 = insertelement <4 x float> %13143, float 0.000000e+00, i32 2
  %13145 = insertelement <4 x float> %13144, float 0.000000e+00, i32 3
  %13146 = call <4 x float> @llvm.fma.f32.445(<4 x float> %13139, <4 x float> %13145, <4 x float> %13131)
  %13147 = extractelement <4 x float> %13146, i32 0
  %13148 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13149 = getelementptr inbounds i8, i8* %13148, i64 20
  %13150 = bitcast i8* %13149 to float*
  store float %13147, float* %13150, align 4
  %13151 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13152 = getelementptr inbounds i8, i8* %13151, i64 16
  %13153 = bitcast i8* %13152 to float*
  %13154 = load float, float* %13153, align 4
  %13155 = insertelement <4 x float> zeroinitializer, float %13154, i32 0
  %13156 = insertelement <4 x float> %13155, float 1.000000e+00, i32 1
  %13157 = insertelement <4 x float> %13156, float 1.000000e+00, i32 2
  %13158 = insertelement <4 x float> %13157, float 1.000000e+00, i32 3
  %13159 = getelementptr inbounds float, float* %2, i64 1
  %13160 = load float, float* %13159, align 4
  %13161 = insertelement <4 x float> zeroinitializer, float %13160, i32 0
  %13162 = insertelement <4 x float> %13161, float 0.000000e+00, i32 1
  %13163 = insertelement <4 x float> %13162, float 0.000000e+00, i32 2
  %13164 = insertelement <4 x float> %13163, float 0.000000e+00, i32 3
  %13165 = fmul <4 x float> %13158, %13164
  %13166 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13167 = getelementptr inbounds i8, i8* %13166, i64 20
  %13168 = bitcast i8* %13167 to float*
  %13169 = load float, float* %13168, align 4
  %13170 = insertelement <4 x float> zeroinitializer, float %13169, i32 0
  %13171 = insertelement <4 x float> %13170, float 1.000000e+00, i32 1
  %13172 = insertelement <4 x float> %13171, float 1.000000e+00, i32 2
  %13173 = insertelement <4 x float> %13172, float 1.000000e+00, i32 3
  %13174 = getelementptr inbounds float, float* %2, i64 5
  %13175 = load float, float* %13174, align 4
  %13176 = insertelement <4 x float> zeroinitializer, float %13175, i32 0
  %13177 = insertelement <4 x float> %13176, float 0.000000e+00, i32 1
  %13178 = insertelement <4 x float> %13177, float 0.000000e+00, i32 2
  %13179 = insertelement <4 x float> %13178, float 0.000000e+00, i32 3
  %13180 = call <4 x float> @llvm.fma.f32.446(<4 x float> %13173, <4 x float> %13179, <4 x float> %13165)
  %13181 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13182 = getelementptr inbounds i8, i8* %13181, i64 24
  %13183 = bitcast i8* %13182 to float*
  %13184 = load float, float* %13183, align 4
  %13185 = insertelement <4 x float> zeroinitializer, float %13184, i32 0
  %13186 = insertelement <4 x float> %13185, float 1.000000e+00, i32 1
  %13187 = insertelement <4 x float> %13186, float 1.000000e+00, i32 2
  %13188 = insertelement <4 x float> %13187, float 1.000000e+00, i32 3
  %13189 = getelementptr inbounds float, float* %2, i64 9
  %13190 = load float, float* %13189, align 4
  %13191 = insertelement <4 x float> zeroinitializer, float %13190, i32 0
  %13192 = insertelement <4 x float> %13191, float 0.000000e+00, i32 1
  %13193 = insertelement <4 x float> %13192, float 0.000000e+00, i32 2
  %13194 = insertelement <4 x float> %13193, float 0.000000e+00, i32 3
  %13195 = call <4 x float> @llvm.fma.f32.447(<4 x float> %13188, <4 x float> %13194, <4 x float> %13180)
  %13196 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13197 = getelementptr inbounds i8, i8* %13196, i64 28
  %13198 = bitcast i8* %13197 to float*
  %13199 = load float, float* %13198, align 4
  %13200 = insertelement <4 x float> zeroinitializer, float %13199, i32 0
  %13201 = insertelement <4 x float> %13200, float 0.000000e+00, i32 1
  %13202 = insertelement <4 x float> %13201, float 0.000000e+00, i32 2
  %13203 = insertelement <4 x float> %13202, float 0.000000e+00, i32 3
  %13204 = getelementptr inbounds float, float* %2, i64 13
  %13205 = load float, float* %13204, align 4
  %13206 = insertelement <4 x float> zeroinitializer, float %13205, i32 0
  %13207 = insertelement <4 x float> %13206, float 0.000000e+00, i32 1
  %13208 = insertelement <4 x float> %13207, float 0.000000e+00, i32 2
  %13209 = insertelement <4 x float> %13208, float 0.000000e+00, i32 3
  %13210 = call <4 x float> @llvm.fma.f32.448(<4 x float> %13203, <4 x float> %13209, <4 x float> %13195)
  %13211 = extractelement <4 x float> %13210, i32 0
  %13212 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13213 = getelementptr inbounds i8, i8* %13212, i64 20
  %13214 = bitcast i8* %13213 to float*
  store float %13211, float* %13214, align 4
  %13215 = extractelement <4 x float> %13210, i32 1
  %13216 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13217 = getelementptr inbounds i8, i8* %13216, i64 24
  %13218 = bitcast i8* %13217 to float*
  store float %13215, float* %13218, align 4
  %13219 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13220 = getelementptr inbounds i8, i8* %13219, i64 16
  %13221 = bitcast i8* %13220 to float*
  %13222 = load float, float* %13221, align 4
  %13223 = insertelement <4 x float> zeroinitializer, float %13222, i32 0
  %13224 = insertelement <4 x float> %13223, float 0.000000e+00, i32 1
  %13225 = insertelement <4 x float> %13224, float 0.000000e+00, i32 2
  %13226 = insertelement <4 x float> %13225, float 0.000000e+00, i32 3
  %13227 = getelementptr inbounds float, float* %2, i64 2
  %13228 = load float, float* %13227, align 4
  %13229 = insertelement <4 x float> zeroinitializer, float %13228, i32 0
  %13230 = insertelement <4 x float> %13229, float 0.000000e+00, i32 1
  %13231 = insertelement <4 x float> %13230, float 0.000000e+00, i32 2
  %13232 = insertelement <4 x float> %13231, float 0.000000e+00, i32 3
  %13233 = call <4 x float> @llvm.fma.f32.449(<4 x float> %13226, <4 x float> %13232, <4 x float> zeroinitializer)
  %13234 = extractelement <4 x float> %13233, i32 0
  %13235 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13236 = getelementptr inbounds i8, i8* %13235, i64 24
  %13237 = bitcast i8* %13236 to float*
  store float %13234, float* %13237, align 4
  %13238 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13239 = getelementptr inbounds i8, i8* %13238, i64 16
  %13240 = bitcast i8* %13239 to float*
  %13241 = load float, float* %13240, align 4
  %13242 = insertelement <4 x float> zeroinitializer, float %13241, i32 0
  %13243 = insertelement <4 x float> %13242, float 1.000000e+00, i32 1
  %13244 = insertelement <4 x float> %13243, float 1.000000e+00, i32 2
  %13245 = insertelement <4 x float> %13244, float 1.000000e+00, i32 3
  %13246 = getelementptr inbounds float, float* %2, i64 2
  %13247 = load float, float* %13246, align 4
  %13248 = insertelement <4 x float> zeroinitializer, float %13247, i32 0
  %13249 = insertelement <4 x float> %13248, float 0.000000e+00, i32 1
  %13250 = insertelement <4 x float> %13249, float 0.000000e+00, i32 2
  %13251 = insertelement <4 x float> %13250, float 0.000000e+00, i32 3
  %13252 = fmul <4 x float> %13245, %13251
  %13253 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13254 = getelementptr inbounds i8, i8* %13253, i64 20
  %13255 = bitcast i8* %13254 to float*
  %13256 = load float, float* %13255, align 4
  %13257 = insertelement <4 x float> zeroinitializer, float %13256, i32 0
  %13258 = insertelement <4 x float> %13257, float 0.000000e+00, i32 1
  %13259 = insertelement <4 x float> %13258, float 0.000000e+00, i32 2
  %13260 = insertelement <4 x float> %13259, float 0.000000e+00, i32 3
  %13261 = getelementptr inbounds float, float* %2, i64 6
  %13262 = load float, float* %13261, align 4
  %13263 = insertelement <4 x float> zeroinitializer, float %13262, i32 0
  %13264 = insertelement <4 x float> %13263, float 0.000000e+00, i32 1
  %13265 = insertelement <4 x float> %13264, float 0.000000e+00, i32 2
  %13266 = insertelement <4 x float> %13265, float 0.000000e+00, i32 3
  %13267 = call <4 x float> @llvm.fma.f32.450(<4 x float> %13260, <4 x float> %13266, <4 x float> %13252)
  %13268 = extractelement <4 x float> %13267, i32 0
  %13269 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13270 = getelementptr inbounds i8, i8* %13269, i64 24
  %13271 = bitcast i8* %13270 to float*
  store float %13268, float* %13271, align 4
  %13272 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13273 = getelementptr inbounds i8, i8* %13272, i64 16
  %13274 = bitcast i8* %13273 to float*
  %13275 = load float, float* %13274, align 4
  %13276 = insertelement <4 x float> zeroinitializer, float %13275, i32 0
  %13277 = insertelement <4 x float> %13276, float 1.000000e+00, i32 1
  %13278 = insertelement <4 x float> %13277, float 1.000000e+00, i32 2
  %13279 = insertelement <4 x float> %13278, float 1.000000e+00, i32 3
  %13280 = getelementptr inbounds float, float* %2, i64 2
  %13281 = load float, float* %13280, align 4
  %13282 = insertelement <4 x float> zeroinitializer, float %13281, i32 0
  %13283 = insertelement <4 x float> %13282, float 0.000000e+00, i32 1
  %13284 = insertelement <4 x float> %13283, float 0.000000e+00, i32 2
  %13285 = insertelement <4 x float> %13284, float 0.000000e+00, i32 3
  %13286 = fmul <4 x float> %13279, %13285
  %13287 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13288 = getelementptr inbounds i8, i8* %13287, i64 20
  %13289 = bitcast i8* %13288 to float*
  %13290 = load float, float* %13289, align 4
  %13291 = insertelement <4 x float> zeroinitializer, float %13290, i32 0
  %13292 = insertelement <4 x float> %13291, float 1.000000e+00, i32 1
  %13293 = insertelement <4 x float> %13292, float 1.000000e+00, i32 2
  %13294 = insertelement <4 x float> %13293, float 1.000000e+00, i32 3
  %13295 = getelementptr inbounds float, float* %2, i64 6
  %13296 = load float, float* %13295, align 4
  %13297 = insertelement <4 x float> zeroinitializer, float %13296, i32 0
  %13298 = insertelement <4 x float> %13297, float 0.000000e+00, i32 1
  %13299 = insertelement <4 x float> %13298, float 0.000000e+00, i32 2
  %13300 = insertelement <4 x float> %13299, float 0.000000e+00, i32 3
  %13301 = call <4 x float> @llvm.fma.f32.451(<4 x float> %13294, <4 x float> %13300, <4 x float> %13286)
  %13302 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13303 = getelementptr inbounds i8, i8* %13302, i64 24
  %13304 = bitcast i8* %13303 to float*
  %13305 = load float, float* %13304, align 4
  %13306 = insertelement <4 x float> zeroinitializer, float %13305, i32 0
  %13307 = insertelement <4 x float> %13306, float 0.000000e+00, i32 1
  %13308 = insertelement <4 x float> %13307, float 0.000000e+00, i32 2
  %13309 = insertelement <4 x float> %13308, float 0.000000e+00, i32 3
  %13310 = getelementptr inbounds float, float* %2, i64 10
  %13311 = load float, float* %13310, align 4
  %13312 = insertelement <4 x float> zeroinitializer, float %13311, i32 0
  %13313 = insertelement <4 x float> %13312, float 0.000000e+00, i32 1
  %13314 = insertelement <4 x float> %13313, float 0.000000e+00, i32 2
  %13315 = insertelement <4 x float> %13314, float 0.000000e+00, i32 3
  %13316 = call <4 x float> @llvm.fma.f32.452(<4 x float> %13309, <4 x float> %13315, <4 x float> %13301)
  %13317 = extractelement <4 x float> %13316, i32 0
  %13318 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13319 = getelementptr inbounds i8, i8* %13318, i64 24
  %13320 = bitcast i8* %13319 to float*
  store float %13317, float* %13320, align 4
  %13321 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13322 = getelementptr inbounds i8, i8* %13321, i64 16
  %13323 = bitcast i8* %13322 to float*
  %13324 = load float, float* %13323, align 4
  %13325 = insertelement <4 x float> zeroinitializer, float %13324, i32 0
  %13326 = insertelement <4 x float> %13325, float 1.000000e+00, i32 1
  %13327 = insertelement <4 x float> %13326, float 1.000000e+00, i32 2
  %13328 = insertelement <4 x float> %13327, float 1.000000e+00, i32 3
  %13329 = getelementptr inbounds float, float* %2, i64 2
  %13330 = load float, float* %13329, align 4
  %13331 = insertelement <4 x float> zeroinitializer, float %13330, i32 0
  %13332 = insertelement <4 x float> %13331, float 0.000000e+00, i32 1
  %13333 = insertelement <4 x float> %13332, float 0.000000e+00, i32 2
  %13334 = insertelement <4 x float> %13333, float 0.000000e+00, i32 3
  %13335 = fmul <4 x float> %13328, %13334
  %13336 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13337 = getelementptr inbounds i8, i8* %13336, i64 20
  %13338 = bitcast i8* %13337 to float*
  %13339 = load float, float* %13338, align 4
  %13340 = insertelement <4 x float> zeroinitializer, float %13339, i32 0
  %13341 = insertelement <4 x float> %13340, float 1.000000e+00, i32 1
  %13342 = insertelement <4 x float> %13341, float 1.000000e+00, i32 2
  %13343 = insertelement <4 x float> %13342, float 1.000000e+00, i32 3
  %13344 = getelementptr inbounds float, float* %2, i64 6
  %13345 = load float, float* %13344, align 4
  %13346 = insertelement <4 x float> zeroinitializer, float %13345, i32 0
  %13347 = insertelement <4 x float> %13346, float 0.000000e+00, i32 1
  %13348 = insertelement <4 x float> %13347, float 0.000000e+00, i32 2
  %13349 = insertelement <4 x float> %13348, float 0.000000e+00, i32 3
  %13350 = call <4 x float> @llvm.fma.f32.453(<4 x float> %13343, <4 x float> %13349, <4 x float> %13335)
  %13351 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13352 = getelementptr inbounds i8, i8* %13351, i64 24
  %13353 = bitcast i8* %13352 to float*
  %13354 = load float, float* %13353, align 4
  %13355 = insertelement <4 x float> zeroinitializer, float %13354, i32 0
  %13356 = insertelement <4 x float> %13355, float 1.000000e+00, i32 1
  %13357 = insertelement <4 x float> %13356, float 1.000000e+00, i32 2
  %13358 = insertelement <4 x float> %13357, float 1.000000e+00, i32 3
  %13359 = getelementptr inbounds float, float* %2, i64 10
  %13360 = load float, float* %13359, align 4
  %13361 = insertelement <4 x float> zeroinitializer, float %13360, i32 0
  %13362 = insertelement <4 x float> %13361, float 0.000000e+00, i32 1
  %13363 = insertelement <4 x float> %13362, float 0.000000e+00, i32 2
  %13364 = insertelement <4 x float> %13363, float 0.000000e+00, i32 3
  %13365 = call <4 x float> @llvm.fma.f32.454(<4 x float> %13358, <4 x float> %13364, <4 x float> %13350)
  %13366 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13367 = getelementptr inbounds i8, i8* %13366, i64 28
  %13368 = bitcast i8* %13367 to float*
  %13369 = load float, float* %13368, align 4
  %13370 = insertelement <4 x float> zeroinitializer, float %13369, i32 0
  %13371 = insertelement <4 x float> %13370, float 0.000000e+00, i32 1
  %13372 = insertelement <4 x float> %13371, float 0.000000e+00, i32 2
  %13373 = insertelement <4 x float> %13372, float 0.000000e+00, i32 3
  %13374 = getelementptr inbounds float, float* %2, i64 14
  %13375 = load float, float* %13374, align 4
  %13376 = insertelement <4 x float> zeroinitializer, float %13375, i32 0
  %13377 = insertelement <4 x float> %13376, float 0.000000e+00, i32 1
  %13378 = insertelement <4 x float> %13377, float 0.000000e+00, i32 2
  %13379 = insertelement <4 x float> %13378, float 0.000000e+00, i32 3
  %13380 = call <4 x float> @llvm.fma.f32.455(<4 x float> %13373, <4 x float> %13379, <4 x float> %13365)
  %13381 = extractelement <4 x float> %13380, i32 0
  %13382 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13383 = getelementptr inbounds i8, i8* %13382, i64 24
  %13384 = bitcast i8* %13383 to float*
  store float %13381, float* %13384, align 4
  %13385 = extractelement <4 x float> %13380, i32 1
  %13386 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13387 = getelementptr inbounds i8, i8* %13386, i64 28
  %13388 = bitcast i8* %13387 to float*
  store float %13385, float* %13388, align 4
  %13389 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13390 = getelementptr inbounds i8, i8* %13389, i64 16
  %13391 = bitcast i8* %13390 to float*
  %13392 = load float, float* %13391, align 4
  %13393 = insertelement <4 x float> zeroinitializer, float %13392, i32 0
  %13394 = insertelement <4 x float> %13393, float 0.000000e+00, i32 1
  %13395 = insertelement <4 x float> %13394, float 0.000000e+00, i32 2
  %13396 = insertelement <4 x float> %13395, float 0.000000e+00, i32 3
  %13397 = getelementptr inbounds float, float* %2, i64 3
  %13398 = load float, float* %13397, align 4
  %13399 = insertelement <4 x float> zeroinitializer, float %13398, i32 0
  %13400 = insertelement <4 x float> %13399, float 0.000000e+00, i32 1
  %13401 = insertelement <4 x float> %13400, float 0.000000e+00, i32 2
  %13402 = insertelement <4 x float> %13401, float 0.000000e+00, i32 3
  %13403 = call <4 x float> @llvm.fma.f32.456(<4 x float> %13396, <4 x float> %13402, <4 x float> zeroinitializer)
  %13404 = extractelement <4 x float> %13403, i32 0
  %13405 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13406 = getelementptr inbounds i8, i8* %13405, i64 28
  %13407 = bitcast i8* %13406 to float*
  store float %13404, float* %13407, align 4
  %13408 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13409 = getelementptr inbounds i8, i8* %13408, i64 16
  %13410 = bitcast i8* %13409 to float*
  %13411 = load float, float* %13410, align 4
  %13412 = insertelement <4 x float> zeroinitializer, float %13411, i32 0
  %13413 = insertelement <4 x float> %13412, float 1.000000e+00, i32 1
  %13414 = insertelement <4 x float> %13413, float 1.000000e+00, i32 2
  %13415 = insertelement <4 x float> %13414, float 1.000000e+00, i32 3
  %13416 = getelementptr inbounds float, float* %2, i64 3
  %13417 = load float, float* %13416, align 4
  %13418 = insertelement <4 x float> zeroinitializer, float %13417, i32 0
  %13419 = insertelement <4 x float> %13418, float 0.000000e+00, i32 1
  %13420 = insertelement <4 x float> %13419, float 0.000000e+00, i32 2
  %13421 = insertelement <4 x float> %13420, float 0.000000e+00, i32 3
  %13422 = fmul <4 x float> %13415, %13421
  %13423 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13424 = getelementptr inbounds i8, i8* %13423, i64 20
  %13425 = bitcast i8* %13424 to float*
  %13426 = load float, float* %13425, align 4
  %13427 = insertelement <4 x float> zeroinitializer, float %13426, i32 0
  %13428 = insertelement <4 x float> %13427, float 0.000000e+00, i32 1
  %13429 = insertelement <4 x float> %13428, float 0.000000e+00, i32 2
  %13430 = insertelement <4 x float> %13429, float 0.000000e+00, i32 3
  %13431 = getelementptr inbounds float, float* %2, i64 7
  %13432 = load float, float* %13431, align 4
  %13433 = insertelement <4 x float> zeroinitializer, float %13432, i32 0
  %13434 = insertelement <4 x float> %13433, float 0.000000e+00, i32 1
  %13435 = insertelement <4 x float> %13434, float 0.000000e+00, i32 2
  %13436 = insertelement <4 x float> %13435, float 0.000000e+00, i32 3
  %13437 = call <4 x float> @llvm.fma.f32.457(<4 x float> %13430, <4 x float> %13436, <4 x float> %13422)
  %13438 = extractelement <4 x float> %13437, i32 0
  %13439 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13440 = getelementptr inbounds i8, i8* %13439, i64 28
  %13441 = bitcast i8* %13440 to float*
  store float %13438, float* %13441, align 4
  %13442 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13443 = getelementptr inbounds i8, i8* %13442, i64 16
  %13444 = bitcast i8* %13443 to float*
  %13445 = load float, float* %13444, align 4
  %13446 = insertelement <4 x float> zeroinitializer, float %13445, i32 0
  %13447 = insertelement <4 x float> %13446, float 1.000000e+00, i32 1
  %13448 = insertelement <4 x float> %13447, float 1.000000e+00, i32 2
  %13449 = insertelement <4 x float> %13448, float 1.000000e+00, i32 3
  %13450 = getelementptr inbounds float, float* %2, i64 3
  %13451 = load float, float* %13450, align 4
  %13452 = insertelement <4 x float> zeroinitializer, float %13451, i32 0
  %13453 = insertelement <4 x float> %13452, float 0.000000e+00, i32 1
  %13454 = insertelement <4 x float> %13453, float 0.000000e+00, i32 2
  %13455 = insertelement <4 x float> %13454, float 0.000000e+00, i32 3
  %13456 = fmul <4 x float> %13449, %13455
  %13457 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13458 = getelementptr inbounds i8, i8* %13457, i64 20
  %13459 = bitcast i8* %13458 to float*
  %13460 = load float, float* %13459, align 4
  %13461 = insertelement <4 x float> zeroinitializer, float %13460, i32 0
  %13462 = insertelement <4 x float> %13461, float 1.000000e+00, i32 1
  %13463 = insertelement <4 x float> %13462, float 1.000000e+00, i32 2
  %13464 = insertelement <4 x float> %13463, float 1.000000e+00, i32 3
  %13465 = getelementptr inbounds float, float* %2, i64 7
  %13466 = load float, float* %13465, align 4
  %13467 = insertelement <4 x float> zeroinitializer, float %13466, i32 0
  %13468 = insertelement <4 x float> %13467, float 0.000000e+00, i32 1
  %13469 = insertelement <4 x float> %13468, float 0.000000e+00, i32 2
  %13470 = insertelement <4 x float> %13469, float 0.000000e+00, i32 3
  %13471 = call <4 x float> @llvm.fma.f32.458(<4 x float> %13464, <4 x float> %13470, <4 x float> %13456)
  %13472 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13473 = getelementptr inbounds i8, i8* %13472, i64 24
  %13474 = bitcast i8* %13473 to float*
  %13475 = load float, float* %13474, align 4
  %13476 = insertelement <4 x float> zeroinitializer, float %13475, i32 0
  %13477 = insertelement <4 x float> %13476, float 0.000000e+00, i32 1
  %13478 = insertelement <4 x float> %13477, float 0.000000e+00, i32 2
  %13479 = insertelement <4 x float> %13478, float 0.000000e+00, i32 3
  %13480 = getelementptr inbounds float, float* %2, i64 11
  %13481 = load float, float* %13480, align 4
  %13482 = insertelement <4 x float> zeroinitializer, float %13481, i32 0
  %13483 = insertelement <4 x float> %13482, float 0.000000e+00, i32 1
  %13484 = insertelement <4 x float> %13483, float 0.000000e+00, i32 2
  %13485 = insertelement <4 x float> %13484, float 0.000000e+00, i32 3
  %13486 = call <4 x float> @llvm.fma.f32.459(<4 x float> %13479, <4 x float> %13485, <4 x float> %13471)
  %13487 = extractelement <4 x float> %13486, i32 0
  %13488 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13489 = getelementptr inbounds i8, i8* %13488, i64 28
  %13490 = bitcast i8* %13489 to float*
  store float %13487, float* %13490, align 4
  %13491 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13492 = getelementptr inbounds i8, i8* %13491, i64 16
  %13493 = bitcast i8* %13492 to float*
  %13494 = load float, float* %13493, align 4
  %13495 = insertelement <4 x float> zeroinitializer, float %13494, i32 0
  %13496 = insertelement <4 x float> %13495, float 1.000000e+00, i32 1
  %13497 = insertelement <4 x float> %13496, float 1.000000e+00, i32 2
  %13498 = insertelement <4 x float> %13497, float 1.000000e+00, i32 3
  %13499 = getelementptr inbounds float, float* %2, i64 3
  %13500 = load float, float* %13499, align 4
  %13501 = insertelement <4 x float> zeroinitializer, float %13500, i32 0
  %13502 = insertelement <4 x float> %13501, float 0.000000e+00, i32 1
  %13503 = insertelement <4 x float> %13502, float 0.000000e+00, i32 2
  %13504 = insertelement <4 x float> %13503, float 0.000000e+00, i32 3
  %13505 = fmul <4 x float> %13498, %13504
  %13506 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13507 = getelementptr inbounds i8, i8* %13506, i64 20
  %13508 = bitcast i8* %13507 to float*
  %13509 = load float, float* %13508, align 4
  %13510 = insertelement <4 x float> zeroinitializer, float %13509, i32 0
  %13511 = insertelement <4 x float> %13510, float 1.000000e+00, i32 1
  %13512 = insertelement <4 x float> %13511, float 1.000000e+00, i32 2
  %13513 = insertelement <4 x float> %13512, float 1.000000e+00, i32 3
  %13514 = getelementptr inbounds float, float* %2, i64 7
  %13515 = load float, float* %13514, align 4
  %13516 = insertelement <4 x float> zeroinitializer, float %13515, i32 0
  %13517 = insertelement <4 x float> %13516, float 0.000000e+00, i32 1
  %13518 = insertelement <4 x float> %13517, float 0.000000e+00, i32 2
  %13519 = insertelement <4 x float> %13518, float 0.000000e+00, i32 3
  %13520 = call <4 x float> @llvm.fma.f32.460(<4 x float> %13513, <4 x float> %13519, <4 x float> %13505)
  %13521 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13522 = getelementptr inbounds i8, i8* %13521, i64 24
  %13523 = bitcast i8* %13522 to float*
  %13524 = load float, float* %13523, align 4
  %13525 = insertelement <4 x float> zeroinitializer, float %13524, i32 0
  %13526 = insertelement <4 x float> %13525, float 1.000000e+00, i32 1
  %13527 = insertelement <4 x float> %13526, float 1.000000e+00, i32 2
  %13528 = insertelement <4 x float> %13527, float 1.000000e+00, i32 3
  %13529 = getelementptr inbounds float, float* %2, i64 11
  %13530 = load float, float* %13529, align 4
  %13531 = insertelement <4 x float> zeroinitializer, float %13530, i32 0
  %13532 = insertelement <4 x float> %13531, float 0.000000e+00, i32 1
  %13533 = insertelement <4 x float> %13532, float 0.000000e+00, i32 2
  %13534 = insertelement <4 x float> %13533, float 0.000000e+00, i32 3
  %13535 = call <4 x float> @llvm.fma.f32.461(<4 x float> %13528, <4 x float> %13534, <4 x float> %13520)
  %13536 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13537 = getelementptr inbounds i8, i8* %13536, i64 28
  %13538 = bitcast i8* %13537 to float*
  %13539 = load float, float* %13538, align 4
  %13540 = insertelement <4 x float> zeroinitializer, float %13539, i32 0
  %13541 = insertelement <4 x float> %13540, float 0.000000e+00, i32 1
  %13542 = insertelement <4 x float> %13541, float 0.000000e+00, i32 2
  %13543 = insertelement <4 x float> %13542, float 0.000000e+00, i32 3
  %13544 = getelementptr inbounds float, float* %2, i64 15
  %13545 = load float, float* %13544, align 4
  %13546 = insertelement <4 x float> zeroinitializer, float %13545, i32 0
  %13547 = insertelement <4 x float> %13546, float 0.000000e+00, i32 1
  %13548 = insertelement <4 x float> %13547, float 0.000000e+00, i32 2
  %13549 = insertelement <4 x float> %13548, float 0.000000e+00, i32 3
  %13550 = call <4 x float> @llvm.fma.f32.462(<4 x float> %13543, <4 x float> %13549, <4 x float> %13535)
  %13551 = extractelement <4 x float> %13550, i32 0
  %13552 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13553 = getelementptr inbounds i8, i8* %13552, i64 28
  %13554 = bitcast i8* %13553 to float*
  store float %13551, float* %13554, align 4
  %13555 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13556 = getelementptr inbounds i8, i8* %13555, i64 32
  %13557 = bitcast i8* %13556 to float*
  store float 0.000000e+00, float* %13557, align 4
  %13558 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13559 = getelementptr inbounds i8, i8* %13558, i64 32
  %13560 = bitcast i8* %13559 to float*
  %13561 = load float, float* %13560, align 4
  %13562 = insertelement <4 x float> zeroinitializer, float %13561, i32 0
  %13563 = insertelement <4 x float> %13562, float 0.000000e+00, i32 1
  %13564 = insertelement <4 x float> %13563, float 0.000000e+00, i32 2
  %13565 = insertelement <4 x float> %13564, float 0.000000e+00, i32 3
  %13566 = load float, float* %2, align 4
  %13567 = insertelement <4 x float> zeroinitializer, float %13566, i32 0
  %13568 = insertelement <4 x float> %13567, float 0.000000e+00, i32 1
  %13569 = insertelement <4 x float> %13568, float 0.000000e+00, i32 2
  %13570 = insertelement <4 x float> %13569, float 0.000000e+00, i32 3
  %13571 = call <4 x float> @llvm.fma.f32.463(<4 x float> %13565, <4 x float> %13570, <4 x float> zeroinitializer)
  %13572 = extractelement <4 x float> %13571, i32 0
  %13573 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13574 = getelementptr inbounds i8, i8* %13573, i64 32
  %13575 = bitcast i8* %13574 to float*
  store float %13572, float* %13575, align 4
  %13576 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13577 = getelementptr inbounds i8, i8* %13576, i64 32
  %13578 = bitcast i8* %13577 to float*
  %13579 = load float, float* %13578, align 4
  %13580 = insertelement <4 x float> zeroinitializer, float %13579, i32 0
  %13581 = insertelement <4 x float> %13580, float 1.000000e+00, i32 1
  %13582 = insertelement <4 x float> %13581, float 1.000000e+00, i32 2
  %13583 = insertelement <4 x float> %13582, float 1.000000e+00, i32 3
  %13584 = load float, float* %2, align 4
  %13585 = insertelement <4 x float> zeroinitializer, float %13584, i32 0
  %13586 = insertelement <4 x float> %13585, float 0.000000e+00, i32 1
  %13587 = insertelement <4 x float> %13586, float 0.000000e+00, i32 2
  %13588 = insertelement <4 x float> %13587, float 0.000000e+00, i32 3
  %13589 = fmul <4 x float> %13583, %13588
  %13590 = fadd <4 x float> %13589, zeroinitializer
  %13591 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13592 = getelementptr inbounds i8, i8* %13591, i64 36
  %13593 = bitcast i8* %13592 to float*
  %13594 = load float, float* %13593, align 4
  %13595 = insertelement <4 x float> zeroinitializer, float %13594, i32 0
  %13596 = insertelement <4 x float> %13595, float 0.000000e+00, i32 1
  %13597 = insertelement <4 x float> %13596, float 0.000000e+00, i32 2
  %13598 = insertelement <4 x float> %13597, float 0.000000e+00, i32 3
  %13599 = getelementptr inbounds float, float* %2, i64 4
  %13600 = load float, float* %13599, align 4
  %13601 = insertelement <4 x float> zeroinitializer, float %13600, i32 0
  %13602 = insertelement <4 x float> %13601, float 0.000000e+00, i32 1
  %13603 = insertelement <4 x float> %13602, float 0.000000e+00, i32 2
  %13604 = insertelement <4 x float> %13603, float 0.000000e+00, i32 3
  %13605 = call <4 x float> @llvm.fma.f32.464(<4 x float> %13598, <4 x float> %13604, <4 x float> %13590)
  %13606 = extractelement <4 x float> %13605, i32 0
  %13607 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13608 = getelementptr inbounds i8, i8* %13607, i64 32
  %13609 = bitcast i8* %13608 to float*
  store float %13606, float* %13609, align 4
  %13610 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13611 = getelementptr inbounds i8, i8* %13610, i64 32
  %13612 = bitcast i8* %13611 to float*
  %13613 = load float, float* %13612, align 4
  %13614 = insertelement <4 x float> zeroinitializer, float %13613, i32 0
  %13615 = insertelement <4 x float> %13614, float 1.000000e+00, i32 1
  %13616 = insertelement <4 x float> %13615, float 1.000000e+00, i32 2
  %13617 = insertelement <4 x float> %13616, float 1.000000e+00, i32 3
  %13618 = load float, float* %2, align 4
  %13619 = insertelement <4 x float> zeroinitializer, float %13618, i32 0
  %13620 = insertelement <4 x float> %13619, float 0.000000e+00, i32 1
  %13621 = insertelement <4 x float> %13620, float 0.000000e+00, i32 2
  %13622 = insertelement <4 x float> %13621, float 0.000000e+00, i32 3
  %13623 = fmul <4 x float> %13617, %13622
  %13624 = fadd <4 x float> %13623, zeroinitializer
  %13625 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13626 = getelementptr inbounds i8, i8* %13625, i64 36
  %13627 = bitcast i8* %13626 to float*
  %13628 = load float, float* %13627, align 4
  %13629 = insertelement <4 x float> zeroinitializer, float %13628, i32 0
  %13630 = insertelement <4 x float> %13629, float 1.000000e+00, i32 1
  %13631 = insertelement <4 x float> %13630, float 1.000000e+00, i32 2
  %13632 = insertelement <4 x float> %13631, float 1.000000e+00, i32 3
  %13633 = getelementptr inbounds float, float* %2, i64 4
  %13634 = load float, float* %13633, align 4
  %13635 = insertelement <4 x float> zeroinitializer, float %13634, i32 0
  %13636 = insertelement <4 x float> %13635, float 0.000000e+00, i32 1
  %13637 = insertelement <4 x float> %13636, float 0.000000e+00, i32 2
  %13638 = insertelement <4 x float> %13637, float 0.000000e+00, i32 3
  %13639 = call <4 x float> @llvm.fma.f32.465(<4 x float> %13632, <4 x float> %13638, <4 x float> %13624)
  %13640 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13641 = getelementptr inbounds i8, i8* %13640, i64 40
  %13642 = bitcast i8* %13641 to float*
  %13643 = load float, float* %13642, align 4
  %13644 = insertelement <4 x float> zeroinitializer, float %13643, i32 0
  %13645 = insertelement <4 x float> %13644, float 0.000000e+00, i32 1
  %13646 = insertelement <4 x float> %13645, float 0.000000e+00, i32 2
  %13647 = insertelement <4 x float> %13646, float 0.000000e+00, i32 3
  %13648 = getelementptr inbounds float, float* %2, i64 8
  %13649 = load float, float* %13648, align 4
  %13650 = insertelement <4 x float> zeroinitializer, float %13649, i32 0
  %13651 = insertelement <4 x float> %13650, float 0.000000e+00, i32 1
  %13652 = insertelement <4 x float> %13651, float 0.000000e+00, i32 2
  %13653 = insertelement <4 x float> %13652, float 0.000000e+00, i32 3
  %13654 = call <4 x float> @llvm.fma.f32.466(<4 x float> %13647, <4 x float> %13653, <4 x float> %13639)
  %13655 = extractelement <4 x float> %13654, i32 0
  %13656 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13657 = getelementptr inbounds i8, i8* %13656, i64 32
  %13658 = bitcast i8* %13657 to float*
  store float %13655, float* %13658, align 4
  %13659 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13660 = getelementptr inbounds i8, i8* %13659, i64 32
  %13661 = bitcast i8* %13660 to float*
  %13662 = load float, float* %13661, align 4
  %13663 = insertelement <4 x float> zeroinitializer, float %13662, i32 0
  %13664 = insertelement <4 x float> %13663, float 1.000000e+00, i32 1
  %13665 = insertelement <4 x float> %13664, float 1.000000e+00, i32 2
  %13666 = insertelement <4 x float> %13665, float 1.000000e+00, i32 3
  %13667 = load float, float* %2, align 4
  %13668 = insertelement <4 x float> zeroinitializer, float %13667, i32 0
  %13669 = insertelement <4 x float> %13668, float 0.000000e+00, i32 1
  %13670 = insertelement <4 x float> %13669, float 0.000000e+00, i32 2
  %13671 = insertelement <4 x float> %13670, float 0.000000e+00, i32 3
  %13672 = fmul <4 x float> %13666, %13671
  %13673 = fadd <4 x float> %13672, zeroinitializer
  %13674 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13675 = getelementptr inbounds i8, i8* %13674, i64 36
  %13676 = bitcast i8* %13675 to float*
  %13677 = load float, float* %13676, align 4
  %13678 = insertelement <4 x float> zeroinitializer, float %13677, i32 0
  %13679 = insertelement <4 x float> %13678, float 1.000000e+00, i32 1
  %13680 = insertelement <4 x float> %13679, float 1.000000e+00, i32 2
  %13681 = insertelement <4 x float> %13680, float 1.000000e+00, i32 3
  %13682 = getelementptr inbounds float, float* %2, i64 4
  %13683 = load float, float* %13682, align 4
  %13684 = insertelement <4 x float> zeroinitializer, float %13683, i32 0
  %13685 = insertelement <4 x float> %13684, float 0.000000e+00, i32 1
  %13686 = insertelement <4 x float> %13685, float 0.000000e+00, i32 2
  %13687 = insertelement <4 x float> %13686, float 0.000000e+00, i32 3
  %13688 = call <4 x float> @llvm.fma.f32.467(<4 x float> %13681, <4 x float> %13687, <4 x float> %13673)
  %13689 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13690 = getelementptr inbounds i8, i8* %13689, i64 40
  %13691 = bitcast i8* %13690 to float*
  %13692 = load float, float* %13691, align 4
  %13693 = insertelement <4 x float> zeroinitializer, float %13692, i32 0
  %13694 = insertelement <4 x float> %13693, float 1.000000e+00, i32 1
  %13695 = insertelement <4 x float> %13694, float 1.000000e+00, i32 2
  %13696 = insertelement <4 x float> %13695, float 1.000000e+00, i32 3
  %13697 = getelementptr inbounds float, float* %2, i64 8
  %13698 = load float, float* %13697, align 4
  %13699 = insertelement <4 x float> zeroinitializer, float %13698, i32 0
  %13700 = insertelement <4 x float> %13699, float 0.000000e+00, i32 1
  %13701 = insertelement <4 x float> %13700, float 0.000000e+00, i32 2
  %13702 = insertelement <4 x float> %13701, float 0.000000e+00, i32 3
  %13703 = call <4 x float> @llvm.fma.f32.468(<4 x float> %13696, <4 x float> %13702, <4 x float> %13688)
  %13704 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13705 = getelementptr inbounds i8, i8* %13704, i64 44
  %13706 = bitcast i8* %13705 to float*
  %13707 = load float, float* %13706, align 4
  %13708 = insertelement <4 x float> zeroinitializer, float %13707, i32 0
  %13709 = insertelement <4 x float> %13708, float 0.000000e+00, i32 1
  %13710 = insertelement <4 x float> %13709, float 0.000000e+00, i32 2
  %13711 = insertelement <4 x float> %13710, float 0.000000e+00, i32 3
  %13712 = getelementptr inbounds float, float* %2, i64 12
  %13713 = load float, float* %13712, align 4
  %13714 = insertelement <4 x float> zeroinitializer, float %13713, i32 0
  %13715 = insertelement <4 x float> %13714, float 0.000000e+00, i32 1
  %13716 = insertelement <4 x float> %13715, float 0.000000e+00, i32 2
  %13717 = insertelement <4 x float> %13716, float 0.000000e+00, i32 3
  %13718 = call <4 x float> @llvm.fma.f32.469(<4 x float> %13711, <4 x float> %13717, <4 x float> %13703)
  %13719 = extractelement <4 x float> %13718, i32 0
  %13720 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13721 = getelementptr inbounds i8, i8* %13720, i64 32
  %13722 = bitcast i8* %13721 to float*
  store float %13719, float* %13722, align 4
  %13723 = extractelement <4 x float> %13718, i32 1
  %13724 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13725 = getelementptr inbounds i8, i8* %13724, i64 36
  %13726 = bitcast i8* %13725 to float*
  store float %13723, float* %13726, align 4
  %13727 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13728 = getelementptr inbounds i8, i8* %13727, i64 32
  %13729 = bitcast i8* %13728 to float*
  %13730 = load float, float* %13729, align 4
  %13731 = insertelement <4 x float> zeroinitializer, float %13730, i32 0
  %13732 = insertelement <4 x float> %13731, float 0.000000e+00, i32 1
  %13733 = insertelement <4 x float> %13732, float 0.000000e+00, i32 2
  %13734 = insertelement <4 x float> %13733, float 0.000000e+00, i32 3
  %13735 = getelementptr inbounds float, float* %2, i64 1
  %13736 = load float, float* %13735, align 4
  %13737 = insertelement <4 x float> zeroinitializer, float %13736, i32 0
  %13738 = insertelement <4 x float> %13737, float 0.000000e+00, i32 1
  %13739 = insertelement <4 x float> %13738, float 0.000000e+00, i32 2
  %13740 = insertelement <4 x float> %13739, float 0.000000e+00, i32 3
  %13741 = call <4 x float> @llvm.fma.f32.470(<4 x float> %13734, <4 x float> %13740, <4 x float> zeroinitializer)
  %13742 = extractelement <4 x float> %13741, i32 0
  %13743 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13744 = getelementptr inbounds i8, i8* %13743, i64 36
  %13745 = bitcast i8* %13744 to float*
  store float %13742, float* %13745, align 4
  %13746 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13747 = getelementptr inbounds i8, i8* %13746, i64 32
  %13748 = bitcast i8* %13747 to float*
  %13749 = load float, float* %13748, align 4
  %13750 = insertelement <4 x float> zeroinitializer, float %13749, i32 0
  %13751 = insertelement <4 x float> %13750, float 1.000000e+00, i32 1
  %13752 = insertelement <4 x float> %13751, float 1.000000e+00, i32 2
  %13753 = insertelement <4 x float> %13752, float 1.000000e+00, i32 3
  %13754 = getelementptr inbounds float, float* %2, i64 1
  %13755 = load float, float* %13754, align 4
  %13756 = insertelement <4 x float> zeroinitializer, float %13755, i32 0
  %13757 = insertelement <4 x float> %13756, float 0.000000e+00, i32 1
  %13758 = insertelement <4 x float> %13757, float 0.000000e+00, i32 2
  %13759 = insertelement <4 x float> %13758, float 0.000000e+00, i32 3
  %13760 = fmul <4 x float> %13753, %13759
  %13761 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13762 = getelementptr inbounds i8, i8* %13761, i64 36
  %13763 = bitcast i8* %13762 to float*
  %13764 = load float, float* %13763, align 4
  %13765 = insertelement <4 x float> zeroinitializer, float %13764, i32 0
  %13766 = insertelement <4 x float> %13765, float 0.000000e+00, i32 1
  %13767 = insertelement <4 x float> %13766, float 0.000000e+00, i32 2
  %13768 = insertelement <4 x float> %13767, float 0.000000e+00, i32 3
  %13769 = getelementptr inbounds float, float* %2, i64 5
  %13770 = load float, float* %13769, align 4
  %13771 = insertelement <4 x float> zeroinitializer, float %13770, i32 0
  %13772 = insertelement <4 x float> %13771, float 0.000000e+00, i32 1
  %13773 = insertelement <4 x float> %13772, float 0.000000e+00, i32 2
  %13774 = insertelement <4 x float> %13773, float 0.000000e+00, i32 3
  %13775 = call <4 x float> @llvm.fma.f32.471(<4 x float> %13768, <4 x float> %13774, <4 x float> %13760)
  %13776 = extractelement <4 x float> %13775, i32 0
  %13777 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13778 = getelementptr inbounds i8, i8* %13777, i64 36
  %13779 = bitcast i8* %13778 to float*
  store float %13776, float* %13779, align 4
  %13780 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13781 = getelementptr inbounds i8, i8* %13780, i64 32
  %13782 = bitcast i8* %13781 to float*
  %13783 = load float, float* %13782, align 4
  %13784 = insertelement <4 x float> zeroinitializer, float %13783, i32 0
  %13785 = insertelement <4 x float> %13784, float 1.000000e+00, i32 1
  %13786 = insertelement <4 x float> %13785, float 1.000000e+00, i32 2
  %13787 = insertelement <4 x float> %13786, float 1.000000e+00, i32 3
  %13788 = getelementptr inbounds float, float* %2, i64 1
  %13789 = load float, float* %13788, align 4
  %13790 = insertelement <4 x float> zeroinitializer, float %13789, i32 0
  %13791 = insertelement <4 x float> %13790, float 0.000000e+00, i32 1
  %13792 = insertelement <4 x float> %13791, float 0.000000e+00, i32 2
  %13793 = insertelement <4 x float> %13792, float 0.000000e+00, i32 3
  %13794 = fmul <4 x float> %13787, %13793
  %13795 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13796 = getelementptr inbounds i8, i8* %13795, i64 36
  %13797 = bitcast i8* %13796 to float*
  %13798 = load float, float* %13797, align 4
  %13799 = insertelement <4 x float> zeroinitializer, float %13798, i32 0
  %13800 = insertelement <4 x float> %13799, float 1.000000e+00, i32 1
  %13801 = insertelement <4 x float> %13800, float 1.000000e+00, i32 2
  %13802 = insertelement <4 x float> %13801, float 1.000000e+00, i32 3
  %13803 = getelementptr inbounds float, float* %2, i64 5
  %13804 = load float, float* %13803, align 4
  %13805 = insertelement <4 x float> zeroinitializer, float %13804, i32 0
  %13806 = insertelement <4 x float> %13805, float 0.000000e+00, i32 1
  %13807 = insertelement <4 x float> %13806, float 0.000000e+00, i32 2
  %13808 = insertelement <4 x float> %13807, float 0.000000e+00, i32 3
  %13809 = call <4 x float> @llvm.fma.f32.472(<4 x float> %13802, <4 x float> %13808, <4 x float> %13794)
  %13810 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13811 = getelementptr inbounds i8, i8* %13810, i64 40
  %13812 = bitcast i8* %13811 to float*
  %13813 = load float, float* %13812, align 4
  %13814 = insertelement <4 x float> zeroinitializer, float %13813, i32 0
  %13815 = insertelement <4 x float> %13814, float 0.000000e+00, i32 1
  %13816 = insertelement <4 x float> %13815, float 0.000000e+00, i32 2
  %13817 = insertelement <4 x float> %13816, float 0.000000e+00, i32 3
  %13818 = getelementptr inbounds float, float* %2, i64 9
  %13819 = load float, float* %13818, align 4
  %13820 = insertelement <4 x float> zeroinitializer, float %13819, i32 0
  %13821 = insertelement <4 x float> %13820, float 0.000000e+00, i32 1
  %13822 = insertelement <4 x float> %13821, float 0.000000e+00, i32 2
  %13823 = insertelement <4 x float> %13822, float 0.000000e+00, i32 3
  %13824 = call <4 x float> @llvm.fma.f32.473(<4 x float> %13817, <4 x float> %13823, <4 x float> %13809)
  %13825 = extractelement <4 x float> %13824, i32 0
  %13826 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13827 = getelementptr inbounds i8, i8* %13826, i64 36
  %13828 = bitcast i8* %13827 to float*
  store float %13825, float* %13828, align 4
  %13829 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13830 = getelementptr inbounds i8, i8* %13829, i64 32
  %13831 = bitcast i8* %13830 to float*
  %13832 = load float, float* %13831, align 4
  %13833 = insertelement <4 x float> zeroinitializer, float %13832, i32 0
  %13834 = insertelement <4 x float> %13833, float 1.000000e+00, i32 1
  %13835 = insertelement <4 x float> %13834, float 1.000000e+00, i32 2
  %13836 = insertelement <4 x float> %13835, float 1.000000e+00, i32 3
  %13837 = getelementptr inbounds float, float* %2, i64 1
  %13838 = load float, float* %13837, align 4
  %13839 = insertelement <4 x float> zeroinitializer, float %13838, i32 0
  %13840 = insertelement <4 x float> %13839, float 0.000000e+00, i32 1
  %13841 = insertelement <4 x float> %13840, float 0.000000e+00, i32 2
  %13842 = insertelement <4 x float> %13841, float 0.000000e+00, i32 3
  %13843 = fmul <4 x float> %13836, %13842
  %13844 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13845 = getelementptr inbounds i8, i8* %13844, i64 36
  %13846 = bitcast i8* %13845 to float*
  %13847 = load float, float* %13846, align 4
  %13848 = insertelement <4 x float> zeroinitializer, float %13847, i32 0
  %13849 = insertelement <4 x float> %13848, float 1.000000e+00, i32 1
  %13850 = insertelement <4 x float> %13849, float 1.000000e+00, i32 2
  %13851 = insertelement <4 x float> %13850, float 1.000000e+00, i32 3
  %13852 = getelementptr inbounds float, float* %2, i64 5
  %13853 = load float, float* %13852, align 4
  %13854 = insertelement <4 x float> zeroinitializer, float %13853, i32 0
  %13855 = insertelement <4 x float> %13854, float 0.000000e+00, i32 1
  %13856 = insertelement <4 x float> %13855, float 0.000000e+00, i32 2
  %13857 = insertelement <4 x float> %13856, float 0.000000e+00, i32 3
  %13858 = call <4 x float> @llvm.fma.f32.474(<4 x float> %13851, <4 x float> %13857, <4 x float> %13843)
  %13859 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13860 = getelementptr inbounds i8, i8* %13859, i64 40
  %13861 = bitcast i8* %13860 to float*
  %13862 = load float, float* %13861, align 4
  %13863 = insertelement <4 x float> zeroinitializer, float %13862, i32 0
  %13864 = insertelement <4 x float> %13863, float 1.000000e+00, i32 1
  %13865 = insertelement <4 x float> %13864, float 1.000000e+00, i32 2
  %13866 = insertelement <4 x float> %13865, float 1.000000e+00, i32 3
  %13867 = getelementptr inbounds float, float* %2, i64 9
  %13868 = load float, float* %13867, align 4
  %13869 = insertelement <4 x float> zeroinitializer, float %13868, i32 0
  %13870 = insertelement <4 x float> %13869, float 0.000000e+00, i32 1
  %13871 = insertelement <4 x float> %13870, float 0.000000e+00, i32 2
  %13872 = insertelement <4 x float> %13871, float 0.000000e+00, i32 3
  %13873 = call <4 x float> @llvm.fma.f32.475(<4 x float> %13866, <4 x float> %13872, <4 x float> %13858)
  %13874 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13875 = getelementptr inbounds i8, i8* %13874, i64 44
  %13876 = bitcast i8* %13875 to float*
  %13877 = load float, float* %13876, align 4
  %13878 = insertelement <4 x float> zeroinitializer, float %13877, i32 0
  %13879 = insertelement <4 x float> %13878, float 0.000000e+00, i32 1
  %13880 = insertelement <4 x float> %13879, float 0.000000e+00, i32 2
  %13881 = insertelement <4 x float> %13880, float 0.000000e+00, i32 3
  %13882 = getelementptr inbounds float, float* %2, i64 13
  %13883 = load float, float* %13882, align 4
  %13884 = insertelement <4 x float> zeroinitializer, float %13883, i32 0
  %13885 = insertelement <4 x float> %13884, float 0.000000e+00, i32 1
  %13886 = insertelement <4 x float> %13885, float 0.000000e+00, i32 2
  %13887 = insertelement <4 x float> %13886, float 0.000000e+00, i32 3
  %13888 = call <4 x float> @llvm.fma.f32.476(<4 x float> %13881, <4 x float> %13887, <4 x float> %13873)
  %13889 = extractelement <4 x float> %13888, i32 0
  %13890 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13891 = getelementptr inbounds i8, i8* %13890, i64 36
  %13892 = bitcast i8* %13891 to float*
  store float %13889, float* %13892, align 4
  %13893 = extractelement <4 x float> %13888, i32 1
  %13894 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13895 = getelementptr inbounds i8, i8* %13894, i64 40
  %13896 = bitcast i8* %13895 to float*
  store float %13893, float* %13896, align 4
  %13897 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13898 = getelementptr inbounds i8, i8* %13897, i64 32
  %13899 = bitcast i8* %13898 to float*
  %13900 = load float, float* %13899, align 4
  %13901 = insertelement <4 x float> zeroinitializer, float %13900, i32 0
  %13902 = insertelement <4 x float> %13901, float 0.000000e+00, i32 1
  %13903 = insertelement <4 x float> %13902, float 0.000000e+00, i32 2
  %13904 = insertelement <4 x float> %13903, float 0.000000e+00, i32 3
  %13905 = getelementptr inbounds float, float* %2, i64 2
  %13906 = load float, float* %13905, align 4
  %13907 = insertelement <4 x float> zeroinitializer, float %13906, i32 0
  %13908 = insertelement <4 x float> %13907, float 0.000000e+00, i32 1
  %13909 = insertelement <4 x float> %13908, float 0.000000e+00, i32 2
  %13910 = insertelement <4 x float> %13909, float 0.000000e+00, i32 3
  %13911 = call <4 x float> @llvm.fma.f32.477(<4 x float> %13904, <4 x float> %13910, <4 x float> zeroinitializer)
  %13912 = extractelement <4 x float> %13911, i32 0
  %13913 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13914 = getelementptr inbounds i8, i8* %13913, i64 40
  %13915 = bitcast i8* %13914 to float*
  store float %13912, float* %13915, align 4
  %13916 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13917 = getelementptr inbounds i8, i8* %13916, i64 32
  %13918 = bitcast i8* %13917 to float*
  %13919 = load float, float* %13918, align 4
  %13920 = insertelement <4 x float> zeroinitializer, float %13919, i32 0
  %13921 = insertelement <4 x float> %13920, float 1.000000e+00, i32 1
  %13922 = insertelement <4 x float> %13921, float 1.000000e+00, i32 2
  %13923 = insertelement <4 x float> %13922, float 1.000000e+00, i32 3
  %13924 = getelementptr inbounds float, float* %2, i64 2
  %13925 = load float, float* %13924, align 4
  %13926 = insertelement <4 x float> zeroinitializer, float %13925, i32 0
  %13927 = insertelement <4 x float> %13926, float 0.000000e+00, i32 1
  %13928 = insertelement <4 x float> %13927, float 0.000000e+00, i32 2
  %13929 = insertelement <4 x float> %13928, float 0.000000e+00, i32 3
  %13930 = fmul <4 x float> %13923, %13929
  %13931 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13932 = getelementptr inbounds i8, i8* %13931, i64 36
  %13933 = bitcast i8* %13932 to float*
  %13934 = load float, float* %13933, align 4
  %13935 = insertelement <4 x float> zeroinitializer, float %13934, i32 0
  %13936 = insertelement <4 x float> %13935, float 0.000000e+00, i32 1
  %13937 = insertelement <4 x float> %13936, float 0.000000e+00, i32 2
  %13938 = insertelement <4 x float> %13937, float 0.000000e+00, i32 3
  %13939 = getelementptr inbounds float, float* %2, i64 6
  %13940 = load float, float* %13939, align 4
  %13941 = insertelement <4 x float> zeroinitializer, float %13940, i32 0
  %13942 = insertelement <4 x float> %13941, float 0.000000e+00, i32 1
  %13943 = insertelement <4 x float> %13942, float 0.000000e+00, i32 2
  %13944 = insertelement <4 x float> %13943, float 0.000000e+00, i32 3
  %13945 = call <4 x float> @llvm.fma.f32.478(<4 x float> %13938, <4 x float> %13944, <4 x float> %13930)
  %13946 = extractelement <4 x float> %13945, i32 0
  %13947 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13948 = getelementptr inbounds i8, i8* %13947, i64 40
  %13949 = bitcast i8* %13948 to float*
  store float %13946, float* %13949, align 4
  %13950 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13951 = getelementptr inbounds i8, i8* %13950, i64 32
  %13952 = bitcast i8* %13951 to float*
  %13953 = load float, float* %13952, align 4
  %13954 = insertelement <4 x float> zeroinitializer, float %13953, i32 0
  %13955 = insertelement <4 x float> %13954, float 1.000000e+00, i32 1
  %13956 = insertelement <4 x float> %13955, float 1.000000e+00, i32 2
  %13957 = insertelement <4 x float> %13956, float 1.000000e+00, i32 3
  %13958 = getelementptr inbounds float, float* %2, i64 2
  %13959 = load float, float* %13958, align 4
  %13960 = insertelement <4 x float> zeroinitializer, float %13959, i32 0
  %13961 = insertelement <4 x float> %13960, float 0.000000e+00, i32 1
  %13962 = insertelement <4 x float> %13961, float 0.000000e+00, i32 2
  %13963 = insertelement <4 x float> %13962, float 0.000000e+00, i32 3
  %13964 = fmul <4 x float> %13957, %13963
  %13965 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13966 = getelementptr inbounds i8, i8* %13965, i64 36
  %13967 = bitcast i8* %13966 to float*
  %13968 = load float, float* %13967, align 4
  %13969 = insertelement <4 x float> zeroinitializer, float %13968, i32 0
  %13970 = insertelement <4 x float> %13969, float 1.000000e+00, i32 1
  %13971 = insertelement <4 x float> %13970, float 1.000000e+00, i32 2
  %13972 = insertelement <4 x float> %13971, float 1.000000e+00, i32 3
  %13973 = getelementptr inbounds float, float* %2, i64 6
  %13974 = load float, float* %13973, align 4
  %13975 = insertelement <4 x float> zeroinitializer, float %13974, i32 0
  %13976 = insertelement <4 x float> %13975, float 0.000000e+00, i32 1
  %13977 = insertelement <4 x float> %13976, float 0.000000e+00, i32 2
  %13978 = insertelement <4 x float> %13977, float 0.000000e+00, i32 3
  %13979 = call <4 x float> @llvm.fma.f32.479(<4 x float> %13972, <4 x float> %13978, <4 x float> %13964)
  %13980 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13981 = getelementptr inbounds i8, i8* %13980, i64 40
  %13982 = bitcast i8* %13981 to float*
  %13983 = load float, float* %13982, align 4
  %13984 = insertelement <4 x float> zeroinitializer, float %13983, i32 0
  %13985 = insertelement <4 x float> %13984, float 0.000000e+00, i32 1
  %13986 = insertelement <4 x float> %13985, float 0.000000e+00, i32 2
  %13987 = insertelement <4 x float> %13986, float 0.000000e+00, i32 3
  %13988 = getelementptr inbounds float, float* %2, i64 10
  %13989 = load float, float* %13988, align 4
  %13990 = insertelement <4 x float> zeroinitializer, float %13989, i32 0
  %13991 = insertelement <4 x float> %13990, float 0.000000e+00, i32 1
  %13992 = insertelement <4 x float> %13991, float 0.000000e+00, i32 2
  %13993 = insertelement <4 x float> %13992, float 0.000000e+00, i32 3
  %13994 = call <4 x float> @llvm.fma.f32.480(<4 x float> %13987, <4 x float> %13993, <4 x float> %13979)
  %13995 = extractelement <4 x float> %13994, i32 0
  %13996 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %13997 = getelementptr inbounds i8, i8* %13996, i64 40
  %13998 = bitcast i8* %13997 to float*
  store float %13995, float* %13998, align 4
  %13999 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14000 = getelementptr inbounds i8, i8* %13999, i64 32
  %14001 = bitcast i8* %14000 to float*
  %14002 = load float, float* %14001, align 4
  %14003 = insertelement <4 x float> zeroinitializer, float %14002, i32 0
  %14004 = insertelement <4 x float> %14003, float 1.000000e+00, i32 1
  %14005 = insertelement <4 x float> %14004, float 1.000000e+00, i32 2
  %14006 = insertelement <4 x float> %14005, float 1.000000e+00, i32 3
  %14007 = getelementptr inbounds float, float* %2, i64 2
  %14008 = load float, float* %14007, align 4
  %14009 = insertelement <4 x float> zeroinitializer, float %14008, i32 0
  %14010 = insertelement <4 x float> %14009, float 0.000000e+00, i32 1
  %14011 = insertelement <4 x float> %14010, float 0.000000e+00, i32 2
  %14012 = insertelement <4 x float> %14011, float 0.000000e+00, i32 3
  %14013 = fmul <4 x float> %14006, %14012
  %14014 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14015 = getelementptr inbounds i8, i8* %14014, i64 36
  %14016 = bitcast i8* %14015 to float*
  %14017 = load float, float* %14016, align 4
  %14018 = insertelement <4 x float> zeroinitializer, float %14017, i32 0
  %14019 = insertelement <4 x float> %14018, float 1.000000e+00, i32 1
  %14020 = insertelement <4 x float> %14019, float 1.000000e+00, i32 2
  %14021 = insertelement <4 x float> %14020, float 1.000000e+00, i32 3
  %14022 = getelementptr inbounds float, float* %2, i64 6
  %14023 = load float, float* %14022, align 4
  %14024 = insertelement <4 x float> zeroinitializer, float %14023, i32 0
  %14025 = insertelement <4 x float> %14024, float 0.000000e+00, i32 1
  %14026 = insertelement <4 x float> %14025, float 0.000000e+00, i32 2
  %14027 = insertelement <4 x float> %14026, float 0.000000e+00, i32 3
  %14028 = call <4 x float> @llvm.fma.f32.481(<4 x float> %14021, <4 x float> %14027, <4 x float> %14013)
  %14029 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14030 = getelementptr inbounds i8, i8* %14029, i64 40
  %14031 = bitcast i8* %14030 to float*
  %14032 = load float, float* %14031, align 4
  %14033 = insertelement <4 x float> zeroinitializer, float %14032, i32 0
  %14034 = insertelement <4 x float> %14033, float 1.000000e+00, i32 1
  %14035 = insertelement <4 x float> %14034, float 1.000000e+00, i32 2
  %14036 = insertelement <4 x float> %14035, float 1.000000e+00, i32 3
  %14037 = getelementptr inbounds float, float* %2, i64 10
  %14038 = load float, float* %14037, align 4
  %14039 = insertelement <4 x float> zeroinitializer, float %14038, i32 0
  %14040 = insertelement <4 x float> %14039, float 0.000000e+00, i32 1
  %14041 = insertelement <4 x float> %14040, float 0.000000e+00, i32 2
  %14042 = insertelement <4 x float> %14041, float 0.000000e+00, i32 3
  %14043 = call <4 x float> @llvm.fma.f32.482(<4 x float> %14036, <4 x float> %14042, <4 x float> %14028)
  %14044 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14045 = getelementptr inbounds i8, i8* %14044, i64 44
  %14046 = bitcast i8* %14045 to float*
  %14047 = load float, float* %14046, align 4
  %14048 = insertelement <4 x float> zeroinitializer, float %14047, i32 0
  %14049 = insertelement <4 x float> %14048, float 0.000000e+00, i32 1
  %14050 = insertelement <4 x float> %14049, float 0.000000e+00, i32 2
  %14051 = insertelement <4 x float> %14050, float 0.000000e+00, i32 3
  %14052 = getelementptr inbounds float, float* %2, i64 14
  %14053 = load float, float* %14052, align 4
  %14054 = insertelement <4 x float> zeroinitializer, float %14053, i32 0
  %14055 = insertelement <4 x float> %14054, float 0.000000e+00, i32 1
  %14056 = insertelement <4 x float> %14055, float 0.000000e+00, i32 2
  %14057 = insertelement <4 x float> %14056, float 0.000000e+00, i32 3
  %14058 = call <4 x float> @llvm.fma.f32.483(<4 x float> %14051, <4 x float> %14057, <4 x float> %14043)
  %14059 = extractelement <4 x float> %14058, i32 0
  %14060 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14061 = getelementptr inbounds i8, i8* %14060, i64 40
  %14062 = bitcast i8* %14061 to float*
  store float %14059, float* %14062, align 4
  %14063 = extractelement <4 x float> %14058, i32 1
  %14064 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14065 = getelementptr inbounds i8, i8* %14064, i64 44
  %14066 = bitcast i8* %14065 to float*
  store float %14063, float* %14066, align 4
  %14067 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14068 = getelementptr inbounds i8, i8* %14067, i64 32
  %14069 = bitcast i8* %14068 to float*
  %14070 = load float, float* %14069, align 4
  %14071 = insertelement <4 x float> zeroinitializer, float %14070, i32 0
  %14072 = insertelement <4 x float> %14071, float 0.000000e+00, i32 1
  %14073 = insertelement <4 x float> %14072, float 0.000000e+00, i32 2
  %14074 = insertelement <4 x float> %14073, float 0.000000e+00, i32 3
  %14075 = getelementptr inbounds float, float* %2, i64 3
  %14076 = load float, float* %14075, align 4
  %14077 = insertelement <4 x float> zeroinitializer, float %14076, i32 0
  %14078 = insertelement <4 x float> %14077, float 0.000000e+00, i32 1
  %14079 = insertelement <4 x float> %14078, float 0.000000e+00, i32 2
  %14080 = insertelement <4 x float> %14079, float 0.000000e+00, i32 3
  %14081 = call <4 x float> @llvm.fma.f32.484(<4 x float> %14074, <4 x float> %14080, <4 x float> zeroinitializer)
  %14082 = extractelement <4 x float> %14081, i32 0
  %14083 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14084 = getelementptr inbounds i8, i8* %14083, i64 44
  %14085 = bitcast i8* %14084 to float*
  store float %14082, float* %14085, align 4
  %14086 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14087 = getelementptr inbounds i8, i8* %14086, i64 32
  %14088 = bitcast i8* %14087 to float*
  %14089 = load float, float* %14088, align 4
  %14090 = insertelement <4 x float> zeroinitializer, float %14089, i32 0
  %14091 = insertelement <4 x float> %14090, float 1.000000e+00, i32 1
  %14092 = insertelement <4 x float> %14091, float 1.000000e+00, i32 2
  %14093 = insertelement <4 x float> %14092, float 1.000000e+00, i32 3
  %14094 = getelementptr inbounds float, float* %2, i64 3
  %14095 = load float, float* %14094, align 4
  %14096 = insertelement <4 x float> zeroinitializer, float %14095, i32 0
  %14097 = insertelement <4 x float> %14096, float 0.000000e+00, i32 1
  %14098 = insertelement <4 x float> %14097, float 0.000000e+00, i32 2
  %14099 = insertelement <4 x float> %14098, float 0.000000e+00, i32 3
  %14100 = fmul <4 x float> %14093, %14099
  %14101 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14102 = getelementptr inbounds i8, i8* %14101, i64 36
  %14103 = bitcast i8* %14102 to float*
  %14104 = load float, float* %14103, align 4
  %14105 = insertelement <4 x float> zeroinitializer, float %14104, i32 0
  %14106 = insertelement <4 x float> %14105, float 0.000000e+00, i32 1
  %14107 = insertelement <4 x float> %14106, float 0.000000e+00, i32 2
  %14108 = insertelement <4 x float> %14107, float 0.000000e+00, i32 3
  %14109 = getelementptr inbounds float, float* %2, i64 7
  %14110 = load float, float* %14109, align 4
  %14111 = insertelement <4 x float> zeroinitializer, float %14110, i32 0
  %14112 = insertelement <4 x float> %14111, float 0.000000e+00, i32 1
  %14113 = insertelement <4 x float> %14112, float 0.000000e+00, i32 2
  %14114 = insertelement <4 x float> %14113, float 0.000000e+00, i32 3
  %14115 = call <4 x float> @llvm.fma.f32.485(<4 x float> %14108, <4 x float> %14114, <4 x float> %14100)
  %14116 = extractelement <4 x float> %14115, i32 0
  %14117 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14118 = getelementptr inbounds i8, i8* %14117, i64 44
  %14119 = bitcast i8* %14118 to float*
  store float %14116, float* %14119, align 4
  %14120 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14121 = getelementptr inbounds i8, i8* %14120, i64 32
  %14122 = bitcast i8* %14121 to float*
  %14123 = load float, float* %14122, align 4
  %14124 = insertelement <4 x float> zeroinitializer, float %14123, i32 0
  %14125 = insertelement <4 x float> %14124, float 1.000000e+00, i32 1
  %14126 = insertelement <4 x float> %14125, float 1.000000e+00, i32 2
  %14127 = insertelement <4 x float> %14126, float 1.000000e+00, i32 3
  %14128 = getelementptr inbounds float, float* %2, i64 3
  %14129 = load float, float* %14128, align 4
  %14130 = insertelement <4 x float> zeroinitializer, float %14129, i32 0
  %14131 = insertelement <4 x float> %14130, float 0.000000e+00, i32 1
  %14132 = insertelement <4 x float> %14131, float 0.000000e+00, i32 2
  %14133 = insertelement <4 x float> %14132, float 0.000000e+00, i32 3
  %14134 = fmul <4 x float> %14127, %14133
  %14135 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14136 = getelementptr inbounds i8, i8* %14135, i64 36
  %14137 = bitcast i8* %14136 to float*
  %14138 = load float, float* %14137, align 4
  %14139 = insertelement <4 x float> zeroinitializer, float %14138, i32 0
  %14140 = insertelement <4 x float> %14139, float 1.000000e+00, i32 1
  %14141 = insertelement <4 x float> %14140, float 1.000000e+00, i32 2
  %14142 = insertelement <4 x float> %14141, float 1.000000e+00, i32 3
  %14143 = getelementptr inbounds float, float* %2, i64 7
  %14144 = load float, float* %14143, align 4
  %14145 = insertelement <4 x float> zeroinitializer, float %14144, i32 0
  %14146 = insertelement <4 x float> %14145, float 0.000000e+00, i32 1
  %14147 = insertelement <4 x float> %14146, float 0.000000e+00, i32 2
  %14148 = insertelement <4 x float> %14147, float 0.000000e+00, i32 3
  %14149 = call <4 x float> @llvm.fma.f32.486(<4 x float> %14142, <4 x float> %14148, <4 x float> %14134)
  %14150 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14151 = getelementptr inbounds i8, i8* %14150, i64 40
  %14152 = bitcast i8* %14151 to float*
  %14153 = load float, float* %14152, align 4
  %14154 = insertelement <4 x float> zeroinitializer, float %14153, i32 0
  %14155 = insertelement <4 x float> %14154, float 0.000000e+00, i32 1
  %14156 = insertelement <4 x float> %14155, float 0.000000e+00, i32 2
  %14157 = insertelement <4 x float> %14156, float 0.000000e+00, i32 3
  %14158 = getelementptr inbounds float, float* %2, i64 11
  %14159 = load float, float* %14158, align 4
  %14160 = insertelement <4 x float> zeroinitializer, float %14159, i32 0
  %14161 = insertelement <4 x float> %14160, float 0.000000e+00, i32 1
  %14162 = insertelement <4 x float> %14161, float 0.000000e+00, i32 2
  %14163 = insertelement <4 x float> %14162, float 0.000000e+00, i32 3
  %14164 = call <4 x float> @llvm.fma.f32.487(<4 x float> %14157, <4 x float> %14163, <4 x float> %14149)
  %14165 = extractelement <4 x float> %14164, i32 0
  %14166 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14167 = getelementptr inbounds i8, i8* %14166, i64 44
  %14168 = bitcast i8* %14167 to float*
  store float %14165, float* %14168, align 4
  %14169 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14170 = getelementptr inbounds i8, i8* %14169, i64 32
  %14171 = bitcast i8* %14170 to float*
  %14172 = load float, float* %14171, align 4
  %14173 = insertelement <4 x float> zeroinitializer, float %14172, i32 0
  %14174 = insertelement <4 x float> %14173, float 1.000000e+00, i32 1
  %14175 = insertelement <4 x float> %14174, float 1.000000e+00, i32 2
  %14176 = insertelement <4 x float> %14175, float 1.000000e+00, i32 3
  %14177 = getelementptr inbounds float, float* %2, i64 3
  %14178 = load float, float* %14177, align 4
  %14179 = insertelement <4 x float> zeroinitializer, float %14178, i32 0
  %14180 = insertelement <4 x float> %14179, float 0.000000e+00, i32 1
  %14181 = insertelement <4 x float> %14180, float 0.000000e+00, i32 2
  %14182 = insertelement <4 x float> %14181, float 0.000000e+00, i32 3
  %14183 = fmul <4 x float> %14176, %14182
  %14184 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14185 = getelementptr inbounds i8, i8* %14184, i64 36
  %14186 = bitcast i8* %14185 to float*
  %14187 = load float, float* %14186, align 4
  %14188 = insertelement <4 x float> zeroinitializer, float %14187, i32 0
  %14189 = insertelement <4 x float> %14188, float 1.000000e+00, i32 1
  %14190 = insertelement <4 x float> %14189, float 1.000000e+00, i32 2
  %14191 = insertelement <4 x float> %14190, float 1.000000e+00, i32 3
  %14192 = getelementptr inbounds float, float* %2, i64 7
  %14193 = load float, float* %14192, align 4
  %14194 = insertelement <4 x float> zeroinitializer, float %14193, i32 0
  %14195 = insertelement <4 x float> %14194, float 0.000000e+00, i32 1
  %14196 = insertelement <4 x float> %14195, float 0.000000e+00, i32 2
  %14197 = insertelement <4 x float> %14196, float 0.000000e+00, i32 3
  %14198 = call <4 x float> @llvm.fma.f32.488(<4 x float> %14191, <4 x float> %14197, <4 x float> %14183)
  %14199 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14200 = getelementptr inbounds i8, i8* %14199, i64 40
  %14201 = bitcast i8* %14200 to float*
  %14202 = load float, float* %14201, align 4
  %14203 = insertelement <4 x float> zeroinitializer, float %14202, i32 0
  %14204 = insertelement <4 x float> %14203, float 1.000000e+00, i32 1
  %14205 = insertelement <4 x float> %14204, float 1.000000e+00, i32 2
  %14206 = insertelement <4 x float> %14205, float 1.000000e+00, i32 3
  %14207 = getelementptr inbounds float, float* %2, i64 11
  %14208 = load float, float* %14207, align 4
  %14209 = insertelement <4 x float> zeroinitializer, float %14208, i32 0
  %14210 = insertelement <4 x float> %14209, float 0.000000e+00, i32 1
  %14211 = insertelement <4 x float> %14210, float 0.000000e+00, i32 2
  %14212 = insertelement <4 x float> %14211, float 0.000000e+00, i32 3
  %14213 = call <4 x float> @llvm.fma.f32.489(<4 x float> %14206, <4 x float> %14212, <4 x float> %14198)
  %14214 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14215 = getelementptr inbounds i8, i8* %14214, i64 44
  %14216 = bitcast i8* %14215 to float*
  %14217 = load float, float* %14216, align 4
  %14218 = insertelement <4 x float> zeroinitializer, float %14217, i32 0
  %14219 = insertelement <4 x float> %14218, float 0.000000e+00, i32 1
  %14220 = insertelement <4 x float> %14219, float 0.000000e+00, i32 2
  %14221 = insertelement <4 x float> %14220, float 0.000000e+00, i32 3
  %14222 = getelementptr inbounds float, float* %2, i64 15
  %14223 = load float, float* %14222, align 4
  %14224 = insertelement <4 x float> zeroinitializer, float %14223, i32 0
  %14225 = insertelement <4 x float> %14224, float 0.000000e+00, i32 1
  %14226 = insertelement <4 x float> %14225, float 0.000000e+00, i32 2
  %14227 = insertelement <4 x float> %14226, float 0.000000e+00, i32 3
  %14228 = call <4 x float> @llvm.fma.f32.490(<4 x float> %14221, <4 x float> %14227, <4 x float> %14213)
  %14229 = extractelement <4 x float> %14228, i32 0
  %14230 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14231 = getelementptr inbounds i8, i8* %14230, i64 44
  %14232 = bitcast i8* %14231 to float*
  store float %14229, float* %14232, align 4
  %14233 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14234 = getelementptr inbounds i8, i8* %14233, i64 48
  %14235 = bitcast i8* %14234 to float*
  store float 0.000000e+00, float* %14235, align 4
  %14236 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14237 = getelementptr inbounds i8, i8* %14236, i64 48
  %14238 = bitcast i8* %14237 to float*
  %14239 = load float, float* %14238, align 4
  %14240 = insertelement <4 x float> zeroinitializer, float %14239, i32 0
  %14241 = insertelement <4 x float> %14240, float 0.000000e+00, i32 1
  %14242 = insertelement <4 x float> %14241, float 0.000000e+00, i32 2
  %14243 = insertelement <4 x float> %14242, float 0.000000e+00, i32 3
  %14244 = load float, float* %2, align 4
  %14245 = insertelement <4 x float> zeroinitializer, float %14244, i32 0
  %14246 = insertelement <4 x float> %14245, float 0.000000e+00, i32 1
  %14247 = insertelement <4 x float> %14246, float 0.000000e+00, i32 2
  %14248 = insertelement <4 x float> %14247, float 0.000000e+00, i32 3
  %14249 = call <4 x float> @llvm.fma.f32.491(<4 x float> %14243, <4 x float> %14248, <4 x float> zeroinitializer)
  %14250 = extractelement <4 x float> %14249, i32 0
  %14251 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14252 = getelementptr inbounds i8, i8* %14251, i64 48
  %14253 = bitcast i8* %14252 to float*
  store float %14250, float* %14253, align 4
  %14254 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14255 = getelementptr inbounds i8, i8* %14254, i64 48
  %14256 = bitcast i8* %14255 to float*
  %14257 = load float, float* %14256, align 4
  %14258 = insertelement <4 x float> zeroinitializer, float %14257, i32 0
  %14259 = insertelement <4 x float> %14258, float 1.000000e+00, i32 1
  %14260 = insertelement <4 x float> %14259, float 1.000000e+00, i32 2
  %14261 = insertelement <4 x float> %14260, float 1.000000e+00, i32 3
  %14262 = load float, float* %2, align 4
  %14263 = insertelement <4 x float> zeroinitializer, float %14262, i32 0
  %14264 = insertelement <4 x float> %14263, float 0.000000e+00, i32 1
  %14265 = insertelement <4 x float> %14264, float 0.000000e+00, i32 2
  %14266 = insertelement <4 x float> %14265, float 0.000000e+00, i32 3
  %14267 = fmul <4 x float> %14261, %14266
  %14268 = fadd <4 x float> %14267, zeroinitializer
  %14269 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14270 = getelementptr inbounds i8, i8* %14269, i64 52
  %14271 = bitcast i8* %14270 to float*
  %14272 = load float, float* %14271, align 4
  %14273 = insertelement <4 x float> zeroinitializer, float %14272, i32 0
  %14274 = insertelement <4 x float> %14273, float 0.000000e+00, i32 1
  %14275 = insertelement <4 x float> %14274, float 0.000000e+00, i32 2
  %14276 = insertelement <4 x float> %14275, float 0.000000e+00, i32 3
  %14277 = getelementptr inbounds float, float* %2, i64 4
  %14278 = load float, float* %14277, align 4
  %14279 = insertelement <4 x float> zeroinitializer, float %14278, i32 0
  %14280 = insertelement <4 x float> %14279, float 0.000000e+00, i32 1
  %14281 = insertelement <4 x float> %14280, float 0.000000e+00, i32 2
  %14282 = insertelement <4 x float> %14281, float 0.000000e+00, i32 3
  %14283 = call <4 x float> @llvm.fma.f32.492(<4 x float> %14276, <4 x float> %14282, <4 x float> %14268)
  %14284 = extractelement <4 x float> %14283, i32 0
  %14285 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14286 = getelementptr inbounds i8, i8* %14285, i64 48
  %14287 = bitcast i8* %14286 to float*
  store float %14284, float* %14287, align 4
  %14288 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14289 = getelementptr inbounds i8, i8* %14288, i64 48
  %14290 = bitcast i8* %14289 to float*
  %14291 = load float, float* %14290, align 4
  %14292 = insertelement <4 x float> zeroinitializer, float %14291, i32 0
  %14293 = insertelement <4 x float> %14292, float 1.000000e+00, i32 1
  %14294 = insertelement <4 x float> %14293, float 1.000000e+00, i32 2
  %14295 = insertelement <4 x float> %14294, float 1.000000e+00, i32 3
  %14296 = load float, float* %2, align 4
  %14297 = insertelement <4 x float> zeroinitializer, float %14296, i32 0
  %14298 = insertelement <4 x float> %14297, float 0.000000e+00, i32 1
  %14299 = insertelement <4 x float> %14298, float 0.000000e+00, i32 2
  %14300 = insertelement <4 x float> %14299, float 0.000000e+00, i32 3
  %14301 = fmul <4 x float> %14295, %14300
  %14302 = fadd <4 x float> %14301, zeroinitializer
  %14303 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14304 = getelementptr inbounds i8, i8* %14303, i64 52
  %14305 = bitcast i8* %14304 to float*
  %14306 = load float, float* %14305, align 4
  %14307 = insertelement <4 x float> zeroinitializer, float %14306, i32 0
  %14308 = insertelement <4 x float> %14307, float 1.000000e+00, i32 1
  %14309 = insertelement <4 x float> %14308, float 1.000000e+00, i32 2
  %14310 = insertelement <4 x float> %14309, float 1.000000e+00, i32 3
  %14311 = getelementptr inbounds float, float* %2, i64 4
  %14312 = load float, float* %14311, align 4
  %14313 = insertelement <4 x float> zeroinitializer, float %14312, i32 0
  %14314 = insertelement <4 x float> %14313, float 0.000000e+00, i32 1
  %14315 = insertelement <4 x float> %14314, float 0.000000e+00, i32 2
  %14316 = insertelement <4 x float> %14315, float 0.000000e+00, i32 3
  %14317 = call <4 x float> @llvm.fma.f32.493(<4 x float> %14310, <4 x float> %14316, <4 x float> %14302)
  %14318 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14319 = getelementptr inbounds i8, i8* %14318, i64 56
  %14320 = bitcast i8* %14319 to float*
  %14321 = load float, float* %14320, align 4
  %14322 = insertelement <4 x float> zeroinitializer, float %14321, i32 0
  %14323 = insertelement <4 x float> %14322, float 0.000000e+00, i32 1
  %14324 = insertelement <4 x float> %14323, float 0.000000e+00, i32 2
  %14325 = insertelement <4 x float> %14324, float 0.000000e+00, i32 3
  %14326 = getelementptr inbounds float, float* %2, i64 8
  %14327 = load float, float* %14326, align 4
  %14328 = insertelement <4 x float> zeroinitializer, float %14327, i32 0
  %14329 = insertelement <4 x float> %14328, float 0.000000e+00, i32 1
  %14330 = insertelement <4 x float> %14329, float 0.000000e+00, i32 2
  %14331 = insertelement <4 x float> %14330, float 0.000000e+00, i32 3
  %14332 = call <4 x float> @llvm.fma.f32.494(<4 x float> %14325, <4 x float> %14331, <4 x float> %14317)
  %14333 = extractelement <4 x float> %14332, i32 0
  %14334 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14335 = getelementptr inbounds i8, i8* %14334, i64 48
  %14336 = bitcast i8* %14335 to float*
  store float %14333, float* %14336, align 4
  %14337 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14338 = getelementptr inbounds i8, i8* %14337, i64 48
  %14339 = bitcast i8* %14338 to float*
  %14340 = load float, float* %14339, align 4
  %14341 = insertelement <4 x float> zeroinitializer, float %14340, i32 0
  %14342 = insertelement <4 x float> %14341, float 1.000000e+00, i32 1
  %14343 = insertelement <4 x float> %14342, float 1.000000e+00, i32 2
  %14344 = insertelement <4 x float> %14343, float 1.000000e+00, i32 3
  %14345 = load float, float* %2, align 4
  %14346 = insertelement <4 x float> zeroinitializer, float %14345, i32 0
  %14347 = insertelement <4 x float> %14346, float 0.000000e+00, i32 1
  %14348 = insertelement <4 x float> %14347, float 0.000000e+00, i32 2
  %14349 = insertelement <4 x float> %14348, float 0.000000e+00, i32 3
  %14350 = fmul <4 x float> %14344, %14349
  %14351 = fadd <4 x float> %14350, zeroinitializer
  %14352 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14353 = getelementptr inbounds i8, i8* %14352, i64 52
  %14354 = bitcast i8* %14353 to float*
  %14355 = load float, float* %14354, align 4
  %14356 = insertelement <4 x float> zeroinitializer, float %14355, i32 0
  %14357 = insertelement <4 x float> %14356, float 1.000000e+00, i32 1
  %14358 = insertelement <4 x float> %14357, float 1.000000e+00, i32 2
  %14359 = insertelement <4 x float> %14358, float 1.000000e+00, i32 3
  %14360 = getelementptr inbounds float, float* %2, i64 4
  %14361 = load float, float* %14360, align 4
  %14362 = insertelement <4 x float> zeroinitializer, float %14361, i32 0
  %14363 = insertelement <4 x float> %14362, float 0.000000e+00, i32 1
  %14364 = insertelement <4 x float> %14363, float 0.000000e+00, i32 2
  %14365 = insertelement <4 x float> %14364, float 0.000000e+00, i32 3
  %14366 = call <4 x float> @llvm.fma.f32.495(<4 x float> %14359, <4 x float> %14365, <4 x float> %14351)
  %14367 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14368 = getelementptr inbounds i8, i8* %14367, i64 56
  %14369 = bitcast i8* %14368 to float*
  %14370 = load float, float* %14369, align 4
  %14371 = insertelement <4 x float> zeroinitializer, float %14370, i32 0
  %14372 = insertelement <4 x float> %14371, float 1.000000e+00, i32 1
  %14373 = insertelement <4 x float> %14372, float 1.000000e+00, i32 2
  %14374 = insertelement <4 x float> %14373, float 1.000000e+00, i32 3
  %14375 = getelementptr inbounds float, float* %2, i64 8
  %14376 = load float, float* %14375, align 4
  %14377 = insertelement <4 x float> zeroinitializer, float %14376, i32 0
  %14378 = insertelement <4 x float> %14377, float 0.000000e+00, i32 1
  %14379 = insertelement <4 x float> %14378, float 0.000000e+00, i32 2
  %14380 = insertelement <4 x float> %14379, float 0.000000e+00, i32 3
  %14381 = call <4 x float> @llvm.fma.f32.496(<4 x float> %14374, <4 x float> %14380, <4 x float> %14366)
  %14382 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14383 = getelementptr inbounds i8, i8* %14382, i64 60
  %14384 = bitcast i8* %14383 to float*
  %14385 = load float, float* %14384, align 4
  %14386 = insertelement <4 x float> zeroinitializer, float %14385, i32 0
  %14387 = insertelement <4 x float> %14386, float 0.000000e+00, i32 1
  %14388 = insertelement <4 x float> %14387, float 0.000000e+00, i32 2
  %14389 = insertelement <4 x float> %14388, float 0.000000e+00, i32 3
  %14390 = getelementptr inbounds float, float* %2, i64 12
  %14391 = load float, float* %14390, align 4
  %14392 = insertelement <4 x float> zeroinitializer, float %14391, i32 0
  %14393 = insertelement <4 x float> %14392, float 0.000000e+00, i32 1
  %14394 = insertelement <4 x float> %14393, float 0.000000e+00, i32 2
  %14395 = insertelement <4 x float> %14394, float 0.000000e+00, i32 3
  %14396 = call <4 x float> @llvm.fma.f32.497(<4 x float> %14389, <4 x float> %14395, <4 x float> %14381)
  %14397 = extractelement <4 x float> %14396, i32 0
  %14398 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14399 = getelementptr inbounds i8, i8* %14398, i64 48
  %14400 = bitcast i8* %14399 to float*
  store float %14397, float* %14400, align 4
  %14401 = extractelement <4 x float> %14396, i32 1
  %14402 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14403 = getelementptr inbounds i8, i8* %14402, i64 52
  %14404 = bitcast i8* %14403 to float*
  store float %14401, float* %14404, align 4
  %14405 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14406 = getelementptr inbounds i8, i8* %14405, i64 48
  %14407 = bitcast i8* %14406 to float*
  %14408 = load float, float* %14407, align 4
  %14409 = insertelement <4 x float> zeroinitializer, float %14408, i32 0
  %14410 = insertelement <4 x float> %14409, float 0.000000e+00, i32 1
  %14411 = insertelement <4 x float> %14410, float 0.000000e+00, i32 2
  %14412 = insertelement <4 x float> %14411, float 0.000000e+00, i32 3
  %14413 = getelementptr inbounds float, float* %2, i64 1
  %14414 = load float, float* %14413, align 4
  %14415 = insertelement <4 x float> zeroinitializer, float %14414, i32 0
  %14416 = insertelement <4 x float> %14415, float 0.000000e+00, i32 1
  %14417 = insertelement <4 x float> %14416, float 0.000000e+00, i32 2
  %14418 = insertelement <4 x float> %14417, float 0.000000e+00, i32 3
  %14419 = call <4 x float> @llvm.fma.f32.498(<4 x float> %14412, <4 x float> %14418, <4 x float> zeroinitializer)
  %14420 = extractelement <4 x float> %14419, i32 0
  %14421 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14422 = getelementptr inbounds i8, i8* %14421, i64 52
  %14423 = bitcast i8* %14422 to float*
  store float %14420, float* %14423, align 4
  %14424 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14425 = getelementptr inbounds i8, i8* %14424, i64 48
  %14426 = bitcast i8* %14425 to float*
  %14427 = load float, float* %14426, align 4
  %14428 = insertelement <4 x float> zeroinitializer, float %14427, i32 0
  %14429 = insertelement <4 x float> %14428, float 1.000000e+00, i32 1
  %14430 = insertelement <4 x float> %14429, float 1.000000e+00, i32 2
  %14431 = insertelement <4 x float> %14430, float 1.000000e+00, i32 3
  %14432 = getelementptr inbounds float, float* %2, i64 1
  %14433 = load float, float* %14432, align 4
  %14434 = insertelement <4 x float> zeroinitializer, float %14433, i32 0
  %14435 = insertelement <4 x float> %14434, float 0.000000e+00, i32 1
  %14436 = insertelement <4 x float> %14435, float 0.000000e+00, i32 2
  %14437 = insertelement <4 x float> %14436, float 0.000000e+00, i32 3
  %14438 = fmul <4 x float> %14431, %14437
  %14439 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14440 = getelementptr inbounds i8, i8* %14439, i64 52
  %14441 = bitcast i8* %14440 to float*
  %14442 = load float, float* %14441, align 4
  %14443 = insertelement <4 x float> zeroinitializer, float %14442, i32 0
  %14444 = insertelement <4 x float> %14443, float 0.000000e+00, i32 1
  %14445 = insertelement <4 x float> %14444, float 0.000000e+00, i32 2
  %14446 = insertelement <4 x float> %14445, float 0.000000e+00, i32 3
  %14447 = getelementptr inbounds float, float* %2, i64 5
  %14448 = load float, float* %14447, align 4
  %14449 = insertelement <4 x float> zeroinitializer, float %14448, i32 0
  %14450 = insertelement <4 x float> %14449, float 0.000000e+00, i32 1
  %14451 = insertelement <4 x float> %14450, float 0.000000e+00, i32 2
  %14452 = insertelement <4 x float> %14451, float 0.000000e+00, i32 3
  %14453 = call <4 x float> @llvm.fma.f32.499(<4 x float> %14446, <4 x float> %14452, <4 x float> %14438)
  %14454 = extractelement <4 x float> %14453, i32 0
  %14455 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14456 = getelementptr inbounds i8, i8* %14455, i64 52
  %14457 = bitcast i8* %14456 to float*
  store float %14454, float* %14457, align 4
  %14458 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14459 = getelementptr inbounds i8, i8* %14458, i64 48
  %14460 = bitcast i8* %14459 to float*
  %14461 = load float, float* %14460, align 4
  %14462 = insertelement <4 x float> zeroinitializer, float %14461, i32 0
  %14463 = insertelement <4 x float> %14462, float 1.000000e+00, i32 1
  %14464 = insertelement <4 x float> %14463, float 1.000000e+00, i32 2
  %14465 = insertelement <4 x float> %14464, float 1.000000e+00, i32 3
  %14466 = getelementptr inbounds float, float* %2, i64 1
  %14467 = load float, float* %14466, align 4
  %14468 = insertelement <4 x float> zeroinitializer, float %14467, i32 0
  %14469 = insertelement <4 x float> %14468, float 0.000000e+00, i32 1
  %14470 = insertelement <4 x float> %14469, float 0.000000e+00, i32 2
  %14471 = insertelement <4 x float> %14470, float 0.000000e+00, i32 3
  %14472 = fmul <4 x float> %14465, %14471
  %14473 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14474 = getelementptr inbounds i8, i8* %14473, i64 52
  %14475 = bitcast i8* %14474 to float*
  %14476 = load float, float* %14475, align 4
  %14477 = insertelement <4 x float> zeroinitializer, float %14476, i32 0
  %14478 = insertelement <4 x float> %14477, float 1.000000e+00, i32 1
  %14479 = insertelement <4 x float> %14478, float 1.000000e+00, i32 2
  %14480 = insertelement <4 x float> %14479, float 1.000000e+00, i32 3
  %14481 = getelementptr inbounds float, float* %2, i64 5
  %14482 = load float, float* %14481, align 4
  %14483 = insertelement <4 x float> zeroinitializer, float %14482, i32 0
  %14484 = insertelement <4 x float> %14483, float 0.000000e+00, i32 1
  %14485 = insertelement <4 x float> %14484, float 0.000000e+00, i32 2
  %14486 = insertelement <4 x float> %14485, float 0.000000e+00, i32 3
  %14487 = call <4 x float> @llvm.fma.f32.500(<4 x float> %14480, <4 x float> %14486, <4 x float> %14472)
  %14488 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14489 = getelementptr inbounds i8, i8* %14488, i64 56
  %14490 = bitcast i8* %14489 to float*
  %14491 = load float, float* %14490, align 4
  %14492 = insertelement <4 x float> zeroinitializer, float %14491, i32 0
  %14493 = insertelement <4 x float> %14492, float 0.000000e+00, i32 1
  %14494 = insertelement <4 x float> %14493, float 0.000000e+00, i32 2
  %14495 = insertelement <4 x float> %14494, float 0.000000e+00, i32 3
  %14496 = getelementptr inbounds float, float* %2, i64 9
  %14497 = load float, float* %14496, align 4
  %14498 = insertelement <4 x float> zeroinitializer, float %14497, i32 0
  %14499 = insertelement <4 x float> %14498, float 0.000000e+00, i32 1
  %14500 = insertelement <4 x float> %14499, float 0.000000e+00, i32 2
  %14501 = insertelement <4 x float> %14500, float 0.000000e+00, i32 3
  %14502 = call <4 x float> @llvm.fma.f32.501(<4 x float> %14495, <4 x float> %14501, <4 x float> %14487)
  %14503 = extractelement <4 x float> %14502, i32 0
  %14504 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14505 = getelementptr inbounds i8, i8* %14504, i64 52
  %14506 = bitcast i8* %14505 to float*
  store float %14503, float* %14506, align 4
  %14507 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14508 = getelementptr inbounds i8, i8* %14507, i64 48
  %14509 = bitcast i8* %14508 to float*
  %14510 = load float, float* %14509, align 4
  %14511 = insertelement <4 x float> zeroinitializer, float %14510, i32 0
  %14512 = insertelement <4 x float> %14511, float 1.000000e+00, i32 1
  %14513 = insertelement <4 x float> %14512, float 1.000000e+00, i32 2
  %14514 = insertelement <4 x float> %14513, float 1.000000e+00, i32 3
  %14515 = getelementptr inbounds float, float* %2, i64 1
  %14516 = load float, float* %14515, align 4
  %14517 = insertelement <4 x float> zeroinitializer, float %14516, i32 0
  %14518 = insertelement <4 x float> %14517, float 0.000000e+00, i32 1
  %14519 = insertelement <4 x float> %14518, float 0.000000e+00, i32 2
  %14520 = insertelement <4 x float> %14519, float 0.000000e+00, i32 3
  %14521 = fmul <4 x float> %14514, %14520
  %14522 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14523 = getelementptr inbounds i8, i8* %14522, i64 52
  %14524 = bitcast i8* %14523 to float*
  %14525 = load float, float* %14524, align 4
  %14526 = insertelement <4 x float> zeroinitializer, float %14525, i32 0
  %14527 = insertelement <4 x float> %14526, float 1.000000e+00, i32 1
  %14528 = insertelement <4 x float> %14527, float 1.000000e+00, i32 2
  %14529 = insertelement <4 x float> %14528, float 1.000000e+00, i32 3
  %14530 = getelementptr inbounds float, float* %2, i64 5
  %14531 = load float, float* %14530, align 4
  %14532 = insertelement <4 x float> zeroinitializer, float %14531, i32 0
  %14533 = insertelement <4 x float> %14532, float 0.000000e+00, i32 1
  %14534 = insertelement <4 x float> %14533, float 0.000000e+00, i32 2
  %14535 = insertelement <4 x float> %14534, float 0.000000e+00, i32 3
  %14536 = call <4 x float> @llvm.fma.f32.502(<4 x float> %14529, <4 x float> %14535, <4 x float> %14521)
  %14537 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14538 = getelementptr inbounds i8, i8* %14537, i64 56
  %14539 = bitcast i8* %14538 to float*
  %14540 = load float, float* %14539, align 4
  %14541 = insertelement <4 x float> zeroinitializer, float %14540, i32 0
  %14542 = insertelement <4 x float> %14541, float 1.000000e+00, i32 1
  %14543 = insertelement <4 x float> %14542, float 1.000000e+00, i32 2
  %14544 = insertelement <4 x float> %14543, float 1.000000e+00, i32 3
  %14545 = getelementptr inbounds float, float* %2, i64 9
  %14546 = load float, float* %14545, align 4
  %14547 = insertelement <4 x float> zeroinitializer, float %14546, i32 0
  %14548 = insertelement <4 x float> %14547, float 0.000000e+00, i32 1
  %14549 = insertelement <4 x float> %14548, float 0.000000e+00, i32 2
  %14550 = insertelement <4 x float> %14549, float 0.000000e+00, i32 3
  %14551 = call <4 x float> @llvm.fma.f32.503(<4 x float> %14544, <4 x float> %14550, <4 x float> %14536)
  %14552 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14553 = getelementptr inbounds i8, i8* %14552, i64 60
  %14554 = bitcast i8* %14553 to float*
  %14555 = load float, float* %14554, align 4
  %14556 = insertelement <4 x float> zeroinitializer, float %14555, i32 0
  %14557 = insertelement <4 x float> %14556, float 0.000000e+00, i32 1
  %14558 = insertelement <4 x float> %14557, float 0.000000e+00, i32 2
  %14559 = insertelement <4 x float> %14558, float 0.000000e+00, i32 3
  %14560 = getelementptr inbounds float, float* %2, i64 13
  %14561 = load float, float* %14560, align 4
  %14562 = insertelement <4 x float> zeroinitializer, float %14561, i32 0
  %14563 = insertelement <4 x float> %14562, float 0.000000e+00, i32 1
  %14564 = insertelement <4 x float> %14563, float 0.000000e+00, i32 2
  %14565 = insertelement <4 x float> %14564, float 0.000000e+00, i32 3
  %14566 = call <4 x float> @llvm.fma.f32.504(<4 x float> %14559, <4 x float> %14565, <4 x float> %14551)
  %14567 = extractelement <4 x float> %14566, i32 0
  %14568 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14569 = getelementptr inbounds i8, i8* %14568, i64 52
  %14570 = bitcast i8* %14569 to float*
  store float %14567, float* %14570, align 4
  %14571 = extractelement <4 x float> %14566, i32 1
  %14572 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14573 = getelementptr inbounds i8, i8* %14572, i64 56
  %14574 = bitcast i8* %14573 to float*
  store float %14571, float* %14574, align 4
  %14575 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14576 = getelementptr inbounds i8, i8* %14575, i64 48
  %14577 = bitcast i8* %14576 to float*
  %14578 = load float, float* %14577, align 4
  %14579 = insertelement <4 x float> zeroinitializer, float %14578, i32 0
  %14580 = insertelement <4 x float> %14579, float 0.000000e+00, i32 1
  %14581 = insertelement <4 x float> %14580, float 0.000000e+00, i32 2
  %14582 = insertelement <4 x float> %14581, float 0.000000e+00, i32 3
  %14583 = getelementptr inbounds float, float* %2, i64 2
  %14584 = load float, float* %14583, align 4
  %14585 = insertelement <4 x float> zeroinitializer, float %14584, i32 0
  %14586 = insertelement <4 x float> %14585, float 0.000000e+00, i32 1
  %14587 = insertelement <4 x float> %14586, float 0.000000e+00, i32 2
  %14588 = insertelement <4 x float> %14587, float 0.000000e+00, i32 3
  %14589 = call <4 x float> @llvm.fma.f32.505(<4 x float> %14582, <4 x float> %14588, <4 x float> zeroinitializer)
  %14590 = extractelement <4 x float> %14589, i32 0
  %14591 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14592 = getelementptr inbounds i8, i8* %14591, i64 56
  %14593 = bitcast i8* %14592 to float*
  store float %14590, float* %14593, align 4
  %14594 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14595 = getelementptr inbounds i8, i8* %14594, i64 48
  %14596 = bitcast i8* %14595 to float*
  %14597 = load float, float* %14596, align 4
  %14598 = insertelement <4 x float> zeroinitializer, float %14597, i32 0
  %14599 = insertelement <4 x float> %14598, float 1.000000e+00, i32 1
  %14600 = insertelement <4 x float> %14599, float 1.000000e+00, i32 2
  %14601 = insertelement <4 x float> %14600, float 1.000000e+00, i32 3
  %14602 = getelementptr inbounds float, float* %2, i64 2
  %14603 = load float, float* %14602, align 4
  %14604 = insertelement <4 x float> zeroinitializer, float %14603, i32 0
  %14605 = insertelement <4 x float> %14604, float 0.000000e+00, i32 1
  %14606 = insertelement <4 x float> %14605, float 0.000000e+00, i32 2
  %14607 = insertelement <4 x float> %14606, float 0.000000e+00, i32 3
  %14608 = fmul <4 x float> %14601, %14607
  %14609 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14610 = getelementptr inbounds i8, i8* %14609, i64 52
  %14611 = bitcast i8* %14610 to float*
  %14612 = load float, float* %14611, align 4
  %14613 = insertelement <4 x float> zeroinitializer, float %14612, i32 0
  %14614 = insertelement <4 x float> %14613, float 0.000000e+00, i32 1
  %14615 = insertelement <4 x float> %14614, float 0.000000e+00, i32 2
  %14616 = insertelement <4 x float> %14615, float 0.000000e+00, i32 3
  %14617 = getelementptr inbounds float, float* %2, i64 6
  %14618 = load float, float* %14617, align 4
  %14619 = insertelement <4 x float> zeroinitializer, float %14618, i32 0
  %14620 = insertelement <4 x float> %14619, float 0.000000e+00, i32 1
  %14621 = insertelement <4 x float> %14620, float 0.000000e+00, i32 2
  %14622 = insertelement <4 x float> %14621, float 0.000000e+00, i32 3
  %14623 = call <4 x float> @llvm.fma.f32.506(<4 x float> %14616, <4 x float> %14622, <4 x float> %14608)
  %14624 = extractelement <4 x float> %14623, i32 0
  %14625 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14626 = getelementptr inbounds i8, i8* %14625, i64 56
  %14627 = bitcast i8* %14626 to float*
  store float %14624, float* %14627, align 4
  %14628 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14629 = getelementptr inbounds i8, i8* %14628, i64 48
  %14630 = bitcast i8* %14629 to float*
  %14631 = load float, float* %14630, align 4
  %14632 = insertelement <4 x float> zeroinitializer, float %14631, i32 0
  %14633 = insertelement <4 x float> %14632, float 1.000000e+00, i32 1
  %14634 = insertelement <4 x float> %14633, float 1.000000e+00, i32 2
  %14635 = insertelement <4 x float> %14634, float 1.000000e+00, i32 3
  %14636 = getelementptr inbounds float, float* %2, i64 2
  %14637 = load float, float* %14636, align 4
  %14638 = insertelement <4 x float> zeroinitializer, float %14637, i32 0
  %14639 = insertelement <4 x float> %14638, float 0.000000e+00, i32 1
  %14640 = insertelement <4 x float> %14639, float 0.000000e+00, i32 2
  %14641 = insertelement <4 x float> %14640, float 0.000000e+00, i32 3
  %14642 = fmul <4 x float> %14635, %14641
  %14643 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14644 = getelementptr inbounds i8, i8* %14643, i64 52
  %14645 = bitcast i8* %14644 to float*
  %14646 = load float, float* %14645, align 4
  %14647 = insertelement <4 x float> zeroinitializer, float %14646, i32 0
  %14648 = insertelement <4 x float> %14647, float 1.000000e+00, i32 1
  %14649 = insertelement <4 x float> %14648, float 1.000000e+00, i32 2
  %14650 = insertelement <4 x float> %14649, float 1.000000e+00, i32 3
  %14651 = getelementptr inbounds float, float* %2, i64 6
  %14652 = load float, float* %14651, align 4
  %14653 = insertelement <4 x float> zeroinitializer, float %14652, i32 0
  %14654 = insertelement <4 x float> %14653, float 0.000000e+00, i32 1
  %14655 = insertelement <4 x float> %14654, float 0.000000e+00, i32 2
  %14656 = insertelement <4 x float> %14655, float 0.000000e+00, i32 3
  %14657 = call <4 x float> @llvm.fma.f32.507(<4 x float> %14650, <4 x float> %14656, <4 x float> %14642)
  %14658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14659 = getelementptr inbounds i8, i8* %14658, i64 56
  %14660 = bitcast i8* %14659 to float*
  %14661 = load float, float* %14660, align 4
  %14662 = insertelement <4 x float> zeroinitializer, float %14661, i32 0
  %14663 = insertelement <4 x float> %14662, float 0.000000e+00, i32 1
  %14664 = insertelement <4 x float> %14663, float 0.000000e+00, i32 2
  %14665 = insertelement <4 x float> %14664, float 0.000000e+00, i32 3
  %14666 = getelementptr inbounds float, float* %2, i64 10
  %14667 = load float, float* %14666, align 4
  %14668 = insertelement <4 x float> zeroinitializer, float %14667, i32 0
  %14669 = insertelement <4 x float> %14668, float 0.000000e+00, i32 1
  %14670 = insertelement <4 x float> %14669, float 0.000000e+00, i32 2
  %14671 = insertelement <4 x float> %14670, float 0.000000e+00, i32 3
  %14672 = call <4 x float> @llvm.fma.f32.508(<4 x float> %14665, <4 x float> %14671, <4 x float> %14657)
  %14673 = extractelement <4 x float> %14672, i32 0
  %14674 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14675 = getelementptr inbounds i8, i8* %14674, i64 56
  %14676 = bitcast i8* %14675 to float*
  store float %14673, float* %14676, align 4
  %14677 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14678 = getelementptr inbounds i8, i8* %14677, i64 48
  %14679 = bitcast i8* %14678 to float*
  %14680 = load float, float* %14679, align 4
  %14681 = insertelement <4 x float> zeroinitializer, float %14680, i32 0
  %14682 = insertelement <4 x float> %14681, float 1.000000e+00, i32 1
  %14683 = insertelement <4 x float> %14682, float 1.000000e+00, i32 2
  %14684 = insertelement <4 x float> %14683, float 1.000000e+00, i32 3
  %14685 = getelementptr inbounds float, float* %2, i64 2
  %14686 = load float, float* %14685, align 4
  %14687 = insertelement <4 x float> zeroinitializer, float %14686, i32 0
  %14688 = insertelement <4 x float> %14687, float 0.000000e+00, i32 1
  %14689 = insertelement <4 x float> %14688, float 0.000000e+00, i32 2
  %14690 = insertelement <4 x float> %14689, float 0.000000e+00, i32 3
  %14691 = fmul <4 x float> %14684, %14690
  %14692 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14693 = getelementptr inbounds i8, i8* %14692, i64 52
  %14694 = bitcast i8* %14693 to float*
  %14695 = load float, float* %14694, align 4
  %14696 = insertelement <4 x float> zeroinitializer, float %14695, i32 0
  %14697 = insertelement <4 x float> %14696, float 1.000000e+00, i32 1
  %14698 = insertelement <4 x float> %14697, float 1.000000e+00, i32 2
  %14699 = insertelement <4 x float> %14698, float 1.000000e+00, i32 3
  %14700 = getelementptr inbounds float, float* %2, i64 6
  %14701 = load float, float* %14700, align 4
  %14702 = insertelement <4 x float> zeroinitializer, float %14701, i32 0
  %14703 = insertelement <4 x float> %14702, float 0.000000e+00, i32 1
  %14704 = insertelement <4 x float> %14703, float 0.000000e+00, i32 2
  %14705 = insertelement <4 x float> %14704, float 0.000000e+00, i32 3
  %14706 = call <4 x float> @llvm.fma.f32.509(<4 x float> %14699, <4 x float> %14705, <4 x float> %14691)
  %14707 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14708 = getelementptr inbounds i8, i8* %14707, i64 56
  %14709 = bitcast i8* %14708 to float*
  %14710 = load float, float* %14709, align 4
  %14711 = insertelement <4 x float> zeroinitializer, float %14710, i32 0
  %14712 = insertelement <4 x float> %14711, float 1.000000e+00, i32 1
  %14713 = insertelement <4 x float> %14712, float 1.000000e+00, i32 2
  %14714 = insertelement <4 x float> %14713, float 1.000000e+00, i32 3
  %14715 = getelementptr inbounds float, float* %2, i64 10
  %14716 = load float, float* %14715, align 4
  %14717 = insertelement <4 x float> zeroinitializer, float %14716, i32 0
  %14718 = insertelement <4 x float> %14717, float 0.000000e+00, i32 1
  %14719 = insertelement <4 x float> %14718, float 0.000000e+00, i32 2
  %14720 = insertelement <4 x float> %14719, float 0.000000e+00, i32 3
  %14721 = call <4 x float> @llvm.fma.f32.510(<4 x float> %14714, <4 x float> %14720, <4 x float> %14706)
  %14722 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14723 = getelementptr inbounds i8, i8* %14722, i64 60
  %14724 = bitcast i8* %14723 to float*
  %14725 = load float, float* %14724, align 4
  %14726 = insertelement <4 x float> zeroinitializer, float %14725, i32 0
  %14727 = insertelement <4 x float> %14726, float 0.000000e+00, i32 1
  %14728 = insertelement <4 x float> %14727, float 0.000000e+00, i32 2
  %14729 = insertelement <4 x float> %14728, float 0.000000e+00, i32 3
  %14730 = getelementptr inbounds float, float* %2, i64 14
  %14731 = load float, float* %14730, align 4
  %14732 = insertelement <4 x float> zeroinitializer, float %14731, i32 0
  %14733 = insertelement <4 x float> %14732, float 0.000000e+00, i32 1
  %14734 = insertelement <4 x float> %14733, float 0.000000e+00, i32 2
  %14735 = insertelement <4 x float> %14734, float 0.000000e+00, i32 3
  %14736 = call <4 x float> @llvm.fma.f32.511(<4 x float> %14729, <4 x float> %14735, <4 x float> %14721)
  %14737 = extractelement <4 x float> %14736, i32 0
  %14738 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14739 = getelementptr inbounds i8, i8* %14738, i64 56
  %14740 = bitcast i8* %14739 to float*
  store float %14737, float* %14740, align 4
  %14741 = extractelement <4 x float> %14736, i32 1
  %14742 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14743 = getelementptr inbounds i8, i8* %14742, i64 60
  %14744 = bitcast i8* %14743 to float*
  store float %14741, float* %14744, align 4
  %14745 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14746 = getelementptr inbounds i8, i8* %14745, i64 48
  %14747 = bitcast i8* %14746 to float*
  %14748 = load float, float* %14747, align 4
  %14749 = insertelement <4 x float> zeroinitializer, float %14748, i32 0
  %14750 = insertelement <4 x float> %14749, float 0.000000e+00, i32 1
  %14751 = insertelement <4 x float> %14750, float 0.000000e+00, i32 2
  %14752 = insertelement <4 x float> %14751, float 0.000000e+00, i32 3
  %14753 = getelementptr inbounds float, float* %2, i64 3
  %14754 = load float, float* %14753, align 4
  %14755 = insertelement <4 x float> zeroinitializer, float %14754, i32 0
  %14756 = insertelement <4 x float> %14755, float 0.000000e+00, i32 1
  %14757 = insertelement <4 x float> %14756, float 0.000000e+00, i32 2
  %14758 = insertelement <4 x float> %14757, float 0.000000e+00, i32 3
  %14759 = call <4 x float> @llvm.fma.f32.512(<4 x float> %14752, <4 x float> %14758, <4 x float> zeroinitializer)
  %14760 = extractelement <4 x float> %14759, i32 0
  %14761 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14762 = getelementptr inbounds i8, i8* %14761, i64 60
  %14763 = bitcast i8* %14762 to float*
  store float %14760, float* %14763, align 4
  %14764 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14765 = getelementptr inbounds i8, i8* %14764, i64 48
  %14766 = bitcast i8* %14765 to float*
  %14767 = load float, float* %14766, align 4
  %14768 = insertelement <4 x float> zeroinitializer, float %14767, i32 0
  %14769 = insertelement <4 x float> %14768, float 1.000000e+00, i32 1
  %14770 = insertelement <4 x float> %14769, float 1.000000e+00, i32 2
  %14771 = insertelement <4 x float> %14770, float 1.000000e+00, i32 3
  %14772 = getelementptr inbounds float, float* %2, i64 3
  %14773 = load float, float* %14772, align 4
  %14774 = insertelement <4 x float> zeroinitializer, float %14773, i32 0
  %14775 = insertelement <4 x float> %14774, float 0.000000e+00, i32 1
  %14776 = insertelement <4 x float> %14775, float 0.000000e+00, i32 2
  %14777 = insertelement <4 x float> %14776, float 0.000000e+00, i32 3
  %14778 = fmul <4 x float> %14771, %14777
  %14779 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14780 = getelementptr inbounds i8, i8* %14779, i64 52
  %14781 = bitcast i8* %14780 to float*
  %14782 = load float, float* %14781, align 4
  %14783 = insertelement <4 x float> zeroinitializer, float %14782, i32 0
  %14784 = insertelement <4 x float> %14783, float 0.000000e+00, i32 1
  %14785 = insertelement <4 x float> %14784, float 0.000000e+00, i32 2
  %14786 = insertelement <4 x float> %14785, float 0.000000e+00, i32 3
  %14787 = getelementptr inbounds float, float* %2, i64 7
  %14788 = load float, float* %14787, align 4
  %14789 = insertelement <4 x float> zeroinitializer, float %14788, i32 0
  %14790 = insertelement <4 x float> %14789, float 0.000000e+00, i32 1
  %14791 = insertelement <4 x float> %14790, float 0.000000e+00, i32 2
  %14792 = insertelement <4 x float> %14791, float 0.000000e+00, i32 3
  %14793 = call <4 x float> @llvm.fma.f32.513(<4 x float> %14786, <4 x float> %14792, <4 x float> %14778)
  %14794 = extractelement <4 x float> %14793, i32 0
  %14795 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14796 = getelementptr inbounds i8, i8* %14795, i64 60
  %14797 = bitcast i8* %14796 to float*
  store float %14794, float* %14797, align 4
  %14798 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14799 = getelementptr inbounds i8, i8* %14798, i64 48
  %14800 = bitcast i8* %14799 to float*
  %14801 = load float, float* %14800, align 4
  %14802 = insertelement <4 x float> zeroinitializer, float %14801, i32 0
  %14803 = insertelement <4 x float> %14802, float 1.000000e+00, i32 1
  %14804 = insertelement <4 x float> %14803, float 1.000000e+00, i32 2
  %14805 = insertelement <4 x float> %14804, float 1.000000e+00, i32 3
  %14806 = getelementptr inbounds float, float* %2, i64 3
  %14807 = load float, float* %14806, align 4
  %14808 = insertelement <4 x float> zeroinitializer, float %14807, i32 0
  %14809 = insertelement <4 x float> %14808, float 0.000000e+00, i32 1
  %14810 = insertelement <4 x float> %14809, float 0.000000e+00, i32 2
  %14811 = insertelement <4 x float> %14810, float 0.000000e+00, i32 3
  %14812 = fmul <4 x float> %14805, %14811
  %14813 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14814 = getelementptr inbounds i8, i8* %14813, i64 52
  %14815 = bitcast i8* %14814 to float*
  %14816 = load float, float* %14815, align 4
  %14817 = insertelement <4 x float> zeroinitializer, float %14816, i32 0
  %14818 = insertelement <4 x float> %14817, float 1.000000e+00, i32 1
  %14819 = insertelement <4 x float> %14818, float 1.000000e+00, i32 2
  %14820 = insertelement <4 x float> %14819, float 1.000000e+00, i32 3
  %14821 = getelementptr inbounds float, float* %2, i64 7
  %14822 = load float, float* %14821, align 4
  %14823 = insertelement <4 x float> zeroinitializer, float %14822, i32 0
  %14824 = insertelement <4 x float> %14823, float 0.000000e+00, i32 1
  %14825 = insertelement <4 x float> %14824, float 0.000000e+00, i32 2
  %14826 = insertelement <4 x float> %14825, float 0.000000e+00, i32 3
  %14827 = call <4 x float> @llvm.fma.f32.514(<4 x float> %14820, <4 x float> %14826, <4 x float> %14812)
  %14828 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14829 = getelementptr inbounds i8, i8* %14828, i64 56
  %14830 = bitcast i8* %14829 to float*
  %14831 = load float, float* %14830, align 4
  %14832 = insertelement <4 x float> zeroinitializer, float %14831, i32 0
  %14833 = insertelement <4 x float> %14832, float 0.000000e+00, i32 1
  %14834 = insertelement <4 x float> %14833, float 0.000000e+00, i32 2
  %14835 = insertelement <4 x float> %14834, float 0.000000e+00, i32 3
  %14836 = getelementptr inbounds float, float* %2, i64 11
  %14837 = load float, float* %14836, align 4
  %14838 = insertelement <4 x float> zeroinitializer, float %14837, i32 0
  %14839 = insertelement <4 x float> %14838, float 0.000000e+00, i32 1
  %14840 = insertelement <4 x float> %14839, float 0.000000e+00, i32 2
  %14841 = insertelement <4 x float> %14840, float 0.000000e+00, i32 3
  %14842 = call <4 x float> @llvm.fma.f32.515(<4 x float> %14835, <4 x float> %14841, <4 x float> %14827)
  %14843 = extractelement <4 x float> %14842, i32 0
  %14844 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14845 = getelementptr inbounds i8, i8* %14844, i64 60
  %14846 = bitcast i8* %14845 to float*
  store float %14843, float* %14846, align 4
  %14847 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14848 = getelementptr inbounds i8, i8* %14847, i64 48
  %14849 = bitcast i8* %14848 to float*
  %14850 = load float, float* %14849, align 4
  %14851 = insertelement <4 x float> zeroinitializer, float %14850, i32 0
  %14852 = insertelement <4 x float> %14851, float 1.000000e+00, i32 1
  %14853 = insertelement <4 x float> %14852, float 1.000000e+00, i32 2
  %14854 = insertelement <4 x float> %14853, float 1.000000e+00, i32 3
  %14855 = getelementptr inbounds float, float* %2, i64 3
  %14856 = load float, float* %14855, align 4
  %14857 = insertelement <4 x float> zeroinitializer, float %14856, i32 0
  %14858 = insertelement <4 x float> %14857, float 0.000000e+00, i32 1
  %14859 = insertelement <4 x float> %14858, float 0.000000e+00, i32 2
  %14860 = insertelement <4 x float> %14859, float 0.000000e+00, i32 3
  %14861 = fmul <4 x float> %14854, %14860
  %14862 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14863 = getelementptr inbounds i8, i8* %14862, i64 52
  %14864 = bitcast i8* %14863 to float*
  %14865 = load float, float* %14864, align 4
  %14866 = insertelement <4 x float> zeroinitializer, float %14865, i32 0
  %14867 = insertelement <4 x float> %14866, float 1.000000e+00, i32 1
  %14868 = insertelement <4 x float> %14867, float 1.000000e+00, i32 2
  %14869 = insertelement <4 x float> %14868, float 1.000000e+00, i32 3
  %14870 = getelementptr inbounds float, float* %2, i64 7
  %14871 = load float, float* %14870, align 4
  %14872 = insertelement <4 x float> zeroinitializer, float %14871, i32 0
  %14873 = insertelement <4 x float> %14872, float 0.000000e+00, i32 1
  %14874 = insertelement <4 x float> %14873, float 0.000000e+00, i32 2
  %14875 = insertelement <4 x float> %14874, float 0.000000e+00, i32 3
  %14876 = call <4 x float> @llvm.fma.f32.516(<4 x float> %14869, <4 x float> %14875, <4 x float> %14861)
  %14877 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14878 = getelementptr inbounds i8, i8* %14877, i64 56
  %14879 = bitcast i8* %14878 to float*
  %14880 = load float, float* %14879, align 4
  %14881 = insertelement <4 x float> zeroinitializer, float %14880, i32 0
  %14882 = insertelement <4 x float> %14881, float 1.000000e+00, i32 1
  %14883 = insertelement <4 x float> %14882, float 1.000000e+00, i32 2
  %14884 = insertelement <4 x float> %14883, float 1.000000e+00, i32 3
  %14885 = getelementptr inbounds float, float* %2, i64 11
  %14886 = load float, float* %14885, align 4
  %14887 = insertelement <4 x float> zeroinitializer, float %14886, i32 0
  %14888 = insertelement <4 x float> %14887, float 0.000000e+00, i32 1
  %14889 = insertelement <4 x float> %14888, float 0.000000e+00, i32 2
  %14890 = insertelement <4 x float> %14889, float 0.000000e+00, i32 3
  %14891 = call <4 x float> @llvm.fma.f32.517(<4 x float> %14884, <4 x float> %14890, <4 x float> %14876)
  %14892 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14893 = getelementptr inbounds i8, i8* %14892, i64 60
  %14894 = bitcast i8* %14893 to float*
  %14895 = load float, float* %14894, align 4
  %14896 = insertelement <4 x float> zeroinitializer, float %14895, i32 0
  %14897 = insertelement <4 x float> %14896, float 0.000000e+00, i32 1
  %14898 = insertelement <4 x float> %14897, float 0.000000e+00, i32 2
  %14899 = insertelement <4 x float> %14898, float 0.000000e+00, i32 3
  %14900 = getelementptr inbounds float, float* %2, i64 15
  %14901 = load float, float* %14900, align 4
  %14902 = insertelement <4 x float> zeroinitializer, float %14901, i32 0
  %14903 = insertelement <4 x float> %14902, float 0.000000e+00, i32 1
  %14904 = insertelement <4 x float> %14903, float 0.000000e+00, i32 2
  %14905 = insertelement <4 x float> %14904, float 0.000000e+00, i32 3
  %14906 = call <4 x float> @llvm.fma.f32.518(<4 x float> %14899, <4 x float> %14905, <4 x float> %14891)
  %14907 = extractelement <4 x float> %14906, i32 0
  %14908 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14909 = getelementptr inbounds i8, i8* %14908, i64 60
  %14910 = bitcast i8* %14909 to float*
  store float %14907, float* %14910, align 4
  %14911 = getelementptr inbounds float, float* %2, i64 10
  %14912 = bitcast float* %14911 to i32*
  %14913 = load i32, i32* %14912, align 4
  %14914 = sitofp i32 %14913 to float
  %14915 = insertelement <4 x float> zeroinitializer, float %14914, i32 0
  %14916 = insertelement <4 x float> %14915, float 0.000000e+00, i32 1
  %14917 = insertelement <4 x float> %14916, float 0.000000e+00, i32 2
  %14918 = insertelement <4 x float> %14917, float 0.000000e+00, i32 3
  %14919 = extractelement <4 x float> %14918, i32 0
  %14920 = fptosi float %14919 to i32
  %14921 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %14922 = bitcast i8* %14921 to i32*
  store i32 %14920, i32* %14922, align 4
  %14923 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14924 = getelementptr inbounds i8, i8* %14923, i64 40
  %14925 = bitcast i8* %14924 to i32*
  %14926 = load i32, i32* %14925, align 4
  %14927 = sitofp i32 %14926 to float
  %14928 = insertelement <4 x float> zeroinitializer, float %14927, i32 0
  %14929 = insertelement <4 x float> %14928, float 0.000000e+00, i32 1
  %14930 = insertelement <4 x float> %14929, float 0.000000e+00, i32 2
  %14931 = insertelement <4 x float> %14930, float 0.000000e+00, i32 3
  %14932 = extractelement <4 x float> %14931, i32 0
  %14933 = fptosi float %14932 to i32
  %14934 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %14935 = bitcast i8* %14934 to i32*
  store i32 %14933, i32* %14935, align 4
  %14936 = getelementptr inbounds float, float* %2, i64 14
  %14937 = bitcast float* %14936 to i32*
  %14938 = load i32, i32* %14937, align 4
  %14939 = sitofp i32 %14938 to float
  %14940 = insertelement <4 x float> zeroinitializer, float %14939, i32 0
  %14941 = insertelement <4 x float> %14940, float 0.000000e+00, i32 1
  %14942 = insertelement <4 x float> %14941, float 0.000000e+00, i32 2
  %14943 = insertelement <4 x float> %14942, float 0.000000e+00, i32 3
  %14944 = extractelement <4 x float> %14943, i32 0
  %14945 = fptosi float %14944 to i32
  %14946 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %14947 = getelementptr inbounds i8, i8* %14946, i64 4
  %14948 = bitcast i8* %14947 to i32*
  store i32 %14945, i32* %14948, align 4
  %14949 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %14950 = getelementptr inbounds i8, i8* %14949, i64 56
  %14951 = bitcast i8* %14950 to i32*
  %14952 = load i32, i32* %14951, align 4
  %14953 = sitofp i32 %14952 to float
  %14954 = insertelement <4 x float> zeroinitializer, float %14953, i32 0
  %14955 = insertelement <4 x float> %14954, float 0.000000e+00, i32 1
  %14956 = insertelement <4 x float> %14955, float 0.000000e+00, i32 2
  %14957 = insertelement <4 x float> %14956, float 0.000000e+00, i32 3
  %14958 = extractelement <4 x float> %14957, i32 0
  %14959 = fptosi float %14958 to i32
  %14960 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %14961 = getelementptr inbounds i8, i8* %14960, i64 4
  %14962 = bitcast i8* %14961 to i32*
  store i32 %14959, i32* %14962, align 4
  %14963 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %14964 = bitcast i8* %14963 to float*
  %14965 = load float, float* %14964, align 4
  %14966 = insertelement <4 x float> zeroinitializer, float %14965, i32 0
  %14967 = insertelement <4 x float> %14966, float 0.000000e+00, i32 1
  %14968 = insertelement <4 x float> %14967, float 0.000000e+00, i32 2
  %14969 = insertelement <4 x float> %14968, float 0.000000e+00, i32 3
  %14970 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %14971 = getelementptr inbounds i8, i8* %14970, i64 4
  %14972 = bitcast i8* %14971 to float*
  %14973 = load float, float* %14972, align 4
  %14974 = insertelement <4 x float> zeroinitializer, float %14973, i32 0
  %14975 = insertelement <4 x float> %14974, float 1.000000e+00, i32 1
  %14976 = insertelement <4 x float> %14975, float 1.000000e+00, i32 2
  %14977 = insertelement <4 x float> %14976, float 1.000000e+00, i32 3
  %14978 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %14979 = getelementptr inbounds i8, i8* %14978, i64 4
  %14980 = bitcast i8* %14979 to float*
  %14981 = load float, float* %14980, align 4
  %14982 = insertelement <4 x float> zeroinitializer, float %14981, i32 0
  %14983 = insertelement <4 x float> %14982, float 0.000000e+00, i32 1
  %14984 = insertelement <4 x float> %14983, float 0.000000e+00, i32 2
  %14985 = insertelement <4 x float> %14984, float 0.000000e+00, i32 3
  %14986 = fmul <4 x float> %14977, %14985
  %14987 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %14988 = bitcast i8* %14987 to float*
  %14989 = load float, float* %14988, align 4
  %14990 = insertelement <4 x float> zeroinitializer, float %14989, i32 0
  %14991 = insertelement <4 x float> %14990, float 1.000000e+00, i32 1
  %14992 = insertelement <4 x float> %14991, float 1.000000e+00, i32 2
  %14993 = insertelement <4 x float> %14992, float 1.000000e+00, i32 3
  %14994 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %14995 = bitcast i8* %14994 to float*
  %14996 = load float, float* %14995, align 4
  %14997 = insertelement <4 x float> zeroinitializer, float %14996, i32 0
  %14998 = insertelement <4 x float> %14997, float 0.000000e+00, i32 1
  %14999 = insertelement <4 x float> %14998, float 0.000000e+00, i32 2
  %15000 = insertelement <4 x float> %14999, float 0.000000e+00, i32 3
  %15001 = fmul <4 x float> %14993, %15000
  %15002 = fadd <4 x float> %15001, <float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %15003 = fadd <4 x float> %14986, %15002
  %15004 = call <4 x float> @llvm.sqrt.f32.519(<4 x float> %15003)
  %15005 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15006 = bitcast i8* %15005 to float*
  %15007 = load float, float* %15006, align 4
  %15008 = fcmp olt float %15007, 0.000000e+00
  %15009 = sext i1 %15008 to i32
  %15010 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15011 = bitcast i8* %15010 to float*
  %15012 = load float, float* %15011, align 4
  %15013 = fcmp ogt float %15012, 0.000000e+00
  %15014 = zext i1 %15013 to i32
  %15015 = add nsw i32 %15009, %15014
  %15016 = sitofp i32 %15015 to float
  %15017 = insertelement <4 x float> zeroinitializer, float %15016, i32 0
  %15018 = insertelement <4 x float> %15017, float 0.000000e+00, i32 1
  %15019 = insertelement <4 x float> %15018, float 0.000000e+00, i32 2
  %15020 = insertelement <4 x float> %15019, float 0.000000e+00, i32 3
  %15021 = fneg <4 x float> %15020
  %15022 = fmul <4 x float> %15004, %15021
  %15023 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15024 = bitcast i8* %15023 to float*
  %15025 = load float, float* %15024, align 4
  %15026 = insertelement <4 x float> zeroinitializer, float %15025, i32 0
  %15027 = insertelement <4 x float> %15026, float 0.000000e+00, i32 1
  %15028 = insertelement <4 x float> %15027, float 0.000000e+00, i32 2
  %15029 = insertelement <4 x float> %15028, float 0.000000e+00, i32 3
  %15030 = call <4 x float> @llvm.fma.f32.520(<4 x float> %15022, <4 x float> %15029, <4 x float> %14969)
  %15031 = extractelement <4 x float> %15030, i32 0
  %15032 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15033 = bitcast i8* %15032 to float*
  store float %15031, float* %15033, align 4
  %15034 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15035 = getelementptr inbounds i8, i8* %15034, i64 4
  %15036 = bitcast i8* %15035 to float*
  %15037 = load float, float* %15036, align 4
  %15038 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15039 = getelementptr inbounds i8, i8* %15038, i64 4
  %15040 = bitcast i8* %15039 to float*
  %15041 = load float, float* %15040, align 4
  %15042 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15043 = getelementptr inbounds i8, i8* %15042, i64 4
  %15044 = bitcast i8* %15043 to float*
  %15045 = load float, float* %15044, align 4
  %15046 = fmul float %15041, %15045
  %15047 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15048 = bitcast i8* %15047 to float*
  %15049 = load float, float* %15048, align 4
  %15050 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15051 = bitcast i8* %15050 to float*
  %15052 = load float, float* %15051, align 4
  %15053 = fmul float %15049, %15052
  %15054 = fadd float %15053, 0.000000e+00
  %15055 = fadd float %15046, %15054
  %15056 = call float @llvm.sqrt.f32.521(float %15055)
  %15057 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15058 = bitcast i8* %15057 to float*
  %15059 = load float, float* %15058, align 4
  %15060 = fcmp olt float %15059, 0.000000e+00
  %15061 = sext i1 %15060 to i32
  %15062 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15063 = bitcast i8* %15062 to float*
  %15064 = load float, float* %15063, align 4
  %15065 = fcmp ogt float %15064, 0.000000e+00
  %15066 = zext i1 %15065 to i32
  %15067 = add nsw i32 %15061, %15066
  %15068 = sitofp i32 %15067 to float
  %15069 = fneg float %15068
  %15070 = fmul float %15056, %15069
  %15071 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15072 = getelementptr inbounds i8, i8* %15071, i64 4
  %15073 = bitcast i8* %15072 to float*
  %15074 = load float, float* %15073, align 4
  %15075 = fmul float %15070, %15074
  %15076 = fadd float %15037, %15075
  %15077 = insertelement <4 x float> zeroinitializer, float %15076, i32 0
  %15078 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15079 = bitcast i8* %15078 to float*
  %15080 = load float, float* %15079, align 4
  %15081 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15082 = getelementptr inbounds i8, i8* %15081, i64 4
  %15083 = bitcast i8* %15082 to float*
  %15084 = load float, float* %15083, align 4
  %15085 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15086 = getelementptr inbounds i8, i8* %15085, i64 4
  %15087 = bitcast i8* %15086 to float*
  %15088 = load float, float* %15087, align 4
  %15089 = fmul float %15084, %15088
  %15090 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15091 = bitcast i8* %15090 to float*
  %15092 = load float, float* %15091, align 4
  %15093 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15094 = bitcast i8* %15093 to float*
  %15095 = load float, float* %15094, align 4
  %15096 = fmul float %15092, %15095
  %15097 = fadd float %15096, 0.000000e+00
  %15098 = fadd float %15089, %15097
  %15099 = call float @llvm.sqrt.f32.522(float %15098)
  %15100 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15101 = bitcast i8* %15100 to float*
  %15102 = load float, float* %15101, align 4
  %15103 = fcmp olt float %15102, 0.000000e+00
  %15104 = sext i1 %15103 to i32
  %15105 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15106 = bitcast i8* %15105 to float*
  %15107 = load float, float* %15106, align 4
  %15108 = fcmp ogt float %15107, 0.000000e+00
  %15109 = zext i1 %15108 to i32
  %15110 = add nsw i32 %15104, %15109
  %15111 = sitofp i32 %15110 to float
  %15112 = fneg float %15111
  %15113 = fmul float %15099, %15112
  %15114 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15115 = bitcast i8* %15114 to float*
  %15116 = load float, float* %15115, align 4
  %15117 = fmul float %15113, %15116
  %15118 = fadd float %15080, %15117
  %15119 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15120 = getelementptr inbounds i8, i8* %15119, i64 4
  %15121 = bitcast i8* %15120 to float*
  %15122 = load float, float* %15121, align 4
  %15123 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15124 = getelementptr inbounds i8, i8* %15123, i64 4
  %15125 = bitcast i8* %15124 to float*
  %15126 = load float, float* %15125, align 4
  %15127 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15128 = getelementptr inbounds i8, i8* %15127, i64 4
  %15129 = bitcast i8* %15128 to float*
  %15130 = load float, float* %15129, align 4
  %15131 = fmul float %15126, %15130
  %15132 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15133 = bitcast i8* %15132 to float*
  %15134 = load float, float* %15133, align 4
  %15135 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15136 = bitcast i8* %15135 to float*
  %15137 = load float, float* %15136, align 4
  %15138 = fmul float %15134, %15137
  %15139 = fadd float %15138, 0.000000e+00
  %15140 = fadd float %15131, %15139
  %15141 = call float @llvm.sqrt.f32.523(float %15140)
  %15142 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15143 = bitcast i8* %15142 to float*
  %15144 = load float, float* %15143, align 4
  %15145 = fcmp olt float %15144, 0.000000e+00
  %15146 = sext i1 %15145 to i32
  %15147 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15148 = bitcast i8* %15147 to float*
  %15149 = load float, float* %15148, align 4
  %15150 = fcmp ogt float %15149, 0.000000e+00
  %15151 = zext i1 %15150 to i32
  %15152 = add nsw i32 %15146, %15151
  %15153 = sitofp i32 %15152 to float
  %15154 = fneg float %15153
  %15155 = fmul float %15141, %15154
  %15156 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15157 = getelementptr inbounds i8, i8* %15156, i64 4
  %15158 = bitcast i8* %15157 to float*
  %15159 = load float, float* %15158, align 4
  %15160 = fmul float %15155, %15159
  %15161 = fadd float %15122, %15160
  %15162 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15163 = getelementptr inbounds i8, i8* %15162, i64 4
  %15164 = bitcast i8* %15163 to float*
  %15165 = load float, float* %15164, align 4
  %15166 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15167 = getelementptr inbounds i8, i8* %15166, i64 4
  %15168 = bitcast i8* %15167 to float*
  %15169 = load float, float* %15168, align 4
  %15170 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15171 = getelementptr inbounds i8, i8* %15170, i64 4
  %15172 = bitcast i8* %15171 to float*
  %15173 = load float, float* %15172, align 4
  %15174 = fmul float %15169, %15173
  %15175 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15176 = bitcast i8* %15175 to float*
  %15177 = load float, float* %15176, align 4
  %15178 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15179 = bitcast i8* %15178 to float*
  %15180 = load float, float* %15179, align 4
  %15181 = fmul float %15177, %15180
  %15182 = fadd float %15181, 0.000000e+00
  %15183 = fadd float %15174, %15182
  %15184 = call float @llvm.sqrt.f32.524(float %15183)
  %15185 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15186 = bitcast i8* %15185 to float*
  %15187 = load float, float* %15186, align 4
  %15188 = fcmp olt float %15187, 0.000000e+00
  %15189 = sext i1 %15188 to i32
  %15190 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15191 = bitcast i8* %15190 to float*
  %15192 = load float, float* %15191, align 4
  %15193 = fcmp ogt float %15192, 0.000000e+00
  %15194 = zext i1 %15193 to i32
  %15195 = add nsw i32 %15189, %15194
  %15196 = sitofp i32 %15195 to float
  %15197 = fneg float %15196
  %15198 = fmul float %15184, %15197
  %15199 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15200 = getelementptr inbounds i8, i8* %15199, i64 4
  %15201 = bitcast i8* %15200 to float*
  %15202 = load float, float* %15201, align 4
  %15203 = fmul float %15198, %15202
  %15204 = fadd float %15165, %15203
  %15205 = fmul float %15161, %15204
  %15206 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15207 = bitcast i8* %15206 to float*
  %15208 = load float, float* %15207, align 4
  %15209 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15210 = getelementptr inbounds i8, i8* %15209, i64 4
  %15211 = bitcast i8* %15210 to float*
  %15212 = load float, float* %15211, align 4
  %15213 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15214 = getelementptr inbounds i8, i8* %15213, i64 4
  %15215 = bitcast i8* %15214 to float*
  %15216 = load float, float* %15215, align 4
  %15217 = fmul float %15212, %15216
  %15218 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15219 = bitcast i8* %15218 to float*
  %15220 = load float, float* %15219, align 4
  %15221 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15222 = bitcast i8* %15221 to float*
  %15223 = load float, float* %15222, align 4
  %15224 = fmul float %15220, %15223
  %15225 = fadd float %15224, 0.000000e+00
  %15226 = fadd float %15217, %15225
  %15227 = call float @llvm.sqrt.f32.525(float %15226)
  %15228 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15229 = bitcast i8* %15228 to float*
  %15230 = load float, float* %15229, align 4
  %15231 = fcmp olt float %15230, 0.000000e+00
  %15232 = sext i1 %15231 to i32
  %15233 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15234 = bitcast i8* %15233 to float*
  %15235 = load float, float* %15234, align 4
  %15236 = fcmp ogt float %15235, 0.000000e+00
  %15237 = zext i1 %15236 to i32
  %15238 = add nsw i32 %15232, %15237
  %15239 = sitofp i32 %15238 to float
  %15240 = fneg float %15239
  %15241 = fmul float %15227, %15240
  %15242 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15243 = bitcast i8* %15242 to float*
  %15244 = load float, float* %15243, align 4
  %15245 = fmul float %15241, %15244
  %15246 = fadd float %15208, %15245
  %15247 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15248 = bitcast i8* %15247 to float*
  %15249 = load float, float* %15248, align 4
  %15250 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15251 = getelementptr inbounds i8, i8* %15250, i64 4
  %15252 = bitcast i8* %15251 to float*
  %15253 = load float, float* %15252, align 4
  %15254 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15255 = getelementptr inbounds i8, i8* %15254, i64 4
  %15256 = bitcast i8* %15255 to float*
  %15257 = load float, float* %15256, align 4
  %15258 = fmul float %15253, %15257
  %15259 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15260 = bitcast i8* %15259 to float*
  %15261 = load float, float* %15260, align 4
  %15262 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15263 = bitcast i8* %15262 to float*
  %15264 = load float, float* %15263, align 4
  %15265 = fmul float %15261, %15264
  %15266 = fadd float %15265, 0.000000e+00
  %15267 = fadd float %15258, %15266
  %15268 = call float @llvm.sqrt.f32.526(float %15267)
  %15269 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15270 = bitcast i8* %15269 to float*
  %15271 = load float, float* %15270, align 4
  %15272 = fcmp olt float %15271, 0.000000e+00
  %15273 = sext i1 %15272 to i32
  %15274 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15275 = bitcast i8* %15274 to float*
  %15276 = load float, float* %15275, align 4
  %15277 = fcmp ogt float %15276, 0.000000e+00
  %15278 = zext i1 %15277 to i32
  %15279 = add nsw i32 %15273, %15278
  %15280 = sitofp i32 %15279 to float
  %15281 = fneg float %15280
  %15282 = fmul float %15268, %15281
  %15283 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15284 = bitcast i8* %15283 to float*
  %15285 = load float, float* %15284, align 4
  %15286 = fmul float %15282, %15285
  %15287 = fadd float %15249, %15286
  %15288 = fmul float %15246, %15287
  %15289 = fadd float %15288, 0.000000e+00
  %15290 = fadd float %15205, %15289
  %15291 = call float @llvm.sqrt.f32.527(float %15290)
  %15292 = fdiv float %15118, %15291
  %15293 = insertelement <4 x float> %15077, float %15292, i32 1
  %15294 = insertelement <4 x float> %15293, float 0.000000e+00, i32 2
  %15295 = insertelement <4 x float> %15294, float 0.000000e+00, i32 3
  %15296 = extractelement <4 x float> %15295, i32 0
  %15297 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15298 = getelementptr inbounds i8, i8* %15297, i64 4
  %15299 = bitcast i8* %15298 to float*
  store float %15296, float* %15299, align 4
  %15300 = extractelement <4 x float> %15295, i32 1
  %15301 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15302 = bitcast i8* %15301 to float*
  store float %15300, float* %15302, align 4
  %15303 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15304 = getelementptr inbounds i8, i8* %15303, i64 4
  %15305 = bitcast i8* %15304 to float*
  %15306 = load float, float* %15305, align 4
  %15307 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15308 = getelementptr inbounds i8, i8* %15307, i64 4
  %15309 = bitcast i8* %15308 to float*
  %15310 = load float, float* %15309, align 4
  %15311 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15312 = getelementptr inbounds i8, i8* %15311, i64 4
  %15313 = bitcast i8* %15312 to float*
  %15314 = load float, float* %15313, align 4
  %15315 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15316 = getelementptr inbounds i8, i8* %15315, i64 4
  %15317 = bitcast i8* %15316 to float*
  %15318 = load float, float* %15317, align 4
  %15319 = fmul float %15314, %15318
  %15320 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15321 = bitcast i8* %15320 to float*
  %15322 = load float, float* %15321, align 4
  %15323 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15324 = bitcast i8* %15323 to float*
  %15325 = load float, float* %15324, align 4
  %15326 = fmul float %15322, %15325
  %15327 = fadd float %15326, 0.000000e+00
  %15328 = fadd float %15319, %15327
  %15329 = call float @llvm.sqrt.f32.528(float %15328)
  %15330 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15331 = bitcast i8* %15330 to float*
  %15332 = load float, float* %15331, align 4
  %15333 = fcmp olt float %15332, 0.000000e+00
  %15334 = sext i1 %15333 to i32
  %15335 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15336 = bitcast i8* %15335 to float*
  %15337 = load float, float* %15336, align 4
  %15338 = fcmp ogt float %15337, 0.000000e+00
  %15339 = zext i1 %15338 to i32
  %15340 = add nsw i32 %15334, %15339
  %15341 = sitofp i32 %15340 to float
  %15342 = fneg float %15341
  %15343 = fmul float %15329, %15342
  %15344 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15345 = getelementptr inbounds i8, i8* %15344, i64 4
  %15346 = bitcast i8* %15345 to float*
  %15347 = load float, float* %15346, align 4
  %15348 = fmul float %15343, %15347
  %15349 = fadd float %15310, %15348
  %15350 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15351 = getelementptr inbounds i8, i8* %15350, i64 4
  %15352 = bitcast i8* %15351 to float*
  %15353 = load float, float* %15352, align 4
  %15354 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15355 = getelementptr inbounds i8, i8* %15354, i64 4
  %15356 = bitcast i8* %15355 to float*
  %15357 = load float, float* %15356, align 4
  %15358 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15359 = getelementptr inbounds i8, i8* %15358, i64 4
  %15360 = bitcast i8* %15359 to float*
  %15361 = load float, float* %15360, align 4
  %15362 = fmul float %15357, %15361
  %15363 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15364 = bitcast i8* %15363 to float*
  %15365 = load float, float* %15364, align 4
  %15366 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15367 = bitcast i8* %15366 to float*
  %15368 = load float, float* %15367, align 4
  %15369 = fmul float %15365, %15368
  %15370 = fadd float %15369, 0.000000e+00
  %15371 = fadd float %15362, %15370
  %15372 = call float @llvm.sqrt.f32.529(float %15371)
  %15373 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15374 = bitcast i8* %15373 to float*
  %15375 = load float, float* %15374, align 4
  %15376 = fcmp olt float %15375, 0.000000e+00
  %15377 = sext i1 %15376 to i32
  %15378 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15379 = bitcast i8* %15378 to float*
  %15380 = load float, float* %15379, align 4
  %15381 = fcmp ogt float %15380, 0.000000e+00
  %15382 = zext i1 %15381 to i32
  %15383 = add nsw i32 %15377, %15382
  %15384 = sitofp i32 %15383 to float
  %15385 = fneg float %15384
  %15386 = fmul float %15372, %15385
  %15387 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15388 = getelementptr inbounds i8, i8* %15387, i64 4
  %15389 = bitcast i8* %15388 to float*
  %15390 = load float, float* %15389, align 4
  %15391 = fmul float %15386, %15390
  %15392 = fadd float %15353, %15391
  %15393 = fmul float %15349, %15392
  %15394 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15395 = bitcast i8* %15394 to float*
  %15396 = load float, float* %15395, align 4
  %15397 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15398 = getelementptr inbounds i8, i8* %15397, i64 4
  %15399 = bitcast i8* %15398 to float*
  %15400 = load float, float* %15399, align 4
  %15401 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15402 = getelementptr inbounds i8, i8* %15401, i64 4
  %15403 = bitcast i8* %15402 to float*
  %15404 = load float, float* %15403, align 4
  %15405 = fmul float %15400, %15404
  %15406 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15407 = bitcast i8* %15406 to float*
  %15408 = load float, float* %15407, align 4
  %15409 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15410 = bitcast i8* %15409 to float*
  %15411 = load float, float* %15410, align 4
  %15412 = fmul float %15408, %15411
  %15413 = fadd float %15412, 0.000000e+00
  %15414 = fadd float %15405, %15413
  %15415 = call float @llvm.sqrt.f32.530(float %15414)
  %15416 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15417 = bitcast i8* %15416 to float*
  %15418 = load float, float* %15417, align 4
  %15419 = fcmp olt float %15418, 0.000000e+00
  %15420 = sext i1 %15419 to i32
  %15421 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15422 = bitcast i8* %15421 to float*
  %15423 = load float, float* %15422, align 4
  %15424 = fcmp ogt float %15423, 0.000000e+00
  %15425 = zext i1 %15424 to i32
  %15426 = add nsw i32 %15420, %15425
  %15427 = sitofp i32 %15426 to float
  %15428 = fneg float %15427
  %15429 = fmul float %15415, %15428
  %15430 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15431 = bitcast i8* %15430 to float*
  %15432 = load float, float* %15431, align 4
  %15433 = fmul float %15429, %15432
  %15434 = fadd float %15396, %15433
  %15435 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15436 = bitcast i8* %15435 to float*
  %15437 = load float, float* %15436, align 4
  %15438 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15439 = getelementptr inbounds i8, i8* %15438, i64 4
  %15440 = bitcast i8* %15439 to float*
  %15441 = load float, float* %15440, align 4
  %15442 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15443 = getelementptr inbounds i8, i8* %15442, i64 4
  %15444 = bitcast i8* %15443 to float*
  %15445 = load float, float* %15444, align 4
  %15446 = fmul float %15441, %15445
  %15447 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15448 = bitcast i8* %15447 to float*
  %15449 = load float, float* %15448, align 4
  %15450 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15451 = bitcast i8* %15450 to float*
  %15452 = load float, float* %15451, align 4
  %15453 = fmul float %15449, %15452
  %15454 = fadd float %15453, 0.000000e+00
  %15455 = fadd float %15446, %15454
  %15456 = call float @llvm.sqrt.f32.531(float %15455)
  %15457 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15458 = bitcast i8* %15457 to float*
  %15459 = load float, float* %15458, align 4
  %15460 = fcmp olt float %15459, 0.000000e+00
  %15461 = sext i1 %15460 to i32
  %15462 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15463 = bitcast i8* %15462 to float*
  %15464 = load float, float* %15463, align 4
  %15465 = fcmp ogt float %15464, 0.000000e+00
  %15466 = zext i1 %15465 to i32
  %15467 = add nsw i32 %15461, %15466
  %15468 = sitofp i32 %15467 to float
  %15469 = fneg float %15468
  %15470 = fmul float %15456, %15469
  %15471 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15472 = bitcast i8* %15471 to float*
  %15473 = load float, float* %15472, align 4
  %15474 = fmul float %15470, %15473
  %15475 = fadd float %15437, %15474
  %15476 = fmul float %15434, %15475
  %15477 = fadd float %15476, 0.000000e+00
  %15478 = fadd float %15393, %15477
  %15479 = call float @llvm.sqrt.f32.532(float %15478)
  %15480 = fdiv float %15306, %15479
  %15481 = insertelement <4 x float> zeroinitializer, float %15480, i32 0
  %15482 = insertelement <4 x float> %15481, float 0.000000e+00, i32 1
  %15483 = insertelement <4 x float> %15482, float 0.000000e+00, i32 2
  %15484 = insertelement <4 x float> %15483, float 0.000000e+00, i32 3
  %15485 = extractelement <4 x float> %15484, i32 0
  %15486 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15487 = getelementptr inbounds i8, i8* %15486, i64 4
  %15488 = bitcast i8* %15487 to float*
  store float %15485, float* %15488, align 4
  %15489 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15490 = bitcast i8* %15489 to float*
  %15491 = load float, float* %15490, align 4
  %15492 = insertelement <4 x float> zeroinitializer, float %15491, i32 0
  %15493 = insertelement <4 x float> %15492, float 1.000000e+00, i32 1
  %15494 = insertelement <4 x float> %15493, float 1.000000e+00, i32 2
  %15495 = insertelement <4 x float> %15494, float 1.000000e+00, i32 3
  %15496 = fmul <4 x float> %15495, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %15497 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15498 = bitcast i8* %15497 to float*
  %15499 = load float, float* %15498, align 4
  %15500 = insertelement <4 x float> zeroinitializer, float %15499, i32 0
  %15501 = insertelement <4 x float> %15500, float 0.000000e+00, i32 1
  %15502 = insertelement <4 x float> %15501, float 0.000000e+00, i32 2
  %15503 = insertelement <4 x float> %15502, float 0.000000e+00, i32 3
  %15504 = fmul <4 x float> %15496, %15503
  %15505 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %15504
  %15506 = extractelement <4 x float> %15505, i32 0
  %15507 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %15508 = bitcast i8* %15507 to float*
  store float %15506, float* %15508, align 4
  %15509 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15510 = bitcast i8* %15509 to float*
  %15511 = load float, float* %15510, align 4
  %15512 = insertelement <4 x float> zeroinitializer, float %15511, i32 0
  %15513 = insertelement <4 x float> %15512, float 1.000000e+00, i32 1
  %15514 = insertelement <4 x float> %15513, float 1.000000e+00, i32 2
  %15515 = insertelement <4 x float> %15514, float 1.000000e+00, i32 3
  %15516 = fmul <4 x float> %15515, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %15517 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15518 = getelementptr inbounds i8, i8* %15517, i64 4
  %15519 = bitcast i8* %15518 to float*
  %15520 = load float, float* %15519, align 4
  %15521 = insertelement <4 x float> zeroinitializer, float %15520, i32 0
  %15522 = insertelement <4 x float> %15521, float 0.000000e+00, i32 1
  %15523 = insertelement <4 x float> %15522, float 0.000000e+00, i32 2
  %15524 = insertelement <4 x float> %15523, float 0.000000e+00, i32 3
  %15525 = fmul <4 x float> %15516, %15524
  %15526 = fsub <4 x float> zeroinitializer, %15525
  %15527 = extractelement <4 x float> %15526, i32 0
  %15528 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %15529 = getelementptr inbounds i8, i8* %15528, i64 4
  %15530 = bitcast i8* %15529 to float*
  store float %15527, float* %15530, align 4
  %15531 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15532 = getelementptr inbounds i8, i8* %15531, i64 4
  %15533 = bitcast i8* %15532 to float*
  %15534 = load float, float* %15533, align 4
  %15535 = insertelement <4 x float> zeroinitializer, float %15534, i32 0
  %15536 = insertelement <4 x float> %15535, float 1.000000e+00, i32 1
  %15537 = insertelement <4 x float> %15536, float 1.000000e+00, i32 2
  %15538 = insertelement <4 x float> %15537, float 1.000000e+00, i32 3
  %15539 = fmul <4 x float> %15538, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %15540 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15541 = bitcast i8* %15540 to float*
  %15542 = load float, float* %15541, align 4
  %15543 = insertelement <4 x float> zeroinitializer, float %15542, i32 0
  %15544 = insertelement <4 x float> %15543, float 0.000000e+00, i32 1
  %15545 = insertelement <4 x float> %15544, float 0.000000e+00, i32 2
  %15546 = insertelement <4 x float> %15545, float 0.000000e+00, i32 3
  %15547 = fmul <4 x float> %15539, %15546
  %15548 = fsub <4 x float> zeroinitializer, %15547
  %15549 = extractelement <4 x float> %15548, i32 0
  %15550 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %15551 = getelementptr inbounds i8, i8* %15550, i64 8
  %15552 = bitcast i8* %15551 to float*
  store float %15549, float* %15552, align 4
  %15553 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15554 = getelementptr inbounds i8, i8* %15553, i64 4
  %15555 = bitcast i8* %15554 to float*
  %15556 = load float, float* %15555, align 4
  %15557 = fmul float %15556, 2.000000e+00
  %15558 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %15559 = getelementptr inbounds i8, i8* %15558, i64 4
  %15560 = bitcast i8* %15559 to float*
  %15561 = load float, float* %15560, align 4
  %15562 = fmul float %15557, %15561
  %15563 = fsub float 1.000000e+00, %15562
  %15564 = insertelement <4 x float> zeroinitializer, float %15563, i32 0
  %15565 = insertelement <4 x float> %15564, float 1.000000e+00, i32 1
  %15566 = insertelement <4 x float> %15565, float 1.000000e+00, i32 2
  %15567 = insertelement <4 x float> %15566, float 0.000000e+00, i32 3
  %15568 = extractelement <4 x float> %15567, i32 0
  %15569 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %15570 = getelementptr inbounds i8, i8* %15569, i64 12
  %15571 = bitcast i8* %15570 to float*
  store float %15568, float* %15571, align 4
  %15572 = extractelement <4 x float> %15567, i32 1
  %15573 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15574 = bitcast i8* %15573 to float*
  store float %15572, float* %15574, align 4
  %15575 = extractelement <4 x float> %15567, i32 2
  %15576 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15577 = getelementptr inbounds i8, i8* %15576, i64 20
  %15578 = bitcast i8* %15577 to float*
  store float %15575, float* %15578, align 4
  %15579 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %15580 = bitcast i8* %15579 to i32*
  %15581 = load i32, i32* %15580, align 4
  %15582 = sitofp i32 %15581 to float
  %15583 = insertelement <4 x float> zeroinitializer, float %15582, i32 0
  %15584 = insertelement <4 x float> %15583, float 0.000000e+00, i32 1
  %15585 = insertelement <4 x float> %15584, float 0.000000e+00, i32 2
  %15586 = insertelement <4 x float> %15585, float 0.000000e+00, i32 3
  %15587 = extractelement <4 x float> %15586, i32 0
  %15588 = fptosi float %15587 to i32
  %15589 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15590 = getelementptr inbounds i8, i8* %15589, i64 40
  %15591 = bitcast i8* %15590 to i32*
  store i32 %15588, i32* %15591, align 4
  %15592 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %15593 = getelementptr inbounds i8, i8* %15592, i64 4
  %15594 = bitcast i8* %15593 to i32*
  %15595 = load i32, i32* %15594, align 4
  %15596 = sitofp i32 %15595 to float
  %15597 = insertelement <4 x float> zeroinitializer, float %15596, i32 0
  %15598 = insertelement <4 x float> %15597, float 0.000000e+00, i32 1
  %15599 = insertelement <4 x float> %15598, float 0.000000e+00, i32 2
  %15600 = insertelement <4 x float> %15599, float 0.000000e+00, i32 3
  %15601 = extractelement <4 x float> %15600, i32 0
  %15602 = fptosi float %15601 to i32
  %15603 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15604 = getelementptr inbounds i8, i8* %15603, i64 44
  %15605 = bitcast i8* %15604 to i32*
  store i32 %15602, i32* %15605, align 4
  %15606 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %15607 = getelementptr inbounds i8, i8* %15606, i64 8
  %15608 = bitcast i8* %15607 to i32*
  %15609 = load i32, i32* %15608, align 4
  %15610 = sitofp i32 %15609 to float
  %15611 = insertelement <4 x float> zeroinitializer, float %15610, i32 0
  %15612 = insertelement <4 x float> %15611, float 0.000000e+00, i32 1
  %15613 = insertelement <4 x float> %15612, float 0.000000e+00, i32 2
  %15614 = insertelement <4 x float> %15613, float 0.000000e+00, i32 3
  %15615 = extractelement <4 x float> %15614, i32 0
  %15616 = fptosi float %15615 to i32
  %15617 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15618 = getelementptr inbounds i8, i8* %15617, i64 56
  %15619 = bitcast i8* %15618 to i32*
  store i32 %15616, i32* %15619, align 4
  %15620 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %15621 = getelementptr inbounds i8, i8* %15620, i64 12
  %15622 = bitcast i8* %15621 to i32*
  %15623 = load i32, i32* %15622, align 4
  %15624 = sitofp i32 %15623 to float
  %15625 = insertelement <4 x float> zeroinitializer, float %15624, i32 0
  %15626 = insertelement <4 x float> %15625, float 0.000000e+00, i32 1
  %15627 = insertelement <4 x float> %15626, float 0.000000e+00, i32 2
  %15628 = insertelement <4 x float> %15627, float 0.000000e+00, i32 3
  %15629 = extractelement <4 x float> %15628, i32 0
  %15630 = fptosi float %15629 to i32
  %15631 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15632 = getelementptr inbounds i8, i8* %15631, i64 60
  %15633 = bitcast i8* %15632 to i32*
  store i32 %15630, i32* %15633, align 4
  %15634 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15635 = bitcast i8* %15634 to float*
  %15636 = load float, float* %15635, align 4
  %15637 = insertelement <4 x float> zeroinitializer, float %15636, i32 0
  %15638 = insertelement <4 x float> %15637, float 0.000000e+00, i32 1
  %15639 = insertelement <4 x float> %15638, float 0.000000e+00, i32 2
  %15640 = insertelement <4 x float> %15639, float 0.000000e+00, i32 3
  %15641 = load float, float* %1, align 4
  %15642 = insertelement <4 x float> zeroinitializer, float %15641, i32 0
  %15643 = insertelement <4 x float> %15642, float 0.000000e+00, i32 1
  %15644 = insertelement <4 x float> %15643, float 0.000000e+00, i32 2
  %15645 = insertelement <4 x float> %15644, float 0.000000e+00, i32 3
  %15646 = call <4 x float> @llvm.fma.f32.533(<4 x float> %15640, <4 x float> %15645, <4 x float> zeroinitializer)
  %15647 = extractelement <4 x float> %15646, i32 0
  %15648 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15649 = bitcast i8* %15648 to float*
  store float %15647, float* %15649, align 4
  %15650 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15651 = bitcast i8* %15650 to float*
  %15652 = load float, float* %15651, align 4
  %15653 = insertelement <4 x float> zeroinitializer, float %15652, i32 0
  %15654 = insertelement <4 x float> %15653, float 1.000000e+00, i32 1
  %15655 = insertelement <4 x float> %15654, float 1.000000e+00, i32 2
  %15656 = insertelement <4 x float> %15655, float 1.000000e+00, i32 3
  %15657 = load float, float* %1, align 4
  %15658 = insertelement <4 x float> zeroinitializer, float %15657, i32 0
  %15659 = insertelement <4 x float> %15658, float 0.000000e+00, i32 1
  %15660 = insertelement <4 x float> %15659, float 0.000000e+00, i32 2
  %15661 = insertelement <4 x float> %15660, float 0.000000e+00, i32 3
  %15662 = fmul <4 x float> %15656, %15661
  %15663 = fadd <4 x float> %15662, zeroinitializer
  %15664 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15665 = getelementptr inbounds i8, i8* %15664, i64 4
  %15666 = bitcast i8* %15665 to float*
  %15667 = load float, float* %15666, align 4
  %15668 = insertelement <4 x float> zeroinitializer, float %15667, i32 0
  %15669 = insertelement <4 x float> %15668, float 0.000000e+00, i32 1
  %15670 = insertelement <4 x float> %15669, float 0.000000e+00, i32 2
  %15671 = insertelement <4 x float> %15670, float 0.000000e+00, i32 3
  %15672 = getelementptr inbounds float, float* %1, i64 4
  %15673 = load float, float* %15672, align 4
  %15674 = insertelement <4 x float> zeroinitializer, float %15673, i32 0
  %15675 = insertelement <4 x float> %15674, float 0.000000e+00, i32 1
  %15676 = insertelement <4 x float> %15675, float 0.000000e+00, i32 2
  %15677 = insertelement <4 x float> %15676, float 0.000000e+00, i32 3
  %15678 = call <4 x float> @llvm.fma.f32.534(<4 x float> %15671, <4 x float> %15677, <4 x float> %15663)
  %15679 = extractelement <4 x float> %15678, i32 0
  %15680 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15681 = bitcast i8* %15680 to float*
  store float %15679, float* %15681, align 4
  %15682 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15683 = bitcast i8* %15682 to float*
  %15684 = load float, float* %15683, align 4
  %15685 = insertelement <4 x float> zeroinitializer, float %15684, i32 0
  %15686 = insertelement <4 x float> %15685, float 1.000000e+00, i32 1
  %15687 = insertelement <4 x float> %15686, float 1.000000e+00, i32 2
  %15688 = insertelement <4 x float> %15687, float 1.000000e+00, i32 3
  %15689 = load float, float* %1, align 4
  %15690 = insertelement <4 x float> zeroinitializer, float %15689, i32 0
  %15691 = insertelement <4 x float> %15690, float 0.000000e+00, i32 1
  %15692 = insertelement <4 x float> %15691, float 0.000000e+00, i32 2
  %15693 = insertelement <4 x float> %15692, float 0.000000e+00, i32 3
  %15694 = fmul <4 x float> %15688, %15693
  %15695 = fadd <4 x float> %15694, zeroinitializer
  %15696 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15697 = getelementptr inbounds i8, i8* %15696, i64 4
  %15698 = bitcast i8* %15697 to float*
  %15699 = load float, float* %15698, align 4
  %15700 = insertelement <4 x float> zeroinitializer, float %15699, i32 0
  %15701 = insertelement <4 x float> %15700, float 1.000000e+00, i32 1
  %15702 = insertelement <4 x float> %15701, float 1.000000e+00, i32 2
  %15703 = insertelement <4 x float> %15702, float 1.000000e+00, i32 3
  %15704 = getelementptr inbounds float, float* %1, i64 4
  %15705 = load float, float* %15704, align 4
  %15706 = insertelement <4 x float> zeroinitializer, float %15705, i32 0
  %15707 = insertelement <4 x float> %15706, float 0.000000e+00, i32 1
  %15708 = insertelement <4 x float> %15707, float 0.000000e+00, i32 2
  %15709 = insertelement <4 x float> %15708, float 0.000000e+00, i32 3
  %15710 = call <4 x float> @llvm.fma.f32.535(<4 x float> %15703, <4 x float> %15709, <4 x float> %15695)
  %15711 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15712 = getelementptr inbounds i8, i8* %15711, i64 8
  %15713 = bitcast i8* %15712 to float*
  %15714 = load float, float* %15713, align 4
  %15715 = insertelement <4 x float> zeroinitializer, float %15714, i32 0
  %15716 = insertelement <4 x float> %15715, float 0.000000e+00, i32 1
  %15717 = insertelement <4 x float> %15716, float 0.000000e+00, i32 2
  %15718 = insertelement <4 x float> %15717, float 0.000000e+00, i32 3
  %15719 = getelementptr inbounds float, float* %1, i64 8
  %15720 = load float, float* %15719, align 4
  %15721 = insertelement <4 x float> zeroinitializer, float %15720, i32 0
  %15722 = insertelement <4 x float> %15721, float 0.000000e+00, i32 1
  %15723 = insertelement <4 x float> %15722, float 0.000000e+00, i32 2
  %15724 = insertelement <4 x float> %15723, float 0.000000e+00, i32 3
  %15725 = call <4 x float> @llvm.fma.f32.536(<4 x float> %15718, <4 x float> %15724, <4 x float> %15710)
  %15726 = extractelement <4 x float> %15725, i32 0
  %15727 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15728 = bitcast i8* %15727 to float*
  store float %15726, float* %15728, align 4
  %15729 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15730 = bitcast i8* %15729 to float*
  %15731 = load float, float* %15730, align 4
  %15732 = insertelement <4 x float> zeroinitializer, float %15731, i32 0
  %15733 = insertelement <4 x float> %15732, float 1.000000e+00, i32 1
  %15734 = insertelement <4 x float> %15733, float 1.000000e+00, i32 2
  %15735 = insertelement <4 x float> %15734, float 1.000000e+00, i32 3
  %15736 = load float, float* %1, align 4
  %15737 = insertelement <4 x float> zeroinitializer, float %15736, i32 0
  %15738 = insertelement <4 x float> %15737, float 0.000000e+00, i32 1
  %15739 = insertelement <4 x float> %15738, float 0.000000e+00, i32 2
  %15740 = insertelement <4 x float> %15739, float 0.000000e+00, i32 3
  %15741 = fmul <4 x float> %15735, %15740
  %15742 = fadd <4 x float> %15741, zeroinitializer
  %15743 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15744 = getelementptr inbounds i8, i8* %15743, i64 4
  %15745 = bitcast i8* %15744 to float*
  %15746 = load float, float* %15745, align 4
  %15747 = insertelement <4 x float> zeroinitializer, float %15746, i32 0
  %15748 = insertelement <4 x float> %15747, float 1.000000e+00, i32 1
  %15749 = insertelement <4 x float> %15748, float 1.000000e+00, i32 2
  %15750 = insertelement <4 x float> %15749, float 1.000000e+00, i32 3
  %15751 = getelementptr inbounds float, float* %1, i64 4
  %15752 = load float, float* %15751, align 4
  %15753 = insertelement <4 x float> zeroinitializer, float %15752, i32 0
  %15754 = insertelement <4 x float> %15753, float 0.000000e+00, i32 1
  %15755 = insertelement <4 x float> %15754, float 0.000000e+00, i32 2
  %15756 = insertelement <4 x float> %15755, float 0.000000e+00, i32 3
  %15757 = call <4 x float> @llvm.fma.f32.537(<4 x float> %15750, <4 x float> %15756, <4 x float> %15742)
  %15758 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15759 = getelementptr inbounds i8, i8* %15758, i64 8
  %15760 = bitcast i8* %15759 to float*
  %15761 = load float, float* %15760, align 4
  %15762 = insertelement <4 x float> zeroinitializer, float %15761, i32 0
  %15763 = insertelement <4 x float> %15762, float 1.000000e+00, i32 1
  %15764 = insertelement <4 x float> %15763, float 1.000000e+00, i32 2
  %15765 = insertelement <4 x float> %15764, float 1.000000e+00, i32 3
  %15766 = getelementptr inbounds float, float* %1, i64 8
  %15767 = load float, float* %15766, align 4
  %15768 = insertelement <4 x float> zeroinitializer, float %15767, i32 0
  %15769 = insertelement <4 x float> %15768, float 0.000000e+00, i32 1
  %15770 = insertelement <4 x float> %15769, float 0.000000e+00, i32 2
  %15771 = insertelement <4 x float> %15770, float 0.000000e+00, i32 3
  %15772 = call <4 x float> @llvm.fma.f32.538(<4 x float> %15765, <4 x float> %15771, <4 x float> %15757)
  %15773 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15774 = getelementptr inbounds i8, i8* %15773, i64 12
  %15775 = bitcast i8* %15774 to float*
  %15776 = load float, float* %15775, align 4
  %15777 = insertelement <4 x float> zeroinitializer, float %15776, i32 0
  %15778 = insertelement <4 x float> %15777, float 0.000000e+00, i32 1
  %15779 = insertelement <4 x float> %15778, float 0.000000e+00, i32 2
  %15780 = insertelement <4 x float> %15779, float 0.000000e+00, i32 3
  %15781 = getelementptr inbounds float, float* %1, i64 12
  %15782 = load float, float* %15781, align 4
  %15783 = insertelement <4 x float> zeroinitializer, float %15782, i32 0
  %15784 = insertelement <4 x float> %15783, float 0.000000e+00, i32 1
  %15785 = insertelement <4 x float> %15784, float 0.000000e+00, i32 2
  %15786 = insertelement <4 x float> %15785, float 0.000000e+00, i32 3
  %15787 = call <4 x float> @llvm.fma.f32.539(<4 x float> %15780, <4 x float> %15786, <4 x float> %15772)
  %15788 = extractelement <4 x float> %15787, i32 0
  %15789 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15790 = bitcast i8* %15789 to float*
  store float %15788, float* %15790, align 4
  %15791 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15792 = bitcast i8* %15791 to float*
  %15793 = load float, float* %15792, align 4
  %15794 = insertelement <4 x float> zeroinitializer, float %15793, i32 0
  %15795 = insertelement <4 x float> %15794, float 0.000000e+00, i32 1
  %15796 = insertelement <4 x float> %15795, float 0.000000e+00, i32 2
  %15797 = insertelement <4 x float> %15796, float 0.000000e+00, i32 3
  %15798 = getelementptr inbounds float, float* %1, i64 1
  %15799 = load float, float* %15798, align 4
  %15800 = insertelement <4 x float> zeroinitializer, float %15799, i32 0
  %15801 = insertelement <4 x float> %15800, float 0.000000e+00, i32 1
  %15802 = insertelement <4 x float> %15801, float 0.000000e+00, i32 2
  %15803 = insertelement <4 x float> %15802, float 0.000000e+00, i32 3
  %15804 = call <4 x float> @llvm.fma.f32.540(<4 x float> %15797, <4 x float> %15803, <4 x float> zeroinitializer)
  %15805 = extractelement <4 x float> %15804, i32 0
  %15806 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15807 = getelementptr inbounds i8, i8* %15806, i64 4
  %15808 = bitcast i8* %15807 to float*
  store float %15805, float* %15808, align 4
  %15809 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15810 = bitcast i8* %15809 to float*
  %15811 = load float, float* %15810, align 4
  %15812 = insertelement <4 x float> zeroinitializer, float %15811, i32 0
  %15813 = insertelement <4 x float> %15812, float 1.000000e+00, i32 1
  %15814 = insertelement <4 x float> %15813, float 1.000000e+00, i32 2
  %15815 = insertelement <4 x float> %15814, float 1.000000e+00, i32 3
  %15816 = getelementptr inbounds float, float* %1, i64 1
  %15817 = load float, float* %15816, align 4
  %15818 = insertelement <4 x float> zeroinitializer, float %15817, i32 0
  %15819 = insertelement <4 x float> %15818, float 0.000000e+00, i32 1
  %15820 = insertelement <4 x float> %15819, float 0.000000e+00, i32 2
  %15821 = insertelement <4 x float> %15820, float 0.000000e+00, i32 3
  %15822 = fmul <4 x float> %15815, %15821
  %15823 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15824 = getelementptr inbounds i8, i8* %15823, i64 4
  %15825 = bitcast i8* %15824 to float*
  %15826 = load float, float* %15825, align 4
  %15827 = insertelement <4 x float> zeroinitializer, float %15826, i32 0
  %15828 = insertelement <4 x float> %15827, float 0.000000e+00, i32 1
  %15829 = insertelement <4 x float> %15828, float 0.000000e+00, i32 2
  %15830 = insertelement <4 x float> %15829, float 0.000000e+00, i32 3
  %15831 = getelementptr inbounds float, float* %1, i64 5
  %15832 = load float, float* %15831, align 4
  %15833 = insertelement <4 x float> zeroinitializer, float %15832, i32 0
  %15834 = insertelement <4 x float> %15833, float 0.000000e+00, i32 1
  %15835 = insertelement <4 x float> %15834, float 0.000000e+00, i32 2
  %15836 = insertelement <4 x float> %15835, float 0.000000e+00, i32 3
  %15837 = call <4 x float> @llvm.fma.f32.541(<4 x float> %15830, <4 x float> %15836, <4 x float> %15822)
  %15838 = extractelement <4 x float> %15837, i32 0
  %15839 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15840 = getelementptr inbounds i8, i8* %15839, i64 4
  %15841 = bitcast i8* %15840 to float*
  store float %15838, float* %15841, align 4
  %15842 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15843 = bitcast i8* %15842 to float*
  %15844 = load float, float* %15843, align 4
  %15845 = insertelement <4 x float> zeroinitializer, float %15844, i32 0
  %15846 = insertelement <4 x float> %15845, float 1.000000e+00, i32 1
  %15847 = insertelement <4 x float> %15846, float 1.000000e+00, i32 2
  %15848 = insertelement <4 x float> %15847, float 1.000000e+00, i32 3
  %15849 = getelementptr inbounds float, float* %1, i64 1
  %15850 = load float, float* %15849, align 4
  %15851 = insertelement <4 x float> zeroinitializer, float %15850, i32 0
  %15852 = insertelement <4 x float> %15851, float 0.000000e+00, i32 1
  %15853 = insertelement <4 x float> %15852, float 0.000000e+00, i32 2
  %15854 = insertelement <4 x float> %15853, float 0.000000e+00, i32 3
  %15855 = fmul <4 x float> %15848, %15854
  %15856 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15857 = getelementptr inbounds i8, i8* %15856, i64 4
  %15858 = bitcast i8* %15857 to float*
  %15859 = load float, float* %15858, align 4
  %15860 = insertelement <4 x float> zeroinitializer, float %15859, i32 0
  %15861 = insertelement <4 x float> %15860, float 1.000000e+00, i32 1
  %15862 = insertelement <4 x float> %15861, float 1.000000e+00, i32 2
  %15863 = insertelement <4 x float> %15862, float 1.000000e+00, i32 3
  %15864 = getelementptr inbounds float, float* %1, i64 5
  %15865 = load float, float* %15864, align 4
  %15866 = insertelement <4 x float> zeroinitializer, float %15865, i32 0
  %15867 = insertelement <4 x float> %15866, float 0.000000e+00, i32 1
  %15868 = insertelement <4 x float> %15867, float 0.000000e+00, i32 2
  %15869 = insertelement <4 x float> %15868, float 0.000000e+00, i32 3
  %15870 = call <4 x float> @llvm.fma.f32.542(<4 x float> %15863, <4 x float> %15869, <4 x float> %15855)
  %15871 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15872 = getelementptr inbounds i8, i8* %15871, i64 8
  %15873 = bitcast i8* %15872 to float*
  %15874 = load float, float* %15873, align 4
  %15875 = insertelement <4 x float> zeroinitializer, float %15874, i32 0
  %15876 = insertelement <4 x float> %15875, float 0.000000e+00, i32 1
  %15877 = insertelement <4 x float> %15876, float 0.000000e+00, i32 2
  %15878 = insertelement <4 x float> %15877, float 0.000000e+00, i32 3
  %15879 = getelementptr inbounds float, float* %1, i64 9
  %15880 = load float, float* %15879, align 4
  %15881 = insertelement <4 x float> zeroinitializer, float %15880, i32 0
  %15882 = insertelement <4 x float> %15881, float 0.000000e+00, i32 1
  %15883 = insertelement <4 x float> %15882, float 0.000000e+00, i32 2
  %15884 = insertelement <4 x float> %15883, float 0.000000e+00, i32 3
  %15885 = call <4 x float> @llvm.fma.f32.543(<4 x float> %15878, <4 x float> %15884, <4 x float> %15870)
  %15886 = extractelement <4 x float> %15885, i32 0
  %15887 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15888 = getelementptr inbounds i8, i8* %15887, i64 4
  %15889 = bitcast i8* %15888 to float*
  store float %15886, float* %15889, align 4
  %15890 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15891 = bitcast i8* %15890 to float*
  %15892 = load float, float* %15891, align 4
  %15893 = insertelement <4 x float> zeroinitializer, float %15892, i32 0
  %15894 = insertelement <4 x float> %15893, float 1.000000e+00, i32 1
  %15895 = insertelement <4 x float> %15894, float 1.000000e+00, i32 2
  %15896 = insertelement <4 x float> %15895, float 1.000000e+00, i32 3
  %15897 = getelementptr inbounds float, float* %1, i64 1
  %15898 = load float, float* %15897, align 4
  %15899 = insertelement <4 x float> zeroinitializer, float %15898, i32 0
  %15900 = insertelement <4 x float> %15899, float 0.000000e+00, i32 1
  %15901 = insertelement <4 x float> %15900, float 0.000000e+00, i32 2
  %15902 = insertelement <4 x float> %15901, float 0.000000e+00, i32 3
  %15903 = fmul <4 x float> %15896, %15902
  %15904 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15905 = getelementptr inbounds i8, i8* %15904, i64 4
  %15906 = bitcast i8* %15905 to float*
  %15907 = load float, float* %15906, align 4
  %15908 = insertelement <4 x float> zeroinitializer, float %15907, i32 0
  %15909 = insertelement <4 x float> %15908, float 1.000000e+00, i32 1
  %15910 = insertelement <4 x float> %15909, float 1.000000e+00, i32 2
  %15911 = insertelement <4 x float> %15910, float 1.000000e+00, i32 3
  %15912 = getelementptr inbounds float, float* %1, i64 5
  %15913 = load float, float* %15912, align 4
  %15914 = insertelement <4 x float> zeroinitializer, float %15913, i32 0
  %15915 = insertelement <4 x float> %15914, float 0.000000e+00, i32 1
  %15916 = insertelement <4 x float> %15915, float 0.000000e+00, i32 2
  %15917 = insertelement <4 x float> %15916, float 0.000000e+00, i32 3
  %15918 = call <4 x float> @llvm.fma.f32.544(<4 x float> %15911, <4 x float> %15917, <4 x float> %15903)
  %15919 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15920 = getelementptr inbounds i8, i8* %15919, i64 8
  %15921 = bitcast i8* %15920 to float*
  %15922 = load float, float* %15921, align 4
  %15923 = insertelement <4 x float> zeroinitializer, float %15922, i32 0
  %15924 = insertelement <4 x float> %15923, float 1.000000e+00, i32 1
  %15925 = insertelement <4 x float> %15924, float 1.000000e+00, i32 2
  %15926 = insertelement <4 x float> %15925, float 1.000000e+00, i32 3
  %15927 = getelementptr inbounds float, float* %1, i64 9
  %15928 = load float, float* %15927, align 4
  %15929 = insertelement <4 x float> zeroinitializer, float %15928, i32 0
  %15930 = insertelement <4 x float> %15929, float 0.000000e+00, i32 1
  %15931 = insertelement <4 x float> %15930, float 0.000000e+00, i32 2
  %15932 = insertelement <4 x float> %15931, float 0.000000e+00, i32 3
  %15933 = call <4 x float> @llvm.fma.f32.545(<4 x float> %15926, <4 x float> %15932, <4 x float> %15918)
  %15934 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15935 = getelementptr inbounds i8, i8* %15934, i64 12
  %15936 = bitcast i8* %15935 to float*
  %15937 = load float, float* %15936, align 4
  %15938 = insertelement <4 x float> zeroinitializer, float %15937, i32 0
  %15939 = insertelement <4 x float> %15938, float 0.000000e+00, i32 1
  %15940 = insertelement <4 x float> %15939, float 0.000000e+00, i32 2
  %15941 = insertelement <4 x float> %15940, float 0.000000e+00, i32 3
  %15942 = getelementptr inbounds float, float* %1, i64 13
  %15943 = load float, float* %15942, align 4
  %15944 = insertelement <4 x float> zeroinitializer, float %15943, i32 0
  %15945 = insertelement <4 x float> %15944, float 0.000000e+00, i32 1
  %15946 = insertelement <4 x float> %15945, float 0.000000e+00, i32 2
  %15947 = insertelement <4 x float> %15946, float 0.000000e+00, i32 3
  %15948 = call <4 x float> @llvm.fma.f32.546(<4 x float> %15941, <4 x float> %15947, <4 x float> %15933)
  %15949 = extractelement <4 x float> %15948, i32 0
  %15950 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15951 = getelementptr inbounds i8, i8* %15950, i64 4
  %15952 = bitcast i8* %15951 to float*
  store float %15949, float* %15952, align 4
  %15953 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15954 = bitcast i8* %15953 to float*
  %15955 = load float, float* %15954, align 4
  %15956 = insertelement <4 x float> zeroinitializer, float %15955, i32 0
  %15957 = insertelement <4 x float> %15956, float 0.000000e+00, i32 1
  %15958 = insertelement <4 x float> %15957, float 0.000000e+00, i32 2
  %15959 = insertelement <4 x float> %15958, float 0.000000e+00, i32 3
  %15960 = getelementptr inbounds float, float* %1, i64 2
  %15961 = load float, float* %15960, align 4
  %15962 = insertelement <4 x float> zeroinitializer, float %15961, i32 0
  %15963 = insertelement <4 x float> %15962, float 0.000000e+00, i32 1
  %15964 = insertelement <4 x float> %15963, float 0.000000e+00, i32 2
  %15965 = insertelement <4 x float> %15964, float 0.000000e+00, i32 3
  %15966 = call <4 x float> @llvm.fma.f32.547(<4 x float> %15959, <4 x float> %15965, <4 x float> zeroinitializer)
  %15967 = extractelement <4 x float> %15966, i32 0
  %15968 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15969 = getelementptr inbounds i8, i8* %15968, i64 8
  %15970 = bitcast i8* %15969 to float*
  store float %15967, float* %15970, align 4
  %15971 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15972 = bitcast i8* %15971 to float*
  %15973 = load float, float* %15972, align 4
  %15974 = insertelement <4 x float> zeroinitializer, float %15973, i32 0
  %15975 = insertelement <4 x float> %15974, float 1.000000e+00, i32 1
  %15976 = insertelement <4 x float> %15975, float 1.000000e+00, i32 2
  %15977 = insertelement <4 x float> %15976, float 1.000000e+00, i32 3
  %15978 = getelementptr inbounds float, float* %1, i64 2
  %15979 = load float, float* %15978, align 4
  %15980 = insertelement <4 x float> zeroinitializer, float %15979, i32 0
  %15981 = insertelement <4 x float> %15980, float 0.000000e+00, i32 1
  %15982 = insertelement <4 x float> %15981, float 0.000000e+00, i32 2
  %15983 = insertelement <4 x float> %15982, float 0.000000e+00, i32 3
  %15984 = fmul <4 x float> %15977, %15983
  %15985 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %15986 = getelementptr inbounds i8, i8* %15985, i64 4
  %15987 = bitcast i8* %15986 to float*
  %15988 = load float, float* %15987, align 4
  %15989 = insertelement <4 x float> zeroinitializer, float %15988, i32 0
  %15990 = insertelement <4 x float> %15989, float 0.000000e+00, i32 1
  %15991 = insertelement <4 x float> %15990, float 0.000000e+00, i32 2
  %15992 = insertelement <4 x float> %15991, float 0.000000e+00, i32 3
  %15993 = getelementptr inbounds float, float* %1, i64 6
  %15994 = load float, float* %15993, align 4
  %15995 = insertelement <4 x float> zeroinitializer, float %15994, i32 0
  %15996 = insertelement <4 x float> %15995, float 0.000000e+00, i32 1
  %15997 = insertelement <4 x float> %15996, float 0.000000e+00, i32 2
  %15998 = insertelement <4 x float> %15997, float 0.000000e+00, i32 3
  %15999 = call <4 x float> @llvm.fma.f32.548(<4 x float> %15992, <4 x float> %15998, <4 x float> %15984)
  %16000 = extractelement <4 x float> %15999, i32 0
  %16001 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16002 = getelementptr inbounds i8, i8* %16001, i64 8
  %16003 = bitcast i8* %16002 to float*
  store float %16000, float* %16003, align 4
  %16004 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16005 = bitcast i8* %16004 to float*
  %16006 = load float, float* %16005, align 4
  %16007 = insertelement <4 x float> zeroinitializer, float %16006, i32 0
  %16008 = insertelement <4 x float> %16007, float 1.000000e+00, i32 1
  %16009 = insertelement <4 x float> %16008, float 1.000000e+00, i32 2
  %16010 = insertelement <4 x float> %16009, float 1.000000e+00, i32 3
  %16011 = getelementptr inbounds float, float* %1, i64 2
  %16012 = load float, float* %16011, align 4
  %16013 = insertelement <4 x float> zeroinitializer, float %16012, i32 0
  %16014 = insertelement <4 x float> %16013, float 0.000000e+00, i32 1
  %16015 = insertelement <4 x float> %16014, float 0.000000e+00, i32 2
  %16016 = insertelement <4 x float> %16015, float 0.000000e+00, i32 3
  %16017 = fmul <4 x float> %16010, %16016
  %16018 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16019 = getelementptr inbounds i8, i8* %16018, i64 4
  %16020 = bitcast i8* %16019 to float*
  %16021 = load float, float* %16020, align 4
  %16022 = insertelement <4 x float> zeroinitializer, float %16021, i32 0
  %16023 = insertelement <4 x float> %16022, float 1.000000e+00, i32 1
  %16024 = insertelement <4 x float> %16023, float 1.000000e+00, i32 2
  %16025 = insertelement <4 x float> %16024, float 1.000000e+00, i32 3
  %16026 = getelementptr inbounds float, float* %1, i64 6
  %16027 = load float, float* %16026, align 4
  %16028 = insertelement <4 x float> zeroinitializer, float %16027, i32 0
  %16029 = insertelement <4 x float> %16028, float 0.000000e+00, i32 1
  %16030 = insertelement <4 x float> %16029, float 0.000000e+00, i32 2
  %16031 = insertelement <4 x float> %16030, float 0.000000e+00, i32 3
  %16032 = call <4 x float> @llvm.fma.f32.549(<4 x float> %16025, <4 x float> %16031, <4 x float> %16017)
  %16033 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16034 = getelementptr inbounds i8, i8* %16033, i64 8
  %16035 = bitcast i8* %16034 to float*
  %16036 = load float, float* %16035, align 4
  %16037 = insertelement <4 x float> zeroinitializer, float %16036, i32 0
  %16038 = insertelement <4 x float> %16037, float 0.000000e+00, i32 1
  %16039 = insertelement <4 x float> %16038, float 0.000000e+00, i32 2
  %16040 = insertelement <4 x float> %16039, float 0.000000e+00, i32 3
  %16041 = getelementptr inbounds float, float* %1, i64 10
  %16042 = load float, float* %16041, align 4
  %16043 = insertelement <4 x float> zeroinitializer, float %16042, i32 0
  %16044 = insertelement <4 x float> %16043, float 0.000000e+00, i32 1
  %16045 = insertelement <4 x float> %16044, float 0.000000e+00, i32 2
  %16046 = insertelement <4 x float> %16045, float 0.000000e+00, i32 3
  %16047 = call <4 x float> @llvm.fma.f32.550(<4 x float> %16040, <4 x float> %16046, <4 x float> %16032)
  %16048 = extractelement <4 x float> %16047, i32 0
  %16049 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16050 = getelementptr inbounds i8, i8* %16049, i64 8
  %16051 = bitcast i8* %16050 to float*
  store float %16048, float* %16051, align 4
  %16052 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16053 = bitcast i8* %16052 to float*
  %16054 = load float, float* %16053, align 4
  %16055 = insertelement <4 x float> zeroinitializer, float %16054, i32 0
  %16056 = insertelement <4 x float> %16055, float 1.000000e+00, i32 1
  %16057 = insertelement <4 x float> %16056, float 1.000000e+00, i32 2
  %16058 = insertelement <4 x float> %16057, float 1.000000e+00, i32 3
  %16059 = getelementptr inbounds float, float* %1, i64 2
  %16060 = load float, float* %16059, align 4
  %16061 = insertelement <4 x float> zeroinitializer, float %16060, i32 0
  %16062 = insertelement <4 x float> %16061, float 0.000000e+00, i32 1
  %16063 = insertelement <4 x float> %16062, float 0.000000e+00, i32 2
  %16064 = insertelement <4 x float> %16063, float 0.000000e+00, i32 3
  %16065 = fmul <4 x float> %16058, %16064
  %16066 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16067 = getelementptr inbounds i8, i8* %16066, i64 4
  %16068 = bitcast i8* %16067 to float*
  %16069 = load float, float* %16068, align 4
  %16070 = insertelement <4 x float> zeroinitializer, float %16069, i32 0
  %16071 = insertelement <4 x float> %16070, float 1.000000e+00, i32 1
  %16072 = insertelement <4 x float> %16071, float 1.000000e+00, i32 2
  %16073 = insertelement <4 x float> %16072, float 1.000000e+00, i32 3
  %16074 = getelementptr inbounds float, float* %1, i64 6
  %16075 = load float, float* %16074, align 4
  %16076 = insertelement <4 x float> zeroinitializer, float %16075, i32 0
  %16077 = insertelement <4 x float> %16076, float 0.000000e+00, i32 1
  %16078 = insertelement <4 x float> %16077, float 0.000000e+00, i32 2
  %16079 = insertelement <4 x float> %16078, float 0.000000e+00, i32 3
  %16080 = call <4 x float> @llvm.fma.f32.551(<4 x float> %16073, <4 x float> %16079, <4 x float> %16065)
  %16081 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16082 = getelementptr inbounds i8, i8* %16081, i64 8
  %16083 = bitcast i8* %16082 to float*
  %16084 = load float, float* %16083, align 4
  %16085 = insertelement <4 x float> zeroinitializer, float %16084, i32 0
  %16086 = insertelement <4 x float> %16085, float 1.000000e+00, i32 1
  %16087 = insertelement <4 x float> %16086, float 1.000000e+00, i32 2
  %16088 = insertelement <4 x float> %16087, float 1.000000e+00, i32 3
  %16089 = getelementptr inbounds float, float* %1, i64 10
  %16090 = load float, float* %16089, align 4
  %16091 = insertelement <4 x float> zeroinitializer, float %16090, i32 0
  %16092 = insertelement <4 x float> %16091, float 0.000000e+00, i32 1
  %16093 = insertelement <4 x float> %16092, float 0.000000e+00, i32 2
  %16094 = insertelement <4 x float> %16093, float 0.000000e+00, i32 3
  %16095 = call <4 x float> @llvm.fma.f32.552(<4 x float> %16088, <4 x float> %16094, <4 x float> %16080)
  %16096 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16097 = getelementptr inbounds i8, i8* %16096, i64 12
  %16098 = bitcast i8* %16097 to float*
  %16099 = load float, float* %16098, align 4
  %16100 = insertelement <4 x float> zeroinitializer, float %16099, i32 0
  %16101 = insertelement <4 x float> %16100, float 0.000000e+00, i32 1
  %16102 = insertelement <4 x float> %16101, float 0.000000e+00, i32 2
  %16103 = insertelement <4 x float> %16102, float 0.000000e+00, i32 3
  %16104 = getelementptr inbounds float, float* %1, i64 14
  %16105 = load float, float* %16104, align 4
  %16106 = insertelement <4 x float> zeroinitializer, float %16105, i32 0
  %16107 = insertelement <4 x float> %16106, float 0.000000e+00, i32 1
  %16108 = insertelement <4 x float> %16107, float 0.000000e+00, i32 2
  %16109 = insertelement <4 x float> %16108, float 0.000000e+00, i32 3
  %16110 = call <4 x float> @llvm.fma.f32.553(<4 x float> %16103, <4 x float> %16109, <4 x float> %16095)
  %16111 = extractelement <4 x float> %16110, i32 0
  %16112 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16113 = getelementptr inbounds i8, i8* %16112, i64 8
  %16114 = bitcast i8* %16113 to float*
  store float %16111, float* %16114, align 4
  %16115 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16116 = bitcast i8* %16115 to float*
  %16117 = load float, float* %16116, align 4
  %16118 = insertelement <4 x float> zeroinitializer, float %16117, i32 0
  %16119 = insertelement <4 x float> %16118, float 0.000000e+00, i32 1
  %16120 = insertelement <4 x float> %16119, float 0.000000e+00, i32 2
  %16121 = insertelement <4 x float> %16120, float 0.000000e+00, i32 3
  %16122 = getelementptr inbounds float, float* %1, i64 3
  %16123 = load float, float* %16122, align 4
  %16124 = insertelement <4 x float> zeroinitializer, float %16123, i32 0
  %16125 = insertelement <4 x float> %16124, float 0.000000e+00, i32 1
  %16126 = insertelement <4 x float> %16125, float 0.000000e+00, i32 2
  %16127 = insertelement <4 x float> %16126, float 0.000000e+00, i32 3
  %16128 = call <4 x float> @llvm.fma.f32.554(<4 x float> %16121, <4 x float> %16127, <4 x float> zeroinitializer)
  %16129 = extractelement <4 x float> %16128, i32 0
  %16130 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16131 = getelementptr inbounds i8, i8* %16130, i64 12
  %16132 = bitcast i8* %16131 to float*
  store float %16129, float* %16132, align 4
  %16133 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16134 = bitcast i8* %16133 to float*
  %16135 = load float, float* %16134, align 4
  %16136 = insertelement <4 x float> zeroinitializer, float %16135, i32 0
  %16137 = insertelement <4 x float> %16136, float 1.000000e+00, i32 1
  %16138 = insertelement <4 x float> %16137, float 1.000000e+00, i32 2
  %16139 = insertelement <4 x float> %16138, float 1.000000e+00, i32 3
  %16140 = getelementptr inbounds float, float* %1, i64 3
  %16141 = load float, float* %16140, align 4
  %16142 = insertelement <4 x float> zeroinitializer, float %16141, i32 0
  %16143 = insertelement <4 x float> %16142, float 0.000000e+00, i32 1
  %16144 = insertelement <4 x float> %16143, float 0.000000e+00, i32 2
  %16145 = insertelement <4 x float> %16144, float 0.000000e+00, i32 3
  %16146 = fmul <4 x float> %16139, %16145
  %16147 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16148 = getelementptr inbounds i8, i8* %16147, i64 4
  %16149 = bitcast i8* %16148 to float*
  %16150 = load float, float* %16149, align 4
  %16151 = insertelement <4 x float> zeroinitializer, float %16150, i32 0
  %16152 = insertelement <4 x float> %16151, float 0.000000e+00, i32 1
  %16153 = insertelement <4 x float> %16152, float 0.000000e+00, i32 2
  %16154 = insertelement <4 x float> %16153, float 0.000000e+00, i32 3
  %16155 = getelementptr inbounds float, float* %1, i64 7
  %16156 = load float, float* %16155, align 4
  %16157 = insertelement <4 x float> zeroinitializer, float %16156, i32 0
  %16158 = insertelement <4 x float> %16157, float 0.000000e+00, i32 1
  %16159 = insertelement <4 x float> %16158, float 0.000000e+00, i32 2
  %16160 = insertelement <4 x float> %16159, float 0.000000e+00, i32 3
  %16161 = call <4 x float> @llvm.fma.f32.555(<4 x float> %16154, <4 x float> %16160, <4 x float> %16146)
  %16162 = extractelement <4 x float> %16161, i32 0
  %16163 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16164 = getelementptr inbounds i8, i8* %16163, i64 12
  %16165 = bitcast i8* %16164 to float*
  store float %16162, float* %16165, align 4
  %16166 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16167 = bitcast i8* %16166 to float*
  %16168 = load float, float* %16167, align 4
  %16169 = insertelement <4 x float> zeroinitializer, float %16168, i32 0
  %16170 = insertelement <4 x float> %16169, float 1.000000e+00, i32 1
  %16171 = insertelement <4 x float> %16170, float 1.000000e+00, i32 2
  %16172 = insertelement <4 x float> %16171, float 1.000000e+00, i32 3
  %16173 = getelementptr inbounds float, float* %1, i64 3
  %16174 = load float, float* %16173, align 4
  %16175 = insertelement <4 x float> zeroinitializer, float %16174, i32 0
  %16176 = insertelement <4 x float> %16175, float 0.000000e+00, i32 1
  %16177 = insertelement <4 x float> %16176, float 0.000000e+00, i32 2
  %16178 = insertelement <4 x float> %16177, float 0.000000e+00, i32 3
  %16179 = fmul <4 x float> %16172, %16178
  %16180 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16181 = getelementptr inbounds i8, i8* %16180, i64 4
  %16182 = bitcast i8* %16181 to float*
  %16183 = load float, float* %16182, align 4
  %16184 = insertelement <4 x float> zeroinitializer, float %16183, i32 0
  %16185 = insertelement <4 x float> %16184, float 1.000000e+00, i32 1
  %16186 = insertelement <4 x float> %16185, float 1.000000e+00, i32 2
  %16187 = insertelement <4 x float> %16186, float 1.000000e+00, i32 3
  %16188 = getelementptr inbounds float, float* %1, i64 7
  %16189 = load float, float* %16188, align 4
  %16190 = insertelement <4 x float> zeroinitializer, float %16189, i32 0
  %16191 = insertelement <4 x float> %16190, float 0.000000e+00, i32 1
  %16192 = insertelement <4 x float> %16191, float 0.000000e+00, i32 2
  %16193 = insertelement <4 x float> %16192, float 0.000000e+00, i32 3
  %16194 = call <4 x float> @llvm.fma.f32.556(<4 x float> %16187, <4 x float> %16193, <4 x float> %16179)
  %16195 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16196 = getelementptr inbounds i8, i8* %16195, i64 8
  %16197 = bitcast i8* %16196 to float*
  %16198 = load float, float* %16197, align 4
  %16199 = insertelement <4 x float> zeroinitializer, float %16198, i32 0
  %16200 = insertelement <4 x float> %16199, float 0.000000e+00, i32 1
  %16201 = insertelement <4 x float> %16200, float 0.000000e+00, i32 2
  %16202 = insertelement <4 x float> %16201, float 0.000000e+00, i32 3
  %16203 = getelementptr inbounds float, float* %1, i64 11
  %16204 = load float, float* %16203, align 4
  %16205 = insertelement <4 x float> zeroinitializer, float %16204, i32 0
  %16206 = insertelement <4 x float> %16205, float 0.000000e+00, i32 1
  %16207 = insertelement <4 x float> %16206, float 0.000000e+00, i32 2
  %16208 = insertelement <4 x float> %16207, float 0.000000e+00, i32 3
  %16209 = call <4 x float> @llvm.fma.f32.557(<4 x float> %16202, <4 x float> %16208, <4 x float> %16194)
  %16210 = extractelement <4 x float> %16209, i32 0
  %16211 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16212 = getelementptr inbounds i8, i8* %16211, i64 12
  %16213 = bitcast i8* %16212 to float*
  store float %16210, float* %16213, align 4
  %16214 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16215 = bitcast i8* %16214 to float*
  %16216 = load float, float* %16215, align 4
  %16217 = insertelement <4 x float> zeroinitializer, float %16216, i32 0
  %16218 = insertelement <4 x float> %16217, float 1.000000e+00, i32 1
  %16219 = insertelement <4 x float> %16218, float 1.000000e+00, i32 2
  %16220 = insertelement <4 x float> %16219, float 1.000000e+00, i32 3
  %16221 = getelementptr inbounds float, float* %1, i64 3
  %16222 = load float, float* %16221, align 4
  %16223 = insertelement <4 x float> zeroinitializer, float %16222, i32 0
  %16224 = insertelement <4 x float> %16223, float 0.000000e+00, i32 1
  %16225 = insertelement <4 x float> %16224, float 0.000000e+00, i32 2
  %16226 = insertelement <4 x float> %16225, float 0.000000e+00, i32 3
  %16227 = fmul <4 x float> %16220, %16226
  %16228 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16229 = getelementptr inbounds i8, i8* %16228, i64 4
  %16230 = bitcast i8* %16229 to float*
  %16231 = load float, float* %16230, align 4
  %16232 = insertelement <4 x float> zeroinitializer, float %16231, i32 0
  %16233 = insertelement <4 x float> %16232, float 1.000000e+00, i32 1
  %16234 = insertelement <4 x float> %16233, float 1.000000e+00, i32 2
  %16235 = insertelement <4 x float> %16234, float 1.000000e+00, i32 3
  %16236 = getelementptr inbounds float, float* %1, i64 7
  %16237 = load float, float* %16236, align 4
  %16238 = insertelement <4 x float> zeroinitializer, float %16237, i32 0
  %16239 = insertelement <4 x float> %16238, float 0.000000e+00, i32 1
  %16240 = insertelement <4 x float> %16239, float 0.000000e+00, i32 2
  %16241 = insertelement <4 x float> %16240, float 0.000000e+00, i32 3
  %16242 = call <4 x float> @llvm.fma.f32.558(<4 x float> %16235, <4 x float> %16241, <4 x float> %16227)
  %16243 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16244 = getelementptr inbounds i8, i8* %16243, i64 8
  %16245 = bitcast i8* %16244 to float*
  %16246 = load float, float* %16245, align 4
  %16247 = insertelement <4 x float> zeroinitializer, float %16246, i32 0
  %16248 = insertelement <4 x float> %16247, float 1.000000e+00, i32 1
  %16249 = insertelement <4 x float> %16248, float 1.000000e+00, i32 2
  %16250 = insertelement <4 x float> %16249, float 1.000000e+00, i32 3
  %16251 = getelementptr inbounds float, float* %1, i64 11
  %16252 = load float, float* %16251, align 4
  %16253 = insertelement <4 x float> zeroinitializer, float %16252, i32 0
  %16254 = insertelement <4 x float> %16253, float 0.000000e+00, i32 1
  %16255 = insertelement <4 x float> %16254, float 0.000000e+00, i32 2
  %16256 = insertelement <4 x float> %16255, float 0.000000e+00, i32 3
  %16257 = call <4 x float> @llvm.fma.f32.559(<4 x float> %16250, <4 x float> %16256, <4 x float> %16242)
  %16258 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16259 = getelementptr inbounds i8, i8* %16258, i64 12
  %16260 = bitcast i8* %16259 to float*
  %16261 = load float, float* %16260, align 4
  %16262 = insertelement <4 x float> zeroinitializer, float %16261, i32 0
  %16263 = insertelement <4 x float> %16262, float 0.000000e+00, i32 1
  %16264 = insertelement <4 x float> %16263, float 0.000000e+00, i32 2
  %16265 = insertelement <4 x float> %16264, float 0.000000e+00, i32 3
  %16266 = getelementptr inbounds float, float* %1, i64 15
  %16267 = load float, float* %16266, align 4
  %16268 = insertelement <4 x float> zeroinitializer, float %16267, i32 0
  %16269 = insertelement <4 x float> %16268, float 0.000000e+00, i32 1
  %16270 = insertelement <4 x float> %16269, float 0.000000e+00, i32 2
  %16271 = insertelement <4 x float> %16270, float 0.000000e+00, i32 3
  %16272 = call <4 x float> @llvm.fma.f32.560(<4 x float> %16265, <4 x float> %16271, <4 x float> %16257)
  %16273 = extractelement <4 x float> %16272, i32 0
  %16274 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16275 = getelementptr inbounds i8, i8* %16274, i64 12
  %16276 = bitcast i8* %16275 to float*
  store float %16273, float* %16276, align 4
  %16277 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16278 = getelementptr inbounds i8, i8* %16277, i64 16
  %16279 = bitcast i8* %16278 to float*
  %16280 = load float, float* %16279, align 4
  %16281 = insertelement <4 x float> zeroinitializer, float %16280, i32 0
  %16282 = insertelement <4 x float> %16281, float 0.000000e+00, i32 1
  %16283 = insertelement <4 x float> %16282, float 0.000000e+00, i32 2
  %16284 = insertelement <4 x float> %16283, float 0.000000e+00, i32 3
  %16285 = load float, float* %1, align 4
  %16286 = insertelement <4 x float> zeroinitializer, float %16285, i32 0
  %16287 = insertelement <4 x float> %16286, float 0.000000e+00, i32 1
  %16288 = insertelement <4 x float> %16287, float 0.000000e+00, i32 2
  %16289 = insertelement <4 x float> %16288, float 0.000000e+00, i32 3
  %16290 = call <4 x float> @llvm.fma.f32.561(<4 x float> %16284, <4 x float> %16289, <4 x float> zeroinitializer)
  %16291 = extractelement <4 x float> %16290, i32 0
  %16292 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16293 = getelementptr inbounds i8, i8* %16292, i64 16
  %16294 = bitcast i8* %16293 to float*
  store float %16291, float* %16294, align 4
  %16295 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16296 = getelementptr inbounds i8, i8* %16295, i64 16
  %16297 = bitcast i8* %16296 to float*
  %16298 = load float, float* %16297, align 4
  %16299 = insertelement <4 x float> zeroinitializer, float %16298, i32 0
  %16300 = insertelement <4 x float> %16299, float 1.000000e+00, i32 1
  %16301 = insertelement <4 x float> %16300, float 1.000000e+00, i32 2
  %16302 = insertelement <4 x float> %16301, float 1.000000e+00, i32 3
  %16303 = load float, float* %1, align 4
  %16304 = insertelement <4 x float> zeroinitializer, float %16303, i32 0
  %16305 = insertelement <4 x float> %16304, float 0.000000e+00, i32 1
  %16306 = insertelement <4 x float> %16305, float 0.000000e+00, i32 2
  %16307 = insertelement <4 x float> %16306, float 0.000000e+00, i32 3
  %16308 = fmul <4 x float> %16302, %16307
  %16309 = fadd <4 x float> %16308, zeroinitializer
  %16310 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16311 = getelementptr inbounds i8, i8* %16310, i64 20
  %16312 = bitcast i8* %16311 to float*
  %16313 = load float, float* %16312, align 4
  %16314 = insertelement <4 x float> zeroinitializer, float %16313, i32 0
  %16315 = insertelement <4 x float> %16314, float 0.000000e+00, i32 1
  %16316 = insertelement <4 x float> %16315, float 0.000000e+00, i32 2
  %16317 = insertelement <4 x float> %16316, float 0.000000e+00, i32 3
  %16318 = getelementptr inbounds float, float* %1, i64 4
  %16319 = load float, float* %16318, align 4
  %16320 = insertelement <4 x float> zeroinitializer, float %16319, i32 0
  %16321 = insertelement <4 x float> %16320, float 0.000000e+00, i32 1
  %16322 = insertelement <4 x float> %16321, float 0.000000e+00, i32 2
  %16323 = insertelement <4 x float> %16322, float 0.000000e+00, i32 3
  %16324 = call <4 x float> @llvm.fma.f32.562(<4 x float> %16317, <4 x float> %16323, <4 x float> %16309)
  %16325 = extractelement <4 x float> %16324, i32 0
  %16326 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16327 = getelementptr inbounds i8, i8* %16326, i64 16
  %16328 = bitcast i8* %16327 to float*
  store float %16325, float* %16328, align 4
  %16329 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16330 = getelementptr inbounds i8, i8* %16329, i64 16
  %16331 = bitcast i8* %16330 to float*
  %16332 = load float, float* %16331, align 4
  %16333 = insertelement <4 x float> zeroinitializer, float %16332, i32 0
  %16334 = insertelement <4 x float> %16333, float 1.000000e+00, i32 1
  %16335 = insertelement <4 x float> %16334, float 1.000000e+00, i32 2
  %16336 = insertelement <4 x float> %16335, float 1.000000e+00, i32 3
  %16337 = load float, float* %1, align 4
  %16338 = insertelement <4 x float> zeroinitializer, float %16337, i32 0
  %16339 = insertelement <4 x float> %16338, float 0.000000e+00, i32 1
  %16340 = insertelement <4 x float> %16339, float 0.000000e+00, i32 2
  %16341 = insertelement <4 x float> %16340, float 0.000000e+00, i32 3
  %16342 = fmul <4 x float> %16336, %16341
  %16343 = fadd <4 x float> %16342, zeroinitializer
  %16344 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16345 = getelementptr inbounds i8, i8* %16344, i64 20
  %16346 = bitcast i8* %16345 to float*
  %16347 = load float, float* %16346, align 4
  %16348 = insertelement <4 x float> zeroinitializer, float %16347, i32 0
  %16349 = insertelement <4 x float> %16348, float 1.000000e+00, i32 1
  %16350 = insertelement <4 x float> %16349, float 1.000000e+00, i32 2
  %16351 = insertelement <4 x float> %16350, float 1.000000e+00, i32 3
  %16352 = getelementptr inbounds float, float* %1, i64 4
  %16353 = load float, float* %16352, align 4
  %16354 = insertelement <4 x float> zeroinitializer, float %16353, i32 0
  %16355 = insertelement <4 x float> %16354, float 0.000000e+00, i32 1
  %16356 = insertelement <4 x float> %16355, float 0.000000e+00, i32 2
  %16357 = insertelement <4 x float> %16356, float 0.000000e+00, i32 3
  %16358 = call <4 x float> @llvm.fma.f32.563(<4 x float> %16351, <4 x float> %16357, <4 x float> %16343)
  %16359 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16360 = getelementptr inbounds i8, i8* %16359, i64 24
  %16361 = bitcast i8* %16360 to float*
  %16362 = load float, float* %16361, align 4
  %16363 = insertelement <4 x float> zeroinitializer, float %16362, i32 0
  %16364 = insertelement <4 x float> %16363, float 0.000000e+00, i32 1
  %16365 = insertelement <4 x float> %16364, float 0.000000e+00, i32 2
  %16366 = insertelement <4 x float> %16365, float 0.000000e+00, i32 3
  %16367 = getelementptr inbounds float, float* %1, i64 8
  %16368 = load float, float* %16367, align 4
  %16369 = insertelement <4 x float> zeroinitializer, float %16368, i32 0
  %16370 = insertelement <4 x float> %16369, float 0.000000e+00, i32 1
  %16371 = insertelement <4 x float> %16370, float 0.000000e+00, i32 2
  %16372 = insertelement <4 x float> %16371, float 0.000000e+00, i32 3
  %16373 = call <4 x float> @llvm.fma.f32.564(<4 x float> %16366, <4 x float> %16372, <4 x float> %16358)
  %16374 = extractelement <4 x float> %16373, i32 0
  %16375 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16376 = getelementptr inbounds i8, i8* %16375, i64 16
  %16377 = bitcast i8* %16376 to float*
  store float %16374, float* %16377, align 4
  %16378 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16379 = getelementptr inbounds i8, i8* %16378, i64 16
  %16380 = bitcast i8* %16379 to float*
  %16381 = load float, float* %16380, align 4
  %16382 = insertelement <4 x float> zeroinitializer, float %16381, i32 0
  %16383 = insertelement <4 x float> %16382, float 1.000000e+00, i32 1
  %16384 = insertelement <4 x float> %16383, float 1.000000e+00, i32 2
  %16385 = insertelement <4 x float> %16384, float 1.000000e+00, i32 3
  %16386 = load float, float* %1, align 4
  %16387 = insertelement <4 x float> zeroinitializer, float %16386, i32 0
  %16388 = insertelement <4 x float> %16387, float 0.000000e+00, i32 1
  %16389 = insertelement <4 x float> %16388, float 0.000000e+00, i32 2
  %16390 = insertelement <4 x float> %16389, float 0.000000e+00, i32 3
  %16391 = fmul <4 x float> %16385, %16390
  %16392 = fadd <4 x float> %16391, zeroinitializer
  %16393 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16394 = getelementptr inbounds i8, i8* %16393, i64 20
  %16395 = bitcast i8* %16394 to float*
  %16396 = load float, float* %16395, align 4
  %16397 = insertelement <4 x float> zeroinitializer, float %16396, i32 0
  %16398 = insertelement <4 x float> %16397, float 1.000000e+00, i32 1
  %16399 = insertelement <4 x float> %16398, float 1.000000e+00, i32 2
  %16400 = insertelement <4 x float> %16399, float 1.000000e+00, i32 3
  %16401 = getelementptr inbounds float, float* %1, i64 4
  %16402 = load float, float* %16401, align 4
  %16403 = insertelement <4 x float> zeroinitializer, float %16402, i32 0
  %16404 = insertelement <4 x float> %16403, float 0.000000e+00, i32 1
  %16405 = insertelement <4 x float> %16404, float 0.000000e+00, i32 2
  %16406 = insertelement <4 x float> %16405, float 0.000000e+00, i32 3
  %16407 = call <4 x float> @llvm.fma.f32.565(<4 x float> %16400, <4 x float> %16406, <4 x float> %16392)
  %16408 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16409 = getelementptr inbounds i8, i8* %16408, i64 24
  %16410 = bitcast i8* %16409 to float*
  %16411 = load float, float* %16410, align 4
  %16412 = insertelement <4 x float> zeroinitializer, float %16411, i32 0
  %16413 = insertelement <4 x float> %16412, float 1.000000e+00, i32 1
  %16414 = insertelement <4 x float> %16413, float 1.000000e+00, i32 2
  %16415 = insertelement <4 x float> %16414, float 1.000000e+00, i32 3
  %16416 = getelementptr inbounds float, float* %1, i64 8
  %16417 = load float, float* %16416, align 4
  %16418 = insertelement <4 x float> zeroinitializer, float %16417, i32 0
  %16419 = insertelement <4 x float> %16418, float 0.000000e+00, i32 1
  %16420 = insertelement <4 x float> %16419, float 0.000000e+00, i32 2
  %16421 = insertelement <4 x float> %16420, float 0.000000e+00, i32 3
  %16422 = call <4 x float> @llvm.fma.f32.566(<4 x float> %16415, <4 x float> %16421, <4 x float> %16407)
  %16423 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16424 = getelementptr inbounds i8, i8* %16423, i64 28
  %16425 = bitcast i8* %16424 to float*
  %16426 = load float, float* %16425, align 4
  %16427 = insertelement <4 x float> zeroinitializer, float %16426, i32 0
  %16428 = insertelement <4 x float> %16427, float 0.000000e+00, i32 1
  %16429 = insertelement <4 x float> %16428, float 0.000000e+00, i32 2
  %16430 = insertelement <4 x float> %16429, float 0.000000e+00, i32 3
  %16431 = getelementptr inbounds float, float* %1, i64 12
  %16432 = load float, float* %16431, align 4
  %16433 = insertelement <4 x float> zeroinitializer, float %16432, i32 0
  %16434 = insertelement <4 x float> %16433, float 0.000000e+00, i32 1
  %16435 = insertelement <4 x float> %16434, float 0.000000e+00, i32 2
  %16436 = insertelement <4 x float> %16435, float 0.000000e+00, i32 3
  %16437 = call <4 x float> @llvm.fma.f32.567(<4 x float> %16430, <4 x float> %16436, <4 x float> %16422)
  %16438 = extractelement <4 x float> %16437, i32 0
  %16439 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16440 = getelementptr inbounds i8, i8* %16439, i64 16
  %16441 = bitcast i8* %16440 to float*
  store float %16438, float* %16441, align 4
  %16442 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16443 = getelementptr inbounds i8, i8* %16442, i64 16
  %16444 = bitcast i8* %16443 to float*
  %16445 = load float, float* %16444, align 4
  %16446 = insertelement <4 x float> zeroinitializer, float %16445, i32 0
  %16447 = insertelement <4 x float> %16446, float 0.000000e+00, i32 1
  %16448 = insertelement <4 x float> %16447, float 0.000000e+00, i32 2
  %16449 = insertelement <4 x float> %16448, float 0.000000e+00, i32 3
  %16450 = getelementptr inbounds float, float* %1, i64 1
  %16451 = load float, float* %16450, align 4
  %16452 = insertelement <4 x float> zeroinitializer, float %16451, i32 0
  %16453 = insertelement <4 x float> %16452, float 0.000000e+00, i32 1
  %16454 = insertelement <4 x float> %16453, float 0.000000e+00, i32 2
  %16455 = insertelement <4 x float> %16454, float 0.000000e+00, i32 3
  %16456 = call <4 x float> @llvm.fma.f32.568(<4 x float> %16449, <4 x float> %16455, <4 x float> zeroinitializer)
  %16457 = extractelement <4 x float> %16456, i32 0
  %16458 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16459 = getelementptr inbounds i8, i8* %16458, i64 20
  %16460 = bitcast i8* %16459 to float*
  store float %16457, float* %16460, align 4
  %16461 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16462 = getelementptr inbounds i8, i8* %16461, i64 16
  %16463 = bitcast i8* %16462 to float*
  %16464 = load float, float* %16463, align 4
  %16465 = insertelement <4 x float> zeroinitializer, float %16464, i32 0
  %16466 = insertelement <4 x float> %16465, float 1.000000e+00, i32 1
  %16467 = insertelement <4 x float> %16466, float 1.000000e+00, i32 2
  %16468 = insertelement <4 x float> %16467, float 1.000000e+00, i32 3
  %16469 = getelementptr inbounds float, float* %1, i64 1
  %16470 = load float, float* %16469, align 4
  %16471 = insertelement <4 x float> zeroinitializer, float %16470, i32 0
  %16472 = insertelement <4 x float> %16471, float 0.000000e+00, i32 1
  %16473 = insertelement <4 x float> %16472, float 0.000000e+00, i32 2
  %16474 = insertelement <4 x float> %16473, float 0.000000e+00, i32 3
  %16475 = fmul <4 x float> %16468, %16474
  %16476 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16477 = getelementptr inbounds i8, i8* %16476, i64 20
  %16478 = bitcast i8* %16477 to float*
  %16479 = load float, float* %16478, align 4
  %16480 = insertelement <4 x float> zeroinitializer, float %16479, i32 0
  %16481 = insertelement <4 x float> %16480, float 0.000000e+00, i32 1
  %16482 = insertelement <4 x float> %16481, float 0.000000e+00, i32 2
  %16483 = insertelement <4 x float> %16482, float 0.000000e+00, i32 3
  %16484 = getelementptr inbounds float, float* %1, i64 5
  %16485 = load float, float* %16484, align 4
  %16486 = insertelement <4 x float> zeroinitializer, float %16485, i32 0
  %16487 = insertelement <4 x float> %16486, float 0.000000e+00, i32 1
  %16488 = insertelement <4 x float> %16487, float 0.000000e+00, i32 2
  %16489 = insertelement <4 x float> %16488, float 0.000000e+00, i32 3
  %16490 = call <4 x float> @llvm.fma.f32.569(<4 x float> %16483, <4 x float> %16489, <4 x float> %16475)
  %16491 = extractelement <4 x float> %16490, i32 0
  %16492 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16493 = getelementptr inbounds i8, i8* %16492, i64 20
  %16494 = bitcast i8* %16493 to float*
  store float %16491, float* %16494, align 4
  %16495 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16496 = getelementptr inbounds i8, i8* %16495, i64 16
  %16497 = bitcast i8* %16496 to float*
  %16498 = load float, float* %16497, align 4
  %16499 = insertelement <4 x float> zeroinitializer, float %16498, i32 0
  %16500 = insertelement <4 x float> %16499, float 1.000000e+00, i32 1
  %16501 = insertelement <4 x float> %16500, float 1.000000e+00, i32 2
  %16502 = insertelement <4 x float> %16501, float 1.000000e+00, i32 3
  %16503 = getelementptr inbounds float, float* %1, i64 1
  %16504 = load float, float* %16503, align 4
  %16505 = insertelement <4 x float> zeroinitializer, float %16504, i32 0
  %16506 = insertelement <4 x float> %16505, float 0.000000e+00, i32 1
  %16507 = insertelement <4 x float> %16506, float 0.000000e+00, i32 2
  %16508 = insertelement <4 x float> %16507, float 0.000000e+00, i32 3
  %16509 = fmul <4 x float> %16502, %16508
  %16510 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16511 = getelementptr inbounds i8, i8* %16510, i64 20
  %16512 = bitcast i8* %16511 to float*
  %16513 = load float, float* %16512, align 4
  %16514 = insertelement <4 x float> zeroinitializer, float %16513, i32 0
  %16515 = insertelement <4 x float> %16514, float 1.000000e+00, i32 1
  %16516 = insertelement <4 x float> %16515, float 1.000000e+00, i32 2
  %16517 = insertelement <4 x float> %16516, float 1.000000e+00, i32 3
  %16518 = getelementptr inbounds float, float* %1, i64 5
  %16519 = load float, float* %16518, align 4
  %16520 = insertelement <4 x float> zeroinitializer, float %16519, i32 0
  %16521 = insertelement <4 x float> %16520, float 0.000000e+00, i32 1
  %16522 = insertelement <4 x float> %16521, float 0.000000e+00, i32 2
  %16523 = insertelement <4 x float> %16522, float 0.000000e+00, i32 3
  %16524 = call <4 x float> @llvm.fma.f32.570(<4 x float> %16517, <4 x float> %16523, <4 x float> %16509)
  %16525 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16526 = getelementptr inbounds i8, i8* %16525, i64 24
  %16527 = bitcast i8* %16526 to float*
  %16528 = load float, float* %16527, align 4
  %16529 = insertelement <4 x float> zeroinitializer, float %16528, i32 0
  %16530 = insertelement <4 x float> %16529, float 0.000000e+00, i32 1
  %16531 = insertelement <4 x float> %16530, float 0.000000e+00, i32 2
  %16532 = insertelement <4 x float> %16531, float 0.000000e+00, i32 3
  %16533 = getelementptr inbounds float, float* %1, i64 9
  %16534 = load float, float* %16533, align 4
  %16535 = insertelement <4 x float> zeroinitializer, float %16534, i32 0
  %16536 = insertelement <4 x float> %16535, float 0.000000e+00, i32 1
  %16537 = insertelement <4 x float> %16536, float 0.000000e+00, i32 2
  %16538 = insertelement <4 x float> %16537, float 0.000000e+00, i32 3
  %16539 = call <4 x float> @llvm.fma.f32.571(<4 x float> %16532, <4 x float> %16538, <4 x float> %16524)
  %16540 = extractelement <4 x float> %16539, i32 0
  %16541 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16542 = getelementptr inbounds i8, i8* %16541, i64 20
  %16543 = bitcast i8* %16542 to float*
  store float %16540, float* %16543, align 4
  %16544 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16545 = getelementptr inbounds i8, i8* %16544, i64 16
  %16546 = bitcast i8* %16545 to float*
  %16547 = load float, float* %16546, align 4
  %16548 = insertelement <4 x float> zeroinitializer, float %16547, i32 0
  %16549 = insertelement <4 x float> %16548, float 1.000000e+00, i32 1
  %16550 = insertelement <4 x float> %16549, float 1.000000e+00, i32 2
  %16551 = insertelement <4 x float> %16550, float 1.000000e+00, i32 3
  %16552 = getelementptr inbounds float, float* %1, i64 1
  %16553 = load float, float* %16552, align 4
  %16554 = insertelement <4 x float> zeroinitializer, float %16553, i32 0
  %16555 = insertelement <4 x float> %16554, float 0.000000e+00, i32 1
  %16556 = insertelement <4 x float> %16555, float 0.000000e+00, i32 2
  %16557 = insertelement <4 x float> %16556, float 0.000000e+00, i32 3
  %16558 = fmul <4 x float> %16551, %16557
  %16559 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16560 = getelementptr inbounds i8, i8* %16559, i64 20
  %16561 = bitcast i8* %16560 to float*
  %16562 = load float, float* %16561, align 4
  %16563 = insertelement <4 x float> zeroinitializer, float %16562, i32 0
  %16564 = insertelement <4 x float> %16563, float 1.000000e+00, i32 1
  %16565 = insertelement <4 x float> %16564, float 1.000000e+00, i32 2
  %16566 = insertelement <4 x float> %16565, float 1.000000e+00, i32 3
  %16567 = getelementptr inbounds float, float* %1, i64 5
  %16568 = load float, float* %16567, align 4
  %16569 = insertelement <4 x float> zeroinitializer, float %16568, i32 0
  %16570 = insertelement <4 x float> %16569, float 0.000000e+00, i32 1
  %16571 = insertelement <4 x float> %16570, float 0.000000e+00, i32 2
  %16572 = insertelement <4 x float> %16571, float 0.000000e+00, i32 3
  %16573 = call <4 x float> @llvm.fma.f32.572(<4 x float> %16566, <4 x float> %16572, <4 x float> %16558)
  %16574 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16575 = getelementptr inbounds i8, i8* %16574, i64 24
  %16576 = bitcast i8* %16575 to float*
  %16577 = load float, float* %16576, align 4
  %16578 = insertelement <4 x float> zeroinitializer, float %16577, i32 0
  %16579 = insertelement <4 x float> %16578, float 1.000000e+00, i32 1
  %16580 = insertelement <4 x float> %16579, float 1.000000e+00, i32 2
  %16581 = insertelement <4 x float> %16580, float 1.000000e+00, i32 3
  %16582 = getelementptr inbounds float, float* %1, i64 9
  %16583 = load float, float* %16582, align 4
  %16584 = insertelement <4 x float> zeroinitializer, float %16583, i32 0
  %16585 = insertelement <4 x float> %16584, float 0.000000e+00, i32 1
  %16586 = insertelement <4 x float> %16585, float 0.000000e+00, i32 2
  %16587 = insertelement <4 x float> %16586, float 0.000000e+00, i32 3
  %16588 = call <4 x float> @llvm.fma.f32.573(<4 x float> %16581, <4 x float> %16587, <4 x float> %16573)
  %16589 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16590 = getelementptr inbounds i8, i8* %16589, i64 28
  %16591 = bitcast i8* %16590 to float*
  %16592 = load float, float* %16591, align 4
  %16593 = insertelement <4 x float> zeroinitializer, float %16592, i32 0
  %16594 = insertelement <4 x float> %16593, float 0.000000e+00, i32 1
  %16595 = insertelement <4 x float> %16594, float 0.000000e+00, i32 2
  %16596 = insertelement <4 x float> %16595, float 0.000000e+00, i32 3
  %16597 = getelementptr inbounds float, float* %1, i64 13
  %16598 = load float, float* %16597, align 4
  %16599 = insertelement <4 x float> zeroinitializer, float %16598, i32 0
  %16600 = insertelement <4 x float> %16599, float 0.000000e+00, i32 1
  %16601 = insertelement <4 x float> %16600, float 0.000000e+00, i32 2
  %16602 = insertelement <4 x float> %16601, float 0.000000e+00, i32 3
  %16603 = call <4 x float> @llvm.fma.f32.574(<4 x float> %16596, <4 x float> %16602, <4 x float> %16588)
  %16604 = extractelement <4 x float> %16603, i32 0
  %16605 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16606 = getelementptr inbounds i8, i8* %16605, i64 20
  %16607 = bitcast i8* %16606 to float*
  store float %16604, float* %16607, align 4
  %16608 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16609 = getelementptr inbounds i8, i8* %16608, i64 16
  %16610 = bitcast i8* %16609 to float*
  %16611 = load float, float* %16610, align 4
  %16612 = insertelement <4 x float> zeroinitializer, float %16611, i32 0
  %16613 = insertelement <4 x float> %16612, float 0.000000e+00, i32 1
  %16614 = insertelement <4 x float> %16613, float 0.000000e+00, i32 2
  %16615 = insertelement <4 x float> %16614, float 0.000000e+00, i32 3
  %16616 = getelementptr inbounds float, float* %1, i64 2
  %16617 = load float, float* %16616, align 4
  %16618 = insertelement <4 x float> zeroinitializer, float %16617, i32 0
  %16619 = insertelement <4 x float> %16618, float 0.000000e+00, i32 1
  %16620 = insertelement <4 x float> %16619, float 0.000000e+00, i32 2
  %16621 = insertelement <4 x float> %16620, float 0.000000e+00, i32 3
  %16622 = call <4 x float> @llvm.fma.f32.575(<4 x float> %16615, <4 x float> %16621, <4 x float> zeroinitializer)
  %16623 = extractelement <4 x float> %16622, i32 0
  %16624 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16625 = getelementptr inbounds i8, i8* %16624, i64 24
  %16626 = bitcast i8* %16625 to float*
  store float %16623, float* %16626, align 4
  %16627 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16628 = getelementptr inbounds i8, i8* %16627, i64 16
  %16629 = bitcast i8* %16628 to float*
  %16630 = load float, float* %16629, align 4
  %16631 = insertelement <4 x float> zeroinitializer, float %16630, i32 0
  %16632 = insertelement <4 x float> %16631, float 1.000000e+00, i32 1
  %16633 = insertelement <4 x float> %16632, float 1.000000e+00, i32 2
  %16634 = insertelement <4 x float> %16633, float 1.000000e+00, i32 3
  %16635 = getelementptr inbounds float, float* %1, i64 2
  %16636 = load float, float* %16635, align 4
  %16637 = insertelement <4 x float> zeroinitializer, float %16636, i32 0
  %16638 = insertelement <4 x float> %16637, float 0.000000e+00, i32 1
  %16639 = insertelement <4 x float> %16638, float 0.000000e+00, i32 2
  %16640 = insertelement <4 x float> %16639, float 0.000000e+00, i32 3
  %16641 = fmul <4 x float> %16634, %16640
  %16642 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16643 = getelementptr inbounds i8, i8* %16642, i64 20
  %16644 = bitcast i8* %16643 to float*
  %16645 = load float, float* %16644, align 4
  %16646 = insertelement <4 x float> zeroinitializer, float %16645, i32 0
  %16647 = insertelement <4 x float> %16646, float 0.000000e+00, i32 1
  %16648 = insertelement <4 x float> %16647, float 0.000000e+00, i32 2
  %16649 = insertelement <4 x float> %16648, float 0.000000e+00, i32 3
  %16650 = getelementptr inbounds float, float* %1, i64 6
  %16651 = load float, float* %16650, align 4
  %16652 = insertelement <4 x float> zeroinitializer, float %16651, i32 0
  %16653 = insertelement <4 x float> %16652, float 0.000000e+00, i32 1
  %16654 = insertelement <4 x float> %16653, float 0.000000e+00, i32 2
  %16655 = insertelement <4 x float> %16654, float 0.000000e+00, i32 3
  %16656 = call <4 x float> @llvm.fma.f32.576(<4 x float> %16649, <4 x float> %16655, <4 x float> %16641)
  %16657 = extractelement <4 x float> %16656, i32 0
  %16658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16659 = getelementptr inbounds i8, i8* %16658, i64 24
  %16660 = bitcast i8* %16659 to float*
  store float %16657, float* %16660, align 4
  %16661 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16662 = getelementptr inbounds i8, i8* %16661, i64 16
  %16663 = bitcast i8* %16662 to float*
  %16664 = load float, float* %16663, align 4
  %16665 = insertelement <4 x float> zeroinitializer, float %16664, i32 0
  %16666 = insertelement <4 x float> %16665, float 1.000000e+00, i32 1
  %16667 = insertelement <4 x float> %16666, float 1.000000e+00, i32 2
  %16668 = insertelement <4 x float> %16667, float 1.000000e+00, i32 3
  %16669 = getelementptr inbounds float, float* %1, i64 2
  %16670 = load float, float* %16669, align 4
  %16671 = insertelement <4 x float> zeroinitializer, float %16670, i32 0
  %16672 = insertelement <4 x float> %16671, float 0.000000e+00, i32 1
  %16673 = insertelement <4 x float> %16672, float 0.000000e+00, i32 2
  %16674 = insertelement <4 x float> %16673, float 0.000000e+00, i32 3
  %16675 = fmul <4 x float> %16668, %16674
  %16676 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16677 = getelementptr inbounds i8, i8* %16676, i64 20
  %16678 = bitcast i8* %16677 to float*
  %16679 = load float, float* %16678, align 4
  %16680 = insertelement <4 x float> zeroinitializer, float %16679, i32 0
  %16681 = insertelement <4 x float> %16680, float 1.000000e+00, i32 1
  %16682 = insertelement <4 x float> %16681, float 1.000000e+00, i32 2
  %16683 = insertelement <4 x float> %16682, float 1.000000e+00, i32 3
  %16684 = getelementptr inbounds float, float* %1, i64 6
  %16685 = load float, float* %16684, align 4
  %16686 = insertelement <4 x float> zeroinitializer, float %16685, i32 0
  %16687 = insertelement <4 x float> %16686, float 0.000000e+00, i32 1
  %16688 = insertelement <4 x float> %16687, float 0.000000e+00, i32 2
  %16689 = insertelement <4 x float> %16688, float 0.000000e+00, i32 3
  %16690 = call <4 x float> @llvm.fma.f32.577(<4 x float> %16683, <4 x float> %16689, <4 x float> %16675)
  %16691 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16692 = getelementptr inbounds i8, i8* %16691, i64 24
  %16693 = bitcast i8* %16692 to float*
  %16694 = load float, float* %16693, align 4
  %16695 = insertelement <4 x float> zeroinitializer, float %16694, i32 0
  %16696 = insertelement <4 x float> %16695, float 0.000000e+00, i32 1
  %16697 = insertelement <4 x float> %16696, float 0.000000e+00, i32 2
  %16698 = insertelement <4 x float> %16697, float 0.000000e+00, i32 3
  %16699 = getelementptr inbounds float, float* %1, i64 10
  %16700 = load float, float* %16699, align 4
  %16701 = insertelement <4 x float> zeroinitializer, float %16700, i32 0
  %16702 = insertelement <4 x float> %16701, float 0.000000e+00, i32 1
  %16703 = insertelement <4 x float> %16702, float 0.000000e+00, i32 2
  %16704 = insertelement <4 x float> %16703, float 0.000000e+00, i32 3
  %16705 = call <4 x float> @llvm.fma.f32.578(<4 x float> %16698, <4 x float> %16704, <4 x float> %16690)
  %16706 = extractelement <4 x float> %16705, i32 0
  %16707 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16708 = getelementptr inbounds i8, i8* %16707, i64 24
  %16709 = bitcast i8* %16708 to float*
  store float %16706, float* %16709, align 4
  %16710 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16711 = getelementptr inbounds i8, i8* %16710, i64 16
  %16712 = bitcast i8* %16711 to float*
  %16713 = load float, float* %16712, align 4
  %16714 = insertelement <4 x float> zeroinitializer, float %16713, i32 0
  %16715 = insertelement <4 x float> %16714, float 1.000000e+00, i32 1
  %16716 = insertelement <4 x float> %16715, float 1.000000e+00, i32 2
  %16717 = insertelement <4 x float> %16716, float 1.000000e+00, i32 3
  %16718 = getelementptr inbounds float, float* %1, i64 2
  %16719 = load float, float* %16718, align 4
  %16720 = insertelement <4 x float> zeroinitializer, float %16719, i32 0
  %16721 = insertelement <4 x float> %16720, float 0.000000e+00, i32 1
  %16722 = insertelement <4 x float> %16721, float 0.000000e+00, i32 2
  %16723 = insertelement <4 x float> %16722, float 0.000000e+00, i32 3
  %16724 = fmul <4 x float> %16717, %16723
  %16725 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16726 = getelementptr inbounds i8, i8* %16725, i64 20
  %16727 = bitcast i8* %16726 to float*
  %16728 = load float, float* %16727, align 4
  %16729 = insertelement <4 x float> zeroinitializer, float %16728, i32 0
  %16730 = insertelement <4 x float> %16729, float 1.000000e+00, i32 1
  %16731 = insertelement <4 x float> %16730, float 1.000000e+00, i32 2
  %16732 = insertelement <4 x float> %16731, float 1.000000e+00, i32 3
  %16733 = getelementptr inbounds float, float* %1, i64 6
  %16734 = load float, float* %16733, align 4
  %16735 = insertelement <4 x float> zeroinitializer, float %16734, i32 0
  %16736 = insertelement <4 x float> %16735, float 0.000000e+00, i32 1
  %16737 = insertelement <4 x float> %16736, float 0.000000e+00, i32 2
  %16738 = insertelement <4 x float> %16737, float 0.000000e+00, i32 3
  %16739 = call <4 x float> @llvm.fma.f32.579(<4 x float> %16732, <4 x float> %16738, <4 x float> %16724)
  %16740 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16741 = getelementptr inbounds i8, i8* %16740, i64 24
  %16742 = bitcast i8* %16741 to float*
  %16743 = load float, float* %16742, align 4
  %16744 = insertelement <4 x float> zeroinitializer, float %16743, i32 0
  %16745 = insertelement <4 x float> %16744, float 1.000000e+00, i32 1
  %16746 = insertelement <4 x float> %16745, float 1.000000e+00, i32 2
  %16747 = insertelement <4 x float> %16746, float 1.000000e+00, i32 3
  %16748 = getelementptr inbounds float, float* %1, i64 10
  %16749 = load float, float* %16748, align 4
  %16750 = insertelement <4 x float> zeroinitializer, float %16749, i32 0
  %16751 = insertelement <4 x float> %16750, float 0.000000e+00, i32 1
  %16752 = insertelement <4 x float> %16751, float 0.000000e+00, i32 2
  %16753 = insertelement <4 x float> %16752, float 0.000000e+00, i32 3
  %16754 = call <4 x float> @llvm.fma.f32.580(<4 x float> %16747, <4 x float> %16753, <4 x float> %16739)
  %16755 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16756 = getelementptr inbounds i8, i8* %16755, i64 28
  %16757 = bitcast i8* %16756 to float*
  %16758 = load float, float* %16757, align 4
  %16759 = insertelement <4 x float> zeroinitializer, float %16758, i32 0
  %16760 = insertelement <4 x float> %16759, float 0.000000e+00, i32 1
  %16761 = insertelement <4 x float> %16760, float 0.000000e+00, i32 2
  %16762 = insertelement <4 x float> %16761, float 0.000000e+00, i32 3
  %16763 = getelementptr inbounds float, float* %1, i64 14
  %16764 = load float, float* %16763, align 4
  %16765 = insertelement <4 x float> zeroinitializer, float %16764, i32 0
  %16766 = insertelement <4 x float> %16765, float 0.000000e+00, i32 1
  %16767 = insertelement <4 x float> %16766, float 0.000000e+00, i32 2
  %16768 = insertelement <4 x float> %16767, float 0.000000e+00, i32 3
  %16769 = call <4 x float> @llvm.fma.f32.581(<4 x float> %16762, <4 x float> %16768, <4 x float> %16754)
  %16770 = extractelement <4 x float> %16769, i32 0
  %16771 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16772 = getelementptr inbounds i8, i8* %16771, i64 24
  %16773 = bitcast i8* %16772 to float*
  store float %16770, float* %16773, align 4
  %16774 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16775 = getelementptr inbounds i8, i8* %16774, i64 16
  %16776 = bitcast i8* %16775 to float*
  %16777 = load float, float* %16776, align 4
  %16778 = insertelement <4 x float> zeroinitializer, float %16777, i32 0
  %16779 = insertelement <4 x float> %16778, float 0.000000e+00, i32 1
  %16780 = insertelement <4 x float> %16779, float 0.000000e+00, i32 2
  %16781 = insertelement <4 x float> %16780, float 0.000000e+00, i32 3
  %16782 = getelementptr inbounds float, float* %1, i64 3
  %16783 = load float, float* %16782, align 4
  %16784 = insertelement <4 x float> zeroinitializer, float %16783, i32 0
  %16785 = insertelement <4 x float> %16784, float 0.000000e+00, i32 1
  %16786 = insertelement <4 x float> %16785, float 0.000000e+00, i32 2
  %16787 = insertelement <4 x float> %16786, float 0.000000e+00, i32 3
  %16788 = call <4 x float> @llvm.fma.f32.582(<4 x float> %16781, <4 x float> %16787, <4 x float> zeroinitializer)
  %16789 = extractelement <4 x float> %16788, i32 0
  %16790 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16791 = getelementptr inbounds i8, i8* %16790, i64 28
  %16792 = bitcast i8* %16791 to float*
  store float %16789, float* %16792, align 4
  %16793 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16794 = getelementptr inbounds i8, i8* %16793, i64 16
  %16795 = bitcast i8* %16794 to float*
  %16796 = load float, float* %16795, align 4
  %16797 = insertelement <4 x float> zeroinitializer, float %16796, i32 0
  %16798 = insertelement <4 x float> %16797, float 1.000000e+00, i32 1
  %16799 = insertelement <4 x float> %16798, float 1.000000e+00, i32 2
  %16800 = insertelement <4 x float> %16799, float 1.000000e+00, i32 3
  %16801 = getelementptr inbounds float, float* %1, i64 3
  %16802 = load float, float* %16801, align 4
  %16803 = insertelement <4 x float> zeroinitializer, float %16802, i32 0
  %16804 = insertelement <4 x float> %16803, float 0.000000e+00, i32 1
  %16805 = insertelement <4 x float> %16804, float 0.000000e+00, i32 2
  %16806 = insertelement <4 x float> %16805, float 0.000000e+00, i32 3
  %16807 = fmul <4 x float> %16800, %16806
  %16808 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16809 = getelementptr inbounds i8, i8* %16808, i64 20
  %16810 = bitcast i8* %16809 to float*
  %16811 = load float, float* %16810, align 4
  %16812 = insertelement <4 x float> zeroinitializer, float %16811, i32 0
  %16813 = insertelement <4 x float> %16812, float 0.000000e+00, i32 1
  %16814 = insertelement <4 x float> %16813, float 0.000000e+00, i32 2
  %16815 = insertelement <4 x float> %16814, float 0.000000e+00, i32 3
  %16816 = getelementptr inbounds float, float* %1, i64 7
  %16817 = load float, float* %16816, align 4
  %16818 = insertelement <4 x float> zeroinitializer, float %16817, i32 0
  %16819 = insertelement <4 x float> %16818, float 0.000000e+00, i32 1
  %16820 = insertelement <4 x float> %16819, float 0.000000e+00, i32 2
  %16821 = insertelement <4 x float> %16820, float 0.000000e+00, i32 3
  %16822 = call <4 x float> @llvm.fma.f32.583(<4 x float> %16815, <4 x float> %16821, <4 x float> %16807)
  %16823 = extractelement <4 x float> %16822, i32 0
  %16824 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16825 = getelementptr inbounds i8, i8* %16824, i64 28
  %16826 = bitcast i8* %16825 to float*
  store float %16823, float* %16826, align 4
  %16827 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16828 = getelementptr inbounds i8, i8* %16827, i64 16
  %16829 = bitcast i8* %16828 to float*
  %16830 = load float, float* %16829, align 4
  %16831 = insertelement <4 x float> zeroinitializer, float %16830, i32 0
  %16832 = insertelement <4 x float> %16831, float 1.000000e+00, i32 1
  %16833 = insertelement <4 x float> %16832, float 1.000000e+00, i32 2
  %16834 = insertelement <4 x float> %16833, float 1.000000e+00, i32 3
  %16835 = getelementptr inbounds float, float* %1, i64 3
  %16836 = load float, float* %16835, align 4
  %16837 = insertelement <4 x float> zeroinitializer, float %16836, i32 0
  %16838 = insertelement <4 x float> %16837, float 0.000000e+00, i32 1
  %16839 = insertelement <4 x float> %16838, float 0.000000e+00, i32 2
  %16840 = insertelement <4 x float> %16839, float 0.000000e+00, i32 3
  %16841 = fmul <4 x float> %16834, %16840
  %16842 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16843 = getelementptr inbounds i8, i8* %16842, i64 20
  %16844 = bitcast i8* %16843 to float*
  %16845 = load float, float* %16844, align 4
  %16846 = insertelement <4 x float> zeroinitializer, float %16845, i32 0
  %16847 = insertelement <4 x float> %16846, float 1.000000e+00, i32 1
  %16848 = insertelement <4 x float> %16847, float 1.000000e+00, i32 2
  %16849 = insertelement <4 x float> %16848, float 1.000000e+00, i32 3
  %16850 = getelementptr inbounds float, float* %1, i64 7
  %16851 = load float, float* %16850, align 4
  %16852 = insertelement <4 x float> zeroinitializer, float %16851, i32 0
  %16853 = insertelement <4 x float> %16852, float 0.000000e+00, i32 1
  %16854 = insertelement <4 x float> %16853, float 0.000000e+00, i32 2
  %16855 = insertelement <4 x float> %16854, float 0.000000e+00, i32 3
  %16856 = call <4 x float> @llvm.fma.f32.584(<4 x float> %16849, <4 x float> %16855, <4 x float> %16841)
  %16857 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16858 = getelementptr inbounds i8, i8* %16857, i64 24
  %16859 = bitcast i8* %16858 to float*
  %16860 = load float, float* %16859, align 4
  %16861 = insertelement <4 x float> zeroinitializer, float %16860, i32 0
  %16862 = insertelement <4 x float> %16861, float 0.000000e+00, i32 1
  %16863 = insertelement <4 x float> %16862, float 0.000000e+00, i32 2
  %16864 = insertelement <4 x float> %16863, float 0.000000e+00, i32 3
  %16865 = getelementptr inbounds float, float* %1, i64 11
  %16866 = load float, float* %16865, align 4
  %16867 = insertelement <4 x float> zeroinitializer, float %16866, i32 0
  %16868 = insertelement <4 x float> %16867, float 0.000000e+00, i32 1
  %16869 = insertelement <4 x float> %16868, float 0.000000e+00, i32 2
  %16870 = insertelement <4 x float> %16869, float 0.000000e+00, i32 3
  %16871 = call <4 x float> @llvm.fma.f32.585(<4 x float> %16864, <4 x float> %16870, <4 x float> %16856)
  %16872 = extractelement <4 x float> %16871, i32 0
  %16873 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16874 = getelementptr inbounds i8, i8* %16873, i64 28
  %16875 = bitcast i8* %16874 to float*
  store float %16872, float* %16875, align 4
  %16876 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16877 = getelementptr inbounds i8, i8* %16876, i64 16
  %16878 = bitcast i8* %16877 to float*
  %16879 = load float, float* %16878, align 4
  %16880 = insertelement <4 x float> zeroinitializer, float %16879, i32 0
  %16881 = insertelement <4 x float> %16880, float 1.000000e+00, i32 1
  %16882 = insertelement <4 x float> %16881, float 1.000000e+00, i32 2
  %16883 = insertelement <4 x float> %16882, float 1.000000e+00, i32 3
  %16884 = getelementptr inbounds float, float* %1, i64 3
  %16885 = load float, float* %16884, align 4
  %16886 = insertelement <4 x float> zeroinitializer, float %16885, i32 0
  %16887 = insertelement <4 x float> %16886, float 0.000000e+00, i32 1
  %16888 = insertelement <4 x float> %16887, float 0.000000e+00, i32 2
  %16889 = insertelement <4 x float> %16888, float 0.000000e+00, i32 3
  %16890 = fmul <4 x float> %16883, %16889
  %16891 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16892 = getelementptr inbounds i8, i8* %16891, i64 20
  %16893 = bitcast i8* %16892 to float*
  %16894 = load float, float* %16893, align 4
  %16895 = insertelement <4 x float> zeroinitializer, float %16894, i32 0
  %16896 = insertelement <4 x float> %16895, float 1.000000e+00, i32 1
  %16897 = insertelement <4 x float> %16896, float 1.000000e+00, i32 2
  %16898 = insertelement <4 x float> %16897, float 1.000000e+00, i32 3
  %16899 = getelementptr inbounds float, float* %1, i64 7
  %16900 = load float, float* %16899, align 4
  %16901 = insertelement <4 x float> zeroinitializer, float %16900, i32 0
  %16902 = insertelement <4 x float> %16901, float 0.000000e+00, i32 1
  %16903 = insertelement <4 x float> %16902, float 0.000000e+00, i32 2
  %16904 = insertelement <4 x float> %16903, float 0.000000e+00, i32 3
  %16905 = call <4 x float> @llvm.fma.f32.586(<4 x float> %16898, <4 x float> %16904, <4 x float> %16890)
  %16906 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16907 = getelementptr inbounds i8, i8* %16906, i64 24
  %16908 = bitcast i8* %16907 to float*
  %16909 = load float, float* %16908, align 4
  %16910 = insertelement <4 x float> zeroinitializer, float %16909, i32 0
  %16911 = insertelement <4 x float> %16910, float 1.000000e+00, i32 1
  %16912 = insertelement <4 x float> %16911, float 1.000000e+00, i32 2
  %16913 = insertelement <4 x float> %16912, float 1.000000e+00, i32 3
  %16914 = getelementptr inbounds float, float* %1, i64 11
  %16915 = load float, float* %16914, align 4
  %16916 = insertelement <4 x float> zeroinitializer, float %16915, i32 0
  %16917 = insertelement <4 x float> %16916, float 0.000000e+00, i32 1
  %16918 = insertelement <4 x float> %16917, float 0.000000e+00, i32 2
  %16919 = insertelement <4 x float> %16918, float 0.000000e+00, i32 3
  %16920 = call <4 x float> @llvm.fma.f32.587(<4 x float> %16913, <4 x float> %16919, <4 x float> %16905)
  %16921 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16922 = getelementptr inbounds i8, i8* %16921, i64 28
  %16923 = bitcast i8* %16922 to float*
  %16924 = load float, float* %16923, align 4
  %16925 = insertelement <4 x float> zeroinitializer, float %16924, i32 0
  %16926 = insertelement <4 x float> %16925, float 0.000000e+00, i32 1
  %16927 = insertelement <4 x float> %16926, float 0.000000e+00, i32 2
  %16928 = insertelement <4 x float> %16927, float 0.000000e+00, i32 3
  %16929 = getelementptr inbounds float, float* %1, i64 15
  %16930 = load float, float* %16929, align 4
  %16931 = insertelement <4 x float> zeroinitializer, float %16930, i32 0
  %16932 = insertelement <4 x float> %16931, float 0.000000e+00, i32 1
  %16933 = insertelement <4 x float> %16932, float 0.000000e+00, i32 2
  %16934 = insertelement <4 x float> %16933, float 0.000000e+00, i32 3
  %16935 = call <4 x float> @llvm.fma.f32.588(<4 x float> %16928, <4 x float> %16934, <4 x float> %16920)
  %16936 = extractelement <4 x float> %16935, i32 0
  %16937 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16938 = getelementptr inbounds i8, i8* %16937, i64 28
  %16939 = bitcast i8* %16938 to float*
  store float %16936, float* %16939, align 4
  %16940 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16941 = getelementptr inbounds i8, i8* %16940, i64 32
  %16942 = bitcast i8* %16941 to float*
  %16943 = load float, float* %16942, align 4
  %16944 = insertelement <4 x float> zeroinitializer, float %16943, i32 0
  %16945 = insertelement <4 x float> %16944, float 0.000000e+00, i32 1
  %16946 = insertelement <4 x float> %16945, float 0.000000e+00, i32 2
  %16947 = insertelement <4 x float> %16946, float 0.000000e+00, i32 3
  %16948 = load float, float* %1, align 4
  %16949 = insertelement <4 x float> zeroinitializer, float %16948, i32 0
  %16950 = insertelement <4 x float> %16949, float 0.000000e+00, i32 1
  %16951 = insertelement <4 x float> %16950, float 0.000000e+00, i32 2
  %16952 = insertelement <4 x float> %16951, float 0.000000e+00, i32 3
  %16953 = call <4 x float> @llvm.fma.f32.589(<4 x float> %16947, <4 x float> %16952, <4 x float> zeroinitializer)
  %16954 = extractelement <4 x float> %16953, i32 0
  %16955 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16956 = getelementptr inbounds i8, i8* %16955, i64 32
  %16957 = bitcast i8* %16956 to float*
  store float %16954, float* %16957, align 4
  %16958 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16959 = getelementptr inbounds i8, i8* %16958, i64 32
  %16960 = bitcast i8* %16959 to float*
  %16961 = load float, float* %16960, align 4
  %16962 = insertelement <4 x float> zeroinitializer, float %16961, i32 0
  %16963 = insertelement <4 x float> %16962, float 1.000000e+00, i32 1
  %16964 = insertelement <4 x float> %16963, float 1.000000e+00, i32 2
  %16965 = insertelement <4 x float> %16964, float 1.000000e+00, i32 3
  %16966 = load float, float* %1, align 4
  %16967 = insertelement <4 x float> zeroinitializer, float %16966, i32 0
  %16968 = insertelement <4 x float> %16967, float 0.000000e+00, i32 1
  %16969 = insertelement <4 x float> %16968, float 0.000000e+00, i32 2
  %16970 = insertelement <4 x float> %16969, float 0.000000e+00, i32 3
  %16971 = fmul <4 x float> %16965, %16970
  %16972 = fadd <4 x float> %16971, zeroinitializer
  %16973 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16974 = getelementptr inbounds i8, i8* %16973, i64 36
  %16975 = bitcast i8* %16974 to float*
  %16976 = load float, float* %16975, align 4
  %16977 = insertelement <4 x float> zeroinitializer, float %16976, i32 0
  %16978 = insertelement <4 x float> %16977, float 0.000000e+00, i32 1
  %16979 = insertelement <4 x float> %16978, float 0.000000e+00, i32 2
  %16980 = insertelement <4 x float> %16979, float 0.000000e+00, i32 3
  %16981 = getelementptr inbounds float, float* %1, i64 4
  %16982 = load float, float* %16981, align 4
  %16983 = insertelement <4 x float> zeroinitializer, float %16982, i32 0
  %16984 = insertelement <4 x float> %16983, float 0.000000e+00, i32 1
  %16985 = insertelement <4 x float> %16984, float 0.000000e+00, i32 2
  %16986 = insertelement <4 x float> %16985, float 0.000000e+00, i32 3
  %16987 = call <4 x float> @llvm.fma.f32.590(<4 x float> %16980, <4 x float> %16986, <4 x float> %16972)
  %16988 = extractelement <4 x float> %16987, i32 0
  %16989 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16990 = getelementptr inbounds i8, i8* %16989, i64 32
  %16991 = bitcast i8* %16990 to float*
  store float %16988, float* %16991, align 4
  %16992 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %16993 = getelementptr inbounds i8, i8* %16992, i64 32
  %16994 = bitcast i8* %16993 to float*
  %16995 = load float, float* %16994, align 4
  %16996 = insertelement <4 x float> zeroinitializer, float %16995, i32 0
  %16997 = insertelement <4 x float> %16996, float 1.000000e+00, i32 1
  %16998 = insertelement <4 x float> %16997, float 1.000000e+00, i32 2
  %16999 = insertelement <4 x float> %16998, float 1.000000e+00, i32 3
  %17000 = load float, float* %1, align 4
  %17001 = insertelement <4 x float> zeroinitializer, float %17000, i32 0
  %17002 = insertelement <4 x float> %17001, float 0.000000e+00, i32 1
  %17003 = insertelement <4 x float> %17002, float 0.000000e+00, i32 2
  %17004 = insertelement <4 x float> %17003, float 0.000000e+00, i32 3
  %17005 = fmul <4 x float> %16999, %17004
  %17006 = fadd <4 x float> %17005, zeroinitializer
  %17007 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17008 = getelementptr inbounds i8, i8* %17007, i64 36
  %17009 = bitcast i8* %17008 to float*
  %17010 = load float, float* %17009, align 4
  %17011 = insertelement <4 x float> zeroinitializer, float %17010, i32 0
  %17012 = insertelement <4 x float> %17011, float 1.000000e+00, i32 1
  %17013 = insertelement <4 x float> %17012, float 1.000000e+00, i32 2
  %17014 = insertelement <4 x float> %17013, float 1.000000e+00, i32 3
  %17015 = getelementptr inbounds float, float* %1, i64 4
  %17016 = load float, float* %17015, align 4
  %17017 = insertelement <4 x float> zeroinitializer, float %17016, i32 0
  %17018 = insertelement <4 x float> %17017, float 0.000000e+00, i32 1
  %17019 = insertelement <4 x float> %17018, float 0.000000e+00, i32 2
  %17020 = insertelement <4 x float> %17019, float 0.000000e+00, i32 3
  %17021 = call <4 x float> @llvm.fma.f32.591(<4 x float> %17014, <4 x float> %17020, <4 x float> %17006)
  %17022 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17023 = getelementptr inbounds i8, i8* %17022, i64 40
  %17024 = bitcast i8* %17023 to float*
  %17025 = load float, float* %17024, align 4
  %17026 = insertelement <4 x float> zeroinitializer, float %17025, i32 0
  %17027 = insertelement <4 x float> %17026, float 0.000000e+00, i32 1
  %17028 = insertelement <4 x float> %17027, float 0.000000e+00, i32 2
  %17029 = insertelement <4 x float> %17028, float 0.000000e+00, i32 3
  %17030 = getelementptr inbounds float, float* %1, i64 8
  %17031 = load float, float* %17030, align 4
  %17032 = insertelement <4 x float> zeroinitializer, float %17031, i32 0
  %17033 = insertelement <4 x float> %17032, float 0.000000e+00, i32 1
  %17034 = insertelement <4 x float> %17033, float 0.000000e+00, i32 2
  %17035 = insertelement <4 x float> %17034, float 0.000000e+00, i32 3
  %17036 = call <4 x float> @llvm.fma.f32.592(<4 x float> %17029, <4 x float> %17035, <4 x float> %17021)
  %17037 = extractelement <4 x float> %17036, i32 0
  %17038 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17039 = getelementptr inbounds i8, i8* %17038, i64 32
  %17040 = bitcast i8* %17039 to float*
  store float %17037, float* %17040, align 4
  %17041 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17042 = getelementptr inbounds i8, i8* %17041, i64 32
  %17043 = bitcast i8* %17042 to float*
  %17044 = load float, float* %17043, align 4
  %17045 = insertelement <4 x float> zeroinitializer, float %17044, i32 0
  %17046 = insertelement <4 x float> %17045, float 1.000000e+00, i32 1
  %17047 = insertelement <4 x float> %17046, float 1.000000e+00, i32 2
  %17048 = insertelement <4 x float> %17047, float 1.000000e+00, i32 3
  %17049 = load float, float* %1, align 4
  %17050 = insertelement <4 x float> zeroinitializer, float %17049, i32 0
  %17051 = insertelement <4 x float> %17050, float 0.000000e+00, i32 1
  %17052 = insertelement <4 x float> %17051, float 0.000000e+00, i32 2
  %17053 = insertelement <4 x float> %17052, float 0.000000e+00, i32 3
  %17054 = fmul <4 x float> %17048, %17053
  %17055 = fadd <4 x float> %17054, zeroinitializer
  %17056 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17057 = getelementptr inbounds i8, i8* %17056, i64 36
  %17058 = bitcast i8* %17057 to float*
  %17059 = load float, float* %17058, align 4
  %17060 = insertelement <4 x float> zeroinitializer, float %17059, i32 0
  %17061 = insertelement <4 x float> %17060, float 1.000000e+00, i32 1
  %17062 = insertelement <4 x float> %17061, float 1.000000e+00, i32 2
  %17063 = insertelement <4 x float> %17062, float 1.000000e+00, i32 3
  %17064 = getelementptr inbounds float, float* %1, i64 4
  %17065 = load float, float* %17064, align 4
  %17066 = insertelement <4 x float> zeroinitializer, float %17065, i32 0
  %17067 = insertelement <4 x float> %17066, float 0.000000e+00, i32 1
  %17068 = insertelement <4 x float> %17067, float 0.000000e+00, i32 2
  %17069 = insertelement <4 x float> %17068, float 0.000000e+00, i32 3
  %17070 = call <4 x float> @llvm.fma.f32.593(<4 x float> %17063, <4 x float> %17069, <4 x float> %17055)
  %17071 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17072 = getelementptr inbounds i8, i8* %17071, i64 40
  %17073 = bitcast i8* %17072 to float*
  %17074 = load float, float* %17073, align 4
  %17075 = insertelement <4 x float> zeroinitializer, float %17074, i32 0
  %17076 = insertelement <4 x float> %17075, float 1.000000e+00, i32 1
  %17077 = insertelement <4 x float> %17076, float 1.000000e+00, i32 2
  %17078 = insertelement <4 x float> %17077, float 1.000000e+00, i32 3
  %17079 = getelementptr inbounds float, float* %1, i64 8
  %17080 = load float, float* %17079, align 4
  %17081 = insertelement <4 x float> zeroinitializer, float %17080, i32 0
  %17082 = insertelement <4 x float> %17081, float 0.000000e+00, i32 1
  %17083 = insertelement <4 x float> %17082, float 0.000000e+00, i32 2
  %17084 = insertelement <4 x float> %17083, float 0.000000e+00, i32 3
  %17085 = call <4 x float> @llvm.fma.f32.594(<4 x float> %17078, <4 x float> %17084, <4 x float> %17070)
  %17086 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17087 = getelementptr inbounds i8, i8* %17086, i64 44
  %17088 = bitcast i8* %17087 to float*
  %17089 = load float, float* %17088, align 4
  %17090 = insertelement <4 x float> zeroinitializer, float %17089, i32 0
  %17091 = insertelement <4 x float> %17090, float 0.000000e+00, i32 1
  %17092 = insertelement <4 x float> %17091, float 0.000000e+00, i32 2
  %17093 = insertelement <4 x float> %17092, float 0.000000e+00, i32 3
  %17094 = getelementptr inbounds float, float* %1, i64 12
  %17095 = load float, float* %17094, align 4
  %17096 = insertelement <4 x float> zeroinitializer, float %17095, i32 0
  %17097 = insertelement <4 x float> %17096, float 0.000000e+00, i32 1
  %17098 = insertelement <4 x float> %17097, float 0.000000e+00, i32 2
  %17099 = insertelement <4 x float> %17098, float 0.000000e+00, i32 3
  %17100 = call <4 x float> @llvm.fma.f32.595(<4 x float> %17093, <4 x float> %17099, <4 x float> %17085)
  %17101 = extractelement <4 x float> %17100, i32 0
  %17102 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17103 = getelementptr inbounds i8, i8* %17102, i64 32
  %17104 = bitcast i8* %17103 to float*
  store float %17101, float* %17104, align 4
  %17105 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17106 = getelementptr inbounds i8, i8* %17105, i64 32
  %17107 = bitcast i8* %17106 to float*
  %17108 = load float, float* %17107, align 4
  %17109 = insertelement <4 x float> zeroinitializer, float %17108, i32 0
  %17110 = insertelement <4 x float> %17109, float 0.000000e+00, i32 1
  %17111 = insertelement <4 x float> %17110, float 0.000000e+00, i32 2
  %17112 = insertelement <4 x float> %17111, float 0.000000e+00, i32 3
  %17113 = getelementptr inbounds float, float* %1, i64 1
  %17114 = load float, float* %17113, align 4
  %17115 = insertelement <4 x float> zeroinitializer, float %17114, i32 0
  %17116 = insertelement <4 x float> %17115, float 0.000000e+00, i32 1
  %17117 = insertelement <4 x float> %17116, float 0.000000e+00, i32 2
  %17118 = insertelement <4 x float> %17117, float 0.000000e+00, i32 3
  %17119 = call <4 x float> @llvm.fma.f32.596(<4 x float> %17112, <4 x float> %17118, <4 x float> zeroinitializer)
  %17120 = extractelement <4 x float> %17119, i32 0
  %17121 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17122 = getelementptr inbounds i8, i8* %17121, i64 36
  %17123 = bitcast i8* %17122 to float*
  store float %17120, float* %17123, align 4
  %17124 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17125 = getelementptr inbounds i8, i8* %17124, i64 32
  %17126 = bitcast i8* %17125 to float*
  %17127 = load float, float* %17126, align 4
  %17128 = insertelement <4 x float> zeroinitializer, float %17127, i32 0
  %17129 = insertelement <4 x float> %17128, float 1.000000e+00, i32 1
  %17130 = insertelement <4 x float> %17129, float 1.000000e+00, i32 2
  %17131 = insertelement <4 x float> %17130, float 1.000000e+00, i32 3
  %17132 = getelementptr inbounds float, float* %1, i64 1
  %17133 = load float, float* %17132, align 4
  %17134 = insertelement <4 x float> zeroinitializer, float %17133, i32 0
  %17135 = insertelement <4 x float> %17134, float 0.000000e+00, i32 1
  %17136 = insertelement <4 x float> %17135, float 0.000000e+00, i32 2
  %17137 = insertelement <4 x float> %17136, float 0.000000e+00, i32 3
  %17138 = fmul <4 x float> %17131, %17137
  %17139 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17140 = getelementptr inbounds i8, i8* %17139, i64 36
  %17141 = bitcast i8* %17140 to float*
  %17142 = load float, float* %17141, align 4
  %17143 = insertelement <4 x float> zeroinitializer, float %17142, i32 0
  %17144 = insertelement <4 x float> %17143, float 0.000000e+00, i32 1
  %17145 = insertelement <4 x float> %17144, float 0.000000e+00, i32 2
  %17146 = insertelement <4 x float> %17145, float 0.000000e+00, i32 3
  %17147 = getelementptr inbounds float, float* %1, i64 5
  %17148 = load float, float* %17147, align 4
  %17149 = insertelement <4 x float> zeroinitializer, float %17148, i32 0
  %17150 = insertelement <4 x float> %17149, float 0.000000e+00, i32 1
  %17151 = insertelement <4 x float> %17150, float 0.000000e+00, i32 2
  %17152 = insertelement <4 x float> %17151, float 0.000000e+00, i32 3
  %17153 = call <4 x float> @llvm.fma.f32.597(<4 x float> %17146, <4 x float> %17152, <4 x float> %17138)
  %17154 = extractelement <4 x float> %17153, i32 0
  %17155 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17156 = getelementptr inbounds i8, i8* %17155, i64 36
  %17157 = bitcast i8* %17156 to float*
  store float %17154, float* %17157, align 4
  %17158 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17159 = getelementptr inbounds i8, i8* %17158, i64 32
  %17160 = bitcast i8* %17159 to float*
  %17161 = load float, float* %17160, align 4
  %17162 = insertelement <4 x float> zeroinitializer, float %17161, i32 0
  %17163 = insertelement <4 x float> %17162, float 1.000000e+00, i32 1
  %17164 = insertelement <4 x float> %17163, float 1.000000e+00, i32 2
  %17165 = insertelement <4 x float> %17164, float 1.000000e+00, i32 3
  %17166 = getelementptr inbounds float, float* %1, i64 1
  %17167 = load float, float* %17166, align 4
  %17168 = insertelement <4 x float> zeroinitializer, float %17167, i32 0
  %17169 = insertelement <4 x float> %17168, float 0.000000e+00, i32 1
  %17170 = insertelement <4 x float> %17169, float 0.000000e+00, i32 2
  %17171 = insertelement <4 x float> %17170, float 0.000000e+00, i32 3
  %17172 = fmul <4 x float> %17165, %17171
  %17173 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17174 = getelementptr inbounds i8, i8* %17173, i64 36
  %17175 = bitcast i8* %17174 to float*
  %17176 = load float, float* %17175, align 4
  %17177 = insertelement <4 x float> zeroinitializer, float %17176, i32 0
  %17178 = insertelement <4 x float> %17177, float 1.000000e+00, i32 1
  %17179 = insertelement <4 x float> %17178, float 1.000000e+00, i32 2
  %17180 = insertelement <4 x float> %17179, float 1.000000e+00, i32 3
  %17181 = getelementptr inbounds float, float* %1, i64 5
  %17182 = load float, float* %17181, align 4
  %17183 = insertelement <4 x float> zeroinitializer, float %17182, i32 0
  %17184 = insertelement <4 x float> %17183, float 0.000000e+00, i32 1
  %17185 = insertelement <4 x float> %17184, float 0.000000e+00, i32 2
  %17186 = insertelement <4 x float> %17185, float 0.000000e+00, i32 3
  %17187 = call <4 x float> @llvm.fma.f32.598(<4 x float> %17180, <4 x float> %17186, <4 x float> %17172)
  %17188 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17189 = getelementptr inbounds i8, i8* %17188, i64 40
  %17190 = bitcast i8* %17189 to float*
  %17191 = load float, float* %17190, align 4
  %17192 = insertelement <4 x float> zeroinitializer, float %17191, i32 0
  %17193 = insertelement <4 x float> %17192, float 0.000000e+00, i32 1
  %17194 = insertelement <4 x float> %17193, float 0.000000e+00, i32 2
  %17195 = insertelement <4 x float> %17194, float 0.000000e+00, i32 3
  %17196 = getelementptr inbounds float, float* %1, i64 9
  %17197 = load float, float* %17196, align 4
  %17198 = insertelement <4 x float> zeroinitializer, float %17197, i32 0
  %17199 = insertelement <4 x float> %17198, float 0.000000e+00, i32 1
  %17200 = insertelement <4 x float> %17199, float 0.000000e+00, i32 2
  %17201 = insertelement <4 x float> %17200, float 0.000000e+00, i32 3
  %17202 = call <4 x float> @llvm.fma.f32.599(<4 x float> %17195, <4 x float> %17201, <4 x float> %17187)
  %17203 = extractelement <4 x float> %17202, i32 0
  %17204 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17205 = getelementptr inbounds i8, i8* %17204, i64 36
  %17206 = bitcast i8* %17205 to float*
  store float %17203, float* %17206, align 4
  %17207 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17208 = getelementptr inbounds i8, i8* %17207, i64 32
  %17209 = bitcast i8* %17208 to float*
  %17210 = load float, float* %17209, align 4
  %17211 = insertelement <4 x float> zeroinitializer, float %17210, i32 0
  %17212 = insertelement <4 x float> %17211, float 1.000000e+00, i32 1
  %17213 = insertelement <4 x float> %17212, float 1.000000e+00, i32 2
  %17214 = insertelement <4 x float> %17213, float 1.000000e+00, i32 3
  %17215 = getelementptr inbounds float, float* %1, i64 1
  %17216 = load float, float* %17215, align 4
  %17217 = insertelement <4 x float> zeroinitializer, float %17216, i32 0
  %17218 = insertelement <4 x float> %17217, float 0.000000e+00, i32 1
  %17219 = insertelement <4 x float> %17218, float 0.000000e+00, i32 2
  %17220 = insertelement <4 x float> %17219, float 0.000000e+00, i32 3
  %17221 = fmul <4 x float> %17214, %17220
  %17222 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17223 = getelementptr inbounds i8, i8* %17222, i64 36
  %17224 = bitcast i8* %17223 to float*
  %17225 = load float, float* %17224, align 4
  %17226 = insertelement <4 x float> zeroinitializer, float %17225, i32 0
  %17227 = insertelement <4 x float> %17226, float 1.000000e+00, i32 1
  %17228 = insertelement <4 x float> %17227, float 1.000000e+00, i32 2
  %17229 = insertelement <4 x float> %17228, float 1.000000e+00, i32 3
  %17230 = getelementptr inbounds float, float* %1, i64 5
  %17231 = load float, float* %17230, align 4
  %17232 = insertelement <4 x float> zeroinitializer, float %17231, i32 0
  %17233 = insertelement <4 x float> %17232, float 0.000000e+00, i32 1
  %17234 = insertelement <4 x float> %17233, float 0.000000e+00, i32 2
  %17235 = insertelement <4 x float> %17234, float 0.000000e+00, i32 3
  %17236 = call <4 x float> @llvm.fma.f32.600(<4 x float> %17229, <4 x float> %17235, <4 x float> %17221)
  %17237 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17238 = getelementptr inbounds i8, i8* %17237, i64 40
  %17239 = bitcast i8* %17238 to float*
  %17240 = load float, float* %17239, align 4
  %17241 = insertelement <4 x float> zeroinitializer, float %17240, i32 0
  %17242 = insertelement <4 x float> %17241, float 1.000000e+00, i32 1
  %17243 = insertelement <4 x float> %17242, float 1.000000e+00, i32 2
  %17244 = insertelement <4 x float> %17243, float 1.000000e+00, i32 3
  %17245 = getelementptr inbounds float, float* %1, i64 9
  %17246 = load float, float* %17245, align 4
  %17247 = insertelement <4 x float> zeroinitializer, float %17246, i32 0
  %17248 = insertelement <4 x float> %17247, float 0.000000e+00, i32 1
  %17249 = insertelement <4 x float> %17248, float 0.000000e+00, i32 2
  %17250 = insertelement <4 x float> %17249, float 0.000000e+00, i32 3
  %17251 = call <4 x float> @llvm.fma.f32.601(<4 x float> %17244, <4 x float> %17250, <4 x float> %17236)
  %17252 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17253 = getelementptr inbounds i8, i8* %17252, i64 44
  %17254 = bitcast i8* %17253 to float*
  %17255 = load float, float* %17254, align 4
  %17256 = insertelement <4 x float> zeroinitializer, float %17255, i32 0
  %17257 = insertelement <4 x float> %17256, float 0.000000e+00, i32 1
  %17258 = insertelement <4 x float> %17257, float 0.000000e+00, i32 2
  %17259 = insertelement <4 x float> %17258, float 0.000000e+00, i32 3
  %17260 = getelementptr inbounds float, float* %1, i64 13
  %17261 = load float, float* %17260, align 4
  %17262 = insertelement <4 x float> zeroinitializer, float %17261, i32 0
  %17263 = insertelement <4 x float> %17262, float 0.000000e+00, i32 1
  %17264 = insertelement <4 x float> %17263, float 0.000000e+00, i32 2
  %17265 = insertelement <4 x float> %17264, float 0.000000e+00, i32 3
  %17266 = call <4 x float> @llvm.fma.f32.602(<4 x float> %17259, <4 x float> %17265, <4 x float> %17251)
  %17267 = extractelement <4 x float> %17266, i32 0
  %17268 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17269 = getelementptr inbounds i8, i8* %17268, i64 36
  %17270 = bitcast i8* %17269 to float*
  store float %17267, float* %17270, align 4
  %17271 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17272 = getelementptr inbounds i8, i8* %17271, i64 32
  %17273 = bitcast i8* %17272 to float*
  %17274 = load float, float* %17273, align 4
  %17275 = insertelement <4 x float> zeroinitializer, float %17274, i32 0
  %17276 = insertelement <4 x float> %17275, float 0.000000e+00, i32 1
  %17277 = insertelement <4 x float> %17276, float 0.000000e+00, i32 2
  %17278 = insertelement <4 x float> %17277, float 0.000000e+00, i32 3
  %17279 = getelementptr inbounds float, float* %1, i64 2
  %17280 = load float, float* %17279, align 4
  %17281 = insertelement <4 x float> zeroinitializer, float %17280, i32 0
  %17282 = insertelement <4 x float> %17281, float 0.000000e+00, i32 1
  %17283 = insertelement <4 x float> %17282, float 0.000000e+00, i32 2
  %17284 = insertelement <4 x float> %17283, float 0.000000e+00, i32 3
  %17285 = call <4 x float> @llvm.fma.f32.603(<4 x float> %17278, <4 x float> %17284, <4 x float> zeroinitializer)
  %17286 = extractelement <4 x float> %17285, i32 0
  %17287 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17288 = getelementptr inbounds i8, i8* %17287, i64 40
  %17289 = bitcast i8* %17288 to float*
  store float %17286, float* %17289, align 4
  %17290 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17291 = getelementptr inbounds i8, i8* %17290, i64 32
  %17292 = bitcast i8* %17291 to float*
  %17293 = load float, float* %17292, align 4
  %17294 = insertelement <4 x float> zeroinitializer, float %17293, i32 0
  %17295 = insertelement <4 x float> %17294, float 1.000000e+00, i32 1
  %17296 = insertelement <4 x float> %17295, float 1.000000e+00, i32 2
  %17297 = insertelement <4 x float> %17296, float 1.000000e+00, i32 3
  %17298 = getelementptr inbounds float, float* %1, i64 2
  %17299 = load float, float* %17298, align 4
  %17300 = insertelement <4 x float> zeroinitializer, float %17299, i32 0
  %17301 = insertelement <4 x float> %17300, float 0.000000e+00, i32 1
  %17302 = insertelement <4 x float> %17301, float 0.000000e+00, i32 2
  %17303 = insertelement <4 x float> %17302, float 0.000000e+00, i32 3
  %17304 = fmul <4 x float> %17297, %17303
  %17305 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17306 = getelementptr inbounds i8, i8* %17305, i64 36
  %17307 = bitcast i8* %17306 to float*
  %17308 = load float, float* %17307, align 4
  %17309 = insertelement <4 x float> zeroinitializer, float %17308, i32 0
  %17310 = insertelement <4 x float> %17309, float 0.000000e+00, i32 1
  %17311 = insertelement <4 x float> %17310, float 0.000000e+00, i32 2
  %17312 = insertelement <4 x float> %17311, float 0.000000e+00, i32 3
  %17313 = getelementptr inbounds float, float* %1, i64 6
  %17314 = load float, float* %17313, align 4
  %17315 = insertelement <4 x float> zeroinitializer, float %17314, i32 0
  %17316 = insertelement <4 x float> %17315, float 0.000000e+00, i32 1
  %17317 = insertelement <4 x float> %17316, float 0.000000e+00, i32 2
  %17318 = insertelement <4 x float> %17317, float 0.000000e+00, i32 3
  %17319 = call <4 x float> @llvm.fma.f32.604(<4 x float> %17312, <4 x float> %17318, <4 x float> %17304)
  %17320 = extractelement <4 x float> %17319, i32 0
  %17321 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17322 = getelementptr inbounds i8, i8* %17321, i64 40
  %17323 = bitcast i8* %17322 to float*
  store float %17320, float* %17323, align 4
  %17324 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17325 = getelementptr inbounds i8, i8* %17324, i64 32
  %17326 = bitcast i8* %17325 to float*
  %17327 = load float, float* %17326, align 4
  %17328 = insertelement <4 x float> zeroinitializer, float %17327, i32 0
  %17329 = insertelement <4 x float> %17328, float 1.000000e+00, i32 1
  %17330 = insertelement <4 x float> %17329, float 1.000000e+00, i32 2
  %17331 = insertelement <4 x float> %17330, float 1.000000e+00, i32 3
  %17332 = getelementptr inbounds float, float* %1, i64 2
  %17333 = load float, float* %17332, align 4
  %17334 = insertelement <4 x float> zeroinitializer, float %17333, i32 0
  %17335 = insertelement <4 x float> %17334, float 0.000000e+00, i32 1
  %17336 = insertelement <4 x float> %17335, float 0.000000e+00, i32 2
  %17337 = insertelement <4 x float> %17336, float 0.000000e+00, i32 3
  %17338 = fmul <4 x float> %17331, %17337
  %17339 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17340 = getelementptr inbounds i8, i8* %17339, i64 36
  %17341 = bitcast i8* %17340 to float*
  %17342 = load float, float* %17341, align 4
  %17343 = insertelement <4 x float> zeroinitializer, float %17342, i32 0
  %17344 = insertelement <4 x float> %17343, float 1.000000e+00, i32 1
  %17345 = insertelement <4 x float> %17344, float 1.000000e+00, i32 2
  %17346 = insertelement <4 x float> %17345, float 1.000000e+00, i32 3
  %17347 = getelementptr inbounds float, float* %1, i64 6
  %17348 = load float, float* %17347, align 4
  %17349 = insertelement <4 x float> zeroinitializer, float %17348, i32 0
  %17350 = insertelement <4 x float> %17349, float 0.000000e+00, i32 1
  %17351 = insertelement <4 x float> %17350, float 0.000000e+00, i32 2
  %17352 = insertelement <4 x float> %17351, float 0.000000e+00, i32 3
  %17353 = call <4 x float> @llvm.fma.f32.605(<4 x float> %17346, <4 x float> %17352, <4 x float> %17338)
  %17354 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17355 = getelementptr inbounds i8, i8* %17354, i64 40
  %17356 = bitcast i8* %17355 to float*
  %17357 = load float, float* %17356, align 4
  %17358 = insertelement <4 x float> zeroinitializer, float %17357, i32 0
  %17359 = insertelement <4 x float> %17358, float 0.000000e+00, i32 1
  %17360 = insertelement <4 x float> %17359, float 0.000000e+00, i32 2
  %17361 = insertelement <4 x float> %17360, float 0.000000e+00, i32 3
  %17362 = getelementptr inbounds float, float* %1, i64 10
  %17363 = load float, float* %17362, align 4
  %17364 = insertelement <4 x float> zeroinitializer, float %17363, i32 0
  %17365 = insertelement <4 x float> %17364, float 0.000000e+00, i32 1
  %17366 = insertelement <4 x float> %17365, float 0.000000e+00, i32 2
  %17367 = insertelement <4 x float> %17366, float 0.000000e+00, i32 3
  %17368 = call <4 x float> @llvm.fma.f32.606(<4 x float> %17361, <4 x float> %17367, <4 x float> %17353)
  %17369 = extractelement <4 x float> %17368, i32 0
  %17370 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17371 = getelementptr inbounds i8, i8* %17370, i64 40
  %17372 = bitcast i8* %17371 to float*
  store float %17369, float* %17372, align 4
  %17373 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17374 = getelementptr inbounds i8, i8* %17373, i64 32
  %17375 = bitcast i8* %17374 to float*
  %17376 = load float, float* %17375, align 4
  %17377 = insertelement <4 x float> zeroinitializer, float %17376, i32 0
  %17378 = insertelement <4 x float> %17377, float 1.000000e+00, i32 1
  %17379 = insertelement <4 x float> %17378, float 1.000000e+00, i32 2
  %17380 = insertelement <4 x float> %17379, float 1.000000e+00, i32 3
  %17381 = getelementptr inbounds float, float* %1, i64 2
  %17382 = load float, float* %17381, align 4
  %17383 = insertelement <4 x float> zeroinitializer, float %17382, i32 0
  %17384 = insertelement <4 x float> %17383, float 0.000000e+00, i32 1
  %17385 = insertelement <4 x float> %17384, float 0.000000e+00, i32 2
  %17386 = insertelement <4 x float> %17385, float 0.000000e+00, i32 3
  %17387 = fmul <4 x float> %17380, %17386
  %17388 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17389 = getelementptr inbounds i8, i8* %17388, i64 36
  %17390 = bitcast i8* %17389 to float*
  %17391 = load float, float* %17390, align 4
  %17392 = insertelement <4 x float> zeroinitializer, float %17391, i32 0
  %17393 = insertelement <4 x float> %17392, float 1.000000e+00, i32 1
  %17394 = insertelement <4 x float> %17393, float 1.000000e+00, i32 2
  %17395 = insertelement <4 x float> %17394, float 1.000000e+00, i32 3
  %17396 = getelementptr inbounds float, float* %1, i64 6
  %17397 = load float, float* %17396, align 4
  %17398 = insertelement <4 x float> zeroinitializer, float %17397, i32 0
  %17399 = insertelement <4 x float> %17398, float 0.000000e+00, i32 1
  %17400 = insertelement <4 x float> %17399, float 0.000000e+00, i32 2
  %17401 = insertelement <4 x float> %17400, float 0.000000e+00, i32 3
  %17402 = call <4 x float> @llvm.fma.f32.607(<4 x float> %17395, <4 x float> %17401, <4 x float> %17387)
  %17403 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17404 = getelementptr inbounds i8, i8* %17403, i64 40
  %17405 = bitcast i8* %17404 to float*
  %17406 = load float, float* %17405, align 4
  %17407 = insertelement <4 x float> zeroinitializer, float %17406, i32 0
  %17408 = insertelement <4 x float> %17407, float 1.000000e+00, i32 1
  %17409 = insertelement <4 x float> %17408, float 1.000000e+00, i32 2
  %17410 = insertelement <4 x float> %17409, float 1.000000e+00, i32 3
  %17411 = getelementptr inbounds float, float* %1, i64 10
  %17412 = load float, float* %17411, align 4
  %17413 = insertelement <4 x float> zeroinitializer, float %17412, i32 0
  %17414 = insertelement <4 x float> %17413, float 0.000000e+00, i32 1
  %17415 = insertelement <4 x float> %17414, float 0.000000e+00, i32 2
  %17416 = insertelement <4 x float> %17415, float 0.000000e+00, i32 3
  %17417 = call <4 x float> @llvm.fma.f32.608(<4 x float> %17410, <4 x float> %17416, <4 x float> %17402)
  %17418 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17419 = getelementptr inbounds i8, i8* %17418, i64 44
  %17420 = bitcast i8* %17419 to float*
  %17421 = load float, float* %17420, align 4
  %17422 = insertelement <4 x float> zeroinitializer, float %17421, i32 0
  %17423 = insertelement <4 x float> %17422, float 0.000000e+00, i32 1
  %17424 = insertelement <4 x float> %17423, float 0.000000e+00, i32 2
  %17425 = insertelement <4 x float> %17424, float 0.000000e+00, i32 3
  %17426 = getelementptr inbounds float, float* %1, i64 14
  %17427 = load float, float* %17426, align 4
  %17428 = insertelement <4 x float> zeroinitializer, float %17427, i32 0
  %17429 = insertelement <4 x float> %17428, float 0.000000e+00, i32 1
  %17430 = insertelement <4 x float> %17429, float 0.000000e+00, i32 2
  %17431 = insertelement <4 x float> %17430, float 0.000000e+00, i32 3
  %17432 = call <4 x float> @llvm.fma.f32.609(<4 x float> %17425, <4 x float> %17431, <4 x float> %17417)
  %17433 = extractelement <4 x float> %17432, i32 0
  %17434 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17435 = getelementptr inbounds i8, i8* %17434, i64 40
  %17436 = bitcast i8* %17435 to float*
  store float %17433, float* %17436, align 4
  %17437 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17438 = getelementptr inbounds i8, i8* %17437, i64 32
  %17439 = bitcast i8* %17438 to float*
  %17440 = load float, float* %17439, align 4
  %17441 = insertelement <4 x float> zeroinitializer, float %17440, i32 0
  %17442 = insertelement <4 x float> %17441, float 0.000000e+00, i32 1
  %17443 = insertelement <4 x float> %17442, float 0.000000e+00, i32 2
  %17444 = insertelement <4 x float> %17443, float 0.000000e+00, i32 3
  %17445 = getelementptr inbounds float, float* %1, i64 3
  %17446 = load float, float* %17445, align 4
  %17447 = insertelement <4 x float> zeroinitializer, float %17446, i32 0
  %17448 = insertelement <4 x float> %17447, float 0.000000e+00, i32 1
  %17449 = insertelement <4 x float> %17448, float 0.000000e+00, i32 2
  %17450 = insertelement <4 x float> %17449, float 0.000000e+00, i32 3
  %17451 = call <4 x float> @llvm.fma.f32.610(<4 x float> %17444, <4 x float> %17450, <4 x float> zeroinitializer)
  %17452 = extractelement <4 x float> %17451, i32 0
  %17453 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17454 = getelementptr inbounds i8, i8* %17453, i64 44
  %17455 = bitcast i8* %17454 to float*
  store float %17452, float* %17455, align 4
  %17456 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17457 = getelementptr inbounds i8, i8* %17456, i64 32
  %17458 = bitcast i8* %17457 to float*
  %17459 = load float, float* %17458, align 4
  %17460 = insertelement <4 x float> zeroinitializer, float %17459, i32 0
  %17461 = insertelement <4 x float> %17460, float 1.000000e+00, i32 1
  %17462 = insertelement <4 x float> %17461, float 1.000000e+00, i32 2
  %17463 = insertelement <4 x float> %17462, float 1.000000e+00, i32 3
  %17464 = getelementptr inbounds float, float* %1, i64 3
  %17465 = load float, float* %17464, align 4
  %17466 = insertelement <4 x float> zeroinitializer, float %17465, i32 0
  %17467 = insertelement <4 x float> %17466, float 0.000000e+00, i32 1
  %17468 = insertelement <4 x float> %17467, float 0.000000e+00, i32 2
  %17469 = insertelement <4 x float> %17468, float 0.000000e+00, i32 3
  %17470 = fmul <4 x float> %17463, %17469
  %17471 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17472 = getelementptr inbounds i8, i8* %17471, i64 36
  %17473 = bitcast i8* %17472 to float*
  %17474 = load float, float* %17473, align 4
  %17475 = insertelement <4 x float> zeroinitializer, float %17474, i32 0
  %17476 = insertelement <4 x float> %17475, float 0.000000e+00, i32 1
  %17477 = insertelement <4 x float> %17476, float 0.000000e+00, i32 2
  %17478 = insertelement <4 x float> %17477, float 0.000000e+00, i32 3
  %17479 = getelementptr inbounds float, float* %1, i64 7
  %17480 = load float, float* %17479, align 4
  %17481 = insertelement <4 x float> zeroinitializer, float %17480, i32 0
  %17482 = insertelement <4 x float> %17481, float 0.000000e+00, i32 1
  %17483 = insertelement <4 x float> %17482, float 0.000000e+00, i32 2
  %17484 = insertelement <4 x float> %17483, float 0.000000e+00, i32 3
  %17485 = call <4 x float> @llvm.fma.f32.611(<4 x float> %17478, <4 x float> %17484, <4 x float> %17470)
  %17486 = extractelement <4 x float> %17485, i32 0
  %17487 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17488 = getelementptr inbounds i8, i8* %17487, i64 44
  %17489 = bitcast i8* %17488 to float*
  store float %17486, float* %17489, align 4
  %17490 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17491 = getelementptr inbounds i8, i8* %17490, i64 32
  %17492 = bitcast i8* %17491 to float*
  %17493 = load float, float* %17492, align 4
  %17494 = insertelement <4 x float> zeroinitializer, float %17493, i32 0
  %17495 = insertelement <4 x float> %17494, float 1.000000e+00, i32 1
  %17496 = insertelement <4 x float> %17495, float 1.000000e+00, i32 2
  %17497 = insertelement <4 x float> %17496, float 1.000000e+00, i32 3
  %17498 = getelementptr inbounds float, float* %1, i64 3
  %17499 = load float, float* %17498, align 4
  %17500 = insertelement <4 x float> zeroinitializer, float %17499, i32 0
  %17501 = insertelement <4 x float> %17500, float 0.000000e+00, i32 1
  %17502 = insertelement <4 x float> %17501, float 0.000000e+00, i32 2
  %17503 = insertelement <4 x float> %17502, float 0.000000e+00, i32 3
  %17504 = fmul <4 x float> %17497, %17503
  %17505 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17506 = getelementptr inbounds i8, i8* %17505, i64 36
  %17507 = bitcast i8* %17506 to float*
  %17508 = load float, float* %17507, align 4
  %17509 = insertelement <4 x float> zeroinitializer, float %17508, i32 0
  %17510 = insertelement <4 x float> %17509, float 1.000000e+00, i32 1
  %17511 = insertelement <4 x float> %17510, float 1.000000e+00, i32 2
  %17512 = insertelement <4 x float> %17511, float 1.000000e+00, i32 3
  %17513 = getelementptr inbounds float, float* %1, i64 7
  %17514 = load float, float* %17513, align 4
  %17515 = insertelement <4 x float> zeroinitializer, float %17514, i32 0
  %17516 = insertelement <4 x float> %17515, float 0.000000e+00, i32 1
  %17517 = insertelement <4 x float> %17516, float 0.000000e+00, i32 2
  %17518 = insertelement <4 x float> %17517, float 0.000000e+00, i32 3
  %17519 = call <4 x float> @llvm.fma.f32.612(<4 x float> %17512, <4 x float> %17518, <4 x float> %17504)
  %17520 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17521 = getelementptr inbounds i8, i8* %17520, i64 40
  %17522 = bitcast i8* %17521 to float*
  %17523 = load float, float* %17522, align 4
  %17524 = insertelement <4 x float> zeroinitializer, float %17523, i32 0
  %17525 = insertelement <4 x float> %17524, float 0.000000e+00, i32 1
  %17526 = insertelement <4 x float> %17525, float 0.000000e+00, i32 2
  %17527 = insertelement <4 x float> %17526, float 0.000000e+00, i32 3
  %17528 = getelementptr inbounds float, float* %1, i64 11
  %17529 = load float, float* %17528, align 4
  %17530 = insertelement <4 x float> zeroinitializer, float %17529, i32 0
  %17531 = insertelement <4 x float> %17530, float 0.000000e+00, i32 1
  %17532 = insertelement <4 x float> %17531, float 0.000000e+00, i32 2
  %17533 = insertelement <4 x float> %17532, float 0.000000e+00, i32 3
  %17534 = call <4 x float> @llvm.fma.f32.613(<4 x float> %17527, <4 x float> %17533, <4 x float> %17519)
  %17535 = extractelement <4 x float> %17534, i32 0
  %17536 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17537 = getelementptr inbounds i8, i8* %17536, i64 44
  %17538 = bitcast i8* %17537 to float*
  store float %17535, float* %17538, align 4
  %17539 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17540 = getelementptr inbounds i8, i8* %17539, i64 32
  %17541 = bitcast i8* %17540 to float*
  %17542 = load float, float* %17541, align 4
  %17543 = insertelement <4 x float> zeroinitializer, float %17542, i32 0
  %17544 = insertelement <4 x float> %17543, float 1.000000e+00, i32 1
  %17545 = insertelement <4 x float> %17544, float 1.000000e+00, i32 2
  %17546 = insertelement <4 x float> %17545, float 1.000000e+00, i32 3
  %17547 = getelementptr inbounds float, float* %1, i64 3
  %17548 = load float, float* %17547, align 4
  %17549 = insertelement <4 x float> zeroinitializer, float %17548, i32 0
  %17550 = insertelement <4 x float> %17549, float 0.000000e+00, i32 1
  %17551 = insertelement <4 x float> %17550, float 0.000000e+00, i32 2
  %17552 = insertelement <4 x float> %17551, float 0.000000e+00, i32 3
  %17553 = fmul <4 x float> %17546, %17552
  %17554 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17555 = getelementptr inbounds i8, i8* %17554, i64 36
  %17556 = bitcast i8* %17555 to float*
  %17557 = load float, float* %17556, align 4
  %17558 = insertelement <4 x float> zeroinitializer, float %17557, i32 0
  %17559 = insertelement <4 x float> %17558, float 1.000000e+00, i32 1
  %17560 = insertelement <4 x float> %17559, float 1.000000e+00, i32 2
  %17561 = insertelement <4 x float> %17560, float 1.000000e+00, i32 3
  %17562 = getelementptr inbounds float, float* %1, i64 7
  %17563 = load float, float* %17562, align 4
  %17564 = insertelement <4 x float> zeroinitializer, float %17563, i32 0
  %17565 = insertelement <4 x float> %17564, float 0.000000e+00, i32 1
  %17566 = insertelement <4 x float> %17565, float 0.000000e+00, i32 2
  %17567 = insertelement <4 x float> %17566, float 0.000000e+00, i32 3
  %17568 = call <4 x float> @llvm.fma.f32.614(<4 x float> %17561, <4 x float> %17567, <4 x float> %17553)
  %17569 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17570 = getelementptr inbounds i8, i8* %17569, i64 40
  %17571 = bitcast i8* %17570 to float*
  %17572 = load float, float* %17571, align 4
  %17573 = insertelement <4 x float> zeroinitializer, float %17572, i32 0
  %17574 = insertelement <4 x float> %17573, float 1.000000e+00, i32 1
  %17575 = insertelement <4 x float> %17574, float 1.000000e+00, i32 2
  %17576 = insertelement <4 x float> %17575, float 1.000000e+00, i32 3
  %17577 = getelementptr inbounds float, float* %1, i64 11
  %17578 = load float, float* %17577, align 4
  %17579 = insertelement <4 x float> zeroinitializer, float %17578, i32 0
  %17580 = insertelement <4 x float> %17579, float 0.000000e+00, i32 1
  %17581 = insertelement <4 x float> %17580, float 0.000000e+00, i32 2
  %17582 = insertelement <4 x float> %17581, float 0.000000e+00, i32 3
  %17583 = call <4 x float> @llvm.fma.f32.615(<4 x float> %17576, <4 x float> %17582, <4 x float> %17568)
  %17584 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17585 = getelementptr inbounds i8, i8* %17584, i64 44
  %17586 = bitcast i8* %17585 to float*
  %17587 = load float, float* %17586, align 4
  %17588 = insertelement <4 x float> zeroinitializer, float %17587, i32 0
  %17589 = insertelement <4 x float> %17588, float 0.000000e+00, i32 1
  %17590 = insertelement <4 x float> %17589, float 0.000000e+00, i32 2
  %17591 = insertelement <4 x float> %17590, float 0.000000e+00, i32 3
  %17592 = getelementptr inbounds float, float* %1, i64 15
  %17593 = load float, float* %17592, align 4
  %17594 = insertelement <4 x float> zeroinitializer, float %17593, i32 0
  %17595 = insertelement <4 x float> %17594, float 0.000000e+00, i32 1
  %17596 = insertelement <4 x float> %17595, float 0.000000e+00, i32 2
  %17597 = insertelement <4 x float> %17596, float 0.000000e+00, i32 3
  %17598 = call <4 x float> @llvm.fma.f32.616(<4 x float> %17591, <4 x float> %17597, <4 x float> %17583)
  %17599 = extractelement <4 x float> %17598, i32 0
  %17600 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17601 = getelementptr inbounds i8, i8* %17600, i64 44
  %17602 = bitcast i8* %17601 to float*
  store float %17599, float* %17602, align 4
  %17603 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17604 = getelementptr inbounds i8, i8* %17603, i64 48
  %17605 = bitcast i8* %17604 to float*
  %17606 = load float, float* %17605, align 4
  %17607 = insertelement <4 x float> zeroinitializer, float %17606, i32 0
  %17608 = insertelement <4 x float> %17607, float 0.000000e+00, i32 1
  %17609 = insertelement <4 x float> %17608, float 0.000000e+00, i32 2
  %17610 = insertelement <4 x float> %17609, float 0.000000e+00, i32 3
  %17611 = load float, float* %1, align 4
  %17612 = insertelement <4 x float> zeroinitializer, float %17611, i32 0
  %17613 = insertelement <4 x float> %17612, float 0.000000e+00, i32 1
  %17614 = insertelement <4 x float> %17613, float 0.000000e+00, i32 2
  %17615 = insertelement <4 x float> %17614, float 0.000000e+00, i32 3
  %17616 = call <4 x float> @llvm.fma.f32.617(<4 x float> %17610, <4 x float> %17615, <4 x float> zeroinitializer)
  %17617 = extractelement <4 x float> %17616, i32 0
  %17618 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17619 = getelementptr inbounds i8, i8* %17618, i64 48
  %17620 = bitcast i8* %17619 to float*
  store float %17617, float* %17620, align 4
  %17621 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17622 = getelementptr inbounds i8, i8* %17621, i64 48
  %17623 = bitcast i8* %17622 to float*
  %17624 = load float, float* %17623, align 4
  %17625 = insertelement <4 x float> zeroinitializer, float %17624, i32 0
  %17626 = insertelement <4 x float> %17625, float 1.000000e+00, i32 1
  %17627 = insertelement <4 x float> %17626, float 1.000000e+00, i32 2
  %17628 = insertelement <4 x float> %17627, float 1.000000e+00, i32 3
  %17629 = load float, float* %1, align 4
  %17630 = insertelement <4 x float> zeroinitializer, float %17629, i32 0
  %17631 = insertelement <4 x float> %17630, float 0.000000e+00, i32 1
  %17632 = insertelement <4 x float> %17631, float 0.000000e+00, i32 2
  %17633 = insertelement <4 x float> %17632, float 0.000000e+00, i32 3
  %17634 = fmul <4 x float> %17628, %17633
  %17635 = fadd <4 x float> %17634, zeroinitializer
  %17636 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17637 = getelementptr inbounds i8, i8* %17636, i64 52
  %17638 = bitcast i8* %17637 to float*
  %17639 = load float, float* %17638, align 4
  %17640 = insertelement <4 x float> zeroinitializer, float %17639, i32 0
  %17641 = insertelement <4 x float> %17640, float 0.000000e+00, i32 1
  %17642 = insertelement <4 x float> %17641, float 0.000000e+00, i32 2
  %17643 = insertelement <4 x float> %17642, float 0.000000e+00, i32 3
  %17644 = getelementptr inbounds float, float* %1, i64 4
  %17645 = load float, float* %17644, align 4
  %17646 = insertelement <4 x float> zeroinitializer, float %17645, i32 0
  %17647 = insertelement <4 x float> %17646, float 0.000000e+00, i32 1
  %17648 = insertelement <4 x float> %17647, float 0.000000e+00, i32 2
  %17649 = insertelement <4 x float> %17648, float 0.000000e+00, i32 3
  %17650 = call <4 x float> @llvm.fma.f32.618(<4 x float> %17643, <4 x float> %17649, <4 x float> %17635)
  %17651 = extractelement <4 x float> %17650, i32 0
  %17652 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17653 = getelementptr inbounds i8, i8* %17652, i64 48
  %17654 = bitcast i8* %17653 to float*
  store float %17651, float* %17654, align 4
  %17655 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17656 = getelementptr inbounds i8, i8* %17655, i64 48
  %17657 = bitcast i8* %17656 to float*
  %17658 = load float, float* %17657, align 4
  %17659 = insertelement <4 x float> zeroinitializer, float %17658, i32 0
  %17660 = insertelement <4 x float> %17659, float 1.000000e+00, i32 1
  %17661 = insertelement <4 x float> %17660, float 1.000000e+00, i32 2
  %17662 = insertelement <4 x float> %17661, float 1.000000e+00, i32 3
  %17663 = load float, float* %1, align 4
  %17664 = insertelement <4 x float> zeroinitializer, float %17663, i32 0
  %17665 = insertelement <4 x float> %17664, float 0.000000e+00, i32 1
  %17666 = insertelement <4 x float> %17665, float 0.000000e+00, i32 2
  %17667 = insertelement <4 x float> %17666, float 0.000000e+00, i32 3
  %17668 = fmul <4 x float> %17662, %17667
  %17669 = fadd <4 x float> %17668, zeroinitializer
  %17670 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17671 = getelementptr inbounds i8, i8* %17670, i64 52
  %17672 = bitcast i8* %17671 to float*
  %17673 = load float, float* %17672, align 4
  %17674 = insertelement <4 x float> zeroinitializer, float %17673, i32 0
  %17675 = insertelement <4 x float> %17674, float 1.000000e+00, i32 1
  %17676 = insertelement <4 x float> %17675, float 1.000000e+00, i32 2
  %17677 = insertelement <4 x float> %17676, float 1.000000e+00, i32 3
  %17678 = getelementptr inbounds float, float* %1, i64 4
  %17679 = load float, float* %17678, align 4
  %17680 = insertelement <4 x float> zeroinitializer, float %17679, i32 0
  %17681 = insertelement <4 x float> %17680, float 0.000000e+00, i32 1
  %17682 = insertelement <4 x float> %17681, float 0.000000e+00, i32 2
  %17683 = insertelement <4 x float> %17682, float 0.000000e+00, i32 3
  %17684 = call <4 x float> @llvm.fma.f32.619(<4 x float> %17677, <4 x float> %17683, <4 x float> %17669)
  %17685 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17686 = getelementptr inbounds i8, i8* %17685, i64 56
  %17687 = bitcast i8* %17686 to float*
  %17688 = load float, float* %17687, align 4
  %17689 = insertelement <4 x float> zeroinitializer, float %17688, i32 0
  %17690 = insertelement <4 x float> %17689, float 0.000000e+00, i32 1
  %17691 = insertelement <4 x float> %17690, float 0.000000e+00, i32 2
  %17692 = insertelement <4 x float> %17691, float 0.000000e+00, i32 3
  %17693 = getelementptr inbounds float, float* %1, i64 8
  %17694 = load float, float* %17693, align 4
  %17695 = insertelement <4 x float> zeroinitializer, float %17694, i32 0
  %17696 = insertelement <4 x float> %17695, float 0.000000e+00, i32 1
  %17697 = insertelement <4 x float> %17696, float 0.000000e+00, i32 2
  %17698 = insertelement <4 x float> %17697, float 0.000000e+00, i32 3
  %17699 = call <4 x float> @llvm.fma.f32.620(<4 x float> %17692, <4 x float> %17698, <4 x float> %17684)
  %17700 = extractelement <4 x float> %17699, i32 0
  %17701 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17702 = getelementptr inbounds i8, i8* %17701, i64 48
  %17703 = bitcast i8* %17702 to float*
  store float %17700, float* %17703, align 4
  %17704 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17705 = getelementptr inbounds i8, i8* %17704, i64 48
  %17706 = bitcast i8* %17705 to float*
  %17707 = load float, float* %17706, align 4
  %17708 = insertelement <4 x float> zeroinitializer, float %17707, i32 0
  %17709 = insertelement <4 x float> %17708, float 1.000000e+00, i32 1
  %17710 = insertelement <4 x float> %17709, float 1.000000e+00, i32 2
  %17711 = insertelement <4 x float> %17710, float 1.000000e+00, i32 3
  %17712 = load float, float* %1, align 4
  %17713 = insertelement <4 x float> zeroinitializer, float %17712, i32 0
  %17714 = insertelement <4 x float> %17713, float 0.000000e+00, i32 1
  %17715 = insertelement <4 x float> %17714, float 0.000000e+00, i32 2
  %17716 = insertelement <4 x float> %17715, float 0.000000e+00, i32 3
  %17717 = fmul <4 x float> %17711, %17716
  %17718 = fadd <4 x float> %17717, zeroinitializer
  %17719 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17720 = getelementptr inbounds i8, i8* %17719, i64 52
  %17721 = bitcast i8* %17720 to float*
  %17722 = load float, float* %17721, align 4
  %17723 = insertelement <4 x float> zeroinitializer, float %17722, i32 0
  %17724 = insertelement <4 x float> %17723, float 1.000000e+00, i32 1
  %17725 = insertelement <4 x float> %17724, float 1.000000e+00, i32 2
  %17726 = insertelement <4 x float> %17725, float 1.000000e+00, i32 3
  %17727 = getelementptr inbounds float, float* %1, i64 4
  %17728 = load float, float* %17727, align 4
  %17729 = insertelement <4 x float> zeroinitializer, float %17728, i32 0
  %17730 = insertelement <4 x float> %17729, float 0.000000e+00, i32 1
  %17731 = insertelement <4 x float> %17730, float 0.000000e+00, i32 2
  %17732 = insertelement <4 x float> %17731, float 0.000000e+00, i32 3
  %17733 = call <4 x float> @llvm.fma.f32.621(<4 x float> %17726, <4 x float> %17732, <4 x float> %17718)
  %17734 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17735 = getelementptr inbounds i8, i8* %17734, i64 56
  %17736 = bitcast i8* %17735 to float*
  %17737 = load float, float* %17736, align 4
  %17738 = insertelement <4 x float> zeroinitializer, float %17737, i32 0
  %17739 = insertelement <4 x float> %17738, float 1.000000e+00, i32 1
  %17740 = insertelement <4 x float> %17739, float 1.000000e+00, i32 2
  %17741 = insertelement <4 x float> %17740, float 1.000000e+00, i32 3
  %17742 = getelementptr inbounds float, float* %1, i64 8
  %17743 = load float, float* %17742, align 4
  %17744 = insertelement <4 x float> zeroinitializer, float %17743, i32 0
  %17745 = insertelement <4 x float> %17744, float 0.000000e+00, i32 1
  %17746 = insertelement <4 x float> %17745, float 0.000000e+00, i32 2
  %17747 = insertelement <4 x float> %17746, float 0.000000e+00, i32 3
  %17748 = call <4 x float> @llvm.fma.f32.622(<4 x float> %17741, <4 x float> %17747, <4 x float> %17733)
  %17749 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17750 = getelementptr inbounds i8, i8* %17749, i64 60
  %17751 = bitcast i8* %17750 to float*
  %17752 = load float, float* %17751, align 4
  %17753 = insertelement <4 x float> zeroinitializer, float %17752, i32 0
  %17754 = insertelement <4 x float> %17753, float 0.000000e+00, i32 1
  %17755 = insertelement <4 x float> %17754, float 0.000000e+00, i32 2
  %17756 = insertelement <4 x float> %17755, float 0.000000e+00, i32 3
  %17757 = getelementptr inbounds float, float* %1, i64 12
  %17758 = load float, float* %17757, align 4
  %17759 = insertelement <4 x float> zeroinitializer, float %17758, i32 0
  %17760 = insertelement <4 x float> %17759, float 0.000000e+00, i32 1
  %17761 = insertelement <4 x float> %17760, float 0.000000e+00, i32 2
  %17762 = insertelement <4 x float> %17761, float 0.000000e+00, i32 3
  %17763 = call <4 x float> @llvm.fma.f32.623(<4 x float> %17756, <4 x float> %17762, <4 x float> %17748)
  %17764 = extractelement <4 x float> %17763, i32 0
  %17765 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17766 = getelementptr inbounds i8, i8* %17765, i64 48
  %17767 = bitcast i8* %17766 to float*
  store float %17764, float* %17767, align 4
  %17768 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17769 = getelementptr inbounds i8, i8* %17768, i64 48
  %17770 = bitcast i8* %17769 to float*
  %17771 = load float, float* %17770, align 4
  %17772 = insertelement <4 x float> zeroinitializer, float %17771, i32 0
  %17773 = insertelement <4 x float> %17772, float 0.000000e+00, i32 1
  %17774 = insertelement <4 x float> %17773, float 0.000000e+00, i32 2
  %17775 = insertelement <4 x float> %17774, float 0.000000e+00, i32 3
  %17776 = getelementptr inbounds float, float* %1, i64 1
  %17777 = load float, float* %17776, align 4
  %17778 = insertelement <4 x float> zeroinitializer, float %17777, i32 0
  %17779 = insertelement <4 x float> %17778, float 0.000000e+00, i32 1
  %17780 = insertelement <4 x float> %17779, float 0.000000e+00, i32 2
  %17781 = insertelement <4 x float> %17780, float 0.000000e+00, i32 3
  %17782 = call <4 x float> @llvm.fma.f32.624(<4 x float> %17775, <4 x float> %17781, <4 x float> zeroinitializer)
  %17783 = extractelement <4 x float> %17782, i32 0
  %17784 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17785 = getelementptr inbounds i8, i8* %17784, i64 52
  %17786 = bitcast i8* %17785 to float*
  store float %17783, float* %17786, align 4
  %17787 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17788 = getelementptr inbounds i8, i8* %17787, i64 48
  %17789 = bitcast i8* %17788 to float*
  %17790 = load float, float* %17789, align 4
  %17791 = insertelement <4 x float> zeroinitializer, float %17790, i32 0
  %17792 = insertelement <4 x float> %17791, float 1.000000e+00, i32 1
  %17793 = insertelement <4 x float> %17792, float 1.000000e+00, i32 2
  %17794 = insertelement <4 x float> %17793, float 1.000000e+00, i32 3
  %17795 = getelementptr inbounds float, float* %1, i64 1
  %17796 = load float, float* %17795, align 4
  %17797 = insertelement <4 x float> zeroinitializer, float %17796, i32 0
  %17798 = insertelement <4 x float> %17797, float 0.000000e+00, i32 1
  %17799 = insertelement <4 x float> %17798, float 0.000000e+00, i32 2
  %17800 = insertelement <4 x float> %17799, float 0.000000e+00, i32 3
  %17801 = fmul <4 x float> %17794, %17800
  %17802 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17803 = getelementptr inbounds i8, i8* %17802, i64 52
  %17804 = bitcast i8* %17803 to float*
  %17805 = load float, float* %17804, align 4
  %17806 = insertelement <4 x float> zeroinitializer, float %17805, i32 0
  %17807 = insertelement <4 x float> %17806, float 0.000000e+00, i32 1
  %17808 = insertelement <4 x float> %17807, float 0.000000e+00, i32 2
  %17809 = insertelement <4 x float> %17808, float 0.000000e+00, i32 3
  %17810 = getelementptr inbounds float, float* %1, i64 5
  %17811 = load float, float* %17810, align 4
  %17812 = insertelement <4 x float> zeroinitializer, float %17811, i32 0
  %17813 = insertelement <4 x float> %17812, float 0.000000e+00, i32 1
  %17814 = insertelement <4 x float> %17813, float 0.000000e+00, i32 2
  %17815 = insertelement <4 x float> %17814, float 0.000000e+00, i32 3
  %17816 = call <4 x float> @llvm.fma.f32.625(<4 x float> %17809, <4 x float> %17815, <4 x float> %17801)
  %17817 = extractelement <4 x float> %17816, i32 0
  %17818 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17819 = getelementptr inbounds i8, i8* %17818, i64 52
  %17820 = bitcast i8* %17819 to float*
  store float %17817, float* %17820, align 4
  %17821 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17822 = getelementptr inbounds i8, i8* %17821, i64 48
  %17823 = bitcast i8* %17822 to float*
  %17824 = load float, float* %17823, align 4
  %17825 = insertelement <4 x float> zeroinitializer, float %17824, i32 0
  %17826 = insertelement <4 x float> %17825, float 1.000000e+00, i32 1
  %17827 = insertelement <4 x float> %17826, float 1.000000e+00, i32 2
  %17828 = insertelement <4 x float> %17827, float 1.000000e+00, i32 3
  %17829 = getelementptr inbounds float, float* %1, i64 1
  %17830 = load float, float* %17829, align 4
  %17831 = insertelement <4 x float> zeroinitializer, float %17830, i32 0
  %17832 = insertelement <4 x float> %17831, float 0.000000e+00, i32 1
  %17833 = insertelement <4 x float> %17832, float 0.000000e+00, i32 2
  %17834 = insertelement <4 x float> %17833, float 0.000000e+00, i32 3
  %17835 = fmul <4 x float> %17828, %17834
  %17836 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17837 = getelementptr inbounds i8, i8* %17836, i64 52
  %17838 = bitcast i8* %17837 to float*
  %17839 = load float, float* %17838, align 4
  %17840 = insertelement <4 x float> zeroinitializer, float %17839, i32 0
  %17841 = insertelement <4 x float> %17840, float 1.000000e+00, i32 1
  %17842 = insertelement <4 x float> %17841, float 1.000000e+00, i32 2
  %17843 = insertelement <4 x float> %17842, float 1.000000e+00, i32 3
  %17844 = getelementptr inbounds float, float* %1, i64 5
  %17845 = load float, float* %17844, align 4
  %17846 = insertelement <4 x float> zeroinitializer, float %17845, i32 0
  %17847 = insertelement <4 x float> %17846, float 0.000000e+00, i32 1
  %17848 = insertelement <4 x float> %17847, float 0.000000e+00, i32 2
  %17849 = insertelement <4 x float> %17848, float 0.000000e+00, i32 3
  %17850 = call <4 x float> @llvm.fma.f32.626(<4 x float> %17843, <4 x float> %17849, <4 x float> %17835)
  %17851 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17852 = getelementptr inbounds i8, i8* %17851, i64 56
  %17853 = bitcast i8* %17852 to float*
  %17854 = load float, float* %17853, align 4
  %17855 = insertelement <4 x float> zeroinitializer, float %17854, i32 0
  %17856 = insertelement <4 x float> %17855, float 0.000000e+00, i32 1
  %17857 = insertelement <4 x float> %17856, float 0.000000e+00, i32 2
  %17858 = insertelement <4 x float> %17857, float 0.000000e+00, i32 3
  %17859 = getelementptr inbounds float, float* %1, i64 9
  %17860 = load float, float* %17859, align 4
  %17861 = insertelement <4 x float> zeroinitializer, float %17860, i32 0
  %17862 = insertelement <4 x float> %17861, float 0.000000e+00, i32 1
  %17863 = insertelement <4 x float> %17862, float 0.000000e+00, i32 2
  %17864 = insertelement <4 x float> %17863, float 0.000000e+00, i32 3
  %17865 = call <4 x float> @llvm.fma.f32.627(<4 x float> %17858, <4 x float> %17864, <4 x float> %17850)
  %17866 = extractelement <4 x float> %17865, i32 0
  %17867 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17868 = getelementptr inbounds i8, i8* %17867, i64 52
  %17869 = bitcast i8* %17868 to float*
  store float %17866, float* %17869, align 4
  %17870 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17871 = getelementptr inbounds i8, i8* %17870, i64 48
  %17872 = bitcast i8* %17871 to float*
  %17873 = load float, float* %17872, align 4
  %17874 = insertelement <4 x float> zeroinitializer, float %17873, i32 0
  %17875 = insertelement <4 x float> %17874, float 1.000000e+00, i32 1
  %17876 = insertelement <4 x float> %17875, float 1.000000e+00, i32 2
  %17877 = insertelement <4 x float> %17876, float 1.000000e+00, i32 3
  %17878 = getelementptr inbounds float, float* %1, i64 1
  %17879 = load float, float* %17878, align 4
  %17880 = insertelement <4 x float> zeroinitializer, float %17879, i32 0
  %17881 = insertelement <4 x float> %17880, float 0.000000e+00, i32 1
  %17882 = insertelement <4 x float> %17881, float 0.000000e+00, i32 2
  %17883 = insertelement <4 x float> %17882, float 0.000000e+00, i32 3
  %17884 = fmul <4 x float> %17877, %17883
  %17885 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17886 = getelementptr inbounds i8, i8* %17885, i64 52
  %17887 = bitcast i8* %17886 to float*
  %17888 = load float, float* %17887, align 4
  %17889 = insertelement <4 x float> zeroinitializer, float %17888, i32 0
  %17890 = insertelement <4 x float> %17889, float 1.000000e+00, i32 1
  %17891 = insertelement <4 x float> %17890, float 1.000000e+00, i32 2
  %17892 = insertelement <4 x float> %17891, float 1.000000e+00, i32 3
  %17893 = getelementptr inbounds float, float* %1, i64 5
  %17894 = load float, float* %17893, align 4
  %17895 = insertelement <4 x float> zeroinitializer, float %17894, i32 0
  %17896 = insertelement <4 x float> %17895, float 0.000000e+00, i32 1
  %17897 = insertelement <4 x float> %17896, float 0.000000e+00, i32 2
  %17898 = insertelement <4 x float> %17897, float 0.000000e+00, i32 3
  %17899 = call <4 x float> @llvm.fma.f32.628(<4 x float> %17892, <4 x float> %17898, <4 x float> %17884)
  %17900 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17901 = getelementptr inbounds i8, i8* %17900, i64 56
  %17902 = bitcast i8* %17901 to float*
  %17903 = load float, float* %17902, align 4
  %17904 = insertelement <4 x float> zeroinitializer, float %17903, i32 0
  %17905 = insertelement <4 x float> %17904, float 1.000000e+00, i32 1
  %17906 = insertelement <4 x float> %17905, float 1.000000e+00, i32 2
  %17907 = insertelement <4 x float> %17906, float 1.000000e+00, i32 3
  %17908 = getelementptr inbounds float, float* %1, i64 9
  %17909 = load float, float* %17908, align 4
  %17910 = insertelement <4 x float> zeroinitializer, float %17909, i32 0
  %17911 = insertelement <4 x float> %17910, float 0.000000e+00, i32 1
  %17912 = insertelement <4 x float> %17911, float 0.000000e+00, i32 2
  %17913 = insertelement <4 x float> %17912, float 0.000000e+00, i32 3
  %17914 = call <4 x float> @llvm.fma.f32.629(<4 x float> %17907, <4 x float> %17913, <4 x float> %17899)
  %17915 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17916 = getelementptr inbounds i8, i8* %17915, i64 60
  %17917 = bitcast i8* %17916 to float*
  %17918 = load float, float* %17917, align 4
  %17919 = insertelement <4 x float> zeroinitializer, float %17918, i32 0
  %17920 = insertelement <4 x float> %17919, float 0.000000e+00, i32 1
  %17921 = insertelement <4 x float> %17920, float 0.000000e+00, i32 2
  %17922 = insertelement <4 x float> %17921, float 0.000000e+00, i32 3
  %17923 = getelementptr inbounds float, float* %1, i64 13
  %17924 = load float, float* %17923, align 4
  %17925 = insertelement <4 x float> zeroinitializer, float %17924, i32 0
  %17926 = insertelement <4 x float> %17925, float 0.000000e+00, i32 1
  %17927 = insertelement <4 x float> %17926, float 0.000000e+00, i32 2
  %17928 = insertelement <4 x float> %17927, float 0.000000e+00, i32 3
  %17929 = call <4 x float> @llvm.fma.f32.630(<4 x float> %17922, <4 x float> %17928, <4 x float> %17914)
  %17930 = extractelement <4 x float> %17929, i32 0
  %17931 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17932 = getelementptr inbounds i8, i8* %17931, i64 52
  %17933 = bitcast i8* %17932 to float*
  store float %17930, float* %17933, align 4
  %17934 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17935 = getelementptr inbounds i8, i8* %17934, i64 48
  %17936 = bitcast i8* %17935 to float*
  %17937 = load float, float* %17936, align 4
  %17938 = insertelement <4 x float> zeroinitializer, float %17937, i32 0
  %17939 = insertelement <4 x float> %17938, float 0.000000e+00, i32 1
  %17940 = insertelement <4 x float> %17939, float 0.000000e+00, i32 2
  %17941 = insertelement <4 x float> %17940, float 0.000000e+00, i32 3
  %17942 = getelementptr inbounds float, float* %1, i64 2
  %17943 = load float, float* %17942, align 4
  %17944 = insertelement <4 x float> zeroinitializer, float %17943, i32 0
  %17945 = insertelement <4 x float> %17944, float 0.000000e+00, i32 1
  %17946 = insertelement <4 x float> %17945, float 0.000000e+00, i32 2
  %17947 = insertelement <4 x float> %17946, float 0.000000e+00, i32 3
  %17948 = call <4 x float> @llvm.fma.f32.631(<4 x float> %17941, <4 x float> %17947, <4 x float> zeroinitializer)
  %17949 = extractelement <4 x float> %17948, i32 0
  %17950 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17951 = getelementptr inbounds i8, i8* %17950, i64 56
  %17952 = bitcast i8* %17951 to float*
  store float %17949, float* %17952, align 4
  %17953 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17954 = getelementptr inbounds i8, i8* %17953, i64 48
  %17955 = bitcast i8* %17954 to float*
  %17956 = load float, float* %17955, align 4
  %17957 = insertelement <4 x float> zeroinitializer, float %17956, i32 0
  %17958 = insertelement <4 x float> %17957, float 1.000000e+00, i32 1
  %17959 = insertelement <4 x float> %17958, float 1.000000e+00, i32 2
  %17960 = insertelement <4 x float> %17959, float 1.000000e+00, i32 3
  %17961 = getelementptr inbounds float, float* %1, i64 2
  %17962 = load float, float* %17961, align 4
  %17963 = insertelement <4 x float> zeroinitializer, float %17962, i32 0
  %17964 = insertelement <4 x float> %17963, float 0.000000e+00, i32 1
  %17965 = insertelement <4 x float> %17964, float 0.000000e+00, i32 2
  %17966 = insertelement <4 x float> %17965, float 0.000000e+00, i32 3
  %17967 = fmul <4 x float> %17960, %17966
  %17968 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17969 = getelementptr inbounds i8, i8* %17968, i64 52
  %17970 = bitcast i8* %17969 to float*
  %17971 = load float, float* %17970, align 4
  %17972 = insertelement <4 x float> zeroinitializer, float %17971, i32 0
  %17973 = insertelement <4 x float> %17972, float 0.000000e+00, i32 1
  %17974 = insertelement <4 x float> %17973, float 0.000000e+00, i32 2
  %17975 = insertelement <4 x float> %17974, float 0.000000e+00, i32 3
  %17976 = getelementptr inbounds float, float* %1, i64 6
  %17977 = load float, float* %17976, align 4
  %17978 = insertelement <4 x float> zeroinitializer, float %17977, i32 0
  %17979 = insertelement <4 x float> %17978, float 0.000000e+00, i32 1
  %17980 = insertelement <4 x float> %17979, float 0.000000e+00, i32 2
  %17981 = insertelement <4 x float> %17980, float 0.000000e+00, i32 3
  %17982 = call <4 x float> @llvm.fma.f32.632(<4 x float> %17975, <4 x float> %17981, <4 x float> %17967)
  %17983 = extractelement <4 x float> %17982, i32 0
  %17984 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17985 = getelementptr inbounds i8, i8* %17984, i64 56
  %17986 = bitcast i8* %17985 to float*
  store float %17983, float* %17986, align 4
  %17987 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %17988 = getelementptr inbounds i8, i8* %17987, i64 48
  %17989 = bitcast i8* %17988 to float*
  %17990 = load float, float* %17989, align 4
  %17991 = insertelement <4 x float> zeroinitializer, float %17990, i32 0
  %17992 = insertelement <4 x float> %17991, float 1.000000e+00, i32 1
  %17993 = insertelement <4 x float> %17992, float 1.000000e+00, i32 2
  %17994 = insertelement <4 x float> %17993, float 1.000000e+00, i32 3
  %17995 = getelementptr inbounds float, float* %1, i64 2
  %17996 = load float, float* %17995, align 4
  %17997 = insertelement <4 x float> zeroinitializer, float %17996, i32 0
  %17998 = insertelement <4 x float> %17997, float 0.000000e+00, i32 1
  %17999 = insertelement <4 x float> %17998, float 0.000000e+00, i32 2
  %18000 = insertelement <4 x float> %17999, float 0.000000e+00, i32 3
  %18001 = fmul <4 x float> %17994, %18000
  %18002 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18003 = getelementptr inbounds i8, i8* %18002, i64 52
  %18004 = bitcast i8* %18003 to float*
  %18005 = load float, float* %18004, align 4
  %18006 = insertelement <4 x float> zeroinitializer, float %18005, i32 0
  %18007 = insertelement <4 x float> %18006, float 1.000000e+00, i32 1
  %18008 = insertelement <4 x float> %18007, float 1.000000e+00, i32 2
  %18009 = insertelement <4 x float> %18008, float 1.000000e+00, i32 3
  %18010 = getelementptr inbounds float, float* %1, i64 6
  %18011 = load float, float* %18010, align 4
  %18012 = insertelement <4 x float> zeroinitializer, float %18011, i32 0
  %18013 = insertelement <4 x float> %18012, float 0.000000e+00, i32 1
  %18014 = insertelement <4 x float> %18013, float 0.000000e+00, i32 2
  %18015 = insertelement <4 x float> %18014, float 0.000000e+00, i32 3
  %18016 = call <4 x float> @llvm.fma.f32.633(<4 x float> %18009, <4 x float> %18015, <4 x float> %18001)
  %18017 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18018 = getelementptr inbounds i8, i8* %18017, i64 56
  %18019 = bitcast i8* %18018 to float*
  %18020 = load float, float* %18019, align 4
  %18021 = insertelement <4 x float> zeroinitializer, float %18020, i32 0
  %18022 = insertelement <4 x float> %18021, float 0.000000e+00, i32 1
  %18023 = insertelement <4 x float> %18022, float 0.000000e+00, i32 2
  %18024 = insertelement <4 x float> %18023, float 0.000000e+00, i32 3
  %18025 = getelementptr inbounds float, float* %1, i64 10
  %18026 = load float, float* %18025, align 4
  %18027 = insertelement <4 x float> zeroinitializer, float %18026, i32 0
  %18028 = insertelement <4 x float> %18027, float 0.000000e+00, i32 1
  %18029 = insertelement <4 x float> %18028, float 0.000000e+00, i32 2
  %18030 = insertelement <4 x float> %18029, float 0.000000e+00, i32 3
  %18031 = call <4 x float> @llvm.fma.f32.634(<4 x float> %18024, <4 x float> %18030, <4 x float> %18016)
  %18032 = extractelement <4 x float> %18031, i32 0
  %18033 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18034 = getelementptr inbounds i8, i8* %18033, i64 56
  %18035 = bitcast i8* %18034 to float*
  store float %18032, float* %18035, align 4
  %18036 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18037 = getelementptr inbounds i8, i8* %18036, i64 48
  %18038 = bitcast i8* %18037 to float*
  %18039 = load float, float* %18038, align 4
  %18040 = insertelement <4 x float> zeroinitializer, float %18039, i32 0
  %18041 = insertelement <4 x float> %18040, float 1.000000e+00, i32 1
  %18042 = insertelement <4 x float> %18041, float 1.000000e+00, i32 2
  %18043 = insertelement <4 x float> %18042, float 1.000000e+00, i32 3
  %18044 = getelementptr inbounds float, float* %1, i64 2
  %18045 = load float, float* %18044, align 4
  %18046 = insertelement <4 x float> zeroinitializer, float %18045, i32 0
  %18047 = insertelement <4 x float> %18046, float 0.000000e+00, i32 1
  %18048 = insertelement <4 x float> %18047, float 0.000000e+00, i32 2
  %18049 = insertelement <4 x float> %18048, float 0.000000e+00, i32 3
  %18050 = fmul <4 x float> %18043, %18049
  %18051 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18052 = getelementptr inbounds i8, i8* %18051, i64 52
  %18053 = bitcast i8* %18052 to float*
  %18054 = load float, float* %18053, align 4
  %18055 = insertelement <4 x float> zeroinitializer, float %18054, i32 0
  %18056 = insertelement <4 x float> %18055, float 1.000000e+00, i32 1
  %18057 = insertelement <4 x float> %18056, float 1.000000e+00, i32 2
  %18058 = insertelement <4 x float> %18057, float 1.000000e+00, i32 3
  %18059 = getelementptr inbounds float, float* %1, i64 6
  %18060 = load float, float* %18059, align 4
  %18061 = insertelement <4 x float> zeroinitializer, float %18060, i32 0
  %18062 = insertelement <4 x float> %18061, float 0.000000e+00, i32 1
  %18063 = insertelement <4 x float> %18062, float 0.000000e+00, i32 2
  %18064 = insertelement <4 x float> %18063, float 0.000000e+00, i32 3
  %18065 = call <4 x float> @llvm.fma.f32.635(<4 x float> %18058, <4 x float> %18064, <4 x float> %18050)
  %18066 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18067 = getelementptr inbounds i8, i8* %18066, i64 56
  %18068 = bitcast i8* %18067 to float*
  %18069 = load float, float* %18068, align 4
  %18070 = insertelement <4 x float> zeroinitializer, float %18069, i32 0
  %18071 = insertelement <4 x float> %18070, float 1.000000e+00, i32 1
  %18072 = insertelement <4 x float> %18071, float 1.000000e+00, i32 2
  %18073 = insertelement <4 x float> %18072, float 1.000000e+00, i32 3
  %18074 = getelementptr inbounds float, float* %1, i64 10
  %18075 = load float, float* %18074, align 4
  %18076 = insertelement <4 x float> zeroinitializer, float %18075, i32 0
  %18077 = insertelement <4 x float> %18076, float 0.000000e+00, i32 1
  %18078 = insertelement <4 x float> %18077, float 0.000000e+00, i32 2
  %18079 = insertelement <4 x float> %18078, float 0.000000e+00, i32 3
  %18080 = call <4 x float> @llvm.fma.f32.636(<4 x float> %18073, <4 x float> %18079, <4 x float> %18065)
  %18081 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18082 = getelementptr inbounds i8, i8* %18081, i64 60
  %18083 = bitcast i8* %18082 to float*
  %18084 = load float, float* %18083, align 4
  %18085 = insertelement <4 x float> zeroinitializer, float %18084, i32 0
  %18086 = insertelement <4 x float> %18085, float 0.000000e+00, i32 1
  %18087 = insertelement <4 x float> %18086, float 0.000000e+00, i32 2
  %18088 = insertelement <4 x float> %18087, float 0.000000e+00, i32 3
  %18089 = getelementptr inbounds float, float* %1, i64 14
  %18090 = load float, float* %18089, align 4
  %18091 = insertelement <4 x float> zeroinitializer, float %18090, i32 0
  %18092 = insertelement <4 x float> %18091, float 0.000000e+00, i32 1
  %18093 = insertelement <4 x float> %18092, float 0.000000e+00, i32 2
  %18094 = insertelement <4 x float> %18093, float 0.000000e+00, i32 3
  %18095 = call <4 x float> @llvm.fma.f32.637(<4 x float> %18088, <4 x float> %18094, <4 x float> %18080)
  %18096 = extractelement <4 x float> %18095, i32 0
  %18097 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18098 = getelementptr inbounds i8, i8* %18097, i64 56
  %18099 = bitcast i8* %18098 to float*
  store float %18096, float* %18099, align 4
  %18100 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18101 = getelementptr inbounds i8, i8* %18100, i64 48
  %18102 = bitcast i8* %18101 to float*
  %18103 = load float, float* %18102, align 4
  %18104 = insertelement <4 x float> zeroinitializer, float %18103, i32 0
  %18105 = insertelement <4 x float> %18104, float 0.000000e+00, i32 1
  %18106 = insertelement <4 x float> %18105, float 0.000000e+00, i32 2
  %18107 = insertelement <4 x float> %18106, float 0.000000e+00, i32 3
  %18108 = getelementptr inbounds float, float* %1, i64 3
  %18109 = load float, float* %18108, align 4
  %18110 = insertelement <4 x float> zeroinitializer, float %18109, i32 0
  %18111 = insertelement <4 x float> %18110, float 0.000000e+00, i32 1
  %18112 = insertelement <4 x float> %18111, float 0.000000e+00, i32 2
  %18113 = insertelement <4 x float> %18112, float 0.000000e+00, i32 3
  %18114 = call <4 x float> @llvm.fma.f32.638(<4 x float> %18107, <4 x float> %18113, <4 x float> zeroinitializer)
  %18115 = extractelement <4 x float> %18114, i32 0
  %18116 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18117 = getelementptr inbounds i8, i8* %18116, i64 60
  %18118 = bitcast i8* %18117 to float*
  store float %18115, float* %18118, align 4
  %18119 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18120 = getelementptr inbounds i8, i8* %18119, i64 48
  %18121 = bitcast i8* %18120 to float*
  %18122 = load float, float* %18121, align 4
  %18123 = insertelement <4 x float> zeroinitializer, float %18122, i32 0
  %18124 = insertelement <4 x float> %18123, float 1.000000e+00, i32 1
  %18125 = insertelement <4 x float> %18124, float 1.000000e+00, i32 2
  %18126 = insertelement <4 x float> %18125, float 1.000000e+00, i32 3
  %18127 = getelementptr inbounds float, float* %1, i64 3
  %18128 = load float, float* %18127, align 4
  %18129 = insertelement <4 x float> zeroinitializer, float %18128, i32 0
  %18130 = insertelement <4 x float> %18129, float 0.000000e+00, i32 1
  %18131 = insertelement <4 x float> %18130, float 0.000000e+00, i32 2
  %18132 = insertelement <4 x float> %18131, float 0.000000e+00, i32 3
  %18133 = fmul <4 x float> %18126, %18132
  %18134 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18135 = getelementptr inbounds i8, i8* %18134, i64 52
  %18136 = bitcast i8* %18135 to float*
  %18137 = load float, float* %18136, align 4
  %18138 = insertelement <4 x float> zeroinitializer, float %18137, i32 0
  %18139 = insertelement <4 x float> %18138, float 0.000000e+00, i32 1
  %18140 = insertelement <4 x float> %18139, float 0.000000e+00, i32 2
  %18141 = insertelement <4 x float> %18140, float 0.000000e+00, i32 3
  %18142 = getelementptr inbounds float, float* %1, i64 7
  %18143 = load float, float* %18142, align 4
  %18144 = insertelement <4 x float> zeroinitializer, float %18143, i32 0
  %18145 = insertelement <4 x float> %18144, float 0.000000e+00, i32 1
  %18146 = insertelement <4 x float> %18145, float 0.000000e+00, i32 2
  %18147 = insertelement <4 x float> %18146, float 0.000000e+00, i32 3
  %18148 = call <4 x float> @llvm.fma.f32.639(<4 x float> %18141, <4 x float> %18147, <4 x float> %18133)
  %18149 = extractelement <4 x float> %18148, i32 0
  %18150 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18151 = getelementptr inbounds i8, i8* %18150, i64 60
  %18152 = bitcast i8* %18151 to float*
  store float %18149, float* %18152, align 4
  %18153 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18154 = getelementptr inbounds i8, i8* %18153, i64 48
  %18155 = bitcast i8* %18154 to float*
  %18156 = load float, float* %18155, align 4
  %18157 = insertelement <4 x float> zeroinitializer, float %18156, i32 0
  %18158 = insertelement <4 x float> %18157, float 1.000000e+00, i32 1
  %18159 = insertelement <4 x float> %18158, float 1.000000e+00, i32 2
  %18160 = insertelement <4 x float> %18159, float 1.000000e+00, i32 3
  %18161 = getelementptr inbounds float, float* %1, i64 3
  %18162 = load float, float* %18161, align 4
  %18163 = insertelement <4 x float> zeroinitializer, float %18162, i32 0
  %18164 = insertelement <4 x float> %18163, float 0.000000e+00, i32 1
  %18165 = insertelement <4 x float> %18164, float 0.000000e+00, i32 2
  %18166 = insertelement <4 x float> %18165, float 0.000000e+00, i32 3
  %18167 = fmul <4 x float> %18160, %18166
  %18168 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18169 = getelementptr inbounds i8, i8* %18168, i64 52
  %18170 = bitcast i8* %18169 to float*
  %18171 = load float, float* %18170, align 4
  %18172 = insertelement <4 x float> zeroinitializer, float %18171, i32 0
  %18173 = insertelement <4 x float> %18172, float 1.000000e+00, i32 1
  %18174 = insertelement <4 x float> %18173, float 1.000000e+00, i32 2
  %18175 = insertelement <4 x float> %18174, float 1.000000e+00, i32 3
  %18176 = getelementptr inbounds float, float* %1, i64 7
  %18177 = load float, float* %18176, align 4
  %18178 = insertelement <4 x float> zeroinitializer, float %18177, i32 0
  %18179 = insertelement <4 x float> %18178, float 0.000000e+00, i32 1
  %18180 = insertelement <4 x float> %18179, float 0.000000e+00, i32 2
  %18181 = insertelement <4 x float> %18180, float 0.000000e+00, i32 3
  %18182 = call <4 x float> @llvm.fma.f32.640(<4 x float> %18175, <4 x float> %18181, <4 x float> %18167)
  %18183 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18184 = getelementptr inbounds i8, i8* %18183, i64 56
  %18185 = bitcast i8* %18184 to float*
  %18186 = load float, float* %18185, align 4
  %18187 = insertelement <4 x float> zeroinitializer, float %18186, i32 0
  %18188 = insertelement <4 x float> %18187, float 0.000000e+00, i32 1
  %18189 = insertelement <4 x float> %18188, float 0.000000e+00, i32 2
  %18190 = insertelement <4 x float> %18189, float 0.000000e+00, i32 3
  %18191 = getelementptr inbounds float, float* %1, i64 11
  %18192 = load float, float* %18191, align 4
  %18193 = insertelement <4 x float> zeroinitializer, float %18192, i32 0
  %18194 = insertelement <4 x float> %18193, float 0.000000e+00, i32 1
  %18195 = insertelement <4 x float> %18194, float 0.000000e+00, i32 2
  %18196 = insertelement <4 x float> %18195, float 0.000000e+00, i32 3
  %18197 = call <4 x float> @llvm.fma.f32.641(<4 x float> %18190, <4 x float> %18196, <4 x float> %18182)
  %18198 = extractelement <4 x float> %18197, i32 0
  %18199 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18200 = getelementptr inbounds i8, i8* %18199, i64 60
  %18201 = bitcast i8* %18200 to float*
  store float %18198, float* %18201, align 4
  %18202 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18203 = getelementptr inbounds i8, i8* %18202, i64 48
  %18204 = bitcast i8* %18203 to float*
  %18205 = load float, float* %18204, align 4
  %18206 = insertelement <4 x float> zeroinitializer, float %18205, i32 0
  %18207 = insertelement <4 x float> %18206, float 1.000000e+00, i32 1
  %18208 = insertelement <4 x float> %18207, float 1.000000e+00, i32 2
  %18209 = insertelement <4 x float> %18208, float 1.000000e+00, i32 3
  %18210 = getelementptr inbounds float, float* %1, i64 3
  %18211 = load float, float* %18210, align 4
  %18212 = insertelement <4 x float> zeroinitializer, float %18211, i32 0
  %18213 = insertelement <4 x float> %18212, float 0.000000e+00, i32 1
  %18214 = insertelement <4 x float> %18213, float 0.000000e+00, i32 2
  %18215 = insertelement <4 x float> %18214, float 0.000000e+00, i32 3
  %18216 = fmul <4 x float> %18209, %18215
  %18217 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18218 = getelementptr inbounds i8, i8* %18217, i64 52
  %18219 = bitcast i8* %18218 to float*
  %18220 = load float, float* %18219, align 4
  %18221 = insertelement <4 x float> zeroinitializer, float %18220, i32 0
  %18222 = insertelement <4 x float> %18221, float 1.000000e+00, i32 1
  %18223 = insertelement <4 x float> %18222, float 1.000000e+00, i32 2
  %18224 = insertelement <4 x float> %18223, float 1.000000e+00, i32 3
  %18225 = getelementptr inbounds float, float* %1, i64 7
  %18226 = load float, float* %18225, align 4
  %18227 = insertelement <4 x float> zeroinitializer, float %18226, i32 0
  %18228 = insertelement <4 x float> %18227, float 0.000000e+00, i32 1
  %18229 = insertelement <4 x float> %18228, float 0.000000e+00, i32 2
  %18230 = insertelement <4 x float> %18229, float 0.000000e+00, i32 3
  %18231 = call <4 x float> @llvm.fma.f32.642(<4 x float> %18224, <4 x float> %18230, <4 x float> %18216)
  %18232 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18233 = getelementptr inbounds i8, i8* %18232, i64 56
  %18234 = bitcast i8* %18233 to float*
  %18235 = load float, float* %18234, align 4
  %18236 = insertelement <4 x float> zeroinitializer, float %18235, i32 0
  %18237 = insertelement <4 x float> %18236, float 1.000000e+00, i32 1
  %18238 = insertelement <4 x float> %18237, float 1.000000e+00, i32 2
  %18239 = insertelement <4 x float> %18238, float 1.000000e+00, i32 3
  %18240 = getelementptr inbounds float, float* %1, i64 11
  %18241 = load float, float* %18240, align 4
  %18242 = insertelement <4 x float> zeroinitializer, float %18241, i32 0
  %18243 = insertelement <4 x float> %18242, float 0.000000e+00, i32 1
  %18244 = insertelement <4 x float> %18243, float 0.000000e+00, i32 2
  %18245 = insertelement <4 x float> %18244, float 0.000000e+00, i32 3
  %18246 = call <4 x float> @llvm.fma.f32.643(<4 x float> %18239, <4 x float> %18245, <4 x float> %18231)
  %18247 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18248 = getelementptr inbounds i8, i8* %18247, i64 60
  %18249 = bitcast i8* %18248 to float*
  %18250 = load float, float* %18249, align 4
  %18251 = insertelement <4 x float> zeroinitializer, float %18250, i32 0
  %18252 = insertelement <4 x float> %18251, float 0.000000e+00, i32 1
  %18253 = insertelement <4 x float> %18252, float 0.000000e+00, i32 2
  %18254 = insertelement <4 x float> %18253, float 0.000000e+00, i32 3
  %18255 = getelementptr inbounds float, float* %1, i64 15
  %18256 = load float, float* %18255, align 4
  %18257 = insertelement <4 x float> zeroinitializer, float %18256, i32 0
  %18258 = insertelement <4 x float> %18257, float 0.000000e+00, i32 1
  %18259 = insertelement <4 x float> %18258, float 0.000000e+00, i32 2
  %18260 = insertelement <4 x float> %18259, float 0.000000e+00, i32 3
  %18261 = call <4 x float> @llvm.fma.f32.644(<4 x float> %18254, <4 x float> %18260, <4 x float> %18246)
  %18262 = extractelement <4 x float> %18261, i32 0
  %18263 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18264 = getelementptr inbounds i8, i8* %18263, i64 60
  %18265 = bitcast i8* %18264 to float*
  store float %18262, float* %18265, align 4
  %18266 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18267 = bitcast i8* %18266 to float*
  store float 0.000000e+00, float* %18267, align 4
  %18268 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18269 = bitcast i8* %18268 to float*
  %18270 = load float, float* %18269, align 4
  %18271 = insertelement <4 x float> zeroinitializer, float %18270, i32 0
  %18272 = insertelement <4 x float> %18271, float 0.000000e+00, i32 1
  %18273 = insertelement <4 x float> %18272, float 0.000000e+00, i32 2
  %18274 = insertelement <4 x float> %18273, float 0.000000e+00, i32 3
  %18275 = load float, float* %2, align 4
  %18276 = insertelement <4 x float> zeroinitializer, float %18275, i32 0
  %18277 = insertelement <4 x float> %18276, float 0.000000e+00, i32 1
  %18278 = insertelement <4 x float> %18277, float 0.000000e+00, i32 2
  %18279 = insertelement <4 x float> %18278, float 0.000000e+00, i32 3
  %18280 = call <4 x float> @llvm.fma.f32.645(<4 x float> %18274, <4 x float> %18279, <4 x float> zeroinitializer)
  %18281 = extractelement <4 x float> %18280, i32 0
  %18282 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18283 = bitcast i8* %18282 to float*
  store float %18281, float* %18283, align 4
  %18284 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18285 = bitcast i8* %18284 to float*
  %18286 = load float, float* %18285, align 4
  %18287 = insertelement <4 x float> zeroinitializer, float %18286, i32 0
  %18288 = insertelement <4 x float> %18287, float 1.000000e+00, i32 1
  %18289 = insertelement <4 x float> %18288, float 1.000000e+00, i32 2
  %18290 = insertelement <4 x float> %18289, float 1.000000e+00, i32 3
  %18291 = load float, float* %2, align 4
  %18292 = insertelement <4 x float> zeroinitializer, float %18291, i32 0
  %18293 = insertelement <4 x float> %18292, float 0.000000e+00, i32 1
  %18294 = insertelement <4 x float> %18293, float 0.000000e+00, i32 2
  %18295 = insertelement <4 x float> %18294, float 0.000000e+00, i32 3
  %18296 = fmul <4 x float> %18290, %18295
  %18297 = fadd <4 x float> %18296, zeroinitializer
  %18298 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18299 = getelementptr inbounds i8, i8* %18298, i64 4
  %18300 = bitcast i8* %18299 to float*
  %18301 = load float, float* %18300, align 4
  %18302 = insertelement <4 x float> zeroinitializer, float %18301, i32 0
  %18303 = insertelement <4 x float> %18302, float 0.000000e+00, i32 1
  %18304 = insertelement <4 x float> %18303, float 0.000000e+00, i32 2
  %18305 = insertelement <4 x float> %18304, float 0.000000e+00, i32 3
  %18306 = getelementptr inbounds float, float* %2, i64 4
  %18307 = load float, float* %18306, align 4
  %18308 = insertelement <4 x float> zeroinitializer, float %18307, i32 0
  %18309 = insertelement <4 x float> %18308, float 0.000000e+00, i32 1
  %18310 = insertelement <4 x float> %18309, float 0.000000e+00, i32 2
  %18311 = insertelement <4 x float> %18310, float 0.000000e+00, i32 3
  %18312 = call <4 x float> @llvm.fma.f32.646(<4 x float> %18305, <4 x float> %18311, <4 x float> %18297)
  %18313 = extractelement <4 x float> %18312, i32 0
  %18314 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18315 = bitcast i8* %18314 to float*
  store float %18313, float* %18315, align 4
  %18316 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18317 = bitcast i8* %18316 to float*
  %18318 = load float, float* %18317, align 4
  %18319 = insertelement <4 x float> zeroinitializer, float %18318, i32 0
  %18320 = insertelement <4 x float> %18319, float 1.000000e+00, i32 1
  %18321 = insertelement <4 x float> %18320, float 1.000000e+00, i32 2
  %18322 = insertelement <4 x float> %18321, float 1.000000e+00, i32 3
  %18323 = load float, float* %2, align 4
  %18324 = insertelement <4 x float> zeroinitializer, float %18323, i32 0
  %18325 = insertelement <4 x float> %18324, float 0.000000e+00, i32 1
  %18326 = insertelement <4 x float> %18325, float 0.000000e+00, i32 2
  %18327 = insertelement <4 x float> %18326, float 0.000000e+00, i32 3
  %18328 = fmul <4 x float> %18322, %18327
  %18329 = fadd <4 x float> %18328, zeroinitializer
  %18330 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18331 = getelementptr inbounds i8, i8* %18330, i64 4
  %18332 = bitcast i8* %18331 to float*
  %18333 = load float, float* %18332, align 4
  %18334 = insertelement <4 x float> zeroinitializer, float %18333, i32 0
  %18335 = insertelement <4 x float> %18334, float 1.000000e+00, i32 1
  %18336 = insertelement <4 x float> %18335, float 1.000000e+00, i32 2
  %18337 = insertelement <4 x float> %18336, float 1.000000e+00, i32 3
  %18338 = getelementptr inbounds float, float* %2, i64 4
  %18339 = load float, float* %18338, align 4
  %18340 = insertelement <4 x float> zeroinitializer, float %18339, i32 0
  %18341 = insertelement <4 x float> %18340, float 0.000000e+00, i32 1
  %18342 = insertelement <4 x float> %18341, float 0.000000e+00, i32 2
  %18343 = insertelement <4 x float> %18342, float 0.000000e+00, i32 3
  %18344 = call <4 x float> @llvm.fma.f32.647(<4 x float> %18337, <4 x float> %18343, <4 x float> %18329)
  %18345 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18346 = getelementptr inbounds i8, i8* %18345, i64 8
  %18347 = bitcast i8* %18346 to float*
  %18348 = load float, float* %18347, align 4
  %18349 = insertelement <4 x float> zeroinitializer, float %18348, i32 0
  %18350 = insertelement <4 x float> %18349, float 0.000000e+00, i32 1
  %18351 = insertelement <4 x float> %18350, float 0.000000e+00, i32 2
  %18352 = insertelement <4 x float> %18351, float 0.000000e+00, i32 3
  %18353 = getelementptr inbounds float, float* %2, i64 8
  %18354 = load float, float* %18353, align 4
  %18355 = insertelement <4 x float> zeroinitializer, float %18354, i32 0
  %18356 = insertelement <4 x float> %18355, float 0.000000e+00, i32 1
  %18357 = insertelement <4 x float> %18356, float 0.000000e+00, i32 2
  %18358 = insertelement <4 x float> %18357, float 0.000000e+00, i32 3
  %18359 = call <4 x float> @llvm.fma.f32.648(<4 x float> %18352, <4 x float> %18358, <4 x float> %18344)
  %18360 = extractelement <4 x float> %18359, i32 0
  %18361 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18362 = bitcast i8* %18361 to float*
  store float %18360, float* %18362, align 4
  %18363 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18364 = bitcast i8* %18363 to float*
  %18365 = load float, float* %18364, align 4
  %18366 = insertelement <4 x float> zeroinitializer, float %18365, i32 0
  %18367 = insertelement <4 x float> %18366, float 1.000000e+00, i32 1
  %18368 = insertelement <4 x float> %18367, float 1.000000e+00, i32 2
  %18369 = insertelement <4 x float> %18368, float 1.000000e+00, i32 3
  %18370 = load float, float* %2, align 4
  %18371 = insertelement <4 x float> zeroinitializer, float %18370, i32 0
  %18372 = insertelement <4 x float> %18371, float 0.000000e+00, i32 1
  %18373 = insertelement <4 x float> %18372, float 0.000000e+00, i32 2
  %18374 = insertelement <4 x float> %18373, float 0.000000e+00, i32 3
  %18375 = fmul <4 x float> %18369, %18374
  %18376 = fadd <4 x float> %18375, zeroinitializer
  %18377 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18378 = getelementptr inbounds i8, i8* %18377, i64 4
  %18379 = bitcast i8* %18378 to float*
  %18380 = load float, float* %18379, align 4
  %18381 = insertelement <4 x float> zeroinitializer, float %18380, i32 0
  %18382 = insertelement <4 x float> %18381, float 1.000000e+00, i32 1
  %18383 = insertelement <4 x float> %18382, float 1.000000e+00, i32 2
  %18384 = insertelement <4 x float> %18383, float 1.000000e+00, i32 3
  %18385 = getelementptr inbounds float, float* %2, i64 4
  %18386 = load float, float* %18385, align 4
  %18387 = insertelement <4 x float> zeroinitializer, float %18386, i32 0
  %18388 = insertelement <4 x float> %18387, float 0.000000e+00, i32 1
  %18389 = insertelement <4 x float> %18388, float 0.000000e+00, i32 2
  %18390 = insertelement <4 x float> %18389, float 0.000000e+00, i32 3
  %18391 = call <4 x float> @llvm.fma.f32.649(<4 x float> %18384, <4 x float> %18390, <4 x float> %18376)
  %18392 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18393 = getelementptr inbounds i8, i8* %18392, i64 8
  %18394 = bitcast i8* %18393 to float*
  %18395 = load float, float* %18394, align 4
  %18396 = insertelement <4 x float> zeroinitializer, float %18395, i32 0
  %18397 = insertelement <4 x float> %18396, float 1.000000e+00, i32 1
  %18398 = insertelement <4 x float> %18397, float 1.000000e+00, i32 2
  %18399 = insertelement <4 x float> %18398, float 1.000000e+00, i32 3
  %18400 = getelementptr inbounds float, float* %2, i64 8
  %18401 = load float, float* %18400, align 4
  %18402 = insertelement <4 x float> zeroinitializer, float %18401, i32 0
  %18403 = insertelement <4 x float> %18402, float 0.000000e+00, i32 1
  %18404 = insertelement <4 x float> %18403, float 0.000000e+00, i32 2
  %18405 = insertelement <4 x float> %18404, float 0.000000e+00, i32 3
  %18406 = call <4 x float> @llvm.fma.f32.650(<4 x float> %18399, <4 x float> %18405, <4 x float> %18391)
  %18407 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18408 = getelementptr inbounds i8, i8* %18407, i64 12
  %18409 = bitcast i8* %18408 to float*
  %18410 = load float, float* %18409, align 4
  %18411 = insertelement <4 x float> zeroinitializer, float %18410, i32 0
  %18412 = insertelement <4 x float> %18411, float 0.000000e+00, i32 1
  %18413 = insertelement <4 x float> %18412, float 0.000000e+00, i32 2
  %18414 = insertelement <4 x float> %18413, float 0.000000e+00, i32 3
  %18415 = getelementptr inbounds float, float* %2, i64 12
  %18416 = load float, float* %18415, align 4
  %18417 = insertelement <4 x float> zeroinitializer, float %18416, i32 0
  %18418 = insertelement <4 x float> %18417, float 0.000000e+00, i32 1
  %18419 = insertelement <4 x float> %18418, float 0.000000e+00, i32 2
  %18420 = insertelement <4 x float> %18419, float 0.000000e+00, i32 3
  %18421 = call <4 x float> @llvm.fma.f32.651(<4 x float> %18414, <4 x float> %18420, <4 x float> %18406)
  %18422 = extractelement <4 x float> %18421, i32 0
  %18423 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18424 = bitcast i8* %18423 to float*
  store float %18422, float* %18424, align 4
  %18425 = extractelement <4 x float> %18421, i32 1
  %18426 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18427 = getelementptr inbounds i8, i8* %18426, i64 4
  %18428 = bitcast i8* %18427 to float*
  store float %18425, float* %18428, align 4
  %18429 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18430 = bitcast i8* %18429 to float*
  %18431 = load float, float* %18430, align 4
  %18432 = insertelement <4 x float> zeroinitializer, float %18431, i32 0
  %18433 = insertelement <4 x float> %18432, float 0.000000e+00, i32 1
  %18434 = insertelement <4 x float> %18433, float 0.000000e+00, i32 2
  %18435 = insertelement <4 x float> %18434, float 0.000000e+00, i32 3
  %18436 = getelementptr inbounds float, float* %2, i64 1
  %18437 = load float, float* %18436, align 4
  %18438 = insertelement <4 x float> zeroinitializer, float %18437, i32 0
  %18439 = insertelement <4 x float> %18438, float 0.000000e+00, i32 1
  %18440 = insertelement <4 x float> %18439, float 0.000000e+00, i32 2
  %18441 = insertelement <4 x float> %18440, float 0.000000e+00, i32 3
  %18442 = call <4 x float> @llvm.fma.f32.652(<4 x float> %18435, <4 x float> %18441, <4 x float> zeroinitializer)
  %18443 = extractelement <4 x float> %18442, i32 0
  %18444 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18445 = getelementptr inbounds i8, i8* %18444, i64 4
  %18446 = bitcast i8* %18445 to float*
  store float %18443, float* %18446, align 4
  %18447 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18448 = bitcast i8* %18447 to float*
  %18449 = load float, float* %18448, align 4
  %18450 = insertelement <4 x float> zeroinitializer, float %18449, i32 0
  %18451 = insertelement <4 x float> %18450, float 1.000000e+00, i32 1
  %18452 = insertelement <4 x float> %18451, float 1.000000e+00, i32 2
  %18453 = insertelement <4 x float> %18452, float 1.000000e+00, i32 3
  %18454 = getelementptr inbounds float, float* %2, i64 1
  %18455 = load float, float* %18454, align 4
  %18456 = insertelement <4 x float> zeroinitializer, float %18455, i32 0
  %18457 = insertelement <4 x float> %18456, float 0.000000e+00, i32 1
  %18458 = insertelement <4 x float> %18457, float 0.000000e+00, i32 2
  %18459 = insertelement <4 x float> %18458, float 0.000000e+00, i32 3
  %18460 = fmul <4 x float> %18453, %18459
  %18461 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18462 = getelementptr inbounds i8, i8* %18461, i64 4
  %18463 = bitcast i8* %18462 to float*
  %18464 = load float, float* %18463, align 4
  %18465 = insertelement <4 x float> zeroinitializer, float %18464, i32 0
  %18466 = insertelement <4 x float> %18465, float 0.000000e+00, i32 1
  %18467 = insertelement <4 x float> %18466, float 0.000000e+00, i32 2
  %18468 = insertelement <4 x float> %18467, float 0.000000e+00, i32 3
  %18469 = getelementptr inbounds float, float* %2, i64 5
  %18470 = load float, float* %18469, align 4
  %18471 = insertelement <4 x float> zeroinitializer, float %18470, i32 0
  %18472 = insertelement <4 x float> %18471, float 0.000000e+00, i32 1
  %18473 = insertelement <4 x float> %18472, float 0.000000e+00, i32 2
  %18474 = insertelement <4 x float> %18473, float 0.000000e+00, i32 3
  %18475 = call <4 x float> @llvm.fma.f32.653(<4 x float> %18468, <4 x float> %18474, <4 x float> %18460)
  %18476 = extractelement <4 x float> %18475, i32 0
  %18477 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18478 = getelementptr inbounds i8, i8* %18477, i64 4
  %18479 = bitcast i8* %18478 to float*
  store float %18476, float* %18479, align 4
  %18480 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18481 = bitcast i8* %18480 to float*
  %18482 = load float, float* %18481, align 4
  %18483 = insertelement <4 x float> zeroinitializer, float %18482, i32 0
  %18484 = insertelement <4 x float> %18483, float 1.000000e+00, i32 1
  %18485 = insertelement <4 x float> %18484, float 1.000000e+00, i32 2
  %18486 = insertelement <4 x float> %18485, float 1.000000e+00, i32 3
  %18487 = getelementptr inbounds float, float* %2, i64 1
  %18488 = load float, float* %18487, align 4
  %18489 = insertelement <4 x float> zeroinitializer, float %18488, i32 0
  %18490 = insertelement <4 x float> %18489, float 0.000000e+00, i32 1
  %18491 = insertelement <4 x float> %18490, float 0.000000e+00, i32 2
  %18492 = insertelement <4 x float> %18491, float 0.000000e+00, i32 3
  %18493 = fmul <4 x float> %18486, %18492
  %18494 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18495 = getelementptr inbounds i8, i8* %18494, i64 4
  %18496 = bitcast i8* %18495 to float*
  %18497 = load float, float* %18496, align 4
  %18498 = insertelement <4 x float> zeroinitializer, float %18497, i32 0
  %18499 = insertelement <4 x float> %18498, float 1.000000e+00, i32 1
  %18500 = insertelement <4 x float> %18499, float 1.000000e+00, i32 2
  %18501 = insertelement <4 x float> %18500, float 1.000000e+00, i32 3
  %18502 = getelementptr inbounds float, float* %2, i64 5
  %18503 = load float, float* %18502, align 4
  %18504 = insertelement <4 x float> zeroinitializer, float %18503, i32 0
  %18505 = insertelement <4 x float> %18504, float 0.000000e+00, i32 1
  %18506 = insertelement <4 x float> %18505, float 0.000000e+00, i32 2
  %18507 = insertelement <4 x float> %18506, float 0.000000e+00, i32 3
  %18508 = call <4 x float> @llvm.fma.f32.654(<4 x float> %18501, <4 x float> %18507, <4 x float> %18493)
  %18509 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18510 = getelementptr inbounds i8, i8* %18509, i64 8
  %18511 = bitcast i8* %18510 to float*
  %18512 = load float, float* %18511, align 4
  %18513 = insertelement <4 x float> zeroinitializer, float %18512, i32 0
  %18514 = insertelement <4 x float> %18513, float 0.000000e+00, i32 1
  %18515 = insertelement <4 x float> %18514, float 0.000000e+00, i32 2
  %18516 = insertelement <4 x float> %18515, float 0.000000e+00, i32 3
  %18517 = getelementptr inbounds float, float* %2, i64 9
  %18518 = load float, float* %18517, align 4
  %18519 = insertelement <4 x float> zeroinitializer, float %18518, i32 0
  %18520 = insertelement <4 x float> %18519, float 0.000000e+00, i32 1
  %18521 = insertelement <4 x float> %18520, float 0.000000e+00, i32 2
  %18522 = insertelement <4 x float> %18521, float 0.000000e+00, i32 3
  %18523 = call <4 x float> @llvm.fma.f32.655(<4 x float> %18516, <4 x float> %18522, <4 x float> %18508)
  %18524 = extractelement <4 x float> %18523, i32 0
  %18525 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18526 = getelementptr inbounds i8, i8* %18525, i64 4
  %18527 = bitcast i8* %18526 to float*
  store float %18524, float* %18527, align 4
  %18528 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18529 = bitcast i8* %18528 to float*
  %18530 = load float, float* %18529, align 4
  %18531 = insertelement <4 x float> zeroinitializer, float %18530, i32 0
  %18532 = insertelement <4 x float> %18531, float 1.000000e+00, i32 1
  %18533 = insertelement <4 x float> %18532, float 1.000000e+00, i32 2
  %18534 = insertelement <4 x float> %18533, float 1.000000e+00, i32 3
  %18535 = getelementptr inbounds float, float* %2, i64 1
  %18536 = load float, float* %18535, align 4
  %18537 = insertelement <4 x float> zeroinitializer, float %18536, i32 0
  %18538 = insertelement <4 x float> %18537, float 0.000000e+00, i32 1
  %18539 = insertelement <4 x float> %18538, float 0.000000e+00, i32 2
  %18540 = insertelement <4 x float> %18539, float 0.000000e+00, i32 3
  %18541 = fmul <4 x float> %18534, %18540
  %18542 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18543 = getelementptr inbounds i8, i8* %18542, i64 4
  %18544 = bitcast i8* %18543 to float*
  %18545 = load float, float* %18544, align 4
  %18546 = insertelement <4 x float> zeroinitializer, float %18545, i32 0
  %18547 = insertelement <4 x float> %18546, float 1.000000e+00, i32 1
  %18548 = insertelement <4 x float> %18547, float 1.000000e+00, i32 2
  %18549 = insertelement <4 x float> %18548, float 1.000000e+00, i32 3
  %18550 = getelementptr inbounds float, float* %2, i64 5
  %18551 = load float, float* %18550, align 4
  %18552 = insertelement <4 x float> zeroinitializer, float %18551, i32 0
  %18553 = insertelement <4 x float> %18552, float 0.000000e+00, i32 1
  %18554 = insertelement <4 x float> %18553, float 0.000000e+00, i32 2
  %18555 = insertelement <4 x float> %18554, float 0.000000e+00, i32 3
  %18556 = call <4 x float> @llvm.fma.f32.656(<4 x float> %18549, <4 x float> %18555, <4 x float> %18541)
  %18557 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18558 = getelementptr inbounds i8, i8* %18557, i64 8
  %18559 = bitcast i8* %18558 to float*
  %18560 = load float, float* %18559, align 4
  %18561 = insertelement <4 x float> zeroinitializer, float %18560, i32 0
  %18562 = insertelement <4 x float> %18561, float 1.000000e+00, i32 1
  %18563 = insertelement <4 x float> %18562, float 1.000000e+00, i32 2
  %18564 = insertelement <4 x float> %18563, float 1.000000e+00, i32 3
  %18565 = getelementptr inbounds float, float* %2, i64 9
  %18566 = load float, float* %18565, align 4
  %18567 = insertelement <4 x float> zeroinitializer, float %18566, i32 0
  %18568 = insertelement <4 x float> %18567, float 0.000000e+00, i32 1
  %18569 = insertelement <4 x float> %18568, float 0.000000e+00, i32 2
  %18570 = insertelement <4 x float> %18569, float 0.000000e+00, i32 3
  %18571 = call <4 x float> @llvm.fma.f32.657(<4 x float> %18564, <4 x float> %18570, <4 x float> %18556)
  %18572 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18573 = getelementptr inbounds i8, i8* %18572, i64 12
  %18574 = bitcast i8* %18573 to float*
  %18575 = load float, float* %18574, align 4
  %18576 = insertelement <4 x float> zeroinitializer, float %18575, i32 0
  %18577 = insertelement <4 x float> %18576, float 0.000000e+00, i32 1
  %18578 = insertelement <4 x float> %18577, float 0.000000e+00, i32 2
  %18579 = insertelement <4 x float> %18578, float 0.000000e+00, i32 3
  %18580 = getelementptr inbounds float, float* %2, i64 13
  %18581 = load float, float* %18580, align 4
  %18582 = insertelement <4 x float> zeroinitializer, float %18581, i32 0
  %18583 = insertelement <4 x float> %18582, float 0.000000e+00, i32 1
  %18584 = insertelement <4 x float> %18583, float 0.000000e+00, i32 2
  %18585 = insertelement <4 x float> %18584, float 0.000000e+00, i32 3
  %18586 = call <4 x float> @llvm.fma.f32.658(<4 x float> %18579, <4 x float> %18585, <4 x float> %18571)
  %18587 = extractelement <4 x float> %18586, i32 0
  %18588 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18589 = getelementptr inbounds i8, i8* %18588, i64 4
  %18590 = bitcast i8* %18589 to float*
  store float %18587, float* %18590, align 4
  %18591 = extractelement <4 x float> %18586, i32 1
  %18592 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18593 = getelementptr inbounds i8, i8* %18592, i64 8
  %18594 = bitcast i8* %18593 to float*
  store float %18591, float* %18594, align 4
  %18595 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18596 = bitcast i8* %18595 to float*
  %18597 = load float, float* %18596, align 4
  %18598 = insertelement <4 x float> zeroinitializer, float %18597, i32 0
  %18599 = insertelement <4 x float> %18598, float 0.000000e+00, i32 1
  %18600 = insertelement <4 x float> %18599, float 0.000000e+00, i32 2
  %18601 = insertelement <4 x float> %18600, float 0.000000e+00, i32 3
  %18602 = getelementptr inbounds float, float* %2, i64 2
  %18603 = load float, float* %18602, align 4
  %18604 = insertelement <4 x float> zeroinitializer, float %18603, i32 0
  %18605 = insertelement <4 x float> %18604, float 0.000000e+00, i32 1
  %18606 = insertelement <4 x float> %18605, float 0.000000e+00, i32 2
  %18607 = insertelement <4 x float> %18606, float 0.000000e+00, i32 3
  %18608 = call <4 x float> @llvm.fma.f32.659(<4 x float> %18601, <4 x float> %18607, <4 x float> zeroinitializer)
  %18609 = extractelement <4 x float> %18608, i32 0
  %18610 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18611 = getelementptr inbounds i8, i8* %18610, i64 8
  %18612 = bitcast i8* %18611 to float*
  store float %18609, float* %18612, align 4
  %18613 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18614 = bitcast i8* %18613 to float*
  %18615 = load float, float* %18614, align 4
  %18616 = insertelement <4 x float> zeroinitializer, float %18615, i32 0
  %18617 = insertelement <4 x float> %18616, float 1.000000e+00, i32 1
  %18618 = insertelement <4 x float> %18617, float 1.000000e+00, i32 2
  %18619 = insertelement <4 x float> %18618, float 1.000000e+00, i32 3
  %18620 = getelementptr inbounds float, float* %2, i64 2
  %18621 = load float, float* %18620, align 4
  %18622 = insertelement <4 x float> zeroinitializer, float %18621, i32 0
  %18623 = insertelement <4 x float> %18622, float 0.000000e+00, i32 1
  %18624 = insertelement <4 x float> %18623, float 0.000000e+00, i32 2
  %18625 = insertelement <4 x float> %18624, float 0.000000e+00, i32 3
  %18626 = fmul <4 x float> %18619, %18625
  %18627 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18628 = getelementptr inbounds i8, i8* %18627, i64 4
  %18629 = bitcast i8* %18628 to float*
  %18630 = load float, float* %18629, align 4
  %18631 = insertelement <4 x float> zeroinitializer, float %18630, i32 0
  %18632 = insertelement <4 x float> %18631, float 0.000000e+00, i32 1
  %18633 = insertelement <4 x float> %18632, float 0.000000e+00, i32 2
  %18634 = insertelement <4 x float> %18633, float 0.000000e+00, i32 3
  %18635 = getelementptr inbounds float, float* %2, i64 6
  %18636 = load float, float* %18635, align 4
  %18637 = insertelement <4 x float> zeroinitializer, float %18636, i32 0
  %18638 = insertelement <4 x float> %18637, float 0.000000e+00, i32 1
  %18639 = insertelement <4 x float> %18638, float 0.000000e+00, i32 2
  %18640 = insertelement <4 x float> %18639, float 0.000000e+00, i32 3
  %18641 = call <4 x float> @llvm.fma.f32.660(<4 x float> %18634, <4 x float> %18640, <4 x float> %18626)
  %18642 = extractelement <4 x float> %18641, i32 0
  %18643 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18644 = getelementptr inbounds i8, i8* %18643, i64 8
  %18645 = bitcast i8* %18644 to float*
  store float %18642, float* %18645, align 4
  %18646 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18647 = bitcast i8* %18646 to float*
  %18648 = load float, float* %18647, align 4
  %18649 = insertelement <4 x float> zeroinitializer, float %18648, i32 0
  %18650 = insertelement <4 x float> %18649, float 1.000000e+00, i32 1
  %18651 = insertelement <4 x float> %18650, float 1.000000e+00, i32 2
  %18652 = insertelement <4 x float> %18651, float 1.000000e+00, i32 3
  %18653 = getelementptr inbounds float, float* %2, i64 2
  %18654 = load float, float* %18653, align 4
  %18655 = insertelement <4 x float> zeroinitializer, float %18654, i32 0
  %18656 = insertelement <4 x float> %18655, float 0.000000e+00, i32 1
  %18657 = insertelement <4 x float> %18656, float 0.000000e+00, i32 2
  %18658 = insertelement <4 x float> %18657, float 0.000000e+00, i32 3
  %18659 = fmul <4 x float> %18652, %18658
  %18660 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18661 = getelementptr inbounds i8, i8* %18660, i64 4
  %18662 = bitcast i8* %18661 to float*
  %18663 = load float, float* %18662, align 4
  %18664 = insertelement <4 x float> zeroinitializer, float %18663, i32 0
  %18665 = insertelement <4 x float> %18664, float 1.000000e+00, i32 1
  %18666 = insertelement <4 x float> %18665, float 1.000000e+00, i32 2
  %18667 = insertelement <4 x float> %18666, float 1.000000e+00, i32 3
  %18668 = getelementptr inbounds float, float* %2, i64 6
  %18669 = load float, float* %18668, align 4
  %18670 = insertelement <4 x float> zeroinitializer, float %18669, i32 0
  %18671 = insertelement <4 x float> %18670, float 0.000000e+00, i32 1
  %18672 = insertelement <4 x float> %18671, float 0.000000e+00, i32 2
  %18673 = insertelement <4 x float> %18672, float 0.000000e+00, i32 3
  %18674 = call <4 x float> @llvm.fma.f32.661(<4 x float> %18667, <4 x float> %18673, <4 x float> %18659)
  %18675 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18676 = getelementptr inbounds i8, i8* %18675, i64 8
  %18677 = bitcast i8* %18676 to float*
  %18678 = load float, float* %18677, align 4
  %18679 = insertelement <4 x float> zeroinitializer, float %18678, i32 0
  %18680 = insertelement <4 x float> %18679, float 0.000000e+00, i32 1
  %18681 = insertelement <4 x float> %18680, float 0.000000e+00, i32 2
  %18682 = insertelement <4 x float> %18681, float 0.000000e+00, i32 3
  %18683 = getelementptr inbounds float, float* %2, i64 10
  %18684 = load float, float* %18683, align 4
  %18685 = insertelement <4 x float> zeroinitializer, float %18684, i32 0
  %18686 = insertelement <4 x float> %18685, float 0.000000e+00, i32 1
  %18687 = insertelement <4 x float> %18686, float 0.000000e+00, i32 2
  %18688 = insertelement <4 x float> %18687, float 0.000000e+00, i32 3
  %18689 = call <4 x float> @llvm.fma.f32.662(<4 x float> %18682, <4 x float> %18688, <4 x float> %18674)
  %18690 = extractelement <4 x float> %18689, i32 0
  %18691 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18692 = getelementptr inbounds i8, i8* %18691, i64 8
  %18693 = bitcast i8* %18692 to float*
  store float %18690, float* %18693, align 4
  %18694 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18695 = bitcast i8* %18694 to float*
  %18696 = load float, float* %18695, align 4
  %18697 = insertelement <4 x float> zeroinitializer, float %18696, i32 0
  %18698 = insertelement <4 x float> %18697, float 1.000000e+00, i32 1
  %18699 = insertelement <4 x float> %18698, float 1.000000e+00, i32 2
  %18700 = insertelement <4 x float> %18699, float 1.000000e+00, i32 3
  %18701 = getelementptr inbounds float, float* %2, i64 2
  %18702 = load float, float* %18701, align 4
  %18703 = insertelement <4 x float> zeroinitializer, float %18702, i32 0
  %18704 = insertelement <4 x float> %18703, float 0.000000e+00, i32 1
  %18705 = insertelement <4 x float> %18704, float 0.000000e+00, i32 2
  %18706 = insertelement <4 x float> %18705, float 0.000000e+00, i32 3
  %18707 = fmul <4 x float> %18700, %18706
  %18708 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18709 = getelementptr inbounds i8, i8* %18708, i64 4
  %18710 = bitcast i8* %18709 to float*
  %18711 = load float, float* %18710, align 4
  %18712 = insertelement <4 x float> zeroinitializer, float %18711, i32 0
  %18713 = insertelement <4 x float> %18712, float 1.000000e+00, i32 1
  %18714 = insertelement <4 x float> %18713, float 1.000000e+00, i32 2
  %18715 = insertelement <4 x float> %18714, float 1.000000e+00, i32 3
  %18716 = getelementptr inbounds float, float* %2, i64 6
  %18717 = load float, float* %18716, align 4
  %18718 = insertelement <4 x float> zeroinitializer, float %18717, i32 0
  %18719 = insertelement <4 x float> %18718, float 0.000000e+00, i32 1
  %18720 = insertelement <4 x float> %18719, float 0.000000e+00, i32 2
  %18721 = insertelement <4 x float> %18720, float 0.000000e+00, i32 3
  %18722 = call <4 x float> @llvm.fma.f32.663(<4 x float> %18715, <4 x float> %18721, <4 x float> %18707)
  %18723 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18724 = getelementptr inbounds i8, i8* %18723, i64 8
  %18725 = bitcast i8* %18724 to float*
  %18726 = load float, float* %18725, align 4
  %18727 = insertelement <4 x float> zeroinitializer, float %18726, i32 0
  %18728 = insertelement <4 x float> %18727, float 1.000000e+00, i32 1
  %18729 = insertelement <4 x float> %18728, float 1.000000e+00, i32 2
  %18730 = insertelement <4 x float> %18729, float 1.000000e+00, i32 3
  %18731 = getelementptr inbounds float, float* %2, i64 10
  %18732 = load float, float* %18731, align 4
  %18733 = insertelement <4 x float> zeroinitializer, float %18732, i32 0
  %18734 = insertelement <4 x float> %18733, float 0.000000e+00, i32 1
  %18735 = insertelement <4 x float> %18734, float 0.000000e+00, i32 2
  %18736 = insertelement <4 x float> %18735, float 0.000000e+00, i32 3
  %18737 = call <4 x float> @llvm.fma.f32.664(<4 x float> %18730, <4 x float> %18736, <4 x float> %18722)
  %18738 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18739 = getelementptr inbounds i8, i8* %18738, i64 12
  %18740 = bitcast i8* %18739 to float*
  %18741 = load float, float* %18740, align 4
  %18742 = insertelement <4 x float> zeroinitializer, float %18741, i32 0
  %18743 = insertelement <4 x float> %18742, float 0.000000e+00, i32 1
  %18744 = insertelement <4 x float> %18743, float 0.000000e+00, i32 2
  %18745 = insertelement <4 x float> %18744, float 0.000000e+00, i32 3
  %18746 = getelementptr inbounds float, float* %2, i64 14
  %18747 = load float, float* %18746, align 4
  %18748 = insertelement <4 x float> zeroinitializer, float %18747, i32 0
  %18749 = insertelement <4 x float> %18748, float 0.000000e+00, i32 1
  %18750 = insertelement <4 x float> %18749, float 0.000000e+00, i32 2
  %18751 = insertelement <4 x float> %18750, float 0.000000e+00, i32 3
  %18752 = call <4 x float> @llvm.fma.f32.665(<4 x float> %18745, <4 x float> %18751, <4 x float> %18737)
  %18753 = extractelement <4 x float> %18752, i32 0
  %18754 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18755 = getelementptr inbounds i8, i8* %18754, i64 8
  %18756 = bitcast i8* %18755 to float*
  store float %18753, float* %18756, align 4
  %18757 = extractelement <4 x float> %18752, i32 1
  %18758 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18759 = getelementptr inbounds i8, i8* %18758, i64 12
  %18760 = bitcast i8* %18759 to float*
  store float %18757, float* %18760, align 4
  %18761 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18762 = bitcast i8* %18761 to float*
  %18763 = load float, float* %18762, align 4
  %18764 = insertelement <4 x float> zeroinitializer, float %18763, i32 0
  %18765 = insertelement <4 x float> %18764, float 0.000000e+00, i32 1
  %18766 = insertelement <4 x float> %18765, float 0.000000e+00, i32 2
  %18767 = insertelement <4 x float> %18766, float 0.000000e+00, i32 3
  %18768 = getelementptr inbounds float, float* %2, i64 3
  %18769 = load float, float* %18768, align 4
  %18770 = insertelement <4 x float> zeroinitializer, float %18769, i32 0
  %18771 = insertelement <4 x float> %18770, float 0.000000e+00, i32 1
  %18772 = insertelement <4 x float> %18771, float 0.000000e+00, i32 2
  %18773 = insertelement <4 x float> %18772, float 0.000000e+00, i32 3
  %18774 = call <4 x float> @llvm.fma.f32.666(<4 x float> %18767, <4 x float> %18773, <4 x float> zeroinitializer)
  %18775 = extractelement <4 x float> %18774, i32 0
  %18776 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18777 = getelementptr inbounds i8, i8* %18776, i64 12
  %18778 = bitcast i8* %18777 to float*
  store float %18775, float* %18778, align 4
  %18779 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18780 = bitcast i8* %18779 to float*
  %18781 = load float, float* %18780, align 4
  %18782 = insertelement <4 x float> zeroinitializer, float %18781, i32 0
  %18783 = insertelement <4 x float> %18782, float 1.000000e+00, i32 1
  %18784 = insertelement <4 x float> %18783, float 1.000000e+00, i32 2
  %18785 = insertelement <4 x float> %18784, float 1.000000e+00, i32 3
  %18786 = getelementptr inbounds float, float* %2, i64 3
  %18787 = load float, float* %18786, align 4
  %18788 = insertelement <4 x float> zeroinitializer, float %18787, i32 0
  %18789 = insertelement <4 x float> %18788, float 0.000000e+00, i32 1
  %18790 = insertelement <4 x float> %18789, float 0.000000e+00, i32 2
  %18791 = insertelement <4 x float> %18790, float 0.000000e+00, i32 3
  %18792 = fmul <4 x float> %18785, %18791
  %18793 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18794 = getelementptr inbounds i8, i8* %18793, i64 4
  %18795 = bitcast i8* %18794 to float*
  %18796 = load float, float* %18795, align 4
  %18797 = insertelement <4 x float> zeroinitializer, float %18796, i32 0
  %18798 = insertelement <4 x float> %18797, float 0.000000e+00, i32 1
  %18799 = insertelement <4 x float> %18798, float 0.000000e+00, i32 2
  %18800 = insertelement <4 x float> %18799, float 0.000000e+00, i32 3
  %18801 = getelementptr inbounds float, float* %2, i64 7
  %18802 = load float, float* %18801, align 4
  %18803 = insertelement <4 x float> zeroinitializer, float %18802, i32 0
  %18804 = insertelement <4 x float> %18803, float 0.000000e+00, i32 1
  %18805 = insertelement <4 x float> %18804, float 0.000000e+00, i32 2
  %18806 = insertelement <4 x float> %18805, float 0.000000e+00, i32 3
  %18807 = call <4 x float> @llvm.fma.f32.667(<4 x float> %18800, <4 x float> %18806, <4 x float> %18792)
  %18808 = extractelement <4 x float> %18807, i32 0
  %18809 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18810 = getelementptr inbounds i8, i8* %18809, i64 12
  %18811 = bitcast i8* %18810 to float*
  store float %18808, float* %18811, align 4
  %18812 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18813 = bitcast i8* %18812 to float*
  %18814 = load float, float* %18813, align 4
  %18815 = insertelement <4 x float> zeroinitializer, float %18814, i32 0
  %18816 = insertelement <4 x float> %18815, float 1.000000e+00, i32 1
  %18817 = insertelement <4 x float> %18816, float 1.000000e+00, i32 2
  %18818 = insertelement <4 x float> %18817, float 1.000000e+00, i32 3
  %18819 = getelementptr inbounds float, float* %2, i64 3
  %18820 = load float, float* %18819, align 4
  %18821 = insertelement <4 x float> zeroinitializer, float %18820, i32 0
  %18822 = insertelement <4 x float> %18821, float 0.000000e+00, i32 1
  %18823 = insertelement <4 x float> %18822, float 0.000000e+00, i32 2
  %18824 = insertelement <4 x float> %18823, float 0.000000e+00, i32 3
  %18825 = fmul <4 x float> %18818, %18824
  %18826 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18827 = getelementptr inbounds i8, i8* %18826, i64 4
  %18828 = bitcast i8* %18827 to float*
  %18829 = load float, float* %18828, align 4
  %18830 = insertelement <4 x float> zeroinitializer, float %18829, i32 0
  %18831 = insertelement <4 x float> %18830, float 1.000000e+00, i32 1
  %18832 = insertelement <4 x float> %18831, float 1.000000e+00, i32 2
  %18833 = insertelement <4 x float> %18832, float 1.000000e+00, i32 3
  %18834 = getelementptr inbounds float, float* %2, i64 7
  %18835 = load float, float* %18834, align 4
  %18836 = insertelement <4 x float> zeroinitializer, float %18835, i32 0
  %18837 = insertelement <4 x float> %18836, float 0.000000e+00, i32 1
  %18838 = insertelement <4 x float> %18837, float 0.000000e+00, i32 2
  %18839 = insertelement <4 x float> %18838, float 0.000000e+00, i32 3
  %18840 = call <4 x float> @llvm.fma.f32.668(<4 x float> %18833, <4 x float> %18839, <4 x float> %18825)
  %18841 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18842 = getelementptr inbounds i8, i8* %18841, i64 8
  %18843 = bitcast i8* %18842 to float*
  %18844 = load float, float* %18843, align 4
  %18845 = insertelement <4 x float> zeroinitializer, float %18844, i32 0
  %18846 = insertelement <4 x float> %18845, float 0.000000e+00, i32 1
  %18847 = insertelement <4 x float> %18846, float 0.000000e+00, i32 2
  %18848 = insertelement <4 x float> %18847, float 0.000000e+00, i32 3
  %18849 = getelementptr inbounds float, float* %2, i64 11
  %18850 = load float, float* %18849, align 4
  %18851 = insertelement <4 x float> zeroinitializer, float %18850, i32 0
  %18852 = insertelement <4 x float> %18851, float 0.000000e+00, i32 1
  %18853 = insertelement <4 x float> %18852, float 0.000000e+00, i32 2
  %18854 = insertelement <4 x float> %18853, float 0.000000e+00, i32 3
  %18855 = call <4 x float> @llvm.fma.f32.669(<4 x float> %18848, <4 x float> %18854, <4 x float> %18840)
  %18856 = extractelement <4 x float> %18855, i32 0
  %18857 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18858 = getelementptr inbounds i8, i8* %18857, i64 12
  %18859 = bitcast i8* %18858 to float*
  store float %18856, float* %18859, align 4
  %18860 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18861 = bitcast i8* %18860 to float*
  %18862 = load float, float* %18861, align 4
  %18863 = insertelement <4 x float> zeroinitializer, float %18862, i32 0
  %18864 = insertelement <4 x float> %18863, float 1.000000e+00, i32 1
  %18865 = insertelement <4 x float> %18864, float 1.000000e+00, i32 2
  %18866 = insertelement <4 x float> %18865, float 1.000000e+00, i32 3
  %18867 = getelementptr inbounds float, float* %2, i64 3
  %18868 = load float, float* %18867, align 4
  %18869 = insertelement <4 x float> zeroinitializer, float %18868, i32 0
  %18870 = insertelement <4 x float> %18869, float 0.000000e+00, i32 1
  %18871 = insertelement <4 x float> %18870, float 0.000000e+00, i32 2
  %18872 = insertelement <4 x float> %18871, float 0.000000e+00, i32 3
  %18873 = fmul <4 x float> %18866, %18872
  %18874 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18875 = getelementptr inbounds i8, i8* %18874, i64 4
  %18876 = bitcast i8* %18875 to float*
  %18877 = load float, float* %18876, align 4
  %18878 = insertelement <4 x float> zeroinitializer, float %18877, i32 0
  %18879 = insertelement <4 x float> %18878, float 1.000000e+00, i32 1
  %18880 = insertelement <4 x float> %18879, float 1.000000e+00, i32 2
  %18881 = insertelement <4 x float> %18880, float 1.000000e+00, i32 3
  %18882 = getelementptr inbounds float, float* %2, i64 7
  %18883 = load float, float* %18882, align 4
  %18884 = insertelement <4 x float> zeroinitializer, float %18883, i32 0
  %18885 = insertelement <4 x float> %18884, float 0.000000e+00, i32 1
  %18886 = insertelement <4 x float> %18885, float 0.000000e+00, i32 2
  %18887 = insertelement <4 x float> %18886, float 0.000000e+00, i32 3
  %18888 = call <4 x float> @llvm.fma.f32.670(<4 x float> %18881, <4 x float> %18887, <4 x float> %18873)
  %18889 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18890 = getelementptr inbounds i8, i8* %18889, i64 8
  %18891 = bitcast i8* %18890 to float*
  %18892 = load float, float* %18891, align 4
  %18893 = insertelement <4 x float> zeroinitializer, float %18892, i32 0
  %18894 = insertelement <4 x float> %18893, float 1.000000e+00, i32 1
  %18895 = insertelement <4 x float> %18894, float 1.000000e+00, i32 2
  %18896 = insertelement <4 x float> %18895, float 1.000000e+00, i32 3
  %18897 = getelementptr inbounds float, float* %2, i64 11
  %18898 = load float, float* %18897, align 4
  %18899 = insertelement <4 x float> zeroinitializer, float %18898, i32 0
  %18900 = insertelement <4 x float> %18899, float 0.000000e+00, i32 1
  %18901 = insertelement <4 x float> %18900, float 0.000000e+00, i32 2
  %18902 = insertelement <4 x float> %18901, float 0.000000e+00, i32 3
  %18903 = call <4 x float> @llvm.fma.f32.671(<4 x float> %18896, <4 x float> %18902, <4 x float> %18888)
  %18904 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18905 = getelementptr inbounds i8, i8* %18904, i64 12
  %18906 = bitcast i8* %18905 to float*
  %18907 = load float, float* %18906, align 4
  %18908 = insertelement <4 x float> zeroinitializer, float %18907, i32 0
  %18909 = insertelement <4 x float> %18908, float 0.000000e+00, i32 1
  %18910 = insertelement <4 x float> %18909, float 0.000000e+00, i32 2
  %18911 = insertelement <4 x float> %18910, float 0.000000e+00, i32 3
  %18912 = getelementptr inbounds float, float* %2, i64 15
  %18913 = load float, float* %18912, align 4
  %18914 = insertelement <4 x float> zeroinitializer, float %18913, i32 0
  %18915 = insertelement <4 x float> %18914, float 0.000000e+00, i32 1
  %18916 = insertelement <4 x float> %18915, float 0.000000e+00, i32 2
  %18917 = insertelement <4 x float> %18916, float 0.000000e+00, i32 3
  %18918 = call <4 x float> @llvm.fma.f32.672(<4 x float> %18911, <4 x float> %18917, <4 x float> %18903)
  %18919 = extractelement <4 x float> %18918, i32 0
  %18920 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18921 = getelementptr inbounds i8, i8* %18920, i64 12
  %18922 = bitcast i8* %18921 to float*
  store float %18919, float* %18922, align 4
  %18923 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18924 = getelementptr inbounds i8, i8* %18923, i64 16
  %18925 = bitcast i8* %18924 to float*
  store float 0.000000e+00, float* %18925, align 4
  %18926 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18927 = getelementptr inbounds i8, i8* %18926, i64 16
  %18928 = bitcast i8* %18927 to float*
  %18929 = load float, float* %18928, align 4
  %18930 = insertelement <4 x float> zeroinitializer, float %18929, i32 0
  %18931 = insertelement <4 x float> %18930, float 0.000000e+00, i32 1
  %18932 = insertelement <4 x float> %18931, float 0.000000e+00, i32 2
  %18933 = insertelement <4 x float> %18932, float 0.000000e+00, i32 3
  %18934 = load float, float* %2, align 4
  %18935 = insertelement <4 x float> zeroinitializer, float %18934, i32 0
  %18936 = insertelement <4 x float> %18935, float 0.000000e+00, i32 1
  %18937 = insertelement <4 x float> %18936, float 0.000000e+00, i32 2
  %18938 = insertelement <4 x float> %18937, float 0.000000e+00, i32 3
  %18939 = call <4 x float> @llvm.fma.f32.673(<4 x float> %18933, <4 x float> %18938, <4 x float> zeroinitializer)
  %18940 = extractelement <4 x float> %18939, i32 0
  %18941 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18942 = getelementptr inbounds i8, i8* %18941, i64 16
  %18943 = bitcast i8* %18942 to float*
  store float %18940, float* %18943, align 4
  %18944 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18945 = getelementptr inbounds i8, i8* %18944, i64 16
  %18946 = bitcast i8* %18945 to float*
  %18947 = load float, float* %18946, align 4
  %18948 = insertelement <4 x float> zeroinitializer, float %18947, i32 0
  %18949 = insertelement <4 x float> %18948, float 1.000000e+00, i32 1
  %18950 = insertelement <4 x float> %18949, float 1.000000e+00, i32 2
  %18951 = insertelement <4 x float> %18950, float 1.000000e+00, i32 3
  %18952 = load float, float* %2, align 4
  %18953 = insertelement <4 x float> zeroinitializer, float %18952, i32 0
  %18954 = insertelement <4 x float> %18953, float 0.000000e+00, i32 1
  %18955 = insertelement <4 x float> %18954, float 0.000000e+00, i32 2
  %18956 = insertelement <4 x float> %18955, float 0.000000e+00, i32 3
  %18957 = fmul <4 x float> %18951, %18956
  %18958 = fadd <4 x float> %18957, zeroinitializer
  %18959 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18960 = getelementptr inbounds i8, i8* %18959, i64 20
  %18961 = bitcast i8* %18960 to float*
  %18962 = load float, float* %18961, align 4
  %18963 = insertelement <4 x float> zeroinitializer, float %18962, i32 0
  %18964 = insertelement <4 x float> %18963, float 0.000000e+00, i32 1
  %18965 = insertelement <4 x float> %18964, float 0.000000e+00, i32 2
  %18966 = insertelement <4 x float> %18965, float 0.000000e+00, i32 3
  %18967 = getelementptr inbounds float, float* %2, i64 4
  %18968 = load float, float* %18967, align 4
  %18969 = insertelement <4 x float> zeroinitializer, float %18968, i32 0
  %18970 = insertelement <4 x float> %18969, float 0.000000e+00, i32 1
  %18971 = insertelement <4 x float> %18970, float 0.000000e+00, i32 2
  %18972 = insertelement <4 x float> %18971, float 0.000000e+00, i32 3
  %18973 = call <4 x float> @llvm.fma.f32.674(<4 x float> %18966, <4 x float> %18972, <4 x float> %18958)
  %18974 = extractelement <4 x float> %18973, i32 0
  %18975 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18976 = getelementptr inbounds i8, i8* %18975, i64 16
  %18977 = bitcast i8* %18976 to float*
  store float %18974, float* %18977, align 4
  %18978 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18979 = getelementptr inbounds i8, i8* %18978, i64 16
  %18980 = bitcast i8* %18979 to float*
  %18981 = load float, float* %18980, align 4
  %18982 = insertelement <4 x float> zeroinitializer, float %18981, i32 0
  %18983 = insertelement <4 x float> %18982, float 1.000000e+00, i32 1
  %18984 = insertelement <4 x float> %18983, float 1.000000e+00, i32 2
  %18985 = insertelement <4 x float> %18984, float 1.000000e+00, i32 3
  %18986 = load float, float* %2, align 4
  %18987 = insertelement <4 x float> zeroinitializer, float %18986, i32 0
  %18988 = insertelement <4 x float> %18987, float 0.000000e+00, i32 1
  %18989 = insertelement <4 x float> %18988, float 0.000000e+00, i32 2
  %18990 = insertelement <4 x float> %18989, float 0.000000e+00, i32 3
  %18991 = fmul <4 x float> %18985, %18990
  %18992 = fadd <4 x float> %18991, zeroinitializer
  %18993 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %18994 = getelementptr inbounds i8, i8* %18993, i64 20
  %18995 = bitcast i8* %18994 to float*
  %18996 = load float, float* %18995, align 4
  %18997 = insertelement <4 x float> zeroinitializer, float %18996, i32 0
  %18998 = insertelement <4 x float> %18997, float 1.000000e+00, i32 1
  %18999 = insertelement <4 x float> %18998, float 1.000000e+00, i32 2
  %19000 = insertelement <4 x float> %18999, float 1.000000e+00, i32 3
  %19001 = getelementptr inbounds float, float* %2, i64 4
  %19002 = load float, float* %19001, align 4
  %19003 = insertelement <4 x float> zeroinitializer, float %19002, i32 0
  %19004 = insertelement <4 x float> %19003, float 0.000000e+00, i32 1
  %19005 = insertelement <4 x float> %19004, float 0.000000e+00, i32 2
  %19006 = insertelement <4 x float> %19005, float 0.000000e+00, i32 3
  %19007 = call <4 x float> @llvm.fma.f32.675(<4 x float> %19000, <4 x float> %19006, <4 x float> %18992)
  %19008 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19009 = getelementptr inbounds i8, i8* %19008, i64 24
  %19010 = bitcast i8* %19009 to float*
  %19011 = load float, float* %19010, align 4
  %19012 = insertelement <4 x float> zeroinitializer, float %19011, i32 0
  %19013 = insertelement <4 x float> %19012, float 0.000000e+00, i32 1
  %19014 = insertelement <4 x float> %19013, float 0.000000e+00, i32 2
  %19015 = insertelement <4 x float> %19014, float 0.000000e+00, i32 3
  %19016 = getelementptr inbounds float, float* %2, i64 8
  %19017 = load float, float* %19016, align 4
  %19018 = insertelement <4 x float> zeroinitializer, float %19017, i32 0
  %19019 = insertelement <4 x float> %19018, float 0.000000e+00, i32 1
  %19020 = insertelement <4 x float> %19019, float 0.000000e+00, i32 2
  %19021 = insertelement <4 x float> %19020, float 0.000000e+00, i32 3
  %19022 = call <4 x float> @llvm.fma.f32.676(<4 x float> %19015, <4 x float> %19021, <4 x float> %19007)
  %19023 = extractelement <4 x float> %19022, i32 0
  %19024 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19025 = getelementptr inbounds i8, i8* %19024, i64 16
  %19026 = bitcast i8* %19025 to float*
  store float %19023, float* %19026, align 4
  %19027 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19028 = getelementptr inbounds i8, i8* %19027, i64 16
  %19029 = bitcast i8* %19028 to float*
  %19030 = load float, float* %19029, align 4
  %19031 = insertelement <4 x float> zeroinitializer, float %19030, i32 0
  %19032 = insertelement <4 x float> %19031, float 1.000000e+00, i32 1
  %19033 = insertelement <4 x float> %19032, float 1.000000e+00, i32 2
  %19034 = insertelement <4 x float> %19033, float 1.000000e+00, i32 3
  %19035 = load float, float* %2, align 4
  %19036 = insertelement <4 x float> zeroinitializer, float %19035, i32 0
  %19037 = insertelement <4 x float> %19036, float 0.000000e+00, i32 1
  %19038 = insertelement <4 x float> %19037, float 0.000000e+00, i32 2
  %19039 = insertelement <4 x float> %19038, float 0.000000e+00, i32 3
  %19040 = fmul <4 x float> %19034, %19039
  %19041 = fadd <4 x float> %19040, zeroinitializer
  %19042 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19043 = getelementptr inbounds i8, i8* %19042, i64 20
  %19044 = bitcast i8* %19043 to float*
  %19045 = load float, float* %19044, align 4
  %19046 = insertelement <4 x float> zeroinitializer, float %19045, i32 0
  %19047 = insertelement <4 x float> %19046, float 1.000000e+00, i32 1
  %19048 = insertelement <4 x float> %19047, float 1.000000e+00, i32 2
  %19049 = insertelement <4 x float> %19048, float 1.000000e+00, i32 3
  %19050 = getelementptr inbounds float, float* %2, i64 4
  %19051 = load float, float* %19050, align 4
  %19052 = insertelement <4 x float> zeroinitializer, float %19051, i32 0
  %19053 = insertelement <4 x float> %19052, float 0.000000e+00, i32 1
  %19054 = insertelement <4 x float> %19053, float 0.000000e+00, i32 2
  %19055 = insertelement <4 x float> %19054, float 0.000000e+00, i32 3
  %19056 = call <4 x float> @llvm.fma.f32.677(<4 x float> %19049, <4 x float> %19055, <4 x float> %19041)
  %19057 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19058 = getelementptr inbounds i8, i8* %19057, i64 24
  %19059 = bitcast i8* %19058 to float*
  %19060 = load float, float* %19059, align 4
  %19061 = insertelement <4 x float> zeroinitializer, float %19060, i32 0
  %19062 = insertelement <4 x float> %19061, float 1.000000e+00, i32 1
  %19063 = insertelement <4 x float> %19062, float 1.000000e+00, i32 2
  %19064 = insertelement <4 x float> %19063, float 1.000000e+00, i32 3
  %19065 = getelementptr inbounds float, float* %2, i64 8
  %19066 = load float, float* %19065, align 4
  %19067 = insertelement <4 x float> zeroinitializer, float %19066, i32 0
  %19068 = insertelement <4 x float> %19067, float 0.000000e+00, i32 1
  %19069 = insertelement <4 x float> %19068, float 0.000000e+00, i32 2
  %19070 = insertelement <4 x float> %19069, float 0.000000e+00, i32 3
  %19071 = call <4 x float> @llvm.fma.f32.678(<4 x float> %19064, <4 x float> %19070, <4 x float> %19056)
  %19072 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19073 = getelementptr inbounds i8, i8* %19072, i64 28
  %19074 = bitcast i8* %19073 to float*
  %19075 = load float, float* %19074, align 4
  %19076 = insertelement <4 x float> zeroinitializer, float %19075, i32 0
  %19077 = insertelement <4 x float> %19076, float 0.000000e+00, i32 1
  %19078 = insertelement <4 x float> %19077, float 0.000000e+00, i32 2
  %19079 = insertelement <4 x float> %19078, float 0.000000e+00, i32 3
  %19080 = getelementptr inbounds float, float* %2, i64 12
  %19081 = load float, float* %19080, align 4
  %19082 = insertelement <4 x float> zeroinitializer, float %19081, i32 0
  %19083 = insertelement <4 x float> %19082, float 0.000000e+00, i32 1
  %19084 = insertelement <4 x float> %19083, float 0.000000e+00, i32 2
  %19085 = insertelement <4 x float> %19084, float 0.000000e+00, i32 3
  %19086 = call <4 x float> @llvm.fma.f32.679(<4 x float> %19079, <4 x float> %19085, <4 x float> %19071)
  %19087 = extractelement <4 x float> %19086, i32 0
  %19088 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19089 = getelementptr inbounds i8, i8* %19088, i64 16
  %19090 = bitcast i8* %19089 to float*
  store float %19087, float* %19090, align 4
  %19091 = extractelement <4 x float> %19086, i32 1
  %19092 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19093 = getelementptr inbounds i8, i8* %19092, i64 20
  %19094 = bitcast i8* %19093 to float*
  store float %19091, float* %19094, align 4
  %19095 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19096 = getelementptr inbounds i8, i8* %19095, i64 16
  %19097 = bitcast i8* %19096 to float*
  %19098 = load float, float* %19097, align 4
  %19099 = insertelement <4 x float> zeroinitializer, float %19098, i32 0
  %19100 = insertelement <4 x float> %19099, float 0.000000e+00, i32 1
  %19101 = insertelement <4 x float> %19100, float 0.000000e+00, i32 2
  %19102 = insertelement <4 x float> %19101, float 0.000000e+00, i32 3
  %19103 = getelementptr inbounds float, float* %2, i64 1
  %19104 = load float, float* %19103, align 4
  %19105 = insertelement <4 x float> zeroinitializer, float %19104, i32 0
  %19106 = insertelement <4 x float> %19105, float 0.000000e+00, i32 1
  %19107 = insertelement <4 x float> %19106, float 0.000000e+00, i32 2
  %19108 = insertelement <4 x float> %19107, float 0.000000e+00, i32 3
  %19109 = call <4 x float> @llvm.fma.f32.680(<4 x float> %19102, <4 x float> %19108, <4 x float> zeroinitializer)
  %19110 = extractelement <4 x float> %19109, i32 0
  %19111 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19112 = getelementptr inbounds i8, i8* %19111, i64 20
  %19113 = bitcast i8* %19112 to float*
  store float %19110, float* %19113, align 4
  %19114 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19115 = getelementptr inbounds i8, i8* %19114, i64 16
  %19116 = bitcast i8* %19115 to float*
  %19117 = load float, float* %19116, align 4
  %19118 = insertelement <4 x float> zeroinitializer, float %19117, i32 0
  %19119 = insertelement <4 x float> %19118, float 1.000000e+00, i32 1
  %19120 = insertelement <4 x float> %19119, float 1.000000e+00, i32 2
  %19121 = insertelement <4 x float> %19120, float 1.000000e+00, i32 3
  %19122 = getelementptr inbounds float, float* %2, i64 1
  %19123 = load float, float* %19122, align 4
  %19124 = insertelement <4 x float> zeroinitializer, float %19123, i32 0
  %19125 = insertelement <4 x float> %19124, float 0.000000e+00, i32 1
  %19126 = insertelement <4 x float> %19125, float 0.000000e+00, i32 2
  %19127 = insertelement <4 x float> %19126, float 0.000000e+00, i32 3
  %19128 = fmul <4 x float> %19121, %19127
  %19129 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19130 = getelementptr inbounds i8, i8* %19129, i64 20
  %19131 = bitcast i8* %19130 to float*
  %19132 = load float, float* %19131, align 4
  %19133 = insertelement <4 x float> zeroinitializer, float %19132, i32 0
  %19134 = insertelement <4 x float> %19133, float 0.000000e+00, i32 1
  %19135 = insertelement <4 x float> %19134, float 0.000000e+00, i32 2
  %19136 = insertelement <4 x float> %19135, float 0.000000e+00, i32 3
  %19137 = getelementptr inbounds float, float* %2, i64 5
  %19138 = load float, float* %19137, align 4
  %19139 = insertelement <4 x float> zeroinitializer, float %19138, i32 0
  %19140 = insertelement <4 x float> %19139, float 0.000000e+00, i32 1
  %19141 = insertelement <4 x float> %19140, float 0.000000e+00, i32 2
  %19142 = insertelement <4 x float> %19141, float 0.000000e+00, i32 3
  %19143 = call <4 x float> @llvm.fma.f32.681(<4 x float> %19136, <4 x float> %19142, <4 x float> %19128)
  %19144 = extractelement <4 x float> %19143, i32 0
  %19145 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19146 = getelementptr inbounds i8, i8* %19145, i64 20
  %19147 = bitcast i8* %19146 to float*
  store float %19144, float* %19147, align 4
  %19148 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19149 = getelementptr inbounds i8, i8* %19148, i64 16
  %19150 = bitcast i8* %19149 to float*
  %19151 = load float, float* %19150, align 4
  %19152 = insertelement <4 x float> zeroinitializer, float %19151, i32 0
  %19153 = insertelement <4 x float> %19152, float 1.000000e+00, i32 1
  %19154 = insertelement <4 x float> %19153, float 1.000000e+00, i32 2
  %19155 = insertelement <4 x float> %19154, float 1.000000e+00, i32 3
  %19156 = getelementptr inbounds float, float* %2, i64 1
  %19157 = load float, float* %19156, align 4
  %19158 = insertelement <4 x float> zeroinitializer, float %19157, i32 0
  %19159 = insertelement <4 x float> %19158, float 0.000000e+00, i32 1
  %19160 = insertelement <4 x float> %19159, float 0.000000e+00, i32 2
  %19161 = insertelement <4 x float> %19160, float 0.000000e+00, i32 3
  %19162 = fmul <4 x float> %19155, %19161
  %19163 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19164 = getelementptr inbounds i8, i8* %19163, i64 20
  %19165 = bitcast i8* %19164 to float*
  %19166 = load float, float* %19165, align 4
  %19167 = insertelement <4 x float> zeroinitializer, float %19166, i32 0
  %19168 = insertelement <4 x float> %19167, float 1.000000e+00, i32 1
  %19169 = insertelement <4 x float> %19168, float 1.000000e+00, i32 2
  %19170 = insertelement <4 x float> %19169, float 1.000000e+00, i32 3
  %19171 = getelementptr inbounds float, float* %2, i64 5
  %19172 = load float, float* %19171, align 4
  %19173 = insertelement <4 x float> zeroinitializer, float %19172, i32 0
  %19174 = insertelement <4 x float> %19173, float 0.000000e+00, i32 1
  %19175 = insertelement <4 x float> %19174, float 0.000000e+00, i32 2
  %19176 = insertelement <4 x float> %19175, float 0.000000e+00, i32 3
  %19177 = call <4 x float> @llvm.fma.f32.682(<4 x float> %19170, <4 x float> %19176, <4 x float> %19162)
  %19178 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19179 = getelementptr inbounds i8, i8* %19178, i64 24
  %19180 = bitcast i8* %19179 to float*
  %19181 = load float, float* %19180, align 4
  %19182 = insertelement <4 x float> zeroinitializer, float %19181, i32 0
  %19183 = insertelement <4 x float> %19182, float 0.000000e+00, i32 1
  %19184 = insertelement <4 x float> %19183, float 0.000000e+00, i32 2
  %19185 = insertelement <4 x float> %19184, float 0.000000e+00, i32 3
  %19186 = getelementptr inbounds float, float* %2, i64 9
  %19187 = load float, float* %19186, align 4
  %19188 = insertelement <4 x float> zeroinitializer, float %19187, i32 0
  %19189 = insertelement <4 x float> %19188, float 0.000000e+00, i32 1
  %19190 = insertelement <4 x float> %19189, float 0.000000e+00, i32 2
  %19191 = insertelement <4 x float> %19190, float 0.000000e+00, i32 3
  %19192 = call <4 x float> @llvm.fma.f32.683(<4 x float> %19185, <4 x float> %19191, <4 x float> %19177)
  %19193 = extractelement <4 x float> %19192, i32 0
  %19194 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19195 = getelementptr inbounds i8, i8* %19194, i64 20
  %19196 = bitcast i8* %19195 to float*
  store float %19193, float* %19196, align 4
  %19197 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19198 = getelementptr inbounds i8, i8* %19197, i64 16
  %19199 = bitcast i8* %19198 to float*
  %19200 = load float, float* %19199, align 4
  %19201 = insertelement <4 x float> zeroinitializer, float %19200, i32 0
  %19202 = insertelement <4 x float> %19201, float 1.000000e+00, i32 1
  %19203 = insertelement <4 x float> %19202, float 1.000000e+00, i32 2
  %19204 = insertelement <4 x float> %19203, float 1.000000e+00, i32 3
  %19205 = getelementptr inbounds float, float* %2, i64 1
  %19206 = load float, float* %19205, align 4
  %19207 = insertelement <4 x float> zeroinitializer, float %19206, i32 0
  %19208 = insertelement <4 x float> %19207, float 0.000000e+00, i32 1
  %19209 = insertelement <4 x float> %19208, float 0.000000e+00, i32 2
  %19210 = insertelement <4 x float> %19209, float 0.000000e+00, i32 3
  %19211 = fmul <4 x float> %19204, %19210
  %19212 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19213 = getelementptr inbounds i8, i8* %19212, i64 20
  %19214 = bitcast i8* %19213 to float*
  %19215 = load float, float* %19214, align 4
  %19216 = insertelement <4 x float> zeroinitializer, float %19215, i32 0
  %19217 = insertelement <4 x float> %19216, float 1.000000e+00, i32 1
  %19218 = insertelement <4 x float> %19217, float 1.000000e+00, i32 2
  %19219 = insertelement <4 x float> %19218, float 1.000000e+00, i32 3
  %19220 = getelementptr inbounds float, float* %2, i64 5
  %19221 = load float, float* %19220, align 4
  %19222 = insertelement <4 x float> zeroinitializer, float %19221, i32 0
  %19223 = insertelement <4 x float> %19222, float 0.000000e+00, i32 1
  %19224 = insertelement <4 x float> %19223, float 0.000000e+00, i32 2
  %19225 = insertelement <4 x float> %19224, float 0.000000e+00, i32 3
  %19226 = call <4 x float> @llvm.fma.f32.684(<4 x float> %19219, <4 x float> %19225, <4 x float> %19211)
  %19227 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19228 = getelementptr inbounds i8, i8* %19227, i64 24
  %19229 = bitcast i8* %19228 to float*
  %19230 = load float, float* %19229, align 4
  %19231 = insertelement <4 x float> zeroinitializer, float %19230, i32 0
  %19232 = insertelement <4 x float> %19231, float 1.000000e+00, i32 1
  %19233 = insertelement <4 x float> %19232, float 1.000000e+00, i32 2
  %19234 = insertelement <4 x float> %19233, float 1.000000e+00, i32 3
  %19235 = getelementptr inbounds float, float* %2, i64 9
  %19236 = load float, float* %19235, align 4
  %19237 = insertelement <4 x float> zeroinitializer, float %19236, i32 0
  %19238 = insertelement <4 x float> %19237, float 0.000000e+00, i32 1
  %19239 = insertelement <4 x float> %19238, float 0.000000e+00, i32 2
  %19240 = insertelement <4 x float> %19239, float 0.000000e+00, i32 3
  %19241 = call <4 x float> @llvm.fma.f32.685(<4 x float> %19234, <4 x float> %19240, <4 x float> %19226)
  %19242 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19243 = getelementptr inbounds i8, i8* %19242, i64 28
  %19244 = bitcast i8* %19243 to float*
  %19245 = load float, float* %19244, align 4
  %19246 = insertelement <4 x float> zeroinitializer, float %19245, i32 0
  %19247 = insertelement <4 x float> %19246, float 0.000000e+00, i32 1
  %19248 = insertelement <4 x float> %19247, float 0.000000e+00, i32 2
  %19249 = insertelement <4 x float> %19248, float 0.000000e+00, i32 3
  %19250 = getelementptr inbounds float, float* %2, i64 13
  %19251 = load float, float* %19250, align 4
  %19252 = insertelement <4 x float> zeroinitializer, float %19251, i32 0
  %19253 = insertelement <4 x float> %19252, float 0.000000e+00, i32 1
  %19254 = insertelement <4 x float> %19253, float 0.000000e+00, i32 2
  %19255 = insertelement <4 x float> %19254, float 0.000000e+00, i32 3
  %19256 = call <4 x float> @llvm.fma.f32.686(<4 x float> %19249, <4 x float> %19255, <4 x float> %19241)
  %19257 = extractelement <4 x float> %19256, i32 0
  %19258 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19259 = getelementptr inbounds i8, i8* %19258, i64 20
  %19260 = bitcast i8* %19259 to float*
  store float %19257, float* %19260, align 4
  %19261 = extractelement <4 x float> %19256, i32 1
  %19262 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19263 = getelementptr inbounds i8, i8* %19262, i64 24
  %19264 = bitcast i8* %19263 to float*
  store float %19261, float* %19264, align 4
  %19265 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19266 = getelementptr inbounds i8, i8* %19265, i64 16
  %19267 = bitcast i8* %19266 to float*
  %19268 = load float, float* %19267, align 4
  %19269 = insertelement <4 x float> zeroinitializer, float %19268, i32 0
  %19270 = insertelement <4 x float> %19269, float 0.000000e+00, i32 1
  %19271 = insertelement <4 x float> %19270, float 0.000000e+00, i32 2
  %19272 = insertelement <4 x float> %19271, float 0.000000e+00, i32 3
  %19273 = getelementptr inbounds float, float* %2, i64 2
  %19274 = load float, float* %19273, align 4
  %19275 = insertelement <4 x float> zeroinitializer, float %19274, i32 0
  %19276 = insertelement <4 x float> %19275, float 0.000000e+00, i32 1
  %19277 = insertelement <4 x float> %19276, float 0.000000e+00, i32 2
  %19278 = insertelement <4 x float> %19277, float 0.000000e+00, i32 3
  %19279 = call <4 x float> @llvm.fma.f32.687(<4 x float> %19272, <4 x float> %19278, <4 x float> zeroinitializer)
  %19280 = extractelement <4 x float> %19279, i32 0
  %19281 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19282 = getelementptr inbounds i8, i8* %19281, i64 24
  %19283 = bitcast i8* %19282 to float*
  store float %19280, float* %19283, align 4
  %19284 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19285 = getelementptr inbounds i8, i8* %19284, i64 16
  %19286 = bitcast i8* %19285 to float*
  %19287 = load float, float* %19286, align 4
  %19288 = insertelement <4 x float> zeroinitializer, float %19287, i32 0
  %19289 = insertelement <4 x float> %19288, float 1.000000e+00, i32 1
  %19290 = insertelement <4 x float> %19289, float 1.000000e+00, i32 2
  %19291 = insertelement <4 x float> %19290, float 1.000000e+00, i32 3
  %19292 = getelementptr inbounds float, float* %2, i64 2
  %19293 = load float, float* %19292, align 4
  %19294 = insertelement <4 x float> zeroinitializer, float %19293, i32 0
  %19295 = insertelement <4 x float> %19294, float 0.000000e+00, i32 1
  %19296 = insertelement <4 x float> %19295, float 0.000000e+00, i32 2
  %19297 = insertelement <4 x float> %19296, float 0.000000e+00, i32 3
  %19298 = fmul <4 x float> %19291, %19297
  %19299 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19300 = getelementptr inbounds i8, i8* %19299, i64 20
  %19301 = bitcast i8* %19300 to float*
  %19302 = load float, float* %19301, align 4
  %19303 = insertelement <4 x float> zeroinitializer, float %19302, i32 0
  %19304 = insertelement <4 x float> %19303, float 0.000000e+00, i32 1
  %19305 = insertelement <4 x float> %19304, float 0.000000e+00, i32 2
  %19306 = insertelement <4 x float> %19305, float 0.000000e+00, i32 3
  %19307 = getelementptr inbounds float, float* %2, i64 6
  %19308 = load float, float* %19307, align 4
  %19309 = insertelement <4 x float> zeroinitializer, float %19308, i32 0
  %19310 = insertelement <4 x float> %19309, float 0.000000e+00, i32 1
  %19311 = insertelement <4 x float> %19310, float 0.000000e+00, i32 2
  %19312 = insertelement <4 x float> %19311, float 0.000000e+00, i32 3
  %19313 = call <4 x float> @llvm.fma.f32.688(<4 x float> %19306, <4 x float> %19312, <4 x float> %19298)
  %19314 = extractelement <4 x float> %19313, i32 0
  %19315 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19316 = getelementptr inbounds i8, i8* %19315, i64 24
  %19317 = bitcast i8* %19316 to float*
  store float %19314, float* %19317, align 4
  %19318 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19319 = getelementptr inbounds i8, i8* %19318, i64 16
  %19320 = bitcast i8* %19319 to float*
  %19321 = load float, float* %19320, align 4
  %19322 = insertelement <4 x float> zeroinitializer, float %19321, i32 0
  %19323 = insertelement <4 x float> %19322, float 1.000000e+00, i32 1
  %19324 = insertelement <4 x float> %19323, float 1.000000e+00, i32 2
  %19325 = insertelement <4 x float> %19324, float 1.000000e+00, i32 3
  %19326 = getelementptr inbounds float, float* %2, i64 2
  %19327 = load float, float* %19326, align 4
  %19328 = insertelement <4 x float> zeroinitializer, float %19327, i32 0
  %19329 = insertelement <4 x float> %19328, float 0.000000e+00, i32 1
  %19330 = insertelement <4 x float> %19329, float 0.000000e+00, i32 2
  %19331 = insertelement <4 x float> %19330, float 0.000000e+00, i32 3
  %19332 = fmul <4 x float> %19325, %19331
  %19333 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19334 = getelementptr inbounds i8, i8* %19333, i64 20
  %19335 = bitcast i8* %19334 to float*
  %19336 = load float, float* %19335, align 4
  %19337 = insertelement <4 x float> zeroinitializer, float %19336, i32 0
  %19338 = insertelement <4 x float> %19337, float 1.000000e+00, i32 1
  %19339 = insertelement <4 x float> %19338, float 1.000000e+00, i32 2
  %19340 = insertelement <4 x float> %19339, float 1.000000e+00, i32 3
  %19341 = getelementptr inbounds float, float* %2, i64 6
  %19342 = load float, float* %19341, align 4
  %19343 = insertelement <4 x float> zeroinitializer, float %19342, i32 0
  %19344 = insertelement <4 x float> %19343, float 0.000000e+00, i32 1
  %19345 = insertelement <4 x float> %19344, float 0.000000e+00, i32 2
  %19346 = insertelement <4 x float> %19345, float 0.000000e+00, i32 3
  %19347 = call <4 x float> @llvm.fma.f32.689(<4 x float> %19340, <4 x float> %19346, <4 x float> %19332)
  %19348 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19349 = getelementptr inbounds i8, i8* %19348, i64 24
  %19350 = bitcast i8* %19349 to float*
  %19351 = load float, float* %19350, align 4
  %19352 = insertelement <4 x float> zeroinitializer, float %19351, i32 0
  %19353 = insertelement <4 x float> %19352, float 0.000000e+00, i32 1
  %19354 = insertelement <4 x float> %19353, float 0.000000e+00, i32 2
  %19355 = insertelement <4 x float> %19354, float 0.000000e+00, i32 3
  %19356 = getelementptr inbounds float, float* %2, i64 10
  %19357 = load float, float* %19356, align 4
  %19358 = insertelement <4 x float> zeroinitializer, float %19357, i32 0
  %19359 = insertelement <4 x float> %19358, float 0.000000e+00, i32 1
  %19360 = insertelement <4 x float> %19359, float 0.000000e+00, i32 2
  %19361 = insertelement <4 x float> %19360, float 0.000000e+00, i32 3
  %19362 = call <4 x float> @llvm.fma.f32.690(<4 x float> %19355, <4 x float> %19361, <4 x float> %19347)
  %19363 = extractelement <4 x float> %19362, i32 0
  %19364 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19365 = getelementptr inbounds i8, i8* %19364, i64 24
  %19366 = bitcast i8* %19365 to float*
  store float %19363, float* %19366, align 4
  %19367 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19368 = getelementptr inbounds i8, i8* %19367, i64 16
  %19369 = bitcast i8* %19368 to float*
  %19370 = load float, float* %19369, align 4
  %19371 = insertelement <4 x float> zeroinitializer, float %19370, i32 0
  %19372 = insertelement <4 x float> %19371, float 1.000000e+00, i32 1
  %19373 = insertelement <4 x float> %19372, float 1.000000e+00, i32 2
  %19374 = insertelement <4 x float> %19373, float 1.000000e+00, i32 3
  %19375 = getelementptr inbounds float, float* %2, i64 2
  %19376 = load float, float* %19375, align 4
  %19377 = insertelement <4 x float> zeroinitializer, float %19376, i32 0
  %19378 = insertelement <4 x float> %19377, float 0.000000e+00, i32 1
  %19379 = insertelement <4 x float> %19378, float 0.000000e+00, i32 2
  %19380 = insertelement <4 x float> %19379, float 0.000000e+00, i32 3
  %19381 = fmul <4 x float> %19374, %19380
  %19382 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19383 = getelementptr inbounds i8, i8* %19382, i64 20
  %19384 = bitcast i8* %19383 to float*
  %19385 = load float, float* %19384, align 4
  %19386 = insertelement <4 x float> zeroinitializer, float %19385, i32 0
  %19387 = insertelement <4 x float> %19386, float 1.000000e+00, i32 1
  %19388 = insertelement <4 x float> %19387, float 1.000000e+00, i32 2
  %19389 = insertelement <4 x float> %19388, float 1.000000e+00, i32 3
  %19390 = getelementptr inbounds float, float* %2, i64 6
  %19391 = load float, float* %19390, align 4
  %19392 = insertelement <4 x float> zeroinitializer, float %19391, i32 0
  %19393 = insertelement <4 x float> %19392, float 0.000000e+00, i32 1
  %19394 = insertelement <4 x float> %19393, float 0.000000e+00, i32 2
  %19395 = insertelement <4 x float> %19394, float 0.000000e+00, i32 3
  %19396 = call <4 x float> @llvm.fma.f32.691(<4 x float> %19389, <4 x float> %19395, <4 x float> %19381)
  %19397 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19398 = getelementptr inbounds i8, i8* %19397, i64 24
  %19399 = bitcast i8* %19398 to float*
  %19400 = load float, float* %19399, align 4
  %19401 = insertelement <4 x float> zeroinitializer, float %19400, i32 0
  %19402 = insertelement <4 x float> %19401, float 1.000000e+00, i32 1
  %19403 = insertelement <4 x float> %19402, float 1.000000e+00, i32 2
  %19404 = insertelement <4 x float> %19403, float 1.000000e+00, i32 3
  %19405 = getelementptr inbounds float, float* %2, i64 10
  %19406 = load float, float* %19405, align 4
  %19407 = insertelement <4 x float> zeroinitializer, float %19406, i32 0
  %19408 = insertelement <4 x float> %19407, float 0.000000e+00, i32 1
  %19409 = insertelement <4 x float> %19408, float 0.000000e+00, i32 2
  %19410 = insertelement <4 x float> %19409, float 0.000000e+00, i32 3
  %19411 = call <4 x float> @llvm.fma.f32.692(<4 x float> %19404, <4 x float> %19410, <4 x float> %19396)
  %19412 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19413 = getelementptr inbounds i8, i8* %19412, i64 28
  %19414 = bitcast i8* %19413 to float*
  %19415 = load float, float* %19414, align 4
  %19416 = insertelement <4 x float> zeroinitializer, float %19415, i32 0
  %19417 = insertelement <4 x float> %19416, float 0.000000e+00, i32 1
  %19418 = insertelement <4 x float> %19417, float 0.000000e+00, i32 2
  %19419 = insertelement <4 x float> %19418, float 0.000000e+00, i32 3
  %19420 = getelementptr inbounds float, float* %2, i64 14
  %19421 = load float, float* %19420, align 4
  %19422 = insertelement <4 x float> zeroinitializer, float %19421, i32 0
  %19423 = insertelement <4 x float> %19422, float 0.000000e+00, i32 1
  %19424 = insertelement <4 x float> %19423, float 0.000000e+00, i32 2
  %19425 = insertelement <4 x float> %19424, float 0.000000e+00, i32 3
  %19426 = call <4 x float> @llvm.fma.f32.693(<4 x float> %19419, <4 x float> %19425, <4 x float> %19411)
  %19427 = extractelement <4 x float> %19426, i32 0
  %19428 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19429 = getelementptr inbounds i8, i8* %19428, i64 24
  %19430 = bitcast i8* %19429 to float*
  store float %19427, float* %19430, align 4
  %19431 = extractelement <4 x float> %19426, i32 1
  %19432 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19433 = getelementptr inbounds i8, i8* %19432, i64 28
  %19434 = bitcast i8* %19433 to float*
  store float %19431, float* %19434, align 4
  %19435 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19436 = getelementptr inbounds i8, i8* %19435, i64 16
  %19437 = bitcast i8* %19436 to float*
  %19438 = load float, float* %19437, align 4
  %19439 = insertelement <4 x float> zeroinitializer, float %19438, i32 0
  %19440 = insertelement <4 x float> %19439, float 0.000000e+00, i32 1
  %19441 = insertelement <4 x float> %19440, float 0.000000e+00, i32 2
  %19442 = insertelement <4 x float> %19441, float 0.000000e+00, i32 3
  %19443 = getelementptr inbounds float, float* %2, i64 3
  %19444 = load float, float* %19443, align 4
  %19445 = insertelement <4 x float> zeroinitializer, float %19444, i32 0
  %19446 = insertelement <4 x float> %19445, float 0.000000e+00, i32 1
  %19447 = insertelement <4 x float> %19446, float 0.000000e+00, i32 2
  %19448 = insertelement <4 x float> %19447, float 0.000000e+00, i32 3
  %19449 = call <4 x float> @llvm.fma.f32.694(<4 x float> %19442, <4 x float> %19448, <4 x float> zeroinitializer)
  %19450 = extractelement <4 x float> %19449, i32 0
  %19451 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19452 = getelementptr inbounds i8, i8* %19451, i64 28
  %19453 = bitcast i8* %19452 to float*
  store float %19450, float* %19453, align 4
  %19454 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19455 = getelementptr inbounds i8, i8* %19454, i64 16
  %19456 = bitcast i8* %19455 to float*
  %19457 = load float, float* %19456, align 4
  %19458 = insertelement <4 x float> zeroinitializer, float %19457, i32 0
  %19459 = insertelement <4 x float> %19458, float 1.000000e+00, i32 1
  %19460 = insertelement <4 x float> %19459, float 1.000000e+00, i32 2
  %19461 = insertelement <4 x float> %19460, float 1.000000e+00, i32 3
  %19462 = getelementptr inbounds float, float* %2, i64 3
  %19463 = load float, float* %19462, align 4
  %19464 = insertelement <4 x float> zeroinitializer, float %19463, i32 0
  %19465 = insertelement <4 x float> %19464, float 0.000000e+00, i32 1
  %19466 = insertelement <4 x float> %19465, float 0.000000e+00, i32 2
  %19467 = insertelement <4 x float> %19466, float 0.000000e+00, i32 3
  %19468 = fmul <4 x float> %19461, %19467
  %19469 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19470 = getelementptr inbounds i8, i8* %19469, i64 20
  %19471 = bitcast i8* %19470 to float*
  %19472 = load float, float* %19471, align 4
  %19473 = insertelement <4 x float> zeroinitializer, float %19472, i32 0
  %19474 = insertelement <4 x float> %19473, float 0.000000e+00, i32 1
  %19475 = insertelement <4 x float> %19474, float 0.000000e+00, i32 2
  %19476 = insertelement <4 x float> %19475, float 0.000000e+00, i32 3
  %19477 = getelementptr inbounds float, float* %2, i64 7
  %19478 = load float, float* %19477, align 4
  %19479 = insertelement <4 x float> zeroinitializer, float %19478, i32 0
  %19480 = insertelement <4 x float> %19479, float 0.000000e+00, i32 1
  %19481 = insertelement <4 x float> %19480, float 0.000000e+00, i32 2
  %19482 = insertelement <4 x float> %19481, float 0.000000e+00, i32 3
  %19483 = call <4 x float> @llvm.fma.f32.695(<4 x float> %19476, <4 x float> %19482, <4 x float> %19468)
  %19484 = extractelement <4 x float> %19483, i32 0
  %19485 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19486 = getelementptr inbounds i8, i8* %19485, i64 28
  %19487 = bitcast i8* %19486 to float*
  store float %19484, float* %19487, align 4
  %19488 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19489 = getelementptr inbounds i8, i8* %19488, i64 16
  %19490 = bitcast i8* %19489 to float*
  %19491 = load float, float* %19490, align 4
  %19492 = insertelement <4 x float> zeroinitializer, float %19491, i32 0
  %19493 = insertelement <4 x float> %19492, float 1.000000e+00, i32 1
  %19494 = insertelement <4 x float> %19493, float 1.000000e+00, i32 2
  %19495 = insertelement <4 x float> %19494, float 1.000000e+00, i32 3
  %19496 = getelementptr inbounds float, float* %2, i64 3
  %19497 = load float, float* %19496, align 4
  %19498 = insertelement <4 x float> zeroinitializer, float %19497, i32 0
  %19499 = insertelement <4 x float> %19498, float 0.000000e+00, i32 1
  %19500 = insertelement <4 x float> %19499, float 0.000000e+00, i32 2
  %19501 = insertelement <4 x float> %19500, float 0.000000e+00, i32 3
  %19502 = fmul <4 x float> %19495, %19501
  %19503 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19504 = getelementptr inbounds i8, i8* %19503, i64 20
  %19505 = bitcast i8* %19504 to float*
  %19506 = load float, float* %19505, align 4
  %19507 = insertelement <4 x float> zeroinitializer, float %19506, i32 0
  %19508 = insertelement <4 x float> %19507, float 1.000000e+00, i32 1
  %19509 = insertelement <4 x float> %19508, float 1.000000e+00, i32 2
  %19510 = insertelement <4 x float> %19509, float 1.000000e+00, i32 3
  %19511 = getelementptr inbounds float, float* %2, i64 7
  %19512 = load float, float* %19511, align 4
  %19513 = insertelement <4 x float> zeroinitializer, float %19512, i32 0
  %19514 = insertelement <4 x float> %19513, float 0.000000e+00, i32 1
  %19515 = insertelement <4 x float> %19514, float 0.000000e+00, i32 2
  %19516 = insertelement <4 x float> %19515, float 0.000000e+00, i32 3
  %19517 = call <4 x float> @llvm.fma.f32.696(<4 x float> %19510, <4 x float> %19516, <4 x float> %19502)
  %19518 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19519 = getelementptr inbounds i8, i8* %19518, i64 24
  %19520 = bitcast i8* %19519 to float*
  %19521 = load float, float* %19520, align 4
  %19522 = insertelement <4 x float> zeroinitializer, float %19521, i32 0
  %19523 = insertelement <4 x float> %19522, float 0.000000e+00, i32 1
  %19524 = insertelement <4 x float> %19523, float 0.000000e+00, i32 2
  %19525 = insertelement <4 x float> %19524, float 0.000000e+00, i32 3
  %19526 = getelementptr inbounds float, float* %2, i64 11
  %19527 = load float, float* %19526, align 4
  %19528 = insertelement <4 x float> zeroinitializer, float %19527, i32 0
  %19529 = insertelement <4 x float> %19528, float 0.000000e+00, i32 1
  %19530 = insertelement <4 x float> %19529, float 0.000000e+00, i32 2
  %19531 = insertelement <4 x float> %19530, float 0.000000e+00, i32 3
  %19532 = call <4 x float> @llvm.fma.f32.697(<4 x float> %19525, <4 x float> %19531, <4 x float> %19517)
  %19533 = extractelement <4 x float> %19532, i32 0
  %19534 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19535 = getelementptr inbounds i8, i8* %19534, i64 28
  %19536 = bitcast i8* %19535 to float*
  store float %19533, float* %19536, align 4
  %19537 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19538 = getelementptr inbounds i8, i8* %19537, i64 16
  %19539 = bitcast i8* %19538 to float*
  %19540 = load float, float* %19539, align 4
  %19541 = insertelement <4 x float> zeroinitializer, float %19540, i32 0
  %19542 = insertelement <4 x float> %19541, float 1.000000e+00, i32 1
  %19543 = insertelement <4 x float> %19542, float 1.000000e+00, i32 2
  %19544 = insertelement <4 x float> %19543, float 1.000000e+00, i32 3
  %19545 = getelementptr inbounds float, float* %2, i64 3
  %19546 = load float, float* %19545, align 4
  %19547 = insertelement <4 x float> zeroinitializer, float %19546, i32 0
  %19548 = insertelement <4 x float> %19547, float 0.000000e+00, i32 1
  %19549 = insertelement <4 x float> %19548, float 0.000000e+00, i32 2
  %19550 = insertelement <4 x float> %19549, float 0.000000e+00, i32 3
  %19551 = fmul <4 x float> %19544, %19550
  %19552 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19553 = getelementptr inbounds i8, i8* %19552, i64 20
  %19554 = bitcast i8* %19553 to float*
  %19555 = load float, float* %19554, align 4
  %19556 = insertelement <4 x float> zeroinitializer, float %19555, i32 0
  %19557 = insertelement <4 x float> %19556, float 1.000000e+00, i32 1
  %19558 = insertelement <4 x float> %19557, float 1.000000e+00, i32 2
  %19559 = insertelement <4 x float> %19558, float 1.000000e+00, i32 3
  %19560 = getelementptr inbounds float, float* %2, i64 7
  %19561 = load float, float* %19560, align 4
  %19562 = insertelement <4 x float> zeroinitializer, float %19561, i32 0
  %19563 = insertelement <4 x float> %19562, float 0.000000e+00, i32 1
  %19564 = insertelement <4 x float> %19563, float 0.000000e+00, i32 2
  %19565 = insertelement <4 x float> %19564, float 0.000000e+00, i32 3
  %19566 = call <4 x float> @llvm.fma.f32.698(<4 x float> %19559, <4 x float> %19565, <4 x float> %19551)
  %19567 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19568 = getelementptr inbounds i8, i8* %19567, i64 24
  %19569 = bitcast i8* %19568 to float*
  %19570 = load float, float* %19569, align 4
  %19571 = insertelement <4 x float> zeroinitializer, float %19570, i32 0
  %19572 = insertelement <4 x float> %19571, float 1.000000e+00, i32 1
  %19573 = insertelement <4 x float> %19572, float 1.000000e+00, i32 2
  %19574 = insertelement <4 x float> %19573, float 1.000000e+00, i32 3
  %19575 = getelementptr inbounds float, float* %2, i64 11
  %19576 = load float, float* %19575, align 4
  %19577 = insertelement <4 x float> zeroinitializer, float %19576, i32 0
  %19578 = insertelement <4 x float> %19577, float 0.000000e+00, i32 1
  %19579 = insertelement <4 x float> %19578, float 0.000000e+00, i32 2
  %19580 = insertelement <4 x float> %19579, float 0.000000e+00, i32 3
  %19581 = call <4 x float> @llvm.fma.f32.699(<4 x float> %19574, <4 x float> %19580, <4 x float> %19566)
  %19582 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19583 = getelementptr inbounds i8, i8* %19582, i64 28
  %19584 = bitcast i8* %19583 to float*
  %19585 = load float, float* %19584, align 4
  %19586 = insertelement <4 x float> zeroinitializer, float %19585, i32 0
  %19587 = insertelement <4 x float> %19586, float 0.000000e+00, i32 1
  %19588 = insertelement <4 x float> %19587, float 0.000000e+00, i32 2
  %19589 = insertelement <4 x float> %19588, float 0.000000e+00, i32 3
  %19590 = getelementptr inbounds float, float* %2, i64 15
  %19591 = load float, float* %19590, align 4
  %19592 = insertelement <4 x float> zeroinitializer, float %19591, i32 0
  %19593 = insertelement <4 x float> %19592, float 0.000000e+00, i32 1
  %19594 = insertelement <4 x float> %19593, float 0.000000e+00, i32 2
  %19595 = insertelement <4 x float> %19594, float 0.000000e+00, i32 3
  %19596 = call <4 x float> @llvm.fma.f32.700(<4 x float> %19589, <4 x float> %19595, <4 x float> %19581)
  %19597 = extractelement <4 x float> %19596, i32 0
  %19598 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19599 = getelementptr inbounds i8, i8* %19598, i64 28
  %19600 = bitcast i8* %19599 to float*
  store float %19597, float* %19600, align 4
  %19601 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19602 = getelementptr inbounds i8, i8* %19601, i64 32
  %19603 = bitcast i8* %19602 to float*
  store float 0.000000e+00, float* %19603, align 4
  %19604 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19605 = getelementptr inbounds i8, i8* %19604, i64 32
  %19606 = bitcast i8* %19605 to float*
  %19607 = load float, float* %19606, align 4
  %19608 = insertelement <4 x float> zeroinitializer, float %19607, i32 0
  %19609 = insertelement <4 x float> %19608, float 0.000000e+00, i32 1
  %19610 = insertelement <4 x float> %19609, float 0.000000e+00, i32 2
  %19611 = insertelement <4 x float> %19610, float 0.000000e+00, i32 3
  %19612 = load float, float* %2, align 4
  %19613 = insertelement <4 x float> zeroinitializer, float %19612, i32 0
  %19614 = insertelement <4 x float> %19613, float 0.000000e+00, i32 1
  %19615 = insertelement <4 x float> %19614, float 0.000000e+00, i32 2
  %19616 = insertelement <4 x float> %19615, float 0.000000e+00, i32 3
  %19617 = call <4 x float> @llvm.fma.f32.701(<4 x float> %19611, <4 x float> %19616, <4 x float> zeroinitializer)
  %19618 = extractelement <4 x float> %19617, i32 0
  %19619 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19620 = getelementptr inbounds i8, i8* %19619, i64 32
  %19621 = bitcast i8* %19620 to float*
  store float %19618, float* %19621, align 4
  %19622 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19623 = getelementptr inbounds i8, i8* %19622, i64 32
  %19624 = bitcast i8* %19623 to float*
  %19625 = load float, float* %19624, align 4
  %19626 = insertelement <4 x float> zeroinitializer, float %19625, i32 0
  %19627 = insertelement <4 x float> %19626, float 1.000000e+00, i32 1
  %19628 = insertelement <4 x float> %19627, float 1.000000e+00, i32 2
  %19629 = insertelement <4 x float> %19628, float 1.000000e+00, i32 3
  %19630 = load float, float* %2, align 4
  %19631 = insertelement <4 x float> zeroinitializer, float %19630, i32 0
  %19632 = insertelement <4 x float> %19631, float 0.000000e+00, i32 1
  %19633 = insertelement <4 x float> %19632, float 0.000000e+00, i32 2
  %19634 = insertelement <4 x float> %19633, float 0.000000e+00, i32 3
  %19635 = fmul <4 x float> %19629, %19634
  %19636 = fadd <4 x float> %19635, zeroinitializer
  %19637 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19638 = getelementptr inbounds i8, i8* %19637, i64 36
  %19639 = bitcast i8* %19638 to float*
  %19640 = load float, float* %19639, align 4
  %19641 = insertelement <4 x float> zeroinitializer, float %19640, i32 0
  %19642 = insertelement <4 x float> %19641, float 0.000000e+00, i32 1
  %19643 = insertelement <4 x float> %19642, float 0.000000e+00, i32 2
  %19644 = insertelement <4 x float> %19643, float 0.000000e+00, i32 3
  %19645 = getelementptr inbounds float, float* %2, i64 4
  %19646 = load float, float* %19645, align 4
  %19647 = insertelement <4 x float> zeroinitializer, float %19646, i32 0
  %19648 = insertelement <4 x float> %19647, float 0.000000e+00, i32 1
  %19649 = insertelement <4 x float> %19648, float 0.000000e+00, i32 2
  %19650 = insertelement <4 x float> %19649, float 0.000000e+00, i32 3
  %19651 = call <4 x float> @llvm.fma.f32.702(<4 x float> %19644, <4 x float> %19650, <4 x float> %19636)
  %19652 = extractelement <4 x float> %19651, i32 0
  %19653 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19654 = getelementptr inbounds i8, i8* %19653, i64 32
  %19655 = bitcast i8* %19654 to float*
  store float %19652, float* %19655, align 4
  %19656 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19657 = getelementptr inbounds i8, i8* %19656, i64 32
  %19658 = bitcast i8* %19657 to float*
  %19659 = load float, float* %19658, align 4
  %19660 = insertelement <4 x float> zeroinitializer, float %19659, i32 0
  %19661 = insertelement <4 x float> %19660, float 1.000000e+00, i32 1
  %19662 = insertelement <4 x float> %19661, float 1.000000e+00, i32 2
  %19663 = insertelement <4 x float> %19662, float 1.000000e+00, i32 3
  %19664 = load float, float* %2, align 4
  %19665 = insertelement <4 x float> zeroinitializer, float %19664, i32 0
  %19666 = insertelement <4 x float> %19665, float 0.000000e+00, i32 1
  %19667 = insertelement <4 x float> %19666, float 0.000000e+00, i32 2
  %19668 = insertelement <4 x float> %19667, float 0.000000e+00, i32 3
  %19669 = fmul <4 x float> %19663, %19668
  %19670 = fadd <4 x float> %19669, zeroinitializer
  %19671 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19672 = getelementptr inbounds i8, i8* %19671, i64 36
  %19673 = bitcast i8* %19672 to float*
  %19674 = load float, float* %19673, align 4
  %19675 = insertelement <4 x float> zeroinitializer, float %19674, i32 0
  %19676 = insertelement <4 x float> %19675, float 1.000000e+00, i32 1
  %19677 = insertelement <4 x float> %19676, float 1.000000e+00, i32 2
  %19678 = insertelement <4 x float> %19677, float 1.000000e+00, i32 3
  %19679 = getelementptr inbounds float, float* %2, i64 4
  %19680 = load float, float* %19679, align 4
  %19681 = insertelement <4 x float> zeroinitializer, float %19680, i32 0
  %19682 = insertelement <4 x float> %19681, float 0.000000e+00, i32 1
  %19683 = insertelement <4 x float> %19682, float 0.000000e+00, i32 2
  %19684 = insertelement <4 x float> %19683, float 0.000000e+00, i32 3
  %19685 = call <4 x float> @llvm.fma.f32.703(<4 x float> %19678, <4 x float> %19684, <4 x float> %19670)
  %19686 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19687 = getelementptr inbounds i8, i8* %19686, i64 40
  %19688 = bitcast i8* %19687 to float*
  %19689 = load float, float* %19688, align 4
  %19690 = insertelement <4 x float> zeroinitializer, float %19689, i32 0
  %19691 = insertelement <4 x float> %19690, float 0.000000e+00, i32 1
  %19692 = insertelement <4 x float> %19691, float 0.000000e+00, i32 2
  %19693 = insertelement <4 x float> %19692, float 0.000000e+00, i32 3
  %19694 = getelementptr inbounds float, float* %2, i64 8
  %19695 = load float, float* %19694, align 4
  %19696 = insertelement <4 x float> zeroinitializer, float %19695, i32 0
  %19697 = insertelement <4 x float> %19696, float 0.000000e+00, i32 1
  %19698 = insertelement <4 x float> %19697, float 0.000000e+00, i32 2
  %19699 = insertelement <4 x float> %19698, float 0.000000e+00, i32 3
  %19700 = call <4 x float> @llvm.fma.f32.704(<4 x float> %19693, <4 x float> %19699, <4 x float> %19685)
  %19701 = extractelement <4 x float> %19700, i32 0
  %19702 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19703 = getelementptr inbounds i8, i8* %19702, i64 32
  %19704 = bitcast i8* %19703 to float*
  store float %19701, float* %19704, align 4
  %19705 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19706 = getelementptr inbounds i8, i8* %19705, i64 32
  %19707 = bitcast i8* %19706 to float*
  %19708 = load float, float* %19707, align 4
  %19709 = insertelement <4 x float> zeroinitializer, float %19708, i32 0
  %19710 = insertelement <4 x float> %19709, float 1.000000e+00, i32 1
  %19711 = insertelement <4 x float> %19710, float 1.000000e+00, i32 2
  %19712 = insertelement <4 x float> %19711, float 1.000000e+00, i32 3
  %19713 = load float, float* %2, align 4
  %19714 = insertelement <4 x float> zeroinitializer, float %19713, i32 0
  %19715 = insertelement <4 x float> %19714, float 0.000000e+00, i32 1
  %19716 = insertelement <4 x float> %19715, float 0.000000e+00, i32 2
  %19717 = insertelement <4 x float> %19716, float 0.000000e+00, i32 3
  %19718 = fmul <4 x float> %19712, %19717
  %19719 = fadd <4 x float> %19718, zeroinitializer
  %19720 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19721 = getelementptr inbounds i8, i8* %19720, i64 36
  %19722 = bitcast i8* %19721 to float*
  %19723 = load float, float* %19722, align 4
  %19724 = insertelement <4 x float> zeroinitializer, float %19723, i32 0
  %19725 = insertelement <4 x float> %19724, float 1.000000e+00, i32 1
  %19726 = insertelement <4 x float> %19725, float 1.000000e+00, i32 2
  %19727 = insertelement <4 x float> %19726, float 1.000000e+00, i32 3
  %19728 = getelementptr inbounds float, float* %2, i64 4
  %19729 = load float, float* %19728, align 4
  %19730 = insertelement <4 x float> zeroinitializer, float %19729, i32 0
  %19731 = insertelement <4 x float> %19730, float 0.000000e+00, i32 1
  %19732 = insertelement <4 x float> %19731, float 0.000000e+00, i32 2
  %19733 = insertelement <4 x float> %19732, float 0.000000e+00, i32 3
  %19734 = call <4 x float> @llvm.fma.f32.705(<4 x float> %19727, <4 x float> %19733, <4 x float> %19719)
  %19735 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19736 = getelementptr inbounds i8, i8* %19735, i64 40
  %19737 = bitcast i8* %19736 to float*
  %19738 = load float, float* %19737, align 4
  %19739 = insertelement <4 x float> zeroinitializer, float %19738, i32 0
  %19740 = insertelement <4 x float> %19739, float 1.000000e+00, i32 1
  %19741 = insertelement <4 x float> %19740, float 1.000000e+00, i32 2
  %19742 = insertelement <4 x float> %19741, float 1.000000e+00, i32 3
  %19743 = getelementptr inbounds float, float* %2, i64 8
  %19744 = load float, float* %19743, align 4
  %19745 = insertelement <4 x float> zeroinitializer, float %19744, i32 0
  %19746 = insertelement <4 x float> %19745, float 0.000000e+00, i32 1
  %19747 = insertelement <4 x float> %19746, float 0.000000e+00, i32 2
  %19748 = insertelement <4 x float> %19747, float 0.000000e+00, i32 3
  %19749 = call <4 x float> @llvm.fma.f32.706(<4 x float> %19742, <4 x float> %19748, <4 x float> %19734)
  %19750 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19751 = getelementptr inbounds i8, i8* %19750, i64 44
  %19752 = bitcast i8* %19751 to float*
  %19753 = load float, float* %19752, align 4
  %19754 = insertelement <4 x float> zeroinitializer, float %19753, i32 0
  %19755 = insertelement <4 x float> %19754, float 0.000000e+00, i32 1
  %19756 = insertelement <4 x float> %19755, float 0.000000e+00, i32 2
  %19757 = insertelement <4 x float> %19756, float 0.000000e+00, i32 3
  %19758 = getelementptr inbounds float, float* %2, i64 12
  %19759 = load float, float* %19758, align 4
  %19760 = insertelement <4 x float> zeroinitializer, float %19759, i32 0
  %19761 = insertelement <4 x float> %19760, float 0.000000e+00, i32 1
  %19762 = insertelement <4 x float> %19761, float 0.000000e+00, i32 2
  %19763 = insertelement <4 x float> %19762, float 0.000000e+00, i32 3
  %19764 = call <4 x float> @llvm.fma.f32.707(<4 x float> %19757, <4 x float> %19763, <4 x float> %19749)
  %19765 = extractelement <4 x float> %19764, i32 0
  %19766 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19767 = getelementptr inbounds i8, i8* %19766, i64 32
  %19768 = bitcast i8* %19767 to float*
  store float %19765, float* %19768, align 4
  %19769 = extractelement <4 x float> %19764, i32 1
  %19770 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19771 = getelementptr inbounds i8, i8* %19770, i64 36
  %19772 = bitcast i8* %19771 to float*
  store float %19769, float* %19772, align 4
  %19773 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19774 = getelementptr inbounds i8, i8* %19773, i64 32
  %19775 = bitcast i8* %19774 to float*
  %19776 = load float, float* %19775, align 4
  %19777 = insertelement <4 x float> zeroinitializer, float %19776, i32 0
  %19778 = insertelement <4 x float> %19777, float 0.000000e+00, i32 1
  %19779 = insertelement <4 x float> %19778, float 0.000000e+00, i32 2
  %19780 = insertelement <4 x float> %19779, float 0.000000e+00, i32 3
  %19781 = getelementptr inbounds float, float* %2, i64 1
  %19782 = load float, float* %19781, align 4
  %19783 = insertelement <4 x float> zeroinitializer, float %19782, i32 0
  %19784 = insertelement <4 x float> %19783, float 0.000000e+00, i32 1
  %19785 = insertelement <4 x float> %19784, float 0.000000e+00, i32 2
  %19786 = insertelement <4 x float> %19785, float 0.000000e+00, i32 3
  %19787 = call <4 x float> @llvm.fma.f32.708(<4 x float> %19780, <4 x float> %19786, <4 x float> zeroinitializer)
  %19788 = extractelement <4 x float> %19787, i32 0
  %19789 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19790 = getelementptr inbounds i8, i8* %19789, i64 36
  %19791 = bitcast i8* %19790 to float*
  store float %19788, float* %19791, align 4
  %19792 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19793 = getelementptr inbounds i8, i8* %19792, i64 32
  %19794 = bitcast i8* %19793 to float*
  %19795 = load float, float* %19794, align 4
  %19796 = insertelement <4 x float> zeroinitializer, float %19795, i32 0
  %19797 = insertelement <4 x float> %19796, float 1.000000e+00, i32 1
  %19798 = insertelement <4 x float> %19797, float 1.000000e+00, i32 2
  %19799 = insertelement <4 x float> %19798, float 1.000000e+00, i32 3
  %19800 = getelementptr inbounds float, float* %2, i64 1
  %19801 = load float, float* %19800, align 4
  %19802 = insertelement <4 x float> zeroinitializer, float %19801, i32 0
  %19803 = insertelement <4 x float> %19802, float 0.000000e+00, i32 1
  %19804 = insertelement <4 x float> %19803, float 0.000000e+00, i32 2
  %19805 = insertelement <4 x float> %19804, float 0.000000e+00, i32 3
  %19806 = fmul <4 x float> %19799, %19805
  %19807 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19808 = getelementptr inbounds i8, i8* %19807, i64 36
  %19809 = bitcast i8* %19808 to float*
  %19810 = load float, float* %19809, align 4
  %19811 = insertelement <4 x float> zeroinitializer, float %19810, i32 0
  %19812 = insertelement <4 x float> %19811, float 0.000000e+00, i32 1
  %19813 = insertelement <4 x float> %19812, float 0.000000e+00, i32 2
  %19814 = insertelement <4 x float> %19813, float 0.000000e+00, i32 3
  %19815 = getelementptr inbounds float, float* %2, i64 5
  %19816 = load float, float* %19815, align 4
  %19817 = insertelement <4 x float> zeroinitializer, float %19816, i32 0
  %19818 = insertelement <4 x float> %19817, float 0.000000e+00, i32 1
  %19819 = insertelement <4 x float> %19818, float 0.000000e+00, i32 2
  %19820 = insertelement <4 x float> %19819, float 0.000000e+00, i32 3
  %19821 = call <4 x float> @llvm.fma.f32.709(<4 x float> %19814, <4 x float> %19820, <4 x float> %19806)
  %19822 = extractelement <4 x float> %19821, i32 0
  %19823 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19824 = getelementptr inbounds i8, i8* %19823, i64 36
  %19825 = bitcast i8* %19824 to float*
  store float %19822, float* %19825, align 4
  %19826 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19827 = getelementptr inbounds i8, i8* %19826, i64 32
  %19828 = bitcast i8* %19827 to float*
  %19829 = load float, float* %19828, align 4
  %19830 = insertelement <4 x float> zeroinitializer, float %19829, i32 0
  %19831 = insertelement <4 x float> %19830, float 1.000000e+00, i32 1
  %19832 = insertelement <4 x float> %19831, float 1.000000e+00, i32 2
  %19833 = insertelement <4 x float> %19832, float 1.000000e+00, i32 3
  %19834 = getelementptr inbounds float, float* %2, i64 1
  %19835 = load float, float* %19834, align 4
  %19836 = insertelement <4 x float> zeroinitializer, float %19835, i32 0
  %19837 = insertelement <4 x float> %19836, float 0.000000e+00, i32 1
  %19838 = insertelement <4 x float> %19837, float 0.000000e+00, i32 2
  %19839 = insertelement <4 x float> %19838, float 0.000000e+00, i32 3
  %19840 = fmul <4 x float> %19833, %19839
  %19841 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19842 = getelementptr inbounds i8, i8* %19841, i64 36
  %19843 = bitcast i8* %19842 to float*
  %19844 = load float, float* %19843, align 4
  %19845 = insertelement <4 x float> zeroinitializer, float %19844, i32 0
  %19846 = insertelement <4 x float> %19845, float 1.000000e+00, i32 1
  %19847 = insertelement <4 x float> %19846, float 1.000000e+00, i32 2
  %19848 = insertelement <4 x float> %19847, float 1.000000e+00, i32 3
  %19849 = getelementptr inbounds float, float* %2, i64 5
  %19850 = load float, float* %19849, align 4
  %19851 = insertelement <4 x float> zeroinitializer, float %19850, i32 0
  %19852 = insertelement <4 x float> %19851, float 0.000000e+00, i32 1
  %19853 = insertelement <4 x float> %19852, float 0.000000e+00, i32 2
  %19854 = insertelement <4 x float> %19853, float 0.000000e+00, i32 3
  %19855 = call <4 x float> @llvm.fma.f32.710(<4 x float> %19848, <4 x float> %19854, <4 x float> %19840)
  %19856 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19857 = getelementptr inbounds i8, i8* %19856, i64 40
  %19858 = bitcast i8* %19857 to float*
  %19859 = load float, float* %19858, align 4
  %19860 = insertelement <4 x float> zeroinitializer, float %19859, i32 0
  %19861 = insertelement <4 x float> %19860, float 0.000000e+00, i32 1
  %19862 = insertelement <4 x float> %19861, float 0.000000e+00, i32 2
  %19863 = insertelement <4 x float> %19862, float 0.000000e+00, i32 3
  %19864 = getelementptr inbounds float, float* %2, i64 9
  %19865 = load float, float* %19864, align 4
  %19866 = insertelement <4 x float> zeroinitializer, float %19865, i32 0
  %19867 = insertelement <4 x float> %19866, float 0.000000e+00, i32 1
  %19868 = insertelement <4 x float> %19867, float 0.000000e+00, i32 2
  %19869 = insertelement <4 x float> %19868, float 0.000000e+00, i32 3
  %19870 = call <4 x float> @llvm.fma.f32.711(<4 x float> %19863, <4 x float> %19869, <4 x float> %19855)
  %19871 = extractelement <4 x float> %19870, i32 0
  %19872 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19873 = getelementptr inbounds i8, i8* %19872, i64 36
  %19874 = bitcast i8* %19873 to float*
  store float %19871, float* %19874, align 4
  %19875 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19876 = getelementptr inbounds i8, i8* %19875, i64 32
  %19877 = bitcast i8* %19876 to float*
  %19878 = load float, float* %19877, align 4
  %19879 = insertelement <4 x float> zeroinitializer, float %19878, i32 0
  %19880 = insertelement <4 x float> %19879, float 1.000000e+00, i32 1
  %19881 = insertelement <4 x float> %19880, float 1.000000e+00, i32 2
  %19882 = insertelement <4 x float> %19881, float 1.000000e+00, i32 3
  %19883 = getelementptr inbounds float, float* %2, i64 1
  %19884 = load float, float* %19883, align 4
  %19885 = insertelement <4 x float> zeroinitializer, float %19884, i32 0
  %19886 = insertelement <4 x float> %19885, float 0.000000e+00, i32 1
  %19887 = insertelement <4 x float> %19886, float 0.000000e+00, i32 2
  %19888 = insertelement <4 x float> %19887, float 0.000000e+00, i32 3
  %19889 = fmul <4 x float> %19882, %19888
  %19890 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19891 = getelementptr inbounds i8, i8* %19890, i64 36
  %19892 = bitcast i8* %19891 to float*
  %19893 = load float, float* %19892, align 4
  %19894 = insertelement <4 x float> zeroinitializer, float %19893, i32 0
  %19895 = insertelement <4 x float> %19894, float 1.000000e+00, i32 1
  %19896 = insertelement <4 x float> %19895, float 1.000000e+00, i32 2
  %19897 = insertelement <4 x float> %19896, float 1.000000e+00, i32 3
  %19898 = getelementptr inbounds float, float* %2, i64 5
  %19899 = load float, float* %19898, align 4
  %19900 = insertelement <4 x float> zeroinitializer, float %19899, i32 0
  %19901 = insertelement <4 x float> %19900, float 0.000000e+00, i32 1
  %19902 = insertelement <4 x float> %19901, float 0.000000e+00, i32 2
  %19903 = insertelement <4 x float> %19902, float 0.000000e+00, i32 3
  %19904 = call <4 x float> @llvm.fma.f32.712(<4 x float> %19897, <4 x float> %19903, <4 x float> %19889)
  %19905 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19906 = getelementptr inbounds i8, i8* %19905, i64 40
  %19907 = bitcast i8* %19906 to float*
  %19908 = load float, float* %19907, align 4
  %19909 = insertelement <4 x float> zeroinitializer, float %19908, i32 0
  %19910 = insertelement <4 x float> %19909, float 1.000000e+00, i32 1
  %19911 = insertelement <4 x float> %19910, float 1.000000e+00, i32 2
  %19912 = insertelement <4 x float> %19911, float 1.000000e+00, i32 3
  %19913 = getelementptr inbounds float, float* %2, i64 9
  %19914 = load float, float* %19913, align 4
  %19915 = insertelement <4 x float> zeroinitializer, float %19914, i32 0
  %19916 = insertelement <4 x float> %19915, float 0.000000e+00, i32 1
  %19917 = insertelement <4 x float> %19916, float 0.000000e+00, i32 2
  %19918 = insertelement <4 x float> %19917, float 0.000000e+00, i32 3
  %19919 = call <4 x float> @llvm.fma.f32.713(<4 x float> %19912, <4 x float> %19918, <4 x float> %19904)
  %19920 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19921 = getelementptr inbounds i8, i8* %19920, i64 44
  %19922 = bitcast i8* %19921 to float*
  %19923 = load float, float* %19922, align 4
  %19924 = insertelement <4 x float> zeroinitializer, float %19923, i32 0
  %19925 = insertelement <4 x float> %19924, float 0.000000e+00, i32 1
  %19926 = insertelement <4 x float> %19925, float 0.000000e+00, i32 2
  %19927 = insertelement <4 x float> %19926, float 0.000000e+00, i32 3
  %19928 = getelementptr inbounds float, float* %2, i64 13
  %19929 = load float, float* %19928, align 4
  %19930 = insertelement <4 x float> zeroinitializer, float %19929, i32 0
  %19931 = insertelement <4 x float> %19930, float 0.000000e+00, i32 1
  %19932 = insertelement <4 x float> %19931, float 0.000000e+00, i32 2
  %19933 = insertelement <4 x float> %19932, float 0.000000e+00, i32 3
  %19934 = call <4 x float> @llvm.fma.f32.714(<4 x float> %19927, <4 x float> %19933, <4 x float> %19919)
  %19935 = extractelement <4 x float> %19934, i32 0
  %19936 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19937 = getelementptr inbounds i8, i8* %19936, i64 36
  %19938 = bitcast i8* %19937 to float*
  store float %19935, float* %19938, align 4
  %19939 = extractelement <4 x float> %19934, i32 1
  %19940 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19941 = getelementptr inbounds i8, i8* %19940, i64 40
  %19942 = bitcast i8* %19941 to float*
  store float %19939, float* %19942, align 4
  %19943 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19944 = getelementptr inbounds i8, i8* %19943, i64 32
  %19945 = bitcast i8* %19944 to float*
  %19946 = load float, float* %19945, align 4
  %19947 = insertelement <4 x float> zeroinitializer, float %19946, i32 0
  %19948 = insertelement <4 x float> %19947, float 0.000000e+00, i32 1
  %19949 = insertelement <4 x float> %19948, float 0.000000e+00, i32 2
  %19950 = insertelement <4 x float> %19949, float 0.000000e+00, i32 3
  %19951 = getelementptr inbounds float, float* %2, i64 2
  %19952 = load float, float* %19951, align 4
  %19953 = insertelement <4 x float> zeroinitializer, float %19952, i32 0
  %19954 = insertelement <4 x float> %19953, float 0.000000e+00, i32 1
  %19955 = insertelement <4 x float> %19954, float 0.000000e+00, i32 2
  %19956 = insertelement <4 x float> %19955, float 0.000000e+00, i32 3
  %19957 = call <4 x float> @llvm.fma.f32.715(<4 x float> %19950, <4 x float> %19956, <4 x float> zeroinitializer)
  %19958 = extractelement <4 x float> %19957, i32 0
  %19959 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19960 = getelementptr inbounds i8, i8* %19959, i64 40
  %19961 = bitcast i8* %19960 to float*
  store float %19958, float* %19961, align 4
  %19962 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19963 = getelementptr inbounds i8, i8* %19962, i64 32
  %19964 = bitcast i8* %19963 to float*
  %19965 = load float, float* %19964, align 4
  %19966 = insertelement <4 x float> zeroinitializer, float %19965, i32 0
  %19967 = insertelement <4 x float> %19966, float 1.000000e+00, i32 1
  %19968 = insertelement <4 x float> %19967, float 1.000000e+00, i32 2
  %19969 = insertelement <4 x float> %19968, float 1.000000e+00, i32 3
  %19970 = getelementptr inbounds float, float* %2, i64 2
  %19971 = load float, float* %19970, align 4
  %19972 = insertelement <4 x float> zeroinitializer, float %19971, i32 0
  %19973 = insertelement <4 x float> %19972, float 0.000000e+00, i32 1
  %19974 = insertelement <4 x float> %19973, float 0.000000e+00, i32 2
  %19975 = insertelement <4 x float> %19974, float 0.000000e+00, i32 3
  %19976 = fmul <4 x float> %19969, %19975
  %19977 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19978 = getelementptr inbounds i8, i8* %19977, i64 36
  %19979 = bitcast i8* %19978 to float*
  %19980 = load float, float* %19979, align 4
  %19981 = insertelement <4 x float> zeroinitializer, float %19980, i32 0
  %19982 = insertelement <4 x float> %19981, float 0.000000e+00, i32 1
  %19983 = insertelement <4 x float> %19982, float 0.000000e+00, i32 2
  %19984 = insertelement <4 x float> %19983, float 0.000000e+00, i32 3
  %19985 = getelementptr inbounds float, float* %2, i64 6
  %19986 = load float, float* %19985, align 4
  %19987 = insertelement <4 x float> zeroinitializer, float %19986, i32 0
  %19988 = insertelement <4 x float> %19987, float 0.000000e+00, i32 1
  %19989 = insertelement <4 x float> %19988, float 0.000000e+00, i32 2
  %19990 = insertelement <4 x float> %19989, float 0.000000e+00, i32 3
  %19991 = call <4 x float> @llvm.fma.f32.716(<4 x float> %19984, <4 x float> %19990, <4 x float> %19976)
  %19992 = extractelement <4 x float> %19991, i32 0
  %19993 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19994 = getelementptr inbounds i8, i8* %19993, i64 40
  %19995 = bitcast i8* %19994 to float*
  store float %19992, float* %19995, align 4
  %19996 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %19997 = getelementptr inbounds i8, i8* %19996, i64 32
  %19998 = bitcast i8* %19997 to float*
  %19999 = load float, float* %19998, align 4
  %20000 = insertelement <4 x float> zeroinitializer, float %19999, i32 0
  %20001 = insertelement <4 x float> %20000, float 1.000000e+00, i32 1
  %20002 = insertelement <4 x float> %20001, float 1.000000e+00, i32 2
  %20003 = insertelement <4 x float> %20002, float 1.000000e+00, i32 3
  %20004 = getelementptr inbounds float, float* %2, i64 2
  %20005 = load float, float* %20004, align 4
  %20006 = insertelement <4 x float> zeroinitializer, float %20005, i32 0
  %20007 = insertelement <4 x float> %20006, float 0.000000e+00, i32 1
  %20008 = insertelement <4 x float> %20007, float 0.000000e+00, i32 2
  %20009 = insertelement <4 x float> %20008, float 0.000000e+00, i32 3
  %20010 = fmul <4 x float> %20003, %20009
  %20011 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20012 = getelementptr inbounds i8, i8* %20011, i64 36
  %20013 = bitcast i8* %20012 to float*
  %20014 = load float, float* %20013, align 4
  %20015 = insertelement <4 x float> zeroinitializer, float %20014, i32 0
  %20016 = insertelement <4 x float> %20015, float 1.000000e+00, i32 1
  %20017 = insertelement <4 x float> %20016, float 1.000000e+00, i32 2
  %20018 = insertelement <4 x float> %20017, float 1.000000e+00, i32 3
  %20019 = getelementptr inbounds float, float* %2, i64 6
  %20020 = load float, float* %20019, align 4
  %20021 = insertelement <4 x float> zeroinitializer, float %20020, i32 0
  %20022 = insertelement <4 x float> %20021, float 0.000000e+00, i32 1
  %20023 = insertelement <4 x float> %20022, float 0.000000e+00, i32 2
  %20024 = insertelement <4 x float> %20023, float 0.000000e+00, i32 3
  %20025 = call <4 x float> @llvm.fma.f32.717(<4 x float> %20018, <4 x float> %20024, <4 x float> %20010)
  %20026 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20027 = getelementptr inbounds i8, i8* %20026, i64 40
  %20028 = bitcast i8* %20027 to float*
  %20029 = load float, float* %20028, align 4
  %20030 = insertelement <4 x float> zeroinitializer, float %20029, i32 0
  %20031 = insertelement <4 x float> %20030, float 0.000000e+00, i32 1
  %20032 = insertelement <4 x float> %20031, float 0.000000e+00, i32 2
  %20033 = insertelement <4 x float> %20032, float 0.000000e+00, i32 3
  %20034 = getelementptr inbounds float, float* %2, i64 10
  %20035 = load float, float* %20034, align 4
  %20036 = insertelement <4 x float> zeroinitializer, float %20035, i32 0
  %20037 = insertelement <4 x float> %20036, float 0.000000e+00, i32 1
  %20038 = insertelement <4 x float> %20037, float 0.000000e+00, i32 2
  %20039 = insertelement <4 x float> %20038, float 0.000000e+00, i32 3
  %20040 = call <4 x float> @llvm.fma.f32.718(<4 x float> %20033, <4 x float> %20039, <4 x float> %20025)
  %20041 = extractelement <4 x float> %20040, i32 0
  %20042 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20043 = getelementptr inbounds i8, i8* %20042, i64 40
  %20044 = bitcast i8* %20043 to float*
  store float %20041, float* %20044, align 4
  %20045 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20046 = getelementptr inbounds i8, i8* %20045, i64 32
  %20047 = bitcast i8* %20046 to float*
  %20048 = load float, float* %20047, align 4
  %20049 = insertelement <4 x float> zeroinitializer, float %20048, i32 0
  %20050 = insertelement <4 x float> %20049, float 1.000000e+00, i32 1
  %20051 = insertelement <4 x float> %20050, float 1.000000e+00, i32 2
  %20052 = insertelement <4 x float> %20051, float 1.000000e+00, i32 3
  %20053 = getelementptr inbounds float, float* %2, i64 2
  %20054 = load float, float* %20053, align 4
  %20055 = insertelement <4 x float> zeroinitializer, float %20054, i32 0
  %20056 = insertelement <4 x float> %20055, float 0.000000e+00, i32 1
  %20057 = insertelement <4 x float> %20056, float 0.000000e+00, i32 2
  %20058 = insertelement <4 x float> %20057, float 0.000000e+00, i32 3
  %20059 = fmul <4 x float> %20052, %20058
  %20060 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20061 = getelementptr inbounds i8, i8* %20060, i64 36
  %20062 = bitcast i8* %20061 to float*
  %20063 = load float, float* %20062, align 4
  %20064 = insertelement <4 x float> zeroinitializer, float %20063, i32 0
  %20065 = insertelement <4 x float> %20064, float 1.000000e+00, i32 1
  %20066 = insertelement <4 x float> %20065, float 1.000000e+00, i32 2
  %20067 = insertelement <4 x float> %20066, float 1.000000e+00, i32 3
  %20068 = getelementptr inbounds float, float* %2, i64 6
  %20069 = load float, float* %20068, align 4
  %20070 = insertelement <4 x float> zeroinitializer, float %20069, i32 0
  %20071 = insertelement <4 x float> %20070, float 0.000000e+00, i32 1
  %20072 = insertelement <4 x float> %20071, float 0.000000e+00, i32 2
  %20073 = insertelement <4 x float> %20072, float 0.000000e+00, i32 3
  %20074 = call <4 x float> @llvm.fma.f32.719(<4 x float> %20067, <4 x float> %20073, <4 x float> %20059)
  %20075 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20076 = getelementptr inbounds i8, i8* %20075, i64 40
  %20077 = bitcast i8* %20076 to float*
  %20078 = load float, float* %20077, align 4
  %20079 = insertelement <4 x float> zeroinitializer, float %20078, i32 0
  %20080 = insertelement <4 x float> %20079, float 1.000000e+00, i32 1
  %20081 = insertelement <4 x float> %20080, float 1.000000e+00, i32 2
  %20082 = insertelement <4 x float> %20081, float 1.000000e+00, i32 3
  %20083 = getelementptr inbounds float, float* %2, i64 10
  %20084 = load float, float* %20083, align 4
  %20085 = insertelement <4 x float> zeroinitializer, float %20084, i32 0
  %20086 = insertelement <4 x float> %20085, float 0.000000e+00, i32 1
  %20087 = insertelement <4 x float> %20086, float 0.000000e+00, i32 2
  %20088 = insertelement <4 x float> %20087, float 0.000000e+00, i32 3
  %20089 = call <4 x float> @llvm.fma.f32.720(<4 x float> %20082, <4 x float> %20088, <4 x float> %20074)
  %20090 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20091 = getelementptr inbounds i8, i8* %20090, i64 44
  %20092 = bitcast i8* %20091 to float*
  %20093 = load float, float* %20092, align 4
  %20094 = insertelement <4 x float> zeroinitializer, float %20093, i32 0
  %20095 = insertelement <4 x float> %20094, float 0.000000e+00, i32 1
  %20096 = insertelement <4 x float> %20095, float 0.000000e+00, i32 2
  %20097 = insertelement <4 x float> %20096, float 0.000000e+00, i32 3
  %20098 = getelementptr inbounds float, float* %2, i64 14
  %20099 = load float, float* %20098, align 4
  %20100 = insertelement <4 x float> zeroinitializer, float %20099, i32 0
  %20101 = insertelement <4 x float> %20100, float 0.000000e+00, i32 1
  %20102 = insertelement <4 x float> %20101, float 0.000000e+00, i32 2
  %20103 = insertelement <4 x float> %20102, float 0.000000e+00, i32 3
  %20104 = call <4 x float> @llvm.fma.f32.721(<4 x float> %20097, <4 x float> %20103, <4 x float> %20089)
  %20105 = extractelement <4 x float> %20104, i32 0
  %20106 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20107 = getelementptr inbounds i8, i8* %20106, i64 40
  %20108 = bitcast i8* %20107 to float*
  store float %20105, float* %20108, align 4
  %20109 = extractelement <4 x float> %20104, i32 1
  %20110 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20111 = getelementptr inbounds i8, i8* %20110, i64 44
  %20112 = bitcast i8* %20111 to float*
  store float %20109, float* %20112, align 4
  %20113 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20114 = getelementptr inbounds i8, i8* %20113, i64 32
  %20115 = bitcast i8* %20114 to float*
  %20116 = load float, float* %20115, align 4
  %20117 = insertelement <4 x float> zeroinitializer, float %20116, i32 0
  %20118 = insertelement <4 x float> %20117, float 0.000000e+00, i32 1
  %20119 = insertelement <4 x float> %20118, float 0.000000e+00, i32 2
  %20120 = insertelement <4 x float> %20119, float 0.000000e+00, i32 3
  %20121 = getelementptr inbounds float, float* %2, i64 3
  %20122 = load float, float* %20121, align 4
  %20123 = insertelement <4 x float> zeroinitializer, float %20122, i32 0
  %20124 = insertelement <4 x float> %20123, float 0.000000e+00, i32 1
  %20125 = insertelement <4 x float> %20124, float 0.000000e+00, i32 2
  %20126 = insertelement <4 x float> %20125, float 0.000000e+00, i32 3
  %20127 = call <4 x float> @llvm.fma.f32.722(<4 x float> %20120, <4 x float> %20126, <4 x float> zeroinitializer)
  %20128 = extractelement <4 x float> %20127, i32 0
  %20129 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20130 = getelementptr inbounds i8, i8* %20129, i64 44
  %20131 = bitcast i8* %20130 to float*
  store float %20128, float* %20131, align 4
  %20132 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20133 = getelementptr inbounds i8, i8* %20132, i64 32
  %20134 = bitcast i8* %20133 to float*
  %20135 = load float, float* %20134, align 4
  %20136 = insertelement <4 x float> zeroinitializer, float %20135, i32 0
  %20137 = insertelement <4 x float> %20136, float 1.000000e+00, i32 1
  %20138 = insertelement <4 x float> %20137, float 1.000000e+00, i32 2
  %20139 = insertelement <4 x float> %20138, float 1.000000e+00, i32 3
  %20140 = getelementptr inbounds float, float* %2, i64 3
  %20141 = load float, float* %20140, align 4
  %20142 = insertelement <4 x float> zeroinitializer, float %20141, i32 0
  %20143 = insertelement <4 x float> %20142, float 0.000000e+00, i32 1
  %20144 = insertelement <4 x float> %20143, float 0.000000e+00, i32 2
  %20145 = insertelement <4 x float> %20144, float 0.000000e+00, i32 3
  %20146 = fmul <4 x float> %20139, %20145
  %20147 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20148 = getelementptr inbounds i8, i8* %20147, i64 36
  %20149 = bitcast i8* %20148 to float*
  %20150 = load float, float* %20149, align 4
  %20151 = insertelement <4 x float> zeroinitializer, float %20150, i32 0
  %20152 = insertelement <4 x float> %20151, float 0.000000e+00, i32 1
  %20153 = insertelement <4 x float> %20152, float 0.000000e+00, i32 2
  %20154 = insertelement <4 x float> %20153, float 0.000000e+00, i32 3
  %20155 = getelementptr inbounds float, float* %2, i64 7
  %20156 = load float, float* %20155, align 4
  %20157 = insertelement <4 x float> zeroinitializer, float %20156, i32 0
  %20158 = insertelement <4 x float> %20157, float 0.000000e+00, i32 1
  %20159 = insertelement <4 x float> %20158, float 0.000000e+00, i32 2
  %20160 = insertelement <4 x float> %20159, float 0.000000e+00, i32 3
  %20161 = call <4 x float> @llvm.fma.f32.723(<4 x float> %20154, <4 x float> %20160, <4 x float> %20146)
  %20162 = extractelement <4 x float> %20161, i32 0
  %20163 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20164 = getelementptr inbounds i8, i8* %20163, i64 44
  %20165 = bitcast i8* %20164 to float*
  store float %20162, float* %20165, align 4
  %20166 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20167 = getelementptr inbounds i8, i8* %20166, i64 32
  %20168 = bitcast i8* %20167 to float*
  %20169 = load float, float* %20168, align 4
  %20170 = insertelement <4 x float> zeroinitializer, float %20169, i32 0
  %20171 = insertelement <4 x float> %20170, float 1.000000e+00, i32 1
  %20172 = insertelement <4 x float> %20171, float 1.000000e+00, i32 2
  %20173 = insertelement <4 x float> %20172, float 1.000000e+00, i32 3
  %20174 = getelementptr inbounds float, float* %2, i64 3
  %20175 = load float, float* %20174, align 4
  %20176 = insertelement <4 x float> zeroinitializer, float %20175, i32 0
  %20177 = insertelement <4 x float> %20176, float 0.000000e+00, i32 1
  %20178 = insertelement <4 x float> %20177, float 0.000000e+00, i32 2
  %20179 = insertelement <4 x float> %20178, float 0.000000e+00, i32 3
  %20180 = fmul <4 x float> %20173, %20179
  %20181 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20182 = getelementptr inbounds i8, i8* %20181, i64 36
  %20183 = bitcast i8* %20182 to float*
  %20184 = load float, float* %20183, align 4
  %20185 = insertelement <4 x float> zeroinitializer, float %20184, i32 0
  %20186 = insertelement <4 x float> %20185, float 1.000000e+00, i32 1
  %20187 = insertelement <4 x float> %20186, float 1.000000e+00, i32 2
  %20188 = insertelement <4 x float> %20187, float 1.000000e+00, i32 3
  %20189 = getelementptr inbounds float, float* %2, i64 7
  %20190 = load float, float* %20189, align 4
  %20191 = insertelement <4 x float> zeroinitializer, float %20190, i32 0
  %20192 = insertelement <4 x float> %20191, float 0.000000e+00, i32 1
  %20193 = insertelement <4 x float> %20192, float 0.000000e+00, i32 2
  %20194 = insertelement <4 x float> %20193, float 0.000000e+00, i32 3
  %20195 = call <4 x float> @llvm.fma.f32.724(<4 x float> %20188, <4 x float> %20194, <4 x float> %20180)
  %20196 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20197 = getelementptr inbounds i8, i8* %20196, i64 40
  %20198 = bitcast i8* %20197 to float*
  %20199 = load float, float* %20198, align 4
  %20200 = insertelement <4 x float> zeroinitializer, float %20199, i32 0
  %20201 = insertelement <4 x float> %20200, float 0.000000e+00, i32 1
  %20202 = insertelement <4 x float> %20201, float 0.000000e+00, i32 2
  %20203 = insertelement <4 x float> %20202, float 0.000000e+00, i32 3
  %20204 = getelementptr inbounds float, float* %2, i64 11
  %20205 = load float, float* %20204, align 4
  %20206 = insertelement <4 x float> zeroinitializer, float %20205, i32 0
  %20207 = insertelement <4 x float> %20206, float 0.000000e+00, i32 1
  %20208 = insertelement <4 x float> %20207, float 0.000000e+00, i32 2
  %20209 = insertelement <4 x float> %20208, float 0.000000e+00, i32 3
  %20210 = call <4 x float> @llvm.fma.f32.725(<4 x float> %20203, <4 x float> %20209, <4 x float> %20195)
  %20211 = extractelement <4 x float> %20210, i32 0
  %20212 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20213 = getelementptr inbounds i8, i8* %20212, i64 44
  %20214 = bitcast i8* %20213 to float*
  store float %20211, float* %20214, align 4
  %20215 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20216 = getelementptr inbounds i8, i8* %20215, i64 32
  %20217 = bitcast i8* %20216 to float*
  %20218 = load float, float* %20217, align 4
  %20219 = insertelement <4 x float> zeroinitializer, float %20218, i32 0
  %20220 = insertelement <4 x float> %20219, float 1.000000e+00, i32 1
  %20221 = insertelement <4 x float> %20220, float 1.000000e+00, i32 2
  %20222 = insertelement <4 x float> %20221, float 1.000000e+00, i32 3
  %20223 = getelementptr inbounds float, float* %2, i64 3
  %20224 = load float, float* %20223, align 4
  %20225 = insertelement <4 x float> zeroinitializer, float %20224, i32 0
  %20226 = insertelement <4 x float> %20225, float 0.000000e+00, i32 1
  %20227 = insertelement <4 x float> %20226, float 0.000000e+00, i32 2
  %20228 = insertelement <4 x float> %20227, float 0.000000e+00, i32 3
  %20229 = fmul <4 x float> %20222, %20228
  %20230 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20231 = getelementptr inbounds i8, i8* %20230, i64 36
  %20232 = bitcast i8* %20231 to float*
  %20233 = load float, float* %20232, align 4
  %20234 = insertelement <4 x float> zeroinitializer, float %20233, i32 0
  %20235 = insertelement <4 x float> %20234, float 1.000000e+00, i32 1
  %20236 = insertelement <4 x float> %20235, float 1.000000e+00, i32 2
  %20237 = insertelement <4 x float> %20236, float 1.000000e+00, i32 3
  %20238 = getelementptr inbounds float, float* %2, i64 7
  %20239 = load float, float* %20238, align 4
  %20240 = insertelement <4 x float> zeroinitializer, float %20239, i32 0
  %20241 = insertelement <4 x float> %20240, float 0.000000e+00, i32 1
  %20242 = insertelement <4 x float> %20241, float 0.000000e+00, i32 2
  %20243 = insertelement <4 x float> %20242, float 0.000000e+00, i32 3
  %20244 = call <4 x float> @llvm.fma.f32.726(<4 x float> %20237, <4 x float> %20243, <4 x float> %20229)
  %20245 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20246 = getelementptr inbounds i8, i8* %20245, i64 40
  %20247 = bitcast i8* %20246 to float*
  %20248 = load float, float* %20247, align 4
  %20249 = insertelement <4 x float> zeroinitializer, float %20248, i32 0
  %20250 = insertelement <4 x float> %20249, float 1.000000e+00, i32 1
  %20251 = insertelement <4 x float> %20250, float 1.000000e+00, i32 2
  %20252 = insertelement <4 x float> %20251, float 1.000000e+00, i32 3
  %20253 = getelementptr inbounds float, float* %2, i64 11
  %20254 = load float, float* %20253, align 4
  %20255 = insertelement <4 x float> zeroinitializer, float %20254, i32 0
  %20256 = insertelement <4 x float> %20255, float 0.000000e+00, i32 1
  %20257 = insertelement <4 x float> %20256, float 0.000000e+00, i32 2
  %20258 = insertelement <4 x float> %20257, float 0.000000e+00, i32 3
  %20259 = call <4 x float> @llvm.fma.f32.727(<4 x float> %20252, <4 x float> %20258, <4 x float> %20244)
  %20260 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20261 = getelementptr inbounds i8, i8* %20260, i64 44
  %20262 = bitcast i8* %20261 to float*
  %20263 = load float, float* %20262, align 4
  %20264 = insertelement <4 x float> zeroinitializer, float %20263, i32 0
  %20265 = insertelement <4 x float> %20264, float 0.000000e+00, i32 1
  %20266 = insertelement <4 x float> %20265, float 0.000000e+00, i32 2
  %20267 = insertelement <4 x float> %20266, float 0.000000e+00, i32 3
  %20268 = getelementptr inbounds float, float* %2, i64 15
  %20269 = load float, float* %20268, align 4
  %20270 = insertelement <4 x float> zeroinitializer, float %20269, i32 0
  %20271 = insertelement <4 x float> %20270, float 0.000000e+00, i32 1
  %20272 = insertelement <4 x float> %20271, float 0.000000e+00, i32 2
  %20273 = insertelement <4 x float> %20272, float 0.000000e+00, i32 3
  %20274 = call <4 x float> @llvm.fma.f32.728(<4 x float> %20267, <4 x float> %20273, <4 x float> %20259)
  %20275 = extractelement <4 x float> %20274, i32 0
  %20276 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20277 = getelementptr inbounds i8, i8* %20276, i64 44
  %20278 = bitcast i8* %20277 to float*
  store float %20275, float* %20278, align 4
  %20279 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20280 = getelementptr inbounds i8, i8* %20279, i64 48
  %20281 = bitcast i8* %20280 to float*
  store float 0.000000e+00, float* %20281, align 4
  %20282 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20283 = getelementptr inbounds i8, i8* %20282, i64 48
  %20284 = bitcast i8* %20283 to float*
  %20285 = load float, float* %20284, align 4
  %20286 = insertelement <4 x float> zeroinitializer, float %20285, i32 0
  %20287 = insertelement <4 x float> %20286, float 0.000000e+00, i32 1
  %20288 = insertelement <4 x float> %20287, float 0.000000e+00, i32 2
  %20289 = insertelement <4 x float> %20288, float 0.000000e+00, i32 3
  %20290 = load float, float* %2, align 4
  %20291 = insertelement <4 x float> zeroinitializer, float %20290, i32 0
  %20292 = insertelement <4 x float> %20291, float 0.000000e+00, i32 1
  %20293 = insertelement <4 x float> %20292, float 0.000000e+00, i32 2
  %20294 = insertelement <4 x float> %20293, float 0.000000e+00, i32 3
  %20295 = call <4 x float> @llvm.fma.f32.729(<4 x float> %20289, <4 x float> %20294, <4 x float> zeroinitializer)
  %20296 = extractelement <4 x float> %20295, i32 0
  %20297 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20298 = getelementptr inbounds i8, i8* %20297, i64 48
  %20299 = bitcast i8* %20298 to float*
  store float %20296, float* %20299, align 4
  %20300 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20301 = getelementptr inbounds i8, i8* %20300, i64 48
  %20302 = bitcast i8* %20301 to float*
  %20303 = load float, float* %20302, align 4
  %20304 = insertelement <4 x float> zeroinitializer, float %20303, i32 0
  %20305 = insertelement <4 x float> %20304, float 1.000000e+00, i32 1
  %20306 = insertelement <4 x float> %20305, float 1.000000e+00, i32 2
  %20307 = insertelement <4 x float> %20306, float 1.000000e+00, i32 3
  %20308 = load float, float* %2, align 4
  %20309 = insertelement <4 x float> zeroinitializer, float %20308, i32 0
  %20310 = insertelement <4 x float> %20309, float 0.000000e+00, i32 1
  %20311 = insertelement <4 x float> %20310, float 0.000000e+00, i32 2
  %20312 = insertelement <4 x float> %20311, float 0.000000e+00, i32 3
  %20313 = fmul <4 x float> %20307, %20312
  %20314 = fadd <4 x float> %20313, zeroinitializer
  %20315 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20316 = getelementptr inbounds i8, i8* %20315, i64 52
  %20317 = bitcast i8* %20316 to float*
  %20318 = load float, float* %20317, align 4
  %20319 = insertelement <4 x float> zeroinitializer, float %20318, i32 0
  %20320 = insertelement <4 x float> %20319, float 0.000000e+00, i32 1
  %20321 = insertelement <4 x float> %20320, float 0.000000e+00, i32 2
  %20322 = insertelement <4 x float> %20321, float 0.000000e+00, i32 3
  %20323 = getelementptr inbounds float, float* %2, i64 4
  %20324 = load float, float* %20323, align 4
  %20325 = insertelement <4 x float> zeroinitializer, float %20324, i32 0
  %20326 = insertelement <4 x float> %20325, float 0.000000e+00, i32 1
  %20327 = insertelement <4 x float> %20326, float 0.000000e+00, i32 2
  %20328 = insertelement <4 x float> %20327, float 0.000000e+00, i32 3
  %20329 = call <4 x float> @llvm.fma.f32.730(<4 x float> %20322, <4 x float> %20328, <4 x float> %20314)
  %20330 = extractelement <4 x float> %20329, i32 0
  %20331 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20332 = getelementptr inbounds i8, i8* %20331, i64 48
  %20333 = bitcast i8* %20332 to float*
  store float %20330, float* %20333, align 4
  %20334 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20335 = getelementptr inbounds i8, i8* %20334, i64 48
  %20336 = bitcast i8* %20335 to float*
  %20337 = load float, float* %20336, align 4
  %20338 = insertelement <4 x float> zeroinitializer, float %20337, i32 0
  %20339 = insertelement <4 x float> %20338, float 1.000000e+00, i32 1
  %20340 = insertelement <4 x float> %20339, float 1.000000e+00, i32 2
  %20341 = insertelement <4 x float> %20340, float 1.000000e+00, i32 3
  %20342 = load float, float* %2, align 4
  %20343 = insertelement <4 x float> zeroinitializer, float %20342, i32 0
  %20344 = insertelement <4 x float> %20343, float 0.000000e+00, i32 1
  %20345 = insertelement <4 x float> %20344, float 0.000000e+00, i32 2
  %20346 = insertelement <4 x float> %20345, float 0.000000e+00, i32 3
  %20347 = fmul <4 x float> %20341, %20346
  %20348 = fadd <4 x float> %20347, zeroinitializer
  %20349 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20350 = getelementptr inbounds i8, i8* %20349, i64 52
  %20351 = bitcast i8* %20350 to float*
  %20352 = load float, float* %20351, align 4
  %20353 = insertelement <4 x float> zeroinitializer, float %20352, i32 0
  %20354 = insertelement <4 x float> %20353, float 1.000000e+00, i32 1
  %20355 = insertelement <4 x float> %20354, float 1.000000e+00, i32 2
  %20356 = insertelement <4 x float> %20355, float 1.000000e+00, i32 3
  %20357 = getelementptr inbounds float, float* %2, i64 4
  %20358 = load float, float* %20357, align 4
  %20359 = insertelement <4 x float> zeroinitializer, float %20358, i32 0
  %20360 = insertelement <4 x float> %20359, float 0.000000e+00, i32 1
  %20361 = insertelement <4 x float> %20360, float 0.000000e+00, i32 2
  %20362 = insertelement <4 x float> %20361, float 0.000000e+00, i32 3
  %20363 = call <4 x float> @llvm.fma.f32.731(<4 x float> %20356, <4 x float> %20362, <4 x float> %20348)
  %20364 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20365 = getelementptr inbounds i8, i8* %20364, i64 56
  %20366 = bitcast i8* %20365 to float*
  %20367 = load float, float* %20366, align 4
  %20368 = insertelement <4 x float> zeroinitializer, float %20367, i32 0
  %20369 = insertelement <4 x float> %20368, float 0.000000e+00, i32 1
  %20370 = insertelement <4 x float> %20369, float 0.000000e+00, i32 2
  %20371 = insertelement <4 x float> %20370, float 0.000000e+00, i32 3
  %20372 = getelementptr inbounds float, float* %2, i64 8
  %20373 = load float, float* %20372, align 4
  %20374 = insertelement <4 x float> zeroinitializer, float %20373, i32 0
  %20375 = insertelement <4 x float> %20374, float 0.000000e+00, i32 1
  %20376 = insertelement <4 x float> %20375, float 0.000000e+00, i32 2
  %20377 = insertelement <4 x float> %20376, float 0.000000e+00, i32 3
  %20378 = call <4 x float> @llvm.fma.f32.732(<4 x float> %20371, <4 x float> %20377, <4 x float> %20363)
  %20379 = extractelement <4 x float> %20378, i32 0
  %20380 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20381 = getelementptr inbounds i8, i8* %20380, i64 48
  %20382 = bitcast i8* %20381 to float*
  store float %20379, float* %20382, align 4
  %20383 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20384 = getelementptr inbounds i8, i8* %20383, i64 48
  %20385 = bitcast i8* %20384 to float*
  %20386 = load float, float* %20385, align 4
  %20387 = insertelement <4 x float> zeroinitializer, float %20386, i32 0
  %20388 = insertelement <4 x float> %20387, float 1.000000e+00, i32 1
  %20389 = insertelement <4 x float> %20388, float 1.000000e+00, i32 2
  %20390 = insertelement <4 x float> %20389, float 1.000000e+00, i32 3
  %20391 = load float, float* %2, align 4
  %20392 = insertelement <4 x float> zeroinitializer, float %20391, i32 0
  %20393 = insertelement <4 x float> %20392, float 0.000000e+00, i32 1
  %20394 = insertelement <4 x float> %20393, float 0.000000e+00, i32 2
  %20395 = insertelement <4 x float> %20394, float 0.000000e+00, i32 3
  %20396 = fmul <4 x float> %20390, %20395
  %20397 = fadd <4 x float> %20396, zeroinitializer
  %20398 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20399 = getelementptr inbounds i8, i8* %20398, i64 52
  %20400 = bitcast i8* %20399 to float*
  %20401 = load float, float* %20400, align 4
  %20402 = insertelement <4 x float> zeroinitializer, float %20401, i32 0
  %20403 = insertelement <4 x float> %20402, float 1.000000e+00, i32 1
  %20404 = insertelement <4 x float> %20403, float 1.000000e+00, i32 2
  %20405 = insertelement <4 x float> %20404, float 1.000000e+00, i32 3
  %20406 = getelementptr inbounds float, float* %2, i64 4
  %20407 = load float, float* %20406, align 4
  %20408 = insertelement <4 x float> zeroinitializer, float %20407, i32 0
  %20409 = insertelement <4 x float> %20408, float 0.000000e+00, i32 1
  %20410 = insertelement <4 x float> %20409, float 0.000000e+00, i32 2
  %20411 = insertelement <4 x float> %20410, float 0.000000e+00, i32 3
  %20412 = call <4 x float> @llvm.fma.f32.733(<4 x float> %20405, <4 x float> %20411, <4 x float> %20397)
  %20413 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20414 = getelementptr inbounds i8, i8* %20413, i64 56
  %20415 = bitcast i8* %20414 to float*
  %20416 = load float, float* %20415, align 4
  %20417 = insertelement <4 x float> zeroinitializer, float %20416, i32 0
  %20418 = insertelement <4 x float> %20417, float 1.000000e+00, i32 1
  %20419 = insertelement <4 x float> %20418, float 1.000000e+00, i32 2
  %20420 = insertelement <4 x float> %20419, float 1.000000e+00, i32 3
  %20421 = getelementptr inbounds float, float* %2, i64 8
  %20422 = load float, float* %20421, align 4
  %20423 = insertelement <4 x float> zeroinitializer, float %20422, i32 0
  %20424 = insertelement <4 x float> %20423, float 0.000000e+00, i32 1
  %20425 = insertelement <4 x float> %20424, float 0.000000e+00, i32 2
  %20426 = insertelement <4 x float> %20425, float 0.000000e+00, i32 3
  %20427 = call <4 x float> @llvm.fma.f32.734(<4 x float> %20420, <4 x float> %20426, <4 x float> %20412)
  %20428 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20429 = getelementptr inbounds i8, i8* %20428, i64 60
  %20430 = bitcast i8* %20429 to float*
  %20431 = load float, float* %20430, align 4
  %20432 = insertelement <4 x float> zeroinitializer, float %20431, i32 0
  %20433 = insertelement <4 x float> %20432, float 0.000000e+00, i32 1
  %20434 = insertelement <4 x float> %20433, float 0.000000e+00, i32 2
  %20435 = insertelement <4 x float> %20434, float 0.000000e+00, i32 3
  %20436 = getelementptr inbounds float, float* %2, i64 12
  %20437 = load float, float* %20436, align 4
  %20438 = insertelement <4 x float> zeroinitializer, float %20437, i32 0
  %20439 = insertelement <4 x float> %20438, float 0.000000e+00, i32 1
  %20440 = insertelement <4 x float> %20439, float 0.000000e+00, i32 2
  %20441 = insertelement <4 x float> %20440, float 0.000000e+00, i32 3
  %20442 = call <4 x float> @llvm.fma.f32.735(<4 x float> %20435, <4 x float> %20441, <4 x float> %20427)
  %20443 = extractelement <4 x float> %20442, i32 0
  %20444 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20445 = getelementptr inbounds i8, i8* %20444, i64 48
  %20446 = bitcast i8* %20445 to float*
  store float %20443, float* %20446, align 4
  %20447 = extractelement <4 x float> %20442, i32 1
  %20448 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20449 = getelementptr inbounds i8, i8* %20448, i64 52
  %20450 = bitcast i8* %20449 to float*
  store float %20447, float* %20450, align 4
  %20451 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20452 = getelementptr inbounds i8, i8* %20451, i64 48
  %20453 = bitcast i8* %20452 to float*
  %20454 = load float, float* %20453, align 4
  %20455 = insertelement <4 x float> zeroinitializer, float %20454, i32 0
  %20456 = insertelement <4 x float> %20455, float 0.000000e+00, i32 1
  %20457 = insertelement <4 x float> %20456, float 0.000000e+00, i32 2
  %20458 = insertelement <4 x float> %20457, float 0.000000e+00, i32 3
  %20459 = getelementptr inbounds float, float* %2, i64 1
  %20460 = load float, float* %20459, align 4
  %20461 = insertelement <4 x float> zeroinitializer, float %20460, i32 0
  %20462 = insertelement <4 x float> %20461, float 0.000000e+00, i32 1
  %20463 = insertelement <4 x float> %20462, float 0.000000e+00, i32 2
  %20464 = insertelement <4 x float> %20463, float 0.000000e+00, i32 3
  %20465 = call <4 x float> @llvm.fma.f32.736(<4 x float> %20458, <4 x float> %20464, <4 x float> zeroinitializer)
  %20466 = extractelement <4 x float> %20465, i32 0
  %20467 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20468 = getelementptr inbounds i8, i8* %20467, i64 52
  %20469 = bitcast i8* %20468 to float*
  store float %20466, float* %20469, align 4
  %20470 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20471 = getelementptr inbounds i8, i8* %20470, i64 48
  %20472 = bitcast i8* %20471 to float*
  %20473 = load float, float* %20472, align 4
  %20474 = insertelement <4 x float> zeroinitializer, float %20473, i32 0
  %20475 = insertelement <4 x float> %20474, float 1.000000e+00, i32 1
  %20476 = insertelement <4 x float> %20475, float 1.000000e+00, i32 2
  %20477 = insertelement <4 x float> %20476, float 1.000000e+00, i32 3
  %20478 = getelementptr inbounds float, float* %2, i64 1
  %20479 = load float, float* %20478, align 4
  %20480 = insertelement <4 x float> zeroinitializer, float %20479, i32 0
  %20481 = insertelement <4 x float> %20480, float 0.000000e+00, i32 1
  %20482 = insertelement <4 x float> %20481, float 0.000000e+00, i32 2
  %20483 = insertelement <4 x float> %20482, float 0.000000e+00, i32 3
  %20484 = fmul <4 x float> %20477, %20483
  %20485 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20486 = getelementptr inbounds i8, i8* %20485, i64 52
  %20487 = bitcast i8* %20486 to float*
  %20488 = load float, float* %20487, align 4
  %20489 = insertelement <4 x float> zeroinitializer, float %20488, i32 0
  %20490 = insertelement <4 x float> %20489, float 0.000000e+00, i32 1
  %20491 = insertelement <4 x float> %20490, float 0.000000e+00, i32 2
  %20492 = insertelement <4 x float> %20491, float 0.000000e+00, i32 3
  %20493 = getelementptr inbounds float, float* %2, i64 5
  %20494 = load float, float* %20493, align 4
  %20495 = insertelement <4 x float> zeroinitializer, float %20494, i32 0
  %20496 = insertelement <4 x float> %20495, float 0.000000e+00, i32 1
  %20497 = insertelement <4 x float> %20496, float 0.000000e+00, i32 2
  %20498 = insertelement <4 x float> %20497, float 0.000000e+00, i32 3
  %20499 = call <4 x float> @llvm.fma.f32.737(<4 x float> %20492, <4 x float> %20498, <4 x float> %20484)
  %20500 = extractelement <4 x float> %20499, i32 0
  %20501 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20502 = getelementptr inbounds i8, i8* %20501, i64 52
  %20503 = bitcast i8* %20502 to float*
  store float %20500, float* %20503, align 4
  %20504 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20505 = getelementptr inbounds i8, i8* %20504, i64 48
  %20506 = bitcast i8* %20505 to float*
  %20507 = load float, float* %20506, align 4
  %20508 = insertelement <4 x float> zeroinitializer, float %20507, i32 0
  %20509 = insertelement <4 x float> %20508, float 1.000000e+00, i32 1
  %20510 = insertelement <4 x float> %20509, float 1.000000e+00, i32 2
  %20511 = insertelement <4 x float> %20510, float 1.000000e+00, i32 3
  %20512 = getelementptr inbounds float, float* %2, i64 1
  %20513 = load float, float* %20512, align 4
  %20514 = insertelement <4 x float> zeroinitializer, float %20513, i32 0
  %20515 = insertelement <4 x float> %20514, float 0.000000e+00, i32 1
  %20516 = insertelement <4 x float> %20515, float 0.000000e+00, i32 2
  %20517 = insertelement <4 x float> %20516, float 0.000000e+00, i32 3
  %20518 = fmul <4 x float> %20511, %20517
  %20519 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20520 = getelementptr inbounds i8, i8* %20519, i64 52
  %20521 = bitcast i8* %20520 to float*
  %20522 = load float, float* %20521, align 4
  %20523 = insertelement <4 x float> zeroinitializer, float %20522, i32 0
  %20524 = insertelement <4 x float> %20523, float 1.000000e+00, i32 1
  %20525 = insertelement <4 x float> %20524, float 1.000000e+00, i32 2
  %20526 = insertelement <4 x float> %20525, float 1.000000e+00, i32 3
  %20527 = getelementptr inbounds float, float* %2, i64 5
  %20528 = load float, float* %20527, align 4
  %20529 = insertelement <4 x float> zeroinitializer, float %20528, i32 0
  %20530 = insertelement <4 x float> %20529, float 0.000000e+00, i32 1
  %20531 = insertelement <4 x float> %20530, float 0.000000e+00, i32 2
  %20532 = insertelement <4 x float> %20531, float 0.000000e+00, i32 3
  %20533 = call <4 x float> @llvm.fma.f32.738(<4 x float> %20526, <4 x float> %20532, <4 x float> %20518)
  %20534 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20535 = getelementptr inbounds i8, i8* %20534, i64 56
  %20536 = bitcast i8* %20535 to float*
  %20537 = load float, float* %20536, align 4
  %20538 = insertelement <4 x float> zeroinitializer, float %20537, i32 0
  %20539 = insertelement <4 x float> %20538, float 0.000000e+00, i32 1
  %20540 = insertelement <4 x float> %20539, float 0.000000e+00, i32 2
  %20541 = insertelement <4 x float> %20540, float 0.000000e+00, i32 3
  %20542 = getelementptr inbounds float, float* %2, i64 9
  %20543 = load float, float* %20542, align 4
  %20544 = insertelement <4 x float> zeroinitializer, float %20543, i32 0
  %20545 = insertelement <4 x float> %20544, float 0.000000e+00, i32 1
  %20546 = insertelement <4 x float> %20545, float 0.000000e+00, i32 2
  %20547 = insertelement <4 x float> %20546, float 0.000000e+00, i32 3
  %20548 = call <4 x float> @llvm.fma.f32.739(<4 x float> %20541, <4 x float> %20547, <4 x float> %20533)
  %20549 = extractelement <4 x float> %20548, i32 0
  %20550 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20551 = getelementptr inbounds i8, i8* %20550, i64 52
  %20552 = bitcast i8* %20551 to float*
  store float %20549, float* %20552, align 4
  %20553 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20554 = getelementptr inbounds i8, i8* %20553, i64 48
  %20555 = bitcast i8* %20554 to float*
  %20556 = load float, float* %20555, align 4
  %20557 = insertelement <4 x float> zeroinitializer, float %20556, i32 0
  %20558 = insertelement <4 x float> %20557, float 1.000000e+00, i32 1
  %20559 = insertelement <4 x float> %20558, float 1.000000e+00, i32 2
  %20560 = insertelement <4 x float> %20559, float 1.000000e+00, i32 3
  %20561 = getelementptr inbounds float, float* %2, i64 1
  %20562 = load float, float* %20561, align 4
  %20563 = insertelement <4 x float> zeroinitializer, float %20562, i32 0
  %20564 = insertelement <4 x float> %20563, float 0.000000e+00, i32 1
  %20565 = insertelement <4 x float> %20564, float 0.000000e+00, i32 2
  %20566 = insertelement <4 x float> %20565, float 0.000000e+00, i32 3
  %20567 = fmul <4 x float> %20560, %20566
  %20568 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20569 = getelementptr inbounds i8, i8* %20568, i64 52
  %20570 = bitcast i8* %20569 to float*
  %20571 = load float, float* %20570, align 4
  %20572 = insertelement <4 x float> zeroinitializer, float %20571, i32 0
  %20573 = insertelement <4 x float> %20572, float 1.000000e+00, i32 1
  %20574 = insertelement <4 x float> %20573, float 1.000000e+00, i32 2
  %20575 = insertelement <4 x float> %20574, float 1.000000e+00, i32 3
  %20576 = getelementptr inbounds float, float* %2, i64 5
  %20577 = load float, float* %20576, align 4
  %20578 = insertelement <4 x float> zeroinitializer, float %20577, i32 0
  %20579 = insertelement <4 x float> %20578, float 0.000000e+00, i32 1
  %20580 = insertelement <4 x float> %20579, float 0.000000e+00, i32 2
  %20581 = insertelement <4 x float> %20580, float 0.000000e+00, i32 3
  %20582 = call <4 x float> @llvm.fma.f32.740(<4 x float> %20575, <4 x float> %20581, <4 x float> %20567)
  %20583 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20584 = getelementptr inbounds i8, i8* %20583, i64 56
  %20585 = bitcast i8* %20584 to float*
  %20586 = load float, float* %20585, align 4
  %20587 = insertelement <4 x float> zeroinitializer, float %20586, i32 0
  %20588 = insertelement <4 x float> %20587, float 1.000000e+00, i32 1
  %20589 = insertelement <4 x float> %20588, float 1.000000e+00, i32 2
  %20590 = insertelement <4 x float> %20589, float 1.000000e+00, i32 3
  %20591 = getelementptr inbounds float, float* %2, i64 9
  %20592 = load float, float* %20591, align 4
  %20593 = insertelement <4 x float> zeroinitializer, float %20592, i32 0
  %20594 = insertelement <4 x float> %20593, float 0.000000e+00, i32 1
  %20595 = insertelement <4 x float> %20594, float 0.000000e+00, i32 2
  %20596 = insertelement <4 x float> %20595, float 0.000000e+00, i32 3
  %20597 = call <4 x float> @llvm.fma.f32.741(<4 x float> %20590, <4 x float> %20596, <4 x float> %20582)
  %20598 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20599 = getelementptr inbounds i8, i8* %20598, i64 60
  %20600 = bitcast i8* %20599 to float*
  %20601 = load float, float* %20600, align 4
  %20602 = insertelement <4 x float> zeroinitializer, float %20601, i32 0
  %20603 = insertelement <4 x float> %20602, float 0.000000e+00, i32 1
  %20604 = insertelement <4 x float> %20603, float 0.000000e+00, i32 2
  %20605 = insertelement <4 x float> %20604, float 0.000000e+00, i32 3
  %20606 = getelementptr inbounds float, float* %2, i64 13
  %20607 = load float, float* %20606, align 4
  %20608 = insertelement <4 x float> zeroinitializer, float %20607, i32 0
  %20609 = insertelement <4 x float> %20608, float 0.000000e+00, i32 1
  %20610 = insertelement <4 x float> %20609, float 0.000000e+00, i32 2
  %20611 = insertelement <4 x float> %20610, float 0.000000e+00, i32 3
  %20612 = call <4 x float> @llvm.fma.f32.742(<4 x float> %20605, <4 x float> %20611, <4 x float> %20597)
  %20613 = extractelement <4 x float> %20612, i32 0
  %20614 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20615 = getelementptr inbounds i8, i8* %20614, i64 52
  %20616 = bitcast i8* %20615 to float*
  store float %20613, float* %20616, align 4
  %20617 = extractelement <4 x float> %20612, i32 1
  %20618 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20619 = getelementptr inbounds i8, i8* %20618, i64 56
  %20620 = bitcast i8* %20619 to float*
  store float %20617, float* %20620, align 4
  %20621 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20622 = getelementptr inbounds i8, i8* %20621, i64 48
  %20623 = bitcast i8* %20622 to float*
  %20624 = load float, float* %20623, align 4
  %20625 = insertelement <4 x float> zeroinitializer, float %20624, i32 0
  %20626 = insertelement <4 x float> %20625, float 0.000000e+00, i32 1
  %20627 = insertelement <4 x float> %20626, float 0.000000e+00, i32 2
  %20628 = insertelement <4 x float> %20627, float 0.000000e+00, i32 3
  %20629 = getelementptr inbounds float, float* %2, i64 2
  %20630 = load float, float* %20629, align 4
  %20631 = insertelement <4 x float> zeroinitializer, float %20630, i32 0
  %20632 = insertelement <4 x float> %20631, float 0.000000e+00, i32 1
  %20633 = insertelement <4 x float> %20632, float 0.000000e+00, i32 2
  %20634 = insertelement <4 x float> %20633, float 0.000000e+00, i32 3
  %20635 = call <4 x float> @llvm.fma.f32.743(<4 x float> %20628, <4 x float> %20634, <4 x float> zeroinitializer)
  %20636 = extractelement <4 x float> %20635, i32 0
  %20637 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20638 = getelementptr inbounds i8, i8* %20637, i64 56
  %20639 = bitcast i8* %20638 to float*
  store float %20636, float* %20639, align 4
  %20640 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20641 = getelementptr inbounds i8, i8* %20640, i64 48
  %20642 = bitcast i8* %20641 to float*
  %20643 = load float, float* %20642, align 4
  %20644 = insertelement <4 x float> zeroinitializer, float %20643, i32 0
  %20645 = insertelement <4 x float> %20644, float 1.000000e+00, i32 1
  %20646 = insertelement <4 x float> %20645, float 1.000000e+00, i32 2
  %20647 = insertelement <4 x float> %20646, float 1.000000e+00, i32 3
  %20648 = getelementptr inbounds float, float* %2, i64 2
  %20649 = load float, float* %20648, align 4
  %20650 = insertelement <4 x float> zeroinitializer, float %20649, i32 0
  %20651 = insertelement <4 x float> %20650, float 0.000000e+00, i32 1
  %20652 = insertelement <4 x float> %20651, float 0.000000e+00, i32 2
  %20653 = insertelement <4 x float> %20652, float 0.000000e+00, i32 3
  %20654 = fmul <4 x float> %20647, %20653
  %20655 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20656 = getelementptr inbounds i8, i8* %20655, i64 52
  %20657 = bitcast i8* %20656 to float*
  %20658 = load float, float* %20657, align 4
  %20659 = insertelement <4 x float> zeroinitializer, float %20658, i32 0
  %20660 = insertelement <4 x float> %20659, float 0.000000e+00, i32 1
  %20661 = insertelement <4 x float> %20660, float 0.000000e+00, i32 2
  %20662 = insertelement <4 x float> %20661, float 0.000000e+00, i32 3
  %20663 = getelementptr inbounds float, float* %2, i64 6
  %20664 = load float, float* %20663, align 4
  %20665 = insertelement <4 x float> zeroinitializer, float %20664, i32 0
  %20666 = insertelement <4 x float> %20665, float 0.000000e+00, i32 1
  %20667 = insertelement <4 x float> %20666, float 0.000000e+00, i32 2
  %20668 = insertelement <4 x float> %20667, float 0.000000e+00, i32 3
  %20669 = call <4 x float> @llvm.fma.f32.744(<4 x float> %20662, <4 x float> %20668, <4 x float> %20654)
  %20670 = extractelement <4 x float> %20669, i32 0
  %20671 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20672 = getelementptr inbounds i8, i8* %20671, i64 56
  %20673 = bitcast i8* %20672 to float*
  store float %20670, float* %20673, align 4
  %20674 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20675 = getelementptr inbounds i8, i8* %20674, i64 48
  %20676 = bitcast i8* %20675 to float*
  %20677 = load float, float* %20676, align 4
  %20678 = insertelement <4 x float> zeroinitializer, float %20677, i32 0
  %20679 = insertelement <4 x float> %20678, float 1.000000e+00, i32 1
  %20680 = insertelement <4 x float> %20679, float 1.000000e+00, i32 2
  %20681 = insertelement <4 x float> %20680, float 1.000000e+00, i32 3
  %20682 = getelementptr inbounds float, float* %2, i64 2
  %20683 = load float, float* %20682, align 4
  %20684 = insertelement <4 x float> zeroinitializer, float %20683, i32 0
  %20685 = insertelement <4 x float> %20684, float 0.000000e+00, i32 1
  %20686 = insertelement <4 x float> %20685, float 0.000000e+00, i32 2
  %20687 = insertelement <4 x float> %20686, float 0.000000e+00, i32 3
  %20688 = fmul <4 x float> %20681, %20687
  %20689 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20690 = getelementptr inbounds i8, i8* %20689, i64 52
  %20691 = bitcast i8* %20690 to float*
  %20692 = load float, float* %20691, align 4
  %20693 = insertelement <4 x float> zeroinitializer, float %20692, i32 0
  %20694 = insertelement <4 x float> %20693, float 1.000000e+00, i32 1
  %20695 = insertelement <4 x float> %20694, float 1.000000e+00, i32 2
  %20696 = insertelement <4 x float> %20695, float 1.000000e+00, i32 3
  %20697 = getelementptr inbounds float, float* %2, i64 6
  %20698 = load float, float* %20697, align 4
  %20699 = insertelement <4 x float> zeroinitializer, float %20698, i32 0
  %20700 = insertelement <4 x float> %20699, float 0.000000e+00, i32 1
  %20701 = insertelement <4 x float> %20700, float 0.000000e+00, i32 2
  %20702 = insertelement <4 x float> %20701, float 0.000000e+00, i32 3
  %20703 = call <4 x float> @llvm.fma.f32.745(<4 x float> %20696, <4 x float> %20702, <4 x float> %20688)
  %20704 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20705 = getelementptr inbounds i8, i8* %20704, i64 56
  %20706 = bitcast i8* %20705 to float*
  %20707 = load float, float* %20706, align 4
  %20708 = insertelement <4 x float> zeroinitializer, float %20707, i32 0
  %20709 = insertelement <4 x float> %20708, float 0.000000e+00, i32 1
  %20710 = insertelement <4 x float> %20709, float 0.000000e+00, i32 2
  %20711 = insertelement <4 x float> %20710, float 0.000000e+00, i32 3
  %20712 = getelementptr inbounds float, float* %2, i64 10
  %20713 = load float, float* %20712, align 4
  %20714 = insertelement <4 x float> zeroinitializer, float %20713, i32 0
  %20715 = insertelement <4 x float> %20714, float 0.000000e+00, i32 1
  %20716 = insertelement <4 x float> %20715, float 0.000000e+00, i32 2
  %20717 = insertelement <4 x float> %20716, float 0.000000e+00, i32 3
  %20718 = call <4 x float> @llvm.fma.f32.746(<4 x float> %20711, <4 x float> %20717, <4 x float> %20703)
  %20719 = extractelement <4 x float> %20718, i32 0
  %20720 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20721 = getelementptr inbounds i8, i8* %20720, i64 56
  %20722 = bitcast i8* %20721 to float*
  store float %20719, float* %20722, align 4
  %20723 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20724 = getelementptr inbounds i8, i8* %20723, i64 48
  %20725 = bitcast i8* %20724 to float*
  %20726 = load float, float* %20725, align 4
  %20727 = insertelement <4 x float> zeroinitializer, float %20726, i32 0
  %20728 = insertelement <4 x float> %20727, float 1.000000e+00, i32 1
  %20729 = insertelement <4 x float> %20728, float 1.000000e+00, i32 2
  %20730 = insertelement <4 x float> %20729, float 1.000000e+00, i32 3
  %20731 = getelementptr inbounds float, float* %2, i64 2
  %20732 = load float, float* %20731, align 4
  %20733 = insertelement <4 x float> zeroinitializer, float %20732, i32 0
  %20734 = insertelement <4 x float> %20733, float 0.000000e+00, i32 1
  %20735 = insertelement <4 x float> %20734, float 0.000000e+00, i32 2
  %20736 = insertelement <4 x float> %20735, float 0.000000e+00, i32 3
  %20737 = fmul <4 x float> %20730, %20736
  %20738 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20739 = getelementptr inbounds i8, i8* %20738, i64 52
  %20740 = bitcast i8* %20739 to float*
  %20741 = load float, float* %20740, align 4
  %20742 = insertelement <4 x float> zeroinitializer, float %20741, i32 0
  %20743 = insertelement <4 x float> %20742, float 1.000000e+00, i32 1
  %20744 = insertelement <4 x float> %20743, float 1.000000e+00, i32 2
  %20745 = insertelement <4 x float> %20744, float 1.000000e+00, i32 3
  %20746 = getelementptr inbounds float, float* %2, i64 6
  %20747 = load float, float* %20746, align 4
  %20748 = insertelement <4 x float> zeroinitializer, float %20747, i32 0
  %20749 = insertelement <4 x float> %20748, float 0.000000e+00, i32 1
  %20750 = insertelement <4 x float> %20749, float 0.000000e+00, i32 2
  %20751 = insertelement <4 x float> %20750, float 0.000000e+00, i32 3
  %20752 = call <4 x float> @llvm.fma.f32.747(<4 x float> %20745, <4 x float> %20751, <4 x float> %20737)
  %20753 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20754 = getelementptr inbounds i8, i8* %20753, i64 56
  %20755 = bitcast i8* %20754 to float*
  %20756 = load float, float* %20755, align 4
  %20757 = insertelement <4 x float> zeroinitializer, float %20756, i32 0
  %20758 = insertelement <4 x float> %20757, float 1.000000e+00, i32 1
  %20759 = insertelement <4 x float> %20758, float 1.000000e+00, i32 2
  %20760 = insertelement <4 x float> %20759, float 1.000000e+00, i32 3
  %20761 = getelementptr inbounds float, float* %2, i64 10
  %20762 = load float, float* %20761, align 4
  %20763 = insertelement <4 x float> zeroinitializer, float %20762, i32 0
  %20764 = insertelement <4 x float> %20763, float 0.000000e+00, i32 1
  %20765 = insertelement <4 x float> %20764, float 0.000000e+00, i32 2
  %20766 = insertelement <4 x float> %20765, float 0.000000e+00, i32 3
  %20767 = call <4 x float> @llvm.fma.f32.748(<4 x float> %20760, <4 x float> %20766, <4 x float> %20752)
  %20768 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20769 = getelementptr inbounds i8, i8* %20768, i64 60
  %20770 = bitcast i8* %20769 to float*
  %20771 = load float, float* %20770, align 4
  %20772 = insertelement <4 x float> zeroinitializer, float %20771, i32 0
  %20773 = insertelement <4 x float> %20772, float 0.000000e+00, i32 1
  %20774 = insertelement <4 x float> %20773, float 0.000000e+00, i32 2
  %20775 = insertelement <4 x float> %20774, float 0.000000e+00, i32 3
  %20776 = getelementptr inbounds float, float* %2, i64 14
  %20777 = load float, float* %20776, align 4
  %20778 = insertelement <4 x float> zeroinitializer, float %20777, i32 0
  %20779 = insertelement <4 x float> %20778, float 0.000000e+00, i32 1
  %20780 = insertelement <4 x float> %20779, float 0.000000e+00, i32 2
  %20781 = insertelement <4 x float> %20780, float 0.000000e+00, i32 3
  %20782 = call <4 x float> @llvm.fma.f32.749(<4 x float> %20775, <4 x float> %20781, <4 x float> %20767)
  %20783 = extractelement <4 x float> %20782, i32 0
  %20784 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20785 = getelementptr inbounds i8, i8* %20784, i64 56
  %20786 = bitcast i8* %20785 to float*
  store float %20783, float* %20786, align 4
  %20787 = extractelement <4 x float> %20782, i32 1
  %20788 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20789 = getelementptr inbounds i8, i8* %20788, i64 60
  %20790 = bitcast i8* %20789 to float*
  store float %20787, float* %20790, align 4
  %20791 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20792 = getelementptr inbounds i8, i8* %20791, i64 48
  %20793 = bitcast i8* %20792 to float*
  %20794 = load float, float* %20793, align 4
  %20795 = insertelement <4 x float> zeroinitializer, float %20794, i32 0
  %20796 = insertelement <4 x float> %20795, float 0.000000e+00, i32 1
  %20797 = insertelement <4 x float> %20796, float 0.000000e+00, i32 2
  %20798 = insertelement <4 x float> %20797, float 0.000000e+00, i32 3
  %20799 = getelementptr inbounds float, float* %2, i64 3
  %20800 = load float, float* %20799, align 4
  %20801 = insertelement <4 x float> zeroinitializer, float %20800, i32 0
  %20802 = insertelement <4 x float> %20801, float 0.000000e+00, i32 1
  %20803 = insertelement <4 x float> %20802, float 0.000000e+00, i32 2
  %20804 = insertelement <4 x float> %20803, float 0.000000e+00, i32 3
  %20805 = call <4 x float> @llvm.fma.f32.750(<4 x float> %20798, <4 x float> %20804, <4 x float> zeroinitializer)
  %20806 = extractelement <4 x float> %20805, i32 0
  %20807 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20808 = getelementptr inbounds i8, i8* %20807, i64 60
  %20809 = bitcast i8* %20808 to float*
  store float %20806, float* %20809, align 4
  %20810 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20811 = getelementptr inbounds i8, i8* %20810, i64 48
  %20812 = bitcast i8* %20811 to float*
  %20813 = load float, float* %20812, align 4
  %20814 = insertelement <4 x float> zeroinitializer, float %20813, i32 0
  %20815 = insertelement <4 x float> %20814, float 1.000000e+00, i32 1
  %20816 = insertelement <4 x float> %20815, float 1.000000e+00, i32 2
  %20817 = insertelement <4 x float> %20816, float 1.000000e+00, i32 3
  %20818 = getelementptr inbounds float, float* %2, i64 3
  %20819 = load float, float* %20818, align 4
  %20820 = insertelement <4 x float> zeroinitializer, float %20819, i32 0
  %20821 = insertelement <4 x float> %20820, float 0.000000e+00, i32 1
  %20822 = insertelement <4 x float> %20821, float 0.000000e+00, i32 2
  %20823 = insertelement <4 x float> %20822, float 0.000000e+00, i32 3
  %20824 = fmul <4 x float> %20817, %20823
  %20825 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20826 = getelementptr inbounds i8, i8* %20825, i64 52
  %20827 = bitcast i8* %20826 to float*
  %20828 = load float, float* %20827, align 4
  %20829 = insertelement <4 x float> zeroinitializer, float %20828, i32 0
  %20830 = insertelement <4 x float> %20829, float 0.000000e+00, i32 1
  %20831 = insertelement <4 x float> %20830, float 0.000000e+00, i32 2
  %20832 = insertelement <4 x float> %20831, float 0.000000e+00, i32 3
  %20833 = getelementptr inbounds float, float* %2, i64 7
  %20834 = load float, float* %20833, align 4
  %20835 = insertelement <4 x float> zeroinitializer, float %20834, i32 0
  %20836 = insertelement <4 x float> %20835, float 0.000000e+00, i32 1
  %20837 = insertelement <4 x float> %20836, float 0.000000e+00, i32 2
  %20838 = insertelement <4 x float> %20837, float 0.000000e+00, i32 3
  %20839 = call <4 x float> @llvm.fma.f32.751(<4 x float> %20832, <4 x float> %20838, <4 x float> %20824)
  %20840 = extractelement <4 x float> %20839, i32 0
  %20841 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20842 = getelementptr inbounds i8, i8* %20841, i64 60
  %20843 = bitcast i8* %20842 to float*
  store float %20840, float* %20843, align 4
  %20844 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20845 = getelementptr inbounds i8, i8* %20844, i64 48
  %20846 = bitcast i8* %20845 to float*
  %20847 = load float, float* %20846, align 4
  %20848 = insertelement <4 x float> zeroinitializer, float %20847, i32 0
  %20849 = insertelement <4 x float> %20848, float 1.000000e+00, i32 1
  %20850 = insertelement <4 x float> %20849, float 1.000000e+00, i32 2
  %20851 = insertelement <4 x float> %20850, float 1.000000e+00, i32 3
  %20852 = getelementptr inbounds float, float* %2, i64 3
  %20853 = load float, float* %20852, align 4
  %20854 = insertelement <4 x float> zeroinitializer, float %20853, i32 0
  %20855 = insertelement <4 x float> %20854, float 0.000000e+00, i32 1
  %20856 = insertelement <4 x float> %20855, float 0.000000e+00, i32 2
  %20857 = insertelement <4 x float> %20856, float 0.000000e+00, i32 3
  %20858 = fmul <4 x float> %20851, %20857
  %20859 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20860 = getelementptr inbounds i8, i8* %20859, i64 52
  %20861 = bitcast i8* %20860 to float*
  %20862 = load float, float* %20861, align 4
  %20863 = insertelement <4 x float> zeroinitializer, float %20862, i32 0
  %20864 = insertelement <4 x float> %20863, float 1.000000e+00, i32 1
  %20865 = insertelement <4 x float> %20864, float 1.000000e+00, i32 2
  %20866 = insertelement <4 x float> %20865, float 1.000000e+00, i32 3
  %20867 = getelementptr inbounds float, float* %2, i64 7
  %20868 = load float, float* %20867, align 4
  %20869 = insertelement <4 x float> zeroinitializer, float %20868, i32 0
  %20870 = insertelement <4 x float> %20869, float 0.000000e+00, i32 1
  %20871 = insertelement <4 x float> %20870, float 0.000000e+00, i32 2
  %20872 = insertelement <4 x float> %20871, float 0.000000e+00, i32 3
  %20873 = call <4 x float> @llvm.fma.f32.752(<4 x float> %20866, <4 x float> %20872, <4 x float> %20858)
  %20874 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20875 = getelementptr inbounds i8, i8* %20874, i64 56
  %20876 = bitcast i8* %20875 to float*
  %20877 = load float, float* %20876, align 4
  %20878 = insertelement <4 x float> zeroinitializer, float %20877, i32 0
  %20879 = insertelement <4 x float> %20878, float 0.000000e+00, i32 1
  %20880 = insertelement <4 x float> %20879, float 0.000000e+00, i32 2
  %20881 = insertelement <4 x float> %20880, float 0.000000e+00, i32 3
  %20882 = getelementptr inbounds float, float* %2, i64 11
  %20883 = load float, float* %20882, align 4
  %20884 = insertelement <4 x float> zeroinitializer, float %20883, i32 0
  %20885 = insertelement <4 x float> %20884, float 0.000000e+00, i32 1
  %20886 = insertelement <4 x float> %20885, float 0.000000e+00, i32 2
  %20887 = insertelement <4 x float> %20886, float 0.000000e+00, i32 3
  %20888 = call <4 x float> @llvm.fma.f32.753(<4 x float> %20881, <4 x float> %20887, <4 x float> %20873)
  %20889 = extractelement <4 x float> %20888, i32 0
  %20890 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20891 = getelementptr inbounds i8, i8* %20890, i64 60
  %20892 = bitcast i8* %20891 to float*
  store float %20889, float* %20892, align 4
  %20893 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20894 = getelementptr inbounds i8, i8* %20893, i64 48
  %20895 = bitcast i8* %20894 to float*
  %20896 = load float, float* %20895, align 4
  %20897 = insertelement <4 x float> zeroinitializer, float %20896, i32 0
  %20898 = insertelement <4 x float> %20897, float 1.000000e+00, i32 1
  %20899 = insertelement <4 x float> %20898, float 1.000000e+00, i32 2
  %20900 = insertelement <4 x float> %20899, float 1.000000e+00, i32 3
  %20901 = getelementptr inbounds float, float* %2, i64 3
  %20902 = load float, float* %20901, align 4
  %20903 = insertelement <4 x float> zeroinitializer, float %20902, i32 0
  %20904 = insertelement <4 x float> %20903, float 0.000000e+00, i32 1
  %20905 = insertelement <4 x float> %20904, float 0.000000e+00, i32 2
  %20906 = insertelement <4 x float> %20905, float 0.000000e+00, i32 3
  %20907 = fmul <4 x float> %20900, %20906
  %20908 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20909 = getelementptr inbounds i8, i8* %20908, i64 52
  %20910 = bitcast i8* %20909 to float*
  %20911 = load float, float* %20910, align 4
  %20912 = insertelement <4 x float> zeroinitializer, float %20911, i32 0
  %20913 = insertelement <4 x float> %20912, float 1.000000e+00, i32 1
  %20914 = insertelement <4 x float> %20913, float 1.000000e+00, i32 2
  %20915 = insertelement <4 x float> %20914, float 1.000000e+00, i32 3
  %20916 = getelementptr inbounds float, float* %2, i64 7
  %20917 = load float, float* %20916, align 4
  %20918 = insertelement <4 x float> zeroinitializer, float %20917, i32 0
  %20919 = insertelement <4 x float> %20918, float 0.000000e+00, i32 1
  %20920 = insertelement <4 x float> %20919, float 0.000000e+00, i32 2
  %20921 = insertelement <4 x float> %20920, float 0.000000e+00, i32 3
  %20922 = call <4 x float> @llvm.fma.f32.754(<4 x float> %20915, <4 x float> %20921, <4 x float> %20907)
  %20923 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20924 = getelementptr inbounds i8, i8* %20923, i64 56
  %20925 = bitcast i8* %20924 to float*
  %20926 = load float, float* %20925, align 4
  %20927 = insertelement <4 x float> zeroinitializer, float %20926, i32 0
  %20928 = insertelement <4 x float> %20927, float 1.000000e+00, i32 1
  %20929 = insertelement <4 x float> %20928, float 1.000000e+00, i32 2
  %20930 = insertelement <4 x float> %20929, float 1.000000e+00, i32 3
  %20931 = getelementptr inbounds float, float* %2, i64 11
  %20932 = load float, float* %20931, align 4
  %20933 = insertelement <4 x float> zeroinitializer, float %20932, i32 0
  %20934 = insertelement <4 x float> %20933, float 0.000000e+00, i32 1
  %20935 = insertelement <4 x float> %20934, float 0.000000e+00, i32 2
  %20936 = insertelement <4 x float> %20935, float 0.000000e+00, i32 3
  %20937 = call <4 x float> @llvm.fma.f32.755(<4 x float> %20930, <4 x float> %20936, <4 x float> %20922)
  %20938 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20939 = getelementptr inbounds i8, i8* %20938, i64 60
  %20940 = bitcast i8* %20939 to float*
  %20941 = load float, float* %20940, align 4
  %20942 = insertelement <4 x float> zeroinitializer, float %20941, i32 0
  %20943 = insertelement <4 x float> %20942, float 0.000000e+00, i32 1
  %20944 = insertelement <4 x float> %20943, float 0.000000e+00, i32 2
  %20945 = insertelement <4 x float> %20944, float 0.000000e+00, i32 3
  %20946 = getelementptr inbounds float, float* %2, i64 15
  %20947 = load float, float* %20946, align 4
  %20948 = insertelement <4 x float> zeroinitializer, float %20947, i32 0
  %20949 = insertelement <4 x float> %20948, float 0.000000e+00, i32 1
  %20950 = insertelement <4 x float> %20949, float 0.000000e+00, i32 2
  %20951 = insertelement <4 x float> %20950, float 0.000000e+00, i32 3
  %20952 = call <4 x float> @llvm.fma.f32.756(<4 x float> %20945, <4 x float> %20951, <4 x float> %20937)
  %20953 = extractelement <4 x float> %20952, i32 0
  %20954 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %20955 = getelementptr inbounds i8, i8* %20954, i64 60
  %20956 = bitcast i8* %20955 to float*
  store float %20953, float* %20956, align 4
  %20957 = getelementptr inbounds float, float* %1, i64 1
  %20958 = bitcast float* %20957 to i32*
  %20959 = load i32, i32* %20958, align 4
  %20960 = sitofp i32 %20959 to float
  %20961 = insertelement <4 x float> zeroinitializer, float %20960, i32 0
  %20962 = getelementptr inbounds float, float* %1, i64 4
  %20963 = bitcast float* %20962 to i32*
  %20964 = load i32, i32* %20963, align 4
  %20965 = sitofp i32 %20964 to float
  %20966 = insertelement <4 x float> %20961, float %20965, i32 1
  %20967 = insertelement <4 x float> %20966, float 0.000000e+00, i32 2
  %20968 = insertelement <4 x float> %20967, float 0.000000e+00, i32 3
  %20969 = extractelement <4 x float> %20968, i32 0
  %20970 = fptosi float %20969 to i32
  %20971 = getelementptr inbounds float, float* %1, i64 4
  %20972 = bitcast float* %20971 to i32*
  store i32 %20970, i32* %20972, align 4
  %20973 = extractelement <4 x float> %20968, i32 1
  %20974 = fptosi float %20973 to i32
  %20975 = getelementptr inbounds float, float* %1, i64 1
  %20976 = bitcast float* %20975 to i32*
  store i32 %20974, i32* %20976, align 4
  br label %20977

20977:                                            ; preds = %.preheader33, %20977
  %20978 = phi i64 [ 2, %.preheader33 ], [ %20994, %20977 ]
  %20979 = getelementptr inbounds float, float* %1, i64 %20978
  %20980 = bitcast float* %20979 to i32*
  %20981 = load i32, i32* %20980, align 4
  %20982 = shl nuw nsw i64 %20978, 2
  %20983 = getelementptr inbounds float, float* %1, i64 %20982
  %20984 = bitcast float* %20983 to i32*
  %20985 = load i32, i32* %20984, align 4
  store i32 %20985, i32* %20980, align 4
  store i32 %20981, i32* %20984, align 4
  %20986 = or i64 %20978, 1
  %20987 = getelementptr inbounds float, float* %1, i64 %20986
  %20988 = bitcast float* %20987 to i32*
  %20989 = load i32, i32* %20988, align 4
  %20990 = shl nuw nsw i64 %20986, 2
  %20991 = getelementptr inbounds float, float* %1, i64 %20990
  %20992 = bitcast float* %20991 to i32*
  %20993 = load i32, i32* %20992, align 4
  store i32 %20993, i32* %20988, align 4
  store i32 %20989, i32* %20992, align 4
  %20994 = add nuw nsw i64 %20978, 2
  %20995 = icmp eq i64 %20994, 4
  br i1 %20995, label %.lr.ph.new.1, label %20977

.lr.ph.new.1:                                     ; preds = %.lr.ph.new.1, %20977
  %20996 = phi i64 [ %21016, %.lr.ph.new.1 ], [ 2, %20977 ]
  %20997 = add nuw nsw i64 %20996, 4
  %20998 = getelementptr inbounds float, float* %1, i64 %20997
  %20999 = bitcast float* %20998 to i32*
  %21000 = load i32, i32* %20999, align 4
  %21001 = shl nuw nsw i64 %20996, 2
  %21002 = or i64 %21001, 1
  %21003 = getelementptr inbounds float, float* %1, i64 %21002
  %21004 = bitcast float* %21003 to i32*
  %21005 = load i32, i32* %21004, align 4
  store i32 %21005, i32* %20999, align 4
  store i32 %21000, i32* %21004, align 4
  %21006 = or i64 %20996, 1
  %21007 = add nuw nsw i64 %20996, 5
  %21008 = getelementptr inbounds float, float* %1, i64 %21007
  %21009 = bitcast float* %21008 to i32*
  %21010 = load i32, i32* %21009, align 4
  %21011 = shl nuw nsw i64 %21006, 2
  %21012 = or i64 %21011, 1
  %21013 = getelementptr inbounds float, float* %1, i64 %21012
  %21014 = bitcast float* %21013 to i32*
  %21015 = load i32, i32* %21014, align 4
  store i32 %21015, i32* %21009, align 4
  store i32 %21010, i32* %21014, align 4
  %21016 = add nuw nsw i64 %20996, 2
  %21017 = icmp eq i64 %21016, 4
  br i1 %21017, label %.prol.preheader.2, label %.lr.ph.new.1

.prol.preheader.2:                                ; preds = %.lr.ph.new.1
  %21018 = bitcast float* %917 to i32*
  %21019 = load i32, i32* %21018, align 4
  %21020 = bitcast float* %900 to i32*
  %21021 = load i32, i32* %21020, align 4
  store i32 %21021, i32* %21018, align 4
  store i32 %21019, i32* %21020, align 4
  ret void
}

; Function Attrs: nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #1

; Function Attrs: allocsize(0,1)
declare i8* @calloc(i64, i64) #4

declare void @free(i8*) #5

; Function Attrs: noinline nounwind ssp uwtable
define i32 @main() #2 {
.preheader:
  %0 = alloca [16 x float], align 16
  %1 = alloca [16 x float], align 16
  %2 = alloca [16 x float], align 16
  %3 = bitcast [16 x float]* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(64) %3, i8* nonnull align 16 dereferenceable(64) bitcast ([16 x float]* @__const.main.A to i8*), i64 64, i1 false)
  %4 = bitcast [16 x float]* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(64) %4, i8 0, i64 64, i1 false)
  %5 = bitcast [16 x float]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  %6 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 0
  %7 = getelementptr inbounds [16 x float], [16 x float]* %1, i64 0, i64 0
  %8 = getelementptr inbounds [16 x float], [16 x float]* %2, i64 0, i64 0
  call void @naive_fixed_qr_decomp(float* nonnull %6, float* nonnull %7, float* nonnull %8)
  %9 = load float, float* %6, align 16
  %10 = fpext float %9 to double
  %11 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %10) #8
  %12 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 1
  %13 = load float, float* %12, align 4
  %14 = fpext float %13 to double
  %15 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %14) #8
  %16 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 2
  %17 = load float, float* %16, align 8
  %18 = fpext float %17 to double
  %19 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %18) #8
  %20 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 3
  %21 = load float, float* %20, align 4
  %22 = fpext float %21 to double
  %23 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %22) #8
  %24 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 4
  %25 = load float, float* %24, align 16
  %26 = fpext float %25 to double
  %27 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %26) #8
  %28 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 5
  %29 = load float, float* %28, align 4
  %30 = fpext float %29 to double
  %31 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %30) #8
  %32 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 6
  %33 = load float, float* %32, align 8
  %34 = fpext float %33 to double
  %35 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %34) #8
  %36 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 7
  %37 = load float, float* %36, align 4
  %38 = fpext float %37 to double
  %39 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %38) #8
  %40 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 8
  %41 = load float, float* %40, align 16
  %42 = fpext float %41 to double
  %43 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %42) #8
  %44 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 9
  %45 = load float, float* %44, align 4
  %46 = fpext float %45 to double
  %47 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %46) #8
  %48 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 10
  %49 = load float, float* %48, align 8
  %50 = fpext float %49 to double
  %51 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %50) #8
  %52 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 11
  %53 = load float, float* %52, align 4
  %54 = fpext float %53 to double
  %55 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %54) #8
  %56 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 12
  %57 = load float, float* %56, align 16
  %58 = fpext float %57 to double
  %59 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %58) #8
  %60 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 13
  %61 = load float, float* %60, align 4
  %62 = fpext float %61 to double
  %63 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %62) #8
  %64 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 14
  %65 = load float, float* %64, align 8
  %66 = fpext float %65 to double
  %67 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %66) #8
  %68 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 15
  %69 = load float, float* %68, align 4
  %70 = fpext float %69 to double
  %71 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %70) #8
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare i32 @printf(i8*, ...) #5

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.1(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.2(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.3(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.4(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.5(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.6(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.7(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.8(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.9(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.10(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.11(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.12(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.13(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.14(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.15(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.16(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.17(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.18(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.19(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.20(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.21(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.22(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.23(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.24(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.25(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.26(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.27(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.28(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.29(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.30(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.31(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.32(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.33(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.34(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.35(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.36(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.37(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.38(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.39(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.40(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.41(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.42(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.43(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.44(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.45(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.46(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.47(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.48(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.49(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.50(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.51(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.52(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.53(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.54(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.55(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.56(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.57(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.58(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.59(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.60(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.61(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.62(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.63(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.64(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.65(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.66(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.67(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.68(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.69(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.70(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.71(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.72(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.73(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.74(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.75(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.76(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.77(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.78(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.79(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.80(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.81(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.82(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.83(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.84(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.85(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.86(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.87(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.88(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.89(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.90(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.91(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.92(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.93(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.94(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.95(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.96(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.97(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.98(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.99(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.100(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.101(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.102(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.103(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.104(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.105(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.106(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.107(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.108(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.109(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.110(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.111(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.sqrt.f32.112(<4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.113(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.sqrt.f32.114(<4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.115(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.sqrt.f32.116(<4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.117(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.118(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.119(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.120(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.121(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.122(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.123(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.124(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.125(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.126(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.127(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.128(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.129(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.130(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.131(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.132(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.133(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.134(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.135(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.136(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.137(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.138(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.139(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.140(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.141(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.142(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.143(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.144(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.145(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.146(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.147(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.148(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.149(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.150(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.151(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.152(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.153(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.154(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.155(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.156(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.157(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.158(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.159(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.160(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.161(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.162(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.163(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.164(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.165(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.166(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.167(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.168(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.169(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.170(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.171(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.172(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.173(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.174(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.175(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.176(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.177(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.178(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.179(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.180(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.181(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.182(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.183(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.184(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.185(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.186(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.187(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.188(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.189(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.190(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.191(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.192(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.193(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.194(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.195(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.196(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.197(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.198(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.199(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.200(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.201(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.202(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.203(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.204(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.205(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.206(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.207(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.208(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.209(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.210(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.211(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.212(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.213(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.214(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.215(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.216(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.217(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.218(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.219(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.220(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.221(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.222(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.223(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.224(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.225(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.226(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.227(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.228(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.229(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.230(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.231(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.232(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.233(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.234(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.235(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.236(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.237(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.238(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.239(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.240(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.241(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.242(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.243(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.244(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.245(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.246(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.247(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.248(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.249(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.250(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.251(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.252(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.253(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.254(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.255(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.256(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.257(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.258(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.259(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.260(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.261(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.262(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.263(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.264(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.265(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.266(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.267(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.sqrt.f32.268(<4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.269(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.sqrt.f32.270(<4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.271(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.272(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.273(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.274(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.275(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.276(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.277(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.278(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.279(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.280(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.281(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.282(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.283(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.284(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.285(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.286(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.287(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.288(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.289(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.290(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.291(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.292(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.293(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.294(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.295(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.296(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.297(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.298(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.299(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.300(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.301(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.302(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.303(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.304(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.305(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.306(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.307(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.308(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.309(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.310(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.311(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.312(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.313(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.314(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.315(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.316(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.317(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.318(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.319(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.320(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.321(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.322(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.323(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.324(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.325(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.326(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.327(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.328(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.329(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.330(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.331(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.332(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.333(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.334(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.335(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.336(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.337(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.338(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.339(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.340(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.341(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.342(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.343(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.344(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.345(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.346(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.347(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.348(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.349(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.350(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.351(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.352(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.353(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.354(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.355(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.356(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.357(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.358(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.359(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.360(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.361(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.362(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.363(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.364(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.365(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.366(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.367(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.368(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.369(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.370(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.371(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.372(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.373(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.374(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.375(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.376(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.377(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.378(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.379(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.380(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.381(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.382(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.383(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.384(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.385(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.386(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.387(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.388(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.389(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.390(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.391(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.392(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.393(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.394(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.395(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.396(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.397(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.398(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.399(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.400(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.401(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.402(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.403(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.404(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.405(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.406(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.407(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.408(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.409(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.410(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.411(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.412(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.413(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.414(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.415(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.416(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.417(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.418(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.419(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.420(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.421(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.422(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.423(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.424(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.425(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.426(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.427(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.428(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.429(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.430(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.431(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.432(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.433(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.434(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.435(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.436(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.437(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.438(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.439(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.440(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.441(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.442(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.443(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.444(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.445(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.446(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.447(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.448(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.449(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.450(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.451(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.452(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.453(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.454(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.455(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.456(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.457(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.458(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.459(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.460(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.461(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.462(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.463(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.464(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.465(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.466(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.467(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.468(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.469(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.470(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.471(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.472(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.473(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.474(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.475(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.476(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.477(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.478(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.479(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.480(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.481(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.482(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.483(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.484(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.485(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.486(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.487(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.488(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.489(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.490(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.491(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.492(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.493(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.494(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.495(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.496(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.497(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.498(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.499(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.500(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.501(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.502(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.503(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.504(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.505(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.506(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.507(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.508(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.509(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.510(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.511(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.512(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.513(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.514(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.515(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.516(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.517(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.518(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.sqrt.f32.519(<4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.520(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.521(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.522(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.523(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.524(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.525(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.526(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.527(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.528(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.529(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.530(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.531(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32.532(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.533(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.534(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.535(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.536(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.537(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.538(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.539(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.540(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.541(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.542(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.543(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.544(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.545(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.546(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.547(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.548(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.549(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.550(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.551(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.552(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.553(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.554(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.555(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.556(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.557(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.558(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.559(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.560(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.561(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.562(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.563(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.564(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.565(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.566(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.567(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.568(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.569(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.570(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.571(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.572(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.573(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.574(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.575(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.576(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.577(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.578(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.579(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.580(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.581(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.582(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.583(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.584(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.585(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.586(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.587(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.588(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.589(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.590(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.591(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.592(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.593(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.594(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.595(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.596(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.597(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.598(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.599(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.600(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.601(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.602(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.603(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.604(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.605(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.606(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.607(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.608(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.609(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.610(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.611(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.612(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.613(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.614(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.615(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.616(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.617(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.618(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.619(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.620(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.621(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.622(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.623(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.624(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.625(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.626(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.627(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.628(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.629(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.630(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.631(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.632(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.633(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.634(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.635(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.636(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.637(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.638(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.639(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.640(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.641(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.642(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.643(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.644(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.645(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.646(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.647(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.648(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.649(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.650(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.651(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.652(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.653(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.654(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.655(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.656(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.657(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.658(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.659(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.660(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.661(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.662(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.663(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.664(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.665(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.666(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.667(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.668(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.669(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.670(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.671(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.672(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.673(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.674(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.675(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.676(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.677(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.678(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.679(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.680(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.681(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.682(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.683(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.684(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.685(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.686(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.687(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.688(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.689(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.690(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.691(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.692(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.693(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.694(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.695(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.696(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.697(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.698(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.699(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.700(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.701(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.702(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.703(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.704(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.705(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.706(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.707(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.708(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.709(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.710(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.711(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.712(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.713(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.714(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.715(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.716(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.717(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.718(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.719(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.720(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.721(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.722(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.723(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.724(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.725(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.726(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.727(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.728(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.729(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.730(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.731(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.732(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.733(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.734(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.735(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.736(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.737(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.738(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.739(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.740(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.741(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.742(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.743(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.744(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.745(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.746(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.747(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.748(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.749(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.750(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.751(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.752(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.753(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.754(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.755(<4 x float>, <4 x float>, <4 x float>) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.f32.756(<4 x float>, <4 x float>, <4 x float>) #1

attributes #0 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { argmemonly nounwind willreturn writeonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 11.0.1"}
