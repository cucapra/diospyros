{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3","program":"/Users/wandang/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","symbolic_expressions","/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=5284596d4ddbb4c8","-C","extra-filename=-5284596d4ddbb4c8","--out-dir","/Users/wandang/Desktop/diospyros/src/dios-egraphs/Diospyros/target/rls/debug/deps","-L","dependency=/Users/wandang/Desktop/diospyros/src/dios-egraphs/Diospyros/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/wandang/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/wandang/Desktop/diospyros/src/dios-egraphs/Diospyros/target/rls/debug/deps/libsymbolic_expressions-5284596d4ddbb4c8.rmeta"},"prelude":{"crate_id":{"name":"symbolic_expressions","disambiguator":[15681816113177573954,13518394771095589099]},"crate_root":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src","external_crates":[{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}}],"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":56,"byte_end":565,"line_start":3,"line_end":29,"column_start":1,"column_end":10}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":152,"byte_end":153,"line_start":7,"line_end":7,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"parse_error","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":169,"byte_end":170,"line_start":8,"line_end":8,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"encode_string, Sexp","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":475,"byte_end":480,"line_start":23,"line_end":23,"column_start":20,"column_end":25},"alias_span":null,"name":"Rules","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":501,"byte_end":510,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"Formatter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":531,"byte_end":540,"line_start":26,"line_end":26,"column_start":19,"column_end":28},"alias_span":null,"name":"from_sexp","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":56,"byte_end":565,"line_start":3,"line_end":29,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":41},{"krate":0,"index":85},{"krate":0,"index":157},{"krate":0,"index":191},{"krate":0,"index":237},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313}],"decl_id":null,"docs":" symbolic-expressions parsing and generating library\n","sig":null,"attributes":[{"value":"/ symbolic-expressions parsing and generating library","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":56,"byte_end":111,"line_start":3,"line_end":3,"column_start":1,"column_end":56}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":113,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":803,"byte_end":808,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Parse","qualname":"::error::SexpError::Parse","value":"SexpError::Parse(ParseError)","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" parse error\n","sig":null,"attributes":[{"value":"/ parse error","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":783,"byte_end":798,"line_start":12,"line_end":12,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":320},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":846,"byte_end":851,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Other","qualname":"::error::SexpError::Other","value":"SexpError::Other(String)","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" other error\n","sig":null,"attributes":[{"value":"/ other error","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":826,"byte_end":841,"line_start":14,"line_end":14,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":323},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":882,"byte_end":884,"line_start":17,"line_end":17,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::SexpError::Io","value":"SexpError::Io(io::Error)","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" IO Error\n","sig":null,"attributes":[{"value":"/ IO Error","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":865,"byte_end":877,"line_start":16,"line_end":16,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":326},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":934,"byte_end":942,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"FromUtf8","qualname":"::error::SexpError::FromUtf8","value":"SexpError::FromUtf8(string::FromUtf8Error)","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Utf8 Error parsing error\n","sig":null,"attributes":[{"value":"/ Utf8 Error parsing error","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":901,"byte_end":929,"line_start":18,"line_end":18,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":1008,"byte_end":1013,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Float","qualname":"::error::SexpError::Float","value":"SexpError::Float(num::ParseFloatError)","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" floating point parsing error\n","sig":null,"attributes":[{"value":"/ floating point parsing error","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":971,"byte_end":1003,"line_start":20,"line_end":20,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":332},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":1071,"byte_end":1074,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"Int","qualname":"::error::SexpError::Int","value":"SexpError::Int(num::ParseIntError)","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" integer parsing error\n","sig":null,"attributes":[{"value":"/ integer parsing error","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":1041,"byte_end":1066,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":316},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":767,"byte_end":776,"line_start":11,"line_end":11,"column_start":10,"column_end":19},"name":"SexpError","qualname":"::error::SexpError","value":"pub enum SexpError {\n    Parse(ParseError),\n    Other(String),\n    Io(io::Error),\n    FromUtf8(string::FromUtf8Error),\n    Float(num::ParseFloatError),\n    Int(num::ParseIntError),\n}","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332}],"decl_id":null,"docs":" errors that can happen in this library\n","sig":null,"attributes":[{"value":"/ errors that can happen in this library","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":698,"byte_end":740,"line_start":9,"line_end":9,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2240,"byte_end":2250,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError {  }","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" detailed symbolic-expression parse error information\n","sig":null,"attributes":[{"value":"/ detailed symbolic-expression parse error information","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2155,"byte_end":2211,"line_start":57,"line_end":57,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":3155,"byte_end":3166,"line_start":102,"line_end":102,"column_start":8,"column_end":19},"name":"parse_error","qualname":"::error::parse_error","value":"pub fn parse_error<T>(usize, usize, String) -> Result<T, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" utility function that creates a symbolic-expressions Error Result for a parser error\n","sig":null,"attributes":[{"value":"/ utility function that creates a symbolic-expressions Error Result for a parser error","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":3059,"byte_end":3147,"line_start":101,"line_end":101,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":3563,"byte_end":3572,"line_start":10,"line_end":10,"column_start":11,"column_end":20},"name":"Formatter","qualname":"::formatter::Formatter","value":"Formatter","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59}],"decl_id":null,"docs":" trait for formatting the serialization of a symbolic-expression\n","sig":null,"attributes":[{"value":"/ trait for formatting the serialization of a symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":3485,"byte_end":3552,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":3621,"byte_end":3625,"line_start":12,"line_end":12,"column_start":8,"column_end":12},"name":"open","qualname":"::formatter::Formatter::open","value":"pub fn open<W>(&mut Self, &mut W, Option<&Sexp>) -> Result<(), SexpError>\nwhere W: io::Write","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Called when serializing a '('.\n","sig":null,"attributes":[{"value":"/ Called when serializing a '('.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":3579,"byte_end":3613,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":3785,"byte_end":3792,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"element","qualname":"::formatter::Formatter::element","value":"pub fn element<W>(&mut Self, &mut W, &Sexp) -> Result<(), SexpError> where\nW: io::Write","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Called when serializing a ' VAL'.\n","sig":null,"attributes":[{"value":"/ Called when serializing a ' VAL'.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":3740,"byte_end":3777,"line_start":16,"line_end":16,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":3941,"byte_end":3946,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"close","qualname":"::formatter::Formatter::close","value":"pub fn close<W>(&mut Self, &mut W) -> Result<(), SexpError> where W: io::Write","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Called when serializing a ')'.\n","sig":null,"attributes":[{"value":"/ Called when serializing a ')'.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":3899,"byte_end":3933,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":70},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":4706,"byte_end":4711,"line_start":52,"line_end":52,"column_start":10,"column_end":15},"name":"Rules","qualname":"::formatter::Rules","value":"HashMap<&'static str, i64>","parent":null,"children":[],"decl_id":null,"docs":" datatype used by the example Formatter `RulesFormatter`\n","sig":null,"attributes":[{"value":"/ datatype used by the example Formatter `RulesFormatter`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":4637,"byte_end":4696,"line_start":51,"line_end":51,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":95},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":6915,"byte_end":6923,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"IntoSexp","qualname":"::sexp::IntoSexp","value":"IntoSexp","parent":null,"children":[{"krate":0,"index":96}],"decl_id":null,"docs":" like Into trait but works from a ref avoiding consumption or expensive clone\n","sig":null,"attributes":[{"value":"/ like Into trait but works from a ref avoiding consumption or expensive clone","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":6824,"byte_end":6904,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":6966,"byte_end":6975,"line_start":10,"line_end":10,"column_start":8,"column_end":17},"name":"into_sexp","qualname":"::sexp::IntoSexp::into_sexp","value":"pub fn into_sexp(&Self) -> Sexp","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" convert self into a Sexp\n","sig":null,"attributes":[{"value":"/ convert self into a Sexp","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":6930,"byte_end":6958,"line_start":9,"line_end":9,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":344},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8361,"byte_end":8367,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"name":"String","qualname":"::sexp::Sexp::String","value":"Sexp::String(String)","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" plain String symbolic-expression\n","sig":null,"attributes":[{"value":"/ plain String symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8320,"byte_end":8356,"line_start":77,"line_end":77,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":347},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8414,"byte_end":8418,"line_start":80,"line_end":80,"column_start":5,"column_end":9},"name":"List","qualname":"::sexp::Sexp::List","value":"Sexp::List(Vec<Sexp>)","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" list symbolic-expression\n","sig":null,"attributes":[{"value":"/ list symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8381,"byte_end":8409,"line_start":79,"line_end":79,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":350},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8478,"byte_end":8483,"line_start":82,"line_end":82,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sexp::Sexp::Empty","value":"Sexp::Empty","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" empty, trivial symbolic-expression\n","sig":null,"attributes":[{"value":"/ empty, trivial symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8435,"byte_end":8473,"line_start":81,"line_end":81,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":343},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8309,"byte_end":8313,"line_start":76,"line_end":76,"column_start":10,"column_end":14},"name":"Sexp","qualname":"::sexp::Sexp","value":"pub enum Sexp { String(String), List(Vec<Sexp>), Empty, }","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350}],"decl_id":null,"docs":" a symbolic-expression structure\n Can be a string or a list or nothing","sig":null,"attributes":[{"value":"/ a symbolic-expression structure","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8116,"byte_end":8151,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/ Can be a string or a list or nothing","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8152,"byte_end":8192,"line_start":70,"line_end":70,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8193,"byte_end":8196,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ `String` shape: hello","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8197,"byte_end":8222,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/ `List` shape: (...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8223,"byte_end":8246,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/ `Empty shape:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":8247,"byte_end":8264,"line_start":74,"line_end":74,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":9396,"byte_end":9409,"line_start":104,"line_end":104,"column_start":8,"column_end":21},"name":"encode_string","qualname":"::sexp::encode_string","value":"pub fn encode_string(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" encode a string according to the guidelines given by Kicad\n","sig":null,"attributes":[{"value":"/ encode a string according to the guidelines given by Kicad","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":9326,"byte_end":9388,"line_start":103,"line_end":103,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":9969,"byte_end":9978,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"new_empty","qualname":"<Sexp>::new_empty","value":"pub fn new_empty() -> Sexp","parent":null,"children":[],"decl_id":null,"docs":" create an empty symbolic-expression\n","sig":null,"attributes":[{"value":"/ create an empty symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":9836,"byte_end":9875,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"4.0.0\", note = \"please use `Sexp::default()` instead\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":9880,"byte_end":9957,"line_start":120,"line_end":120,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10152,"byte_end":10162,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"new_string","qualname":"<Sexp>::new_string","value":"pub fn new_string<T>(T) -> Sexp where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" create a String type symbolic-expression\n","sig":null,"attributes":[{"value":"/ create a String type symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10022,"byte_end":10066,"line_start":125,"line_end":125,"column_start":5,"column_end":49}},{"value":"deprecated(since = \"4.0.3\", note = \"please use `.into()` instead\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10071,"byte_end":10140,"line_start":126,"line_end":126,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10392,"byte_end":10400,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"new_list","qualname":"<Sexp>::new_list","value":"pub fn new_list(Vec<Sexp>) -> Sexp","parent":null,"children":[],"decl_id":null,"docs":" create a list type symbolic-expression\n","sig":null,"attributes":[{"value":"/ create a list type symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10264,"byte_end":10306,"line_start":134,"line_end":134,"column_start":5,"column_end":47}},{"value":"deprecated(since = \"4.0.3\", note = \"please use `.into()` instead\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10311,"byte_end":10380,"line_start":135,"line_end":135,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10519,"byte_end":10524,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"start","qualname":"<Sexp>::start","value":"pub fn start(&str) -> Sexp","parent":null,"children":[],"decl_id":null,"docs":" create an empty list type symbolic-expression\n","sig":null,"attributes":[{"value":"/ create an empty list type symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10458,"byte_end":10507,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10692,"byte_end":10696,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"push","qualname":"<Sexp>::push","value":"pub fn push<T: Into<Sexp>>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" push an element in a list\n","sig":null,"attributes":[{"value":"/ push an element in a list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10651,"byte_end":10680,"line_start":147,"line_end":147,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11136,"byte_end":11150,"line_start":161,"line_end":161,"column_start":12,"column_end":26},"name":"new_named_list","qualname":"<Sexp>::new_named_list","value":"pub fn new_named_list<F>(&str, F) -> Sexp where F: Fn(&mut Vec<Sexp>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" create a list type symbolic-expression where\n the first element of the list is a string that indicates\n the name, the remainder is filled in via the provided\n fill function","sig":null,"attributes":[{"value":"/ create a list type symbolic-expression where","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10893,"byte_end":10941,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/ the first element of the list is a string that indicates","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":10946,"byte_end":11006,"line_start":156,"line_end":156,"column_start":5,"column_end":65}},{"value":"/ the name, the remainder is filled in via the provided","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11011,"byte_end":11068,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/ fill function","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11073,"byte_end":11090,"line_start":158,"line_end":158,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11095,"byte_end":11098,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ shape: (name ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11103,"byte_end":11124,"line_start":160,"line_end":160,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11558,"byte_end":11567,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"new_named","qualname":"<Sexp>::new_named","value":"pub fn new_named<T>(&str, T) -> Sexp where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" create a list type symbolic-expression where\n the first element of the list is a string that indicates\n the name\n","sig":null,"attributes":[{"value":"/ create a list type symbolic-expression where","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11342,"byte_end":11390,"line_start":171,"line_end":171,"column_start":5,"column_end":53}},{"value":"/ the first element of the list is a string that indicates","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11395,"byte_end":11455,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/ the name","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11460,"byte_end":11472,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"deprecated(since = \"4.0.3\", note = \"please use `.into()` instead\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11477,"byte_end":11546,"line_start":174,"line_end":174,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":12085,"byte_end":12099,"line_start":190,"line_end":190,"column_start":12,"column_end":26},"name":"new_named_sexp","qualname":"<Sexp>::new_named_sexp","value":"pub fn new_named_sexp<T>(&str, &T) -> Sexp where T: IntoSexp","parent":null,"children":[],"decl_id":null,"docs":" create a list type symbolic-expression where\n the first element of the list is a string that indicates\n the name, and the second is another symbolic-expression\n created via the IntoSexp trait\n","sig":null,"attributes":[{"value":"/ create a list type symbolic-expression where","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11772,"byte_end":11820,"line_start":185,"line_end":185,"column_start":5,"column_end":53}},{"value":"/ the first element of the list is a string that indicates","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11825,"byte_end":11885,"line_start":186,"line_end":186,"column_start":5,"column_end":65}},{"value":"/ the name, and the second is another symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11890,"byte_end":11949,"line_start":187,"line_end":187,"column_start":5,"column_end":64}},{"value":"/ created via the IntoSexp trait","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11954,"byte_end":11988,"line_start":188,"line_end":188,"column_start":5,"column_end":39}},{"value":"deprecated(since = \"4.0.5\", note =\n             \"please use `.into()` on a tuple instead\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":11993,"byte_end":12073,"line_start":189,"line_end":189,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":12403,"byte_end":12412,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"take_list","qualname":"<Sexp>::take_list","value":"pub fn take_list(&mut Self) -> Result<Vec<Sexp>, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" if the expression is a list, extract the `Vec<Sexp>`\n from it and swap it with Empty\n","sig":null,"attributes":[{"value":"/ if the expression is a list, extract the `Vec<Sexp>`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":12296,"byte_end":12352,"line_start":200,"line_end":200,"column_start":5,"column_end":61}},{"value":"/ from it and swap it with Empty","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":12357,"byte_end":12391,"line_start":201,"line_end":201,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":12741,"byte_end":12752,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"take_string","qualname":"<Sexp>::take_string","value":"pub fn take_string(&mut Self) -> Result<String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" if the expression is a `String`, take it out and swap it with Empty\n","sig":null,"attributes":[{"value":"/ if the expression is a `String`, take it out and swap it with Empty","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":12658,"byte_end":12729,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":13068,"byte_end":13072,"line_start":222,"line_end":222,"column_start":12,"column_end":16},"name":"from","qualname":"<Sexp>::from","value":"pub fn from<T: IntoSexp>(&T) -> Sexp","parent":null,"children":[],"decl_id":null,"docs":" create a symbolic-expression via the `IntoSexp` trait\n","sig":null,"attributes":[{"value":"/ create a symbolic-expression via the `IntoSexp` trait","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":12999,"byte_end":13056,"line_start":221,"line_end":221,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":13201,"byte_end":13205,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"list","qualname":"<Sexp>::list","value":"pub fn list(&Self) -> Result<&Vec<Sexp>, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" access the symbolic-expression as if it is a List\n","sig":null,"attributes":[{"value":"/ access the symbolic-expression as if it is a List","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":13136,"byte_end":13189,"line_start":226,"line_end":226,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":13464,"byte_end":13470,"line_start":235,"line_end":235,"column_start":12,"column_end":18},"name":"string","qualname":"<Sexp>::string","value":"pub fn string(&Self) -> Result<&String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" access the symbolic-expression as if it is an `&String`\n","sig":null,"attributes":[{"value":"/ access the symbolic-expression as if it is an `&String`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":13393,"byte_end":13452,"line_start":234,"line_end":234,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":13728,"byte_end":13729,"line_start":243,"line_end":243,"column_start":12,"column_end":13},"name":"s","qualname":"<Sexp>::s","value":"pub fn s(&Self) -> Result<String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" access the symbolic-expression as if it is a `String`\n","sig":null,"attributes":[{"value":"/ access the symbolic-expression as if it is a `String`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":13659,"byte_end":13716,"line_start":242,"line_end":242,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":13968,"byte_end":13977,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"is_string","qualname":"<Sexp>::is_string","value":"pub fn is_string(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" is this expression a string\n","sig":null,"attributes":[{"value":"/ is this expression a string","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":13925,"byte_end":13956,"line_start":250,"line_end":250,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14140,"byte_end":14147,"line_start":259,"line_end":259,"column_start":12,"column_end":19},"name":"is_list","qualname":"<Sexp>::is_list","value":"pub fn is_list(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" is this expression a list\n","sig":null,"attributes":[{"value":"/ is this expression a list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14099,"byte_end":14128,"line_start":258,"line_end":258,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14356,"byte_end":14357,"line_start":268,"line_end":268,"column_start":12,"column_end":13},"name":"f","qualname":"<Sexp>::f","value":"pub fn f(&Self) -> Result<f64, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" access the symbolic-expression as if it is a String\n that is a f64\n","sig":null,"attributes":[{"value":"/ access the symbolic-expression as if it is a String","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14267,"byte_end":14322,"line_start":266,"line_end":266,"column_start":5,"column_end":60}},{"value":"/ that is a f64","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14327,"byte_end":14344,"line_start":267,"line_end":267,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14568,"byte_end":14569,"line_start":276,"line_end":276,"column_start":12,"column_end":13},"name":"i","qualname":"<Sexp>::i","value":"pub fn i(&Self) -> Result<i64, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" access the symbolic-expression as if it is a String\n that is an i64\n","sig":null,"attributes":[{"value":"/ access the symbolic-expression as if it is a String","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14478,"byte_end":14533,"line_start":274,"line_end":274,"column_start":5,"column_end":60}},{"value":"/ that is an i64","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14538,"byte_end":14556,"line_start":275,"line_end":275,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14818,"byte_end":14827,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"list_name","qualname":"<Sexp>::list_name","value":"pub fn list_name(&Self) -> Result<&String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" access the symbolic-expression as if it is a List\n assuming the first element is a String and return that\n","sig":null,"attributes":[{"value":"/ access the symbolic-expression as if it is a List","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14690,"byte_end":14743,"line_start":282,"line_end":282,"column_start":5,"column_end":58}},{"value":"/ assuming the first element is a String and return that","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14748,"byte_end":14806,"line_start":283,"line_end":283,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":15243,"byte_end":15253,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"slice_atom","qualname":"<Sexp>::slice_atom","value":"pub fn slice_atom(&Self, &str) -> Result<&[Sexp], SexpError>","parent":null,"children":[],"decl_id":null,"docs":" access the symbolic-expression as if it is a named List\n where the name is provided and returns the remaining elements\n after the name as a slice\n","sig":null,"attributes":[{"value":"/ access the symbolic-expression as if it is a named List","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":14978,"byte_end":15037,"line_start":291,"line_end":291,"column_start":5,"column_end":64}},{"value":"/ where the name is provided and returns the remaining elements","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":15042,"byte_end":15107,"line_start":292,"line_end":292,"column_start":5,"column_end":70}},{"value":"/ after the name as a slice","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":15112,"byte_end":15141,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"deprecated(since = \"4.1.4\", note =\n             \"please use `iteratom::IterAtom::new` instead\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":15146,"byte_end":15231,"line_start":294,"line_end":294,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16043,"byte_end":16054,"line_start":318,"line_end":318,"column_start":12,"column_end":23},"name":"named_value","qualname":"<Sexp>::named_value","value":"pub fn named_value(&Self, &str) -> Result<&Sexp, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" access the symbolic-expression as if it is a named List\n with two elements where the name is provided and returns\n the next element in the list\n","sig":null,"attributes":[{"value":"/ access the symbolic-expression as if it is a named List","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":15870,"byte_end":15929,"line_start":315,"line_end":315,"column_start":5,"column_end":64}},{"value":"/ with two elements where the name is provided and returns","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":15934,"byte_end":15994,"line_start":316,"line_end":316,"column_start":5,"column_end":65}},{"value":"/ the next element in the list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":15999,"byte_end":16031,"line_start":317,"line_end":317,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16363,"byte_end":16376,"line_start":328,"line_end":328,"column_start":12,"column_end":25},"name":"named_value_i","qualname":"<Sexp>::named_value_i","value":"pub fn named_value_i(&Self, &str) -> Result<i64, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" as named_value but converted to i64\n","sig":null,"attributes":[{"value":"/ as named_value but converted to i64","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16312,"byte_end":16351,"line_start":327,"line_end":327,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16516,"byte_end":16529,"line_start":333,"line_end":333,"column_start":12,"column_end":25},"name":"named_value_f","qualname":"<Sexp>::named_value_f","value":"pub fn named_value_f(&Self, &str) -> Result<f64, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" as named_value but converted to f64\n","sig":null,"attributes":[{"value":"/ as named_value but converted to f64","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16465,"byte_end":16504,"line_start":332,"line_end":332,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16675,"byte_end":16693,"line_start":338,"line_end":338,"column_start":12,"column_end":30},"name":"named_value_string","qualname":"<Sexp>::named_value_string","value":"pub fn named_value_string(&Self, &str) -> Result<&String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" as named_value but converted to `&String`\n","sig":null,"attributes":[{"value":"/ as named_value but converted to `&String`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16618,"byte_end":16663,"line_start":337,"line_end":337,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16847,"byte_end":16860,"line_start":343,"line_end":343,"column_start":12,"column_end":25},"name":"named_value_s","qualname":"<Sexp>::named_value_s","value":"pub fn named_value_s(&Self, &str) -> Result<String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" as named_value but converted to `String`\n","sig":null,"attributes":[{"value":"/ as named_value but converted to `String`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16791,"byte_end":16835,"line_start":342,"line_end":342,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":17230,"byte_end":17244,"line_start":351,"line_end":351,"column_start":12,"column_end":26},"name":"slice_atom_num","qualname":"<Sexp>::slice_atom_num","value":"pub fn slice_atom_num(&Self, &str, usize) -> Result<&[Sexp], SexpError>","parent":null,"children":[],"decl_id":null,"docs":" get the symbolic-expression as a list which starts\n with a string that indicates the name and has num more\n elements, returns those elements\n","sig":null,"attributes":[{"value":"/ get the symbolic-expression as a list which starts","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":16970,"byte_end":17024,"line_start":347,"line_end":347,"column_start":5,"column_end":59}},{"value":"/ with a string that indicates the name and has num more","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":17029,"byte_end":17087,"line_start":348,"line_end":348,"column_start":5,"column_end":63}},{"value":"/ elements, returns those elements","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":17092,"byte_end":17128,"line_start":349,"line_end":349,"column_start":5,"column_end":41}},{"value":"deprecated(since = \"4.1.4\", note =\n             \"please use `iteratom::IterAtom::new` instead\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":17133,"byte_end":17218,"line_start":350,"line_end":350,"column_start":5,"column_end":90}}]},{"kind":"Mod","id":{"krate":0,"index":157},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/parser.rs","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":360},{"krate":0,"index":365},{"krate":0,"index":174},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" symbolic-expression parser code: data -> symbolic-expression\n","sig":null,"attributes":[{"value":"/ symbolic-expression parser code: data -> symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":210,"byte_end":274,"line_start":14,"line_end":14,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/parser.rs","byte_start":20423,"byte_end":20432,"line_start":83,"line_end":83,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::parser::parse_str","value":"pub fn parse_str(&str) -> Result<Sexp, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" parse a &str to a symbolic-expression\n","sig":null,"attributes":[{"value":"/ parse a &str to a symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/parser.rs","byte_start":20374,"byte_end":20415,"line_start":82,"line_end":82,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/parser.rs","byte_start":22636,"byte_end":22646,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"parse_file","qualname":"::parser::parse_file","value":"pub fn parse_file(&str) -> Result<Sexp, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" parse a file as a symbolic-expression\n","sig":null,"attributes":[{"value":"/ parse a file as a symbolic-expression","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/parser.rs","byte_start":22587,"byte_end":22628,"line_start":170,"line_end":170,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":191},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"decl_id":null,"docs":" symbolic-expression serialization code: symbolic-expression -> data\n","sig":null,"attributes":[{"value":"/ symbolic-expression serialization code: symbolic-expression -> data","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":292,"byte_end":363,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":222},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":24730,"byte_end":24739,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"to_writer","qualname":"::ser::to_writer","value":"pub fn to_writer<W>(&mut W, &Sexp) -> Result<(), SexpError> where W: io::Write","parent":null,"children":[],"decl_id":null,"docs":" serialize a symbolic-expression to a Writer\n","sig":null,"attributes":[{"value":"/ serialize a symbolic-expression to a Writer","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":24675,"byte_end":24722,"line_start":77,"line_end":77,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":224},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":24968,"byte_end":24992,"line_start":87,"line_end":87,"column_start":8,"column_end":32},"name":"to_writer_with_formatter","qualname":"::ser::to_writer_with_formatter","value":"pub fn to_writer_with_formatter<W, F>(&mut W, F, &Sexp)\n-> Result<(), SexpError> where W: io::Write, F: Formatter","parent":null,"children":[],"decl_id":null,"docs":" serialize a symbolic-expression to a Writer using a Formatter\n","sig":null,"attributes":[{"value":"/ serialize a symbolic-expression to a Writer using a Formatter","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":24895,"byte_end":24960,"line_start":86,"line_end":86,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":227},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":25299,"byte_end":25319,"line_start":101,"line_end":101,"column_start":8,"column_end":28},"name":"to_writer_with_rules","qualname":"::ser::to_writer_with_rules","value":"pub fn to_writer_with_rules<W>(&mut W, Rules, &Sexp) -> Result<(), SexpError>\nwhere W: io::Write","parent":null,"children":[],"decl_id":null,"docs":" serialize a symbolic-expression to a Writer using a Rules Formatter\n","sig":null,"attributes":[{"value":"/ serialize a symbolic-expression to a Writer using a Rules Formatter","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":25220,"byte_end":25291,"line_start":100,"line_end":100,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":25558,"byte_end":25564,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ser::to_vec","value":"pub fn to_vec(&Sexp) -> Result<Vec<u8>, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" serialize a symbolic-expression to a Vec<u8>\n","sig":null,"attributes":[{"value":"/ serialize a symbolic-expression to a Vec<u8>","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":25502,"byte_end":25550,"line_start":109,"line_end":109,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":230},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":25779,"byte_end":25796,"line_start":117,"line_end":117,"column_start":8,"column_end":25},"name":"to_vec_with_rules","qualname":"::ser::to_vec_with_rules","value":"pub fn to_vec_with_rules(&Sexp, Rules) -> Result<Vec<u8>, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" serialize a symbolic-expression to a Vec<u8> using Rules\n","sig":null,"attributes":[{"value":"/ serialize a symbolic-expression to a Vec<u8> using Rules","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":25711,"byte_end":25771,"line_start":116,"line_end":116,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":26049,"byte_end":26070,"line_start":124,"line_end":124,"column_start":8,"column_end":29},"name":"to_vec_with_formatter","qualname":"::ser::to_vec_with_formatter","value":"pub fn to_vec_with_formatter<F>(&Sexp, F) -> Result<Vec<u8>, SexpError> where\nF: Formatter","parent":null,"children":[],"decl_id":null,"docs":" serialize a symbolic-expression to a Vec<u8> using a Formatter\n","sig":null,"attributes":[{"value":"/ serialize a symbolic-expression to a Vec<u8> using a Formatter","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":25975,"byte_end":26041,"line_start":123,"line_end":123,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":233},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":26339,"byte_end":26348,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"to_string","qualname":"::ser::to_string","value":"pub fn to_string(&Sexp) -> Result<String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" serialize a symbolic-expression to a String\n","sig":null,"attributes":[{"value":"/ serialize a symbolic-expression to a String","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":26284,"byte_end":26331,"line_start":133,"line_end":133,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":26551,"byte_end":26571,"line_start":141,"line_end":141,"column_start":8,"column_end":28},"name":"to_string_with_rules","qualname":"::ser::to_string_with_rules","value":"pub fn to_string_with_rules(&Sexp, Rules) -> Result<String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" serialize a symbolic-expression to a String using Rules\n","sig":null,"attributes":[{"value":"/ serialize a symbolic-expression to a String using Rules","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":26484,"byte_end":26543,"line_start":140,"line_end":140,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":26812,"byte_end":26836,"line_start":148,"line_end":148,"column_start":8,"column_end":32},"name":"to_string_with_formatter","qualname":"::ser::to_string_with_formatter","value":"pub fn to_string_with_formatter<F>(&Sexp, F) -> Result<String, SexpError>\nwhere F: Formatter","parent":null,"children":[],"decl_id":null,"docs":" serialize a symbolic-expression to a String using a Formatter\n","sig":null,"attributes":[{"value":"/ serialize a symbolic-expression to a String using a Formatter","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":26739,"byte_end":26804,"line_start":147,"line_end":147,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":237},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iteratom","qualname":"::iteratom","value":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":258}],"decl_id":null,"docs":" high-level API for deconstructing symbolic-expressions\n","sig":null,"attributes":[{"value":"/ high-level API for deconstructing symbolic-expressions","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":378,"byte_end":436,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":250},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27217,"byte_end":27225,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"FromSexp","qualname":"::iteratom::FromSexp","value":"FromSexp","parent":null,"children":[{"krate":0,"index":251}],"decl_id":null,"docs":" convert an `&Sexp` to something\n","sig":null,"attributes":[{"value":"/ convert an `&Sexp` to something","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27171,"byte_end":27206,"line_start":9,"line_end":9,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27314,"byte_end":27323,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"from_sexp","qualname":"::iteratom::FromSexp::from_sexp","value":"pub fn from_sexp(&Sexp) -> Result<Self, SexpError>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" convert from a symbolic-expression to something\n","sig":null,"attributes":[{"value":"/ convert from a symbolic-expression to something","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27255,"byte_end":27306,"line_start":14,"line_end":14,"column_start":5,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27434,"byte_end":27443,"line_start":19,"line_end":19,"column_start":8,"column_end":17},"name":"from_sexp","qualname":"::iteratom::from_sexp","value":"pub fn from_sexp<T: FromSexp>(&Sexp) -> Result<T, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" convert from a symbolic-expression to something (dispatcher)\n","sig":null,"attributes":[{"value":"/ convert from a symbolic-expression to something (dispatcher)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27362,"byte_end":27426,"line_start":18,"line_end":18,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27553,"byte_end":27561,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"IterAtom","qualname":"::iteratom::IterAtom","value":"IterAtom { iter }","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"decl_id":null,"docs":" Atom iterator wrapper\n","sig":null,"attributes":[{"value":"/ Atom iterator wrapper","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27516,"byte_end":27541,"line_start":23,"line_end":23,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":257},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27636,"byte_end":27640,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"name":"iter","qualname":"::iteratom::IterAtom::iter","value":"std::iter::Peekable<std::slice::Iter<'a, sexp::Sexp>>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" containing iterable (pub for now)\n","sig":null,"attributes":[{"value":"/ containing iterable (pub for now)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27590,"byte_end":27627,"line_start":26,"line_end":26,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27774,"byte_end":27777,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<IterAtom>::new","value":"pub fn new(&'a Sexp, &str) -> Result<IterAtom, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" deconstruct a `Sexp` that is a list and starts with 'name'\n","sig":null,"attributes":[{"value":"/ deconstruct a `Sexp` that is a list and starts with 'name'","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27700,"byte_end":27762,"line_start":32,"line_end":32,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":28414,"byte_end":28426,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"new_nameless","qualname":"<IterAtom>::new_nameless","value":"pub fn new_nameless(&'a Sexp, &str) -> Result<IterAtom, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" deconstruct a `Sexp` that is a list and doesn't start with a name\n","sig":null,"attributes":[{"value":"/ deconstruct a `Sexp` that is a list and doesn't start with a name","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":28333,"byte_end":28402,"line_start":50,"line_end":50,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29065,"byte_end":29066,"line_start":72,"line_end":72,"column_start":12,"column_end":13},"name":"i","qualname":"<IterAtom>::i","value":"pub fn i(&mut Self, &str) -> Result<i64, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" expect an integer while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ expect an integer while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":28962,"byte_end":29013,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29018,"byte_end":29021,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... 42 ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29026,"byte_end":29053,"line_start":71,"line_end":71,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29288,"byte_end":29289,"line_start":79,"line_end":79,"column_start":12,"column_end":13},"name":"f","qualname":"<IterAtom>::f","value":"pub fn f(&mut Self, &str) -> Result<f64, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" expect a float while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ expect a float while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29186,"byte_end":29234,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29239,"byte_end":29242,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... 42.7 ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29247,"byte_end":29276,"line_start":78,"line_end":78,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29513,"byte_end":29514,"line_start":86,"line_end":86,"column_start":12,"column_end":13},"name":"s","qualname":"<IterAtom>::s","value":"pub fn s(&mut Self, &str) -> Result<String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" expect a String while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ expect a String while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29409,"byte_end":29458,"line_start":83,"line_end":83,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29463,"byte_end":29466,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... hello ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29471,"byte_end":29501,"line_start":85,"line_end":85,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29756,"byte_end":29765,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"s_in_list","qualname":"<IterAtom>::s_in_list","value":"pub fn s_in_list(&mut Self, &str) -> Result<String, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" expect a list contained String while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ expect a list contained String while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29637,"byte_end":29701,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29706,"byte_end":29709,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... hello ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29714,"byte_end":29744,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30024,"byte_end":30033,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"i_in_list","qualname":"<IterAtom>::i_in_list","value":"pub fn i_in_list(&mut Self, &str) -> Result<i64, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" expect a list contained i64 while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ expect a list contained i64 while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29904,"byte_end":29965,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29970,"byte_end":29973,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... (name 42) ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":29978,"byte_end":30012,"line_start":99,"line_end":99,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30291,"byte_end":30300,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"f_in_list","qualname":"<IterAtom>::f_in_list","value":"pub fn f_in_list(&mut Self, &str) -> Result<f64, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" expect a list contained f64 while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ expect a list contained f64 while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30169,"byte_end":30230,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30235,"byte_end":30238,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... (name 42.7) ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30243,"byte_end":30279,"line_start":106,"line_end":106,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30541,"byte_end":30542,"line_start":115,"line_end":115,"column_start":12,"column_end":13},"name":"t","qualname":"<IterAtom>::t","value":"pub fn t<T: FromSexp>(&mut Self, &str) -> Result<T, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" expect a `Sexp` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ expect a `Sexp` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30437,"byte_end":30486,"line_start":112,"line_end":112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30491,"byte_end":30494,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... (...) ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30499,"byte_end":30529,"line_start":114,"line_end":114,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30792,"byte_end":30801,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"t_in_list","qualname":"<IterAtom>::t_in_list","value":"pub fn t_in_list<T: FromSexp>(&mut Self, &str) -> Result<T, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" expect a list containing a `Sexp` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ expect a list containing a `Sexp` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30663,"byte_end":30730,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30735,"byte_end":30738,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... (name (...)) ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30743,"byte_end":30780,"line_start":121,"line_end":121,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":31037,"byte_end":31040,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"vec","qualname":"<IterAtom>::vec","value":"pub fn vec<T: FromSexp>(&mut Self) -> Result<Vec<T>, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" expect remainder of iterator to be a `Vec<T>`","sig":null,"attributes":[{"value":"/ expect remainder of iterator to be a `Vec<T>`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30941,"byte_end":30990,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":30995,"byte_end":30998,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ shape: (... T T T)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":31003,"byte_end":31025,"line_start":128,"line_end":128,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32087,"byte_end":32094,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"maybe_t","qualname":"<IterAtom>::maybe_t","value":"pub fn maybe_t<T: FromSexp>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" maybe a `FromSexp` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ maybe a `FromSexp` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":31980,"byte_end":32032,"line_start":165,"line_end":165,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32037,"byte_end":32040,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... (...) ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32045,"byte_end":32075,"line_start":167,"line_end":167,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32290,"byte_end":32297,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"maybe_s","qualname":"<IterAtom>::maybe_s","value":"pub fn maybe_s(&mut Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" maybe a `String` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ maybe a `String` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32185,"byte_end":32235,"line_start":172,"line_end":172,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32240,"byte_end":32243,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... hello ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32248,"byte_end":32278,"line_start":174,"line_end":174,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32477,"byte_end":32492,"line_start":182,"line_end":182,"column_start":12,"column_end":27},"name":"maybe_literal_s","qualname":"<IterAtom>::maybe_literal_s","value":"pub fn maybe_literal_s(&mut Self, &str) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" maybe a `String` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ maybe a `String` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32370,"byte_end":32420,"line_start":179,"line_end":179,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32425,"byte_end":32428,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... literal ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32433,"byte_end":32465,"line_start":181,"line_end":181,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32830,"byte_end":32837,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"maybe_i","qualname":"<IterAtom>::maybe_i","value":"pub fn maybe_i(&mut Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" maybe an `i64` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ maybe an `i64` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32730,"byte_end":32778,"line_start":193,"line_end":193,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32783,"byte_end":32786,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... 42 ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32791,"byte_end":32818,"line_start":195,"line_end":195,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33009,"byte_end":33016,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"maybe_f","qualname":"<IterAtom>::maybe_f","value":"pub fn maybe_f(&mut Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" maybe an `f64` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ maybe an `f64` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32907,"byte_end":32955,"line_start":200,"line_end":200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32960,"byte_end":32963,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... 42.7 ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":32968,"byte_end":32997,"line_start":202,"line_end":202,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33216,"byte_end":33231,"line_start":210,"line_end":210,"column_start":12,"column_end":27},"name":"maybe_s_in_list","qualname":"<IterAtom>::maybe_s_in_list","value":"pub fn maybe_s_in_list(&mut Self, &str) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" maybe a list containing a `String` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ maybe a list containing a `String` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33086,"byte_end":33154,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33159,"byte_end":33162,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... (name hello) ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33167,"byte_end":33204,"line_start":209,"line_end":209,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33457,"byte_end":33472,"line_start":217,"line_end":217,"column_start":12,"column_end":27},"name":"maybe_i_in_list","qualname":"<IterAtom>::maybe_i_in_list","value":"pub fn maybe_i_in_list(&mut Self, &str) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" maybe a list containing an `i64` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ maybe a list containing an `i64` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33332,"byte_end":33398,"line_start":214,"line_end":214,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33403,"byte_end":33406,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... (name 42) ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33411,"byte_end":33445,"line_start":216,"line_end":216,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33697,"byte_end":33712,"line_start":224,"line_end":224,"column_start":12,"column_end":27},"name":"maybe_f_in_list","qualname":"<IterAtom>::maybe_f_in_list","value":"pub fn maybe_f_in_list(&mut Self, &str) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" maybe a list containing an `f64` while iterating a `Sexp` list","sig":null,"attributes":[{"value":"/ maybe a list containing an `f64` while iterating a `Sexp` list","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33570,"byte_end":33636,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33641,"byte_end":33644,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ shape: (... ... (name 42.7) ...)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33649,"byte_end":33685,"line_start":223,"line_end":223,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33892,"byte_end":33897,"line_start":231,"line_end":231,"column_start":12,"column_end":17},"name":"close","qualname":"<IterAtom>::close","value":"pub fn close<T>(&mut Self, T) -> Result<T, SexpError>","parent":null,"children":[],"decl_id":null,"docs":" make sure we consumed all of the iterator","sig":null,"attributes":[{"value":"/ make sure we consumed all of the iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33810,"byte_end":33855,"line_start":228,"line_end":228,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33860,"byte_end":33863,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ shape: )","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":33868,"byte_end":33880,"line_start":230,"line_end":230,"column_start":5,"column_end":17}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":1158,"byte_end":1167,"line_start":27,"line_end":27,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":1722,"byte_end":1731,"line_start":41,"line_end":41,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2331,"byte_end":2340,"line_start":65,"line_end":65,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2440,"byte_end":2449,"line_start":71,"line_end":71,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2554,"byte_end":2563,"line_start":77,"line_end":77,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2686,"byte_end":2695,"line_start":83,"line_end":83,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2827,"byte_end":2836,"line_start":89,"line_end":89,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2962,"byte_end":2971,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":4086,"byte_end":4102,"line_start":29,"line_end":29,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":4838,"byte_end":4852,"line_start":59,"line_end":59,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":5049,"byte_end":5063,"line_start":69,"line_end":69,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":5280,"byte_end":5294,"line_start":78,"line_end":78,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7015,"byte_end":7018,"line_start":13,"line_end":13,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7120,"byte_end":7126,"line_start":19,"line_end":19,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7228,"byte_end":7232,"line_start":25,"line_end":25,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7336,"byte_end":7340,"line_start":31,"line_end":31,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7673,"byte_end":7677,"line_start":49,"line_end":49,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7911,"byte_end":7915,"line_start":59,"line_end":59,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":9825,"byte_end":9829,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":17846,"byte_end":17850,"line_start":372,"line_end":372,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":18480,"byte_end":18484,"line_start":393,"line_end":393,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/parser.rs","byte_start":18834,"byte_end":18840,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":23011,"byte_end":23021,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":23161,"byte_end":23171,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":23360,"byte_end":23370,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27681,"byte_end":27689,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":283,"byte_end":289,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":157}},{"kind":"Mod","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":372,"byte_end":375,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":191}},{"kind":"Mod","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/lib.rs","byte_start":445,"byte_end":453,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":237}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":1158,"byte_end":1167,"line_start":27,"line_end":27,"column_start":23,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":1722,"byte_end":1731,"line_start":41,"line_end":41,"column_start":23,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":316},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2331,"byte_end":2340,"line_start":65,"line_end":65,"column_start":26,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2440,"byte_end":2449,"line_start":71,"line_end":71,"column_start":23,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2554,"byte_end":2563,"line_start":77,"line_end":77,"column_start":28,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2686,"byte_end":2695,"line_start":83,"line_end":83,"column_start":38,"column_end":47},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2827,"byte_end":2836,"line_start":89,"line_end":89,"column_start":37,"column_end":46},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/error.rs","byte_start":2962,"byte_end":2971,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":4086,"byte_end":4102,"line_start":29,"line_end":29,"column_start":20,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":61},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":4838,"byte_end":4852,"line_start":59,"line_end":59,"column_start":18,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":71},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":5049,"byte_end":5063,"line_start":69,"line_end":69,"column_start":6,"column_end":20},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/formatter.rs","byte_start":5280,"byte_end":5294,"line_start":78,"line_end":78,"column_start":20,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":71},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7015,"byte_end":7018,"line_start":13,"line_end":13,"column_start":21,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":6772},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7120,"byte_end":7126,"line_start":19,"line_end":19,"column_start":21,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":7285},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7228,"byte_end":7232,"line_start":25,"line_end":25,"column_start":28,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7336,"byte_end":7340,"line_start":31,"line_end":31,"column_start":31,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7673,"byte_end":7677,"line_start":49,"line_end":49,"column_start":36,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":7911,"byte_end":7915,"line_start":59,"line_end":59,"column_start":54,"column_end":58},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":9825,"byte_end":9829,"line_start":118,"line_end":118,"column_start":6,"column_end":10},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":17846,"byte_end":17850,"line_start":372,"line_end":372,"column_start":23,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/sexp.rs","byte_start":18480,"byte_end":18484,"line_start":393,"line_end":393,"column_start":18,"column_end":22},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/parser.rs","byte_start":18834,"byte_end":18840,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":23011,"byte_end":23021,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":23161,"byte_end":23171,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/ser.rs","byte_start":23360,"byte_end":23370,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/symbolic_expressions-5.0.3/src/iteratom.rs","byte_start":27681,"byte_end":27689,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}}]}