{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0","program":"/Users/wandang/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","itertools","--edition=2018","/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","-C","metadata=bae761ef68c79b19","-C","extra-filename=-bae761ef68c79b19","--out-dir","/Users/wandang/Desktop/diospyros/src/dios-egraphs/Diospyros/target/rls/debug/deps","-L","dependency=/Users/wandang/Desktop/diospyros/src/dios-egraphs/Diospyros/target/rls/debug/deps","--extern","either=/Users/wandang/Desktop/diospyros/src/dios-egraphs/Diospyros/target/rls/debug/deps/libeither-e43bf29ef71dea15.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/wandang/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/wandang/Desktop/diospyros/src/dios-egraphs/Diospyros/target/rls/debug/deps/libitertools-bae761ef68c79b19.rmeta"},"prelude":{"crate_id":{"name":"itertools","disambiguator":[16184623262259053854,2554312022132465963]},"crate_root":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src","external_crates":[{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}},{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":17,"id":{"name":"either","disambiguator":[6558834117728643898,1091877105138028456]}}],"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":0,"byte_end":91090,"line_start":1,"line_end":2721,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":17,"index":181},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1424,"byte_end":1430,"line_start":53,"line_end":53,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":4516},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1901,"byte_end":1905,"line_start":74,"line_end":74,"column_start":14,"column_end":18},"alias_span":null,"name":"__std_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":482},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2012,"byte_end":2017,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"alias_span":null,"name":"Dedup","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":467},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2027,"byte_end":2034,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"alias_span":null,"name":"DedupBy","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1979},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2044,"byte_end":2054,"line_start":81,"line_end":81,"column_start":9,"column_end":19},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1993},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2064,"byte_end":2082,"line_start":82,"line_end":82,"column_start":9,"column_end":27},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2017},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2092,"byte_end":2099,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2007},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2109,"byte_end":2116,"line_start":84,"line_end":84,"column_start":9,"column_end":16},"alias_span":null,"name":"PutBack","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2032},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2126,"byte_end":2134,"line_start":85,"line_end":85,"column_start":9,"column_end":17},"alias_span":null,"name":"Batching","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2193},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2144,"byte_end":2151,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2202},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2161,"byte_end":2171,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"alias_span":null,"name":"MapResults","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":405},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2181,"byte_end":2186,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":411},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2196,"byte_end":2203,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"alias_span":null,"name":"MergeBy","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2213,"byte_end":2225,"line_start":90,"line_end":90,"column_start":9,"column_end":21},"alias_span":null,"name":"TakeWhileRef","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2077},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2235,"byte_end":2244,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":447},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2254,"byte_end":2262,"line_start":92,"line_end":92,"column_start":9,"column_end":17},"alias_span":null,"name":"Coalesce","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2086},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2272,"byte_end":2289,"line_start":93,"line_end":93,"column_start":9,"column_end":26},"alias_span":null,"name":"TupleCombinations","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2211},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2299,"byte_end":2308,"line_start":94,"line_end":94,"column_start":9,"column_end":18},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2221},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2318,"byte_end":2324,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2042},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2387,"byte_end":2391,"line_start":98,"line_end":98,"column_start":30,"column_end":34},"alias_span":null,"name":"Step","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2454,"byte_end":2466,"line_start":100,"line_end":100,"column_start":30,"column_end":42},"alias_span":null,"name":"MultiProduct","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2533,"byte_end":2545,"line_start":102,"line_end":102,"column_start":34,"column_end":46},"alias_span":null,"name":"Combinations","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2432},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2629,"byte_end":2656,"line_start":104,"line_end":104,"column_start":51,"column_end":78},"alias_span":null,"name":"CombinationsWithReplacement","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2421},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2695,"byte_end":2705,"line_start":105,"line_end":105,"column_start":38,"column_end":48},"alias_span":null,"name":"ConsTuples","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2443},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2743,"byte_end":2758,"line_start":106,"line_end":106,"column_start":37,"column_end":52},"alias_span":null,"name":"ExactlyOneError","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2464},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2788,"byte_end":2794,"line_start":107,"line_end":107,"column_start":29,"column_end":35},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2453},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2796,"byte_end":2806,"line_start":107,"line_end":107,"column_start":37,"column_end":47},"alias_span":null,"name":"FormatWith","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1032},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2874,"byte_end":2884,"line_start":109,"line_end":109,"column_start":34,"column_end":44},"alias_span":null,"name":"IntoChunks","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1056},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2886,"byte_end":2891,"line_start":109,"line_end":109,"column_start":46,"column_end":51},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2893,"byte_end":2899,"line_start":109,"line_end":109,"column_start":53,"column_end":59},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2901,"byte_end":2908,"line_start":109,"line_end":109,"column_start":61,"column_end":68},"alias_span":null,"name":"GroupBy","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2910,"byte_end":2915,"line_start":109,"line_end":109,"column_start":70,"column_end":75},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":995},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2917,"byte_end":2923,"line_start":109,"line_end":109,"column_start":77,"column_end":83},"alias_span":null,"name":"Groups","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2518},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2958,"byte_end":2969,"line_start":110,"line_end":110,"column_start":33,"column_end":44},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1116},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3036,"byte_end":3042,"line_start":112,"line_end":112,"column_start":34,"column_end":40},"alias_span":null,"name":"KMerge","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3044,"byte_end":3052,"line_start":112,"line_end":112,"column_start":42,"column_end":50},"alias_span":null,"name":"KMergeBy","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1193},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3086,"byte_end":3097,"line_start":113,"line_end":113,"column_start":32,"column_end":43},"alias_span":null,"name":"MergeJoinBy","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3166,"byte_end":3175,"line_start":115,"line_end":115,"column_start":36,"column_end":45},"alias_span":null,"name":"MultiPeek","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2589},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3206,"byte_end":3214,"line_start":116,"line_end":116,"column_start":30,"column_end":38},"alias_span":null,"name":"PadUsing","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1307},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3255,"byte_end":3271,"line_start":117,"line_end":117,"column_start":40,"column_end":56},"alias_span":null,"name":"PeekingTakeWhile","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1334},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3338,"byte_end":3350,"line_start":119,"line_end":119,"column_start":34,"column_end":46},"alias_span":null,"name":"Permutations","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2673},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3393,"byte_end":3407,"line_start":120,"line_end":120,"column_start":42,"column_end":56},"alias_span":null,"name":"ProcessResults","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2684},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3477,"byte_end":3485,"line_start":122,"line_end":122,"column_start":37,"column_end":45},"alias_span":null,"name":"PutBackN","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2694},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3551,"byte_end":3557,"line_start":124,"line_end":124,"column_start":33,"column_end":39},"alias_span":null,"name":"RcIter","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2701},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3587,"byte_end":3594,"line_start":125,"line_end":125,"column_start":29,"column_end":36},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2711},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3650,"byte_end":3660,"line_start":127,"line_end":127,"column_start":30,"column_end":40},"alias_span":null,"name":"RepeatCall","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2719},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3662,"byte_end":3668,"line_start":127,"line_end":127,"column_start":42,"column_end":48},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2728},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3670,"byte_end":3677,"line_start":127,"line_end":127,"column_start":50,"column_end":57},"alias_span":null,"name":"Iterate","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2748},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3736,"byte_end":3739,"line_start":129,"line_end":129,"column_start":25,"column_end":28},"alias_span":null,"name":"Tee","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2755},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3773,"byte_end":3784,"line_start":130,"line_end":130,"column_start":33,"column_end":44},"alias_span":null,"name":"TupleBuffer","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2774},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3786,"byte_end":3798,"line_start":130,"line_end":130,"column_start":46,"column_end":58},"alias_span":null,"name":"TupleWindows","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2765},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3800,"byte_end":3806,"line_start":130,"line_end":130,"column_start":60,"column_end":66},"alias_span":null,"name":"Tuples","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2856},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3874,"byte_end":3880,"line_start":132,"line_end":132,"column_start":34,"column_end":40},"alias_span":null,"name":"Unique","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2843},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3882,"byte_end":3890,"line_start":132,"line_end":132,"column_start":42,"column_end":50},"alias_span":null,"name":"UniqueBy","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1635},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3927,"byte_end":3939,"line_start":133,"line_end":133,"column_start":35,"column_end":47},"alias_span":null,"name":"WithPosition","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2892},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3973,"byte_end":3978,"line_start":134,"line_end":134,"column_start":33,"column_end":38},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2905},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4012,"byte_end":4022,"line_start":135,"line_end":135,"column_start":33,"column_end":43},"alias_span":null,"name":"ZipLongest","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":2918},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4053,"byte_end":4056,"line_start":136,"line_end":136,"column_start":30,"column_end":33},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1535},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4187,"byte_end":4203,"line_start":141,"line_end":141,"column_start":32,"column_end":48},"alias_span":null,"name":"HomogeneousTuple","value":"","parent":{"krate":0,"index":215}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4253,"byte_end":4254,"line_start":145,"line_end":145,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Update, ZipLongest, MergeBy, MapInto, Tuples, Product, Coalesce, DedupBy, UniqueBy, Permutations, ExactlyOneError, Combinations, Step, TupleCombinations, ZipEq, MapResults, PutBack, Interleave, TakeWhileRef, PutBackN, PeekingTakeWhile, MergeJoinBy, KMerge, GroupBy, IntoChunks, Format, MultiProduct, Positions, WhileSome, Merge, Batching, InterleaveShortest, TupleWindows, Tee, Dedup, Unique, WithPosition, PadUsing, KMergeBy, Intersperse, FormatWith, CombinationsWithReplacement","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":766},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4284,"byte_end":4290,"line_start":146,"line_end":146,"column_start":29,"column_end":35},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":775},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4325,"byte_end":4336,"line_start":147,"line_end":147,"column_start":34,"column_end":45},"alias_span":null,"name":"cons_tuples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4359,"byte_end":4368,"line_start":148,"line_end":148,"column_start":22,"column_end":31},"alias_span":null,"name":"diff_with","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":846},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4391,"byte_end":4395,"line_start":149,"line_end":149,"column_start":22,"column_end":26},"alias_span":null,"name":"Diff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1138},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4454,"byte_end":4463,"line_start":151,"line_end":151,"column_start":30,"column_end":39},"alias_span":null,"name":"kmerge_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2553},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4489,"byte_end":4501,"line_start":152,"line_end":152,"column_start":24,"column_end":36},"alias_span":null,"name":"MinMaxResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4538,"byte_end":4549,"line_start":153,"line_end":153,"column_start":36,"column_end":47},"alias_span":null,"name":"PeekingNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1384},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4588,"byte_end":4603,"line_start":154,"line_end":154,"column_start":38,"column_end":53},"alias_span":null,"name":"process_results","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1435},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4629,"byte_end":4637,"line_start":155,"line_end":155,"column_start":25,"column_end":33},"alias_span":null,"name":"repeat_n","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1474},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4685,"byte_end":4696,"line_start":157,"line_end":157,"column_start":26,"column_end":37},"alias_span":null,"name":"repeat_call","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1483},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4698,"byte_end":4704,"line_start":157,"line_end":157,"column_start":39,"column_end":45},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1506},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4706,"byte_end":4713,"line_start":157,"line_end":157,"column_start":47,"column_end":54},"alias_span":null,"name":"iterate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2864},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4746,"byte_end":4754,"line_start":158,"line_end":158,"column_start":31,"column_end":39},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1709},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4781,"byte_end":4789,"line_start":159,"line_end":159,"column_start":26,"column_end":34},"alias_span":null,"name":"multizip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2230},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4856,"byte_end":4868,"line_start":162,"line_end":162,"column_start":32,"column_end":44},"alias_span":null,"name":"EitherOrBoth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":323},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":136993,"byte_end":137003,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"interleave","value":"","parent":{"krate":0,"index":685}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137009,"byte_end":137014,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"alias_span":null,"name":"merge","value":"","parent":{"krate":0,"index":685}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137020,"byte_end":137028,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"put_back","value":"","parent":{"krate":0,"index":685}},{"kind":"Use","ref_id":{"krate":0,"index":1395},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137093,"byte_end":137103,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"alias_span":null,"name":"put_back_n","value":"","parent":{"krate":0,"index":685}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137164,"byte_end":137173,"line_start":23,"line_end":23,"column_start":32,"column_end":41},"alias_span":null,"name":"multipeek","value":"","parent":{"krate":0,"index":685}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137231,"byte_end":137237,"line_start":25,"line_end":25,"column_start":29,"column_end":35},"alias_span":null,"name":"kmerge","value":"","parent":{"krate":0,"index":685}},{"kind":"Use","ref_id":{"krate":0,"index":1657},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137267,"byte_end":137273,"line_start":26,"line_end":26,"column_start":29,"column_end":35},"alias_span":null,"name":"zip_eq","value":"","parent":{"krate":0,"index":685}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137302,"byte_end":137315,"line_start":27,"line_end":27,"column_start":28,"column_end":41},"alias_span":null,"name":"merge_join_by","value":"","parent":{"krate":0,"index":685}},{"kind":"Use","ref_id":{"krate":0,"index":1415},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137373,"byte_end":137379,"line_start":29,"line_end":29,"column_start":29,"column_end":35},"alias_span":null,"name":"rciter","value":"","parent":{"krate":0,"index":685}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4935,"byte_end":4936,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"merge, interleave, merge_join_by, zip_eq, kmerge","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":0,"byte_end":91090,"line_start":1,"line_end":2721,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":638},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":770},{"krate":0,"index":778},{"krate":0,"index":801},{"krate":0,"index":820},{"krate":0,"index":839},{"krate":0,"index":867},{"krate":0,"index":894},{"krate":0,"index":908},{"krate":0,"index":1071},{"krate":0,"index":1089},{"krate":0,"index":1154},{"krate":0,"index":1169},{"krate":0,"index":1218},{"krate":0,"index":1227},{"krate":0,"index":1259},{"krate":0,"index":1282},{"krate":0,"index":1324},{"krate":0,"index":1375},{"krate":0,"index":1391},{"krate":0,"index":1405},{"krate":0,"index":1434},{"krate":0,"index":1447},{"krate":0,"index":1465},{"krate":0,"index":1509},{"krate":0,"index":1531},{"krate":0,"index":1582},{"krate":0,"index":1627},{"krate":0,"index":1653},{"krate":0,"index":1669},{"krate":0,"index":1705},{"krate":0,"index":1715},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":3091},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3112},{"krate":0,"index":3114},{"krate":0,"index":1950}],"decl_id":null,"docs":" Extra iterator adaptors, functions and macros.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"itertools\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":27}},{"value":"/ Extra iterator adaptors, functions and macros.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":98,"byte_end":148,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":149,"byte_end":152,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ To extend [`Iterator`] with methods in this crate, import","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":153,"byte_end":214,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ the [`Itertools` trait](./trait.Itertools.html):","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":215,"byte_end":267,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":268,"byte_end":271,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":272,"byte_end":279,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":280,"byte_end":309,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":310,"byte_end":317,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":318,"byte_end":321,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Now, new methods like [`interleave`](./trait.Itertools.html#method.interleave)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":322,"byte_end":404,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ are available on all iterators:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":405,"byte_end":440,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":441,"byte_end":444,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":445,"byte_end":452,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":453,"byte_end":482,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":483,"byte_end":486,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let it = (1..3).interleave(vec![-1, -2]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":487,"byte_end":532,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":533,"byte_end":585,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":586,"byte_end":593,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":594,"byte_end":597,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Most iterator methods are also provided as functions (with the benefit","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":598,"byte_end":672,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ that they convert parameters using [`IntoIterator`]):","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":673,"byte_end":730,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":731,"byte_end":734,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":735,"byte_end":742,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use itertools::interleave;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":743,"byte_end":773,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":774,"byte_end":777,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ for elt in interleave(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":778,"byte_end":829,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/     /* loop body */","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":830,"byte_end":853,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":854,"byte_end":859,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":860,"byte_end":867,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":868,"byte_end":871,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Crate Features","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":872,"byte_end":893,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":894,"byte_end":897,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ - `use_std`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":898,"byte_end":913,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/   - Enabled by default.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":914,"byte_end":941,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/   - Disable to compile itertools using `#![no_std]`. This disables","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":942,"byte_end":1012,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/     any items that depend on collections (like `group_by`, `unique`,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1013,"byte_end":1085,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/     `kmerge`, `join` and many more).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1086,"byte_end":1126,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1127,"byte_end":1130,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Rust Version","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1131,"byte_end":1150,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This version of itertools requires Rust 1.32 or later.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1155,"byte_end":1213,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1214,"byte_end":1217,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Iterator`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1218,"byte_end":1290,"line_start":47,"line_end":47,"column_start":1,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1963,"byte_end":1970,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"name":"structs","qualname":"::structs","value":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212}],"decl_id":null,"docs":" The concrete iterator types.\n","sig":null,"attributes":[{"value":"/ The concrete iterator types.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1922,"byte_end":1954,"line_start":76,"line_end":76,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4147,"byte_end":4153,"line_start":140,"line_end":140,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":216}],"decl_id":null,"docs":" Traits helpful for using certain `Itertools` methods in generic contexts.\n","sig":null,"attributes":[{"value":"/ Traits helpful for using certain `Itertools` methods in generic contexts.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4061,"byte_end":4138,"line_start":139,"line_end":139,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":125127,"byte_end":125139,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"MultiProduct","qualname":"::adaptors::multi_product::MultiProduct","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n multiple iterators of type `I`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":124767,"byte_end":124834,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/ multiple iterators of type `I`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":124835,"byte_end":124870,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":124871,"byte_end":124874,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ An iterator element type is `Vec<I>`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":124875,"byte_end":124916,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":124917,"byte_end":124920,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`.multi_cartesian_product()`](../trait.Itertools.html#method.multi_cartesian_product)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":124921,"byte_end":125015,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":125016,"byte_end":125041,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":125042,"byte_end":125115,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92493,"byte_end":92503,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::adaptors::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from two iterators until both\n run out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from two iterators until both","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92163,"byte_end":92241,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ run out.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92242,"byte_end":92254,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92255,"byte_end":92258,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92259,"byte_end":92288,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92289,"byte_end":92292,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave()`](../trait.Itertools.html#method.interleave) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92293,"byte_end":92383,"line_start":22,"line_end":22,"column_start":1,"column_end":91}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92408,"byte_end":92481,"line_start":24,"line_end":24,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":323},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92833,"byte_end":92843,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"interleave","qualname":"::adaptors::interleave","value":"pub fn interleave<I, J>(I, J)\n-> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that interleaves elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that interleaves elements in `i` and `j`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92563,"byte_end":92627,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92628,"byte_end":92631,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.interleave(j)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92632,"byte_end":92688,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92689,"byte_end":92692,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92693,"byte_end":92700,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use itertools::interleave;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92701,"byte_end":92731,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92732,"byte_end":92735,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for elt in interleave(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92736,"byte_end":92787,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/     /* loop body */","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92788,"byte_end":92811,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92812,"byte_end":92817,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92818,"byte_end":92825,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":94108,"byte_end":94126,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::adaptors::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from the two iterators until\n one of them runs out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from the two iterators until","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93744,"byte_end":93821,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ one of them runs out.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93822,"byte_end":93847,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93848,"byte_end":93851,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93852,"byte_end":93881,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93882,"byte_end":93885,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave_shortest()`](../trait.Itertools.html#method.interleave_shortest)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93886,"byte_end":93972,"line_start":84,"line_end":84,"column_start":1,"column_end":87}},{"value":"/ for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93973,"byte_end":93998,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":94023,"byte_end":94096,"line_start":87,"line_end":87,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96528,"byte_end":96535,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"PutBack","qualname":"::adaptors::PutBack","value":"PutBack {  }","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010}],"decl_id":null,"docs":" An iterator adaptor that allows putting back a single\n item to the front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting back a single","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96376,"byte_end":96433,"line_start":173,"line_end":173,"column_start":1,"column_end":58}},{"value":"/ item to the front of the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96434,"byte_end":96472,"line_start":174,"line_end":174,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96473,"byte_end":96476,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96477,"byte_end":96516,"line_start":176,"line_end":176,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":342},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96672,"byte_end":96680,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"put_back","qualname":"::adaptors::put_back","value":"pub fn put_back<I>(I) -> PutBack<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back a single item\n","sig":null,"attributes":[{"value":"/ Create an iterator where you can put back a single item","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96605,"byte_end":96664,"line_start":184,"line_end":184,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96929,"byte_end":96939,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"with_value","qualname":"<PutBack<I>>::with_value","value":"pub fn with_value(Self, I::Item) -> Self","parent":null,"children":[],"decl_id":null,"docs":" put back value `value` (builder method)\n","sig":null,"attributes":[{"value":"/ put back value `value` (builder method)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96874,"byte_end":96917,"line_start":197,"line_end":197,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97095,"byte_end":97105,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PutBack<I>>::into_parts","value":"pub fn into_parts(Self) -> (Option<I::Item>, I)","parent":null,"children":[],"decl_id":null,"docs":" Split the `PutBack` into its parts.\n","sig":null,"attributes":[{"value":"/ Split the `PutBack` into its parts.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97030,"byte_end":97069,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97074,"byte_end":97083,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97370,"byte_end":97378,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBack<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Put back a single value to the front of the iterator.","sig":null,"attributes":[{"value":"/ Put back a single value to the front of the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97208,"byte_end":97265,"line_start":210,"line_end":210,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97270,"byte_end":97273,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If a value is already in the put back slot, it is overwritten.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97278,"byte_end":97344,"line_start":212,"line_end":212,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97349,"byte_end":97358,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99379,"byte_end":99386,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"Product","qualname":"::adaptors::Product","value":"Product {  }","parent":null,"children":[{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023}],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `I` and `J`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99011,"byte_end":99078,"line_start":281,"line_end":281,"column_start":1,"column_end":68}},{"value":"/ the element sets of two iterators `I` and `J`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99079,"byte_end":99129,"line_start":282,"line_end":282,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99130,"byte_end":99133,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(I::Item, J::Item)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99134,"byte_end":99184,"line_start":284,"line_end":284,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99185,"byte_end":99188,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ See [`.cartesian_product()`](../trait.Itertools.html#method.cartesian_product) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99189,"byte_end":99293,"line_start":286,"line_end":286,"column_start":1,"column_end":105}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99294,"byte_end":99367,"line_start":287,"line_end":287,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102226,"byte_end":102234,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"name":"Batching","qualname":"::adaptors::Batching","value":"Batching {  }","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036}],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure receives a reference to the iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":101778,"byte_end":101861,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/ and may pick off as many elements as it likes, to produce the next iterator element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":101862,"byte_end":101950,"line_start":377,"line_end":377,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":101951,"byte_end":101954,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is *X*, if the return type of `F` is *Option\\<X\\>*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":101955,"byte_end":102032,"line_start":379,"line_end":379,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102033,"byte_end":102036,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ See [`.batching()`](../trait.Itertools.html#method.batching) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102037,"byte_end":102123,"line_start":381,"line_end":381,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102141,"byte_end":102214,"line_start":383,"line_end":383,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103349,"byte_end":103353,"line_start":426,"line_end":426,"column_start":12,"column_end":16},"name":"Step","qualname":"::adaptors::Step","value":"Step {  }","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2045}],"decl_id":null,"docs":" An iterator adaptor that steps a number elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ An iterator adaptor that steps a number elements in the base iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102854,"byte_end":102927,"line_start":415,"line_end":415,"column_start":1,"column_end":74}},{"value":"/ for each iteration.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102928,"byte_end":102951,"line_start":416,"line_end":416,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102952,"byte_end":102955,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102956,"byte_end":103031,"line_start":418,"line_end":418,"column_start":1,"column_end":76}},{"value":"/ then skipping forward *n-1* elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103032,"byte_end":103073,"line_start":419,"line_end":419,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103074,"byte_end":103077,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [`.step()`](../trait.Itertools.html#method.step) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103078,"byte_end":103156,"line_start":421,"line_end":421,"column_start":1,"column_end":79}},{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103157,"byte_end":103218,"line_start":422,"line_end":422,"column_start":1,"column_end":62}},{"value":"allow(deprecated)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103219,"byte_end":103239,"line_start":423,"line_end":423,"column_start":1,"column_end":21}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103264,"byte_end":103337,"line_start":425,"line_end":425,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":399},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104371,"byte_end":104385,"line_start":478,"line_end":478,"column_start":11,"column_end":25},"name":"MergePredicate","qualname":"::adaptors::MergePredicate","value":"MergePredicate<T>","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104398,"byte_end":104408,"line_start":479,"line_end":479,"column_start":8,"column_end":18},"name":"merge_pred","qualname":"::adaptors::MergePredicate::merge_pred","value":"pub fn merge_pred(&mut Self, &T, &T) -> bool","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2052},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104474,"byte_end":104482,"line_start":483,"line_end":483,"column_start":12,"column_end":20},"name":"MergeLte","qualname":"::adaptors::MergeLte","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":405},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104982,"byte_end":104987,"line_start":498,"line_end":498,"column_start":10,"column_end":15},"name":"Merge","qualname":"::adaptors::Merge","value":"MergeBy<I, J, MergeLte>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104615,"byte_end":104693,"line_start":491,"line_end":491,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104694,"byte_end":104766,"line_start":492,"line_end":492,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104767,"byte_end":104770,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104771,"byte_end":104810,"line_start":494,"line_end":494,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104811,"byte_end":104814,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ See [`.merge()`](../trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104815,"byte_end":104898,"line_start":496,"line_end":496,"column_start":1,"column_end":84}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104899,"byte_end":104972,"line_start":497,"line_end":497,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":408},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105272,"byte_end":105277,"line_start":511,"line_end":511,"column_start":8,"column_end":13},"name":"merge","qualname":"::adaptors::merge","value":"pub fn merge<I, J>(I, J)\n-> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter> where\nI: IntoIterator, J: IntoIterator<Item = I::Item>, I::Item: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements in `i` and `j`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105022,"byte_end":105081,"line_start":500,"line_end":500,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105082,"byte_end":105085,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.merge(j)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105086,"byte_end":105137,"line_start":502,"line_end":502,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105138,"byte_end":105141,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105142,"byte_end":105149,"line_start":504,"line_end":504,"column_start":1,"column_end":8}},{"value":"/ use itertools::merge;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105150,"byte_end":105175,"line_start":505,"line_end":505,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105176,"byte_end":105179,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ for elt in merge(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105180,"byte_end":105226,"line_start":507,"line_end":507,"column_start":1,"column_end":47}},{"value":"/     /* loop body */","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105227,"byte_end":105250,"line_start":508,"line_end":508,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105251,"byte_end":105256,"line_start":509,"line_end":509,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105257,"byte_end":105264,"line_start":510,"line_end":510,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105877,"byte_end":105884,"line_start":526,"line_end":526,"column_start":12,"column_end":19},"name":"MergeBy","qualname":"::adaptors::MergeBy","value":"MergeBy {  }","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105505,"byte_end":105583,"line_start":519,"line_end":519,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105584,"byte_end":105656,"line_start":520,"line_end":520,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105657,"byte_end":105660,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105661,"byte_end":105700,"line_start":522,"line_end":522,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105701,"byte_end":105704,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_by()`](../trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105705,"byte_end":105791,"line_start":524,"line_end":524,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105792,"byte_end":105865,"line_start":525,"line_end":525,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":447},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109255,"byte_end":109263,"line_start":652,"line_end":652,"column_start":12,"column_end":20},"name":"Coalesce","qualname":"::adaptors::Coalesce","value":"Coalesce {  }","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" An iterator adaptor that may join together adjacent elements.","sig":null,"attributes":[{"value":"/ An iterator adaptor that may join together adjacent elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109013,"byte_end":109078,"line_start":648,"line_end":648,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109079,"byte_end":109082,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ See [`.coalesce()`](../trait.Itertools.html#method.coalesce) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109083,"byte_end":109169,"line_start":650,"line_end":650,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109170,"byte_end":109243,"line_start":651,"line_end":651,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110540,"byte_end":110547,"line_start":705,"line_end":705,"column_start":12,"column_end":19},"name":"DedupBy","qualname":"::adaptors::DedupBy","value":"DedupBy {  }","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates, determining equality using a comparison function.","sig":null,"attributes":[{"value":"/ An iterator adaptor that removes repeated duplicates, determining equality using a comparison function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110202,"byte_end":110309,"line_start":701,"line_end":701,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110310,"byte_end":110313,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ See [`.dedup_by()`](../trait.Itertools.html#method.dedup_by) or [`.dedup()`](../trait.Itertools.html#method.dedup) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110314,"byte_end":110454,"line_start":703,"line_end":703,"column_start":1,"column_end":141}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110455,"byte_end":110528,"line_start":704,"line_end":704,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":472},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110643,"byte_end":110657,"line_start":712,"line_end":712,"column_start":11,"column_end":25},"name":"DedupPredicate","qualname":"::adaptors::DedupPredicate","value":"DedupPredicate<T>","parent":null,"children":[{"krate":0,"index":474}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110728,"byte_end":110738,"line_start":713,"line_end":713,"column_start":8,"column_end":18},"name":"dedup_pair","qualname":"::adaptors::DedupPredicate::dedup_pair","value":"pub fn dedup_pair(&mut Self, &T, &T) -> bool","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110804,"byte_end":110811,"line_start":717,"line_end":717,"column_start":12,"column_end":19},"name":"DedupEq","qualname":"::adaptors::DedupEq","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":482},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111231,"byte_end":111236,"line_start":734,"line_end":734,"column_start":10,"column_end":15},"name":"Dedup","qualname":"::adaptors::Dedup","value":"DedupBy<I, DedupEq>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates.","sig":null,"attributes":[{"value":"/ An iterator adaptor that removes repeated duplicates.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111079,"byte_end":111136,"line_start":731,"line_end":731,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111137,"byte_end":111140,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ See [`.dedup()`](../trait.Itertools.html#method.dedup) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111141,"byte_end":111221,"line_start":733,"line_end":733,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113255,"byte_end":113267,"line_start":811,"line_end":811,"column_start":12,"column_end":24},"name":"TakeWhileRef","qualname":"::adaptors::TakeWhileRef","value":"TakeWhileRef {  }","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"decl_id":null,"docs":" An iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate returns `true`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":112935,"byte_end":113000,"line_start":806,"line_end":806,"column_start":1,"column_end":66}},{"value":"/ to only pick off elements while the predicate returns `true`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113001,"byte_end":113066,"line_start":807,"line_end":807,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113067,"byte_end":113070,"line_start":808,"line_end":808,"column_start":1,"column_end":4}},{"value":"/ See [`.take_while_ref()`](../trait.Itertools.html#method.take_while_ref) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113071,"byte_end":113169,"line_start":809,"line_end":809,"column_start":1,"column_end":99}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113170,"byte_end":113243,"line_start":810,"line_end":810,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114631,"byte_end":114640,"line_start":862,"line_end":862,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::adaptors::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":2079}],"decl_id":null,"docs":" An iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ An iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114299,"byte_end":114365,"line_start":856,"line_end":856,"column_start":1,"column_end":67}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114366,"byte_end":114426,"line_start":857,"line_end":857,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114427,"byte_end":114430,"line_start":858,"line_end":858,"column_start":1,"column_end":4}},{"value":"/ See [`.while_some()`](../trait.Itertools.html#method.while_some) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114431,"byte_end":114521,"line_start":859,"line_end":859,"column_start":1,"column_end":91}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114546,"byte_end":114619,"line_start":861,"line_end":861,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115492,"byte_end":115509,"line_start":896,"line_end":896,"column_start":12,"column_end":29},"name":"TupleCombinations","qualname":"::adaptors::TupleCombinations","value":"TupleCombinations {  }","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091}],"decl_id":null,"docs":" An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\n of a specific size.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115144,"byte_end":115243,"line_start":889,"line_end":889,"column_start":1,"column_end":100}},{"value":"/ of a specific size.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115244,"byte_end":115267,"line_start":890,"line_end":890,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115268,"byte_end":115271,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ See [`.tuple_combinations()`](../trait.Itertools.html#method.tuple_combinations) for more","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115272,"byte_end":115365,"line_start":892,"line_end":892,"column_start":1,"column_end":94}},{"value":"/ information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115366,"byte_end":115382,"line_start":893,"line_end":893,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115407,"byte_end":115480,"line_start":895,"line_end":895,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":534},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115660,"byte_end":115674,"line_start":905,"line_end":905,"column_start":11,"column_end":25},"name":"HasCombination","qualname":"::adaptors::HasCombination","value":"HasCombination<I>: Sized","parent":null,"children":[{"krate":0,"index":536}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":536},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115696,"byte_end":115707,"line_start":906,"line_end":906,"column_start":10,"column_end":21},"name":"Combination","qualname":"::adaptors::HasCombination::Combination","value":"type Combination: From<I> + Iterator<Item = Self>;","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116335,"byte_end":116352,"line_start":934,"line_end":934,"column_start":12,"column_end":29},"name":"Tuple1Combination","qualname":"::adaptors::Tuple1Combination","value":"Tuple1Combination {  }","parent":null,"children":[{"krate":0,"index":2102}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118574,"byte_end":118591,"line_start":1015,"line_end":1015,"column_start":25,"column_end":42},"name":"Tuple2Combination","qualname":"::adaptors::Tuple2Combination","value":"Tuple2Combination {  }","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118650,"byte_end":118667,"line_start":1016,"line_end":1016,"column_start":25,"column_end":42},"name":"Tuple3Combination","qualname":"::adaptors::Tuple3Combination","value":"Tuple3Combination {  }","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118731,"byte_end":118748,"line_start":1017,"line_end":1017,"column_start":25,"column_end":42},"name":"Tuple4Combination","qualname":"::adaptors::Tuple4Combination","value":"Tuple4Combination {  }","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2193},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119054,"byte_end":119061,"line_start":1024,"line_end":1024,"column_start":12,"column_end":19},"name":"MapInto","qualname":"::adaptors::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2197}],"decl_id":null,"docs":" An iterator adapter to apply `Into` conversion to each element.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply `Into` conversion to each element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118793,"byte_end":118860,"line_start":1019,"line_end":1019,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118861,"byte_end":118864,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ See [`.map_into()`](../trait.Itertools.html#method.map_into) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118865,"byte_end":118951,"line_start":1021,"line_end":1021,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118969,"byte_end":119042,"line_start":1023,"line_end":1023,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2202},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120433,"byte_end":120443,"line_start":1082,"line_end":1082,"column_start":12,"column_end":22},"name":"MapResults","qualname":"::adaptors::MapResults","value":"MapResults {  }","parent":null,"children":[{"krate":0,"index":2205},{"krate":0,"index":2206}],"decl_id":null,"docs":" An iterator adapter to apply a transformation within a nested `Result`.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply a transformation within a nested `Result`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120158,"byte_end":120233,"line_start":1077,"line_end":1077,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120234,"byte_end":120237,"line_start":1078,"line_end":1078,"column_start":1,"column_end":4}},{"value":"/ See [`.map_results()`](../trait.Itertools.html#method.map_results) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120238,"byte_end":120330,"line_start":1079,"line_end":1079,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120348,"byte_end":120421,"line_start":1081,"line_end":1081,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":121742,"byte_end":121751,"line_start":1132,"line_end":1132,"column_start":12,"column_end":21},"name":"Positions","qualname":"::adaptors::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216}],"decl_id":null,"docs":" An iterator adapter to get the positions of each element that matches a predicate.","sig":null,"attributes":[{"value":"/ An iterator adapter to get the positions of each element that matches a predicate.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":121460,"byte_end":121546,"line_start":1127,"line_end":1127,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":121547,"byte_end":121550,"line_start":1128,"line_end":1128,"column_start":1,"column_end":4}},{"value":"/ See [`.positions()`](../trait.Itertools.html#method.positions) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":121551,"byte_end":121639,"line_start":1129,"line_end":1129,"column_start":1,"column_end":89}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":121657,"byte_end":121730,"line_start":1131,"line_end":1131,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":123175,"byte_end":123181,"line_start":1191,"line_end":1191,"column_start":12,"column_end":18},"name":"Update","qualname":"::adaptors::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2225}],"decl_id":null,"docs":" An iterator adapter to apply a mutating function to each element before yielding it.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply a mutating function to each element before yielding it.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122897,"byte_end":122985,"line_start":1186,"line_end":1186,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122986,"byte_end":122989,"line_start":1187,"line_end":1187,"column_start":1,"column_end":4}},{"value":"/ See [`.update()`](../trait.Itertools.html#method.update) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122990,"byte_end":123072,"line_start":1188,"line_end":1188,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":123090,"byte_end":123163,"line_start":1190,"line_end":1190,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131133,"byte_end":131137,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Both","qualname":"::either_or_both::EitherOrBoth::Both","value":"EitherOrBoth::Both(A, B)","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Both values are present.\n","sig":null,"attributes":[{"value":"/ Both values are present.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131100,"byte_end":131128,"line_start":8,"line_end":8,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131201,"byte_end":131205,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::either_or_both::EitherOrBoth::Left","value":"EitherOrBoth::Left(A)","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Only the left value of type `A` is present.\n","sig":null,"attributes":[{"value":"/ Only the left value of type `A` is present.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131149,"byte_end":131196,"line_start":10,"line_end":10,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131267,"byte_end":131272,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::either_or_both::EitherOrBoth::Right","value":"EitherOrBoth::Right(B)","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Only the right value of type `B` is present.\n","sig":null,"attributes":[{"value":"/ Only the right value of type `B` is present.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131214,"byte_end":131262,"line_start":12,"line_end":12,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131075,"byte_end":131087,"line_start":7,"line_end":7,"column_start":10,"column_end":22},"name":"EitherOrBoth","qualname":"::either_or_both::EitherOrBoth","value":"pub enum EitherOrBoth<A, B> { Both(A, B), Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2237},{"krate":0,"index":2240}],"decl_id":null,"docs":" Value that either holds a single A or B, or both.\n","sig":null,"attributes":[{"value":"/ Value that either holds a single A or B, or both.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":130967,"byte_end":131020,"line_start":5,"line_end":5,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131391,"byte_end":131399,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"has_left","qualname":"<EitherOrBoth<A, B>>::has_left","value":"pub fn has_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[{"value":"/ If `Left`, or `Both`, return true, otherwise, return false.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131316,"byte_end":131379,"line_start":17,"line_end":17,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131543,"byte_end":131552,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"has_right","qualname":"<EitherOrBoth<A, B>>::has_right","value":"pub fn has_right(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[{"value":"/ If `Right`, or `Both`, return true, otherwise, return false.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131467,"byte_end":131531,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131725,"byte_end":131732,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"is_left","qualname":"<EitherOrBoth<A, B>>::is_left","value":"pub fn is_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Left, return true otherwise, return false.\n Exclusive version of [`has_left`].\n","sig":null,"attributes":[{"value":"/ If Left, return true otherwise, return false.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131621,"byte_end":131670,"line_start":27,"line_end":27,"column_start":5,"column_end":54}},{"value":"/ Exclusive version of [`has_left`].","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131675,"byte_end":131713,"line_start":28,"line_end":28,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131952,"byte_end":131960,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"is_right","qualname":"<EitherOrBoth<A, B>>::is_right","value":"pub fn is_right(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Right, return true otherwise, return false.\n Exclusive version of [`has_right`].\n","sig":null,"attributes":[{"value":"/ If Right, return true otherwise, return false.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131846,"byte_end":131896,"line_start":36,"line_end":36,"column_start":5,"column_end":55}},{"value":"/ Exclusive version of [`has_right`].","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131901,"byte_end":131940,"line_start":37,"line_end":37,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132193,"byte_end":132200,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"is_both","qualname":"<EitherOrBoth<A, B>>::is_both","value":"pub fn is_both(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Right, return true otherwise, return false.\n Equivalent to `self.as_ref().both().is_some()`.\n","sig":null,"attributes":[{"value":"/ If Right, return true otherwise, return false.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132075,"byte_end":132125,"line_start":45,"line_end":45,"column_start":5,"column_end":55}},{"value":"/ Equivalent to `self.as_ref().both().is_some()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132130,"byte_end":132181,"line_start":46,"line_end":46,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132366,"byte_end":132370,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"left","qualname":"<EitherOrBoth<A, B>>::left","value":"pub fn left(Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132268,"byte_end":132354,"line_start":51,"line_end":51,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132611,"byte_end":132616,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"right","qualname":"<EitherOrBoth<A, B>>::right","value":"pub fn right(Self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132511,"byte_end":132599,"line_start":59,"line_end":59,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132832,"byte_end":132836,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"both","qualname":"<EitherOrBoth<A, B>>::both","value":"pub fn both(Self) -> Option<(A, B)>","parent":null,"children":[],"decl_id":null,"docs":" If Both, return `Some` tuple containing left and right.\n","sig":null,"attributes":[{"value":"/ If Both, return `Some` tuple containing left and right.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132761,"byte_end":132820,"line_start":67,"line_end":67,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133046,"byte_end":133052,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<EitherOrBoth<A, B>>::as_ref","value":"pub fn as_ref(&Self) -> EitherOrBoth<&A, &B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.\n","sig":null,"attributes":[{"value":"/ Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132968,"byte_end":133034,"line_start":75,"line_end":75,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133367,"byte_end":133373,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<EitherOrBoth<A, B>>::as_mut","value":"pub fn as_mut(&mut Self) -> EitherOrBoth<&mut A, &mut B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.\n","sig":null,"attributes":[{"value":"/ Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133277,"byte_end":133355,"line_start":84,"line_end":84,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133695,"byte_end":133699,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"flip","qualname":"<EitherOrBoth<A, B>>::flip","value":"pub fn flip(Self) -> EitherOrBoth<B, A>","parent":null,"children":[],"decl_id":null,"docs":" Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.\n","sig":null,"attributes":[{"value":"/ Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133626,"byte_end":133683,"line_start":93,"line_end":93,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134047,"byte_end":134055,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"map_left","qualname":"<EitherOrBoth<A, B>>::map_left","value":"pub fn map_left<F, M>(Self, F) -> EitherOrBoth<M, B> where F: FnOnce(A) -> M","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `a` in `Left(a)` or `Both(a, b)` variants. If it is\n present rewrapping the result in `self`'s original variant.\n","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value `a` in `Left(a)` or `Both(a, b)` variants. If it is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133876,"byte_end":133967,"line_start":102,"line_end":102,"column_start":5,"column_end":96}},{"value":"/ present rewrapping the result in `self`'s original variant.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133972,"byte_end":134035,"line_start":103,"line_end":103,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134463,"byte_end":134472,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"map_right","qualname":"<EitherOrBoth<A, B>>::map_right","value":"pub fn map_right<F, M>(Self, F) -> EitherOrBoth<A, M> where F: FnOnce(B) -> M","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `b` in `Right(b)` or `Both(a, b)` variants.\n If it is present rewrapping the result in `self`'s original variant.\n","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value `b` in `Right(b)` or `Both(a, b)` variants.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134291,"byte_end":134374,"line_start":115,"line_end":115,"column_start":5,"column_end":88}},{"value":"/ If it is present rewrapping the result in `self`'s original variant.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134379,"byte_end":134451,"line_start":116,"line_end":116,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134919,"byte_end":134926,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"map_any","qualname":"<EitherOrBoth<A, B>>::map_any","value":"pub fn map_any<F, L, G, R>(Self, F, G) -> EitherOrBoth<L, R> where\nF: FnOnce(A) -> L, G: FnOnce(B) -> R","parent":null,"children":[],"decl_id":null,"docs":" Apply the functions `f` and `g` on the value `a` and `b` respectively;\n found in `Left(a)`, `Right(b)`, or `Both(a, b)` variants.\n The Result is rewrapped `self`'s original variant.\n","sig":null,"attributes":[{"value":"/ Apply the functions `f` and `g` on the value `a` and `b` respectively;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134708,"byte_end":134782,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ found in `Left(a)`, `Right(b)`, or `Both(a, b)` variants.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134787,"byte_end":134848,"line_start":129,"line_end":129,"column_start":5,"column_end":66}},{"value":"/ The Result is rewrapped `self`'s original variant.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134853,"byte_end":134907,"line_start":130,"line_end":130,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135327,"byte_end":135340,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"left_and_then","qualname":"<EitherOrBoth<A, B>>::left_and_then","value":"pub fn left_and_then<F, L>(Self, F) -> EitherOrBoth<L, B> where F: FnOnce(A)\n-> EitherOrBoth<L, B>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `b` in `Right(b)` or `Both(a, _)` variants if it is\n present.\n","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value `b` in `Right(b)` or `Both(a, _)` variants if it is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135207,"byte_end":135298,"line_start":143,"line_end":143,"column_start":5,"column_end":96}},{"value":"/ present.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135303,"byte_end":135315,"line_start":144,"line_end":144,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135678,"byte_end":135692,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"right_and_then","qualname":"<EitherOrBoth<A, B>>::right_and_then","value":"pub fn right_and_then<F, R>(Self, F) -> EitherOrBoth<A, R> where F: FnOnce(B)\n-> EitherOrBoth<A, R>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `a`\n in `Left(a)` or `Both(a, _)` variants if it is present.\n","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value `a`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135559,"byte_end":135602,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/ in `Left(a)` or `Both(a, _)` variants if it is present.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135607,"byte_end":135666,"line_start":156,"line_end":156,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":136048,"byte_end":136054,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"reduce","qualname":"<EitherOrBoth<T, T>>::reduce","value":"pub fn reduce<F>(Self, F) -> T where F: FnOnce(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return either value of left, right, or the product of `f` applied where `Both` are present.\n","sig":null,"attributes":[{"value":"/ Return either value of left, right, or the product of `f` applied where `Both` are present.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135941,"byte_end":136036,"line_start":169,"line_end":169,"column_start":5,"column_end":100}}]},{"kind":"Mod","id":{"krate":0,"index":685},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"free","qualname":"::free","value":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759}],"decl_id":null,"docs":" Free functions that create iterator adaptors or call iterator methods.","sig":null,"attributes":[{"value":"/ Free functions that create iterator adaptors or call iterator methods.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":136541,"byte_end":136615,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":136616,"byte_end":136619,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The benefit of free functions is that they accept any `IntoIterator` as","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":136620,"byte_end":136695,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ argument, so the resulting code may be easier to read.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":136696,"byte_end":136754,"line_start":4,"line_end":4,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":729},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137620,"byte_end":137629,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::free::enumerate","value":"pub fn enumerate<I>(I) -> iter::Enumerate<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` with a running index.","sig":null,"attributes":[{"value":"/ Iterate `iterable` with a running index.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137382,"byte_end":137426,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137427,"byte_end":137430,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.enumerate()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137431,"byte_end":137484,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137485,"byte_end":137488,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137489,"byte_end":137496,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use itertools::enumerate;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137497,"byte_end":137526,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137527,"byte_end":137530,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for (i, elt) in enumerate(&[1, 2, 3]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137531,"byte_end":137574,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/     /* loop body */","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137575,"byte_end":137598,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137599,"byte_end":137604,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137605,"byte_end":137612,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":731},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137951,"byte_end":137954,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"rev","qualname":"::free::rev","value":"pub fn rev<I>(I) -> iter::Rev<I::IntoIter> where I: IntoIterator,\nI::IntoIter: DoubleEndedIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` in reverse.","sig":null,"attributes":[{"value":"/ Iterate `iterable` in reverse.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137746,"byte_end":137780,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137781,"byte_end":137784,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.rev()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137785,"byte_end":137832,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137833,"byte_end":137836,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137837,"byte_end":137844,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use itertools::rev;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137845,"byte_end":137868,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137869,"byte_end":137872,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ for elt in rev(&[1, 2, 3]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137873,"byte_end":137905,"line_start":55,"line_end":55,"column_start":1,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137906,"byte_end":137929,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137930,"byte_end":137935,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137936,"byte_end":137943,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":733},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138355,"byte_end":138358,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"zip","qualname":"::free::zip","value":"pub fn zip<I, J>(I, J) -> Zip<I::IntoIter, J::IntoIter> where I: IntoIterator,\nJ: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138103,"byte_end":138140,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138141,"byte_end":138144,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip(j)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138145,"byte_end":138194,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138195,"byte_end":138198,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138199,"byte_end":138206,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use itertools::zip;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138207,"byte_end":138230,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138231,"byte_end":138234,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138235,"byte_end":138266,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip(&data, &data[1..]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138267,"byte_end":138309,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/     /* loop body */","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138310,"byte_end":138333,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138334,"byte_end":138339,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138340,"byte_end":138347,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":736},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138738,"byte_end":138743,"line_start":96,"line_end":96,"column_start":8,"column_end":13},"name":"chain","qualname":"::free::chain","value":"pub fn chain<I, J>(I, J)\n-> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that first iterates `i` and then `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that first iterates `i` and then `j`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138493,"byte_end":138553,"line_start":85,"line_end":85,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138554,"byte_end":138557,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.chain(j)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138558,"byte_end":138609,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138610,"byte_end":138613,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138614,"byte_end":138621,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ use itertools::chain;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138622,"byte_end":138647,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138648,"byte_end":138651,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ for elt in chain(&[1, 2, 3], &[4]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138652,"byte_end":138692,"line_start":92,"line_end":92,"column_start":1,"column_end":41}},{"value":"/     /* loop body */","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138693,"byte_end":138716,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138717,"byte_end":138722,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138723,"byte_end":138730,"line_start":95,"line_end":95,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":739},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139166,"byte_end":139172,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"cloned","qualname":"::free::cloned","value":"pub fn cloned<'a, I, T: 'a>(I) -> iter::Cloned<I::IntoIter> where\nI: IntoIterator<Item = &'a T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that clones each element from &T to T","sig":null,"attributes":[{"value":"/ Create an iterator that clones each element from &T to T","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138940,"byte_end":139000,"line_start":103,"line_end":103,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139001,"byte_end":139004,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.cloned()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139005,"byte_end":139056,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139057,"byte_end":139060,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139061,"byte_end":139068,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use itertools::cloned;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139069,"byte_end":139095,"line_start":108,"line_end":108,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139096,"byte_end":139099,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(cloned(b\"abc\").next(), Some(b'a'));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139100,"byte_end":139150,"line_start":110,"line_end":110,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139151,"byte_end":139158,"line_start":111,"line_end":111,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":743},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139560,"byte_end":139564,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"fold","qualname":"::free::fold","value":"pub fn fold<I, B, F>(I, B, F) -> B where I: IntoIterator, F: FnMut(B, I::Item)\n-> B","parent":null,"children":[],"decl_id":null,"docs":" Perform a fold operation over the iterable.","sig":null,"attributes":[{"value":"/ Perform a fold operation over the iterable.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139327,"byte_end":139374,"line_start":119,"line_end":119,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139375,"byte_end":139378,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.fold(init, f)`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139379,"byte_end":139434,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139435,"byte_end":139438,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139439,"byte_end":139446,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ use itertools::fold;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139447,"byte_end":139471,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139472,"byte_end":139475,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fold(&[1., 2., 3.], 0., |a, &b| f32::max(a, b)), 3.);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139476,"byte_end":139544,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139545,"byte_end":139552,"line_start":127,"line_end":127,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":747},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139939,"byte_end":139942,"line_start":144,"line_end":144,"column_start":8,"column_end":11},"name":"all","qualname":"::free::all","value":"pub fn all<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for all elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for all elements in the iterable.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139714,"byte_end":139784,"line_start":135,"line_end":135,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139785,"byte_end":139788,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.all(f)`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139789,"byte_end":139837,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139838,"byte_end":139841,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139842,"byte_end":139849,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use itertools::all;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139850,"byte_end":139873,"line_start":140,"line_end":140,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139874,"byte_end":139877,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ assert!(all(&[1, 2, 3], |elt| *elt > 0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139878,"byte_end":139923,"line_start":142,"line_end":142,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139924,"byte_end":139931,"line_start":143,"line_end":143,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":750},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140302,"byte_end":140305,"line_start":160,"line_end":160,"column_start":8,"column_end":11},"name":"any","qualname":"::free::any","value":"pub fn any<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for any elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for any elements in the iterable.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140076,"byte_end":140146,"line_start":151,"line_end":151,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140147,"byte_end":140150,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.any(f)`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140151,"byte_end":140199,"line_start":153,"line_end":153,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140200,"byte_end":140203,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140204,"byte_end":140211,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/ use itertools::any;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140212,"byte_end":140235,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140236,"byte_end":140239,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ assert!(any(&[0, -1, 2], |elt| *elt > 0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140240,"byte_end":140286,"line_start":158,"line_end":158,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140287,"byte_end":140294,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":753},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140630,"byte_end":140633,"line_start":176,"line_end":176,"column_start":8,"column_end":11},"name":"max","qualname":"::free::max","value":"pub fn max<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the maximum value of the iterable.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140439,"byte_end":140484,"line_start":167,"line_end":167,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140485,"byte_end":140488,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.max()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140489,"byte_end":140537,"line_start":169,"line_end":169,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140538,"byte_end":140541,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140542,"byte_end":140549,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/ use itertools::max;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140550,"byte_end":140573,"line_start":172,"line_end":172,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140574,"byte_end":140577,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(max(0..10), Some(9));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140578,"byte_end":140614,"line_start":174,"line_end":174,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140615,"byte_end":140622,"line_start":175,"line_end":175,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":755},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140946,"byte_end":140949,"line_start":192,"line_end":192,"column_start":8,"column_end":11},"name":"min","qualname":"::free::min","value":"pub fn min<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the minimum value of the iterable.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140755,"byte_end":140800,"line_start":183,"line_end":183,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140801,"byte_end":140804,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.min()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140805,"byte_end":140853,"line_start":185,"line_end":185,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140854,"byte_end":140857,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140858,"byte_end":140865,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ use itertools::min;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140866,"byte_end":140889,"line_start":188,"line_end":188,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140890,"byte_end":140893,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(min(0..10), Some(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140894,"byte_end":140930,"line_start":190,"line_end":190,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140931,"byte_end":140938,"line_start":191,"line_end":191,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":757},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141342,"byte_end":141346,"line_start":210,"line_end":210,"column_start":8,"column_end":12},"name":"join","qualname":"::free::join","value":"pub fn join<I>(I, &str) -> String where I: IntoIterator, I::Item: Display","parent":null,"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, seperated by `sep`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141072,"byte_end":141142,"line_start":200,"line_end":200,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141143,"byte_end":141146,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `iterable.join(sep)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141147,"byte_end":141206,"line_start":202,"line_end":202,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141207,"byte_end":141210,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141211,"byte_end":141218,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/ use itertools::join;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141219,"byte_end":141243,"line_start":205,"line_end":205,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141244,"byte_end":141247,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join(&[1, 2, 3], \", \"), \"1, 2, 3\");","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141248,"byte_end":141298,"line_start":207,"line_end":207,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141299,"byte_end":141306,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141307,"byte_end":141334,"line_start":209,"line_end":209,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":759},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141842,"byte_end":141848,"line_start":230,"line_end":230,"column_start":8,"column_end":14},"name":"sorted","qualname":"::free::sorted","value":"pub fn sorted<I>(I) -> VecIntoIter<I::Item> where I: IntoIterator,\nI::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141478,"byte_end":141548,"line_start":217,"line_end":217,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141549,"byte_end":141552,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of [`iterable.sorted()`][1].","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141553,"byte_end":141616,"line_start":219,"line_end":219,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141617,"byte_end":141620,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ [1]: trait.Itertools.html#method.sorted","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141621,"byte_end":141664,"line_start":221,"line_end":221,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141665,"byte_end":141668,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141669,"byte_end":141676,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ use itertools::sorted;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141677,"byte_end":141703,"line_start":224,"line_end":224,"column_start":1,"column_end":27}},{"value":"/ use itertools::assert_equal;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141704,"byte_end":141736,"line_start":225,"line_end":225,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141737,"byte_end":141740,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ assert_equal(sorted(\"rust\".chars()), \"rstu\".chars());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141741,"byte_end":141798,"line_start":227,"line_end":227,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141799,"byte_end":141806,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141807,"byte_end":141834,"line_start":229,"line_end":229,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":766},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142488,"byte_end":142494,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"concat","qualname":"::concat_impl::concat","value":"pub fn concat<I>(I) -> I::Item where I: IntoIterator,\nI::Item: Extend<<<I as IntoIterator>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":null,"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[{"value":"/ Combine all an iterator's elements into one element by using `Extend`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142002,"byte_end":142076,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142077,"byte_end":142080,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator`-enabled version of `.concat()`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142081,"byte_end":142130,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142131,"byte_end":142134,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This combinator will extend the first item with each of the rest of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142135,"byte_end":142210,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ items of the iterator. If the iterator is empty, the default value of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142211,"byte_end":142284,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ `I::Item` is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142285,"byte_end":142311,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142312,"byte_end":142315,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142316,"byte_end":142327,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ use itertools::concat;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142328,"byte_end":142354,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142355,"byte_end":142359,"line_start":13,"line_end":13,"column_start":1,"column_end":5}},{"value":"/ let input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142360,"byte_end":142417,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(concat(input), vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142418,"byte_end":142472,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142473,"byte_end":142480,"line_start":16,"line_end":16,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144270,"byte_end":144280,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"ConsTuples","qualname":"::cons_tuples_impl::ConsTuples","value":"ConsTuples {  }","parent":null,"children":[{"krate":0,"index":2424}],"decl_id":null,"docs":" An iterator that maps an iterator of tuples like\n `((A, B), C)` to an iterator of `(A, B, C)`.","sig":null,"attributes":[{"value":"/ An iterator that maps an iterator of tuples like","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144025,"byte_end":144077,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ `((A, B), C)` to an iterator of `(A, B, C)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144078,"byte_end":144126,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144127,"byte_end":144130,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Used by the `iproduct!()` macro.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144131,"byte_end":144167,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144168,"byte_end":144241,"line_start":44,"line_end":44,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":775},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144542,"byte_end":144553,"line_start":60,"line_end":60,"column_start":8,"column_end":19},"name":"cons_tuples","qualname":"::cons_tuples_impl::cons_tuples","value":"pub fn cons_tuples<I, J>(I) -> ConsTuples<I, J> where I: Iterator<Item = J>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that maps for example iterators of\n `((A, B), C)` to `(A, B, C)`.\n","sig":null,"attributes":[{"value":"/ Create an iterator that maps for example iterators of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144443,"byte_end":144500,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"/ `((A, B), C)` to `(A, B, C)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144501,"byte_end":144534,"line_start":59,"line_end":59,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":785},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":144993,"byte_end":145005,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"Combinations","qualname":"::combinations::Combinations","value":"Combinations {  }","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"decl_id":null,"docs":" An iterator to iterate through all the `k`-length combinations in an iterator.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all the `k`-length combinations in an iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":144726,"byte_end":144808,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":144809,"byte_end":144812,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.combinations()`](../trait.Itertools.html#method.combinations) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":144813,"byte_end":144907,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":144908,"byte_end":144981,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147450,"byte_end":147477,"line_start":9,"line_end":9,"column_start":12,"column_end":39},"name":"CombinationsWithReplacement","qualname":"::combinations_with_replacement::CombinationsWithReplacement","value":"CombinationsWithReplacement {  }","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438}],"decl_id":null,"docs":" An iterator to iterate through all the `n`-length combinations in an iterator, with replacement.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all the `n`-length combinations in an iterator, with replacement.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147188,"byte_end":147288,"line_start":5,"line_end":5,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147289,"byte_end":147292,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.combinations_with_replacement()`](../trait.Itertools.html#method.combinations_with_replacement) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147293,"byte_end":147421,"line_start":7,"line_end":7,"column_start":1,"column_end":129}}]},{"kind":"Struct","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150807,"byte_end":150822,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"ExactlyOneError","qualname":"::exactly_one_err::ExactlyOneError","value":"ExactlyOneError {  }","parent":null,"children":[{"krate":0,"index":2445},{"krate":0,"index":2446}],"decl_id":null,"docs":" Iterator returned for the error case of `IterTools::exactly_one()`\n This iterator yields exactly the same elements as the input iterator.","sig":null,"attributes":[{"value":"/ Iterator returned for the error case of `IterTools::exactly_one()`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150338,"byte_end":150408,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ This iterator yields exactly the same elements as the input iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150409,"byte_end":150482,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150483,"byte_end":150486,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ During the execution of exactly_one the iterator must be mutated.  This wrapper","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150487,"byte_end":150570,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ effectively \"restores\" the state of the input iterator when it's handed back.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150571,"byte_end":150652,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150653,"byte_end":150656,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is very similar to PutBackN except this iterator only supports 0-2 elements and does not","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150657,"byte_end":150754,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ use a `Vec`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150755,"byte_end":150771,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":849},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152684,"byte_end":152697,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"FirstMismatch","qualname":"::diff::Diff::FirstMismatch","value":"Diff::FirstMismatch(usize, PutBack<I>, PutBack<J>)","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" The index of the first non-matching element along with both iterator's remaining elements\n starting with the first mis-match.\n","sig":null,"attributes":[{"value":"/ The index of the first non-matching element along with both iterator's remaining elements","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152543,"byte_end":152636,"line_start":19,"line_end":19,"column_start":5,"column_end":98}},{"value":"/ starting with the first mis-match.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152641,"byte_end":152679,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":854},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152830,"byte_end":152837,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Shorter","qualname":"::diff::Diff::Shorter","value":"Diff::Shorter(usize, PutBack<I>)","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" The total number of elements that were in `J` along with the remaining elements of `I`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `J` along with the remaining elements of `I`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152734,"byte_end":152825,"line_start":22,"line_end":22,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":858},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152958,"byte_end":152964,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Longer","qualname":"::diff::Diff::Longer","value":"Diff::Longer(usize, PutBack<J>)","parent":{"krate":0,"index":846},"children":[],"decl_id":null,"docs":" The total number of elements that were in `I` along with the remaining elements of `J`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `I` along with the remaining elements of `J`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152862,"byte_end":152953,"line_start":24,"line_end":24,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":846},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152481,"byte_end":152485,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Diff","qualname":"::diff::Diff","value":"pub enum Diff<I, J> where I: Iterator, J: Iterator {\n    FirstMismatch(usize, PutBack<I>, PutBack<J>),\n    Shorter(usize, PutBack<I>),\n    Longer(usize, PutBack<J>),\n}","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":854},{"krate":0,"index":858}],"decl_id":null,"docs":" A type returned by the [`diff_with`](./fn.diff_with.html) function.","sig":null,"attributes":[{"value":"/ A type returned by the [`diff_with`](./fn.diff_with.html) function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152283,"byte_end":152354,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152355,"byte_end":152358,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Diff` represents the way in which the elements yielded by the iterator `I` differ to some","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152359,"byte_end":152453,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ iterator `J`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152454,"byte_end":152471,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153713,"byte_end":153722,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"diff_with","qualname":"::diff::diff_with","value":"pub fn diff_with<I, J, F>(I, J, F) -> Option<Diff<I::IntoIter, J::IntoIter>>\nwhere I: IntoIterator, J: IntoIterator, F: Fn(&I::Item, &J::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares every element yielded by both `i` and `j` with the given function in lock-step and\n returns a `Diff` which describes how `j` differs from `i`.","sig":null,"attributes":[{"value":"/ Compares every element yielded by both `i` and `j` with the given function in lock-step and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152988,"byte_end":153083,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ returns a `Diff` which describes how `j` differs from `i`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153084,"byte_end":153146,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153147,"byte_end":153150,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the number of elements yielded by `j` is less than the number of elements yielded by `i`,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153151,"byte_end":153247,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ the number of `j` elements yielded will be returned along with `i`'s remaining elements as","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153248,"byte_end":153342,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/ `Diff::Shorter`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153343,"byte_end":153363,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153364,"byte_end":153367,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If the two elements of a step differ, the index of those elements along with the remaining","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153368,"byte_end":153462,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ elements of both `i` and `j` are returned as `Diff::FirstMismatch`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153463,"byte_end":153534,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153535,"byte_end":153538,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `i` becomes exhausted before `j` becomes exhausted, the number of elements in `i` along with","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153539,"byte_end":153638,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ the remaining `j` elements will be returned as `Diff::Longer`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153639,"byte_end":153705,"line_start":39,"line_end":39,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":154859,"byte_end":154869,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"FormatWith","qualname":"::format::FormatWith","value":"FormatWith {  }","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":154578,"byte_end":154638,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":154639,"byte_end":154642,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":154643,"byte_end":154718,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":154719,"byte_end":154733,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":154734,"byte_end":154737,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.format_with()`](../trait.Itertools.html#method.format_with) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":154738,"byte_end":154830,"line_start":9,"line_end":9,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155292,"byte_end":155298,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Format","qualname":"::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":2467},{"krate":0,"index":2468}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155017,"byte_end":155077,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155078,"byte_end":155081,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155082,"byte_end":155157,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155158,"byte_end":155172,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155173,"byte_end":155176,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See [`.format()`](../trait.Itertools.html#method.format)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155177,"byte_end":155237,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/ for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155238,"byte_end":155263,"line_start":23,"line_end":23,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":921},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158570,"byte_end":158573,"line_start":6,"line_end":6,"column_start":10,"column_end":13},"name":"Key","qualname":"::groupbylazy::KeyFunction::Key","value":"type Key;","parent":{"krate":0,"index":919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":971},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":168033,"byte_end":168040,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"GroupBy","qualname":"::groupbylazy::GroupBy","value":"GroupBy {  }","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"decl_id":null,"docs":" `GroupBy` is the storage for the lazy grouping operation.","sig":null,"attributes":[{"value":"/ `GroupBy` is the storage for the lazy grouping operation.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167332,"byte_end":167393,"line_start":275,"line_end":275,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167394,"byte_end":167397,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ If the groups are consumed in their original order, or if each","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167398,"byte_end":167464,"line_start":277,"line_end":277,"column_start":1,"column_end":67}},{"value":"/ group is dropped without keeping it around, then `GroupBy` uses","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167465,"byte_end":167532,"line_start":278,"line_end":278,"column_start":1,"column_end":68}},{"value":"/ no allocations. It needs allocations only if several group iterators","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167533,"byte_end":167605,"line_start":279,"line_end":279,"column_start":1,"column_end":73}},{"value":"/ are alive at the same time.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167606,"byte_end":167637,"line_start":280,"line_end":280,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167638,"byte_end":167641,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167642,"byte_end":167708,"line_start":282,"line_end":282,"column_start":1,"column_end":67}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167709,"byte_end":167774,"line_start":283,"line_end":283,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167775,"byte_end":167842,"line_start":284,"line_end":284,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167843,"byte_end":167856,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167857,"byte_end":167860,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by()`](../trait.Itertools.html#method.group_by) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167861,"byte_end":167947,"line_start":287,"line_end":287,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167948,"byte_end":168021,"line_start":288,"line_end":288,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":995},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169907,"byte_end":169913,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"Groups","qualname":"::groupbylazy::Groups","value":"Groups {  }","parent":null,"children":[{"krate":0,"index":1000}],"decl_id":null,"docs":" An iterator that yields the Group iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Group iterators.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169585,"byte_end":169633,"line_start":352,"line_end":352,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169634,"byte_end":169637,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(K, Group)`:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169638,"byte_end":169680,"line_start":354,"line_end":354,"column_start":1,"column_end":43}},{"value":"/ the group's key `K` and the group's iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169681,"byte_end":169730,"line_start":355,"line_end":355,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169731,"byte_end":169734,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by()`](../trait.Itertools.html#method.group_by) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169735,"byte_end":169821,"line_start":357,"line_end":357,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169822,"byte_end":169895,"line_start":358,"line_end":358,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170774,"byte_end":170779,"line_start":393,"line_end":393,"column_start":12,"column_end":17},"name":"Group","qualname":"::groupbylazy::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"decl_id":null,"docs":" An iterator for the elements in a single group.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single group.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170667,"byte_end":170718,"line_start":390,"line_end":390,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170719,"byte_end":170722,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170723,"byte_end":170762,"line_start":392,"line_end":392,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172714,"byte_end":172724,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"IntoChunks","qualname":"::groupbylazy::IntoChunks","value":"IntoChunks {  }","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"decl_id":null,"docs":" `ChunkLazy` is the storage for a lazy chunking operation.","sig":null,"attributes":[{"value":"/ `ChunkLazy` is the storage for a lazy chunking operation.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172051,"byte_end":172112,"line_start":451,"line_end":451,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172113,"byte_end":172116,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ `IntoChunks` behaves just like `GroupBy`: it is iterable, and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172117,"byte_end":172182,"line_start":453,"line_end":453,"column_start":1,"column_end":66}},{"value":"/ it only buffers if several chunk iterators are alive at the same time.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172183,"byte_end":172257,"line_start":454,"line_end":454,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172258,"byte_end":172261,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172262,"byte_end":172328,"line_start":456,"line_end":456,"column_start":1,"column_end":67}},{"value":"/ itself), because the chunk iterators need to borrow from this","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172329,"byte_end":172394,"line_start":457,"line_end":457,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172395,"byte_end":172462,"line_start":458,"line_end":458,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172463,"byte_end":172476,"line_start":459,"line_end":459,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172477,"byte_end":172480,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172481,"byte_end":172541,"line_start":461,"line_end":461,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172542,"byte_end":172545,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks()`](../trait.Itertools.html#method.chunks) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172546,"byte_end":172628,"line_start":463,"line_end":463,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172629,"byte_end":172702,"line_start":464,"line_end":464,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173847,"byte_end":173853,"line_start":510,"line_end":510,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::groupbylazy::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":1049}],"decl_id":null,"docs":" An iterator that yields the Chunk iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Chunk iterators.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173584,"byte_end":173632,"line_start":504,"line_end":504,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173633,"byte_end":173636,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173637,"byte_end":173674,"line_start":506,"line_end":506,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173675,"byte_end":173678,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks()`](../trait.Itertools.html#method.chunks) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173679,"byte_end":173761,"line_start":508,"line_end":508,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173762,"byte_end":173835,"line_start":509,"line_end":509,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174564,"byte_end":174569,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"Chunk","qualname":"::groupbylazy::Chunk","value":"Chunk {  }","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"decl_id":null,"docs":" An iterator for the elements in a single chunk.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single chunk.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174457,"byte_end":174508,"line_start":538,"line_end":538,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174509,"byte_end":174512,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174513,"byte_end":174552,"line_start":540,"line_end":540,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175613,"byte_end":175624,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522}],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175234,"byte_end":175286,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175287,"byte_end":175336,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175337,"byte_end":175340,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175341,"byte_end":175379,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175380,"byte_end":175383,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175384,"byte_end":175413,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175414,"byte_end":175417,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`.intersperse()`](../trait.Itertools.html#method.intersperse) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175418,"byte_end":175510,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175511,"byte_end":175584,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180048,"byte_end":180054,"line_start":102,"line_end":102,"column_start":10,"column_end":16},"name":"KMerge","qualname":"::kmerge_impl::KMerge","value":"KMergeBy<I, KMergeByLt>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators in ascending order.\n If all base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges an abitrary number of base iterators in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":179669,"byte_end":179761,"line_start":95,"line_end":95,"column_start":1,"column_end":93}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":179762,"byte_end":179833,"line_start":96,"line_end":96,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":179834,"byte_end":179837,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":179838,"byte_end":179877,"line_start":98,"line_end":98,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":179878,"byte_end":179881,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ See [`.kmerge()`](../trait.Itertools.html#method.kmerge) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":179882,"byte_end":179964,"line_start":100,"line_end":100,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":179965,"byte_end":180038,"line_start":101,"line_end":101,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180096,"byte_end":180111,"line_start":104,"line_end":104,"column_start":11,"column_end":26},"name":"KMergePredicate","qualname":"::kmerge_impl::KMergePredicate","value":"KMergePredicate<T>","parent":null,"children":[{"krate":0,"index":1120}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180124,"byte_end":180135,"line_start":105,"line_end":105,"column_start":8,"column_end":19},"name":"kmerge_pred","qualname":"::kmerge_impl::KMergePredicate::kmerge_pred","value":"pub fn kmerge_pred(&mut Self, &T, &T) -> bool","parent":{"krate":0,"index":1118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180201,"byte_end":180211,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"KMergeByLt","qualname":"::kmerge_impl::KMergeByLt","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180807,"byte_end":180813,"line_start":135,"line_end":135,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::kmerge_impl::kmerge","value":"pub fn kmerge<I>(I) -> KMerge<<I::Item as IntoIterator>::IntoIter> where\nI: IntoIterator, I::Item: IntoIterator,\n<<I as IntoIterator>::Item as IntoIterator>::Item: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators using\n the ordering function.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements of the contained iterators using","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180488,"byte_end":180564,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ the ordering function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180565,"byte_end":180591,"line_start":124,"line_end":124,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180592,"byte_end":180595,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `iterable.into_iter().kmerge()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180596,"byte_end":180646,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180647,"byte_end":180650,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180651,"byte_end":180658,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/ use itertools::kmerge;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180659,"byte_end":180685,"line_start":129,"line_end":129,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180686,"byte_end":180689,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ for elt in kmerge(vec![vec![0, 2, 4], vec![1, 3, 5], vec![6, 7]]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180690,"byte_end":180761,"line_start":131,"line_end":131,"column_start":1,"column_end":72}},{"value":"/     /* loop body */","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180762,"byte_end":180785,"line_start":132,"line_end":132,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180786,"byte_end":180791,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180792,"byte_end":180799,"line_start":134,"line_end":134,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181388,"byte_end":181396,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"KMergeBy","qualname":"::kmerge_impl::KMergeBy","value":"KMergeBy {  }","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators\n according to an ordering function.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges an abitrary number of base iterators","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181050,"byte_end":181122,"line_start":143,"line_end":143,"column_start":1,"column_end":73}},{"value":"/ according to an ordering function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181123,"byte_end":181161,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181162,"byte_end":181165,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181166,"byte_end":181205,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181206,"byte_end":181209,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ See [`.kmerge_by()`](../trait.Itertools.html#method.kmerge_by) for more","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181210,"byte_end":181285,"line_start":148,"line_end":148,"column_start":1,"column_end":76}},{"value":"/ information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181286,"byte_end":181302,"line_start":149,"line_end":149,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181303,"byte_end":181376,"line_start":150,"line_end":150,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181775,"byte_end":181784,"line_start":168,"line_end":168,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::kmerge_impl::kmerge_by","value":"pub fn kmerge_by<I, F>(I, F)\n-> KMergeBy<<I::Item as IntoIterator>::IntoIter, F> where I: IntoIterator,\nI::Item: IntoIterator,\nF: KMergePredicate<<<I as IntoIterator>::Item as IntoIterator>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements of the contained iterators.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181629,"byte_end":181700,"line_start":165,"line_end":165,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181701,"byte_end":181704,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `iterable.into_iter().kmerge_by(less_than)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181705,"byte_end":181767,"line_start":167,"line_end":167,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":184697,"byte_end":184710,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::merge_join::merge_join_by","value":"pub fn merge_join_by<I, J, F>(I, J, F)\n-> MergeJoinBy<I::IntoIter, J::IntoIter, F> where I: IntoIterator,\nJ: IntoIterator, F: FnMut(&I::Item, &J::Item) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":184490,"byte_end":184591,"line_start":8,"line_end":8,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":184592,"byte_end":184595,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_join_by()`](trait.Itertools.html#method.merge_join_by) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":184596,"byte_end":184689,"line_start":10,"line_end":10,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185329,"byte_end":185340,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"MergeJoinBy","qualname":"::merge_join::MergeJoinBy","value":"MergeJoinBy {  }","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199}],"decl_id":null,"docs":" An iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merge-joins items from the two base iterators in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185048,"byte_end":185142,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185143,"byte_end":185146,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_join_by()`](../trait.Itertools.html#method.merge_join_by) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185147,"byte_end":185243,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185244,"byte_end":185317,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190370,"byte_end":190380,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"name":"NoElements","qualname":"::minmax::MinMaxResult::NoElements","value":"MinMaxResult::NoElements","parent":{"krate":0,"index":2553},"children":[],"decl_id":null,"docs":" Empty iterator\n","sig":null,"attributes":[{"value":"/ Empty iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190347,"byte_end":190365,"line_start":6,"line_end":6,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2557},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190462,"byte_end":190472,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"OneElement","qualname":"::minmax::MinMaxResult::OneElement","value":"MinMaxResult::OneElement(T)","parent":{"krate":0,"index":2553},"children":[],"decl_id":null,"docs":" Iterator with one element, so the minimum and maximum are the same\n","sig":null,"attributes":[{"value":"/ Iterator with one element, so the minimum and maximum are the same","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190387,"byte_end":190457,"line_start":9,"line_end":9,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2560},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190585,"byte_end":190591,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"MinMax","qualname":"::minmax::MinMaxResult::MinMax","value":"MinMaxResult::MinMax(T, T)","parent":{"krate":0,"index":2553},"children":[],"decl_id":null,"docs":" More than one element in the iterator, the first element is not larger\n than the second\n","sig":null,"attributes":[{"value":"/ More than one element in the iterator, the first element is not larger","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190482,"byte_end":190556,"line_start":12,"line_end":12,"column_start":5,"column_end":79}},{"value":"/ than the second","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190561,"byte_end":190580,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190325,"byte_end":190337,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"MinMaxResult","qualname":"::minmax::MinMaxResult","value":"pub enum MinMaxResult<T> { NoElements, OneElement(T), MinMax(T, T), }","parent":null,"children":[{"krate":0,"index":2555},{"krate":0,"index":2557},{"krate":0,"index":2560}],"decl_id":null,"docs":" `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\n more detail.\n","sig":null,"attributes":[{"value":"/ `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190176,"byte_end":190257,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/ more detail.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190258,"byte_end":190274,"line_start":3,"line_end":3,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191409,"byte_end":191420,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"into_option","qualname":"<MinMaxResult<T>>::into_option","value":"pub fn into_option(Self) -> Option<(T, T)>","parent":null,"children":[],"decl_id":null,"docs":" `into_option` creates an `Option` of type `(T, T)`. The returned `Option`\n has variant `None` if and only if the `MinMaxResult` has variant\n `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.\n If the `MinMaxResult` has variant `OneElement(x)`, performing this\n operation will make one clone of `x`.","sig":null,"attributes":[{"value":"/ `into_option` creates an `Option` of type `(T, T)`. The returned `Option`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190638,"byte_end":190715,"line_start":18,"line_end":18,"column_start":5,"column_end":82}},{"value":"/ has variant `None` if and only if the `MinMaxResult` has variant","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190720,"byte_end":190788,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190793,"byte_end":190863,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ If the `MinMaxResult` has variant `OneElement(x)`, performing this","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190868,"byte_end":190938,"line_start":21,"line_end":21,"column_start":5,"column_end":75}},{"value":"/ operation will make one clone of `x`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190943,"byte_end":190984,"line_start":22,"line_end":22,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190989,"byte_end":190992,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190997,"byte_end":191011,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191016,"byte_end":191019,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191024,"byte_end":191031,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use itertools::MinMaxResult::{self, NoElements, OneElement, MinMax};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191036,"byte_end":191108,"line_start":27,"line_end":27,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191113,"byte_end":191116,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let r: MinMaxResult<i32> = NoElements;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191121,"byte_end":191163,"line_start":29,"line_end":29,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(r.into_option(), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191168,"byte_end":191206,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191211,"byte_end":191214,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let r = OneElement(1);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191219,"byte_end":191245,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(r.into_option(), Some((1, 1)));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191250,"byte_end":191296,"line_start":33,"line_end":33,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191301,"byte_end":191304,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let r = MinMax(1, 2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191309,"byte_end":191334,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(r.into_option(), Some((1, 2)));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191339,"byte_end":191385,"line_start":36,"line_end":36,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191390,"byte_end":191397,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194232,"byte_end":194241,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"MultiPeek","qualname":"::multipeek_impl::MultiPeek","value":"MultiPeek {  }","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582}],"decl_id":null,"docs":" See [`multipeek()`](../fn.multipeek.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`multipeek()`](../fn.multipeek.html) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194129,"byte_end":194196,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194467,"byte_end":194476,"line_start":18,"line_end":18,"column_start":8,"column_end":17},"name":"multipeek","qualname":"::multipeek_impl::multipeek","value":"pub fn multipeek<I>(I) -> MultiPeek<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that allows the user to peek at multiple `.next()`\n values without advancing the base iterator.\n","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows the user to peek at multiple `.next()`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194337,"byte_end":194411,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ values without advancing the base iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194412,"byte_end":194459,"line_start":17,"line_end":17,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194758,"byte_end":194768,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"reset_peek","qualname":"<MultiPeek<I>>::reset_peek","value":"pub fn reset_peek(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the peeking “cursor”\n","sig":null,"attributes":[{"value":"/ Reset the peeking “cursor”","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194712,"byte_end":194746,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195032,"byte_end":195036,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"peek","qualname":"<MultiPeek<I>>::peek","value":"pub fn peek(&mut Self) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Works exactly like `.next()` with the only difference that it doesn't\n advance itself. `.peek()` can be called multiple times, to peek\n further ahead.\n","sig":null,"attributes":[{"value":"/ Works exactly like `.next()` with the only difference that it doesn't","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194852,"byte_end":194925,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ advance itself. `.peek()` can be called multiple times, to peek","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194930,"byte_end":194997,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ further ahead.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195002,"byte_end":195020,"line_start":40,"line_end":40,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196842,"byte_end":196850,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"PadUsing","qualname":"::pad_tail::PadUsing","value":"PadUsing {  }","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595}],"decl_id":null,"docs":" An iterator adaptor that pads a sequence to a minimum length by filling\n missing elements using a closure.","sig":null,"attributes":[{"value":"/ An iterator adaptor that pads a sequence to a minimum length by filling","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196489,"byte_end":196564,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ missing elements using a closure.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196565,"byte_end":196602,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196603,"byte_end":196606,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196607,"byte_end":196646,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196647,"byte_end":196650,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.pad_using()`](../trait.Itertools.html#method.pad_using) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196651,"byte_end":196739,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196757,"byte_end":196830,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199048,"byte_end":199059,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"PeekingNext","qualname":"::peeking_take_while::PeekingNext","value":"PeekingNext: Iterator","parent":null,"children":[{"krate":0,"index":1293}],"decl_id":null,"docs":" An iterator that allows peeking at an element before deciding to accept it.","sig":null,"attributes":[{"value":"/ An iterator that allows peeking at an element before deciding to accept it.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":198642,"byte_end":198721,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":198722,"byte_end":198725,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See [`.peeking_take_while()`](trait.Itertools.html#method.peeking_take_while)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":198726,"byte_end":198807,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":198808,"byte_end":198833,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":198834,"byte_end":198837,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is implemented by peeking adaptors like peekable and put back,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":198838,"byte_end":198909,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ but also by a few iterators that can be peeked natively, like the slice’s","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":198910,"byte_end":198989,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ by reference iterator (`std::slice::Iter`).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":198990,"byte_end":199037,"line_start":13,"line_end":13,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199243,"byte_end":199255,"line_start":18,"line_end":18,"column_start":8,"column_end":20},"name":"peeking_next","qualname":"::peeking_take_while::PeekingNext::peeking_next","value":"pub fn peeking_next<F>(&mut Self, F) -> Option<Self::Item> where\nF: FnOnce(&Self::Item) -> bool","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" Pass a reference to the next iterator element to the closure `accept`;\n if `accept` returns true, return it as the next element,\n else None.\n","sig":null,"attributes":[{"value":"/ Pass a reference to the next iterator element to the closure `accept`;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199077,"byte_end":199151,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ if `accept` returns true, return it as the next element,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199156,"byte_end":199216,"line_start":16,"line_end":16,"column_start":5,"column_end":65}},{"value":"/ else None.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199221,"byte_end":199235,"line_start":17,"line_end":17,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200774,"byte_end":200790,"line_start":79,"line_end":79,"column_start":12,"column_end":28},"name":"PeekingTakeWhile","qualname":"::peeking_take_while::PeekingTakeWhile","value":"PeekingTakeWhile {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" An iterator adaptor that takes items while a closure returns `true`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that takes items while a closure returns `true`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200501,"byte_end":200573,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200574,"byte_end":200577,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ See [`.peeking_take_while()`](../trait.Itertools.html#method.peeking_take_while)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200578,"byte_end":200662,"line_start":76,"line_end":76,"column_start":1,"column_end":85}},{"value":"/ for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200663,"byte_end":200688,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200689,"byte_end":200762,"line_start":78,"line_end":78,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203328,"byte_end":203340,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"Permutations","qualname":"::permutations::Permutations","value":"Permutations {  }","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337}],"decl_id":null,"docs":" An iterator adaptor that iterates through all the `k`-permutations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates through all the `k`-permutations of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203031,"byte_end":203108,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ elements from an iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203109,"byte_end":203139,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203140,"byte_end":203143,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.permutations()`](../trait.Itertools.html#method.permutations) for","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203144,"byte_end":203220,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203221,"byte_end":203242,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203243,"byte_end":203316,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211401,"byte_end":211415,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"ProcessResults","qualname":"::process_results_impl::ProcessResults","value":"ProcessResults {  }","parent":null,"children":[{"krate":0,"index":2677},{"krate":0,"index":2678}],"decl_id":null,"docs":" An iterator that produces only the `T` values as long as the\n inner iterator produces `Ok(T)`.","sig":null,"attributes":[{"value":"/ An iterator that produces only the `T` values as long as the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211093,"byte_end":211157,"line_start":2,"line_end":2,"column_start":1,"column_end":65}},{"value":"/ inner iterator produces `Ok(T)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211158,"byte_end":211194,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211195,"byte_end":211198,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Used by [`process_results`](../fn.process_results.html), see its docs","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211199,"byte_end":211272,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211273,"byte_end":211298,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211299,"byte_end":211372,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":213320,"byte_end":213335,"line_start":71,"line_end":71,"column_start":8,"column_end":23},"name":"process_results","qualname":"::process_results_impl::process_results","value":"pub fn process_results<I, F, T, E, R>(I, F) -> Result<R, E> where\nI: IntoIterator<Item = Result<T, E>>,\nF: FnOnce(ProcessResults<, I::IntoIter, E>) -> R","parent":null,"children":[],"decl_id":null,"docs":" “Lift” a function of the values of an iterator so that it can process\n an iterator of `Result` values instead.","sig":null,"attributes":[{"value":"/ “Lift” a function of the values of an iterator so that it can process","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211987,"byte_end":212064,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ an iterator of `Result` values instead.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212065,"byte_end":212108,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212109,"byte_end":212112,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ `iterable` is an iterator or iterable with `Result<T, E>` elements, where","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212113,"byte_end":212190,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ `T` is the value type and `E` the error type.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212191,"byte_end":212240,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212241,"byte_end":212244,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ `processor` is a closure that receives an adapted version of the iterable","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212245,"byte_end":212322,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ as the only argument — the adapted iterator produces elements of type `T`,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212323,"byte_end":212403,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ as long as the original iterator produces `Ok` values.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212404,"byte_end":212462,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212463,"byte_end":212466,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ If the original iterable produces an error at any point, the adapted","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212467,"byte_end":212539,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ iterator ends and the `process_results` function will return the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212540,"byte_end":212608,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/ error iself.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212609,"byte_end":212625,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212626,"byte_end":212629,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Otherwise, the return value from the closure is returned wrapped","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212630,"byte_end":212698,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"/ inside `Ok`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212699,"byte_end":212715,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212716,"byte_end":212719,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212720,"byte_end":212733,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212734,"byte_end":212737,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212738,"byte_end":212745,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use itertools::process_results;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212746,"byte_end":212781,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212782,"byte_end":212785,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ type R = Result<i32, &'static str>;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212786,"byte_end":212825,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212826,"byte_end":212829,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let first_values: Vec<R> = vec![Ok(1), Ok(0), Ok(3)];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212830,"byte_end":212887,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/ let second_values: Vec<R> = vec![Ok(2), Ok(1), Err(\"overflow\")];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212888,"byte_end":212956,"line_start":61,"line_end":61,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212957,"byte_end":212960,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // “Lift” the iterator .max() method to work on the values in Results using process_results","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":212961,"byte_end":213060,"line_start":63,"line_end":63,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":213061,"byte_end":213064,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ let first_max = process_results(first_values, |iter| iter.max().unwrap_or(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":213065,"byte_end":213147,"line_start":65,"line_end":65,"column_start":1,"column_end":83}},{"value":"/ let second_max = process_results(second_values, |iter| iter.max().unwrap_or(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":213148,"byte_end":213232,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":213233,"byte_end":213236,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(first_max, Ok(3));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":213237,"byte_end":213270,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/ assert!(second_max.is_err());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":213271,"byte_end":213304,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":213305,"byte_end":213312,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":213860,"byte_end":213868,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"PutBackN","qualname":"::put_back_n_impl::PutBackN","value":"PutBackN {  }","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687}],"decl_id":null,"docs":" An iterator adaptor that allows putting multiple\n items in front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting multiple","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":213692,"byte_end":213744,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/ items in front of the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":213745,"byte_end":213780,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":213781,"byte_end":213784,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":213785,"byte_end":213824,"line_start":6,"line_end":6,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214071,"byte_end":214081,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"put_back_n","qualname":"::put_back_n_impl::put_back_n","value":"pub fn put_back_n<I>(I) -> PutBackN<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back multiple values to the front\n of the iteration.","sig":null,"attributes":[{"value":"/ Create an iterator where you can put back multiple values to the front","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":213923,"byte_end":213997,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ of the iteration.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":213998,"byte_end":214019,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214020,"byte_end":214023,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214024,"byte_end":214063,"line_start":16,"line_end":16,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214664,"byte_end":214672,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBackN<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Puts x in front of the iterator.\n The values are yielded in order of the most recently put back\n values first.","sig":null,"attributes":[{"value":"/ Puts x in front of the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214272,"byte_end":214308,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/ The values are yielded in order of the most recently put back","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214313,"byte_end":214378,"line_start":28,"line_end":28,"column_start":5,"column_end":70}},{"value":"/ values first.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214383,"byte_end":214400,"line_start":29,"line_end":29,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214405,"byte_end":214408,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214413,"byte_end":214424,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/ use itertools::put_back_n;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214429,"byte_end":214459,"line_start":32,"line_end":32,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214464,"byte_end":214467,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let mut it = put_back_n(1..5);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214472,"byte_end":214506,"line_start":34,"line_end":34,"column_start":5,"column_end":39}},{"value":"/ it.next();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214511,"byte_end":214525,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/ it.put_back(1);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214530,"byte_end":214549,"line_start":36,"line_end":36,"column_start":5,"column_end":24}},{"value":"/ it.put_back(0);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214554,"byte_end":214573,"line_start":37,"line_end":37,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214578,"byte_end":214581,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ assert!(itertools::equal(it, 0..5));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214586,"byte_end":214626,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214631,"byte_end":214638,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214643,"byte_end":214652,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215303,"byte_end":215309,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"RcIter","qualname":"::rciter_impl::RcIter","value":"RcIter { rciter }","parent":null,"children":[{"krate":0,"index":2696}],"decl_id":null,"docs":" A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.\n","sig":null,"attributes":[{"value":"/ A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215201,"byte_end":215274,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215351,"byte_end":215357,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"rciter","qualname":"::rciter_impl::RcIter::rciter","value":"std::rc::Rc<std::cell::RefCell<I>>","parent":{"krate":0,"index":2694},"children":[],"decl_id":null,"docs":" The boxed iterator.\n","sig":null,"attributes":[{"value":"/ The boxed iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215319,"byte_end":215342,"line_start":9,"line_end":9,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216626,"byte_end":216632,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"rciter","qualname":"::rciter_impl::rciter","value":"pub fn rciter<I>(I) -> RcIter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator inside a `Rc<RefCell<_>>` wrapper.","sig":null,"attributes":[{"value":"/ Return an iterator inside a `Rc<RefCell<_>>` wrapper.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215378,"byte_end":215435,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215436,"byte_end":215439,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned `RcIter` can be cloned, and each clone will refer back to the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215440,"byte_end":215518,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ same original iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215519,"byte_end":215546,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215547,"byte_end":215550,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `RcIter` allows doing interesting things like using `.zip()` on an iterator with","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215551,"byte_end":215635,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ itself, at the cost of runtime borrow checking which may have a performance","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215636,"byte_end":215715,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ penalty.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215716,"byte_end":215728,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215729,"byte_end":215732,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215733,"byte_end":215775,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215776,"byte_end":215779,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215780,"byte_end":215787,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use itertools::rciter;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215788,"byte_end":215814,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ use itertools::zip;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215815,"byte_end":215838,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215839,"byte_end":215842,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // In this example a range iterator is created and we iterate it using","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215843,"byte_end":215917,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ // three separate handles (two of them given to zip).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215918,"byte_end":215975,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/ // We also use the IntoIterator implementation for `&RcIter`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215976,"byte_end":216041,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216042,"byte_end":216045,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut iter = rciter(0..9);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216046,"byte_end":216078,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ let mut z = zip(&iter, &iter);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216079,"byte_end":216113,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216114,"byte_end":216117,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(z.next(), Some((0, 1)));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216118,"byte_end":216157,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((2, 3)));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216158,"byte_end":216197,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((4, 5)));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216198,"byte_end":216237,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(iter.next(), Some(6));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216238,"byte_end":216275,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(z.next(), Some((7, 8)));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216276,"byte_end":216315,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216316,"byte_end":216347,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216348,"byte_end":216355,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216356,"byte_end":216359,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ **Panics** in iterator methods if a borrow error is encountered in the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216360,"byte_end":216434,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ iterator methods. It can only happen if the `RcIter` is reentered in","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216435,"byte_end":216507,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/ `.next()`, i.e. if it somehow participates in an “iterator knot”","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216508,"byte_end":216580,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ where it is an adaptor of itself.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216581,"byte_end":216618,"line_start":46,"line_end":46,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2701},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218085,"byte_end":218092,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::repeatn::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":2703},{"krate":0,"index":2704}],"decl_id":null,"docs":" An iterator that produces *n* repetitions of an element.","sig":null,"attributes":[{"value":"/ An iterator that produces *n* repetitions of an element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":217853,"byte_end":217913,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":217914,"byte_end":217917,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See [`repeat_n()`](../fn.repeat_n.html) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":217918,"byte_end":217983,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":217984,"byte_end":218049,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218209,"byte_end":218217,"line_start":13,"line_end":13,"column_start":8,"column_end":16},"name":"repeat_n","qualname":"::repeatn::repeat_n","value":"pub fn repeat_n<A>(A, usize) -> RepeatN<A> where A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that produces `n` repetitions of `element`.\n","sig":null,"attributes":[{"value":"/ Create an iterator that produces `n` repetitions of `element`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218135,"byte_end":218201,"line_start":12,"line_end":12,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":221926,"byte_end":221936,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"RepeatCall","qualname":"::sources::RepeatCall","value":"RepeatCall {  }","parent":null,"children":[{"krate":0,"index":2713}],"decl_id":null,"docs":" See [`repeat_call`](../fn.repeat_call.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`repeat_call`](../fn.repeat_call.html) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":221763,"byte_end":221832,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":221850,"byte_end":221914,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222693,"byte_end":222704,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"repeat_call","qualname":"::sources::repeat_call","value":"pub fn repeat_call<F, A>(F) -> RepeatCall<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" An iterator source that produces elements indefinitely by calling\n a given closure.","sig":null,"attributes":[{"value":"/ An iterator source that produces elements indefinitely by calling","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222034,"byte_end":222103,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ a given closure.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222104,"byte_end":222124,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222125,"byte_end":222128,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is the return type of the closure.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222129,"byte_end":222189,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222190,"byte_end":222193,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222194,"byte_end":222201,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use itertools::repeat_call;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222202,"byte_end":222233,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222234,"byte_end":222263,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ use std::collections::BinaryHeap;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222264,"byte_end":222301,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222302,"byte_end":222305,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut heap = BinaryHeap::from(vec![2, 5, 3, 7, 8]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222306,"byte_end":222363,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222364,"byte_end":222367,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // extract each element in sorted order","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222368,"byte_end":222411,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/ for element in repeat_call(|| heap.pop()).while_some() {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222412,"byte_end":222472,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/     print!(\"{}\", element);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222473,"byte_end":222503,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222504,"byte_end":222509,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222510,"byte_end":222513,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222514,"byte_end":222542,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/     repeat_call(|| 1).take(5),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222543,"byte_end":222577,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/     vec![1, 1, 1, 1, 1]","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222578,"byte_end":222605,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222606,"byte_end":222612,"line_start":40,"line_end":40,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222613,"byte_end":222620,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222621,"byte_end":222685,"line_start":42,"line_end":42,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224311,"byte_end":224317,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sources::unfold","value":"pub fn unfold<A, St, F>(St, F) -> Unfold<St, F> where F: FnMut(&mut St) ->\nOption<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unfold source with the specified closure as the \"iterator\n function\" and an initial state to eventually pass to the closure","sig":null,"attributes":[{"value":"/ Creates a new unfold source with the specified closure as the \"iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223069,"byte_end":223144,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ function\" and an initial state to eventually pass to the closure","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223145,"byte_end":223213,"line_start":65,"line_end":65,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223214,"byte_end":223217,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ `unfold` is a general iterator builder: it has a mutable state value,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223218,"byte_end":223291,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ and a closure with access to the state that produces the next value.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223292,"byte_end":223364,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223365,"byte_end":223368,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This more or less equivalent to a regular struct with an `Iterator`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223369,"byte_end":223440,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"/ implementation, and is useful for one-off iterators.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223441,"byte_end":223497,"line_start":71,"line_end":71,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223498,"byte_end":223501,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223502,"byte_end":223509,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ // an iterator that yields sequential Fibonacci numbers,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223510,"byte_end":223570,"line_start":74,"line_end":74,"column_start":1,"column_end":61}},{"value":"/ // and stops at the maximum representable value.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223571,"byte_end":223623,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223624,"byte_end":223627,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use itertools::unfold;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223628,"byte_end":223654,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223655,"byte_end":223658,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let (mut x1, mut x2) = (1u32, 1u32);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223659,"byte_end":223699,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/ let mut fibonacci = unfold((), move |_| {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223700,"byte_end":223745,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/     // Attempt to get the next Fibonacci number","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223746,"byte_end":223797,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"/     let next = x1.saturating_add(x2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223798,"byte_end":223839,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223840,"byte_end":223843,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // Shift left: ret <- x1 <- x2 <- next","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223844,"byte_end":223890,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/     let ret = x1;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223891,"byte_end":223912,"line_start":85,"line_end":85,"column_start":1,"column_end":22}},{"value":"/     x1 = x2;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223913,"byte_end":223929,"line_start":86,"line_end":86,"column_start":1,"column_end":17}},{"value":"/     x2 = next;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223930,"byte_end":223948,"line_start":87,"line_end":87,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223949,"byte_end":223952,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/     // If addition has saturated at the maximum, we are finished","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":223953,"byte_end":224021,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/     if ret == x1 && ret > 1 {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224022,"byte_end":224055,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/         return None;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224056,"byte_end":224080,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224081,"byte_end":224090,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224091,"byte_end":224094,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/     Some(ret)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224095,"byte_end":224112,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/ });","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224113,"byte_end":224120,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224121,"byte_end":224124,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(fibonacci.by_ref().take(8),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224125,"byte_end":224180,"line_start":97,"line_end":97,"column_start":1,"column_end":56}},{"value":"/                         vec![1, 1, 2, 3, 5, 8, 13, 21]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224181,"byte_end":224241,"line_start":98,"line_end":98,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(fibonacci.last(), Some(2_971_215_073))","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224242,"byte_end":224295,"line_start":99,"line_end":99,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224296,"byte_end":224303,"line_start":100,"line_end":100,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224740,"byte_end":224746,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::sources::Unfold","value":"Unfold { state }","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723}],"decl_id":null,"docs":" See [`unfold`](../fn.unfold.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`unfold`](../fn.unfold.html) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224586,"byte_end":224645,"line_start":116,"line_end":116,"column_start":1,"column_end":60}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224663,"byte_end":224728,"line_start":118,"line_end":118,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224854,"byte_end":224859,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"state","qualname":"::sources::Unfold::state","value":"St","parent":{"krate":0,"index":2719},"children":[],"decl_id":null,"docs":" Internal state that will be passed to the closure on the next iteration\n","sig":null,"attributes":[{"value":"/ Internal state that will be passed to the closure on the next iteration","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224770,"byte_end":224845,"line_start":121,"line_end":121,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225519,"byte_end":225526,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::sources::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2732}],"decl_id":null,"docs":" An iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"/ An iterator that infinitely applies function to value and yields results.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225209,"byte_end":225286,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225287,"byte_end":225290,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iterate()`] function. See its documentation for more.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225291,"byte_end":225382,"line_start":144,"line_end":144,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225383,"byte_end":225386,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`iterate()`]: ../fn.iterate.html","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225387,"byte_end":225424,"line_start":146,"line_end":146,"column_start":1,"column_end":38}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225442,"byte_end":225507,"line_start":148,"line_end":148,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":226283,"byte_end":226290,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"iterate","qualname":"::sources::iterate","value":"pub fn iterate<St, F>(St, F) -> Iterate<St, F> where F: FnMut(&St) -> St","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"/ Creates a new iterator that infinitely applies function to value and yields results.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":226051,"byte_end":226139,"line_start":177,"line_end":177,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":226140,"byte_end":226143,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":226144,"byte_end":226151,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use itertools::iterate;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":226152,"byte_end":226179,"line_start":180,"line_end":180,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":226180,"byte_end":226183,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(iterate(1, |&i| i * 3).take(5), vec![1, 3, 9, 27, 81]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":226184,"byte_end":226267,"line_start":182,"line_end":182,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":226268,"byte_end":226275,"line_start":183,"line_end":183,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":227008,"byte_end":227011,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"Tee","qualname":"::tee::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":2750},{"krate":0,"index":2751}],"decl_id":null,"docs":" One half of an iterator pair where both return the same elements.","sig":null,"attributes":[{"value":"/ One half of an iterator pair where both return the same elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":226755,"byte_end":226824,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":226825,"byte_end":226828,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [`.tee()`](../trait.Itertools.html#method.tee) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":226829,"byte_end":226905,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":226906,"byte_end":226979,"line_start":19,"line_end":19,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":228972,"byte_end":228988,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"HomogeneousTuple","qualname":"::tuple_impl::HomogeneousTuple","value":"HomogeneousTuple: TupleCollect","parent":null,"children":[],"decl_id":null,"docs":" Implemented for homogeneous tuples of size up to 4.\n","sig":null,"attributes":[{"value":"/ Implemented for homogeneous tuples of size up to 4.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":228906,"byte_end":228961,"line_start":10,"line_end":10,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2755},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229276,"byte_end":229287,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"TupleBuffer","qualname":"::tuple_impl::TupleBuffer","value":"TupleBuffer {  }","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758}],"decl_id":null,"docs":" An iterator over a incomplete tuple.","sig":null,"attributes":[{"value":"/ An iterator over a incomplete tuple.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229061,"byte_end":229101,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229102,"byte_end":229105,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ See [`.tuples()`](../trait.Itertools.html#method.tuples) and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229106,"byte_end":229170,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ [`Tuples::into_buffer()`](struct.Tuples.html#method.into_buffer).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229171,"byte_end":229240,"line_start":20,"line_end":20,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2765},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230541,"byte_end":230547,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Tuples","qualname":"::tuple_impl::Tuples","value":"Tuples {  }","parent":null,"children":[{"krate":0,"index":2768},{"krate":0,"index":2769}],"decl_id":null,"docs":" An iterator that groups the items in tuples of a specific size.","sig":null,"attributes":[{"value":"/ An iterator that groups the items in tuples of a specific size.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230284,"byte_end":230351,"line_start":73,"line_end":73,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230352,"byte_end":230355,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ See [`.tuples()`](../trait.Itertools.html#method.tuples) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230356,"byte_end":230438,"line_start":75,"line_end":75,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230456,"byte_end":230529,"line_start":77,"line_end":77,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231602,"byte_end":231613,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Tuples<I, T>>::into_buffer","value":"pub fn into_buffer(Self) -> TupleBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a buffer with the produced items that was not enough to be grouped in a tuple.","sig":null,"attributes":[{"value":"/ Return a buffer with the produced items that was not enough to be grouped in a tuple.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231233,"byte_end":231322,"line_start":112,"line_end":112,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231327,"byte_end":231330,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231335,"byte_end":231342,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231347,"byte_end":231376,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231381,"byte_end":231384,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut iter = (0..5).tuples();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231389,"byte_end":231424,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Some((0, 1, 2)), iter.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231429,"byte_end":231474,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231479,"byte_end":231513,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/ itertools::assert_equal(vec![3, 4], iter.into_buffer());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231518,"byte_end":231578,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231583,"byte_end":231590,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231984,"byte_end":231996,"line_start":134,"line_end":134,"column_start":12,"column_end":24},"name":"TupleWindows","qualname":"::tuple_impl::TupleWindows","value":"TupleWindows {  }","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2778}],"decl_id":null,"docs":" An iterator over all contiguous windows that produces tuples of a specific size.","sig":null,"attributes":[{"value":"/ An iterator over all contiguous windows that produces tuples of a specific size.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231685,"byte_end":231769,"line_start":128,"line_end":128,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231770,"byte_end":231773,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ See [`.tuple_windows()`](../trait.Itertools.html#method.tuple_windows) for more","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231774,"byte_end":231857,"line_start":130,"line_end":130,"column_start":1,"column_end":84}},{"value":"/ information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231858,"byte_end":231874,"line_start":131,"line_end":131,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231875,"byte_end":231948,"line_start":132,"line_end":132,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233293,"byte_end":233305,"line_start":187,"line_end":187,"column_start":11,"column_end":23},"name":"TupleCollect","qualname":"::tuple_impl::TupleCollect","value":"TupleCollect: Sized","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1580}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233324,"byte_end":233328,"line_start":188,"line_end":188,"column_start":10,"column_end":14},"name":"Item","qualname":"::tuple_impl::TupleCollect::Item","value":"type Item;","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233339,"byte_end":233345,"line_start":189,"line_end":189,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::tuple_impl::TupleCollect::Buffer","value":"type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233424,"byte_end":233441,"line_start":191,"line_end":191,"column_start":8,"column_end":25},"name":"collect_from_iter","qualname":"::tuple_impl::TupleCollect::collect_from_iter","value":"pub fn collect_from_iter<I>(I, &mut Self::Buffer) -> Option<Self> where\nI: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233552,"byte_end":233576,"line_start":194,"line_end":194,"column_start":8,"column_end":32},"name":"collect_from_iter_no_buf","qualname":"::tuple_impl::TupleCollect::collect_from_iter_no_buf","value":"pub fn collect_from_iter_no_buf<I>(I) -> Option<Self> where\nI: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233663,"byte_end":233672,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"num_items","qualname":"::tuple_impl::TupleCollect::num_items","value":"pub fn num_items() -> usize","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233693,"byte_end":233708,"line_start":199,"line_end":199,"column_start":8,"column_end":23},"name":"left_shift_push","qualname":"::tuple_impl::TupleCollect::left_shift_push","value":"pub fn left_shift_push(&mut Self, Self::Item)","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2843},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236435,"byte_end":236443,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"UniqueBy","qualname":"::unique_impl::UniqueBy","value":"UniqueBy {  }","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236185,"byte_end":236242,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236243,"byte_end":236246,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.unique_by()`](../trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236247,"byte_end":236332,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236350,"byte_end":236423,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2856},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":239056,"byte_end":239062,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"Unique","qualname":"::unique_impl::Unique","value":"Unique {  }","parent":null,"children":[{"krate":0,"index":2858}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":238809,"byte_end":238866,"line_start":107,"line_end":107,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":238867,"byte_end":238870,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ See [`.unique()`](../trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":238871,"byte_end":238953,"line_start":109,"line_end":109,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":238971,"byte_end":239044,"line_start":111,"line_end":111,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239857,"byte_end":239869,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"WithPosition","qualname":"::with_position::WithPosition","value":"WithPosition {  }","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638}],"decl_id":null,"docs":" An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","sig":null,"attributes":[{"value":"/ An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239526,"byte_end":239616,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239617,"byte_end":239620,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Position<I::Item>`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239621,"byte_end":239670,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239671,"byte_end":239674,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.with_position()`](../trait.Itertools.html#method.with_position) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239675,"byte_end":239771,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239772,"byte_end":239845,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2866},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240626,"byte_end":240631,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"First","qualname":"::with_position::Position::First","value":"Position::First(T)","parent":{"krate":0,"index":2864},"children":[],"decl_id":null,"docs":" This is the first element.\n","sig":null,"attributes":[{"value":"/ This is the first element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240591,"byte_end":240621,"line_start":39,"line_end":39,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240696,"byte_end":240702,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Middle","qualname":"::with_position::Position::Middle","value":"Position::Middle(T)","parent":{"krate":0,"index":2864},"children":[],"decl_id":null,"docs":" This is neither the first nor the last element.\n","sig":null,"attributes":[{"value":"/ This is neither the first nor the last element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240640,"byte_end":240691,"line_start":41,"line_end":41,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2872},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240745,"byte_end":240749,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"Last","qualname":"::with_position::Position::Last","value":"Position::Last(T)","parent":{"krate":0,"index":2864},"children":[],"decl_id":null,"docs":" This is the last element.\n","sig":null,"attributes":[{"value":"/ This is the last element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240711,"byte_end":240740,"line_start":43,"line_end":43,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2875},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240792,"byte_end":240796,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"Only","qualname":"::with_position::Position::Only","value":"Position::Only(T)","parent":{"krate":0,"index":2864},"children":[],"decl_id":null,"docs":" This is the only element.\n","sig":null,"attributes":[{"value":"/ This is the only element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240758,"byte_end":240787,"line_start":45,"line_end":45,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240573,"byte_end":240581,"line_start":38,"line_end":38,"column_start":10,"column_end":18},"name":"Position","qualname":"::with_position::Position","value":"pub enum Position<T> { First(T), Middle(T), Last(T), Only(T), }","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2869},{"krate":0,"index":2872},{"krate":0,"index":2875}],"decl_id":null,"docs":" A value yielded by `WithPosition`.\n Indicates the position of this element in the iterator results.","sig":null,"attributes":[{"value":"/ A value yielded by `WithPosition`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240318,"byte_end":240356,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ Indicates the position of this element in the iterator results.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240357,"byte_end":240424,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240425,"byte_end":240428,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See [`.with_position()`](trait.Itertools.html#method.with_position) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240429,"byte_end":240522,"line_start":36,"line_end":36,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240869,"byte_end":240879,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Position<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value.\n","sig":null,"attributes":[{"value":"/ Return the inner value.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240830,"byte_end":240857,"line_start":50,"line_end":50,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2892},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242685,"byte_end":242690,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::zip_eq_impl::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":2895},{"krate":0,"index":2896}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242423,"byte_end":242488,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242489,"byte_end":242492,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_eq()`](../trait.Itertools.html#method.zip_eq) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242493,"byte_end":242575,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242600,"byte_end":242673,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243065,"byte_end":243071,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::zip_eq_impl::zip_eq","value":"pub fn zip_eq<I, J>(I, J) -> ZipEq<I::IntoIter, J::IntoIter> where\nI: IntoIterator, J: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242722,"byte_end":242759,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242760,"byte_end":242763,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the iterators are not of the same length.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242764,"byte_end":242823,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242824,"byte_end":242827,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip_eq(j)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242828,"byte_end":242880,"line_start":17,"line_end":17,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242881,"byte_end":242884,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242885,"byte_end":242892,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use itertools::zip_eq;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242893,"byte_end":242919,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242920,"byte_end":242923,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242924,"byte_end":242955,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip_eq(&data[..data.len() - 1], &data[1..]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242956,"byte_end":243019,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     /* loop body */","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243020,"byte_end":243043,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243044,"byte_end":243049,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243050,"byte_end":243057,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244503,"byte_end":244513,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"ZipLongest","qualname":"::zip_longest::ZipLongest","value":"ZipLongest {  }","parent":null,"children":[{"krate":0,"index":2908},{"krate":0,"index":2909}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244197,"byte_end":244262,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244263,"byte_end":244266,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244267,"byte_end":244296,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244297,"byte_end":244300,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_longest()`](../trait.Itertools.html#method.zip_longest) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244301,"byte_end":244393,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244418,"byte_end":244491,"line_start":16,"line_end":16,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2918},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246537,"byte_end":246540,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Zip","qualname":"::ziptuple::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":2920}],"decl_id":null,"docs":" See [`multizip`](../fn.multizip.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`multizip`](../fn.multizip.html) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246364,"byte_end":246427,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246452,"byte_end":246525,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247704,"byte_end":247712,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"multizip","qualname":"::ziptuple::multizip","value":"pub fn multizip<T, U>(U) -> Zip<T> where Zip<T>: From<U>, Zip<T>: Iterator","parent":null,"children":[],"decl_id":null,"docs":" An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","sig":null,"attributes":[{"value":"/ An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246559,"byte_end":246651,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246652,"byte_end":246655,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The iterator `Zip<(I, J, ..., M)>` is formed from a tuple of iterators (or values that","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246656,"byte_end":246746,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/ implement `IntoIterator`) and yields elements","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246747,"byte_end":246796,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ until any of the subiterators yields `None`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246797,"byte_end":246845,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246846,"byte_end":246849,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The iterator element type is a tuple like like `(A, B, ..., E)` where `A` to `E` are the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246850,"byte_end":246942,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ element types of the subiterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246943,"byte_end":246980,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246981,"byte_end":246984,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note:** The result of this macro is a value of a named type (`Zip<(I, J,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246985,"byte_end":247063,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ ..)>` of each component iterator `I, J, ...`) if each component iterator is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247064,"byte_end":247143,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ nameable.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247144,"byte_end":247157,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247158,"byte_end":247161,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Prefer [`izip!()`] over `multizip` for the performance benefits of using the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247162,"byte_end":247242,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ standard library `.zip()`. Prefer `multizip` if a nameable type is needed.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247243,"byte_end":247321,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247322,"byte_end":247325,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`izip!()`]: macro.izip.html","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247326,"byte_end":247358,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247359,"byte_end":247362,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247363,"byte_end":247370,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use itertools::multizip;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247371,"byte_end":247399,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247400,"byte_end":247403,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // iterate over three sequences side-by-side","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247404,"byte_end":247452,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/ let mut results = [0, 0, 0, 0];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247453,"byte_end":247488,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/ let inputs = [3, 7, 9, 6];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247489,"byte_end":247519,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247520,"byte_end":247523,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for (r, index, input) in multizip((&mut results, 0..10, &inputs)) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247524,"byte_end":247595,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/     *r = index * 10 + input;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247596,"byte_end":247628,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247629,"byte_end":247634,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247635,"byte_end":247638,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(results, [0 + 3, 10 + 7, 29, 36]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247639,"byte_end":247688,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247689,"byte_end":247696,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9836,"byte_end":9845,"line_start":334,"line_end":334,"column_start":11,"column_end":20},"name":"Itertools","qualname":"::Itertools","value":"Itertools: Iterator","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1804},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1817},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1868},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1880},{"krate":0,"index":1884},{"krate":0,"index":1887},{"krate":0,"index":1892},{"krate":0,"index":1896},{"krate":0,"index":1909},{"krate":0,"index":1923},{"krate":0,"index":1936}],"decl_id":null,"docs":" An [`Iterator`] blanket implementation that provides extra adaptors and\n methods.","sig":null,"attributes":[{"value":"/ An [`Iterator`] blanket implementation that provides extra adaptors and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9145,"byte_end":9220,"line_start":319,"line_end":319,"column_start":1,"column_end":76}},{"value":"/ methods.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9221,"byte_end":9233,"line_start":320,"line_end":320,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9234,"byte_end":9237,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods. They are divided into two groups:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9238,"byte_end":9315,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9316,"byte_end":9319,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ * *Adaptors* take an iterator and parameter as input, and return","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9320,"byte_end":9388,"line_start":324,"line_end":324,"column_start":1,"column_end":69}},{"value":"/ a new iterator value. These are listed first in the trait. An example","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9389,"byte_end":9462,"line_start":325,"line_end":325,"column_start":1,"column_end":74}},{"value":"/ of an adaptor is [`.interleave()`](#method.interleave)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9463,"byte_end":9521,"line_start":326,"line_end":326,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9522,"byte_end":9525,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ * *Regular methods* are those that don't return iterators and instead","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9526,"byte_end":9599,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/ return a regular value of some other kind.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9600,"byte_end":9646,"line_start":329,"line_end":329,"column_start":1,"column_end":47}},{"value":"/ [`.next_tuple()`](#method.next_tuple) is an example and the first regular","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9647,"byte_end":9724,"line_start":330,"line_end":330,"column_start":1,"column_end":78}},{"value":"/ method in the list.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9725,"byte_end":9748,"line_start":331,"line_end":331,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9749,"byte_end":9752,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ [`Iterator`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9753,"byte_end":9825,"line_start":333,"line_end":333,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10244,"byte_end":10254,"line_start":349,"line_end":349,"column_start":8,"column_end":18},"name":"interleave","qualname":"::Itertools::interleave","value":"pub fn interleave<J>(Self, J) -> Interleave<Self, J::IntoIter> where\nJ: IntoIterator<Item = Self::Item>, Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until both have run out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until both have run out.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9880,"byte_end":9946,"line_start":337,"line_end":337,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9951,"byte_end":9954,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9959,"byte_end":10001,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10006,"byte_end":10009,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10014,"byte_end":10043,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10048,"byte_end":10051,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10056,"byte_end":10063,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10068,"byte_end":10097,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10102,"byte_end":10105,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let it = (1..7).interleave(vec![-1, -2]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10110,"byte_end":10155,"line_start":346,"line_end":346,"column_start":5,"column_end":50}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2, 3, 4, 5, 6]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10160,"byte_end":10224,"line_start":347,"line_end":347,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10229,"byte_end":10236,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10777,"byte_end":10796,"line_start":367,"line_end":367,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::Itertools::interleave_shortest","value":"pub fn interleave_shortest<J>(Self, J)\n-> InterleaveShortest<Self, J::IntoIter> where J: IntoIterator<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until at least one of them has run\n out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until at least one of them has run","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10432,"byte_end":10508,"line_start":356,"line_end":356,"column_start":5,"column_end":81}},{"value":"/ out.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10513,"byte_end":10521,"line_start":357,"line_end":357,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10526,"byte_end":10529,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10534,"byte_end":10576,"line_start":359,"line_end":359,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10581,"byte_end":10584,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10589,"byte_end":10596,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10601,"byte_end":10630,"line_start":362,"line_end":362,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10635,"byte_end":10638,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let it = (1..7).interleave_shortest(vec![-1, -2]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10643,"byte_end":10697,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2, 3]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10702,"byte_end":10757,"line_start":365,"line_end":365,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10762,"byte_end":10769,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11375,"byte_end":11386,"line_start":386,"line_end":386,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::Itertools::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11013,"byte_end":11065,"line_start":374,"line_end":374,"column_start":5,"column_end":57}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11070,"byte_end":11119,"line_start":375,"line_end":375,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11124,"byte_end":11127,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11132,"byte_end":11174,"line_start":377,"line_end":377,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11179,"byte_end":11182,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11187,"byte_end":11216,"line_start":379,"line_end":379,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11221,"byte_end":11224,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11229,"byte_end":11236,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11241,"byte_end":11270,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11275,"byte_end":11278,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal((0..3).intersperse(8), vec![0, 8, 1, 8, 2]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11283,"byte_end":11355,"line_start":384,"line_end":384,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11360,"byte_end":11367,"line_start":385,"line_end":385,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12629,"byte_end":12640,"line_start":420,"line_end":420,"column_start":8,"column_end":19},"name":"zip_longest","qualname":"::Itertools::zip_longest","value":"pub fn zip_longest<J>(Self, J) -> ZipLongest<Self, J::IntoIter> where\nJ: IntoIterator, Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of two optional elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11559,"byte_end":11629,"line_start":393,"line_end":393,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of two optional elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11634,"byte_end":11703,"line_start":394,"line_end":394,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11708,"byte_end":11711,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11716,"byte_end":11745,"line_start":396,"line_end":396,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11750,"byte_end":11753,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ As long as neither input iterator is exhausted yet, it yields two values","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11758,"byte_end":11834,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ via `EitherOrBoth::Both`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11839,"byte_end":11868,"line_start":399,"line_end":399,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11873,"byte_end":11876,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ When the parameter iterator is exhausted, it only yields a value from the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11881,"byte_end":11958,"line_start":401,"line_end":401,"column_start":5,"column_end":82}},{"value":"/ `self` iterator via `EitherOrBoth::Left`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11963,"byte_end":12008,"line_start":402,"line_end":402,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12013,"byte_end":12016,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ When the `self` iterator is exhausted, it only yields a value from the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12021,"byte_end":12095,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ parameter iterator via `EitherOrBoth::Right`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12100,"byte_end":12149,"line_start":405,"line_end":405,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12154,"byte_end":12157,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ When both iterators return `None`, all further invocations of `.next()`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12162,"byte_end":12237,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ will return `None`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12242,"byte_end":12265,"line_start":408,"line_end":408,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12270,"byte_end":12273,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12278,"byte_end":12306,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/ [`EitherOrBoth<Self::Item, J::Item>`](enum.EitherOrBoth.html).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12311,"byte_end":12377,"line_start":411,"line_end":411,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12382,"byte_end":12385,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12390,"byte_end":12401,"line_start":413,"line_end":413,"column_start":5,"column_end":16}},{"value":"/ use itertools::EitherOrBoth::{Both, Right};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12406,"byte_end":12453,"line_start":414,"line_end":414,"column_start":5,"column_end":52}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12458,"byte_end":12487,"line_start":415,"line_end":415,"column_start":5,"column_end":34}},{"value":"/ let it = (0..1).zip_longest(1..3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12492,"byte_end":12530,"line_start":416,"line_end":416,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(it, vec![Both(0, 1), Right(2)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12535,"byte_end":12595,"line_start":417,"line_end":417,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12600,"byte_end":12607,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12612,"byte_end":12621,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13078,"byte_end":13084,"line_start":433,"line_end":433,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::Itertools::zip_eq","value":"pub fn zip_eq<J>(Self, J) -> ZipEq<Self, J::IntoIter> where J: IntoIterator,\nSelf: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12825,"byte_end":12895,"line_start":427,"line_end":427,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12900,"byte_end":12956,"line_start":428,"line_end":428,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12961,"byte_end":12964,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the iterators reach an end and they are not of equal","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12969,"byte_end":13039,"line_start":430,"line_end":430,"column_start":5,"column_end":75}},{"value":"/ lengths.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13044,"byte_end":13056,"line_start":431,"line_end":431,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13061,"byte_end":13070,"line_start":432,"line_end":432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14000,"byte_end":14008,"line_start":463,"line_end":463,"column_start":8,"column_end":16},"name":"batching","qualname":"::Itertools::batching","value":"pub fn batching<B, F>(Self, F) -> Batching<Self, F> where F: FnMut(&mut Self)\n-> Option<B>, Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the\n iterator and may pick off as many elements as it likes, to produce the\n next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure receives a reference to the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13234,"byte_end":13308,"line_start":440,"line_end":440,"column_start":5,"column_end":75}},{"value":"/ iterator and may pick off as many elements as it likes, to produce the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13313,"byte_end":13387,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ next iterator element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13392,"byte_end":13418,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13423,"byte_end":13426,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `B`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13431,"byte_end":13464,"line_start":444,"line_end":444,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13469,"byte_end":13472,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13477,"byte_end":13484,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13489,"byte_end":13518,"line_start":447,"line_end":447,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13523,"byte_end":13526,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ // An adaptor that gathers elements in pairs","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13531,"byte_end":13579,"line_start":449,"line_end":449,"column_start":5,"column_end":53}},{"value":"/ let pit = (0..4).batching(|it| {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13584,"byte_end":13620,"line_start":450,"line_end":450,"column_start":5,"column_end":41}},{"value":"/            match it.next() {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13625,"byte_end":13657,"line_start":451,"line_end":451,"column_start":5,"column_end":37}},{"value":"/                None => None,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13662,"byte_end":13694,"line_start":452,"line_end":452,"column_start":5,"column_end":37}},{"value":"/                Some(x) => match it.next() {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13699,"byte_end":13746,"line_start":453,"line_end":453,"column_start":5,"column_end":52}},{"value":"/                    None => None,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13751,"byte_end":13787,"line_start":454,"line_end":454,"column_start":5,"column_end":41}},{"value":"/                    Some(y) => Some((x, y)),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13792,"byte_end":13839,"line_start":455,"line_end":455,"column_start":5,"column_end":52}},{"value":"/                }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13844,"byte_end":13864,"line_start":456,"line_end":456,"column_start":5,"column_end":25}},{"value":"/            }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13869,"byte_end":13885,"line_start":457,"line_end":457,"column_start":5,"column_end":21}},{"value":"/        });","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13890,"byte_end":13904,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13909,"byte_end":13912,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(pit, vec![(0, 1), (2, 3)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13917,"byte_end":13972,"line_start":460,"line_end":460,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13977,"byte_end":13984,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13989,"byte_end":13992,"line_start":462,"line_end":462,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15735,"byte_end":15743,"line_start":505,"line_end":505,"column_start":8,"column_end":16},"name":"group_by","qualname":"::Itertools::group_by","value":"pub fn group_by<K, F>(Self, F) -> GroupBy<K, Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> K, K: PartialEq","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an *iterable* that can group iterator elements.\n Consecutive elements that map to the same key (“runs”), are assigned\n to the same group.","sig":null,"attributes":[{"value":"/ Return an *iterable* that can group iterator elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14175,"byte_end":14233,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/ Consecutive elements that map to the same key (“runs”), are assigned","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14238,"byte_end":14314,"line_start":471,"line_end":471,"column_start":5,"column_end":77}},{"value":"/ to the same group.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14319,"byte_end":14341,"line_start":472,"line_end":472,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14346,"byte_end":14349,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ `GroupBy` is the storage for the lazy grouping operation.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14354,"byte_end":14415,"line_start":474,"line_end":474,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14420,"byte_end":14423,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ If the groups are consumed in order, or if each group's iterator is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14428,"byte_end":14499,"line_start":476,"line_end":476,"column_start":5,"column_end":76}},{"value":"/ dropped without keeping it around, then `GroupBy` uses no","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14504,"byte_end":14565,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/ allocations.  It needs allocations only if several group iterators","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14570,"byte_end":14640,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"/ are alive at the same time.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14645,"byte_end":14676,"line_start":479,"line_end":479,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14681,"byte_end":14684,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14689,"byte_end":14755,"line_start":481,"line_end":481,"column_start":5,"column_end":71}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14760,"byte_end":14825,"line_start":482,"line_end":482,"column_start":5,"column_end":70}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14830,"byte_end":14897,"line_start":483,"line_end":483,"column_start":5,"column_end":72}},{"value":"/ iterated.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14902,"byte_end":14915,"line_start":484,"line_end":484,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14920,"byte_end":14923,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(K, Group)`: the group's key and the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14928,"byte_end":14994,"line_start":486,"line_end":486,"column_start":5,"column_end":71}},{"value":"/ group iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14999,"byte_end":15018,"line_start":487,"line_end":487,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15023,"byte_end":15026,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15031,"byte_end":15038,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15043,"byte_end":15072,"line_start":490,"line_end":490,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15077,"byte_end":15080,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ // group data into runs of larger than zero or not.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15085,"byte_end":15140,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/ let data = vec![1, 3, -2, -2, 1, 0, 1, 2];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15145,"byte_end":15191,"line_start":493,"line_end":493,"column_start":5,"column_end":51}},{"value":"/ // groups:     |---->|------>|--------->|","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15196,"byte_end":15241,"line_start":494,"line_end":494,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15246,"byte_end":15249,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `GroupBy` is iterable","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15254,"byte_end":15317,"line_start":496,"line_end":496,"column_start":5,"column_end":68}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15322,"byte_end":15392,"line_start":497,"line_end":497,"column_start":5,"column_end":75}},{"value":"/ let mut data_grouped = Vec::new();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15397,"byte_end":15435,"line_start":498,"line_end":498,"column_start":5,"column_end":43}},{"value":"/ for (key, group) in &data.into_iter().group_by(|elt| *elt >= 0) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15440,"byte_end":15509,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/     data_grouped.push((key, group.collect()));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15514,"byte_end":15564,"line_start":500,"line_end":500,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15569,"byte_end":15574,"line_start":501,"line_end":501,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(data_grouped, vec![(true, vec![1, 3]), (false, vec![-2, -2]), (true, vec![1, 0, 1, 2])]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15579,"byte_end":15683,"line_start":502,"line_end":502,"column_start":5,"column_end":109}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15688,"byte_end":15695,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15700,"byte_end":15727,"line_start":504,"line_end":504,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17022,"byte_end":17028,"line_start":541,"line_end":541,"column_start":8,"column_end":14},"name":"chunks","qualname":"::Itertools::chunks","value":"pub fn chunks(Self, usize) -> IntoChunks<Self> where Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an *iterable* that can chunk the iterator.","sig":null,"attributes":[{"value":"/ Return an *iterable* that can chunk the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15937,"byte_end":15990,"line_start":513,"line_end":513,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15995,"byte_end":15998,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Yield subiterators (chunks) that each yield a fixed number elements,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16003,"byte_end":16075,"line_start":515,"line_end":515,"column_start":5,"column_end":77}},{"value":"/ determined by `size`. The last chunk will be shorter if there aren't","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16080,"byte_end":16152,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ enough elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16157,"byte_end":16177,"line_start":517,"line_end":517,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16182,"byte_end":16185,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ `IntoChunks` is based on `GroupBy`: it is iterable (implements","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16190,"byte_end":16256,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/ `IntoIterator`, **not** `Iterator`), and it only buffers if several","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16261,"byte_end":16332,"line_start":520,"line_end":520,"column_start":5,"column_end":76}},{"value":"/ chunk iterators are alive at the same time.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16337,"byte_end":16384,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16389,"byte_end":16392,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16397,"byte_end":16457,"line_start":523,"line_end":523,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16462,"byte_end":16465,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `size` is 0.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16470,"byte_end":16500,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16505,"byte_end":16508,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16513,"byte_end":16520,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16525,"byte_end":16554,"line_start":528,"line_end":528,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16559,"byte_end":16562,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 1, 2, -2, 6, 0, 3, 1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16567,"byte_end":16612,"line_start":530,"line_end":530,"column_start":5,"column_end":50}},{"value":"/ //chunk size=3 |------->|-------->|--->|","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16617,"byte_end":16661,"line_start":531,"line_end":531,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16666,"byte_end":16669,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `IntoChunks` is iterable","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16674,"byte_end":16740,"line_start":533,"line_end":533,"column_start":5,"column_end":71}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16745,"byte_end":16815,"line_start":534,"line_end":534,"column_start":5,"column_end":75}},{"value":"/ for chunk in &data.into_iter().chunks(3) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16820,"byte_end":16866,"line_start":535,"line_end":535,"column_start":5,"column_end":51}},{"value":"/     // Check that the sum of each chunk is 4.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16871,"byte_end":16920,"line_start":536,"line_end":536,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(4, chunk.sum());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16925,"byte_end":16960,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16965,"byte_end":16970,"line_start":538,"line_end":538,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16975,"byte_end":16982,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16987,"byte_end":17014,"line_start":540,"line_end":540,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18384,"byte_end":18397,"line_start":579,"line_end":579,"column_start":8,"column_end":21},"name":"tuple_windows","qualname":"::Itertools::tuple_windows","value":"pub fn tuple_windows<T>(Self) -> TupleWindows<Self, T> where Self: Sized +\nIterator<Item = T::Item>, T: traits::HomogeneousTuple, T::Item: Clone","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator over all contiguous windows producing tuples of\n a specific size (up to 4).","sig":null,"attributes":[{"value":"/ Return an iterator over all contiguous windows producing tuples of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17184,"byte_end":17254,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ a specific size (up to 4).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17259,"byte_end":17289,"line_start":549,"line_end":549,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17294,"byte_end":17297,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ `tuple_windows` clones the iterator elements so that they can be","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17302,"byte_end":17370,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/ part of successive windows, this makes it most suited for iterators","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17375,"byte_end":17446,"line_start":552,"line_end":552,"column_start":5,"column_end":76}},{"value":"/ of references and other values that are cheap to copy.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17451,"byte_end":17509,"line_start":553,"line_end":553,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17514,"byte_end":17517,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17522,"byte_end":17529,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17534,"byte_end":17563,"line_start":556,"line_end":556,"column_start":5,"column_end":34}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17568,"byte_end":17595,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuple_windows() {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17600,"byte_end":17642,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/     v.push((a, b));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17647,"byte_end":17670,"line_start":559,"line_end":559,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17675,"byte_end":17680,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (2, 3), (3, 4)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17685,"byte_end":17733,"line_start":561,"line_end":561,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17738,"byte_end":17741,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..5).tuple_windows();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17746,"byte_end":17786,"line_start":563,"line_end":563,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17791,"byte_end":17834,"line_start":564,"line_end":564,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((2, 3, 4)), it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17839,"byte_end":17882,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17887,"byte_end":17919,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17924,"byte_end":17927,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17932,"byte_end":17964,"line_start":568,"line_end":568,"column_start":5,"column_end":37}},{"value":"/ let it = (1..5).tuple_windows::<(_, _, _)>();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17969,"byte_end":18018,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18023,"byte_end":18083,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18088,"byte_end":18091,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18096,"byte_end":18141,"line_start":572,"line_end":572,"column_start":5,"column_end":50}},{"value":"/ use itertools::TupleWindows;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18146,"byte_end":18178,"line_start":573,"line_end":573,"column_start":5,"column_end":37}},{"value":"/ use std::ops::Range;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18183,"byte_end":18207,"line_start":574,"line_end":574,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18212,"byte_end":18215,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let it: TupleWindows<Range<u32>, (u32, u32, u32)> = (1..5).tuple_windows();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18220,"byte_end":18299,"line_start":576,"line_end":576,"column_start":5,"column_end":84}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18304,"byte_end":18364,"line_start":577,"line_end":577,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18369,"byte_end":18376,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19706,"byte_end":19712,"line_start":618,"line_end":618,"column_start":8,"column_end":14},"name":"tuples","qualname":"::Itertools::tuples","value":"pub fn tuples<T>(Self) -> Tuples<Self, T> where Self: Sized + Iterator<Item =\nT::Item>, T: traits::HomogeneousTuple","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator that groups the items in tuples of a specific size\n (up to 4).","sig":null,"attributes":[{"value":"/ Return an iterator that groups the items in tuples of a specific size","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18615,"byte_end":18688,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ (up to 4).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18693,"byte_end":18707,"line_start":588,"line_end":588,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18712,"byte_end":18715,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ See also the method [`.next_tuple()`](#method.next_tuple).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18720,"byte_end":18782,"line_start":590,"line_end":590,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18787,"byte_end":18790,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18795,"byte_end":18802,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18807,"byte_end":18836,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18841,"byte_end":18868,"line_start":594,"line_end":594,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuples() {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18873,"byte_end":18908,"line_start":595,"line_end":595,"column_start":5,"column_end":40}},{"value":"/     v.push((a, b));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18913,"byte_end":18936,"line_start":596,"line_end":596,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18941,"byte_end":18946,"line_start":597,"line_end":597,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (3, 4)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18951,"byte_end":18991,"line_start":598,"line_end":598,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18996,"byte_end":18999,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..7).tuples();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19004,"byte_end":19037,"line_start":600,"line_end":600,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19042,"byte_end":19085,"line_start":601,"line_end":601,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((4, 5, 6)), it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19090,"byte_end":19133,"line_start":602,"line_end":602,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19138,"byte_end":19170,"line_start":603,"line_end":603,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19175,"byte_end":19178,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19183,"byte_end":19215,"line_start":605,"line_end":605,"column_start":5,"column_end":37}},{"value":"/ let it = (1..7).tuples::<(_, _, _)>();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19220,"byte_end":19262,"line_start":606,"line_end":606,"column_start":5,"column_end":47}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19267,"byte_end":19327,"line_start":607,"line_end":607,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19332,"byte_end":19335,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19340,"byte_end":19385,"line_start":609,"line_end":609,"column_start":5,"column_end":50}},{"value":"/ use itertools::Tuples;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19390,"byte_end":19416,"line_start":610,"line_end":610,"column_start":5,"column_end":31}},{"value":"/ use std::ops::Range;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19421,"byte_end":19445,"line_start":611,"line_end":611,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19450,"byte_end":19453,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let it: Tuples<Range<u32>, (u32, u32, u32)> = (1..7).tuples();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19458,"byte_end":19524,"line_start":613,"line_end":613,"column_start":5,"column_end":71}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19529,"byte_end":19589,"line_start":614,"line_end":614,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19594,"byte_end":19601,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19606,"byte_end":19609,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ See also [`Tuples::into_buffer`](structs/struct.Tuples.html#method.into_buffer).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19614,"byte_end":19698,"line_start":617,"line_end":617,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20521,"byte_end":20524,"line_start":643,"line_end":643,"column_start":8,"column_end":11},"name":"tee","qualname":"::Itertools::tee","value":"pub fn tee(Self) -> (Tee<Self>, Tee<Self>) where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Split into an iterator pair that both yield all elements from\n the original iterator.","sig":null,"attributes":[{"value":"/ Split into an iterator pair that both yield all elements from","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19887,"byte_end":19952,"line_start":625,"line_end":625,"column_start":5,"column_end":70}},{"value":"/ the original iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19957,"byte_end":19983,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19988,"byte_end":19991,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ **Note:** If the iterator is clonable, prefer using that instead","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19996,"byte_end":20064,"line_start":628,"line_end":628,"column_start":5,"column_end":73}},{"value":"/ of using this method. It is likely to be more efficient.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20069,"byte_end":20129,"line_start":629,"line_end":629,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20134,"byte_end":20137,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20142,"byte_end":20184,"line_start":631,"line_end":631,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20189,"byte_end":20192,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20197,"byte_end":20204,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20209,"byte_end":20238,"line_start":634,"line_end":634,"column_start":5,"column_end":34}},{"value":"/ let xs = vec![0, 1, 2, 3];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20243,"byte_end":20273,"line_start":635,"line_end":635,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20278,"byte_end":20281,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let (mut t1, t2) = xs.into_iter().tee();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20286,"byte_end":20330,"line_start":637,"line_end":637,"column_start":5,"column_end":49}},{"value":"/ itertools::assert_equal(t1.next(), Some(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20335,"byte_end":20383,"line_start":638,"line_end":638,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(t2, 0..4);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20388,"byte_end":20426,"line_start":639,"line_end":639,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(t1, 1..4);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20431,"byte_end":20469,"line_start":640,"line_end":640,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20474,"byte_end":20481,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20486,"byte_end":20513,"line_start":642,"line_end":642,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21253,"byte_end":21257,"line_start":668,"line_end":668,"column_start":8,"column_end":12},"name":"step","qualname":"::Itertools::step","value":"pub fn step(Self, usize) -> Step<Self> where Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that steps `n` elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that steps `n` elements in the base iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20656,"byte_end":20731,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ for each iteration.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20736,"byte_end":20759,"line_start":651,"line_end":651,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20764,"byte_end":20767,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20772,"byte_end":20847,"line_start":653,"line_end":653,"column_start":5,"column_end":80}},{"value":"/ then skipping forward `n - 1` elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20852,"byte_end":20895,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20900,"byte_end":20903,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20908,"byte_end":20950,"line_start":656,"line_end":656,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20955,"byte_end":20958,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the step is 0.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20963,"byte_end":20995,"line_start":658,"line_end":658,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21000,"byte_end":21003,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21008,"byte_end":21015,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21020,"byte_end":21049,"line_start":661,"line_end":661,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21054,"byte_end":21057,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let it = (0..8).step(3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21062,"byte_end":21090,"line_start":663,"line_end":663,"column_start":5,"column_end":33}},{"value":"/ itertools::assert_equal(it, vec![0, 3, 6]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21095,"byte_end":21142,"line_start":664,"line_end":664,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21147,"byte_end":21154,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21159,"byte_end":21220,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"allow(deprecated)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21225,"byte_end":21245,"line_start":667,"line_end":667,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21565,"byte_end":21573,"line_start":681,"line_end":681,"column_start":8,"column_end":16},"name":"map_into","qualname":"::Itertools::map_into","value":"pub fn map_into<R>(Self) -> MapInto<Self, R> where Self: Sized,\nSelf::Item: Into<R>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Convert each item of the iterator using the `Into` trait.","sig":null,"attributes":[{"value":"/ Convert each item of the iterator using the `Into` trait.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21363,"byte_end":21424,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21429,"byte_end":21432,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21437,"byte_end":21448,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21453,"byte_end":21482,"line_start":677,"line_end":677,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21487,"byte_end":21490,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ (1i32..42i32).map_into::<f64>().collect_vec();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21495,"byte_end":21545,"line_start":679,"line_end":679,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21550,"byte_end":21557,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22126,"byte_end":22137,"line_start":699,"line_end":699,"column_start":8,"column_end":19},"name":"map_results","qualname":"::Itertools::map_results","value":"pub fn map_results<F, T, U, E>(Self, F) -> MapResults<Self, F> where\nSelf: Iterator<Item = Result<T, E>> + Sized, F: FnMut(T) -> U","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies the provided closure\n to every `Result::Ok` value. `Result::Err` values are\n unchanged.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that applies the provided closure","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21715,"byte_end":21779,"line_start":688,"line_end":688,"column_start":5,"column_end":69}},{"value":"/ to every `Result::Ok` value. `Result::Err` values are","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21784,"byte_end":21841,"line_start":689,"line_end":689,"column_start":5,"column_end":62}},{"value":"/ unchanged.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21846,"byte_end":21860,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21865,"byte_end":21868,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21873,"byte_end":21880,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21885,"byte_end":21914,"line_start":693,"line_end":693,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21919,"byte_end":21922,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ let input = vec![Ok(41), Err(false), Ok(11)];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21927,"byte_end":21976,"line_start":695,"line_end":695,"column_start":5,"column_end":54}},{"value":"/ let it = input.into_iter().map_results(|i| i + 1);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21981,"byte_end":22035,"line_start":696,"line_end":696,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![Ok(42), Err(false), Ok(12)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22040,"byte_end":22106,"line_start":697,"line_end":697,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22111,"byte_end":22118,"line_start":698,"line_end":698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22800,"byte_end":22805,"line_start":720,"line_end":720,"column_start":8,"column_end":13},"name":"merge","qualname":"::Itertools::merge","value":"pub fn merge<J>(Self, J) -> Merge<Self, J::IntoIter> where Self: Sized,\nSelf::Item: PartialOrd, J: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in\n ascending order.  If both base iterators are sorted (ascending), the\n result is sorted.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22332,"byte_end":22400,"line_start":706,"line_end":706,"column_start":5,"column_end":73}},{"value":"/ ascending order.  If both base iterators are sorted (ascending), the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22405,"byte_end":22477,"line_start":707,"line_end":707,"column_start":5,"column_end":77}},{"value":"/ result is sorted.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22482,"byte_end":22503,"line_start":708,"line_end":708,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22508,"byte_end":22511,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22516,"byte_end":22558,"line_start":710,"line_end":710,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22563,"byte_end":22566,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22571,"byte_end":22578,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22583,"byte_end":22612,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22617,"byte_end":22620,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ let a = (0..11).step(3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22625,"byte_end":22653,"line_start":715,"line_end":715,"column_start":5,"column_end":33}},{"value":"/ let b = (0..11).step(5);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22658,"byte_end":22686,"line_start":716,"line_end":716,"column_start":5,"column_end":33}},{"value":"/ let it = a.merge(b);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22691,"byte_end":22715,"line_start":717,"line_end":717,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(it, vec![0, 0, 3, 5, 6, 9, 10]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22720,"byte_end":22780,"line_start":718,"line_end":718,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22785,"byte_end":22792,"line_start":719,"line_end":719,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23582,"byte_end":23590,"line_start":744,"line_end":744,"column_start":8,"column_end":16},"name":"merge_by","qualname":"::Itertools::merge_by","value":"pub fn merge_by<J, F>(Self, J, F) -> MergeBy<Self, J::IntoIter, F> where\nSelf: Sized, J: IntoIterator<Item = Self::Item>,\nF: FnMut(&Self::Item, &Self::Item) -> bool","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in order.\n This is much like `.merge()` but allows for a custom ordering.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23011,"byte_end":23086,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ This is much like `.merge()` but allows for a custom ordering.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23091,"byte_end":23157,"line_start":729,"line_end":729,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23162,"byte_end":23165,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This can be especially useful for sequences of tuples.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23170,"byte_end":23228,"line_start":731,"line_end":731,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23233,"byte_end":23236,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23241,"byte_end":23283,"line_start":733,"line_end":733,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23288,"byte_end":23291,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23296,"byte_end":23303,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23308,"byte_end":23337,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23342,"byte_end":23345,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ let a = (0..).zip(\"bc\".chars());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23350,"byte_end":23386,"line_start":738,"line_end":738,"column_start":5,"column_end":41}},{"value":"/ let b = (0..).zip(\"ad\".chars());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23391,"byte_end":23427,"line_start":739,"line_end":739,"column_start":5,"column_end":41}},{"value":"/ let it = a.merge_by(b, |x, y| x.1 <= y.1);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23432,"byte_end":23478,"line_start":740,"line_end":740,"column_start":5,"column_end":51}},{"value":"/ itertools::assert_equal(it, vec![(0, 'a'), (0, 'b'), (1, 'c'), (1, 'd')]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23483,"byte_end":23561,"line_start":741,"line_end":741,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23566,"byte_end":23573,"line_start":742,"line_end":742,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25180,"byte_end":25193,"line_start":784,"line_end":784,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::Itertools::merge_join_by","value":"pub fn merge_join_by<J, F>(Self, J, F) -> MergeJoinBy<Self, J::IntoIter, F>\nwhere J: IntoIterator, F: FnMut(&Self::Item, &J::Item) -> std::cmp::Ordering,\nSelf: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Create an iterator that merges items from both this and the specified\n iterator in ascending order.","sig":null,"attributes":[{"value":"/ Create an iterator that merges items from both this and the specified","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23876,"byte_end":23949,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ iterator in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23954,"byte_end":23986,"line_start":753,"line_end":753,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23991,"byte_end":23994,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ It chooses whether to pair elements based on the `Ordering` returned by the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23999,"byte_end":24078,"line_start":755,"line_end":755,"column_start":5,"column_end":84}},{"value":"/ specified compare function. At any point, inspecting the tip of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24083,"byte_end":24154,"line_start":756,"line_end":756,"column_start":5,"column_end":76}},{"value":"/ iterators `I` and `J` as items `i` of type `I::Item` and `j` of type","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24159,"byte_end":24231,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/ `J::Item` respectively, the resulting iterator will:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24236,"byte_end":24292,"line_start":758,"line_end":758,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24297,"byte_end":24300,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ - Emit `EitherOrBoth::Left(i)` when `i < j`,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24305,"byte_end":24353,"line_start":760,"line_end":760,"column_start":5,"column_end":53}},{"value":"/   and remove `i` from its source iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24358,"byte_end":24403,"line_start":761,"line_end":761,"column_start":5,"column_end":50}},{"value":"/ - Emit `EitherOrBoth::Right(j)` when `i > j`,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24408,"byte_end":24457,"line_start":762,"line_end":762,"column_start":5,"column_end":54}},{"value":"/   and remove `j` from its source iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24462,"byte_end":24507,"line_start":763,"line_end":763,"column_start":5,"column_end":50}},{"value":"/ - Emit `EitherOrBoth::Both(i, j)` when  `i == j`,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24512,"byte_end":24565,"line_start":764,"line_end":764,"column_start":5,"column_end":58}},{"value":"/   and remove both `i` and `j` from their respective source iterators","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24570,"byte_end":24642,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24647,"byte_end":24650,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24655,"byte_end":24662,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24667,"byte_end":24696,"line_start":768,"line_end":768,"column_start":5,"column_end":34}},{"value":"/ use itertools::EitherOrBoth::{Left, Right, Both};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24701,"byte_end":24754,"line_start":769,"line_end":769,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24759,"byte_end":24762,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ let ki = (0..10).step(3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24767,"byte_end":24796,"line_start":771,"line_end":771,"column_start":5,"column_end":34}},{"value":"/ let ku = (0..10).step(5);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24801,"byte_end":24830,"line_start":772,"line_end":772,"column_start":5,"column_end":34}},{"value":"/ let ki_ku = ki.merge_join_by(ku, |i, j| i.cmp(j)).map(|either| {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24835,"byte_end":24903,"line_start":773,"line_end":773,"column_start":5,"column_end":73}},{"value":"/     match either {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24908,"byte_end":24930,"line_start":774,"line_end":774,"column_start":5,"column_end":27}},{"value":"/         Left(_) => \"Ki\",","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24935,"byte_end":24963,"line_start":775,"line_end":775,"column_start":5,"column_end":33}},{"value":"/         Right(_) => \"Ku\",","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":24968,"byte_end":24997,"line_start":776,"line_end":776,"column_start":5,"column_end":34}},{"value":"/         Both(_, _) => \"KiKu\"","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25002,"byte_end":25034,"line_start":777,"line_end":777,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25039,"byte_end":25048,"line_start":778,"line_end":778,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25053,"byte_end":25060,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25065,"byte_end":25068,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(ki_ku, vec![\"KiKu\", \"Ki\", \"Ku\", \"Ki\", \"Ki\"]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25073,"byte_end":25146,"line_start":781,"line_end":781,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25151,"byte_end":25158,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25163,"byte_end":25172,"line_start":783,"line_end":783,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26027,"byte_end":26033,"line_start":810,"line_end":810,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::Itertools::kmerge","value":"pub fn kmerge(Self) -> KMerge<<Self::Item as IntoIterator>::IntoIter> where\nSelf: Sized, Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::Item: PartialOrd","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them in ascending order.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that flattens an iterator of iterators by","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25451,"byte_end":25523,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ merging them in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25528,"byte_end":25564,"line_start":794,"line_end":794,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25569,"byte_end":25572,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25577,"byte_end":25648,"line_start":796,"line_end":796,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25653,"byte_end":25656,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25661,"byte_end":25703,"line_start":798,"line_end":798,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25708,"byte_end":25711,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25716,"byte_end":25723,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25728,"byte_end":25757,"line_start":801,"line_end":801,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25762,"byte_end":25765,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let a = (0..6).step(3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25770,"byte_end":25797,"line_start":803,"line_end":803,"column_start":5,"column_end":32}},{"value":"/ let b = (1..6).step(3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25802,"byte_end":25829,"line_start":804,"line_end":804,"column_start":5,"column_end":32}},{"value":"/ let c = (2..6).step(3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25834,"byte_end":25861,"line_start":805,"line_end":805,"column_start":5,"column_end":32}},{"value":"/ let it = vec![a, b, c].into_iter().kmerge();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25866,"byte_end":25914,"line_start":806,"line_end":806,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25919,"byte_end":25975,"line_start":807,"line_end":807,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25980,"byte_end":25987,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25992,"byte_end":26019,"line_start":809,"line_end":809,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27038,"byte_end":27047,"line_start":839,"line_end":839,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::Itertools::kmerge_by","value":"pub fn kmerge_by<F>(Self, F)\n-> KMergeBy<<Self::Item as IntoIterator>::IntoIter, F> where Self: Sized,\nSelf::Item: IntoIterator,\nF: FnMut(&<Self::Item as IntoIterator>::Item,\n         &<Self::Item as IntoIterator>::Item) -> bool","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them according to the given closure.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that flattens an iterator of iterators by","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26257,"byte_end":26329,"line_start":818,"line_end":818,"column_start":5,"column_end":77}},{"value":"/ merging them according to the given closure.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26334,"byte_end":26382,"line_start":819,"line_end":819,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26387,"byte_end":26390,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ The closure `first` is called with two elements *a*, *b* and should","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26395,"byte_end":26466,"line_start":821,"line_end":821,"column_start":5,"column_end":76}},{"value":"/ return `true` if *a* is ordered before *b*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26471,"byte_end":26518,"line_start":822,"line_end":822,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26523,"byte_end":26526,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ If all base iterators are sorted according to `first`, the result is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26531,"byte_end":26603,"line_start":824,"line_end":824,"column_start":5,"column_end":77}},{"value":"/ sorted.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26608,"byte_end":26619,"line_start":825,"line_end":825,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26624,"byte_end":26627,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26632,"byte_end":26674,"line_start":827,"line_end":827,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26679,"byte_end":26682,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26687,"byte_end":26694,"line_start":829,"line_end":829,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26699,"byte_end":26728,"line_start":830,"line_end":830,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26733,"byte_end":26736,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ let a = vec![-1f64, 2., 3., -5., 6., -7.];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26741,"byte_end":26787,"line_start":832,"line_end":832,"column_start":5,"column_end":51}},{"value":"/ let b = vec![0., 2., -4.];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26792,"byte_end":26822,"line_start":833,"line_end":833,"column_start":5,"column_end":35}},{"value":"/ let mut it = vec![a, b].into_iter().kmerge_by(|a, b| a.abs() < b.abs());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26827,"byte_end":26903,"line_start":834,"line_end":834,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(it.next(), Some(0.));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26908,"byte_end":26944,"line_start":835,"line_end":835,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(it.last(), Some(-7.));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26949,"byte_end":26986,"line_start":836,"line_end":836,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26991,"byte_end":26998,"line_start":837,"line_end":837,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27003,"byte_end":27030,"line_start":838,"line_end":838,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27799,"byte_end":27816,"line_start":860,"line_end":860,"column_start":8,"column_end":25},"name":"cartesian_product","qualname":"::Itertools::cartesian_product","value":"pub fn cartesian_product<J>(Self, J) -> Product<Self, J::IntoIter> where\nSelf: Sized, Self::Item: Clone, J: IntoIterator, J::IntoIter: Clone","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `self` and `J`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27373,"byte_end":27447,"line_start":849,"line_end":849,"column_start":5,"column_end":79}},{"value":"/ the element sets of two iterators `self` and `J`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27452,"byte_end":27505,"line_start":850,"line_end":850,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27510,"byte_end":27513,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(Self::Item, J::Item)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27518,"byte_end":27571,"line_start":852,"line_end":852,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27576,"byte_end":27579,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27584,"byte_end":27591,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27596,"byte_end":27625,"line_start":855,"line_end":855,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27630,"byte_end":27633,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ let it = (0..2).cartesian_product(\"αβ\".chars());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27638,"byte_end":27692,"line_start":857,"line_end":857,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(it, vec![(0, 'α'), (0, 'β'), (1, 'α'), (1, 'β')]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27697,"byte_end":27779,"line_start":858,"line_end":858,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27784,"byte_end":27791,"line_start":859,"line_end":859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29271,"byte_end":29294,"line_start":895,"line_end":895,"column_start":8,"column_end":31},"name":"multi_cartesian_product","qualname":"::Itertools::multi_cartesian_product","value":"pub fn multi_cartesian_product(Self)\n-> MultiProduct<<Self::Item as IntoIterator>::IntoIter> where Self: Iterator +\nSized, Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::IntoIter: Clone,\n<Self::Item as IntoIterator>::Item: Clone","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n all subiterators returned by meta-iterator `self`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28068,"byte_end":28142,"line_start":869,"line_end":869,"column_start":5,"column_end":79}},{"value":"/ all subiterators returned by meta-iterator `self`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28147,"byte_end":28201,"line_start":870,"line_end":870,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28206,"byte_end":28209,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ All provided iterators must yield the same `Item` type. To generate","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28214,"byte_end":28285,"line_start":872,"line_end":872,"column_start":5,"column_end":76}},{"value":"/ the product of iterators yielding multiple types, use the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28290,"byte_end":28351,"line_start":873,"line_end":873,"column_start":5,"column_end":66}},{"value":"/ [`iproduct`](macro.iproduct.html) macro instead.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28356,"byte_end":28408,"line_start":874,"line_end":874,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28413,"byte_end":28416,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28421,"byte_end":28424,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `Vec<T>`, where `T` is the iterator element","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28429,"byte_end":28505,"line_start":877,"line_end":877,"column_start":5,"column_end":81}},{"value":"/ of the subiterators.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28510,"byte_end":28534,"line_start":878,"line_end":878,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28539,"byte_end":28542,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28547,"byte_end":28554,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28559,"byte_end":28588,"line_start":881,"line_end":881,"column_start":5,"column_end":34}},{"value":"/ let mut multi_prod = (0..3).map(|i| (i * 2)..(i * 2 + 2))","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28593,"byte_end":28654,"line_start":882,"line_end":882,"column_start":5,"column_end":66}},{"value":"/     .multi_cartesian_product();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28659,"byte_end":28694,"line_start":883,"line_end":883,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 2, 4]));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28699,"byte_end":28754,"line_start":884,"line_end":884,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 2, 5]));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28759,"byte_end":28814,"line_start":885,"line_end":885,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 3, 4]));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28819,"byte_end":28874,"line_start":886,"line_end":886,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 3, 5]));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28879,"byte_end":28934,"line_start":887,"line_end":887,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 2, 4]));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28939,"byte_end":28994,"line_start":888,"line_end":888,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 2, 5]));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":28999,"byte_end":29054,"line_start":889,"line_end":889,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 3, 4]));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29059,"byte_end":29114,"line_start":890,"line_end":890,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 3, 5]));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29119,"byte_end":29174,"line_start":891,"line_end":891,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29179,"byte_end":29219,"line_start":892,"line_end":892,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29224,"byte_end":29231,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29236,"byte_end":29263,"line_start":894,"line_end":894,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30787,"byte_end":30795,"line_start":932,"line_end":932,"column_start":8,"column_end":16},"name":"coalesce","qualname":"::Itertools::coalesce","value":"pub fn coalesce<F>(Self, F) -> Coalesce<Self, F> where Self: Sized,\nF: FnMut(Self::Item, Self::Item) ->\nResult<Self::Item, (Self::Item, Self::Item)>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that uses the passed-in closure to\n optionally merge together consecutive elements.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that uses the passed-in closure to","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29617,"byte_end":29682,"line_start":904,"line_end":904,"column_start":5,"column_end":70}},{"value":"/ optionally merge together consecutive elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29687,"byte_end":29738,"line_start":905,"line_end":905,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29743,"byte_end":29746,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is passed two elements, `previous` and `current` and may","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29751,"byte_end":29827,"line_start":907,"line_end":907,"column_start":5,"column_end":81}},{"value":"/ return either (1) `Ok(combined)` to merge the two values or","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29832,"byte_end":29895,"line_start":908,"line_end":908,"column_start":5,"column_end":68}},{"value":"/ (2) `Err((previous', current'))` to indicate they can't be merged.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29900,"byte_end":29970,"line_start":909,"line_end":909,"column_start":5,"column_end":75}},{"value":"/ In (2), the value `previous'` is emitted by the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29975,"byte_end":30036,"line_start":910,"line_end":910,"column_start":5,"column_end":66}},{"value":"/ Either (1) `combined` or (2) `current'` becomes the previous value","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30041,"byte_end":30111,"line_start":911,"line_end":911,"column_start":5,"column_end":75}},{"value":"/ when coalesce continues with the next pair of elements to merge. The","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30116,"byte_end":30188,"line_start":912,"line_end":912,"column_start":5,"column_end":77}},{"value":"/ value that remains at the end is also emitted by the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30193,"byte_end":30259,"line_start":913,"line_end":913,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30264,"byte_end":30267,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30272,"byte_end":30314,"line_start":915,"line_end":915,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30319,"byte_end":30322,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30327,"byte_end":30356,"line_start":917,"line_end":917,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30361,"byte_end":30364,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30369,"byte_end":30376,"line_start":919,"line_end":919,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30381,"byte_end":30410,"line_start":920,"line_end":920,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30415,"byte_end":30418,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ // sum same-sign runs together","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30423,"byte_end":30457,"line_start":922,"line_end":922,"column_start":5,"column_end":39}},{"value":"/ let data = vec![-1., -2., -3., 3., 1., 0., -1.];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30462,"byte_end":30514,"line_start":923,"line_end":923,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(data.into_iter().coalesce(|x, y|","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30519,"byte_end":30579,"line_start":924,"line_end":924,"column_start":5,"column_end":65}},{"value":"/         if (x >= 0.) == (y >= 0.) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30584,"byte_end":30623,"line_start":925,"line_end":925,"column_start":5,"column_end":44}},{"value":"/             Ok(x + y)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30628,"byte_end":30653,"line_start":926,"line_end":926,"column_start":5,"column_end":30}},{"value":"/         } else {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30658,"byte_end":30678,"line_start":927,"line_end":927,"column_start":5,"column_end":25}},{"value":"/             Err((x, y))","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30683,"byte_end":30710,"line_start":928,"line_end":928,"column_start":5,"column_end":32}},{"value":"/         }),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30715,"byte_end":30730,"line_start":929,"line_end":929,"column_start":5,"column_end":20}},{"value":"/         vec![-6., 4., -1.]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30735,"byte_end":30767,"line_start":930,"line_end":930,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30772,"byte_end":30779,"line_start":931,"line_end":931,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31509,"byte_end":31514,"line_start":954,"line_end":954,"column_start":8,"column_end":13},"name":"dedup","qualname":"::Itertools::dedup","value":"pub fn dedup(Self) -> Dedup<Self> where Self: Sized, Self::Item: PartialEq","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[{"value":"/ Remove duplicates from sections of consecutive identical elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31030,"byte_end":31100,"line_start":940,"line_end":940,"column_start":5,"column_end":75}},{"value":"/ If the iterator is sorted, all elements will be unique.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31105,"byte_end":31164,"line_start":941,"line_end":941,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31169,"byte_end":31172,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31177,"byte_end":31219,"line_start":943,"line_end":943,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31224,"byte_end":31227,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31232,"byte_end":31261,"line_start":945,"line_end":945,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31266,"byte_end":31269,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31274,"byte_end":31281,"line_start":947,"line_end":947,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31286,"byte_end":31315,"line_start":948,"line_end":948,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31320,"byte_end":31323,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1., 1., 2., 3., 3., 2., 2.];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31328,"byte_end":31376,"line_start":950,"line_end":950,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().dedup(),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31381,"byte_end":31434,"line_start":951,"line_end":951,"column_start":5,"column_end":58}},{"value":"/                         vec![1., 2., 3., 2.]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31439,"byte_end":31489,"line_start":952,"line_end":952,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31494,"byte_end":31501,"line_start":953,"line_end":953,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32257,"byte_end":32265,"line_start":976,"line_end":976,"column_start":8,"column_end":16},"name":"dedup_by","qualname":"::Itertools::dedup_by","value":"pub fn dedup_by<Cmp>(Self, Cmp) -> DedupBy<Self, Cmp> where Self: Sized,\nCmp: FnMut(&Self::Item, &Self::Item) -> bool","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements,\n determining equality using a comparison function.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[{"value":"/ Remove duplicates from sections of consecutive identical elements,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31647,"byte_end":31717,"line_start":961,"line_end":961,"column_start":5,"column_end":75}},{"value":"/ determining equality using a comparison function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31722,"byte_end":31775,"line_start":962,"line_end":962,"column_start":5,"column_end":58}},{"value":"/ If the iterator is sorted, all elements will be unique.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31780,"byte_end":31839,"line_start":963,"line_end":963,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31844,"byte_end":31847,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31852,"byte_end":31894,"line_start":965,"line_end":965,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31899,"byte_end":31902,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31907,"byte_end":31936,"line_start":967,"line_end":967,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31941,"byte_end":31944,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31949,"byte_end":31956,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31961,"byte_end":31990,"line_start":970,"line_end":970,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31995,"byte_end":31998,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ let data = vec![(0, 1.), (1, 1.), (0, 2.), (0, 3.), (1, 3.), (1, 2.), (2, 2.)];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32003,"byte_end":32086,"line_start":972,"line_end":972,"column_start":5,"column_end":88}},{"value":"/ itertools::assert_equal(data.into_iter().dedup_by(|x, y| x.1==y.1),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32091,"byte_end":32162,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/                         vec![(0, 1.), (0, 2.), (0, 3.), (1, 2.)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32167,"byte_end":32237,"line_start":974,"line_end":974,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32242,"byte_end":32249,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33007,"byte_end":33013,"line_start":998,"line_end":998,"column_start":8,"column_end":14},"name":"unique","qualname":"::Itertools::unique","value":"pub fn unique(Self) -> Unique<Self> where Self: Sized, Self::Item: Clone +\nEq + Hash","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration. Duplicates\n are detected using hash and equality.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32449,"byte_end":32515,"line_start":983,"line_end":983,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration. Duplicates","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32520,"byte_end":32583,"line_start":984,"line_end":984,"column_start":5,"column_end":68}},{"value":"/ are detected using hash and equality.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32588,"byte_end":32629,"line_start":985,"line_end":985,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32634,"byte_end":32637,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Clones of visited elements are stored in a hash set in the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32642,"byte_end":32704,"line_start":987,"line_end":987,"column_start":5,"column_end":67}},{"value":"/ iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32709,"byte_end":32722,"line_start":988,"line_end":988,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32727,"byte_end":32730,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32735,"byte_end":32742,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32747,"byte_end":32776,"line_start":991,"line_end":991,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32781,"byte_end":32784,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ let data = vec![10, 20, 30, 20, 40, 10, 50];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32789,"byte_end":32837,"line_start":993,"line_end":993,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().unique(),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32842,"byte_end":32896,"line_start":994,"line_end":994,"column_start":5,"column_end":59}},{"value":"/                         vec![10, 20, 30, 40, 50]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32901,"byte_end":32955,"line_start":995,"line_end":995,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32960,"byte_end":32967,"line_start":996,"line_end":996,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32972,"byte_end":32999,"line_start":997,"line_end":997,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33770,"byte_end":33779,"line_start":1020,"line_end":1020,"column_start":8,"column_end":17},"name":"unique_by","qualname":"::Itertools::unique_by","value":"pub fn unique_by<V, F>(Self, F) -> UniqueBy<Self, V, F> where Self: Sized,\nV: Eq + Hash, F: FnMut(&Self::Item) -> V","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33158,"byte_end":33224,"line_start":1005,"line_end":1005,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33229,"byte_end":33281,"line_start":1006,"line_end":1006,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33286,"byte_end":33289,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ Duplicates are detected by comparing the key they map to","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33294,"byte_end":33354,"line_start":1008,"line_end":1008,"column_start":5,"column_end":65}},{"value":"/ with the keying function `f` by hash and equality.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33359,"byte_end":33413,"line_start":1009,"line_end":1009,"column_start":5,"column_end":59}},{"value":"/ The keys are stored in a hash set in the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33418,"byte_end":33472,"line_start":1010,"line_end":1010,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33477,"byte_end":33480,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33485,"byte_end":33492,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33497,"byte_end":33526,"line_start":1013,"line_end":1013,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33531,"byte_end":33534,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let data = vec![\"a\", \"bb\", \"aa\", \"c\", \"ccc\"];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33539,"byte_end":33588,"line_start":1015,"line_end":1015,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(data.into_iter().unique_by(|s| s.len()),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33593,"byte_end":33661,"line_start":1016,"line_end":1016,"column_start":5,"column_end":73}},{"value":"/                         vec![\"a\", \"bb\", \"ccc\"]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33666,"byte_end":33718,"line_start":1017,"line_end":1017,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33723,"byte_end":33730,"line_start":1018,"line_end":1018,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33735,"byte_end":33762,"line_start":1019,"line_end":1019,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34516,"byte_end":34534,"line_start":1040,"line_end":1040,"column_start":8,"column_end":26},"name":"peeking_take_while","qualname":"::Itertools::peeking_take_while","value":"pub fn peeking_take_while<F>(&mut Self, F) -> PeekingTakeWhile<, Self, F>\nwhere Self: Sized + PeekingNext, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from this iterator and\n takes items while the closure `accept` returns `true`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that borrows from this iterator and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33975,"byte_end":34041,"line_start":1028,"line_end":1028,"column_start":5,"column_end":71}},{"value":"/ takes items while the closure `accept` returns `true`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34046,"byte_end":34104,"line_start":1029,"line_end":1029,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34109,"byte_end":34112,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This adaptor can only be used on iterators that implement `PeekingNext`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34117,"byte_end":34192,"line_start":1031,"line_end":1031,"column_start":5,"column_end":80}},{"value":"/ like `.peekable()`, `put_back` and a few other collection iterators.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34197,"byte_end":34269,"line_start":1032,"line_end":1032,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34274,"byte_end":34277,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ The last and rejected element (first `false`) is still available when","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34282,"byte_end":34355,"line_start":1034,"line_end":1034,"column_start":5,"column_end":78}},{"value":"/ `peeking_take_while` is done.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34360,"byte_end":34393,"line_start":1035,"line_end":1035,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34398,"byte_end":34401,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34406,"byte_end":34409,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ See also [`.take_while_ref()`](#method.take_while_ref)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34414,"byte_end":34472,"line_start":1038,"line_end":1038,"column_start":5,"column_end":63}},{"value":"/ which is a similar adaptor.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34477,"byte_end":34508,"line_start":1039,"line_end":1039,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35480,"byte_end":35494,"line_start":1065,"line_end":1065,"column_start":8,"column_end":22},"name":"take_while_ref","qualname":"::Itertools::take_while_ref","value":"pub fn take_while_ref<F>(&mut Self, F) -> TakeWhileRef<, Self, F> where\nSelf: Clone, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate `accept` returns `true`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34753,"byte_end":34825,"line_start":1047,"line_end":1047,"column_start":5,"column_end":77}},{"value":"/ to only pick off elements while the predicate `accept` returns `true`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34830,"byte_end":34904,"line_start":1048,"line_end":1048,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34909,"byte_end":34912,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ It uses the `Clone` trait to restore the original iterator so that the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34917,"byte_end":34991,"line_start":1050,"line_end":1050,"column_start":5,"column_end":79}},{"value":"/ last and rejected element (first `false`) is still available when","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34996,"byte_end":35065,"line_start":1051,"line_end":1051,"column_start":5,"column_end":74}},{"value":"/ `take_while_ref` is done.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35070,"byte_end":35099,"line_start":1052,"line_end":1052,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35104,"byte_end":35107,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35112,"byte_end":35119,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35124,"byte_end":35153,"line_start":1055,"line_end":1055,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35158,"byte_end":35161,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ let mut hexadecimals = \"0123456789abcdef\".chars();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35166,"byte_end":35220,"line_start":1057,"line_end":1057,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35225,"byte_end":35228,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ let decimals = hexadecimals.take_while_ref(|c| c.is_numeric())","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35233,"byte_end":35299,"line_start":1059,"line_end":1059,"column_start":5,"column_end":71}},{"value":"/                            .collect::<String>();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35304,"byte_end":35356,"line_start":1060,"line_end":1060,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(decimals, \"0123456789\");","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35361,"byte_end":35400,"line_start":1061,"line_end":1061,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(hexadecimals.next(), Some('a'));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35405,"byte_end":35452,"line_start":1062,"line_end":1062,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35457,"byte_end":35460,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35465,"byte_end":35472,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36160,"byte_end":36170,"line_start":1086,"line_end":1086,"column_start":8,"column_end":18},"name":"while_some","qualname":"::Itertools::while_some","value":"pub fn while_some<A>(Self) -> WhileSome<Self> where Self: Sized +\nIterator<Item = Option<A>>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35680,"byte_end":35753,"line_start":1072,"line_end":1072,"column_start":5,"column_end":78}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35758,"byte_end":35818,"line_start":1073,"line_end":1073,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35823,"byte_end":35826,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `A`, the unwrapped element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35831,"byte_end":35887,"line_start":1075,"line_end":1075,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35892,"byte_end":35895,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35900,"byte_end":35907,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35912,"byte_end":35941,"line_start":1078,"line_end":1078,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35946,"byte_end":35949,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ // List all hexadecimal digits","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35954,"byte_end":35988,"line_start":1080,"line_end":1080,"column_start":5,"column_end":39}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35993,"byte_end":36021,"line_start":1081,"line_end":1081,"column_start":5,"column_end":33}},{"value":"/     (0..).map(|i| std::char::from_digit(i, 16)).while_some(),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36026,"byte_end":36091,"line_start":1082,"line_end":1082,"column_start":5,"column_end":70}},{"value":"/     \"0123456789abcdef\".chars());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36096,"byte_end":36132,"line_start":1083,"line_end":1083,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36137,"byte_end":36140,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36145,"byte_end":36152,"line_start":1085,"line_end":1085,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37601,"byte_end":37619,"line_start":1125,"line_end":1125,"column_start":8,"column_end":26},"name":"tuple_combinations","qualname":"::Itertools::tuple_combinations","value":"pub fn tuple_combinations<T>(Self) -> TupleCombinations<Self, T> where\nSelf: Sized + Clone, Self::Item: Clone, T: adaptors::HasCombination<Self>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the combinations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the combinations of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36306,"byte_end":36379,"line_start":1092,"line_end":1092,"column_start":5,"column_end":78}},{"value":"/ elements from an iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36384,"byte_end":36414,"line_start":1093,"line_end":1093,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36419,"byte_end":36422,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ Iterator element can be any homogeneous tuple of type `Self::Item` with","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36427,"byte_end":36502,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ size up to 4.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36507,"byte_end":36524,"line_start":1096,"line_end":1096,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36529,"byte_end":36532,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36537,"byte_end":36544,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36549,"byte_end":36578,"line_start":1099,"line_end":1099,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36583,"byte_end":36586,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36591,"byte_end":36618,"line_start":1101,"line_end":1101,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuple_combinations() {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36623,"byte_end":36670,"line_start":1102,"line_end":1102,"column_start":5,"column_end":52}},{"value":"/     v.push((a, b));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36675,"byte_end":36698,"line_start":1103,"line_end":1103,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36703,"byte_end":36708,"line_start":1104,"line_end":1104,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36713,"byte_end":36785,"line_start":1105,"line_end":1105,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36790,"byte_end":36793,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..5).tuple_combinations();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36798,"byte_end":36843,"line_start":1107,"line_end":1107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36848,"byte_end":36891,"line_start":1108,"line_end":1108,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((1, 2, 4)), it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36896,"byte_end":36939,"line_start":1109,"line_end":1109,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((1, 3, 4)), it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36944,"byte_end":36987,"line_start":1110,"line_end":1110,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((2, 3, 4)), it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36992,"byte_end":37035,"line_start":1111,"line_end":1111,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37040,"byte_end":37072,"line_start":1112,"line_end":1112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37077,"byte_end":37080,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37085,"byte_end":37117,"line_start":1114,"line_end":1114,"column_start":5,"column_end":37}},{"value":"/ let it = (1..5).tuple_combinations::<(_, _, _)>();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37122,"byte_end":37176,"line_start":1115,"line_end":1115,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37181,"byte_end":37263,"line_start":1116,"line_end":1116,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37268,"byte_end":37271,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37276,"byte_end":37321,"line_start":1118,"line_end":1118,"column_start":5,"column_end":50}},{"value":"/ use itertools::TupleCombinations;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37326,"byte_end":37363,"line_start":1119,"line_end":1119,"column_start":5,"column_end":42}},{"value":"/ use std::ops::Range;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37368,"byte_end":37392,"line_start":1120,"line_end":1120,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37397,"byte_end":37400,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ let it: TupleCombinations<Range<u32>, (u32, u32, u32)> = (1..5).tuple_combinations();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37405,"byte_end":37494,"line_start":1122,"line_end":1122,"column_start":5,"column_end":94}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37499,"byte_end":37581,"line_start":1123,"line_end":1123,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37586,"byte_end":37593,"line_start":1124,"line_end":1124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38828,"byte_end":38840,"line_start":1163,"line_end":1163,"column_start":8,"column_end":20},"name":"combinations","qualname":"::Itertools::combinations","value":"pub fn combinations(Self, usize) -> Combinations<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the `k`-length combinations of\n the elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the `k`-length combinations of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37836,"byte_end":37916,"line_start":1133,"line_end":1133,"column_start":5,"column_end":85}},{"value":"/ the elements from an iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37921,"byte_end":37955,"line_start":1134,"line_end":1134,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37960,"byte_end":37963,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>`. The iterator produces a new Vec per iteration,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37968,"byte_end":38062,"line_start":1136,"line_end":1136,"column_start":5,"column_end":99}},{"value":"/ and clones the iterator elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38067,"byte_end":38104,"line_start":1137,"line_end":1137,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38109,"byte_end":38112,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38117,"byte_end":38124,"line_start":1139,"line_end":1139,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38129,"byte_end":38158,"line_start":1140,"line_end":1140,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38163,"byte_end":38166,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ let it = (1..5).combinations(3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38171,"byte_end":38207,"line_start":1142,"line_end":1142,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38212,"byte_end":38249,"line_start":1143,"line_end":1143,"column_start":5,"column_end":42}},{"value":"/     vec![1, 2, 3],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38254,"byte_end":38276,"line_start":1144,"line_end":1144,"column_start":5,"column_end":27}},{"value":"/     vec![1, 2, 4],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38281,"byte_end":38303,"line_start":1145,"line_end":1145,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3, 4],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38308,"byte_end":38330,"line_start":1146,"line_end":1146,"column_start":5,"column_end":27}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38335,"byte_end":38357,"line_start":1147,"line_end":1147,"column_start":5,"column_end":27}},{"value":"/ ]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38362,"byte_end":38369,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38374,"byte_end":38381,"line_start":1149,"line_end":1149,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38386,"byte_end":38389,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ Note: Combinations does not take into account the equality of the iterated values.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38394,"byte_end":38480,"line_start":1151,"line_end":1151,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38485,"byte_end":38492,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38497,"byte_end":38526,"line_start":1153,"line_end":1153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38531,"byte_end":38534,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ let it = vec![1, 2, 2].into_iter().combinations(2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38539,"byte_end":38594,"line_start":1155,"line_end":1155,"column_start":5,"column_end":60}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38599,"byte_end":38636,"line_start":1156,"line_end":1156,"column_start":5,"column_end":42}},{"value":"/     vec![1, 2], // Note: these are the same","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38641,"byte_end":38688,"line_start":1157,"line_end":1157,"column_start":5,"column_end":52}},{"value":"/     vec![1, 2], // Note: these are the same","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38693,"byte_end":38740,"line_start":1158,"line_end":1158,"column_start":5,"column_end":52}},{"value":"/     vec![2, 2],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38745,"byte_end":38764,"line_start":1159,"line_end":1159,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38769,"byte_end":38776,"line_start":1160,"line_end":1160,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38781,"byte_end":38788,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38793,"byte_end":38820,"line_start":1162,"line_end":1162,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39647,"byte_end":39676,"line_start":1190,"line_end":1190,"column_start":8,"column_end":37},"name":"combinations_with_replacement","qualname":"::Itertools::combinations_with_replacement","value":"pub fn combinations_with_replacement(Self, usize)\n-> CombinationsWithReplacement<Self> where Self: Sized, Self::Item: Clone","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator that iterates over the `k`-length combinations of\n the elements from an iterator, with replacement.","sig":null,"attributes":[{"value":"/ Return an iterator that iterates over the `k`-length combinations of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38999,"byte_end":39071,"line_start":1170,"line_end":1170,"column_start":5,"column_end":77}},{"value":"/ the elements from an iterator, with replacement.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39076,"byte_end":39128,"line_start":1171,"line_end":1171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39133,"byte_end":39136,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>`. The iterator produces a new Vec per iteration,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39141,"byte_end":39235,"line_start":1173,"line_end":1173,"column_start":5,"column_end":99}},{"value":"/ and clones the iterator elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39240,"byte_end":39277,"line_start":1174,"line_end":1174,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39282,"byte_end":39285,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39290,"byte_end":39297,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39302,"byte_end":39331,"line_start":1177,"line_end":1177,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39336,"byte_end":39339,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ let it = (1..4).combinations_with_replacement(2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39344,"byte_end":39397,"line_start":1179,"line_end":1179,"column_start":5,"column_end":58}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39402,"byte_end":39439,"line_start":1180,"line_end":1180,"column_start":5,"column_end":42}},{"value":"/     vec![1, 1],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39444,"byte_end":39463,"line_start":1181,"line_end":1181,"column_start":5,"column_end":24}},{"value":"/     vec![1, 2],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39468,"byte_end":39487,"line_start":1182,"line_end":1182,"column_start":5,"column_end":24}},{"value":"/     vec![1, 3],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39492,"byte_end":39511,"line_start":1183,"line_end":1183,"column_start":5,"column_end":24}},{"value":"/     vec![2, 2],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39516,"byte_end":39535,"line_start":1184,"line_end":1184,"column_start":5,"column_end":24}},{"value":"/     vec![2, 3],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39540,"byte_end":39559,"line_start":1185,"line_end":1185,"column_start":5,"column_end":24}},{"value":"/     vec![3, 3],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39564,"byte_end":39583,"line_start":1186,"line_end":1186,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39588,"byte_end":39595,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39600,"byte_end":39607,"line_start":1188,"line_end":1188,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39612,"byte_end":39639,"line_start":1189,"line_end":1189,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41189,"byte_end":41201,"line_start":1236,"line_end":1236,"column_start":8,"column_end":20},"name":"permutations","qualname":"::Itertools::permutations","value":"pub fn permutations(Self, usize) -> Permutations<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over all k-permutations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over all k-permutations of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39883,"byte_end":39958,"line_start":1198,"line_end":1198,"column_start":5,"column_end":80}},{"value":"/ elements from an iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39963,"byte_end":39993,"line_start":1199,"line_end":1199,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39998,"byte_end":40001,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>` with length `k`. The iterator","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40006,"byte_end":40082,"line_start":1201,"line_end":1201,"column_start":5,"column_end":81}},{"value":"/ produces a new Vec per iteration, and clones the iterator elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40087,"byte_end":40158,"line_start":1202,"line_end":1202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40163,"byte_end":40166,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ If `k` is greater than the length of the input iterator, the resultant","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40171,"byte_end":40245,"line_start":1204,"line_end":1204,"column_start":5,"column_end":79}},{"value":"/ iterator adaptor will be empty.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40250,"byte_end":40285,"line_start":1205,"line_end":1205,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40290,"byte_end":40293,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40298,"byte_end":40305,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40310,"byte_end":40339,"line_start":1208,"line_end":1208,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40344,"byte_end":40347,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ let perms = (5..8).permutations(2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40352,"byte_end":40391,"line_start":1210,"line_end":1210,"column_start":5,"column_end":44}},{"value":"/ itertools::assert_equal(perms, vec![","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40396,"byte_end":40436,"line_start":1211,"line_end":1211,"column_start":5,"column_end":45}},{"value":"/     vec![5, 6],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40441,"byte_end":40460,"line_start":1212,"line_end":1212,"column_start":5,"column_end":24}},{"value":"/     vec![5, 7],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40465,"byte_end":40484,"line_start":1213,"line_end":1213,"column_start":5,"column_end":24}},{"value":"/     vec![6, 5],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40489,"byte_end":40508,"line_start":1214,"line_end":1214,"column_start":5,"column_end":24}},{"value":"/     vec![6, 7],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40513,"byte_end":40532,"line_start":1215,"line_end":1215,"column_start":5,"column_end":24}},{"value":"/     vec![7, 5],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40537,"byte_end":40556,"line_start":1216,"line_end":1216,"column_start":5,"column_end":24}},{"value":"/     vec![7, 6],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40561,"byte_end":40580,"line_start":1217,"line_end":1217,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40585,"byte_end":40592,"line_start":1218,"line_end":1218,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40597,"byte_end":40604,"line_start":1219,"line_end":1219,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40609,"byte_end":40612,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ Note: Permutations does not take into account the equality of the iterated values.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40617,"byte_end":40703,"line_start":1221,"line_end":1221,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40708,"byte_end":40711,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40716,"byte_end":40723,"line_start":1223,"line_end":1223,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40728,"byte_end":40757,"line_start":1224,"line_end":1224,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40762,"byte_end":40765,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ let it = vec![2, 2].into_iter().permutations(2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40770,"byte_end":40822,"line_start":1226,"line_end":1226,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40827,"byte_end":40864,"line_start":1227,"line_end":1227,"column_start":5,"column_end":42}},{"value":"/     vec![2, 2], // Note: these are the same","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40869,"byte_end":40916,"line_start":1228,"line_end":1228,"column_start":5,"column_end":52}},{"value":"/     vec![2, 2], // Note: these are the same","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40921,"byte_end":40968,"line_start":1229,"line_end":1229,"column_start":5,"column_end":52}},{"value":"/ ]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40973,"byte_end":40980,"line_start":1230,"line_end":1230,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40985,"byte_end":40992,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":40997,"byte_end":41000,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ Note: The source iterator is collected lazily, and will not be","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41005,"byte_end":41071,"line_start":1233,"line_end":1233,"column_start":5,"column_end":71}},{"value":"/ re-iterated if the permutations adaptor is completed and re-iterated.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41076,"byte_end":41149,"line_start":1234,"line_end":1234,"column_start":5,"column_end":78}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41154,"byte_end":41181,"line_start":1235,"line_end":1235,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42031,"byte_end":42040,"line_start":1260,"line_end":1260,"column_start":8,"column_end":17},"name":"pad_using","qualname":"::Itertools::pad_using","value":"pub fn pad_using<F>(Self, usize, F) -> PadUsing<Self, F> where Self: Sized,\nF: FnMut(usize) -> Self::Item","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that pads the sequence to a minimum length of\n `min` by filling missing elements using a closure `f`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that pads the sequence to a minimum length of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41360,"byte_end":41436,"line_start":1243,"line_end":1243,"column_start":5,"column_end":81}},{"value":"/ `min` by filling missing elements using a closure `f`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41441,"byte_end":41499,"line_start":1244,"line_end":1244,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41504,"byte_end":41507,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41512,"byte_end":41554,"line_start":1246,"line_end":1246,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41559,"byte_end":41562,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41567,"byte_end":41574,"line_start":1248,"line_end":1248,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41579,"byte_end":41608,"line_start":1249,"line_end":1249,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41613,"byte_end":41616,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41621,"byte_end":41664,"line_start":1251,"line_end":1251,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 10, 12, 14, 16, 18]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41669,"byte_end":41742,"line_start":1252,"line_end":1252,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41747,"byte_end":41750,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ let it = (0..10).pad_using(5, |i| 2*i);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41755,"byte_end":41798,"line_start":1254,"line_end":1254,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41803,"byte_end":41871,"line_start":1255,"line_end":1255,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41876,"byte_end":41879,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i).rev();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41884,"byte_end":41933,"line_start":1257,"line_end":1257,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![18, 16, 14, 12, 10, 4, 3, 2, 1, 0]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41938,"byte_end":42011,"line_start":1258,"line_end":1258,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42016,"byte_end":42023,"line_start":1259,"line_end":1259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42965,"byte_end":42978,"line_start":1286,"line_end":1286,"column_start":8,"column_end":21},"name":"with_position","qualname":"::Itertools::with_position","value":"pub fn with_position(Self) -> WithPosition<Self> where Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that wraps each element in a `Position` to\n ease special-case handling of the first or last elements.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that wraps each element in a `Position` to","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42219,"byte_end":42292,"line_start":1267,"line_end":1267,"column_start":5,"column_end":78}},{"value":"/ ease special-case handling of the first or last elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42297,"byte_end":42358,"line_start":1268,"line_end":1268,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42363,"byte_end":42366,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42371,"byte_end":42399,"line_start":1270,"line_end":1270,"column_start":5,"column_end":33}},{"value":"/ [`Position<Self::Item>`](enum.Position.html)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42404,"byte_end":42452,"line_start":1271,"line_end":1271,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42457,"byte_end":42460,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42465,"byte_end":42472,"line_start":1273,"line_end":1273,"column_start":5,"column_end":12}},{"value":"/ use itertools::{Itertools, Position};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42477,"byte_end":42518,"line_start":1274,"line_end":1274,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42523,"byte_end":42526,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ let it = (0..4).with_position();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42531,"byte_end":42567,"line_start":1276,"line_end":1276,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42572,"byte_end":42603,"line_start":1277,"line_end":1277,"column_start":5,"column_end":36}},{"value":"/                         vec![Position::First(0),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42608,"byte_end":42660,"line_start":1278,"line_end":1278,"column_start":5,"column_end":57}},{"value":"/                              Position::Middle(1),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42665,"byte_end":42718,"line_start":1279,"line_end":1279,"column_start":5,"column_end":58}},{"value":"/                              Position::Middle(2),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42723,"byte_end":42776,"line_start":1280,"line_end":1280,"column_start":5,"column_end":58}},{"value":"/                              Position::Last(3)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42781,"byte_end":42834,"line_start":1281,"line_end":1281,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42839,"byte_end":42842,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ let it = (0..1).with_position();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42847,"byte_end":42883,"line_start":1283,"line_end":1283,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it, vec![Position::Only(0)]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42888,"byte_end":42945,"line_start":1284,"line_end":1284,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42950,"byte_end":42957,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43657,"byte_end":43666,"line_start":1305,"line_end":1305,"column_start":8,"column_end":17},"name":"positions","qualname":"::Itertools::positions","value":"pub fn positions<P>(Self, P) -> Positions<Self, P> where Self: Sized,\nP: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that yields the indices of all elements\n satisfying a predicate, counted from the start of the iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that yields the indices of all elements","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43094,"byte_end":43164,"line_start":1292,"line_end":1292,"column_start":5,"column_end":75}},{"value":"/ satisfying a predicate, counted from the start of the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43169,"byte_end":43236,"line_start":1293,"line_end":1293,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43241,"byte_end":43244,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `iter.enumerate().filter(|(_, v)| predicate(v)).map(|(i, _)| i)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43249,"byte_end":43332,"line_start":1295,"line_end":1295,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43337,"byte_end":43340,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43345,"byte_end":43352,"line_start":1297,"line_end":1297,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43357,"byte_end":43386,"line_start":1298,"line_end":1298,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43391,"byte_end":43394,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 2, 3, 3, 4, 6, 7, 9];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43399,"byte_end":43443,"line_start":1300,"line_end":1300,"column_start":5,"column_end":49}},{"value":"/ itertools::assert_equal(data.iter().positions(|v| v % 2 == 0), vec![1, 4, 5]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43448,"byte_end":43530,"line_start":1301,"line_end":1301,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43535,"byte_end":43538,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(data.iter().positions(|v| v % 2 == 1).rev(), vec![7, 6, 3, 2, 0]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43543,"byte_end":43637,"line_start":1303,"line_end":1303,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43642,"byte_end":43649,"line_start":1304,"line_end":1304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44219,"byte_end":44225,"line_start":1322,"line_end":1322,"column_start":8,"column_end":14},"name":"update","qualname":"::Itertools::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where Self: Sized,\nF: FnMut(&mut Self::Item) -> ()","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies a mutating function\n to each element before yielding it.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that applies a mutating function","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43845,"byte_end":43908,"line_start":1312,"line_end":1312,"column_start":5,"column_end":68}},{"value":"/ to each element before yielding it.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43913,"byte_end":43952,"line_start":1313,"line_end":1313,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43957,"byte_end":43960,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43965,"byte_end":43972,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43977,"byte_end":44006,"line_start":1316,"line_end":1316,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44011,"byte_end":44014,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ let input = vec![vec![1], vec![3, 2, 1]];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44019,"byte_end":44064,"line_start":1318,"line_end":1318,"column_start":5,"column_end":50}},{"value":"/ let it = input.into_iter().update(|mut v| v.push(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44069,"byte_end":44126,"line_start":1319,"line_end":1319,"column_start":5,"column_end":62}},{"value":"/ itertools::assert_equal(it, vec![vec![1, 0], vec![3, 2, 1, 0]]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44131,"byte_end":44199,"line_start":1320,"line_end":1320,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44204,"byte_end":44211,"line_start":1321,"line_end":1321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44850,"byte_end":44860,"line_start":1343,"line_end":1343,"column_start":8,"column_end":18},"name":"next_tuple","qualname":"::Itertools::next_tuple","value":"pub fn next_tuple<T>(&mut Self) -> Option<T> where Self: Sized + Iterator<Item\n= T::Item>, T: traits::HomogeneousTuple","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Advances the iterator and returns the next items grouped in a tuple of\n a specific size (up to 4).","sig":null,"attributes":[{"value":"/ Advances the iterator and returns the next items grouped in a tuple of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44418,"byte_end":44492,"line_start":1330,"line_end":1330,"column_start":5,"column_end":79}},{"value":"/ a specific size (up to 4).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44497,"byte_end":44527,"line_start":1331,"line_end":1331,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44532,"byte_end":44535,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ If there are enough elements to be grouped in a tuple, then the tuple is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44540,"byte_end":44616,"line_start":1333,"line_end":1333,"column_start":5,"column_end":81}},{"value":"/ returned inside `Some`, otherwise `None` is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44621,"byte_end":44678,"line_start":1334,"line_end":1334,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44683,"byte_end":44686,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44691,"byte_end":44698,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44703,"byte_end":44732,"line_start":1337,"line_end":1337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44737,"byte_end":44740,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ let mut iter = 1..5;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44745,"byte_end":44769,"line_start":1339,"line_end":1339,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44774,"byte_end":44777,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some((1, 2)), iter.next_tuple());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44782,"byte_end":44830,"line_start":1341,"line_end":1341,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44835,"byte_end":44842,"line_start":1342,"line_end":1342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45602,"byte_end":45615,"line_start":1368,"line_end":1368,"column_start":8,"column_end":21},"name":"collect_tuple","qualname":"::Itertools::collect_tuple","value":"pub fn collect_tuple<T>(Self) -> Option<T> where Self: Sized + Iterator<Item =\nT::Item>, T: traits::HomogeneousTuple","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Collects all items from the iterator into a tuple of a specific size\n (up to 4).","sig":null,"attributes":[{"value":"/ Collects all items from the iterator into a tuple of a specific size","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45043,"byte_end":45115,"line_start":1350,"line_end":1350,"column_start":5,"column_end":77}},{"value":"/ (up to 4).","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45120,"byte_end":45134,"line_start":1351,"line_end":1351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45139,"byte_end":45142,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ If the number of elements inside the iterator is **exactly** equal to","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45147,"byte_end":45220,"line_start":1353,"line_end":1353,"column_start":5,"column_end":78}},{"value":"/ the tuple size, then the tuple is returned inside `Some`, otherwise","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45225,"byte_end":45296,"line_start":1354,"line_end":1354,"column_start":5,"column_end":76}},{"value":"/ `None` is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45301,"byte_end":45324,"line_start":1355,"line_end":1355,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45329,"byte_end":45332,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45337,"byte_end":45344,"line_start":1357,"line_end":1357,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45349,"byte_end":45378,"line_start":1358,"line_end":1358,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45383,"byte_end":45386,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ let iter = 1..3;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45391,"byte_end":45411,"line_start":1360,"line_end":1360,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45416,"byte_end":45419,"line_start":1361,"line_end":1361,"column_start":5,"column_end":8}},{"value":"/ if let Some((x, y)) = iter.collect_tuple() {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45424,"byte_end":45472,"line_start":1362,"line_end":1362,"column_start":5,"column_end":53}},{"value":"/     assert_eq!((x, y), (1, 2))","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45477,"byte_end":45511,"line_start":1363,"line_end":1363,"column_start":5,"column_end":39}},{"value":"/ } else {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45516,"byte_end":45528,"line_start":1364,"line_end":1364,"column_start":5,"column_end":17}},{"value":"/     panic!(\"Expected two elements\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45533,"byte_end":45572,"line_start":1365,"line_end":1365,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45577,"byte_end":45582,"line_start":1366,"line_end":1366,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45587,"byte_end":45594,"line_start":1367,"line_end":1367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46296,"byte_end":46309,"line_start":1392,"line_end":1392,"column_start":8,"column_end":21},"name":"find_position","qualname":"::Itertools::find_position","value":"pub fn find_position<P>(&mut Self, P) -> Option<(usize, Self::Item)> where\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Find the position and value of the first element satisfying a predicate.","sig":null,"attributes":[{"value":"/ Find the position and value of the first element satisfying a predicate.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45948,"byte_end":46024,"line_start":1382,"line_end":1382,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46029,"byte_end":46032,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ The iterator is not advanced past the first element found.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46037,"byte_end":46099,"line_start":1384,"line_end":1384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46104,"byte_end":46107,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46112,"byte_end":46119,"line_start":1386,"line_end":1386,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46124,"byte_end":46153,"line_start":1387,"line_end":1387,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46158,"byte_end":46161,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ let text = \"Hα\";","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46166,"byte_end":46187,"line_start":1389,"line_end":1389,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(text.chars().find_position(|ch| ch.is_lowercase()), Some((1, 'α')));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46192,"byte_end":46276,"line_start":1390,"line_end":1390,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46281,"byte_end":46288,"line_start":1391,"line_end":1391,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47158,"byte_end":47167,"line_start":1421,"line_end":1421,"column_start":8,"column_end":17},"name":"all_equal","qualname":"::Itertools::all_equal","value":"pub fn all_equal(&mut Self) -> bool where Self: Sized, Self::Item: PartialEq","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Check whether all elements compare equal.","sig":null,"attributes":[{"value":"/ Check whether all elements compare equal.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46619,"byte_end":46664,"line_start":1405,"line_end":1405,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46669,"byte_end":46672,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ Empty iterators are considered to have equal elements:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46677,"byte_end":46735,"line_start":1407,"line_end":1407,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46740,"byte_end":46743,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46748,"byte_end":46755,"line_start":1409,"line_end":1409,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46760,"byte_end":46789,"line_start":1410,"line_end":1410,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46794,"byte_end":46797,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46802,"byte_end":46855,"line_start":1412,"line_end":1412,"column_start":5,"column_end":58}},{"value":"/ assert!(!data.iter().all_equal());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46860,"byte_end":46898,"line_start":1413,"line_end":1413,"column_start":5,"column_end":43}},{"value":"/ assert!(data[0..3].iter().all_equal());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46903,"byte_end":46946,"line_start":1414,"line_end":1414,"column_start":5,"column_end":48}},{"value":"/ assert!(data[3..5].iter().all_equal());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46951,"byte_end":46994,"line_start":1415,"line_end":1415,"column_start":5,"column_end":48}},{"value":"/ assert!(data[5..8].iter().all_equal());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46999,"byte_end":47042,"line_start":1416,"line_end":1416,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47047,"byte_end":47050,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ let data : Option<usize> = None;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47055,"byte_end":47091,"line_start":1418,"line_end":1418,"column_start":5,"column_end":41}},{"value":"/ assert!(data.into_iter().all_equal());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47096,"byte_end":47138,"line_start":1419,"line_end":1419,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47143,"byte_end":47150,"line_start":1420,"line_end":1420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47945,"byte_end":47953,"line_start":1446,"line_end":1446,"column_start":8,"column_end":16},"name":"dropping","qualname":"::Itertools::dropping","value":"pub fn dropping(Self, usize) -> Self where Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Consume the first `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the first `n` elements from the iterator eagerly,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47377,"byte_end":47438,"line_start":1431,"line_end":1431,"column_start":5,"column_end":66}},{"value":"/ and return the same iterator again.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47443,"byte_end":47482,"line_start":1432,"line_end":1432,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47487,"byte_end":47490,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ It works similarly to *.skip(* `n` *)* except it is eager and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47495,"byte_end":47560,"line_start":1434,"line_end":1434,"column_start":5,"column_end":70}},{"value":"/ preserves the iterator type.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47565,"byte_end":47597,"line_start":1435,"line_end":1435,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47602,"byte_end":47605,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47610,"byte_end":47617,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47622,"byte_end":47651,"line_start":1438,"line_end":1438,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47656,"byte_end":47659,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ let mut iter = \"αβγ\".chars().dropping(2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47664,"byte_end":47712,"line_start":1440,"line_end":1440,"column_start":5,"column_end":50}},{"value":"/ itertools::assert_equal(iter, \"γ\".chars());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47717,"byte_end":47765,"line_start":1441,"line_end":1441,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47770,"byte_end":47777,"line_start":1442,"line_end":1442,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47782,"byte_end":47785,"line_start":1443,"line_end":1443,"column_start":5,"column_end":8}},{"value":"/ *Fusing notes: if the iterator is exhausted by dropping,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47790,"byte_end":47850,"line_start":1444,"line_end":1444,"column_start":5,"column_end":65}},{"value":"/ the result of calling `.next()` again depends on the iterator implementation.*","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47855,"byte_end":47937,"line_start":1445,"line_end":1445,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48646,"byte_end":48659,"line_start":1470,"line_end":1470,"column_start":8,"column_end":21},"name":"dropping_back","qualname":"::Itertools::dropping_back","value":"pub fn dropping_back(Self, usize) -> Self where Self: Sized,\nSelf: DoubleEndedIterator","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Consume the last `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the last `n` elements from the iterator eagerly,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48096,"byte_end":48156,"line_start":1455,"line_end":1455,"column_start":5,"column_end":65}},{"value":"/ and return the same iterator again.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48161,"byte_end":48200,"line_start":1456,"line_end":1456,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48205,"byte_end":48208,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ This is only possible on double ended iterators. `n` may be","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48213,"byte_end":48276,"line_start":1458,"line_end":1458,"column_start":5,"column_end":68}},{"value":"/ larger than the number of elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48281,"byte_end":48320,"line_start":1459,"line_end":1459,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48325,"byte_end":48328,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ Note: This method is eager, dropping the back elements immediately and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48333,"byte_end":48407,"line_start":1461,"line_end":1461,"column_start":5,"column_end":79}},{"value":"/ preserves the iterator type.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48412,"byte_end":48444,"line_start":1462,"line_end":1462,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48449,"byte_end":48452,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48457,"byte_end":48464,"line_start":1464,"line_end":1464,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48469,"byte_end":48498,"line_start":1465,"line_end":1465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48503,"byte_end":48506,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ let init = vec![0, 3, 6, 9].into_iter().dropping_back(1);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48511,"byte_end":48572,"line_start":1467,"line_end":1467,"column_start":5,"column_end":66}},{"value":"/ itertools::assert_equal(init, vec![0, 3, 6]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48577,"byte_end":48626,"line_start":1468,"line_end":1468,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48631,"byte_end":48638,"line_start":1469,"line_end":1469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49445,"byte_end":49452,"line_start":1498,"line_end":1498,"column_start":8,"column_end":15},"name":"foreach","qualname":"::Itertools::foreach","value":"pub fn foreach<F>(Self, F) where F: FnMut(Self::Item) -> (), Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Run the closure `f` eagerly on each element of the iterator.","sig":null,"attributes":[{"value":"/ Run the closure `f` eagerly on each element of the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48856,"byte_end":48920,"line_start":1480,"line_end":1480,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48925,"byte_end":48928,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ Consumes the iterator until its end.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48933,"byte_end":48973,"line_start":1482,"line_end":1482,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48978,"byte_end":48981,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48986,"byte_end":48993,"line_start":1484,"line_end":1484,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48998,"byte_end":49031,"line_start":1485,"line_end":1485,"column_start":5,"column_end":38}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49036,"byte_end":49065,"line_start":1486,"line_end":1486,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49070,"byte_end":49073,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49078,"byte_end":49107,"line_start":1488,"line_end":1488,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49112,"byte_end":49115,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ // use .foreach() to apply a function to each value -- sending it","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49120,"byte_end":49189,"line_start":1490,"line_end":1490,"column_start":5,"column_end":74}},{"value":"/ (0..5).map(|x| x * 2 + 1).foreach(|x| { tx.send(x).unwrap(); } );","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49194,"byte_end":49263,"line_start":1491,"line_end":1491,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49268,"byte_end":49271,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ drop(tx);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49276,"byte_end":49289,"line_start":1493,"line_end":1493,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49294,"byte_end":49297,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(rx.iter(), vec![1, 3, 5, 7, 9]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49302,"byte_end":49362,"line_start":1495,"line_end":1495,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49367,"byte_end":49374,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use .for_each() instead\", since = \"0.8\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49379,"byte_end":49437,"line_start":1497,"line_end":1497,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50083,"byte_end":50089,"line_start":1518,"line_end":1518,"column_start":8,"column_end":14},"name":"concat","qualname":"::Itertools::concat","value":"pub fn concat(Self) -> Self::Item where Self: Sized,\nSelf::Item: Extend<<<Self as Iterator>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[{"value":"/ Combine all an iterator's elements into one element by using `Extend`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49573,"byte_end":49647,"line_start":1505,"line_end":1505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49652,"byte_end":49655,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with each of the rest of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49660,"byte_end":49735,"line_start":1507,"line_end":1507,"column_start":5,"column_end":80}},{"value":"/ items of the iterator. If the iterator is empty, the default value of","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49740,"byte_end":49813,"line_start":1508,"line_end":1508,"column_start":5,"column_end":78}},{"value":"/ `I::Item` is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49818,"byte_end":49844,"line_start":1509,"line_end":1509,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49849,"byte_end":49852,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49857,"byte_end":49868,"line_start":1511,"line_end":1511,"column_start":5,"column_end":16}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49873,"byte_end":49902,"line_start":1512,"line_end":1512,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49907,"byte_end":49910,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ let input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49915,"byte_end":49972,"line_start":1514,"line_end":1514,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(input.into_iter().concat(),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49977,"byte_end":50019,"line_start":1515,"line_end":1515,"column_start":5,"column_end":47}},{"value":"/            vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50024,"byte_end":50063,"line_start":1516,"line_end":1516,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50068,"byte_end":50075,"line_start":1517,"line_end":1517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50417,"byte_end":50428,"line_start":1528,"line_end":1528,"column_start":8,"column_end":19},"name":"collect_vec","qualname":"::Itertools::collect_vec","value":"pub fn collect_vec(Self) -> Vec<Self::Item> where Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" `.collect_vec()` is simply a type specialization of `.collect()`,\n for convenience.\n","sig":null,"attributes":[{"value":"/ `.collect_vec()` is simply a type specialization of `.collect()`,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50283,"byte_end":50352,"line_start":1525,"line_end":1525,"column_start":5,"column_end":74}},{"value":"/ for convenience.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50357,"byte_end":50377,"line_start":1526,"line_end":1526,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50382,"byte_end":50409,"line_start":1527,"line_end":1527,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51070,"byte_end":51081,"line_start":1555,"line_end":1555,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::Itertools::try_collect","value":"pub fn try_collect<T, U, E>(Self) -> Result<U, E> where Self: Sized +\nIterator<Item = Result<T, E>>, Result<U, E>: FromIterator<Result<T, E>>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" `.try_collect()` is more convenient way of writing\n `.collect::<Result<_, _>>()`","sig":null,"attributes":[{"value":"/ `.try_collect()` is more convenient way of writing","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50520,"byte_end":50574,"line_start":1534,"line_end":1534,"column_start":5,"column_end":59}},{"value":"/ `.collect::<Result<_, _>>()`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50579,"byte_end":50611,"line_start":1535,"line_end":1535,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50616,"byte_end":50619,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50624,"byte_end":50637,"line_start":1537,"line_end":1537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50642,"byte_end":50645,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50650,"byte_end":50657,"line_start":1539,"line_end":1539,"column_start":5,"column_end":12}},{"value":"/ use std::{fs, io};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50662,"byte_end":50684,"line_start":1540,"line_end":1540,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50689,"byte_end":50718,"line_start":1541,"line_end":1541,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50723,"byte_end":50726,"line_start":1542,"line_end":1542,"column_start":5,"column_end":8}},{"value":"/ fn process_dir_entries(entries: &[fs::DirEntry]) {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50731,"byte_end":50785,"line_start":1543,"line_end":1543,"column_start":5,"column_end":59}},{"value":"/     // ...","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50790,"byte_end":50804,"line_start":1544,"line_end":1544,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50809,"byte_end":50814,"line_start":1545,"line_end":1545,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50819,"byte_end":50822,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ fn do_stuff() -> std::io::Result<()> {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50827,"byte_end":50869,"line_start":1547,"line_end":1547,"column_start":5,"column_end":47}},{"value":"/     let entries: Vec<_> = fs::read_dir(\".\")?.try_collect()?;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50874,"byte_end":50938,"line_start":1548,"line_end":1548,"column_start":5,"column_end":69}},{"value":"/     process_dir_entries(&entries);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50943,"byte_end":50981,"line_start":1549,"line_end":1549,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50986,"byte_end":50989,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50994,"byte_end":51008,"line_start":1551,"line_end":1551,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51013,"byte_end":51018,"line_start":1552,"line_end":1552,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51023,"byte_end":51030,"line_start":1553,"line_end":1553,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51035,"byte_end":51062,"line_start":1554,"line_end":1554,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51791,"byte_end":51799,"line_start":1579,"line_end":1579,"column_start":8,"column_end":16},"name":"set_from","qualname":"::Itertools::set_from","value":"pub fn set_from<'a, A: 'a, J>(&mut Self, J) -> usize where Self: Iterator<Item\n= &'a mut A>, J: IntoIterator<Item = A>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Assign to each reference in `self` from the `from` iterator,\n stopping at the shortest of the two iterators.","sig":null,"attributes":[{"value":"/ Assign to each reference in `self` from the `from` iterator,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51266,"byte_end":51330,"line_start":1563,"line_end":1563,"column_start":5,"column_end":69}},{"value":"/ stopping at the shortest of the two iterators.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51335,"byte_end":51385,"line_start":1564,"line_end":1564,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51390,"byte_end":51393,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ The `from` iterator is queried for its next element before the `self`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51398,"byte_end":51471,"line_start":1566,"line_end":1566,"column_start":5,"column_end":78}},{"value":"/ iterator, and if either is exhausted the method is done.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51476,"byte_end":51536,"line_start":1567,"line_end":1567,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51541,"byte_end":51544,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ Return the number of elements written.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51549,"byte_end":51591,"line_start":1569,"line_end":1569,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51596,"byte_end":51599,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51604,"byte_end":51611,"line_start":1571,"line_end":1571,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51616,"byte_end":51645,"line_start":1572,"line_end":1572,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51650,"byte_end":51653,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ let mut xs = [0; 4];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51658,"byte_end":51682,"line_start":1574,"line_end":1574,"column_start":5,"column_end":29}},{"value":"/ xs.iter_mut().set_from(1..);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51687,"byte_end":51719,"line_start":1575,"line_end":1575,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(xs, [1, 2, 3, 4]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51724,"byte_end":51757,"line_start":1576,"line_end":1576,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51762,"byte_end":51769,"line_start":1577,"line_end":1577,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51774,"byte_end":51783,"line_start":1578,"line_end":1578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52543,"byte_end":52547,"line_start":1605,"line_end":1605,"column_start":8,"column_end":12},"name":"join","qualname":"::Itertools::join","value":"pub fn join(&mut Self, &str) -> String where Self::Item: std::fmt::Display","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, separated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, separated by `sep`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52167,"byte_end":52237,"line_start":1594,"line_end":1594,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52242,"byte_end":52245,"line_start":1595,"line_end":1595,"column_start":5,"column_end":8}},{"value":"/ Use the `Display` implementation of each element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52250,"byte_end":52303,"line_start":1596,"line_end":1596,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52308,"byte_end":52311,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52316,"byte_end":52323,"line_start":1598,"line_end":1598,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52328,"byte_end":52357,"line_start":1599,"line_end":1599,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52362,"byte_end":52365,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ assert_eq!([\"a\", \"b\", \"c\"].iter().join(\", \"), \"a, b, c\");","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52370,"byte_end":52431,"line_start":1601,"line_end":1601,"column_start":5,"column_end":66}},{"value":"/ assert_eq!([1, 2, 3].iter().join(\", \"), \"1, 2, 3\");","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52436,"byte_end":52491,"line_start":1602,"line_end":1602,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52496,"byte_end":52503,"line_start":1603,"line_end":1603,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52508,"byte_end":52535,"line_start":1604,"line_end":1604,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53675,"byte_end":53681,"line_start":1639,"line_end":1639,"column_start":8,"column_end":14},"name":"format","qualname":"::Itertools::format","value":"pub fn format(Self, &str) -> Format<, Self> where Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53187,"byte_end":53240,"line_start":1624,"line_end":1624,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53245,"byte_end":53248,"line_start":1625,"line_end":1625,"column_start":5,"column_end":8}},{"value":"/ All elements are formatted (any formatting trait)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53253,"byte_end":53306,"line_start":1626,"line_end":1626,"column_start":5,"column_end":58}},{"value":"/ with `sep` inserted between each element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53311,"byte_end":53356,"line_start":1627,"line_end":1627,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53361,"byte_end":53364,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the formatter helper is formatted more than once.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53369,"byte_end":53436,"line_start":1629,"line_end":1629,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53441,"byte_end":53444,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53449,"byte_end":53456,"line_start":1631,"line_end":1631,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53461,"byte_end":53490,"line_start":1632,"line_end":1632,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53495,"byte_end":53498,"line_start":1633,"line_end":1633,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53503,"byte_end":53538,"line_start":1634,"line_end":1634,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53543,"byte_end":53558,"line_start":1635,"line_end":1635,"column_start":5,"column_end":20}},{"value":"/     format!(\"{:.2}\", data.iter().format(\", \")),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53563,"byte_end":53614,"line_start":1636,"line_end":1636,"column_start":5,"column_end":56}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53619,"byte_end":53655,"line_start":1637,"line_end":1637,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53660,"byte_end":53667,"line_start":1638,"line_end":1638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55159,"byte_end":55170,"line_start":1677,"line_end":1677,"column_start":8,"column_end":19},"name":"format_with","qualname":"::Itertools::format_with","value":"pub fn format_with<F>(Self, &str, F) -> FormatWith<, Self, F> where\nSelf: Sized,\nF: FnMut(Self::Item, &mut dyn FnMut(&dyn fmt::Display) -> fmt::Result) ->\nfmt::Result","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53805,"byte_end":53858,"line_start":1645,"line_end":1645,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53863,"byte_end":53866,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ This is a customizable version of `.format()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53871,"byte_end":53921,"line_start":1647,"line_end":1647,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53926,"byte_end":53929,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ The supplied closure `format` is called once per iterator element,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53934,"byte_end":54004,"line_start":1649,"line_end":1649,"column_start":5,"column_end":75}},{"value":"/ with two arguments: the element and a callback that takes a","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54009,"byte_end":54072,"line_start":1650,"line_end":1650,"column_start":5,"column_end":68}},{"value":"/ `&Display` value, i.e. any reference to type that implements `Display`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54077,"byte_end":54152,"line_start":1651,"line_end":1651,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54157,"byte_end":54160,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ Using `&format_args!(...)` is the most versatile way to apply custom","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54165,"byte_end":54237,"line_start":1653,"line_end":1653,"column_start":5,"column_end":77}},{"value":"/ element formatting. The callback can be called multiple times if needed.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54242,"byte_end":54318,"line_start":1654,"line_end":1654,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54323,"byte_end":54326,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the formatter helper is formatted more than once.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54331,"byte_end":54398,"line_start":1656,"line_end":1656,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54403,"byte_end":54406,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54411,"byte_end":54418,"line_start":1658,"line_end":1658,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54423,"byte_end":54452,"line_start":1659,"line_end":1659,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54457,"byte_end":54460,"line_start":1660,"line_end":1660,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54465,"byte_end":54500,"line_start":1661,"line_end":1661,"column_start":5,"column_end":40}},{"value":"/ let data_formatter = data.iter().format_with(\", \", |elt, f| f(&format_args!(\"{:.2}\", elt)));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54505,"byte_end":54601,"line_start":1662,"line_end":1662,"column_start":5,"column_end":101}},{"value":"/ assert_eq!(format!(\"{}\", data_formatter),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54606,"byte_end":54651,"line_start":1663,"line_end":1663,"column_start":5,"column_end":50}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54656,"byte_end":54692,"line_start":1664,"line_end":1664,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54697,"byte_end":54700,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ // .format_with() is recursively composable","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54705,"byte_end":54752,"line_start":1666,"line_end":1666,"column_start":5,"column_end":52}},{"value":"/ let matrix = [[1., 2., 3.],","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54757,"byte_end":54788,"line_start":1667,"line_end":1667,"column_start":5,"column_end":36}},{"value":"/               [4., 5., 6.]];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54793,"byte_end":54825,"line_start":1668,"line_end":1668,"column_start":5,"column_end":37}},{"value":"/ let matrix_formatter = matrix.iter().format_with(\"\\n\", |row, f| {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54830,"byte_end":54899,"line_start":1669,"line_end":1669,"column_start":5,"column_end":74}},{"value":"/                                 f(&row.iter().format_with(\", \", |elt, g| g(&elt)))","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54904,"byte_end":54990,"line_start":1670,"line_end":1670,"column_start":5,"column_end":91}},{"value":"/                              });","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":54995,"byte_end":55031,"line_start":1671,"line_end":1671,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(format!(\"{}\", matrix_formatter),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55036,"byte_end":55083,"line_start":1672,"line_end":1672,"column_start":5,"column_end":52}},{"value":"/            \"1, 2, 3\\n4, 5, 6\");","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55088,"byte_end":55123,"line_start":1673,"line_end":1673,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55128,"byte_end":55131,"line_start":1674,"line_end":1674,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55136,"byte_end":55139,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55144,"byte_end":55151,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56900,"byte_end":56912,"line_start":1726,"line_end":1726,"column_start":8,"column_end":20},"name":"fold_results","qualname":"::Itertools::fold_results","value":"pub fn fold_results<A, E, B, F>(&mut Self, B, F) -> Result<B, E> where\nSelf: Iterator<Item = Result<A, E>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Fold `Result` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Result` values from an iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55416,"byte_end":55458,"line_start":1684,"line_end":1684,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55463,"byte_end":55466,"line_start":1685,"line_end":1685,"column_start":5,"column_end":8}},{"value":"/ Only `Ok` values are folded. If no error is encountered, the folded","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55471,"byte_end":55542,"line_start":1686,"line_end":1686,"column_start":5,"column_end":76}},{"value":"/ value is returned inside `Ok`. Otherwise, the operation terminates","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55547,"byte_end":55617,"line_start":1687,"line_end":1687,"column_start":5,"column_end":75}},{"value":"/ and returns the first `Err` value it encounters. No iterator elements are","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55622,"byte_end":55699,"line_start":1688,"line_end":1688,"column_start":5,"column_end":82}},{"value":"/ consumed after the first error.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55704,"byte_end":55739,"line_start":1689,"line_end":1689,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55744,"byte_end":55747,"line_start":1690,"line_end":1690,"column_start":5,"column_end":8}},{"value":"/ The first accumulator value is the `start` parameter.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55752,"byte_end":55809,"line_start":1691,"line_end":1691,"column_start":5,"column_end":62}},{"value":"/ Each iteration passes the accumulator value and the next value inside `Ok`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55814,"byte_end":55892,"line_start":1692,"line_end":1692,"column_start":5,"column_end":83}},{"value":"/ to the fold function `f` and its return value becomes the new accumulator value.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55897,"byte_end":55981,"line_start":1693,"line_end":1693,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55986,"byte_end":55989,"line_start":1694,"line_end":1694,"column_start":5,"column_end":8}},{"value":"/ For example the sequence *Ok(1), Ok(2), Ok(3)* will result in a","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55994,"byte_end":56061,"line_start":1695,"line_end":1695,"column_start":5,"column_end":72}},{"value":"/ computation like this:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56066,"byte_end":56092,"line_start":1696,"line_end":1696,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56097,"byte_end":56100,"line_start":1697,"line_end":1697,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56105,"byte_end":56118,"line_start":1698,"line_end":1698,"column_start":5,"column_end":18}},{"value":"/ let mut accum = start;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56123,"byte_end":56149,"line_start":1699,"line_end":1699,"column_start":5,"column_end":31}},{"value":"/ accum = f(accum, 1);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56154,"byte_end":56178,"line_start":1700,"line_end":1700,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56183,"byte_end":56207,"line_start":1701,"line_end":1701,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56212,"byte_end":56236,"line_start":1702,"line_end":1702,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56241,"byte_end":56248,"line_start":1703,"line_end":1703,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56253,"byte_end":56256,"line_start":1704,"line_end":1704,"column_start":5,"column_end":8}},{"value":"/ With a `start` value of 0 and an addition as folding function,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56261,"byte_end":56327,"line_start":1705,"line_end":1705,"column_start":5,"column_end":71}},{"value":"/ this effectively results in *((0 + 1) + 2) + 3*","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56332,"byte_end":56383,"line_start":1706,"line_end":1706,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56388,"byte_end":56391,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56396,"byte_end":56403,"line_start":1708,"line_end":1708,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56408,"byte_end":56430,"line_start":1709,"line_end":1709,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56435,"byte_end":56464,"line_start":1710,"line_end":1710,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56469,"byte_end":56472,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ let values = [1, 2, -2, -1, 2, 1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56477,"byte_end":56515,"line_start":1712,"line_end":1712,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56520,"byte_end":56535,"line_start":1713,"line_end":1713,"column_start":5,"column_end":20}},{"value":"/     values.iter()","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56540,"byte_end":56561,"line_start":1714,"line_end":1714,"column_start":5,"column_end":26}},{"value":"/           .map(Ok::<_, ()>)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56566,"byte_end":56597,"line_start":1715,"line_end":1715,"column_start":5,"column_end":36}},{"value":"/           .fold_results(0, Add::add),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56602,"byte_end":56643,"line_start":1716,"line_end":1716,"column_start":5,"column_end":46}},{"value":"/     Ok(3)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56648,"byte_end":56661,"line_start":1717,"line_end":1717,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56666,"byte_end":56672,"line_start":1718,"line_end":1718,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56677,"byte_end":56689,"line_start":1719,"line_end":1719,"column_start":5,"column_end":17}},{"value":"/     values.iter()","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56694,"byte_end":56715,"line_start":1720,"line_end":1720,"column_start":5,"column_end":26}},{"value":"/           .map(|&x| if x >= 0 { Ok(x) } else { Err(\"Negative number\") })","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56720,"byte_end":56796,"line_start":1721,"line_end":1721,"column_start":5,"column_end":81}},{"value":"/           .fold_results(0, Add::add)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56801,"byte_end":56841,"line_start":1722,"line_end":1722,"column_start":5,"column_end":45}},{"value":"/           .is_err()","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56846,"byte_end":56869,"line_start":1723,"line_end":1723,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56874,"byte_end":56880,"line_start":1724,"line_end":1724,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56885,"byte_end":56892,"line_start":1725,"line_end":1725,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58069,"byte_end":58081,"line_start":1758,"line_end":1758,"column_start":8,"column_end":20},"name":"fold_options","qualname":"::Itertools::fold_options","value":"pub fn fold_options<A, B, F>(&mut Self, B, F) -> Option<B> where\nSelf: Iterator<Item = Option<A>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Fold `Option` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Option` values from an iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57257,"byte_end":57299,"line_start":1739,"line_end":1739,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57304,"byte_end":57307,"line_start":1740,"line_end":1740,"column_start":5,"column_end":8}},{"value":"/ Only `Some` values are folded. If no `None` is encountered, the folded","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57312,"byte_end":57386,"line_start":1741,"line_end":1741,"column_start":5,"column_end":79}},{"value":"/ value is returned inside `Some`. Otherwise, the operation terminates","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57391,"byte_end":57463,"line_start":1742,"line_end":1742,"column_start":5,"column_end":77}},{"value":"/ and returns `None`. No iterator elements are consumed after the `None`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57468,"byte_end":57543,"line_start":1743,"line_end":1743,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57548,"byte_end":57551,"line_start":1744,"line_end":1744,"column_start":5,"column_end":8}},{"value":"/ This is the `Option` equivalent to `fold_results`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57556,"byte_end":57610,"line_start":1745,"line_end":1745,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57615,"byte_end":57618,"line_start":1746,"line_end":1746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57623,"byte_end":57630,"line_start":1747,"line_end":1747,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57635,"byte_end":57657,"line_start":1748,"line_end":1748,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57662,"byte_end":57691,"line_start":1749,"line_end":1749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57696,"byte_end":57699,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ let mut values = vec![Some(1), Some(2), Some(-2)].into_iter();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57704,"byte_end":57770,"line_start":1751,"line_end":1751,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(values.fold_options(5, Add::add), Some(5 + 1 + 2 - 2));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57775,"byte_end":57845,"line_start":1752,"line_end":1752,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57850,"byte_end":57853,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ let mut more_values = vec![Some(2), None, Some(0)].into_iter();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57858,"byte_end":57925,"line_start":1754,"line_end":1754,"column_start":5,"column_end":72}},{"value":"/ assert!(more_values.fold_options(0, Add::add).is_none());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57930,"byte_end":57991,"line_start":1755,"line_end":1755,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(more_values.next().unwrap(), Some(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":57996,"byte_end":58049,"line_start":1756,"line_end":1756,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58054,"byte_end":58061,"line_start":1757,"line_end":1757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58881,"byte_end":58886,"line_start":1783,"line_end":1783,"column_start":8,"column_end":13},"name":"fold1","qualname":"::Itertools::fold1","value":"pub fn fold1<F>(Self, F) -> Option<Self::Item> where\nF: FnMut(Self::Item, Self::Item) -> Self::Item, Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Accumulator of the elements in the iterator.","sig":null,"attributes":[{"value":"/ Accumulator of the elements in the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58417,"byte_end":58465,"line_start":1771,"line_end":1771,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58470,"byte_end":58473,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ Like `.fold()`, without a base case. If the iterator is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58478,"byte_end":58537,"line_start":1773,"line_end":1773,"column_start":5,"column_end":64}},{"value":"/ empty, return `None`. With just one element, return it.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58542,"byte_end":58601,"line_start":1774,"line_end":1774,"column_start":5,"column_end":64}},{"value":"/ Otherwise elements are accumulated in sequence using the closure `f`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58606,"byte_end":58679,"line_start":1775,"line_end":1775,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58684,"byte_end":58687,"line_start":1776,"line_end":1776,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58692,"byte_end":58699,"line_start":1777,"line_end":1777,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58704,"byte_end":58733,"line_start":1778,"line_end":1778,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58738,"byte_end":58741,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ assert_eq!((0..10).fold1(|x, y| x + y).unwrap_or(0), 45);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58746,"byte_end":58807,"line_start":1780,"line_end":1780,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((0..0).fold1(|x, y| x * y), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58812,"byte_end":58861,"line_start":1781,"line_end":1781,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58866,"byte_end":58873,"line_start":1782,"line_end":1782,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60874,"byte_end":60884,"line_start":1838,"line_end":1838,"column_start":8,"column_end":18},"name":"tree_fold1","qualname":"::Itertools::tree_fold1","value":"pub fn tree_fold1<F>(Self, F) -> Option<Self::Item> where\nF: FnMut(Self::Item, Self::Item) -> Self::Item, Self: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Accumulate the elements in the iterator in a tree-like manner.","sig":null,"attributes":[{"value":"/ Accumulate the elements in the iterator in a tree-like manner.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59084,"byte_end":59150,"line_start":1790,"line_end":1790,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59155,"byte_end":59158,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ You can think of it as, while there's more than one item, repeatedly","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59163,"byte_end":59235,"line_start":1792,"line_end":1792,"column_start":5,"column_end":77}},{"value":"/ combining adjacent items.  It does so in bottom-up-merge-sort order,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59240,"byte_end":59312,"line_start":1793,"line_end":1793,"column_start":5,"column_end":77}},{"value":"/ however, so that it needs only logarithmic stack space.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59317,"byte_end":59376,"line_start":1794,"line_end":1794,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59381,"byte_end":59384,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ This produces a call tree like the following (where the calls under","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59389,"byte_end":59460,"line_start":1796,"line_end":1796,"column_start":5,"column_end":76}},{"value":"/ an item are done after reading that item):","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59465,"byte_end":59511,"line_start":1797,"line_end":1797,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59516,"byte_end":59519,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59524,"byte_end":59535,"line_start":1799,"line_end":1799,"column_start":5,"column_end":16}},{"value":"/ 1 2 3 4 5 6 7","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59540,"byte_end":59557,"line_start":1800,"line_end":1800,"column_start":5,"column_end":22}},{"value":"/ │ │ │ │ │ │ │","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59562,"byte_end":59593,"line_start":1801,"line_end":1801,"column_start":5,"column_end":22}},{"value":"/ └─f └─f └─f │","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59598,"byte_end":59629,"line_start":1802,"line_end":1802,"column_start":5,"column_end":22}},{"value":"/   │   │   │ │","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59634,"byte_end":59659,"line_start":1803,"line_end":1803,"column_start":5,"column_end":22}},{"value":"/   └───f   └─f","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59664,"byte_end":59693,"line_start":1804,"line_end":1804,"column_start":5,"column_end":22}},{"value":"/       │     │","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59698,"byte_end":59719,"line_start":1805,"line_end":1805,"column_start":5,"column_end":22}},{"value":"/       └─────f","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59724,"byte_end":59753,"line_start":1806,"line_end":1806,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59758,"byte_end":59765,"line_start":1807,"line_end":1807,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59770,"byte_end":59773,"line_start":1808,"line_end":1808,"column_start":5,"column_end":8}},{"value":"/ Which, for non-associative functions, will typically produce a different","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59778,"byte_end":59854,"line_start":1809,"line_end":1809,"column_start":5,"column_end":81}},{"value":"/ result than the linear call tree used by `fold1`:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59859,"byte_end":59912,"line_start":1810,"line_end":1810,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59917,"byte_end":59920,"line_start":1811,"line_end":1811,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59925,"byte_end":59936,"line_start":1812,"line_end":1812,"column_start":5,"column_end":16}},{"value":"/ 1 2 3 4 5 6 7","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59941,"byte_end":59958,"line_start":1813,"line_end":1813,"column_start":5,"column_end":22}},{"value":"/ │ │ │ │ │ │ │","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59963,"byte_end":59994,"line_start":1814,"line_end":1814,"column_start":5,"column_end":22}},{"value":"/ └─f─f─f─f─f─f","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":59999,"byte_end":60030,"line_start":1815,"line_end":1815,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60035,"byte_end":60042,"line_start":1816,"line_end":1816,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60047,"byte_end":60050,"line_start":1817,"line_end":1817,"column_start":5,"column_end":8}},{"value":"/ If `f` is associative, prefer the normal `fold1` instead.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60055,"byte_end":60116,"line_start":1818,"line_end":1818,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60121,"byte_end":60124,"line_start":1819,"line_end":1819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60129,"byte_end":60136,"line_start":1820,"line_end":1820,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60141,"byte_end":60170,"line_start":1821,"line_end":1821,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60175,"byte_end":60178,"line_start":1822,"line_end":1822,"column_start":5,"column_end":8}},{"value":"/ // The same tree as above","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60183,"byte_end":60212,"line_start":1823,"line_end":1823,"column_start":5,"column_end":34}},{"value":"/ let num_strings = (1..8).map(|x| x.to_string());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60217,"byte_end":60269,"line_start":1824,"line_end":1824,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(num_strings.tree_fold1(|x, y| format!(\"f({}, {})\", x, y)),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60274,"byte_end":60347,"line_start":1825,"line_end":1825,"column_start":5,"column_end":78}},{"value":"/     Some(String::from(\"f(f(f(1, 2), f(3, 4)), f(f(5, 6), 7))\")));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60352,"byte_end":60421,"line_start":1826,"line_end":1826,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60426,"byte_end":60429,"line_start":1827,"line_end":1827,"column_start":5,"column_end":8}},{"value":"/ // Like fold1, an empty iterator produces None","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60434,"byte_end":60484,"line_start":1828,"line_end":1828,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((0..0).tree_fold1(|x, y| x * y), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60489,"byte_end":60543,"line_start":1829,"line_end":1829,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60548,"byte_end":60551,"line_start":1830,"line_end":1830,"column_start":5,"column_end":8}},{"value":"/ // tree_fold1 matches fold1 for associative operations...","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60556,"byte_end":60617,"line_start":1831,"line_end":1831,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((0..10).tree_fold1(|x, y| x + y),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60622,"byte_end":60670,"line_start":1832,"line_end":1832,"column_start":5,"column_end":53}},{"value":"/     (0..10).fold1(|x, y| x + y));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60675,"byte_end":60712,"line_start":1833,"line_end":1833,"column_start":5,"column_end":42}},{"value":"/ // ...but not for non-associative ones","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60717,"byte_end":60759,"line_start":1834,"line_end":1834,"column_start":5,"column_end":47}},{"value":"/ assert_ne!((0..10).tree_fold1(|x, y| x - y),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60764,"byte_end":60812,"line_start":1835,"line_end":1835,"column_start":5,"column_end":53}},{"value":"/     (0..10).fold1(|x, y| x - y));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60817,"byte_end":60854,"line_start":1836,"line_end":1836,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60859,"byte_end":60866,"line_start":1837,"line_end":1837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64438,"byte_end":64448,"line_start":1937,"line_end":1937,"column_start":8,"column_end":18},"name":"fold_while","qualname":"::Itertools::fold_while","value":"pub fn fold_while<B, F>(&mut Self, B, F) -> FoldWhile<B> where Self: Sized,\nF: FnMut(B, Self::Item) -> FoldWhile<B>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" An iterator method that applies a function, producing a single, final value.","sig":null,"attributes":[{"value":"/ An iterator method that applies a function, producing a single, final value.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63059,"byte_end":63139,"line_start":1897,"line_end":1897,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63144,"byte_end":63147,"line_start":1898,"line_end":1898,"column_start":5,"column_end":8}},{"value":"/ `fold_while()` is basically equivalent to `fold()` but with additional support for","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63152,"byte_end":63238,"line_start":1899,"line_end":1899,"column_start":5,"column_end":91}},{"value":"/ early exit via short-circuiting.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63243,"byte_end":63279,"line_start":1900,"line_end":1900,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63284,"byte_end":63287,"line_start":1901,"line_end":1901,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63292,"byte_end":63299,"line_start":1902,"line_end":1902,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63304,"byte_end":63333,"line_start":1903,"line_end":1903,"column_start":5,"column_end":34}},{"value":"/ use itertools::FoldWhile::{Continue, Done};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63338,"byte_end":63385,"line_start":1904,"line_end":1904,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63390,"byte_end":63393,"line_start":1905,"line_end":1905,"column_start":5,"column_end":8}},{"value":"/ let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63398,"byte_end":63448,"line_start":1906,"line_end":1906,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63453,"byte_end":63456,"line_start":1907,"line_end":1907,"column_start":5,"column_end":8}},{"value":"/ let mut result = 0;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63461,"byte_end":63484,"line_start":1908,"line_end":1908,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63489,"byte_end":63492,"line_start":1909,"line_end":1909,"column_start":5,"column_end":8}},{"value":"/ // for loop:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63497,"byte_end":63513,"line_start":1910,"line_end":1910,"column_start":5,"column_end":21}},{"value":"/ for i in &numbers {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63518,"byte_end":63541,"line_start":1911,"line_end":1911,"column_start":5,"column_end":28}},{"value":"/     if *i > 5 {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63546,"byte_end":63565,"line_start":1912,"line_end":1912,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63570,"byte_end":63588,"line_start":1913,"line_end":1913,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63593,"byte_end":63602,"line_start":1914,"line_end":1914,"column_start":5,"column_end":14}},{"value":"/     result = result + i;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63607,"byte_end":63635,"line_start":1915,"line_end":1915,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63640,"byte_end":63645,"line_start":1916,"line_end":1916,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63650,"byte_end":63653,"line_start":1917,"line_end":1917,"column_start":5,"column_end":8}},{"value":"/ // fold:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63658,"byte_end":63670,"line_start":1918,"line_end":1918,"column_start":5,"column_end":17}},{"value":"/ let result2 = numbers.iter().fold(0, |acc, x| {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63675,"byte_end":63726,"line_start":1919,"line_end":1919,"column_start":5,"column_end":56}},{"value":"/     if *x > 5 { acc } else { acc + x }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63731,"byte_end":63773,"line_start":1920,"line_end":1920,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63778,"byte_end":63785,"line_start":1921,"line_end":1921,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63790,"byte_end":63793,"line_start":1922,"line_end":1922,"column_start":5,"column_end":8}},{"value":"/ // fold_while:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63798,"byte_end":63816,"line_start":1923,"line_end":1923,"column_start":5,"column_end":23}},{"value":"/ let result3 = numbers.iter().fold_while(0, |acc, x| {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63821,"byte_end":63878,"line_start":1924,"line_end":1924,"column_start":5,"column_end":62}},{"value":"/     if *x > 5 { Done(acc) } else { Continue(acc + x) }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63883,"byte_end":63941,"line_start":1925,"line_end":1925,"column_start":5,"column_end":63}},{"value":"/ }).into_inner();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63946,"byte_end":63966,"line_start":1926,"line_end":1926,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63971,"byte_end":63974,"line_start":1927,"line_end":1927,"column_start":5,"column_end":8}},{"value":"/ // they're the same","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":63979,"byte_end":64002,"line_start":1928,"line_end":1928,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(result, result2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64007,"byte_end":64039,"line_start":1929,"line_end":1929,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(result2, result3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64044,"byte_end":64077,"line_start":1930,"line_end":1930,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64082,"byte_end":64089,"line_start":1931,"line_end":1931,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64094,"byte_end":64097,"line_start":1932,"line_end":1932,"column_start":5,"column_end":8}},{"value":"/ The big difference between the computations of `result2` and `result3` is that while","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64102,"byte_end":64190,"line_start":1933,"line_end":1933,"column_start":5,"column_end":93}},{"value":"/ `fold()` called the provided closure for every item of the callee iterator,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64195,"byte_end":64274,"line_start":1934,"line_end":1934,"column_start":5,"column_end":84}},{"value":"/ `fold_while()` actually stopped iterating as soon as it encountered `Fold::Done(_)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64279,"byte_end":64367,"line_start":1935,"line_end":1935,"column_start":5,"column_end":93}},{"value":"deprecated(note = \"Use .try_fold() instead\", since = \"0.8\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64372,"byte_end":64430,"line_start":1936,"line_end":1936,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65515,"byte_end":65519,"line_start":1972,"line_end":1972,"column_start":8,"column_end":12},"name":"sum1","qualname":"::Itertools::sum1","value":"pub fn sum1<S>(Self) -> Option<S> where Self: Sized,\nS: std::iter::Sum<Self::Item>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Iterate over the entire iterator and add all the elements.","sig":null,"attributes":[{"value":"/ Iterate over the entire iterator and add all the elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64873,"byte_end":64935,"line_start":1951,"line_end":1951,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64940,"byte_end":64943,"line_start":1952,"line_end":1952,"column_start":5,"column_end":8}},{"value":"/ An empty iterator returns `None`, otherwise `Some(sum)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64948,"byte_end":65008,"line_start":1953,"line_end":1953,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65013,"byte_end":65016,"line_start":1954,"line_end":1954,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65021,"byte_end":65033,"line_start":1955,"line_end":1955,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65038,"byte_end":65041,"line_start":1956,"line_end":1956,"column_start":5,"column_end":8}},{"value":"/ When calling `sum1()` and a primitive integer type is being returned, this","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65046,"byte_end":65124,"line_start":1957,"line_end":1957,"column_start":5,"column_end":83}},{"value":"/ method will panic if the computation overflows and debug assertions are","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65129,"byte_end":65204,"line_start":1958,"line_end":1958,"column_start":5,"column_end":80}},{"value":"/ enabled.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65209,"byte_end":65221,"line_start":1959,"line_end":1959,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65226,"byte_end":65229,"line_start":1960,"line_end":1960,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65234,"byte_end":65248,"line_start":1961,"line_end":1961,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65253,"byte_end":65256,"line_start":1962,"line_end":1962,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65261,"byte_end":65268,"line_start":1963,"line_end":1963,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65273,"byte_end":65302,"line_start":1964,"line_end":1964,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65307,"byte_end":65310,"line_start":1965,"line_end":1965,"column_start":5,"column_end":8}},{"value":"/ let empty_sum = (1..1).sum1::<i32>();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65315,"byte_end":65356,"line_start":1966,"line_end":1966,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(empty_sum, None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65361,"byte_end":65393,"line_start":1967,"line_end":1967,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65398,"byte_end":65401,"line_start":1968,"line_end":1968,"column_start":5,"column_end":8}},{"value":"/ let nonempty_sum = (1..11).sum1::<i32>();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65406,"byte_end":65451,"line_start":1969,"line_end":1969,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(nonempty_sum, Some(55));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65456,"byte_end":65495,"line_start":1970,"line_end":1970,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65500,"byte_end":65507,"line_start":1971,"line_end":1971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66382,"byte_end":66390,"line_start":2000,"line_end":2000,"column_start":8,"column_end":16},"name":"product1","qualname":"::Itertools::product1","value":"pub fn product1<P>(Self) -> Option<P> where Self: Sized,\nP: std::iter::Product<Self::Item>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Iterate over the entire iterator and multiply all the elements.","sig":null,"attributes":[{"value":"/ Iterate over the entire iterator and multiply all the elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65711,"byte_end":65778,"line_start":1980,"line_end":1980,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65783,"byte_end":65786,"line_start":1981,"line_end":1981,"column_start":5,"column_end":8}},{"value":"/ An empty iterator returns `None`, otherwise `Some(product)`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65791,"byte_end":65855,"line_start":1982,"line_end":1982,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65860,"byte_end":65863,"line_start":1983,"line_end":1983,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65868,"byte_end":65880,"line_start":1984,"line_end":1984,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65885,"byte_end":65888,"line_start":1985,"line_end":1985,"column_start":5,"column_end":8}},{"value":"/ When calling `product1()` and a primitive integer type is being returned,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65893,"byte_end":65970,"line_start":1986,"line_end":1986,"column_start":5,"column_end":82}},{"value":"/ method will panic if the computation overflows and debug assertions are","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65975,"byte_end":66050,"line_start":1987,"line_end":1987,"column_start":5,"column_end":80}},{"value":"/ enabled.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66055,"byte_end":66067,"line_start":1988,"line_end":1988,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66072,"byte_end":66075,"line_start":1989,"line_end":1989,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66080,"byte_end":66094,"line_start":1990,"line_end":1990,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66099,"byte_end":66106,"line_start":1991,"line_end":1991,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66111,"byte_end":66140,"line_start":1992,"line_end":1992,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66145,"byte_end":66148,"line_start":1993,"line_end":1993,"column_start":5,"column_end":8}},{"value":"/ let empty_product = (1..1).product1::<i32>();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66153,"byte_end":66202,"line_start":1994,"line_end":1994,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(empty_product, None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66207,"byte_end":66243,"line_start":1995,"line_end":1995,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66248,"byte_end":66251,"line_start":1996,"line_end":1996,"column_start":5,"column_end":8}},{"value":"/ let nonempty_product = (1..11).product1::<i32>();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66256,"byte_end":66309,"line_start":1997,"line_end":1997,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(nonempty_product, Some(3628800));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66314,"byte_end":66362,"line_start":1998,"line_end":1998,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66367,"byte_end":66374,"line_start":1999,"line_end":1999,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67281,"byte_end":67287,"line_start":2027,"line_end":2027,"column_start":8,"column_end":14},"name":"sorted","qualname":"::Itertools::sorted","value":"pub fn sorted(Self) -> VecIntoIter<Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66591,"byte_end":66661,"line_start":2009,"line_end":2009,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66666,"byte_end":66669,"line_start":2010,"line_end":2010,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66674,"byte_end":66731,"line_start":2011,"line_end":2011,"column_start":5,"column_end":62}},{"value":"/ `slice::sort()` method and returns the result as a new","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66736,"byte_end":66794,"line_start":2012,"line_end":2012,"column_start":5,"column_end":63}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66799,"byte_end":66835,"line_start":2013,"line_end":2013,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66840,"byte_end":66843,"line_start":2014,"line_end":2014,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66848,"byte_end":66919,"line_start":2015,"line_end":2015,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66924,"byte_end":66973,"line_start":2016,"line_end":2016,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66978,"byte_end":66981,"line_start":2017,"line_end":2017,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66986,"byte_end":66993,"line_start":2018,"line_end":2018,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66998,"byte_end":67027,"line_start":2019,"line_end":2019,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67032,"byte_end":67035,"line_start":2020,"line_end":2020,"column_start":5,"column_end":8}},{"value":"/ // sort the letters of the text in ascending order","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67040,"byte_end":67094,"line_start":2021,"line_end":2021,"column_start":5,"column_end":59}},{"value":"/ let text = \"bdacfe\";","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67099,"byte_end":67123,"line_start":2022,"line_end":2022,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(text.chars().sorted(),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67128,"byte_end":67178,"line_start":2023,"line_end":2023,"column_start":5,"column_end":55}},{"value":"/                         \"abcdef\".chars());","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67183,"byte_end":67229,"line_start":2024,"line_end":2024,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67234,"byte_end":67241,"line_start":2025,"line_end":2025,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67246,"byte_end":67273,"line_start":2026,"line_end":2026,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68509,"byte_end":68518,"line_start":2062,"line_end":2062,"column_start":8,"column_end":17},"name":"sorted_by","qualname":"::Itertools::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> VecIntoIter<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67576,"byte_end":67646,"line_start":2038,"line_end":2038,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67651,"byte_end":67654,"line_start":2039,"line_end":2039,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67659,"byte_end":67716,"line_start":2040,"line_end":2040,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by()` method and returns the result as a new","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67721,"byte_end":67782,"line_start":2041,"line_end":2041,"column_start":5,"column_end":66}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67787,"byte_end":67823,"line_start":2042,"line_end":2042,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67828,"byte_end":67831,"line_start":2043,"line_end":2043,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67836,"byte_end":67907,"line_start":2044,"line_end":2044,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67912,"byte_end":67961,"line_start":2045,"line_end":2045,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67966,"byte_end":67969,"line_start":2046,"line_end":2046,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67974,"byte_end":67981,"line_start":2047,"line_end":2047,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67986,"byte_end":68015,"line_start":2048,"line_end":2048,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68020,"byte_end":68023,"line_start":2049,"line_end":2049,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68028,"byte_end":68073,"line_start":2050,"line_end":2050,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68078,"byte_end":68156,"line_start":2051,"line_end":2051,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68161,"byte_end":68164,"line_start":2052,"line_end":2052,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68169,"byte_end":68205,"line_start":2053,"line_end":2053,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68210,"byte_end":68230,"line_start":2054,"line_end":2054,"column_start":5,"column_end":25}},{"value":"/     .sorted_by(|a, b| Ord::cmp(&b.1, &a.1))","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68235,"byte_end":68282,"line_start":2055,"line_end":2055,"column_start":5,"column_end":52}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68287,"byte_end":68325,"line_start":2056,"line_end":2056,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68330,"byte_end":68333,"line_start":2057,"line_end":2057,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68338,"byte_end":68386,"line_start":2058,"line_end":2058,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68391,"byte_end":68457,"line_start":2059,"line_end":2059,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68462,"byte_end":68469,"line_start":2060,"line_end":2060,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68474,"byte_end":68501,"line_start":2061,"line_end":2061,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69679,"byte_end":69692,"line_start":2095,"line_end":2095,"column_start":8,"column_end":21},"name":"sorted_by_key","qualname":"::Itertools::sorted_by_key","value":"pub fn sorted_by_key<K, F>(Self, F) -> VecIntoIter<Self::Item> where\nSelf: Sized, K: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68757,"byte_end":68827,"line_start":2071,"line_end":2071,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68832,"byte_end":68835,"line_start":2072,"line_end":2072,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68840,"byte_end":68897,"line_start":2073,"line_end":2073,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by_key()` method and returns the result as a new","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68902,"byte_end":68967,"line_start":2074,"line_end":2074,"column_start":5,"column_end":70}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68972,"byte_end":69008,"line_start":2075,"line_end":2075,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69013,"byte_end":69016,"line_start":2076,"line_end":2076,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69021,"byte_end":69092,"line_start":2077,"line_end":2077,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69097,"byte_end":69146,"line_start":2078,"line_end":2078,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69151,"byte_end":69154,"line_start":2079,"line_end":2079,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69159,"byte_end":69166,"line_start":2080,"line_end":2080,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69171,"byte_end":69200,"line_start":2081,"line_end":2081,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69205,"byte_end":69208,"line_start":2082,"line_end":2082,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69213,"byte_end":69258,"line_start":2083,"line_end":2083,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69263,"byte_end":69341,"line_start":2084,"line_end":2084,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69346,"byte_end":69349,"line_start":2085,"line_end":2085,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69354,"byte_end":69390,"line_start":2086,"line_end":2086,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69395,"byte_end":69415,"line_start":2087,"line_end":2087,"column_start":5,"column_end":25}},{"value":"/     .sorted_by_key(|x| -x.1)","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69420,"byte_end":69452,"line_start":2088,"line_end":2088,"column_start":5,"column_end":37}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69457,"byte_end":69495,"line_start":2089,"line_end":2089,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69500,"byte_end":69503,"line_start":2090,"line_end":2090,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69508,"byte_end":69556,"line_start":2091,"line_end":2091,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69561,"byte_end":69627,"line_start":2092,"line_end":2092,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69632,"byte_end":69639,"line_start":2093,"line_end":2093,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69644,"byte_end":69671,"line_start":2094,"line_end":2094,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70645,"byte_end":70658,"line_start":2126,"line_end":2126,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::Itertools::partition_map","value":"pub fn partition_map<A, B, F, L, R>(Self, F) -> (A, B) where Self: Sized,\nF: FnMut(Self::Item) -> Either<L, R>, A: Default + Extend<L>, B: Default +\nExtend<R>","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Collect all iterator elements into one of two\n partitions. Unlike `Iterator::partition`, each partition may\n have a distinct type.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into one of two","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69936,"byte_end":69985,"line_start":2105,"line_end":2105,"column_start":5,"column_end":54}},{"value":"/ partitions. Unlike `Iterator::partition`, each partition may","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69990,"byte_end":70054,"line_start":2106,"line_end":2106,"column_start":5,"column_end":69}},{"value":"/ have a distinct type.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70059,"byte_end":70084,"line_start":2107,"line_end":2107,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70089,"byte_end":70092,"line_start":2108,"line_end":2108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70097,"byte_end":70104,"line_start":2109,"line_end":2109,"column_start":5,"column_end":12}},{"value":"/ use itertools::{Itertools, Either};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70109,"byte_end":70148,"line_start":2110,"line_end":2110,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70153,"byte_end":70156,"line_start":2111,"line_end":2111,"column_start":5,"column_end":8}},{"value":"/ let successes_and_failures = vec![Ok(1), Err(false), Err(true), Ok(2)];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70161,"byte_end":70236,"line_start":2112,"line_end":2112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70241,"byte_end":70244,"line_start":2113,"line_end":2113,"column_start":5,"column_end":8}},{"value":"/ let (successes, failures): (Vec<_>, Vec<_>) = successes_and_failures","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70249,"byte_end":70321,"line_start":2114,"line_end":2114,"column_start":5,"column_end":77}},{"value":"/     .into_iter()","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70326,"byte_end":70346,"line_start":2115,"line_end":2115,"column_start":5,"column_end":25}},{"value":"/     .partition_map(|r| {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70351,"byte_end":70379,"line_start":2116,"line_end":2116,"column_start":5,"column_end":33}},{"value":"/         match r {","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70384,"byte_end":70405,"line_start":2117,"line_end":2117,"column_start":5,"column_end":26}},{"value":"/             Ok(v) => Either::Left(v),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70410,"byte_end":70451,"line_start":2118,"line_end":2118,"column_start":5,"column_end":46}},{"value":"/             Err(v) => Either::Right(v),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70456,"byte_end":70499,"line_start":2119,"line_end":2119,"column_start":5,"column_end":48}},{"value":"/         }","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70504,"byte_end":70517,"line_start":2120,"line_end":2120,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70522,"byte_end":70533,"line_start":2121,"line_end":2121,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70538,"byte_end":70541,"line_start":2122,"line_end":2122,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(successes, [1, 2]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70546,"byte_end":70580,"line_start":2123,"line_end":2123,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(failures, [false, true]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70585,"byte_end":70625,"line_start":2124,"line_end":2124,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70630,"byte_end":70637,"line_start":2125,"line_end":2125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71742,"byte_end":71756,"line_start":2158,"line_end":2158,"column_start":8,"column_end":22},"name":"into_group_map","qualname":"::Itertools::into_group_map","value":"pub fn into_group_map<K, V>(Self) -> HashMap<K, Vec<V>> where\nSelf: Iterator<Item = (K, V)> + Sized, K: Hash + Eq","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return a `HashMap` of keys mapped to `Vec`s of values. Keys and values\n are taken from `(Key, Value)` tuple pairs yielded by the input iterator.","sig":null,"attributes":[{"value":"/ Return a `HashMap` of keys mapped to `Vec`s of values. Keys and values","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71150,"byte_end":71224,"line_start":2143,"line_end":2143,"column_start":5,"column_end":79}},{"value":"/ are taken from `(Key, Value)` tuple pairs yielded by the input iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71229,"byte_end":71305,"line_start":2144,"line_end":2144,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71310,"byte_end":71313,"line_start":2145,"line_end":2145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71318,"byte_end":71325,"line_start":2146,"line_end":2146,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71330,"byte_end":71359,"line_start":2147,"line_end":2147,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71364,"byte_end":71367,"line_start":2148,"line_end":2148,"column_start":5,"column_end":8}},{"value":"/ let data = vec![(0, 10), (2, 12), (3, 13), (0, 20), (3, 33), (2, 42)];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71372,"byte_end":71446,"line_start":2149,"line_end":2149,"column_start":5,"column_end":79}},{"value":"/ let lookup = data.into_iter().into_group_map();","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71451,"byte_end":71502,"line_start":2150,"line_end":2150,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71507,"byte_end":71510,"line_start":2151,"line_end":2151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lookup[&0], vec![10, 20]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71515,"byte_end":71556,"line_start":2152,"line_end":2152,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(lookup.get(&1), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71561,"byte_end":71598,"line_start":2153,"line_end":2153,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(lookup[&2], vec![12, 42]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71603,"byte_end":71644,"line_start":2154,"line_end":2154,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(lookup[&3], vec![13, 33]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71649,"byte_end":71690,"line_start":2155,"line_end":2155,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71695,"byte_end":71702,"line_start":2156,"line_end":2156,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71707,"byte_end":71734,"line_start":2157,"line_end":2157,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73219,"byte_end":73225,"line_start":2200,"line_end":2200,"column_start":8,"column_end":14},"name":"minmax","qualname":"::Itertools::minmax","value":"pub fn minmax(Self) -> MinMaxResult<Self::Item> where Self: Sized,\nSelf::Item: PartialOrd","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the minimum and maximum elements in the iterator.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum elements in the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71927,"byte_end":71987,"line_start":2165,"line_end":2165,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71992,"byte_end":71995,"line_start":2166,"line_end":2166,"column_start":5,"column_end":8}},{"value":"/ The return type `MinMaxResult` is an enum of three variants:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72000,"byte_end":72064,"line_start":2167,"line_end":2167,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72069,"byte_end":72072,"line_start":2168,"line_end":2168,"column_start":5,"column_end":8}},{"value":"/ - `NoElements` if the iterator is empty.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72077,"byte_end":72121,"line_start":2169,"line_end":2169,"column_start":5,"column_end":49}},{"value":"/ - `OneElement(x)` if the iterator has exactly one element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72126,"byte_end":72188,"line_start":2170,"line_end":2170,"column_start":5,"column_end":67}},{"value":"/ - `MinMax(x, y)` is returned otherwise, where `x <= y`. Two","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72193,"byte_end":72256,"line_start":2171,"line_end":2171,"column_start":5,"column_end":68}},{"value":"/    values are equal if and only if there is more than one","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72261,"byte_end":72322,"line_start":2172,"line_end":2172,"column_start":5,"column_end":66}},{"value":"/    element in the iterator and all elements are equal.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72327,"byte_end":72385,"line_start":2173,"line_end":2173,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72390,"byte_end":72393,"line_start":2174,"line_end":2174,"column_start":5,"column_end":8}},{"value":"/ On an iterator of length `n`, `minmax` does `1.5 * n` comparisons,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72398,"byte_end":72468,"line_start":2175,"line_end":2175,"column_start":5,"column_end":75}},{"value":"/ and so is faster than calling `min` and `max` separately which does","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72473,"byte_end":72544,"line_start":2176,"line_end":2176,"column_start":5,"column_end":76}},{"value":"/ `2 * n` comparisons.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72549,"byte_end":72573,"line_start":2177,"line_end":2177,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72578,"byte_end":72581,"line_start":2178,"line_end":2178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72586,"byte_end":72600,"line_start":2179,"line_end":2179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72605,"byte_end":72608,"line_start":2180,"line_end":2180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72613,"byte_end":72620,"line_start":2181,"line_end":2181,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72625,"byte_end":72654,"line_start":2182,"line_end":2182,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72659,"byte_end":72725,"line_start":2183,"line_end":2183,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72730,"byte_end":72733,"line_start":2184,"line_end":2184,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72738,"byte_end":72763,"line_start":2185,"line_end":2185,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), NoElements);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72768,"byte_end":72814,"line_start":2186,"line_end":2186,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72819,"byte_end":72822,"line_start":2187,"line_end":2187,"column_start":5,"column_end":8}},{"value":"/ let a = [1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72827,"byte_end":72843,"line_start":2188,"line_end":2188,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.iter().minmax(), OneElement(&1));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72848,"byte_end":72898,"line_start":2189,"line_end":2189,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72903,"byte_end":72906,"line_start":2190,"line_end":2190,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 4, 5];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72911,"byte_end":72939,"line_start":2191,"line_end":2191,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &5));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72944,"byte_end":72994,"line_start":2192,"line_end":2192,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":72999,"byte_end":73002,"line_start":2193,"line_end":2193,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, 1, 1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73007,"byte_end":73032,"line_start":2194,"line_end":2194,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &1));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73037,"byte_end":73087,"line_start":2195,"line_end":2195,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73092,"byte_end":73099,"line_start":2196,"line_end":2196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73104,"byte_end":73107,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/ The elements can be floats but no particular result is guaranteed","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73112,"byte_end":73181,"line_start":2198,"line_end":2198,"column_start":5,"column_end":74}},{"value":"/ if an element is NaN.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73186,"byte_end":73211,"line_start":2199,"line_end":2199,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73921,"byte_end":73934,"line_start":2217,"line_end":2217,"column_start":8,"column_end":21},"name":"minmax_by_key","qualname":"::Itertools::minmax_by_key","value":"pub fn minmax_by_key<K, F>(Self, F) -> MinMaxResult<Self::Item> where\nSelf: Sized, K: PartialOrd, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73389,"byte_end":73464,"line_start":2206,"line_end":2206,"column_start":5,"column_end":80}},{"value":"/ the specified function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73469,"byte_end":73496,"line_start":2207,"line_end":2207,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73501,"byte_end":73504,"line_start":2208,"line_end":2208,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73509,"byte_end":73581,"line_start":2209,"line_end":2209,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73586,"byte_end":73589,"line_start":2210,"line_end":2210,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73594,"byte_end":73671,"line_start":2211,"line_end":2211,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73676,"byte_end":73753,"line_start":2212,"line_end":2212,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73758,"byte_end":73810,"line_start":2213,"line_end":2213,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73815,"byte_end":73818,"line_start":2214,"line_end":2214,"column_start":5,"column_end":8}},{"value":"/ The keys can be floats but no particular result is guaranteed","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73823,"byte_end":73888,"line_start":2215,"line_end":2215,"column_start":5,"column_end":70}},{"value":"/ if a key is NaN.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73893,"byte_end":73913,"line_start":2216,"line_end":2216,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74572,"byte_end":74581,"line_start":2231,"line_end":2231,"column_start":8,"column_end":17},"name":"minmax_by","qualname":"::Itertools::minmax_by","value":"pub fn minmax_by<F>(Self, F) -> MinMaxResult<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74132,"byte_end":74207,"line_start":2223,"line_end":2223,"column_start":5,"column_end":80}},{"value":"/ the specified comparison function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74212,"byte_end":74250,"line_start":2224,"line_end":2224,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74255,"byte_end":74258,"line_start":2225,"line_end":2225,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74263,"byte_end":74335,"line_start":2226,"line_end":2226,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74340,"byte_end":74343,"line_start":2227,"line_end":2227,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74348,"byte_end":74425,"line_start":2228,"line_end":2228,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74430,"byte_end":74507,"line_start":2229,"line_end":2229,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74512,"byte_end":74564,"line_start":2230,"line_end":2230,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75416,"byte_end":75428,"line_start":2260,"line_end":2260,"column_start":8,"column_end":20},"name":"position_max","qualname":"::Itertools::position_max","value":"pub fn position_max(Self) -> Option<usize> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the position of the maximum element in the iterator.","sig":null,"attributes":[{"value":"/ Return the position of the maximum element in the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74860,"byte_end":74923,"line_start":2241,"line_end":2241,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74928,"byte_end":74931,"line_start":2242,"line_end":2242,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally maximum, the position of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74936,"byte_end":75000,"line_start":2243,"line_end":2243,"column_start":5,"column_end":69}},{"value":"/ last of them is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75005,"byte_end":75034,"line_start":2244,"line_end":2244,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75039,"byte_end":75042,"line_start":2245,"line_end":2245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75047,"byte_end":75061,"line_start":2246,"line_end":2246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75066,"byte_end":75069,"line_start":2247,"line_end":2247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75074,"byte_end":75081,"line_start":2248,"line_end":2248,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75086,"byte_end":75115,"line_start":2249,"line_end":2249,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75120,"byte_end":75123,"line_start":2250,"line_end":2250,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75128,"byte_end":75153,"line_start":2251,"line_end":2251,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_max(), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75158,"byte_end":75204,"line_start":2252,"line_end":2252,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75209,"byte_end":75212,"line_start":2253,"line_end":2253,"column_start":5,"column_end":8}},{"value":"/ let a = [-3, 0, 1, 5, -10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75217,"byte_end":75248,"line_start":2254,"line_end":2254,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_max(), Some(3));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75253,"byte_end":75302,"line_start":2255,"line_end":2255,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75307,"byte_end":75310,"line_start":2256,"line_end":2256,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, -1, -1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75315,"byte_end":75342,"line_start":2257,"line_end":2257,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(a.iter().position_max(), Some(1));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75347,"byte_end":75396,"line_start":2258,"line_end":2258,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75401,"byte_end":75408,"line_start":2259,"line_end":2259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76279,"byte_end":76298,"line_start":2288,"line_end":2288,"column_start":8,"column_end":27},"name":"position_max_by_key","qualname":"::Itertools::position_max_by_key","value":"pub fn position_max_by_key<K, F>(Self, F) -> Option<usize> where Self: Sized,\nK: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the position of the maximum element in the iterator, as\n determined by the specified function.","sig":null,"attributes":[{"value":"/ Return the position of the maximum element in the iterator, as","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75612,"byte_end":75678,"line_start":2268,"line_end":2268,"column_start":5,"column_end":71}},{"value":"/ determined by the specified function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75683,"byte_end":75724,"line_start":2269,"line_end":2269,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75729,"byte_end":75732,"line_start":2270,"line_end":2270,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally maximum, the position of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75737,"byte_end":75801,"line_start":2271,"line_end":2271,"column_start":5,"column_end":69}},{"value":"/ last of them is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75806,"byte_end":75835,"line_start":2272,"line_end":2272,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75840,"byte_end":75843,"line_start":2273,"line_end":2273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75848,"byte_end":75862,"line_start":2274,"line_end":2274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75867,"byte_end":75870,"line_start":2275,"line_end":2275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75875,"byte_end":75882,"line_start":2276,"line_end":2276,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75887,"byte_end":75916,"line_start":2277,"line_end":2277,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75921,"byte_end":75924,"line_start":2278,"line_end":2278,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75929,"byte_end":75954,"line_start":2279,"line_end":2279,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_max_by_key(|x| x.abs()), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75959,"byte_end":76023,"line_start":2280,"line_end":2280,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76028,"byte_end":76031,"line_start":2281,"line_end":2281,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76036,"byte_end":76071,"line_start":2282,"line_end":2282,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_max_by_key(|x| x.abs()), Some(4));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76076,"byte_end":76143,"line_start":2283,"line_end":2283,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76148,"byte_end":76151,"line_start":2284,"line_end":2284,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76156,"byte_end":76187,"line_start":2285,"line_end":2285,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_max_by_key(|x| x.abs()), Some(3));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76192,"byte_end":76259,"line_start":2286,"line_end":2286,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76264,"byte_end":76271,"line_start":2287,"line_end":2287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77209,"byte_end":77224,"line_start":2316,"line_end":2316,"column_start":8,"column_end":23},"name":"position_max_by","qualname":"::Itertools::position_max_by","value":"pub fn position_max_by<F>(Self, F) -> Option<usize> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the position of the maximum element in the iterator, as\n determined by the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the position of the maximum element in the iterator, as","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76531,"byte_end":76597,"line_start":2296,"line_end":2296,"column_start":5,"column_end":71}},{"value":"/ determined by the specified comparison function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76602,"byte_end":76654,"line_start":2297,"line_end":2297,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76659,"byte_end":76662,"line_start":2298,"line_end":2298,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally maximum, the position of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76667,"byte_end":76731,"line_start":2299,"line_end":2299,"column_start":5,"column_end":69}},{"value":"/ last of them is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76736,"byte_end":76765,"line_start":2300,"line_end":2300,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76770,"byte_end":76773,"line_start":2301,"line_end":2301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76778,"byte_end":76792,"line_start":2302,"line_end":2302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76797,"byte_end":76800,"line_start":2303,"line_end":2303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76805,"byte_end":76812,"line_start":2304,"line_end":2304,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76817,"byte_end":76846,"line_start":2305,"line_end":2305,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76851,"byte_end":76854,"line_start":2306,"line_end":2306,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76859,"byte_end":76884,"line_start":2307,"line_end":2307,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_max_by(|x, y| x.cmp(y)), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76889,"byte_end":76953,"line_start":2308,"line_end":2308,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76958,"byte_end":76961,"line_start":2309,"line_end":2309,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76966,"byte_end":77001,"line_start":2310,"line_end":2310,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_max_by(|x, y| x.cmp(y)), Some(3));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77006,"byte_end":77073,"line_start":2311,"line_end":2311,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77078,"byte_end":77081,"line_start":2312,"line_end":2312,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77086,"byte_end":77117,"line_start":2313,"line_end":2313,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_max_by(|x, y| x.cmp(y)), Some(1));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77122,"byte_end":77189,"line_start":2314,"line_end":2314,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77194,"byte_end":77201,"line_start":2315,"line_end":2315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78014,"byte_end":78026,"line_start":2343,"line_end":2343,"column_start":8,"column_end":20},"name":"position_min","qualname":"::Itertools::position_min","value":"pub fn position_min(Self) -> Option<usize> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the position of the minimum element in the iterator.","sig":null,"attributes":[{"value":"/ Return the position of the minimum element in the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77457,"byte_end":77520,"line_start":2324,"line_end":2324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77525,"byte_end":77528,"line_start":2325,"line_end":2325,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally minimum, the position of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77533,"byte_end":77597,"line_start":2326,"line_end":2326,"column_start":5,"column_end":69}},{"value":"/ first of them is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77602,"byte_end":77632,"line_start":2327,"line_end":2327,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77637,"byte_end":77640,"line_start":2328,"line_end":2328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77645,"byte_end":77659,"line_start":2329,"line_end":2329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77664,"byte_end":77667,"line_start":2330,"line_end":2330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77672,"byte_end":77679,"line_start":2331,"line_end":2331,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77684,"byte_end":77713,"line_start":2332,"line_end":2332,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77718,"byte_end":77721,"line_start":2333,"line_end":2333,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77726,"byte_end":77751,"line_start":2334,"line_end":2334,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_min(), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77756,"byte_end":77802,"line_start":2335,"line_end":2335,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77807,"byte_end":77810,"line_start":2336,"line_end":2336,"column_start":5,"column_end":8}},{"value":"/ let a = [-3, 0, 1, 5, -10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77815,"byte_end":77846,"line_start":2337,"line_end":2337,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_min(), Some(4));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77851,"byte_end":77900,"line_start":2338,"line_end":2338,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77905,"byte_end":77908,"line_start":2339,"line_end":2339,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, -1, -1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77913,"byte_end":77940,"line_start":2340,"line_end":2340,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(a.iter().position_min(), Some(2));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77945,"byte_end":77994,"line_start":2341,"line_end":2341,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77999,"byte_end":78006,"line_start":2342,"line_end":2342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78878,"byte_end":78897,"line_start":2371,"line_end":2371,"column_start":8,"column_end":27},"name":"position_min_by_key","qualname":"::Itertools::position_min_by_key","value":"pub fn position_min_by_key<K, F>(Self, F) -> Option<usize> where Self: Sized,\nK: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the position of the minimum element in the iterator, as\n determined by the specified function.","sig":null,"attributes":[{"value":"/ Return the position of the minimum element in the iterator, as","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78210,"byte_end":78276,"line_start":2351,"line_end":2351,"column_start":5,"column_end":71}},{"value":"/ determined by the specified function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78281,"byte_end":78322,"line_start":2352,"line_end":2352,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78327,"byte_end":78330,"line_start":2353,"line_end":2353,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally minimum, the position of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78335,"byte_end":78399,"line_start":2354,"line_end":2354,"column_start":5,"column_end":69}},{"value":"/ first of them is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78404,"byte_end":78434,"line_start":2355,"line_end":2355,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78439,"byte_end":78442,"line_start":2356,"line_end":2356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78447,"byte_end":78461,"line_start":2357,"line_end":2357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78466,"byte_end":78469,"line_start":2358,"line_end":2358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78474,"byte_end":78481,"line_start":2359,"line_end":2359,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78486,"byte_end":78515,"line_start":2360,"line_end":2360,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78520,"byte_end":78523,"line_start":2361,"line_end":2361,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78528,"byte_end":78553,"line_start":2362,"line_end":2362,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_min_by_key(|x| x.abs()), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78558,"byte_end":78622,"line_start":2363,"line_end":2363,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78627,"byte_end":78630,"line_start":2364,"line_end":2364,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78635,"byte_end":78670,"line_start":2365,"line_end":2365,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_min_by_key(|x| x.abs()), Some(1));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78675,"byte_end":78742,"line_start":2366,"line_end":2366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78747,"byte_end":78750,"line_start":2367,"line_end":2367,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78755,"byte_end":78786,"line_start":2368,"line_end":2368,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_min_by_key(|x| x.abs()), Some(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78791,"byte_end":78858,"line_start":2369,"line_end":2369,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78863,"byte_end":78870,"line_start":2370,"line_end":2370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79809,"byte_end":79824,"line_start":2399,"line_end":2399,"column_start":8,"column_end":23},"name":"position_min_by","qualname":"::Itertools::position_min_by","value":"pub fn position_min_by<F>(Self, F) -> Option<usize> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the position of the minimum element in the iterator, as\n determined by the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the position of the minimum element in the iterator, as","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79130,"byte_end":79196,"line_start":2379,"line_end":2379,"column_start":5,"column_end":71}},{"value":"/ determined by the specified comparison function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79201,"byte_end":79253,"line_start":2380,"line_end":2380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79258,"byte_end":79261,"line_start":2381,"line_end":2381,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally minimum, the position of the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79266,"byte_end":79330,"line_start":2382,"line_end":2382,"column_start":5,"column_end":69}},{"value":"/ first of them is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79335,"byte_end":79365,"line_start":2383,"line_end":2383,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79370,"byte_end":79373,"line_start":2384,"line_end":2384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79378,"byte_end":79392,"line_start":2385,"line_end":2385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79397,"byte_end":79400,"line_start":2386,"line_end":2386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79405,"byte_end":79412,"line_start":2387,"line_end":2387,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79417,"byte_end":79446,"line_start":2388,"line_end":2388,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79451,"byte_end":79454,"line_start":2389,"line_end":2389,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79459,"byte_end":79484,"line_start":2390,"line_end":2390,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_min_by(|x, y| x.cmp(y)), None);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79489,"byte_end":79553,"line_start":2391,"line_end":2391,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79558,"byte_end":79561,"line_start":2392,"line_end":2392,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79566,"byte_end":79601,"line_start":2393,"line_end":2393,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_min_by(|x, y| x.cmp(y)), Some(4));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79606,"byte_end":79673,"line_start":2394,"line_end":2394,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79678,"byte_end":79681,"line_start":2395,"line_end":2395,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79686,"byte_end":79717,"line_start":2396,"line_end":2396,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_min_by(|x, y| x.cmp(y)), Some(2));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79722,"byte_end":79789,"line_start":2397,"line_end":2397,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79794,"byte_end":79801,"line_start":2398,"line_end":2398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81782,"byte_end":81797,"line_start":2451,"line_end":2451,"column_start":8,"column_end":23},"name":"position_minmax","qualname":"::Itertools::position_minmax","value":"pub fn position_minmax(Self) -> MinMaxResult<usize> where Self: Sized,\nSelf::Item: PartialOrd","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the positions of the minimum and maximum elements in\n the iterator.","sig":null,"attributes":[{"value":"/ Return the positions of the minimum and maximum elements in","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80057,"byte_end":80120,"line_start":2407,"line_end":2407,"column_start":5,"column_end":68}},{"value":"/ the iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80125,"byte_end":80142,"line_start":2408,"line_end":2408,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80147,"byte_end":80150,"line_start":2409,"line_end":2409,"column_start":5,"column_end":8}},{"value":"/ The return type [`MinMaxResult`] is an enum of three variants:","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80155,"byte_end":80221,"line_start":2410,"line_end":2410,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80226,"byte_end":80229,"line_start":2411,"line_end":2411,"column_start":5,"column_end":8}},{"value":"/ - `NoElements` if the iterator is empty.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80234,"byte_end":80278,"line_start":2412,"line_end":2412,"column_start":5,"column_end":49}},{"value":"/ - `OneElement(xpos)` if the iterator has exactly one element.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80283,"byte_end":80348,"line_start":2413,"line_end":2413,"column_start":5,"column_end":70}},{"value":"/ - `MinMax(xpos, ypos)` is returned otherwise, where the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80353,"byte_end":80412,"line_start":2414,"line_end":2414,"column_start":5,"column_end":64}},{"value":"/    element at `xpos` ≤ the element at `ypos`. While the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80417,"byte_end":80478,"line_start":2415,"line_end":2415,"column_start":5,"column_end":64}},{"value":"/    referenced elements themselves may be equal, `xpos` cannot","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80483,"byte_end":80548,"line_start":2416,"line_end":2416,"column_start":5,"column_end":70}},{"value":"/    be equal to `ypos`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80553,"byte_end":80579,"line_start":2417,"line_end":2417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80584,"byte_end":80587,"line_start":2418,"line_end":2418,"column_start":5,"column_end":8}},{"value":"/ On an iterator of length `n`, `position_minmax` does `1.5 * n`","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80592,"byte_end":80658,"line_start":2419,"line_end":2419,"column_start":5,"column_end":71}},{"value":"/ comparisons, and so is faster than calling `positon_min` and","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80663,"byte_end":80727,"line_start":2420,"line_end":2420,"column_start":5,"column_end":69}},{"value":"/ `position_max` separately which does `2 * n` comparisons.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80732,"byte_end":80793,"line_start":2421,"line_end":2421,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80798,"byte_end":80801,"line_start":2422,"line_end":2422,"column_start":5,"column_end":8}},{"value":"/ For the minimum, if several elements are equally minimum, the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80806,"byte_end":80871,"line_start":2423,"line_end":2423,"column_start":5,"column_end":70}},{"value":"/ position of the first of them is returned. For the maximum, if","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80876,"byte_end":80942,"line_start":2424,"line_end":2424,"column_start":5,"column_end":71}},{"value":"/ several elements are equally maximum, the position of the last","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":80947,"byte_end":81013,"line_start":2425,"line_end":2425,"column_start":5,"column_end":71}},{"value":"/ of them is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81018,"byte_end":81042,"line_start":2426,"line_end":2426,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81047,"byte_end":81050,"line_start":2427,"line_end":2427,"column_start":5,"column_end":8}},{"value":"/ The elements can be floats but no particular result is","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81055,"byte_end":81113,"line_start":2428,"line_end":2428,"column_start":5,"column_end":63}},{"value":"/ guaranteed if an element is NaN.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81118,"byte_end":81154,"line_start":2429,"line_end":2429,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81159,"byte_end":81162,"line_start":2430,"line_end":2430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81167,"byte_end":81181,"line_start":2431,"line_end":2431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81186,"byte_end":81189,"line_start":2432,"line_end":2432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81194,"byte_end":81201,"line_start":2433,"line_end":2433,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81206,"byte_end":81235,"line_start":2434,"line_end":2434,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81240,"byte_end":81306,"line_start":2435,"line_end":2435,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81311,"byte_end":81314,"line_start":2436,"line_end":2436,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81319,"byte_end":81344,"line_start":2437,"line_end":2437,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_minmax(), NoElements);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81349,"byte_end":81404,"line_start":2438,"line_end":2438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81409,"byte_end":81412,"line_start":2439,"line_end":2439,"column_start":5,"column_end":8}},{"value":"/ let a = [10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81417,"byte_end":81434,"line_start":2440,"line_end":2440,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(a.iter().position_minmax(), OneElement(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81439,"byte_end":81497,"line_start":2441,"line_end":2441,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81502,"byte_end":81505,"line_start":2442,"line_end":2442,"column_start":5,"column_end":8}},{"value":"/ let a = [-3, 0, 1, 5, -10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81510,"byte_end":81541,"line_start":2443,"line_end":2443,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_minmax(), MinMax(4, 3));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81546,"byte_end":81603,"line_start":2444,"line_end":2444,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81608,"byte_end":81611,"line_start":2445,"line_end":2445,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, -1, -1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81616,"byte_end":81643,"line_start":2446,"line_end":2446,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(a.iter().position_minmax(), MinMax(2, 1));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81648,"byte_end":81705,"line_start":2447,"line_end":2447,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81710,"byte_end":81717,"line_start":2448,"line_end":2448,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81722,"byte_end":81725,"line_start":2449,"line_end":2449,"column_start":5,"column_end":8}},{"value":"/ [`MinMaxResult`]: enum.MinMaxResult.html","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81730,"byte_end":81774,"line_start":2450,"line_end":2450,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83532,"byte_end":83554,"line_start":2497,"line_end":2497,"column_start":8,"column_end":30},"name":"position_minmax_by_key","qualname":"::Itertools::position_minmax_by_key","value":"pub fn position_minmax_by_key<K, F>(Self, F) -> MinMaxResult<usize> where\nSelf: Sized, K: PartialOrd, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the postions of the minimum and maximum elements of an\n iterator, as determined by the specified function.","sig":null,"attributes":[{"value":"/ Return the postions of the minimum and maximum elements of an","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82187,"byte_end":82252,"line_start":2462,"line_end":2462,"column_start":5,"column_end":70}},{"value":"/ iterator, as determined by the specified function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82257,"byte_end":82311,"line_start":2463,"line_end":2463,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82316,"byte_end":82319,"line_start":2464,"line_end":2464,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of [`MinMaxResult`] like for","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82324,"byte_end":82386,"line_start":2465,"line_end":2465,"column_start":5,"column_end":67}},{"value":"/ [`position_minmax`].","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82391,"byte_end":82415,"line_start":2466,"line_end":2466,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82420,"byte_end":82423,"line_start":2467,"line_end":2467,"column_start":5,"column_end":8}},{"value":"/ For the minimum, if several elements are equally minimum, the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82428,"byte_end":82493,"line_start":2468,"line_end":2468,"column_start":5,"column_end":70}},{"value":"/ position of the first of them is returned. For the maximum, if","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82498,"byte_end":82564,"line_start":2469,"line_end":2469,"column_start":5,"column_end":71}},{"value":"/ several elements are equally maximum, the position of the last","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82569,"byte_end":82635,"line_start":2470,"line_end":2470,"column_start":5,"column_end":71}},{"value":"/ of them is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82640,"byte_end":82664,"line_start":2471,"line_end":2471,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82669,"byte_end":82672,"line_start":2472,"line_end":2472,"column_start":5,"column_end":8}},{"value":"/ The keys can be floats but no particular result is guaranteed","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82677,"byte_end":82742,"line_start":2473,"line_end":2473,"column_start":5,"column_end":70}},{"value":"/ if a key is NaN.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82747,"byte_end":82767,"line_start":2474,"line_end":2474,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82772,"byte_end":82775,"line_start":2475,"line_end":2475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82780,"byte_end":82794,"line_start":2476,"line_end":2476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82799,"byte_end":82802,"line_start":2477,"line_end":2477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82807,"byte_end":82814,"line_start":2478,"line_end":2478,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82819,"byte_end":82848,"line_start":2479,"line_end":2479,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82853,"byte_end":82919,"line_start":2480,"line_end":2480,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82924,"byte_end":82927,"line_start":2481,"line_end":2481,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82932,"byte_end":82957,"line_start":2482,"line_end":2482,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), NoElements);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":82962,"byte_end":83035,"line_start":2483,"line_end":2483,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83040,"byte_end":83043,"line_start":2484,"line_end":2484,"column_start":5,"column_end":8}},{"value":"/ let a = [10_i32];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83048,"byte_end":83069,"line_start":2485,"line_end":2485,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), OneElement(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83074,"byte_end":83150,"line_start":2486,"line_end":2486,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83155,"byte_end":83158,"line_start":2487,"line_end":2487,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83163,"byte_end":83198,"line_start":2488,"line_end":2488,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), MinMax(1, 4));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83203,"byte_end":83278,"line_start":2489,"line_end":2489,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83283,"byte_end":83286,"line_start":2490,"line_end":2490,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83291,"byte_end":83322,"line_start":2491,"line_end":2491,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), MinMax(0, 3));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83327,"byte_end":83402,"line_start":2492,"line_end":2492,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83407,"byte_end":83414,"line_start":2493,"line_end":2493,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83419,"byte_end":83422,"line_start":2494,"line_end":2494,"column_start":5,"column_end":8}},{"value":"/ [`MinMaxResult`]: enum.MinMaxResult.html","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83427,"byte_end":83471,"line_start":2495,"line_end":2495,"column_start":5,"column_end":49}},{"value":"/ [`position_minmax`]: #method.position_minmax","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83476,"byte_end":83524,"line_start":2496,"line_end":2496,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85210,"byte_end":85228,"line_start":2540,"line_end":2540,"column_start":8,"column_end":26},"name":"position_minmax_by","qualname":"::Itertools::position_minmax_by","value":"pub fn position_minmax_by<F>(Self, F) -> MinMaxResult<usize> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Return the postions of the minimum and maximum elements of an\n iterator, as determined by the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the postions of the minimum and maximum elements of an","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83957,"byte_end":84022,"line_start":2508,"line_end":2508,"column_start":5,"column_end":70}},{"value":"/ iterator, as determined by the specified comparison function.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84027,"byte_end":84092,"line_start":2509,"line_end":2509,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84097,"byte_end":84100,"line_start":2510,"line_end":2510,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of [`MinMaxResult`] like for","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84105,"byte_end":84167,"line_start":2511,"line_end":2511,"column_start":5,"column_end":67}},{"value":"/ [`position_minmax`].","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84172,"byte_end":84196,"line_start":2512,"line_end":2512,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84201,"byte_end":84204,"line_start":2513,"line_end":2513,"column_start":5,"column_end":8}},{"value":"/ For the minimum, if several elements are equally minimum, the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84209,"byte_end":84274,"line_start":2514,"line_end":2514,"column_start":5,"column_end":70}},{"value":"/ position of the first of them is returned. For the maximum, if","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84279,"byte_end":84345,"line_start":2515,"line_end":2515,"column_start":5,"column_end":71}},{"value":"/ several elements are equally maximum, the position of the last","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84350,"byte_end":84416,"line_start":2516,"line_end":2516,"column_start":5,"column_end":71}},{"value":"/ of them is returned.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84421,"byte_end":84445,"line_start":2517,"line_end":2517,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84450,"byte_end":84453,"line_start":2518,"line_end":2518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84458,"byte_end":84472,"line_start":2519,"line_end":2519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84477,"byte_end":84480,"line_start":2520,"line_end":2520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84485,"byte_end":84492,"line_start":2521,"line_end":2521,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84497,"byte_end":84526,"line_start":2522,"line_end":2522,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84531,"byte_end":84597,"line_start":2523,"line_end":2523,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84602,"byte_end":84605,"line_start":2524,"line_end":2524,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84610,"byte_end":84635,"line_start":2525,"line_end":2525,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), NoElements);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84640,"byte_end":84713,"line_start":2526,"line_end":2526,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84718,"byte_end":84721,"line_start":2527,"line_end":2527,"column_start":5,"column_end":8}},{"value":"/ let a = [10_i32];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84726,"byte_end":84747,"line_start":2528,"line_end":2528,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), OneElement(0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84752,"byte_end":84828,"line_start":2529,"line_end":2529,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84833,"byte_end":84836,"line_start":2530,"line_end":2530,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84841,"byte_end":84876,"line_start":2531,"line_end":2531,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), MinMax(4, 3));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84881,"byte_end":84956,"line_start":2532,"line_end":2532,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84961,"byte_end":84964,"line_start":2533,"line_end":2533,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":84969,"byte_end":85000,"line_start":2534,"line_end":2534,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), MinMax(2, 1));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85005,"byte_end":85080,"line_start":2535,"line_end":2535,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85085,"byte_end":85092,"line_start":2536,"line_end":2536,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85097,"byte_end":85100,"line_start":2537,"line_end":2537,"column_start":5,"column_end":8}},{"value":"/ [`MinMaxResult`]: enum.MinMaxResult.html","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85105,"byte_end":85149,"line_start":2538,"line_end":2538,"column_start":5,"column_end":49}},{"value":"/ [`position_minmax`]: #method.position_minmax","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85154,"byte_end":85202,"line_start":2539,"line_end":2539,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86566,"byte_end":86577,"line_start":2568,"line_end":2568,"column_start":8,"column_end":19},"name":"exactly_one","qualname":"::Itertools::exactly_one","value":"pub fn exactly_one(Self) -> Result<Self::Item, ExactlyOneError<Self>> where\nSelf: Sized","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" If the iterator yields exactly one element, that element will be returned, otherwise\n an error will be returned containing an iterator that has the same output as the input\n iterator.","sig":null,"attributes":[{"value":"/ If the iterator yields exactly one element, that element will be returned, otherwise","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85646,"byte_end":85734,"line_start":2551,"line_end":2551,"column_start":5,"column_end":93}},{"value":"/ an error will be returned containing an iterator that has the same output as the input","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85739,"byte_end":85829,"line_start":2552,"line_end":2552,"column_start":5,"column_end":95}},{"value":"/ iterator.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85834,"byte_end":85847,"line_start":2553,"line_end":2553,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85852,"byte_end":85855,"line_start":2554,"line_end":2554,"column_start":5,"column_end":8}},{"value":"/ This provides an additional layer of validation over just calling `Iterator::next()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85860,"byte_end":85949,"line_start":2555,"line_end":2555,"column_start":5,"column_end":94}},{"value":"/ If your assumption that there should only be one element yielded is false this provides","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85954,"byte_end":86045,"line_start":2556,"line_end":2556,"column_start":5,"column_end":96}},{"value":"/ the opportunity to detect and handle that, preventing errors at a distance.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86050,"byte_end":86129,"line_start":2557,"line_end":2557,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86134,"byte_end":86137,"line_start":2558,"line_end":2558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86142,"byte_end":86156,"line_start":2559,"line_end":2559,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86161,"byte_end":86168,"line_start":2560,"line_end":2560,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86173,"byte_end":86202,"line_start":2561,"line_end":2561,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86207,"byte_end":86210,"line_start":2562,"line_end":2562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!((0..10).filter(|&x| x == 2).exactly_one().unwrap(), 2);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86215,"byte_end":86285,"line_start":2563,"line_end":2563,"column_start":5,"column_end":75}},{"value":"/ assert!((0..10).filter(|&x| x > 1 && x < 4).exactly_one().unwrap_err().eq(2..4));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86290,"byte_end":86375,"line_start":2564,"line_end":2564,"column_start":5,"column_end":90}},{"value":"/ assert!((0..10).filter(|&x| x > 1 && x < 5).exactly_one().unwrap_err().eq(2..5));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86380,"byte_end":86465,"line_start":2565,"line_end":2565,"column_start":5,"column_end":90}},{"value":"/ assert!((0..10).filter(|&_| false).exactly_one().unwrap_err().eq(0..0));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86470,"byte_end":86546,"line_start":2566,"line_end":2566,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86551,"byte_end":86558,"line_start":2567,"line_end":2567,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1939},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87564,"byte_end":87569,"line_start":2601,"line_end":2601,"column_start":8,"column_end":13},"name":"equal","qualname":"::equal","value":"pub fn equal<I, J>(I, J) -> bool where I: IntoIterator, J: IntoIterator,\nI::Item: PartialEq<J::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if both iterables produce equal sequences\n (elements pairwise equal and sequences of the same length),\n `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if both iterables produce equal sequences","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87167,"byte_end":87226,"line_start":2590,"line_end":2590,"column_start":1,"column_end":60}},{"value":"/ (elements pairwise equal and sequences of the same length),","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87227,"byte_end":87290,"line_start":2591,"line_end":2591,"column_start":1,"column_end":64}},{"value":"/ `false` otherwise.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87291,"byte_end":87313,"line_start":2592,"line_end":2592,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87314,"byte_end":87317,"line_start":2593,"line_end":2593,"column_start":1,"column_end":4}},{"value":"/ This is an `IntoIterator` enabled function that is similar to the standard","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87318,"byte_end":87396,"line_start":2594,"line_end":2594,"column_start":1,"column_end":79}},{"value":"/ library method `Iterator::eq`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87397,"byte_end":87431,"line_start":2595,"line_end":2595,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87432,"byte_end":87435,"line_start":2596,"line_end":2596,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87436,"byte_end":87443,"line_start":2597,"line_end":2597,"column_start":1,"column_end":8}},{"value":"/ assert!(itertools::equal(vec![1, 2, 3], 1..4));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87444,"byte_end":87495,"line_start":2598,"line_end":2598,"column_start":1,"column_end":52}},{"value":"/ assert!(!itertools::equal(&[0, 0], &[0, 0, 0]));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87496,"byte_end":87548,"line_start":2599,"line_end":2599,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87549,"byte_end":87556,"line_start":2600,"line_end":2600,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1942},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88389,"byte_end":88401,"line_start":2629,"line_end":2629,"column_start":8,"column_end":20},"name":"assert_equal","qualname":"::assert_equal","value":"pub fn assert_equal<I, J>(I, J) where I: IntoIterator, J: IntoIterator,\nI::Item: fmt::Debug + PartialEq<J::Item>, J::Item: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Assert that two iterables produce equal sequences, with the same\n semantics as *equal(a, b)*.","sig":null,"attributes":[{"value":"/ Assert that two iterables produce equal sequences, with the same","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88007,"byte_end":88075,"line_start":2619,"line_end":2619,"column_start":1,"column_end":69}},{"value":"/ semantics as *equal(a, b)*.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88076,"byte_end":88107,"line_start":2620,"line_end":2620,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88108,"byte_end":88111,"line_start":2621,"line_end":2621,"column_start":1,"column_end":4}},{"value":"/ **Panics** on assertion failure with a message that shows the","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88112,"byte_end":88177,"line_start":2622,"line_end":2622,"column_start":1,"column_end":66}},{"value":"/ two iteration elements.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88178,"byte_end":88205,"line_start":2623,"line_end":2623,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88206,"byte_end":88209,"line_start":2624,"line_end":2624,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88210,"byte_end":88223,"line_start":2625,"line_end":2625,"column_start":1,"column_end":14}},{"value":"/ assert_equal(\"exceed\".split('c'), \"excess\".split('c'));","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88224,"byte_end":88283,"line_start":2626,"line_end":2626,"column_start":1,"column_end":60}},{"value":"/ // ^PANIC: panicked at 'Failed assertion Some(\"eed\") == Some(\"ess\") for iteration 1',","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88284,"byte_end":88373,"line_start":2627,"line_end":2627,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88374,"byte_end":88381,"line_start":2628,"line_end":2628,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1945},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89628,"byte_end":89637,"line_start":2671,"line_end":2671,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"pub fn partition<'a, A: 'a, I, F>(I, F) -> usize where I: IntoIterator<Item =\n&'a mut A>, I::IntoIter: DoubleEndedIterator, F: FnMut(&A) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Partition a sequence using predicate `pred` so that elements\n that map to `true` are placed before elements which map to `false`.","sig":null,"attributes":[{"value":"/ Partition a sequence using predicate `pred` so that elements","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89089,"byte_end":89153,"line_start":2654,"line_end":2654,"column_start":1,"column_end":65}},{"value":"/ that map to `true` are placed before elements which map to `false`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89154,"byte_end":89225,"line_start":2655,"line_end":2655,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89226,"byte_end":89229,"line_start":2656,"line_end":2656,"column_start":1,"column_end":4}},{"value":"/ The order within the partitions is arbitrary.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89230,"byte_end":89279,"line_start":2657,"line_end":2657,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89280,"byte_end":89283,"line_start":2658,"line_end":2658,"column_start":1,"column_end":4}},{"value":"/ Return the index of the split point.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89284,"byte_end":89324,"line_start":2659,"line_end":2659,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89325,"byte_end":89328,"line_start":2660,"line_end":2660,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89329,"byte_end":89336,"line_start":2661,"line_end":2661,"column_start":1,"column_end":8}},{"value":"/ use itertools::partition;","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89337,"byte_end":89366,"line_start":2662,"line_end":2662,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89367,"byte_end":89370,"line_start":2663,"line_end":2663,"column_start":1,"column_end":4}},{"value":"/ # // use repeated numbers to not promise any ordering","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89371,"byte_end":89428,"line_start":2664,"line_end":2664,"column_start":1,"column_end":58}},{"value":"/ let mut data = [7, 1, 1, 7, 1, 1, 7];","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89429,"byte_end":89470,"line_start":2665,"line_end":2665,"column_start":1,"column_end":42}},{"value":"/ let split_index = partition(&mut data, |elt| *elt >= 3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89471,"byte_end":89531,"line_start":2666,"line_end":2666,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89532,"byte_end":89535,"line_start":2667,"line_end":2667,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(data, [7, 7, 7, 1, 1, 1, 1]);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89536,"byte_end":89580,"line_start":2668,"line_end":2668,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(split_index, 3);","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89581,"byte_end":89612,"line_start":2669,"line_end":2669,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89613,"byte_end":89620,"line_start":2670,"line_end":2670,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3093},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90573,"byte_end":90581,"line_start":2701,"line_end":2701,"column_start":5,"column_end":13},"name":"Continue","qualname":"::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90532,"byte_end":90568,"line_start":2700,"line_end":2700,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3096},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90642,"byte_end":90646,"line_start":2703,"line_end":2703,"column_start":5,"column_end":9},"name":"Done","qualname":"::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90590,"byte_end":90637,"line_start":2702,"line_end":2702,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90513,"byte_end":90522,"line_start":2699,"line_end":2699,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::FoldWhile","value":"pub enum FoldWhile<T> { Continue(T), Done(T), }","parent":null,"children":[{"krate":0,"index":3093},{"krate":0,"index":3096}],"decl_id":null,"docs":" An enum used for controlling the execution of `.fold_while()`.","sig":null,"attributes":[{"value":"/ An enum used for controlling the execution of `.fold_while()`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90300,"byte_end":90366,"line_start":2695,"line_end":2695,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90367,"byte_end":90370,"line_start":2696,"line_end":2696,"column_start":1,"column_end":4}},{"value":"/ See [`.fold_while()`](trait.Itertools.html#method.fold_while) for more information.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90371,"byte_end":90458,"line_start":2697,"line_end":2697,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90738,"byte_end":90748,"line_start":2708,"line_end":2708,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value in the continue or done.\n","sig":null,"attributes":[{"value":"/ Return the value in the continue or done.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90681,"byte_end":90726,"line_start":2707,"line_end":2707,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90941,"byte_end":90948,"line_start":2715,"line_end":2715,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `self` is `Done`, false if it is `Continue`.\n","sig":null,"attributes":[{"value":"/ Return true if `self` is `Done`, false if it is `Continue`.","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90866,"byte_end":90929,"line_start":2714,"line_end":2714,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":126141,"byte_end":126153,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":128244,"byte_end":128260,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":128908,"byte_end":128920,"line_start":146,"line_end":146,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93146,"byte_end":93156,"line_start":53,"line_end":53,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":94567,"byte_end":94585,"line_start":109,"line_end":109,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96835,"byte_end":96842,"line_start":194,"line_end":194,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97461,"byte_end":97468,"line_start":219,"line_end":219,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99855,"byte_end":99862,"line_start":314,"line_end":314,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102295,"byte_end":102303,"line_start":389,"line_end":389,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102522,"byte_end":102530,"line_start":398,"line_end":398,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103695,"byte_end":103699,"line_start":446,"line_end":446,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104318,"byte_end":104322,"line_start":474,"line_end":474,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104527,"byte_end":104535,"line_start":485,"line_end":485,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106066,"byte_end":106073,"line_start":536,"line_end":536,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106289,"byte_end":106290,"line_start":543,"line_end":543,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106761,"byte_end":106768,"line_start":563,"line_end":563,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106988,"byte_end":106995,"line_start":573,"line_end":573,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":108123,"byte_end":108135,"line_start":617,"line_end":617,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109369,"byte_end":109377,"line_start":659,"line_end":659,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109491,"byte_end":109499,"line_start":666,"line_end":666,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109877,"byte_end":109885,"line_start":686,"line_end":686,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110855,"byte_end":110862,"line_start":719,"line_end":719,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110994,"byte_end":110995,"line_start":725,"line_end":725,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111300,"byte_end":111307,"line_start":736,"line_end":736,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111816,"byte_end":111823,"line_start":763,"line_end":763,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111968,"byte_end":111975,"line_start":770,"line_end":770,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113348,"byte_end":113360,"line_start":816,"line_end":816,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113688,"byte_end":113700,"line_start":829,"line_end":829,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114793,"byte_end":114802,"line_start":871,"line_end":871,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116118,"byte_end":116135,"line_start":922,"line_end":922,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116394,"byte_end":116411,"line_start":938,"line_end":938,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116523,"byte_end":116540,"line_start":944,"line_end":944,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119318,"byte_end":119325,"line_start":1037,"line_end":1037,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119840,"byte_end":119847,"line_start":1060,"line_end":1060,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120086,"byte_end":120093,"line_start":1071,"line_end":1071,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120744,"byte_end":120754,"line_start":1098,"line_end":1098,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122053,"byte_end":122062,"line_start":1150,"line_end":1150,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122551,"byte_end":122560,"line_start":1172,"line_end":1172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":123406,"byte_end":123412,"line_start":1205,"line_end":1205,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":124278,"byte_end":124284,"line_start":1241,"line_end":1241,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":124390,"byte_end":124396,"line_start":1247,"line_end":1247,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131291,"byte_end":131303,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":668},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135916,"byte_end":135928,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":136291,"byte_end":136303,"line_start":182,"line_end":182,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144357,"byte_end":144367,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145109,"byte_end":145121,"line_start":15,"line_end":15,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145251,"byte_end":145263,"line_start":22,"line_end":22,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145804,"byte_end":145816,"line_start":48,"line_end":48,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147727,"byte_end":147754,"line_start":22,"line_end":22,"column_start":24,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147913,"byte_end":147940,"line_start":30,"line_end":30,"column_start":9,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":148635,"byte_end":148662,"line_start":59,"line_end":59,"column_start":22,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150927,"byte_end":150942,"line_start":22,"line_end":22,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":151172,"byte_end":151187,"line_start":32,"line_end":32,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":151809,"byte_end":151824,"line_start":58,"line_end":58,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155958,"byte_end":155968,"line_start":50,"line_end":50,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":156719,"byte_end":156725,"line_start":74,"line_end":74,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158672,"byte_end":158673,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158978,"byte_end":158988,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":159178,"byte_end":159188,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":160230,"byte_end":160240,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167018,"byte_end":167028,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":168840,"byte_end":168847,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170054,"byte_end":170060,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170963,"byte_end":170968,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":171139,"byte_end":171144,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172976,"byte_end":172986,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173972,"byte_end":173978,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174730,"byte_end":174735,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174894,"byte_end":174899,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175991,"byte_end":176002,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":177627,"byte_end":177635,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":178531,"byte_end":178539,"line_start":53,"line_end":53,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180257,"byte_end":180267,"line_start":111,"line_end":111,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180402,"byte_end":180403,"line_start":117,"line_end":117,"column_start":56,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181503,"byte_end":181511,"line_start":158,"line_end":158,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":182350,"byte_end":182358,"line_start":182,"line_end":182,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":182507,"byte_end":182515,"line_start":190,"line_end":190,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs","byte_start":183396,"byte_end":183406,"line_start":10,"line_end":10,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs","byte_start":184112,"byte_end":184122,"line_start":48,"line_end":48,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185470,"byte_end":185481,"line_start":34,"line_end":34,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185701,"byte_end":185712,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185937,"byte_end":185948,"line_start":53,"line_end":53,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190616,"byte_end":190628,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194671,"byte_end":194680,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194833,"byte_end":194842,"line_start":37,"line_end":37,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195486,"byte_end":195495,"line_start":59,"line_end":59,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195962,"byte_end":195971,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":196395,"byte_end":196404,"line_start":98,"line_end":98,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":197223,"byte_end":197231,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":197994,"byte_end":198002,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":198459,"byte_end":198467,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199376,"byte_end":199384,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199704,"byte_end":199711,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200128,"byte_end":200136,"line_start":56,"line_end":56,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":201082,"byte_end":201098,"line_start":96,"line_end":96,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203431,"byte_end":203443,"line_start":17,"line_end":17,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":204018,"byte_end":204030,"line_start":54,"line_end":54,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":204896,"byte_end":204908,"line_start":95,"line_end":95,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1356},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":207585,"byte_end":207597,"line_start":169,"line_end":169,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":208828,"byte_end":208841,"line_start":207,"line_end":207,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211513,"byte_end":211527,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214254,"byte_end":214262,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214764,"byte_end":214772,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216788,"byte_end":216794,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216868,"byte_end":216874,"line_start":58,"line_end":58,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":217433,"byte_end":217439,"line_start":77,"line_end":77,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218415,"byte_end":218422,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218812,"byte_end":218819,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218969,"byte_end":218976,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":221978,"byte_end":221988,"line_start":15,"line_end":15,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222827,"byte_end":222837,"line_start":49,"line_end":49,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224503,"byte_end":224509,"line_start":110,"line_end":110,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224896,"byte_end":224902,"line_start":125,"line_end":125,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225591,"byte_end":225598,"line_start":154,"line_end":154,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2737}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225701,"byte_end":225708,"line_start":160,"line_end":160,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":227413,"byte_end":227416,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":228513,"byte_end":228516,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229055,"byte_end":229056,"line_start":15,"line_end":15,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229370,"byte_end":229381,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229553,"byte_end":229564,"line_start":40,"line_end":40,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230234,"byte_end":230245,"line_start":68,"line_end":68,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230923,"byte_end":230929,"line_start":97,"line_end":97,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231145,"byte_end":231151,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":232765,"byte_end":232777,"line_start":166,"line_end":166,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236585,"byte_end":236593,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":237382,"byte_end":237390,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":238107,"byte_end":238113,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":239140,"byte_end":239146,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239977,"byte_end":239989,"line_start":16,"line_end":16,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2863}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240812,"byte_end":240820,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":241099,"byte_end":241111,"line_start":61,"line_end":61,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":242347,"byte_end":242359,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243277,"byte_end":243282,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243860,"byte_end":243865,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244794,"byte_end":244804,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":245426,"byte_end":245436,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":246257,"byte_end":246267,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87142,"byte_end":87143,"line_start":2588,"line_end":2588,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90662,"byte_end":90671,"line_start":2706,"line_end":2706,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4893,"byte_end":4897,"line_start":164,"line_end":164,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":685}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":126141,"byte_end":126153,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":128244,"byte_end":128260,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":128908,"byte_end":128920,"line_start":146,"line_end":146,"column_start":22,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1954},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93146,"byte_end":93156,"line_start":53,"line_end":53,"column_start":25,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1979},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":94567,"byte_end":94585,"line_start":109,"line_end":109,"column_start":25,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1993},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96835,"byte_end":96842,"line_start":194,"line_end":194,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97461,"byte_end":97468,"line_start":219,"line_end":219,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2007},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99855,"byte_end":99862,"line_start":314,"line_end":314,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2017},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102295,"byte_end":102303,"line_start":389,"line_end":389,"column_start":27,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2032},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102522,"byte_end":102530,"line_start":398,"line_end":398,"column_start":28,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2032},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103695,"byte_end":103699,"line_start":446,"line_end":446,"column_start":22,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2042},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104318,"byte_end":104322,"line_start":474,"line_end":474,"column_start":31,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2042},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104527,"byte_end":104535,"line_start":485,"line_end":485,"column_start":43,"column_end":51},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2052},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106066,"byte_end":106073,"line_start":536,"line_end":536,"column_start":30,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106289,"byte_end":106290,"line_start":543,"line_end":543,"column_start":55,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":425},"to":{"krate":0,"index":399}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106761,"byte_end":106768,"line_start":563,"line_end":563,"column_start":25,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106988,"byte_end":106995,"line_start":573,"line_end":573,"column_start":28,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":108123,"byte_end":108135,"line_start":617,"line_end":617,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109369,"byte_end":109377,"line_start":659,"line_end":659,"column_start":36,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109491,"byte_end":109499,"line_start":666,"line_end":666,"column_start":27,"column_end":35},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109877,"byte_end":109885,"line_start":686,"line_end":686,"column_start":25,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110855,"byte_end":110862,"line_start":719,"line_end":719,"column_start":42,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2070},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110994,"byte_end":110995,"line_start":725,"line_end":725,"column_start":55,"column_end":56},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":480},"to":{"krate":0,"index":472}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111300,"byte_end":111307,"line_start":736,"line_end":736,"column_start":39,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111816,"byte_end":111823,"line_start":763,"line_end":763,"column_start":30,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111968,"byte_end":111975,"line_start":770,"line_end":770,"column_start":28,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113348,"byte_end":113360,"line_start":816,"line_end":816,"column_start":31,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113688,"byte_end":113700,"line_start":829,"line_end":829,"column_start":29,"column_end":41},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114793,"byte_end":114802,"line_start":871,"line_end":871,"column_start":25,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2077},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115679,"byte_end":115684,"line_start":905,"line_end":905,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":534}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116118,"byte_end":116135,"line_start":922,"line_end":922,"column_start":25,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2086},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116394,"byte_end":116411,"line_start":938,"line_end":938,"column_start":21,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2100},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116523,"byte_end":116540,"line_start":944,"line_end":944,"column_start":32,"column_end":49},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2100},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119318,"byte_end":119325,"line_start":1037,"line_end":1037,"column_start":25,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119840,"byte_end":119847,"line_start":1060,"line_end":1060,"column_start":36,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":7097}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120086,"byte_end":120093,"line_start":1071,"line_end":1071,"column_start":34,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120744,"byte_end":120754,"line_start":1098,"line_end":1098,"column_start":34,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122053,"byte_end":122062,"line_start":1150,"line_end":1150,"column_start":25,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2211},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122551,"byte_end":122560,"line_start":1172,"line_end":1172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2211},"to":{"krate":2,"index":7097}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":123406,"byte_end":123412,"line_start":1205,"line_end":1205,"column_start":25,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2221},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":124278,"byte_end":124284,"line_start":1241,"line_end":1241,"column_start":34,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2221},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":124390,"byte_end":124396,"line_start":1247,"line_end":1247,"column_start":36,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2221},"to":{"krate":2,"index":7097}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131291,"byte_end":131303,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135916,"byte_end":135928,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":136291,"byte_end":136303,"line_start":182,"line_end":182,"column_start":43,"column_end":55},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2230},"to":{"krate":2,"index":2735}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144357,"byte_end":144367,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2421},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145109,"byte_end":145121,"line_start":15,"line_end":15,"column_start":19,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145251,"byte_end":145263,"line_start":22,"line_end":22,"column_start":24,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145804,"byte_end":145816,"line_start":48,"line_end":48,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147727,"byte_end":147754,"line_start":22,"line_end":22,"column_start":24,"column_end":51},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2432},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147913,"byte_end":147940,"line_start":30,"line_end":30,"column_start":9,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":148635,"byte_end":148662,"line_start":59,"line_end":59,"column_start":22,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2432},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150927,"byte_end":150942,"line_start":22,"line_end":22,"column_start":9,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":151172,"byte_end":151187,"line_start":32,"line_end":32,"column_start":22,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2443},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":151809,"byte_end":151824,"line_start":58,"line_end":58,"column_start":31,"column_end":46},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2443},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155958,"byte_end":155968,"line_start":50,"line_end":50,"column_start":33,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2453},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":156719,"byte_end":156725,"line_start":74,"line_end":74,"column_start":13,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158672,"byte_end":158673,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":927},"to":{"krate":0,"index":919}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158978,"byte_end":158988,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":159178,"byte_end":159188,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2509},"to":{"krate":0,"index":919}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":160230,"byte_end":160240,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167018,"byte_end":167028,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":168840,"byte_end":168847,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170054,"byte_end":170060,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170963,"byte_end":170968,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":3078}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":171139,"byte_end":171144,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172976,"byte_end":172986,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173972,"byte_end":173978,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174730,"byte_end":174735,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":3078}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174894,"byte_end":174899,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175991,"byte_end":176002,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2518},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":177627,"byte_end":177635,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":178531,"byte_end":178539,"line_start":53,"line_end":53,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2526},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180257,"byte_end":180267,"line_start":111,"line_end":111,"column_start":44,"column_end":54},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2534},"to":{"krate":0,"index":1118}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180402,"byte_end":180403,"line_start":117,"line_end":117,"column_start":56,"column_end":57},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1126},"to":{"krate":0,"index":1118}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181503,"byte_end":181511,"line_start":158,"line_end":158,"column_start":27,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":182350,"byte_end":182358,"line_start":182,"line_end":182,"column_start":22,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":182507,"byte_end":182515,"line_start":190,"line_end":190,"column_start":25,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs","byte_start":183396,"byte_end":183406,"line_start":10,"line_end":10,"column_start":9,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs","byte_start":184112,"byte_end":184122,"line_start":48,"line_end":48,"column_start":25,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2540},"to":{"krate":2,"index":3139}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185470,"byte_end":185481,"line_start":34,"line_end":34,"column_start":25,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185701,"byte_end":185712,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185937,"byte_end":185948,"line_start":53,"line_end":53,"column_start":28,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190616,"byte_end":190628,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194671,"byte_end":194680,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194833,"byte_end":194842,"line_start":37,"line_end":37,"column_start":19,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195486,"byte_end":195495,"line_start":59,"line_end":59,"column_start":25,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2578},"to":{"krate":0,"index":1292}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195962,"byte_end":195971,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":196395,"byte_end":196404,"line_start":98,"line_end":98,"column_start":31,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":197223,"byte_end":197231,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2589},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":197994,"byte_end":198002,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2589},"to":{"krate":2,"index":7097}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":198459,"byte_end":198467,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2589},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199062,"byte_end":199070,"line_start":14,"line_end":14,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":7233},"to":{"krate":0,"index":1292}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199376,"byte_end":199384,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":2,"index":38966},"to":{"krate":0,"index":1292}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199704,"byte_end":199711,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2007},"to":{"krate":0,"index":1292}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200128,"byte_end":200136,"line_start":56,"line_end":56,"column_start":25,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2684},"to":{"krate":0,"index":1292}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":201082,"byte_end":201098,"line_start":96,"line_end":96,"column_start":29,"column_end":45},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1307},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203431,"byte_end":203443,"line_start":17,"line_end":17,"column_start":19,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":204018,"byte_end":204030,"line_start":54,"line_end":54,"column_start":24,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":204896,"byte_end":204908,"line_start":95,"line_end":95,"column_start":22,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":207585,"byte_end":207597,"line_start":169,"line_end":169,"column_start":9,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":208828,"byte_end":208841,"line_start":207,"line_end":207,"column_start":6,"column_end":19},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211513,"byte_end":211527,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2673},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214254,"byte_end":214262,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214764,"byte_end":214772,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2684},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216788,"byte_end":216794,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2694},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216868,"byte_end":216874,"line_start":58,"line_end":58,"column_start":25,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2694},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":217433,"byte_end":217439,"line_start":77,"line_end":77,"column_start":33,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2694},"to":{"krate":2,"index":7097}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218415,"byte_end":218422,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2701},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218812,"byte_end":218819,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2701},"to":{"krate":2,"index":7097}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218969,"byte_end":218976,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2701},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":221978,"byte_end":221988,"line_start":15,"line_end":15,"column_start":24,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2711},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222827,"byte_end":222837,"line_start":49,"line_end":49,"column_start":25,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2711},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224503,"byte_end":224509,"line_start":110,"line_end":110,"column_start":28,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2719},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224896,"byte_end":224902,"line_start":125,"line_end":125,"column_start":29,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2719},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225591,"byte_end":225598,"line_start":154,"line_end":154,"column_start":28,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2728},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225701,"byte_end":225708,"line_start":160,"line_end":160,"column_start":26,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2728},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":227413,"byte_end":227416,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2748},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":228513,"byte_end":228516,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2748},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":228995,"byte_end":229007,"line_start":12,"line_end":12,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":1572},"to":{"krate":0,"index":1535}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229055,"byte_end":229056,"line_start":15,"line_end":15,"column_start":44,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1537},"to":{"krate":0,"index":1535}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229370,"byte_end":229381,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229553,"byte_end":229564,"line_start":40,"line_end":40,"column_start":22,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2755},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230234,"byte_end":230245,"line_start":68,"line_end":68,"column_start":31,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2755},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230923,"byte_end":230929,"line_start":97,"line_end":97,"column_start":25,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2765},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231145,"byte_end":231151,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":232765,"byte_end":232777,"line_start":166,"line_end":166,"column_start":25,"column_end":37},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2774},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233307,"byte_end":233312,"line_start":187,"line_end":187,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1572}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236585,"byte_end":236593,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2843},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":237382,"byte_end":237390,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2843},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":238107,"byte_end":238113,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2856},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":239140,"byte_end":239146,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2856},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239977,"byte_end":239989,"line_start":16,"line_end":16,"column_start":19,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1635},"to":{"krate":2,"index":2457}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240812,"byte_end":240820,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":241099,"byte_end":241111,"line_start":61,"line_end":61,"column_start":32,"column_end":44},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1635},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":242347,"byte_end":242359,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1635},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243277,"byte_end":243282,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243860,"byte_end":243865,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244794,"byte_end":244804,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2905},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":245426,"byte_end":245436,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2905},"to":{"krate":2,"index":7097}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":246257,"byte_end":246267,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2905},"to":{"krate":2,"index":7122}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9848,"byte_end":9856,"line_start":334,"line_end":334,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":7233},"to":{"krate":0,"index":1715}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87142,"byte_end":87143,"line_start":2588,"line_end":2588,"column_start":31,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1938},"to":{"krate":0,"index":1715}},{"span":{"file_name":"/Users/wandang/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90662,"byte_end":90671,"line_start":2706,"line_end":2706,"column_start":9,"column_end":18},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3091},"to":{"krate":4294967295,"index":4294967295}}]}