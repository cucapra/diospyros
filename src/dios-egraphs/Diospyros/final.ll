; ModuleID = 'finish.ll'
source_filename = "llvm-tests/qr-decomp-fixed-size.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.14.0"

@__const.main.A = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00, float 4.000000e+00], align 16
@.str = private unnamed_addr constant [4 x i8] c"%f\0A\00", align 1

; Function Attrs: alwaysinline nounwind ssp uwtable
define float @sgn(float %0) #0 {
  %2 = fcmp ogt float %0, 0.000000e+00
  %3 = zext i1 %2 to i32
  %4 = fcmp olt float %0, 0.000000e+00
  %.neg = sext i1 %4 to i32
  %5 = add nsw i32 %.neg, %3
  %6 = sitofp i32 %5 to float
  ret float %6
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define float @naive_norm(float* %0, i32 %1) #0 {
  %3 = icmp sgt i32 %1, 0
  %smax = select i1 %3, i32 %1, i32 0
  %wide.trip.count = zext i32 %smax to i64
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %2
  %xtraiter = and i64 %wide.trip.count, 1
  %4 = icmp eq i32 %smax, 1
  br i1 %4, label %._crit_edge.unr-lcssa, label %.lr.ph.new

.lr.ph.new:                                       ; preds = %.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 2147483646
  br label %5

5:                                                ; preds = %5, %.lr.ph.new
  %.013 = phi float [ 0.000000e+00, %.lr.ph.new ], [ %17, %5 ]
  %indvars.iv2 = phi i64 [ 0, %.lr.ph.new ], [ %indvars.iv.next.1, %5 ]
  %niter = phi i64 [ %unroll_iter, %.lr.ph.new ], [ %niter.nsub.1, %5 ]
  %6 = getelementptr inbounds float, float* %0, i64 %indvars.iv2
  %7 = load float, float* %6, align 4
  %8 = fpext float %7 to double
  %square = fmul double %8, %8
  %9 = fpext float %.013 to double
  %10 = fadd double %square, %9
  %11 = fptrunc double %10 to float
  %indvars.iv.next = or i64 %indvars.iv2, 1
  %12 = getelementptr inbounds float, float* %0, i64 %indvars.iv.next
  %13 = load float, float* %12, align 4
  %14 = fpext float %13 to double
  %square4 = fmul double %14, %14
  %15 = fpext float %11 to double
  %16 = fadd double %square4, %15
  %17 = fptrunc double %16 to float
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv2, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1.not = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1.not, label %._crit_edge.unr-lcssa, label %5

._crit_edge.unr-lcssa:                            ; preds = %5, %.lr.ph
  %split.ph = phi float [ undef, %.lr.ph ], [ %17, %5 ]
  %.013.unr = phi float [ 0.000000e+00, %.lr.ph ], [ %17, %5 ]
  %indvars.iv2.unr = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next.1, %5 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %._crit_edge, label %.epil.preheader

.epil.preheader:                                  ; preds = %._crit_edge.unr-lcssa
  %18 = getelementptr inbounds float, float* %0, i64 %indvars.iv2.unr
  %19 = load float, float* %18, align 4
  %20 = fpext float %19 to double
  %square5 = fmul double %20, %20
  %21 = fpext float %.013.unr to double
  %22 = fadd double %square5, %21
  %23 = fptrunc double %22 to float
  br label %._crit_edge

._crit_edge:                                      ; preds = %.epil.preheader, %._crit_edge.unr-lcssa, %2
  %.01.lcssa = phi float [ 0.000000e+00, %2 ], [ %split.ph, %._crit_edge.unr-lcssa ], [ %23, %.epil.preheader ]
  %24 = call float @llvm.sqrt.f32(float %.01.lcssa)
  ret float %24
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.pow.f64(double, double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.sqrt.f64(double) #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @naive_fixed_transpose(float* %0) #0 {
.lr.ph:
  %1 = getelementptr inbounds float, float* %0, i64 1
  %2 = bitcast float* %1 to i32*
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds float, float* %0, i64 4
  %5 = bitcast float* %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds float, float* %0, i64 1
  %8 = bitcast float* %7 to i32*
  store i32 %6, i32* %8, align 4
  %9 = getelementptr inbounds float, float* %0, i64 4
  %10 = bitcast float* %9 to i32*
  store i32 %3, i32* %10, align 4
  br label %11

11:                                               ; preds = %11, %.lr.ph
  %indvars.iv25 = phi i64 [ 2, %.lr.ph ], [ %indvars.iv.next3.1, %11 ]
  %12 = getelementptr inbounds float, float* %0, i64 %indvars.iv25
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = shl nuw nsw i64 %indvars.iv25, 2
  %16 = getelementptr inbounds float, float* %0, i64 %15
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds float, float* %0, i64 %indvars.iv25
  %20 = bitcast float* %19 to i32*
  store i32 %18, i32* %20, align 4
  %21 = shl nuw nsw i64 %indvars.iv25, 2
  %22 = getelementptr inbounds float, float* %0, i64 %21
  %23 = bitcast float* %22 to i32*
  store i32 %14, i32* %23, align 4
  %indvars.iv.next3 = or i64 %indvars.iv25, 1
  %24 = getelementptr inbounds float, float* %0, i64 %indvars.iv.next3
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = shl nuw nsw i64 %indvars.iv.next3, 2
  %28 = getelementptr inbounds float, float* %0, i64 %27
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds float, float* %0, i64 %indvars.iv.next3
  %32 = bitcast float* %31 to i32*
  store i32 %30, i32* %32, align 4
  %33 = shl nuw nsw i64 %indvars.iv.next3, 2
  %34 = getelementptr inbounds float, float* %0, i64 %33
  %35 = bitcast float* %34 to i32*
  store i32 %26, i32* %35, align 4
  %indvars.iv.next3.1 = add nuw nsw i64 %indvars.iv25, 2
  %exitcond.1.not = icmp eq i64 %indvars.iv.next3.1, 4
  br i1 %exitcond.1.not, label %.lr.ph.new.1, label %11

.lr.ph.new.1:                                     ; preds = %.lr.ph.new.1, %11
  %indvars.iv25.1 = phi i64 [ %indvars.iv.next3.1.1, %.lr.ph.new.1 ], [ 2, %11 ]
  %36 = add nuw nsw i64 %indvars.iv25.1, 4
  %37 = getelementptr inbounds float, float* %0, i64 %36
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = shl nuw nsw i64 %indvars.iv25.1, 2
  %41 = or i64 %40, 1
  %42 = getelementptr inbounds float, float* %0, i64 %41
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = add nuw nsw i64 %indvars.iv25.1, 4
  %46 = getelementptr inbounds float, float* %0, i64 %45
  %47 = bitcast float* %46 to i32*
  store i32 %44, i32* %47, align 4
  %48 = shl nuw nsw i64 %indvars.iv25.1, 2
  %49 = or i64 %48, 1
  %50 = getelementptr inbounds float, float* %0, i64 %49
  %51 = bitcast float* %50 to i32*
  store i32 %39, i32* %51, align 4
  %indvars.iv.next3.113 = or i64 %indvars.iv25.1, 1
  %52 = add nuw nsw i64 %indvars.iv25.1, 5
  %53 = getelementptr inbounds float, float* %0, i64 %52
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = shl nuw nsw i64 %indvars.iv.next3.113, 2
  %57 = or i64 %56, 1
  %58 = getelementptr inbounds float, float* %0, i64 %57
  %59 = bitcast float* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = add nuw nsw i64 %indvars.iv25.1, 5
  %62 = getelementptr inbounds float, float* %0, i64 %61
  %63 = bitcast float* %62 to i32*
  store i32 %60, i32* %63, align 4
  %64 = shl nuw nsw i64 %indvars.iv.next3.113, 2
  %65 = or i64 %64, 1
  %66 = getelementptr inbounds float, float* %0, i64 %65
  %67 = bitcast float* %66 to i32*
  store i32 %55, i32* %67, align 4
  %indvars.iv.next3.1.1 = add nuw nsw i64 %indvars.iv25.1, 2
  %exitcond.1.1.not = icmp eq i64 %indvars.iv.next3.1.1, 4
  br i1 %exitcond.1.1.not, label %.prol.preheader.2, label %.lr.ph.new.1

.prol.preheader.2:                                ; preds = %.lr.ph.new.1
  %68 = getelementptr inbounds float, float* %0, i64 11
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds float, float* %0, i64 14
  %72 = bitcast float* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds float, float* %0, i64 11
  %75 = bitcast float* %74 to i32*
  store i32 %73, i32* %75, align 4
  %76 = getelementptr inbounds float, float* %0, i64 14
  %77 = bitcast float* %76 to i32*
  store i32 %70, i32* %77, align 4
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define void @naive_fixed_matrix_multiply(float* %0, float* %1, float* %2) #0 {
.preheader:
  %3 = load float, float* %0, align 4
  %4 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %3, i32 3
  %5 = load float, float* %1, align 4
  %6 = insertelement <4 x float> zeroinitializer, float %5, i32 3
  %7 = fmul <4 x float> %4, %6
  %8 = load float, float* %0, align 4
  %9 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %8, i32 2
  %10 = insertelement <4 x float> %9, float 1.000000e+00, i32 3
  %11 = load float, float* %1, align 4
  %12 = insertelement <4 x float> zeroinitializer, float %11, i32 2
  %13 = insertelement <4 x float> %12, float 0.000000e+00, i32 3
  %14 = call <4 x float> @llvm.fma.v4f32(<4 x float> %10, <4 x float> %13, <4 x float> %7)
  %15 = getelementptr inbounds float, float* %0, i64 1
  %16 = load float, float* %15, align 4
  %17 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %16, i32 3
  %18 = getelementptr inbounds float, float* %1, i64 4
  %19 = load float, float* %18, align 4
  %20 = insertelement <4 x float> zeroinitializer, float %19, i32 3
  %21 = call <4 x float> @llvm.fma.v4f32(<4 x float> %17, <4 x float> %20, <4 x float> %14)
  %22 = load float, float* %0, align 4
  %23 = insertelement <4 x float> zeroinitializer, float %22, i32 1
  %24 = getelementptr inbounds float, float* %0, i64 1
  %25 = load float, float* %24, align 4
  %26 = insertelement <4 x float> %23, float %25, i32 2
  %27 = getelementptr inbounds float, float* %0, i64 2
  %28 = load float, float* %27, align 4
  %29 = insertelement <4 x float> %26, float %28, i32 3
  %30 = load float, float* %1, align 4
  %31 = insertelement <4 x float> zeroinitializer, float %30, i32 1
  %32 = getelementptr inbounds float, float* %1, i64 4
  %33 = load float, float* %32, align 4
  %34 = insertelement <4 x float> %31, float %33, i32 2
  %35 = getelementptr inbounds float, float* %1, i64 8
  %36 = load float, float* %35, align 4
  %37 = insertelement <4 x float> %34, float %36, i32 3
  %38 = call <4 x float> @llvm.fma.v4f32(<4 x float> %29, <4 x float> %37, <4 x float> %21)
  %39 = load float, float* %0, align 4
  %40 = insertelement <4 x float> zeroinitializer, float %39, i32 0
  %41 = insertelement <4 x float> %40, float 1.000000e+00, i32 1
  %42 = insertelement <4 x float> %41, float 1.000000e+00, i32 2
  %43 = insertelement <4 x float> %42, float 1.000000e+00, i32 3
  %44 = load float, float* %1, align 4
  %45 = insertelement <4 x float> zeroinitializer, float %44, i32 0
  %46 = insertelement <4 x float> %45, float 0.000000e+00, i32 1
  %47 = insertelement <4 x float> %46, float 0.000000e+00, i32 2
  %48 = insertelement <4 x float> %47, float 0.000000e+00, i32 3
  %49 = fmul <4 x float> %43, %48
  %50 = fadd <4 x float> %49, zeroinitializer
  %51 = getelementptr inbounds float, float* %0, i64 1
  %52 = load float, float* %51, align 4
  %53 = insertelement <4 x float> zeroinitializer, float %52, i32 0
  %54 = insertelement <4 x float> %53, float 1.000000e+00, i32 1
  %55 = insertelement <4 x float> %54, float 1.000000e+00, i32 2
  %56 = load float, float* %0, align 4
  %57 = insertelement <4 x float> %55, float %56, i32 3
  %58 = getelementptr inbounds float, float* %1, i64 4
  %59 = load float, float* %58, align 4
  %60 = insertelement <4 x float> zeroinitializer, float %59, i32 0
  %61 = insertelement <4 x float> %60, float 0.000000e+00, i32 1
  %62 = insertelement <4 x float> %61, float 0.000000e+00, i32 2
  %63 = getelementptr inbounds float, float* %1, i64 1
  %64 = load float, float* %63, align 4
  %65 = insertelement <4 x float> %62, float %64, i32 3
  %66 = call <4 x float> @llvm.fma.v4f32(<4 x float> %57, <4 x float> %65, <4 x float> %50)
  %67 = getelementptr inbounds float, float* %0, i64 2
  %68 = load float, float* %67, align 4
  %69 = insertelement <4 x float> zeroinitializer, float %68, i32 0
  %70 = insertelement <4 x float> %69, float 1.000000e+00, i32 1
  %71 = insertelement <4 x float> %70, float 1.000000e+00, i32 2
  %72 = insertelement <4 x float> %71, float 1.000000e+00, i32 3
  %73 = getelementptr inbounds float, float* %1, i64 8
  %74 = load float, float* %73, align 4
  %75 = insertelement <4 x float> zeroinitializer, float %74, i32 0
  %76 = insertelement <4 x float> %75, float 0.000000e+00, i32 1
  %77 = insertelement <4 x float> %76, float 0.000000e+00, i32 2
  %78 = insertelement <4 x float> %77, float 0.000000e+00, i32 3
  %79 = call <4 x float> @llvm.fma.v4f32(<4 x float> %72, <4 x float> %78, <4 x float> %66)
  %80 = getelementptr inbounds float, float* %0, i64 3
  %81 = load float, float* %80, align 4
  %82 = insertelement <4 x float> zeroinitializer, float %81, i32 0
  %83 = insertelement <4 x float> %82, float 0.000000e+00, i32 1
  %84 = load float, float* %0, align 4
  %85 = insertelement <4 x float> %83, float %84, i32 2
  %86 = getelementptr inbounds float, float* %0, i64 1
  %87 = load float, float* %86, align 4
  %88 = insertelement <4 x float> %85, float %87, i32 3
  %89 = getelementptr inbounds float, float* %1, i64 12
  %90 = load float, float* %89, align 4
  %91 = insertelement <4 x float> zeroinitializer, float %90, i32 0
  %92 = insertelement <4 x float> %91, float 0.000000e+00, i32 1
  %93 = getelementptr inbounds float, float* %1, i64 1
  %94 = load float, float* %93, align 4
  %95 = insertelement <4 x float> %92, float %94, i32 2
  %96 = getelementptr inbounds float, float* %1, i64 5
  %97 = load float, float* %96, align 4
  %98 = insertelement <4 x float> %95, float %97, i32 3
  %99 = call <4 x float> @llvm.fma.v4f32(<4 x float> %88, <4 x float> %98, <4 x float> %79)
  %100 = shufflevector <4 x float> %38, <4 x float> %99, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %101 = load float, float* %0, align 4
  %102 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %101, i32 1
  %103 = insertelement <4 x float> %102, float 1.000000e+00, i32 2
  %104 = insertelement <4 x float> %103, float 1.000000e+00, i32 3
  %105 = getelementptr inbounds float, float* %1, i64 1
  %106 = load float, float* %105, align 4
  %107 = insertelement <4 x float> zeroinitializer, float %106, i32 1
  %108 = insertelement <4 x float> %107, float 0.000000e+00, i32 2
  %109 = insertelement <4 x float> %108, float 0.000000e+00, i32 3
  %110 = fmul <4 x float> %104, %109
  %111 = load float, float* %0, align 4
  %112 = insertelement <4 x float> zeroinitializer, float %111, i32 0
  %113 = insertelement <4 x float> %112, float 1.000000e+00, i32 1
  %114 = insertelement <4 x float> %113, float 1.000000e+00, i32 2
  %115 = insertelement <4 x float> %114, float 1.000000e+00, i32 3
  %116 = getelementptr inbounds float, float* %1, i64 1
  %117 = load float, float* %116, align 4
  %118 = insertelement <4 x float> zeroinitializer, float %117, i32 0
  %119 = insertelement <4 x float> %118, float 0.000000e+00, i32 1
  %120 = insertelement <4 x float> %119, float 0.000000e+00, i32 2
  %121 = insertelement <4 x float> %120, float 0.000000e+00, i32 3
  %122 = call <4 x float> @llvm.fma.v4f32(<4 x float> %115, <4 x float> %121, <4 x float> %110)
  %123 = getelementptr inbounds float, float* %0, i64 1
  %124 = load float, float* %123, align 4
  %125 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %124, i32 1
  %126 = insertelement <4 x float> %125, float 1.000000e+00, i32 2
  %127 = insertelement <4 x float> %126, float 1.000000e+00, i32 3
  %128 = getelementptr inbounds float, float* %1, i64 5
  %129 = load float, float* %128, align 4
  %130 = insertelement <4 x float> zeroinitializer, float %129, i32 1
  %131 = insertelement <4 x float> %130, float 0.000000e+00, i32 2
  %132 = insertelement <4 x float> %131, float 0.000000e+00, i32 3
  %133 = call <4 x float> @llvm.fma.v4f32(<4 x float> %127, <4 x float> %132, <4 x float> %122)
  %134 = getelementptr inbounds float, float* %0, i64 1
  %135 = load float, float* %134, align 4
  %136 = insertelement <4 x float> zeroinitializer, float %135, i32 0
  %137 = getelementptr inbounds float, float* %0, i64 2
  %138 = load float, float* %137, align 4
  %139 = insertelement <4 x float> %136, float %138, i32 1
  %140 = insertelement <4 x float> %139, float 1.000000e+00, i32 2
  %141 = load float, float* %0, align 4
  %142 = insertelement <4 x float> %140, float %141, i32 3
  %143 = getelementptr inbounds float, float* %1, i64 5
  %144 = load float, float* %143, align 4
  %145 = insertelement <4 x float> zeroinitializer, float %144, i32 0
  %146 = getelementptr inbounds float, float* %1, i64 9
  %147 = load float, float* %146, align 4
  %148 = insertelement <4 x float> %145, float %147, i32 1
  %149 = insertelement <4 x float> %148, float 0.000000e+00, i32 2
  %150 = getelementptr inbounds float, float* %1, i64 2
  %151 = load float, float* %150, align 4
  %152 = insertelement <4 x float> %149, float %151, i32 3
  %153 = call <4 x float> @llvm.fma.v4f32(<4 x float> %142, <4 x float> %152, <4 x float> %133)
  %154 = getelementptr inbounds float, float* %0, i64 2
  %155 = load float, float* %154, align 4
  %156 = insertelement <4 x float> zeroinitializer, float %155, i32 0
  %157 = getelementptr inbounds float, float* %0, i64 3
  %158 = load float, float* %157, align 4
  %159 = insertelement <4 x float> %156, float %158, i32 1
  %160 = insertelement <4 x float> %159, float 1.000000e+00, i32 2
  %161 = insertelement <4 x float> %160, float 1.000000e+00, i32 3
  %162 = getelementptr inbounds float, float* %1, i64 9
  %163 = load float, float* %162, align 4
  %164 = insertelement <4 x float> zeroinitializer, float %163, i32 0
  %165 = getelementptr inbounds float, float* %1, i64 13
  %166 = load float, float* %165, align 4
  %167 = insertelement <4 x float> %164, float %166, i32 1
  %168 = insertelement <4 x float> %167, float 0.000000e+00, i32 2
  %169 = insertelement <4 x float> %168, float 0.000000e+00, i32 3
  %170 = call <4 x float> @llvm.fma.v4f32(<4 x float> %161, <4 x float> %169, <4 x float> %153)
  %171 = load float, float* %0, align 4
  %172 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %171, i32 2
  %173 = insertelement <4 x float> %172, float 1.000000e+00, i32 3
  %174 = getelementptr inbounds float, float* %1, i64 2
  %175 = load float, float* %174, align 4
  %176 = insertelement <4 x float> zeroinitializer, float %175, i32 2
  %177 = insertelement <4 x float> %176, float 0.000000e+00, i32 3
  %178 = fmul <4 x float> %173, %177
  %179 = load float, float* %0, align 4
  %180 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %179, i32 1
  %181 = insertelement <4 x float> %180, float 1.000000e+00, i32 2
  %182 = insertelement <4 x float> %181, float 1.000000e+00, i32 3
  %183 = getelementptr inbounds float, float* %1, i64 2
  %184 = load float, float* %183, align 4
  %185 = insertelement <4 x float> zeroinitializer, float %184, i32 1
  %186 = insertelement <4 x float> %185, float 0.000000e+00, i32 2
  %187 = insertelement <4 x float> %186, float 0.000000e+00, i32 3
  %188 = call <4 x float> @llvm.fma.v4f32(<4 x float> %182, <4 x float> %187, <4 x float> %178)
  %189 = load float, float* %0, align 4
  %190 = insertelement <4 x float> zeroinitializer, float %189, i32 0
  %191 = insertelement <4 x float> %190, float 1.000000e+00, i32 1
  %192 = getelementptr inbounds float, float* %0, i64 1
  %193 = load float, float* %192, align 4
  %194 = insertelement <4 x float> %191, float %193, i32 2
  %195 = insertelement <4 x float> %194, float 1.000000e+00, i32 3
  %196 = getelementptr inbounds float, float* %1, i64 2
  %197 = load float, float* %196, align 4
  %198 = insertelement <4 x float> zeroinitializer, float %197, i32 0
  %199 = insertelement <4 x float> %198, float 0.000000e+00, i32 1
  %200 = getelementptr inbounds float, float* %1, i64 6
  %201 = load float, float* %200, align 4
  %202 = insertelement <4 x float> %199, float %201, i32 2
  %203 = insertelement <4 x float> %202, float 0.000000e+00, i32 3
  %204 = call <4 x float> @llvm.fma.v4f32(<4 x float> %195, <4 x float> %203, <4 x float> %188)
  %205 = getelementptr inbounds float, float* %0, i64 1
  %206 = load float, float* %205, align 4
  %207 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %206, i32 1
  %208 = getelementptr inbounds float, float* %0, i64 2
  %209 = load float, float* %208, align 4
  %210 = insertelement <4 x float> %207, float %209, i32 2
  %211 = insertelement <4 x float> %210, float 1.000000e+00, i32 3
  %212 = getelementptr inbounds float, float* %1, i64 6
  %213 = load float, float* %212, align 4
  %214 = insertelement <4 x float> zeroinitializer, float %213, i32 1
  %215 = getelementptr inbounds float, float* %1, i64 10
  %216 = load float, float* %215, align 4
  %217 = insertelement <4 x float> %214, float %216, i32 2
  %218 = insertelement <4 x float> %217, float 0.000000e+00, i32 3
  %219 = call <4 x float> @llvm.fma.v4f32(<4 x float> %211, <4 x float> %218, <4 x float> %204)
  %220 = getelementptr inbounds float, float* %0, i64 1
  %221 = load float, float* %220, align 4
  %222 = insertelement <4 x float> zeroinitializer, float %221, i32 0
  %223 = getelementptr inbounds float, float* %0, i64 2
  %224 = load float, float* %223, align 4
  %225 = insertelement <4 x float> %222, float %224, i32 1
  %226 = getelementptr inbounds float, float* %0, i64 3
  %227 = load float, float* %226, align 4
  %228 = insertelement <4 x float> %225, float %227, i32 2
  %229 = insertelement <4 x float> %228, float 0.000000e+00, i32 3
  %230 = getelementptr inbounds float, float* %1, i64 6
  %231 = load float, float* %230, align 4
  %232 = insertelement <4 x float> zeroinitializer, float %231, i32 0
  %233 = getelementptr inbounds float, float* %1, i64 10
  %234 = load float, float* %233, align 4
  %235 = insertelement <4 x float> %232, float %234, i32 1
  %236 = getelementptr inbounds float, float* %1, i64 14
  %237 = load float, float* %236, align 4
  %238 = insertelement <4 x float> %235, float %237, i32 2
  %239 = insertelement <4 x float> %238, float 0.000000e+00, i32 3
  %240 = call <4 x float> @llvm.fma.v4f32(<4 x float> %229, <4 x float> %239, <4 x float> %219)
  %241 = shufflevector <4 x float> %170, <4 x float> %240, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %242 = shufflevector <8 x float> %100, <8 x float> %241, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %243 = load float, float* %0, align 4
  %244 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %243, i32 3
  %245 = getelementptr inbounds float, float* %1, i64 3
  %246 = load float, float* %245, align 4
  %247 = insertelement <4 x float> zeroinitializer, float %246, i32 3
  %248 = fmul <4 x float> %244, %247
  %249 = load float, float* %0, align 4
  %250 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %249, i32 2
  %251 = insertelement <4 x float> %250, float 1.000000e+00, i32 3
  %252 = getelementptr inbounds float, float* %1, i64 3
  %253 = load float, float* %252, align 4
  %254 = insertelement <4 x float> zeroinitializer, float %253, i32 2
  %255 = insertelement <4 x float> %254, float 0.000000e+00, i32 3
  %256 = call <4 x float> @llvm.fma.v4f32(<4 x float> %251, <4 x float> %255, <4 x float> %248)
  %257 = load float, float* %0, align 4
  %258 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %257, i32 1
  %259 = insertelement <4 x float> %258, float 1.000000e+00, i32 2
  %260 = getelementptr inbounds float, float* %0, i64 1
  %261 = load float, float* %260, align 4
  %262 = insertelement <4 x float> %259, float %261, i32 3
  %263 = getelementptr inbounds float, float* %1, i64 3
  %264 = load float, float* %263, align 4
  %265 = insertelement <4 x float> zeroinitializer, float %264, i32 1
  %266 = insertelement <4 x float> %265, float 0.000000e+00, i32 2
  %267 = getelementptr inbounds float, float* %1, i64 7
  %268 = load float, float* %267, align 4
  %269 = insertelement <4 x float> %266, float %268, i32 3
  %270 = call <4 x float> @llvm.fma.v4f32(<4 x float> %262, <4 x float> %269, <4 x float> %256)
  %271 = getelementptr inbounds float, float* %0, i64 1
  %272 = load float, float* %271, align 4
  %273 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %272, i32 2
  %274 = getelementptr inbounds float, float* %0, i64 2
  %275 = load float, float* %274, align 4
  %276 = insertelement <4 x float> %273, float %275, i32 3
  %277 = getelementptr inbounds float, float* %1, i64 7
  %278 = load float, float* %277, align 4
  %279 = insertelement <4 x float> zeroinitializer, float %278, i32 2
  %280 = getelementptr inbounds float, float* %1, i64 11
  %281 = load float, float* %280, align 4
  %282 = insertelement <4 x float> %279, float %281, i32 3
  %283 = call <4 x float> @llvm.fma.v4f32(<4 x float> %276, <4 x float> %282, <4 x float> %270)
  %284 = load float, float* %0, align 4
  %285 = insertelement <4 x float> zeroinitializer, float %284, i32 0
  %286 = getelementptr inbounds float, float* %0, i64 1
  %287 = load float, float* %286, align 4
  %288 = insertelement <4 x float> %285, float %287, i32 1
  %289 = getelementptr inbounds float, float* %0, i64 2
  %290 = load float, float* %289, align 4
  %291 = insertelement <4 x float> %288, float %290, i32 2
  %292 = getelementptr inbounds float, float* %0, i64 3
  %293 = load float, float* %292, align 4
  %294 = insertelement <4 x float> %291, float %293, i32 3
  %295 = getelementptr inbounds float, float* %1, i64 3
  %296 = load float, float* %295, align 4
  %297 = insertelement <4 x float> zeroinitializer, float %296, i32 0
  %298 = getelementptr inbounds float, float* %1, i64 7
  %299 = load float, float* %298, align 4
  %300 = insertelement <4 x float> %297, float %299, i32 1
  %301 = getelementptr inbounds float, float* %1, i64 11
  %302 = load float, float* %301, align 4
  %303 = insertelement <4 x float> %300, float %302, i32 2
  %304 = getelementptr inbounds float, float* %1, i64 15
  %305 = load float, float* %304, align 4
  %306 = insertelement <4 x float> %303, float %305, i32 3
  %307 = call <4 x float> @llvm.fma.v4f32(<4 x float> %294, <4 x float> %306, <4 x float> %283)
  %308 = getelementptr inbounds float, float* %0, i64 4
  %309 = load float, float* %308, align 4
  %310 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %309, i32 3
  %311 = load float, float* %1, align 4
  %312 = insertelement <4 x float> zeroinitializer, float %311, i32 3
  %313 = fmul <4 x float> %310, %312
  %314 = getelementptr inbounds float, float* %0, i64 4
  %315 = load float, float* %314, align 4
  %316 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %315, i32 2
  %317 = insertelement <4 x float> %316, float 1.000000e+00, i32 3
  %318 = load float, float* %1, align 4
  %319 = insertelement <4 x float> zeroinitializer, float %318, i32 2
  %320 = insertelement <4 x float> %319, float 0.000000e+00, i32 3
  %321 = call <4 x float> @llvm.fma.v4f32(<4 x float> %317, <4 x float> %320, <4 x float> %313)
  %322 = getelementptr inbounds float, float* %0, i64 5
  %323 = load float, float* %322, align 4
  %324 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %323, i32 3
  %325 = getelementptr inbounds float, float* %1, i64 4
  %326 = load float, float* %325, align 4
  %327 = insertelement <4 x float> zeroinitializer, float %326, i32 3
  %328 = call <4 x float> @llvm.fma.v4f32(<4 x float> %324, <4 x float> %327, <4 x float> %321)
  %329 = getelementptr inbounds float, float* %0, i64 4
  %330 = load float, float* %329, align 4
  %331 = insertelement <4 x float> zeroinitializer, float %330, i32 1
  %332 = getelementptr inbounds float, float* %0, i64 5
  %333 = load float, float* %332, align 4
  %334 = insertelement <4 x float> %331, float %333, i32 2
  %335 = getelementptr inbounds float, float* %0, i64 6
  %336 = load float, float* %335, align 4
  %337 = insertelement <4 x float> %334, float %336, i32 3
  %338 = load float, float* %1, align 4
  %339 = insertelement <4 x float> zeroinitializer, float %338, i32 1
  %340 = getelementptr inbounds float, float* %1, i64 4
  %341 = load float, float* %340, align 4
  %342 = insertelement <4 x float> %339, float %341, i32 2
  %343 = getelementptr inbounds float, float* %1, i64 8
  %344 = load float, float* %343, align 4
  %345 = insertelement <4 x float> %342, float %344, i32 3
  %346 = call <4 x float> @llvm.fma.v4f32(<4 x float> %337, <4 x float> %345, <4 x float> %328)
  %347 = shufflevector <4 x float> %307, <4 x float> %346, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %348 = getelementptr inbounds float, float* %0, i64 4
  %349 = load float, float* %348, align 4
  %350 = insertelement <4 x float> zeroinitializer, float %349, i32 0
  %351 = insertelement <4 x float> %350, float 1.000000e+00, i32 1
  %352 = insertelement <4 x float> %351, float 1.000000e+00, i32 2
  %353 = insertelement <4 x float> %352, float 1.000000e+00, i32 3
  %354 = load float, float* %1, align 4
  %355 = insertelement <4 x float> zeroinitializer, float %354, i32 0
  %356 = insertelement <4 x float> %355, float 0.000000e+00, i32 1
  %357 = insertelement <4 x float> %356, float 0.000000e+00, i32 2
  %358 = insertelement <4 x float> %357, float 0.000000e+00, i32 3
  %359 = fmul <4 x float> %353, %358
  %360 = fadd <4 x float> %359, zeroinitializer
  %361 = getelementptr inbounds float, float* %0, i64 5
  %362 = load float, float* %361, align 4
  %363 = insertelement <4 x float> zeroinitializer, float %362, i32 0
  %364 = insertelement <4 x float> %363, float 1.000000e+00, i32 1
  %365 = insertelement <4 x float> %364, float 1.000000e+00, i32 2
  %366 = getelementptr inbounds float, float* %0, i64 4
  %367 = load float, float* %366, align 4
  %368 = insertelement <4 x float> %365, float %367, i32 3
  %369 = getelementptr inbounds float, float* %1, i64 4
  %370 = load float, float* %369, align 4
  %371 = insertelement <4 x float> zeroinitializer, float %370, i32 0
  %372 = insertelement <4 x float> %371, float 0.000000e+00, i32 1
  %373 = insertelement <4 x float> %372, float 0.000000e+00, i32 2
  %374 = getelementptr inbounds float, float* %1, i64 1
  %375 = load float, float* %374, align 4
  %376 = insertelement <4 x float> %373, float %375, i32 3
  %377 = call <4 x float> @llvm.fma.v4f32(<4 x float> %368, <4 x float> %376, <4 x float> %360)
  %378 = getelementptr inbounds float, float* %0, i64 6
  %379 = load float, float* %378, align 4
  %380 = insertelement <4 x float> zeroinitializer, float %379, i32 0
  %381 = insertelement <4 x float> %380, float 1.000000e+00, i32 1
  %382 = insertelement <4 x float> %381, float 1.000000e+00, i32 2
  %383 = insertelement <4 x float> %382, float 1.000000e+00, i32 3
  %384 = getelementptr inbounds float, float* %1, i64 8
  %385 = load float, float* %384, align 4
  %386 = insertelement <4 x float> zeroinitializer, float %385, i32 0
  %387 = insertelement <4 x float> %386, float 0.000000e+00, i32 1
  %388 = insertelement <4 x float> %387, float 0.000000e+00, i32 2
  %389 = insertelement <4 x float> %388, float 0.000000e+00, i32 3
  %390 = call <4 x float> @llvm.fma.v4f32(<4 x float> %383, <4 x float> %389, <4 x float> %377)
  %391 = getelementptr inbounds float, float* %0, i64 7
  %392 = load float, float* %391, align 4
  %393 = insertelement <4 x float> zeroinitializer, float %392, i32 0
  %394 = insertelement <4 x float> %393, float 0.000000e+00, i32 1
  %395 = getelementptr inbounds float, float* %0, i64 4
  %396 = load float, float* %395, align 4
  %397 = insertelement <4 x float> %394, float %396, i32 2
  %398 = getelementptr inbounds float, float* %0, i64 5
  %399 = load float, float* %398, align 4
  %400 = insertelement <4 x float> %397, float %399, i32 3
  %401 = getelementptr inbounds float, float* %1, i64 12
  %402 = load float, float* %401, align 4
  %403 = insertelement <4 x float> zeroinitializer, float %402, i32 0
  %404 = insertelement <4 x float> %403, float 0.000000e+00, i32 1
  %405 = getelementptr inbounds float, float* %1, i64 1
  %406 = load float, float* %405, align 4
  %407 = insertelement <4 x float> %404, float %406, i32 2
  %408 = getelementptr inbounds float, float* %1, i64 5
  %409 = load float, float* %408, align 4
  %410 = insertelement <4 x float> %407, float %409, i32 3
  %411 = call <4 x float> @llvm.fma.v4f32(<4 x float> %400, <4 x float> %410, <4 x float> %390)
  %412 = getelementptr inbounds float, float* %0, i64 4
  %413 = load float, float* %412, align 4
  %414 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %413, i32 1
  %415 = insertelement <4 x float> %414, float 1.000000e+00, i32 2
  %416 = insertelement <4 x float> %415, float 1.000000e+00, i32 3
  %417 = getelementptr inbounds float, float* %1, i64 1
  %418 = load float, float* %417, align 4
  %419 = insertelement <4 x float> zeroinitializer, float %418, i32 1
  %420 = insertelement <4 x float> %419, float 0.000000e+00, i32 2
  %421 = insertelement <4 x float> %420, float 0.000000e+00, i32 3
  %422 = fmul <4 x float> %416, %421
  %423 = getelementptr inbounds float, float* %0, i64 4
  %424 = load float, float* %423, align 4
  %425 = insertelement <4 x float> zeroinitializer, float %424, i32 0
  %426 = insertelement <4 x float> %425, float 1.000000e+00, i32 1
  %427 = insertelement <4 x float> %426, float 1.000000e+00, i32 2
  %428 = insertelement <4 x float> %427, float 1.000000e+00, i32 3
  %429 = getelementptr inbounds float, float* %1, i64 1
  %430 = load float, float* %429, align 4
  %431 = insertelement <4 x float> zeroinitializer, float %430, i32 0
  %432 = insertelement <4 x float> %431, float 0.000000e+00, i32 1
  %433 = insertelement <4 x float> %432, float 0.000000e+00, i32 2
  %434 = insertelement <4 x float> %433, float 0.000000e+00, i32 3
  %435 = call <4 x float> @llvm.fma.v4f32(<4 x float> %428, <4 x float> %434, <4 x float> %422)
  %436 = getelementptr inbounds float, float* %0, i64 5
  %437 = load float, float* %436, align 4
  %438 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %437, i32 1
  %439 = insertelement <4 x float> %438, float 1.000000e+00, i32 2
  %440 = insertelement <4 x float> %439, float 1.000000e+00, i32 3
  %441 = getelementptr inbounds float, float* %1, i64 5
  %442 = load float, float* %441, align 4
  %443 = insertelement <4 x float> zeroinitializer, float %442, i32 1
  %444 = insertelement <4 x float> %443, float 0.000000e+00, i32 2
  %445 = insertelement <4 x float> %444, float 0.000000e+00, i32 3
  %446 = call <4 x float> @llvm.fma.v4f32(<4 x float> %440, <4 x float> %445, <4 x float> %435)
  %447 = getelementptr inbounds float, float* %0, i64 5
  %448 = load float, float* %447, align 4
  %449 = insertelement <4 x float> zeroinitializer, float %448, i32 0
  %450 = getelementptr inbounds float, float* %0, i64 6
  %451 = load float, float* %450, align 4
  %452 = insertelement <4 x float> %449, float %451, i32 1
  %453 = insertelement <4 x float> %452, float 1.000000e+00, i32 2
  %454 = getelementptr inbounds float, float* %0, i64 4
  %455 = load float, float* %454, align 4
  %456 = insertelement <4 x float> %453, float %455, i32 3
  %457 = getelementptr inbounds float, float* %1, i64 5
  %458 = load float, float* %457, align 4
  %459 = insertelement <4 x float> zeroinitializer, float %458, i32 0
  %460 = getelementptr inbounds float, float* %1, i64 9
  %461 = load float, float* %460, align 4
  %462 = insertelement <4 x float> %459, float %461, i32 1
  %463 = insertelement <4 x float> %462, float 0.000000e+00, i32 2
  %464 = getelementptr inbounds float, float* %1, i64 2
  %465 = load float, float* %464, align 4
  %466 = insertelement <4 x float> %463, float %465, i32 3
  %467 = call <4 x float> @llvm.fma.v4f32(<4 x float> %456, <4 x float> %466, <4 x float> %446)
  %468 = getelementptr inbounds float, float* %0, i64 6
  %469 = load float, float* %468, align 4
  %470 = insertelement <4 x float> zeroinitializer, float %469, i32 0
  %471 = getelementptr inbounds float, float* %0, i64 7
  %472 = load float, float* %471, align 4
  %473 = insertelement <4 x float> %470, float %472, i32 1
  %474 = insertelement <4 x float> %473, float 1.000000e+00, i32 2
  %475 = insertelement <4 x float> %474, float 1.000000e+00, i32 3
  %476 = getelementptr inbounds float, float* %1, i64 9
  %477 = load float, float* %476, align 4
  %478 = insertelement <4 x float> zeroinitializer, float %477, i32 0
  %479 = getelementptr inbounds float, float* %1, i64 13
  %480 = load float, float* %479, align 4
  %481 = insertelement <4 x float> %478, float %480, i32 1
  %482 = insertelement <4 x float> %481, float 0.000000e+00, i32 2
  %483 = insertelement <4 x float> %482, float 0.000000e+00, i32 3
  %484 = call <4 x float> @llvm.fma.v4f32(<4 x float> %475, <4 x float> %483, <4 x float> %467)
  %485 = shufflevector <4 x float> %411, <4 x float> %484, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %486 = shufflevector <8 x float> %347, <8 x float> %485, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %487 = shufflevector <16 x float> %242, <16 x float> %486, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %488 = getelementptr inbounds float, float* %0, i64 4
  %489 = load float, float* %488, align 4
  %490 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %489, i32 2
  %491 = insertelement <4 x float> %490, float 1.000000e+00, i32 3
  %492 = getelementptr inbounds float, float* %1, i64 2
  %493 = load float, float* %492, align 4
  %494 = insertelement <4 x float> zeroinitializer, float %493, i32 2
  %495 = insertelement <4 x float> %494, float 0.000000e+00, i32 3
  %496 = fmul <4 x float> %491, %495
  %497 = getelementptr inbounds float, float* %0, i64 4
  %498 = load float, float* %497, align 4
  %499 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %498, i32 1
  %500 = insertelement <4 x float> %499, float 1.000000e+00, i32 2
  %501 = insertelement <4 x float> %500, float 1.000000e+00, i32 3
  %502 = getelementptr inbounds float, float* %1, i64 2
  %503 = load float, float* %502, align 4
  %504 = insertelement <4 x float> zeroinitializer, float %503, i32 1
  %505 = insertelement <4 x float> %504, float 0.000000e+00, i32 2
  %506 = insertelement <4 x float> %505, float 0.000000e+00, i32 3
  %507 = call <4 x float> @llvm.fma.v4f32(<4 x float> %501, <4 x float> %506, <4 x float> %496)
  %508 = getelementptr inbounds float, float* %0, i64 4
  %509 = load float, float* %508, align 4
  %510 = insertelement <4 x float> zeroinitializer, float %509, i32 0
  %511 = insertelement <4 x float> %510, float 1.000000e+00, i32 1
  %512 = getelementptr inbounds float, float* %0, i64 5
  %513 = load float, float* %512, align 4
  %514 = insertelement <4 x float> %511, float %513, i32 2
  %515 = insertelement <4 x float> %514, float 1.000000e+00, i32 3
  %516 = getelementptr inbounds float, float* %1, i64 2
  %517 = load float, float* %516, align 4
  %518 = insertelement <4 x float> zeroinitializer, float %517, i32 0
  %519 = insertelement <4 x float> %518, float 0.000000e+00, i32 1
  %520 = getelementptr inbounds float, float* %1, i64 6
  %521 = load float, float* %520, align 4
  %522 = insertelement <4 x float> %519, float %521, i32 2
  %523 = insertelement <4 x float> %522, float 0.000000e+00, i32 3
  %524 = call <4 x float> @llvm.fma.v4f32(<4 x float> %515, <4 x float> %523, <4 x float> %507)
  %525 = getelementptr inbounds float, float* %0, i64 5
  %526 = load float, float* %525, align 4
  %527 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %526, i32 1
  %528 = getelementptr inbounds float, float* %0, i64 6
  %529 = load float, float* %528, align 4
  %530 = insertelement <4 x float> %527, float %529, i32 2
  %531 = insertelement <4 x float> %530, float 1.000000e+00, i32 3
  %532 = getelementptr inbounds float, float* %1, i64 6
  %533 = load float, float* %532, align 4
  %534 = insertelement <4 x float> zeroinitializer, float %533, i32 1
  %535 = getelementptr inbounds float, float* %1, i64 10
  %536 = load float, float* %535, align 4
  %537 = insertelement <4 x float> %534, float %536, i32 2
  %538 = insertelement <4 x float> %537, float 0.000000e+00, i32 3
  %539 = call <4 x float> @llvm.fma.v4f32(<4 x float> %531, <4 x float> %538, <4 x float> %524)
  %540 = getelementptr inbounds float, float* %0, i64 5
  %541 = load float, float* %540, align 4
  %542 = insertelement <4 x float> zeroinitializer, float %541, i32 0
  %543 = getelementptr inbounds float, float* %0, i64 6
  %544 = load float, float* %543, align 4
  %545 = insertelement <4 x float> %542, float %544, i32 1
  %546 = getelementptr inbounds float, float* %0, i64 7
  %547 = load float, float* %546, align 4
  %548 = insertelement <4 x float> %545, float %547, i32 2
  %549 = insertelement <4 x float> %548, float 0.000000e+00, i32 3
  %550 = getelementptr inbounds float, float* %1, i64 6
  %551 = load float, float* %550, align 4
  %552 = insertelement <4 x float> zeroinitializer, float %551, i32 0
  %553 = getelementptr inbounds float, float* %1, i64 10
  %554 = load float, float* %553, align 4
  %555 = insertelement <4 x float> %552, float %554, i32 1
  %556 = getelementptr inbounds float, float* %1, i64 14
  %557 = load float, float* %556, align 4
  %558 = insertelement <4 x float> %555, float %557, i32 2
  %559 = insertelement <4 x float> %558, float 0.000000e+00, i32 3
  %560 = call <4 x float> @llvm.fma.v4f32(<4 x float> %549, <4 x float> %559, <4 x float> %539)
  %561 = getelementptr inbounds float, float* %0, i64 4
  %562 = load float, float* %561, align 4
  %563 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %562, i32 3
  %564 = getelementptr inbounds float, float* %1, i64 3
  %565 = load float, float* %564, align 4
  %566 = insertelement <4 x float> zeroinitializer, float %565, i32 3
  %567 = fmul <4 x float> %563, %566
  %568 = getelementptr inbounds float, float* %0, i64 4
  %569 = load float, float* %568, align 4
  %570 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %569, i32 2
  %571 = insertelement <4 x float> %570, float 1.000000e+00, i32 3
  %572 = getelementptr inbounds float, float* %1, i64 3
  %573 = load float, float* %572, align 4
  %574 = insertelement <4 x float> zeroinitializer, float %573, i32 2
  %575 = insertelement <4 x float> %574, float 0.000000e+00, i32 3
  %576 = call <4 x float> @llvm.fma.v4f32(<4 x float> %571, <4 x float> %575, <4 x float> %567)
  %577 = getelementptr inbounds float, float* %0, i64 4
  %578 = load float, float* %577, align 4
  %579 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %578, i32 1
  %580 = insertelement <4 x float> %579, float 1.000000e+00, i32 2
  %581 = getelementptr inbounds float, float* %0, i64 5
  %582 = load float, float* %581, align 4
  %583 = insertelement <4 x float> %580, float %582, i32 3
  %584 = getelementptr inbounds float, float* %1, i64 3
  %585 = load float, float* %584, align 4
  %586 = insertelement <4 x float> zeroinitializer, float %585, i32 1
  %587 = insertelement <4 x float> %586, float 0.000000e+00, i32 2
  %588 = getelementptr inbounds float, float* %1, i64 7
  %589 = load float, float* %588, align 4
  %590 = insertelement <4 x float> %587, float %589, i32 3
  %591 = call <4 x float> @llvm.fma.v4f32(<4 x float> %583, <4 x float> %590, <4 x float> %576)
  %592 = getelementptr inbounds float, float* %0, i64 5
  %593 = load float, float* %592, align 4
  %594 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %593, i32 2
  %595 = getelementptr inbounds float, float* %0, i64 6
  %596 = load float, float* %595, align 4
  %597 = insertelement <4 x float> %594, float %596, i32 3
  %598 = getelementptr inbounds float, float* %1, i64 7
  %599 = load float, float* %598, align 4
  %600 = insertelement <4 x float> zeroinitializer, float %599, i32 2
  %601 = getelementptr inbounds float, float* %1, i64 11
  %602 = load float, float* %601, align 4
  %603 = insertelement <4 x float> %600, float %602, i32 3
  %604 = call <4 x float> @llvm.fma.v4f32(<4 x float> %597, <4 x float> %603, <4 x float> %591)
  %605 = getelementptr inbounds float, float* %0, i64 4
  %606 = load float, float* %605, align 4
  %607 = insertelement <4 x float> zeroinitializer, float %606, i32 0
  %608 = getelementptr inbounds float, float* %0, i64 5
  %609 = load float, float* %608, align 4
  %610 = insertelement <4 x float> %607, float %609, i32 1
  %611 = getelementptr inbounds float, float* %0, i64 6
  %612 = load float, float* %611, align 4
  %613 = insertelement <4 x float> %610, float %612, i32 2
  %614 = getelementptr inbounds float, float* %0, i64 7
  %615 = load float, float* %614, align 4
  %616 = insertelement <4 x float> %613, float %615, i32 3
  %617 = getelementptr inbounds float, float* %1, i64 3
  %618 = load float, float* %617, align 4
  %619 = insertelement <4 x float> zeroinitializer, float %618, i32 0
  %620 = getelementptr inbounds float, float* %1, i64 7
  %621 = load float, float* %620, align 4
  %622 = insertelement <4 x float> %619, float %621, i32 1
  %623 = getelementptr inbounds float, float* %1, i64 11
  %624 = load float, float* %623, align 4
  %625 = insertelement <4 x float> %622, float %624, i32 2
  %626 = getelementptr inbounds float, float* %1, i64 15
  %627 = load float, float* %626, align 4
  %628 = insertelement <4 x float> %625, float %627, i32 3
  %629 = call <4 x float> @llvm.fma.v4f32(<4 x float> %616, <4 x float> %628, <4 x float> %604)
  %630 = shufflevector <4 x float> %560, <4 x float> %629, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %631 = getelementptr inbounds float, float* %0, i64 8
  %632 = load float, float* %631, align 4
  %633 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %632, i32 3
  %634 = load float, float* %1, align 4
  %635 = insertelement <4 x float> zeroinitializer, float %634, i32 3
  %636 = fmul <4 x float> %633, %635
  %637 = getelementptr inbounds float, float* %0, i64 8
  %638 = load float, float* %637, align 4
  %639 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %638, i32 2
  %640 = insertelement <4 x float> %639, float 1.000000e+00, i32 3
  %641 = load float, float* %1, align 4
  %642 = insertelement <4 x float> zeroinitializer, float %641, i32 2
  %643 = insertelement <4 x float> %642, float 0.000000e+00, i32 3
  %644 = call <4 x float> @llvm.fma.v4f32(<4 x float> %640, <4 x float> %643, <4 x float> %636)
  %645 = getelementptr inbounds float, float* %0, i64 9
  %646 = load float, float* %645, align 4
  %647 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %646, i32 3
  %648 = getelementptr inbounds float, float* %1, i64 4
  %649 = load float, float* %648, align 4
  %650 = insertelement <4 x float> zeroinitializer, float %649, i32 3
  %651 = call <4 x float> @llvm.fma.v4f32(<4 x float> %647, <4 x float> %650, <4 x float> %644)
  %652 = getelementptr inbounds float, float* %0, i64 8
  %653 = load float, float* %652, align 4
  %654 = insertelement <4 x float> zeroinitializer, float %653, i32 1
  %655 = getelementptr inbounds float, float* %0, i64 9
  %656 = load float, float* %655, align 4
  %657 = insertelement <4 x float> %654, float %656, i32 2
  %658 = getelementptr inbounds float, float* %0, i64 10
  %659 = load float, float* %658, align 4
  %660 = insertelement <4 x float> %657, float %659, i32 3
  %661 = load float, float* %1, align 4
  %662 = insertelement <4 x float> zeroinitializer, float %661, i32 1
  %663 = getelementptr inbounds float, float* %1, i64 4
  %664 = load float, float* %663, align 4
  %665 = insertelement <4 x float> %662, float %664, i32 2
  %666 = getelementptr inbounds float, float* %1, i64 8
  %667 = load float, float* %666, align 4
  %668 = insertelement <4 x float> %665, float %667, i32 3
  %669 = call <4 x float> @llvm.fma.v4f32(<4 x float> %660, <4 x float> %668, <4 x float> %651)
  %670 = getelementptr inbounds float, float* %0, i64 8
  %671 = load float, float* %670, align 4
  %672 = insertelement <4 x float> zeroinitializer, float %671, i32 0
  %673 = insertelement <4 x float> %672, float 1.000000e+00, i32 1
  %674 = insertelement <4 x float> %673, float 1.000000e+00, i32 2
  %675 = insertelement <4 x float> %674, float 1.000000e+00, i32 3
  %676 = load float, float* %1, align 4
  %677 = insertelement <4 x float> zeroinitializer, float %676, i32 0
  %678 = insertelement <4 x float> %677, float 0.000000e+00, i32 1
  %679 = insertelement <4 x float> %678, float 0.000000e+00, i32 2
  %680 = insertelement <4 x float> %679, float 0.000000e+00, i32 3
  %681 = fmul <4 x float> %675, %680
  %682 = fadd <4 x float> %681, zeroinitializer
  %683 = getelementptr inbounds float, float* %0, i64 9
  %684 = load float, float* %683, align 4
  %685 = insertelement <4 x float> zeroinitializer, float %684, i32 0
  %686 = insertelement <4 x float> %685, float 1.000000e+00, i32 1
  %687 = insertelement <4 x float> %686, float 1.000000e+00, i32 2
  %688 = getelementptr inbounds float, float* %0, i64 8
  %689 = load float, float* %688, align 4
  %690 = insertelement <4 x float> %687, float %689, i32 3
  %691 = getelementptr inbounds float, float* %1, i64 4
  %692 = load float, float* %691, align 4
  %693 = insertelement <4 x float> zeroinitializer, float %692, i32 0
  %694 = insertelement <4 x float> %693, float 0.000000e+00, i32 1
  %695 = insertelement <4 x float> %694, float 0.000000e+00, i32 2
  %696 = getelementptr inbounds float, float* %1, i64 1
  %697 = load float, float* %696, align 4
  %698 = insertelement <4 x float> %695, float %697, i32 3
  %699 = call <4 x float> @llvm.fma.v4f32(<4 x float> %690, <4 x float> %698, <4 x float> %682)
  %700 = getelementptr inbounds float, float* %0, i64 10
  %701 = load float, float* %700, align 4
  %702 = insertelement <4 x float> zeroinitializer, float %701, i32 0
  %703 = insertelement <4 x float> %702, float 1.000000e+00, i32 1
  %704 = insertelement <4 x float> %703, float 1.000000e+00, i32 2
  %705 = insertelement <4 x float> %704, float 1.000000e+00, i32 3
  %706 = getelementptr inbounds float, float* %1, i64 8
  %707 = load float, float* %706, align 4
  %708 = insertelement <4 x float> zeroinitializer, float %707, i32 0
  %709 = insertelement <4 x float> %708, float 0.000000e+00, i32 1
  %710 = insertelement <4 x float> %709, float 0.000000e+00, i32 2
  %711 = insertelement <4 x float> %710, float 0.000000e+00, i32 3
  %712 = call <4 x float> @llvm.fma.v4f32(<4 x float> %705, <4 x float> %711, <4 x float> %699)
  %713 = getelementptr inbounds float, float* %0, i64 11
  %714 = load float, float* %713, align 4
  %715 = insertelement <4 x float> zeroinitializer, float %714, i32 0
  %716 = insertelement <4 x float> %715, float 0.000000e+00, i32 1
  %717 = getelementptr inbounds float, float* %0, i64 8
  %718 = load float, float* %717, align 4
  %719 = insertelement <4 x float> %716, float %718, i32 2
  %720 = getelementptr inbounds float, float* %0, i64 9
  %721 = load float, float* %720, align 4
  %722 = insertelement <4 x float> %719, float %721, i32 3
  %723 = getelementptr inbounds float, float* %1, i64 12
  %724 = load float, float* %723, align 4
  %725 = insertelement <4 x float> zeroinitializer, float %724, i32 0
  %726 = insertelement <4 x float> %725, float 0.000000e+00, i32 1
  %727 = getelementptr inbounds float, float* %1, i64 1
  %728 = load float, float* %727, align 4
  %729 = insertelement <4 x float> %726, float %728, i32 2
  %730 = getelementptr inbounds float, float* %1, i64 5
  %731 = load float, float* %730, align 4
  %732 = insertelement <4 x float> %729, float %731, i32 3
  %733 = call <4 x float> @llvm.fma.v4f32(<4 x float> %722, <4 x float> %732, <4 x float> %712)
  %734 = shufflevector <4 x float> %669, <4 x float> %733, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %735 = shufflevector <8 x float> %630, <8 x float> %734, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %736 = getelementptr inbounds float, float* %0, i64 8
  %737 = load float, float* %736, align 4
  %738 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %737, i32 1
  %739 = insertelement <4 x float> %738, float 1.000000e+00, i32 2
  %740 = insertelement <4 x float> %739, float 1.000000e+00, i32 3
  %741 = getelementptr inbounds float, float* %1, i64 1
  %742 = load float, float* %741, align 4
  %743 = insertelement <4 x float> zeroinitializer, float %742, i32 1
  %744 = insertelement <4 x float> %743, float 0.000000e+00, i32 2
  %745 = insertelement <4 x float> %744, float 0.000000e+00, i32 3
  %746 = fmul <4 x float> %740, %745
  %747 = getelementptr inbounds float, float* %0, i64 8
  %748 = load float, float* %747, align 4
  %749 = insertelement <4 x float> zeroinitializer, float %748, i32 0
  %750 = insertelement <4 x float> %749, float 1.000000e+00, i32 1
  %751 = insertelement <4 x float> %750, float 1.000000e+00, i32 2
  %752 = insertelement <4 x float> %751, float 1.000000e+00, i32 3
  %753 = getelementptr inbounds float, float* %1, i64 1
  %754 = load float, float* %753, align 4
  %755 = insertelement <4 x float> zeroinitializer, float %754, i32 0
  %756 = insertelement <4 x float> %755, float 0.000000e+00, i32 1
  %757 = insertelement <4 x float> %756, float 0.000000e+00, i32 2
  %758 = insertelement <4 x float> %757, float 0.000000e+00, i32 3
  %759 = call <4 x float> @llvm.fma.v4f32(<4 x float> %752, <4 x float> %758, <4 x float> %746)
  %760 = getelementptr inbounds float, float* %0, i64 9
  %761 = load float, float* %760, align 4
  %762 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %761, i32 1
  %763 = insertelement <4 x float> %762, float 1.000000e+00, i32 2
  %764 = insertelement <4 x float> %763, float 1.000000e+00, i32 3
  %765 = getelementptr inbounds float, float* %1, i64 5
  %766 = load float, float* %765, align 4
  %767 = insertelement <4 x float> zeroinitializer, float %766, i32 1
  %768 = insertelement <4 x float> %767, float 0.000000e+00, i32 2
  %769 = insertelement <4 x float> %768, float 0.000000e+00, i32 3
  %770 = call <4 x float> @llvm.fma.v4f32(<4 x float> %764, <4 x float> %769, <4 x float> %759)
  %771 = getelementptr inbounds float, float* %0, i64 9
  %772 = load float, float* %771, align 4
  %773 = insertelement <4 x float> zeroinitializer, float %772, i32 0
  %774 = getelementptr inbounds float, float* %0, i64 10
  %775 = load float, float* %774, align 4
  %776 = insertelement <4 x float> %773, float %775, i32 1
  %777 = insertelement <4 x float> %776, float 1.000000e+00, i32 2
  %778 = getelementptr inbounds float, float* %0, i64 8
  %779 = load float, float* %778, align 4
  %780 = insertelement <4 x float> %777, float %779, i32 3
  %781 = getelementptr inbounds float, float* %1, i64 5
  %782 = load float, float* %781, align 4
  %783 = insertelement <4 x float> zeroinitializer, float %782, i32 0
  %784 = getelementptr inbounds float, float* %1, i64 9
  %785 = load float, float* %784, align 4
  %786 = insertelement <4 x float> %783, float %785, i32 1
  %787 = insertelement <4 x float> %786, float 0.000000e+00, i32 2
  %788 = getelementptr inbounds float, float* %1, i64 2
  %789 = load float, float* %788, align 4
  %790 = insertelement <4 x float> %787, float %789, i32 3
  %791 = call <4 x float> @llvm.fma.v4f32(<4 x float> %780, <4 x float> %790, <4 x float> %770)
  %792 = getelementptr inbounds float, float* %0, i64 10
  %793 = load float, float* %792, align 4
  %794 = insertelement <4 x float> zeroinitializer, float %793, i32 0
  %795 = getelementptr inbounds float, float* %0, i64 11
  %796 = load float, float* %795, align 4
  %797 = insertelement <4 x float> %794, float %796, i32 1
  %798 = insertelement <4 x float> %797, float 1.000000e+00, i32 2
  %799 = insertelement <4 x float> %798, float 1.000000e+00, i32 3
  %800 = getelementptr inbounds float, float* %1, i64 9
  %801 = load float, float* %800, align 4
  %802 = insertelement <4 x float> zeroinitializer, float %801, i32 0
  %803 = getelementptr inbounds float, float* %1, i64 13
  %804 = load float, float* %803, align 4
  %805 = insertelement <4 x float> %802, float %804, i32 1
  %806 = insertelement <4 x float> %805, float 0.000000e+00, i32 2
  %807 = insertelement <4 x float> %806, float 0.000000e+00, i32 3
  %808 = call <4 x float> @llvm.fma.v4f32(<4 x float> %799, <4 x float> %807, <4 x float> %791)
  %809 = getelementptr inbounds float, float* %0, i64 8
  %810 = load float, float* %809, align 4
  %811 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %810, i32 2
  %812 = insertelement <4 x float> %811, float 1.000000e+00, i32 3
  %813 = getelementptr inbounds float, float* %1, i64 2
  %814 = load float, float* %813, align 4
  %815 = insertelement <4 x float> zeroinitializer, float %814, i32 2
  %816 = insertelement <4 x float> %815, float 0.000000e+00, i32 3
  %817 = fmul <4 x float> %812, %816
  %818 = getelementptr inbounds float, float* %0, i64 8
  %819 = load float, float* %818, align 4
  %820 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %819, i32 1
  %821 = insertelement <4 x float> %820, float 1.000000e+00, i32 2
  %822 = insertelement <4 x float> %821, float 1.000000e+00, i32 3
  %823 = getelementptr inbounds float, float* %1, i64 2
  %824 = load float, float* %823, align 4
  %825 = insertelement <4 x float> zeroinitializer, float %824, i32 1
  %826 = insertelement <4 x float> %825, float 0.000000e+00, i32 2
  %827 = insertelement <4 x float> %826, float 0.000000e+00, i32 3
  %828 = call <4 x float> @llvm.fma.v4f32(<4 x float> %822, <4 x float> %827, <4 x float> %817)
  %829 = getelementptr inbounds float, float* %0, i64 8
  %830 = load float, float* %829, align 4
  %831 = insertelement <4 x float> zeroinitializer, float %830, i32 0
  %832 = insertelement <4 x float> %831, float 1.000000e+00, i32 1
  %833 = getelementptr inbounds float, float* %0, i64 9
  %834 = load float, float* %833, align 4
  %835 = insertelement <4 x float> %832, float %834, i32 2
  %836 = insertelement <4 x float> %835, float 1.000000e+00, i32 3
  %837 = getelementptr inbounds float, float* %1, i64 2
  %838 = load float, float* %837, align 4
  %839 = insertelement <4 x float> zeroinitializer, float %838, i32 0
  %840 = insertelement <4 x float> %839, float 0.000000e+00, i32 1
  %841 = getelementptr inbounds float, float* %1, i64 6
  %842 = load float, float* %841, align 4
  %843 = insertelement <4 x float> %840, float %842, i32 2
  %844 = insertelement <4 x float> %843, float 0.000000e+00, i32 3
  %845 = call <4 x float> @llvm.fma.v4f32(<4 x float> %836, <4 x float> %844, <4 x float> %828)
  %846 = getelementptr inbounds float, float* %0, i64 9
  %847 = load float, float* %846, align 4
  %848 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %847, i32 1
  %849 = getelementptr inbounds float, float* %0, i64 10
  %850 = load float, float* %849, align 4
  %851 = insertelement <4 x float> %848, float %850, i32 2
  %852 = insertelement <4 x float> %851, float 1.000000e+00, i32 3
  %853 = getelementptr inbounds float, float* %1, i64 6
  %854 = load float, float* %853, align 4
  %855 = insertelement <4 x float> zeroinitializer, float %854, i32 1
  %856 = getelementptr inbounds float, float* %1, i64 10
  %857 = load float, float* %856, align 4
  %858 = insertelement <4 x float> %855, float %857, i32 2
  %859 = insertelement <4 x float> %858, float 0.000000e+00, i32 3
  %860 = call <4 x float> @llvm.fma.v4f32(<4 x float> %852, <4 x float> %859, <4 x float> %845)
  %861 = getelementptr inbounds float, float* %0, i64 9
  %862 = load float, float* %861, align 4
  %863 = insertelement <4 x float> zeroinitializer, float %862, i32 0
  %864 = getelementptr inbounds float, float* %0, i64 10
  %865 = load float, float* %864, align 4
  %866 = insertelement <4 x float> %863, float %865, i32 1
  %867 = getelementptr inbounds float, float* %0, i64 11
  %868 = load float, float* %867, align 4
  %869 = insertelement <4 x float> %866, float %868, i32 2
  %870 = insertelement <4 x float> %869, float 0.000000e+00, i32 3
  %871 = getelementptr inbounds float, float* %1, i64 6
  %872 = load float, float* %871, align 4
  %873 = insertelement <4 x float> zeroinitializer, float %872, i32 0
  %874 = getelementptr inbounds float, float* %1, i64 10
  %875 = load float, float* %874, align 4
  %876 = insertelement <4 x float> %873, float %875, i32 1
  %877 = getelementptr inbounds float, float* %1, i64 14
  %878 = load float, float* %877, align 4
  %879 = insertelement <4 x float> %876, float %878, i32 2
  %880 = insertelement <4 x float> %879, float 0.000000e+00, i32 3
  %881 = call <4 x float> @llvm.fma.v4f32(<4 x float> %870, <4 x float> %880, <4 x float> %860)
  %882 = shufflevector <4 x float> %808, <4 x float> %881, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %883 = getelementptr inbounds float, float* %0, i64 8
  %884 = load float, float* %883, align 4
  %885 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %884, i32 3
  %886 = getelementptr inbounds float, float* %1, i64 3
  %887 = load float, float* %886, align 4
  %888 = insertelement <4 x float> zeroinitializer, float %887, i32 3
  %889 = fmul <4 x float> %885, %888
  %890 = getelementptr inbounds float, float* %0, i64 8
  %891 = load float, float* %890, align 4
  %892 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %891, i32 2
  %893 = insertelement <4 x float> %892, float 1.000000e+00, i32 3
  %894 = getelementptr inbounds float, float* %1, i64 3
  %895 = load float, float* %894, align 4
  %896 = insertelement <4 x float> zeroinitializer, float %895, i32 2
  %897 = insertelement <4 x float> %896, float 0.000000e+00, i32 3
  %898 = call <4 x float> @llvm.fma.v4f32(<4 x float> %893, <4 x float> %897, <4 x float> %889)
  %899 = getelementptr inbounds float, float* %0, i64 8
  %900 = load float, float* %899, align 4
  %901 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %900, i32 1
  %902 = insertelement <4 x float> %901, float 1.000000e+00, i32 2
  %903 = getelementptr inbounds float, float* %0, i64 9
  %904 = load float, float* %903, align 4
  %905 = insertelement <4 x float> %902, float %904, i32 3
  %906 = getelementptr inbounds float, float* %1, i64 3
  %907 = load float, float* %906, align 4
  %908 = insertelement <4 x float> zeroinitializer, float %907, i32 1
  %909 = insertelement <4 x float> %908, float 0.000000e+00, i32 2
  %910 = getelementptr inbounds float, float* %1, i64 7
  %911 = load float, float* %910, align 4
  %912 = insertelement <4 x float> %909, float %911, i32 3
  %913 = call <4 x float> @llvm.fma.v4f32(<4 x float> %905, <4 x float> %912, <4 x float> %898)
  %914 = getelementptr inbounds float, float* %0, i64 9
  %915 = load float, float* %914, align 4
  %916 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %915, i32 2
  %917 = getelementptr inbounds float, float* %0, i64 10
  %918 = load float, float* %917, align 4
  %919 = insertelement <4 x float> %916, float %918, i32 3
  %920 = getelementptr inbounds float, float* %1, i64 7
  %921 = load float, float* %920, align 4
  %922 = insertelement <4 x float> zeroinitializer, float %921, i32 2
  %923 = getelementptr inbounds float, float* %1, i64 11
  %924 = load float, float* %923, align 4
  %925 = insertelement <4 x float> %922, float %924, i32 3
  %926 = call <4 x float> @llvm.fma.v4f32(<4 x float> %919, <4 x float> %925, <4 x float> %913)
  %927 = getelementptr inbounds float, float* %0, i64 8
  %928 = load float, float* %927, align 4
  %929 = insertelement <4 x float> zeroinitializer, float %928, i32 0
  %930 = getelementptr inbounds float, float* %0, i64 9
  %931 = load float, float* %930, align 4
  %932 = insertelement <4 x float> %929, float %931, i32 1
  %933 = getelementptr inbounds float, float* %0, i64 10
  %934 = load float, float* %933, align 4
  %935 = insertelement <4 x float> %932, float %934, i32 2
  %936 = getelementptr inbounds float, float* %0, i64 11
  %937 = load float, float* %936, align 4
  %938 = insertelement <4 x float> %935, float %937, i32 3
  %939 = getelementptr inbounds float, float* %1, i64 3
  %940 = load float, float* %939, align 4
  %941 = insertelement <4 x float> zeroinitializer, float %940, i32 0
  %942 = getelementptr inbounds float, float* %1, i64 7
  %943 = load float, float* %942, align 4
  %944 = insertelement <4 x float> %941, float %943, i32 1
  %945 = getelementptr inbounds float, float* %1, i64 11
  %946 = load float, float* %945, align 4
  %947 = insertelement <4 x float> %944, float %946, i32 2
  %948 = getelementptr inbounds float, float* %1, i64 15
  %949 = load float, float* %948, align 4
  %950 = insertelement <4 x float> %947, float %949, i32 3
  %951 = call <4 x float> @llvm.fma.v4f32(<4 x float> %938, <4 x float> %950, <4 x float> %926)
  %952 = getelementptr inbounds float, float* %0, i64 12
  %953 = load float, float* %952, align 4
  %954 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %953, i32 3
  %955 = load float, float* %1, align 4
  %956 = insertelement <4 x float> zeroinitializer, float %955, i32 3
  %957 = fmul <4 x float> %954, %956
  %958 = getelementptr inbounds float, float* %0, i64 12
  %959 = load float, float* %958, align 4
  %960 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %959, i32 2
  %961 = insertelement <4 x float> %960, float 1.000000e+00, i32 3
  %962 = load float, float* %1, align 4
  %963 = insertelement <4 x float> zeroinitializer, float %962, i32 2
  %964 = insertelement <4 x float> %963, float 0.000000e+00, i32 3
  %965 = call <4 x float> @llvm.fma.v4f32(<4 x float> %961, <4 x float> %964, <4 x float> %957)
  %966 = getelementptr inbounds float, float* %0, i64 13
  %967 = load float, float* %966, align 4
  %968 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %967, i32 3
  %969 = getelementptr inbounds float, float* %1, i64 4
  %970 = load float, float* %969, align 4
  %971 = insertelement <4 x float> zeroinitializer, float %970, i32 3
  %972 = call <4 x float> @llvm.fma.v4f32(<4 x float> %968, <4 x float> %971, <4 x float> %965)
  %973 = getelementptr inbounds float, float* %0, i64 12
  %974 = load float, float* %973, align 4
  %975 = insertelement <4 x float> zeroinitializer, float %974, i32 1
  %976 = getelementptr inbounds float, float* %0, i64 13
  %977 = load float, float* %976, align 4
  %978 = insertelement <4 x float> %975, float %977, i32 2
  %979 = getelementptr inbounds float, float* %0, i64 14
  %980 = load float, float* %979, align 4
  %981 = insertelement <4 x float> %978, float %980, i32 3
  %982 = load float, float* %1, align 4
  %983 = insertelement <4 x float> zeroinitializer, float %982, i32 1
  %984 = getelementptr inbounds float, float* %1, i64 4
  %985 = load float, float* %984, align 4
  %986 = insertelement <4 x float> %983, float %985, i32 2
  %987 = getelementptr inbounds float, float* %1, i64 8
  %988 = load float, float* %987, align 4
  %989 = insertelement <4 x float> %986, float %988, i32 3
  %990 = call <4 x float> @llvm.fma.v4f32(<4 x float> %981, <4 x float> %989, <4 x float> %972)
  %991 = shufflevector <4 x float> %951, <4 x float> %990, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %992 = shufflevector <8 x float> %882, <8 x float> %991, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %993 = shufflevector <16 x float> %735, <16 x float> %992, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %994 = shufflevector <32 x float> %487, <32 x float> %993, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %995 = getelementptr inbounds float, float* %0, i64 12
  %996 = load float, float* %995, align 4
  %997 = insertelement <4 x float> zeroinitializer, float %996, i32 0
  %998 = insertelement <4 x float> %997, float 1.000000e+00, i32 1
  %999 = insertelement <4 x float> %998, float 1.000000e+00, i32 2
  %1000 = insertelement <4 x float> %999, float 1.000000e+00, i32 3
  %1001 = load float, float* %1, align 4
  %1002 = insertelement <4 x float> zeroinitializer, float %1001, i32 0
  %1003 = insertelement <4 x float> %1002, float 0.000000e+00, i32 1
  %1004 = insertelement <4 x float> %1003, float 0.000000e+00, i32 2
  %1005 = insertelement <4 x float> %1004, float 0.000000e+00, i32 3
  %1006 = fmul <4 x float> %1000, %1005
  %1007 = fadd <4 x float> %1006, zeroinitializer
  %1008 = getelementptr inbounds float, float* %0, i64 13
  %1009 = load float, float* %1008, align 4
  %1010 = insertelement <4 x float> zeroinitializer, float %1009, i32 0
  %1011 = insertelement <4 x float> %1010, float 1.000000e+00, i32 1
  %1012 = insertelement <4 x float> %1011, float 1.000000e+00, i32 2
  %1013 = getelementptr inbounds float, float* %0, i64 12
  %1014 = load float, float* %1013, align 4
  %1015 = insertelement <4 x float> %1012, float %1014, i32 3
  %1016 = getelementptr inbounds float, float* %1, i64 4
  %1017 = load float, float* %1016, align 4
  %1018 = insertelement <4 x float> zeroinitializer, float %1017, i32 0
  %1019 = insertelement <4 x float> %1018, float 0.000000e+00, i32 1
  %1020 = insertelement <4 x float> %1019, float 0.000000e+00, i32 2
  %1021 = getelementptr inbounds float, float* %1, i64 1
  %1022 = load float, float* %1021, align 4
  %1023 = insertelement <4 x float> %1020, float %1022, i32 3
  %1024 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1015, <4 x float> %1023, <4 x float> %1007)
  %1025 = getelementptr inbounds float, float* %0, i64 14
  %1026 = load float, float* %1025, align 4
  %1027 = insertelement <4 x float> zeroinitializer, float %1026, i32 0
  %1028 = insertelement <4 x float> %1027, float 1.000000e+00, i32 1
  %1029 = insertelement <4 x float> %1028, float 1.000000e+00, i32 2
  %1030 = insertelement <4 x float> %1029, float 1.000000e+00, i32 3
  %1031 = getelementptr inbounds float, float* %1, i64 8
  %1032 = load float, float* %1031, align 4
  %1033 = insertelement <4 x float> zeroinitializer, float %1032, i32 0
  %1034 = insertelement <4 x float> %1033, float 0.000000e+00, i32 1
  %1035 = insertelement <4 x float> %1034, float 0.000000e+00, i32 2
  %1036 = insertelement <4 x float> %1035, float 0.000000e+00, i32 3
  %1037 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1030, <4 x float> %1036, <4 x float> %1024)
  %1038 = getelementptr inbounds float, float* %0, i64 15
  %1039 = load float, float* %1038, align 4
  %1040 = insertelement <4 x float> zeroinitializer, float %1039, i32 0
  %1041 = insertelement <4 x float> %1040, float 0.000000e+00, i32 1
  %1042 = getelementptr inbounds float, float* %0, i64 12
  %1043 = load float, float* %1042, align 4
  %1044 = insertelement <4 x float> %1041, float %1043, i32 2
  %1045 = getelementptr inbounds float, float* %0, i64 13
  %1046 = load float, float* %1045, align 4
  %1047 = insertelement <4 x float> %1044, float %1046, i32 3
  %1048 = getelementptr inbounds float, float* %1, i64 12
  %1049 = load float, float* %1048, align 4
  %1050 = insertelement <4 x float> zeroinitializer, float %1049, i32 0
  %1051 = insertelement <4 x float> %1050, float 0.000000e+00, i32 1
  %1052 = getelementptr inbounds float, float* %1, i64 1
  %1053 = load float, float* %1052, align 4
  %1054 = insertelement <4 x float> %1051, float %1053, i32 2
  %1055 = getelementptr inbounds float, float* %1, i64 5
  %1056 = load float, float* %1055, align 4
  %1057 = insertelement <4 x float> %1054, float %1056, i32 3
  %1058 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1047, <4 x float> %1057, <4 x float> %1037)
  %1059 = getelementptr inbounds float, float* %0, i64 12
  %1060 = load float, float* %1059, align 4
  %1061 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %1060, i32 1
  %1062 = insertelement <4 x float> %1061, float 1.000000e+00, i32 2
  %1063 = insertelement <4 x float> %1062, float 1.000000e+00, i32 3
  %1064 = getelementptr inbounds float, float* %1, i64 1
  %1065 = load float, float* %1064, align 4
  %1066 = insertelement <4 x float> zeroinitializer, float %1065, i32 1
  %1067 = insertelement <4 x float> %1066, float 0.000000e+00, i32 2
  %1068 = insertelement <4 x float> %1067, float 0.000000e+00, i32 3
  %1069 = fmul <4 x float> %1063, %1068
  %1070 = getelementptr inbounds float, float* %0, i64 12
  %1071 = load float, float* %1070, align 4
  %1072 = insertelement <4 x float> zeroinitializer, float %1071, i32 0
  %1073 = insertelement <4 x float> %1072, float 1.000000e+00, i32 1
  %1074 = insertelement <4 x float> %1073, float 1.000000e+00, i32 2
  %1075 = insertelement <4 x float> %1074, float 1.000000e+00, i32 3
  %1076 = getelementptr inbounds float, float* %1, i64 1
  %1077 = load float, float* %1076, align 4
  %1078 = insertelement <4 x float> zeroinitializer, float %1077, i32 0
  %1079 = insertelement <4 x float> %1078, float 0.000000e+00, i32 1
  %1080 = insertelement <4 x float> %1079, float 0.000000e+00, i32 2
  %1081 = insertelement <4 x float> %1080, float 0.000000e+00, i32 3
  %1082 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1075, <4 x float> %1081, <4 x float> %1069)
  %1083 = getelementptr inbounds float, float* %0, i64 13
  %1084 = load float, float* %1083, align 4
  %1085 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %1084, i32 1
  %1086 = insertelement <4 x float> %1085, float 1.000000e+00, i32 2
  %1087 = insertelement <4 x float> %1086, float 1.000000e+00, i32 3
  %1088 = getelementptr inbounds float, float* %1, i64 5
  %1089 = load float, float* %1088, align 4
  %1090 = insertelement <4 x float> zeroinitializer, float %1089, i32 1
  %1091 = insertelement <4 x float> %1090, float 0.000000e+00, i32 2
  %1092 = insertelement <4 x float> %1091, float 0.000000e+00, i32 3
  %1093 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1087, <4 x float> %1092, <4 x float> %1082)
  %1094 = getelementptr inbounds float, float* %0, i64 13
  %1095 = load float, float* %1094, align 4
  %1096 = insertelement <4 x float> zeroinitializer, float %1095, i32 0
  %1097 = getelementptr inbounds float, float* %0, i64 14
  %1098 = load float, float* %1097, align 4
  %1099 = insertelement <4 x float> %1096, float %1098, i32 1
  %1100 = insertelement <4 x float> %1099, float 1.000000e+00, i32 2
  %1101 = getelementptr inbounds float, float* %0, i64 12
  %1102 = load float, float* %1101, align 4
  %1103 = insertelement <4 x float> %1100, float %1102, i32 3
  %1104 = getelementptr inbounds float, float* %1, i64 5
  %1105 = load float, float* %1104, align 4
  %1106 = insertelement <4 x float> zeroinitializer, float %1105, i32 0
  %1107 = getelementptr inbounds float, float* %1, i64 9
  %1108 = load float, float* %1107, align 4
  %1109 = insertelement <4 x float> %1106, float %1108, i32 1
  %1110 = insertelement <4 x float> %1109, float 0.000000e+00, i32 2
  %1111 = getelementptr inbounds float, float* %1, i64 2
  %1112 = load float, float* %1111, align 4
  %1113 = insertelement <4 x float> %1110, float %1112, i32 3
  %1114 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1103, <4 x float> %1113, <4 x float> %1093)
  %1115 = getelementptr inbounds float, float* %0, i64 14
  %1116 = load float, float* %1115, align 4
  %1117 = insertelement <4 x float> zeroinitializer, float %1116, i32 0
  %1118 = getelementptr inbounds float, float* %0, i64 15
  %1119 = load float, float* %1118, align 4
  %1120 = insertelement <4 x float> %1117, float %1119, i32 1
  %1121 = insertelement <4 x float> %1120, float 1.000000e+00, i32 2
  %1122 = insertelement <4 x float> %1121, float 1.000000e+00, i32 3
  %1123 = getelementptr inbounds float, float* %1, i64 9
  %1124 = load float, float* %1123, align 4
  %1125 = insertelement <4 x float> zeroinitializer, float %1124, i32 0
  %1126 = getelementptr inbounds float, float* %1, i64 13
  %1127 = load float, float* %1126, align 4
  %1128 = insertelement <4 x float> %1125, float %1127, i32 1
  %1129 = insertelement <4 x float> %1128, float 0.000000e+00, i32 2
  %1130 = insertelement <4 x float> %1129, float 0.000000e+00, i32 3
  %1131 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1122, <4 x float> %1130, <4 x float> %1114)
  %1132 = shufflevector <4 x float> %1058, <4 x float> %1131, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1133 = getelementptr inbounds float, float* %0, i64 12
  %1134 = load float, float* %1133, align 4
  %1135 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %1134, i32 2
  %1136 = insertelement <4 x float> %1135, float 1.000000e+00, i32 3
  %1137 = getelementptr inbounds float, float* %1, i64 2
  %1138 = load float, float* %1137, align 4
  %1139 = insertelement <4 x float> zeroinitializer, float %1138, i32 2
  %1140 = insertelement <4 x float> %1139, float 0.000000e+00, i32 3
  %1141 = fmul <4 x float> %1136, %1140
  %1142 = getelementptr inbounds float, float* %0, i64 12
  %1143 = load float, float* %1142, align 4
  %1144 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %1143, i32 1
  %1145 = insertelement <4 x float> %1144, float 1.000000e+00, i32 2
  %1146 = insertelement <4 x float> %1145, float 1.000000e+00, i32 3
  %1147 = getelementptr inbounds float, float* %1, i64 2
  %1148 = load float, float* %1147, align 4
  %1149 = insertelement <4 x float> zeroinitializer, float %1148, i32 1
  %1150 = insertelement <4 x float> %1149, float 0.000000e+00, i32 2
  %1151 = insertelement <4 x float> %1150, float 0.000000e+00, i32 3
  %1152 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1146, <4 x float> %1151, <4 x float> %1141)
  %1153 = getelementptr inbounds float, float* %0, i64 12
  %1154 = load float, float* %1153, align 4
  %1155 = insertelement <4 x float> zeroinitializer, float %1154, i32 0
  %1156 = insertelement <4 x float> %1155, float 1.000000e+00, i32 1
  %1157 = getelementptr inbounds float, float* %0, i64 13
  %1158 = load float, float* %1157, align 4
  %1159 = insertelement <4 x float> %1156, float %1158, i32 2
  %1160 = insertelement <4 x float> %1159, float 1.000000e+00, i32 3
  %1161 = getelementptr inbounds float, float* %1, i64 2
  %1162 = load float, float* %1161, align 4
  %1163 = insertelement <4 x float> zeroinitializer, float %1162, i32 0
  %1164 = insertelement <4 x float> %1163, float 0.000000e+00, i32 1
  %1165 = getelementptr inbounds float, float* %1, i64 6
  %1166 = load float, float* %1165, align 4
  %1167 = insertelement <4 x float> %1164, float %1166, i32 2
  %1168 = insertelement <4 x float> %1167, float 0.000000e+00, i32 3
  %1169 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1160, <4 x float> %1168, <4 x float> %1152)
  %1170 = getelementptr inbounds float, float* %0, i64 13
  %1171 = load float, float* %1170, align 4
  %1172 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %1171, i32 1
  %1173 = getelementptr inbounds float, float* %0, i64 14
  %1174 = load float, float* %1173, align 4
  %1175 = insertelement <4 x float> %1172, float %1174, i32 2
  %1176 = insertelement <4 x float> %1175, float 1.000000e+00, i32 3
  %1177 = getelementptr inbounds float, float* %1, i64 6
  %1178 = load float, float* %1177, align 4
  %1179 = insertelement <4 x float> zeroinitializer, float %1178, i32 1
  %1180 = getelementptr inbounds float, float* %1, i64 10
  %1181 = load float, float* %1180, align 4
  %1182 = insertelement <4 x float> %1179, float %1181, i32 2
  %1183 = insertelement <4 x float> %1182, float 0.000000e+00, i32 3
  %1184 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1176, <4 x float> %1183, <4 x float> %1169)
  %1185 = getelementptr inbounds float, float* %0, i64 13
  %1186 = load float, float* %1185, align 4
  %1187 = insertelement <4 x float> zeroinitializer, float %1186, i32 0
  %1188 = getelementptr inbounds float, float* %0, i64 14
  %1189 = load float, float* %1188, align 4
  %1190 = insertelement <4 x float> %1187, float %1189, i32 1
  %1191 = getelementptr inbounds float, float* %0, i64 15
  %1192 = load float, float* %1191, align 4
  %1193 = insertelement <4 x float> %1190, float %1192, i32 2
  %1194 = insertelement <4 x float> %1193, float 0.000000e+00, i32 3
  %1195 = getelementptr inbounds float, float* %1, i64 6
  %1196 = load float, float* %1195, align 4
  %1197 = insertelement <4 x float> zeroinitializer, float %1196, i32 0
  %1198 = getelementptr inbounds float, float* %1, i64 10
  %1199 = load float, float* %1198, align 4
  %1200 = insertelement <4 x float> %1197, float %1199, i32 1
  %1201 = getelementptr inbounds float, float* %1, i64 14
  %1202 = load float, float* %1201, align 4
  %1203 = insertelement <4 x float> %1200, float %1202, i32 2
  %1204 = insertelement <4 x float> %1203, float 0.000000e+00, i32 3
  %1205 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1194, <4 x float> %1204, <4 x float> %1184)
  %1206 = getelementptr inbounds float, float* %0, i64 12
  %1207 = load float, float* %1206, align 4
  %1208 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %1207, i32 3
  %1209 = getelementptr inbounds float, float* %1, i64 3
  %1210 = load float, float* %1209, align 4
  %1211 = insertelement <4 x float> zeroinitializer, float %1210, i32 3
  %1212 = fmul <4 x float> %1208, %1211
  %1213 = getelementptr inbounds float, float* %0, i64 12
  %1214 = load float, float* %1213, align 4
  %1215 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %1214, i32 2
  %1216 = insertelement <4 x float> %1215, float 1.000000e+00, i32 3
  %1217 = getelementptr inbounds float, float* %1, i64 3
  %1218 = load float, float* %1217, align 4
  %1219 = insertelement <4 x float> zeroinitializer, float %1218, i32 2
  %1220 = insertelement <4 x float> %1219, float 0.000000e+00, i32 3
  %1221 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1216, <4 x float> %1220, <4 x float> %1212)
  %1222 = getelementptr inbounds float, float* %0, i64 12
  %1223 = load float, float* %1222, align 4
  %1224 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %1223, i32 1
  %1225 = insertelement <4 x float> %1224, float 1.000000e+00, i32 2
  %1226 = getelementptr inbounds float, float* %0, i64 13
  %1227 = load float, float* %1226, align 4
  %1228 = insertelement <4 x float> %1225, float %1227, i32 3
  %1229 = getelementptr inbounds float, float* %1, i64 3
  %1230 = load float, float* %1229, align 4
  %1231 = insertelement <4 x float> zeroinitializer, float %1230, i32 1
  %1232 = insertelement <4 x float> %1231, float 0.000000e+00, i32 2
  %1233 = getelementptr inbounds float, float* %1, i64 7
  %1234 = load float, float* %1233, align 4
  %1235 = insertelement <4 x float> %1232, float %1234, i32 3
  %1236 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1228, <4 x float> %1235, <4 x float> %1221)
  %1237 = getelementptr inbounds float, float* %0, i64 13
  %1238 = load float, float* %1237, align 4
  %1239 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %1238, i32 2
  %1240 = getelementptr inbounds float, float* %0, i64 14
  %1241 = load float, float* %1240, align 4
  %1242 = insertelement <4 x float> %1239, float %1241, i32 3
  %1243 = getelementptr inbounds float, float* %1, i64 7
  %1244 = load float, float* %1243, align 4
  %1245 = insertelement <4 x float> zeroinitializer, float %1244, i32 2
  %1246 = getelementptr inbounds float, float* %1, i64 11
  %1247 = load float, float* %1246, align 4
  %1248 = insertelement <4 x float> %1245, float %1247, i32 3
  %1249 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1242, <4 x float> %1248, <4 x float> %1236)
  %1250 = getelementptr inbounds float, float* %0, i64 12
  %1251 = load float, float* %1250, align 4
  %1252 = insertelement <4 x float> zeroinitializer, float %1251, i32 0
  %1253 = getelementptr inbounds float, float* %0, i64 13
  %1254 = load float, float* %1253, align 4
  %1255 = insertelement <4 x float> %1252, float %1254, i32 1
  %1256 = getelementptr inbounds float, float* %0, i64 14
  %1257 = load float, float* %1256, align 4
  %1258 = insertelement <4 x float> %1255, float %1257, i32 2
  %1259 = getelementptr inbounds float, float* %0, i64 15
  %1260 = load float, float* %1259, align 4
  %1261 = insertelement <4 x float> %1258, float %1260, i32 3
  %1262 = getelementptr inbounds float, float* %1, i64 3
  %1263 = load float, float* %1262, align 4
  %1264 = insertelement <4 x float> zeroinitializer, float %1263, i32 0
  %1265 = getelementptr inbounds float, float* %1, i64 7
  %1266 = load float, float* %1265, align 4
  %1267 = insertelement <4 x float> %1264, float %1266, i32 1
  %1268 = getelementptr inbounds float, float* %1, i64 11
  %1269 = load float, float* %1268, align 4
  %1270 = insertelement <4 x float> %1267, float %1269, i32 2
  %1271 = getelementptr inbounds float, float* %1, i64 15
  %1272 = load float, float* %1271, align 4
  %1273 = insertelement <4 x float> %1270, float %1272, i32 3
  %1274 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1261, <4 x float> %1273, <4 x float> %1249)
  %1275 = shufflevector <4 x float> %1205, <4 x float> %1274, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %1276 = shufflevector <8 x float> %1132, <8 x float> %1275, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %1277 = shufflevector <16 x float> %1276, <16 x float> zeroinitializer, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %1278 = shufflevector <32 x float> %1277, <32 x float> zeroinitializer, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %1279 = shufflevector <64 x float> %994, <64 x float> %1278, <128 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63, i32 64, i32 65, i32 66, i32 67, i32 68, i32 69, i32 70, i32 71, i32 72, i32 73, i32 74, i32 75, i32 76, i32 77, i32 78, i32 79, i32 80, i32 81, i32 82, i32 83, i32 84, i32 85, i32 86, i32 87, i32 88, i32 89, i32 90, i32 91, i32 92, i32 93, i32 94, i32 95, i32 96, i32 97, i32 98, i32 99, i32 100, i32 101, i32 102, i32 103, i32 104, i32 105, i32 106, i32 107, i32 108, i32 109, i32 110, i32 111, i32 112, i32 113, i32 114, i32 115, i32 116, i32 117, i32 118, i32 119, i32 120, i32 121, i32 122, i32 123, i32 124, i32 125, i32 126, i32 127>
  %1280 = extractelement <128 x float> %1279, i32 0
  store float %1280, float* %2, align 4
  %1281 = extractelement <128 x float> %1279, i32 1
  store float %1281, float* %2, align 4
  %1282 = extractelement <128 x float> %1279, i32 2
  store float %1282, float* %2, align 4
  %1283 = extractelement <128 x float> %1279, i32 3
  store float %1283, float* %2, align 4
  %1284 = extractelement <128 x float> %1279, i32 4
  store float %1284, float* %2, align 4
  %1285 = extractelement <128 x float> %1279, i32 5
  %1286 = getelementptr inbounds float, float* %2, i64 1
  store float %1285, float* %1286, align 4
  %1287 = extractelement <128 x float> %1279, i32 6
  %1288 = getelementptr inbounds float, float* %2, i64 1
  store float %1287, float* %1288, align 4
  %1289 = extractelement <128 x float> %1279, i32 7
  %1290 = getelementptr inbounds float, float* %2, i64 1
  store float %1289, float* %1290, align 4
  %1291 = extractelement <128 x float> %1279, i32 8
  %1292 = getelementptr inbounds float, float* %2, i64 1
  store float %1291, float* %1292, align 4
  %1293 = extractelement <128 x float> %1279, i32 9
  %1294 = getelementptr inbounds float, float* %2, i64 1
  store float %1293, float* %1294, align 4
  %1295 = extractelement <128 x float> %1279, i32 10
  %1296 = getelementptr inbounds float, float* %2, i64 2
  store float %1295, float* %1296, align 4
  %1297 = extractelement <128 x float> %1279, i32 11
  %1298 = getelementptr inbounds float, float* %2, i64 2
  store float %1297, float* %1298, align 4
  %1299 = extractelement <128 x float> %1279, i32 12
  %1300 = getelementptr inbounds float, float* %2, i64 2
  store float %1299, float* %1300, align 4
  %1301 = extractelement <128 x float> %1279, i32 13
  %1302 = getelementptr inbounds float, float* %2, i64 2
  store float %1301, float* %1302, align 4
  %1303 = extractelement <128 x float> %1279, i32 14
  %1304 = getelementptr inbounds float, float* %2, i64 2
  store float %1303, float* %1304, align 4
  %1305 = extractelement <128 x float> %1279, i32 15
  %1306 = getelementptr inbounds float, float* %2, i64 3
  store float %1305, float* %1306, align 4
  %1307 = extractelement <128 x float> %1279, i32 16
  %1308 = getelementptr inbounds float, float* %2, i64 3
  store float %1307, float* %1308, align 4
  %1309 = extractelement <128 x float> %1279, i32 17
  %1310 = getelementptr inbounds float, float* %2, i64 3
  store float %1309, float* %1310, align 4
  %1311 = extractelement <128 x float> %1279, i32 18
  %1312 = getelementptr inbounds float, float* %2, i64 3
  store float %1311, float* %1312, align 4
  %1313 = extractelement <128 x float> %1279, i32 19
  %1314 = getelementptr inbounds float, float* %2, i64 3
  store float %1313, float* %1314, align 4
  %1315 = extractelement <128 x float> %1279, i32 20
  %1316 = getelementptr inbounds float, float* %2, i64 4
  store float %1315, float* %1316, align 4
  %1317 = extractelement <128 x float> %1279, i32 21
  %1318 = getelementptr inbounds float, float* %2, i64 4
  store float %1317, float* %1318, align 4
  %1319 = extractelement <128 x float> %1279, i32 22
  %1320 = getelementptr inbounds float, float* %2, i64 4
  store float %1319, float* %1320, align 4
  %1321 = extractelement <128 x float> %1279, i32 23
  %1322 = getelementptr inbounds float, float* %2, i64 4
  store float %1321, float* %1322, align 4
  %1323 = extractelement <128 x float> %1279, i32 24
  %1324 = getelementptr inbounds float, float* %2, i64 4
  store float %1323, float* %1324, align 4
  %1325 = extractelement <128 x float> %1279, i32 25
  %1326 = getelementptr inbounds float, float* %2, i64 5
  store float %1325, float* %1326, align 4
  %1327 = extractelement <128 x float> %1279, i32 26
  %1328 = getelementptr inbounds float, float* %2, i64 5
  store float %1327, float* %1328, align 4
  %1329 = extractelement <128 x float> %1279, i32 27
  %1330 = getelementptr inbounds float, float* %2, i64 5
  store float %1329, float* %1330, align 4
  %1331 = extractelement <128 x float> %1279, i32 28
  %1332 = getelementptr inbounds float, float* %2, i64 5
  store float %1331, float* %1332, align 4
  %1333 = extractelement <128 x float> %1279, i32 29
  %1334 = getelementptr inbounds float, float* %2, i64 5
  store float %1333, float* %1334, align 4
  %1335 = extractelement <128 x float> %1279, i32 30
  %1336 = getelementptr inbounds float, float* %2, i64 6
  store float %1335, float* %1336, align 4
  %1337 = extractelement <128 x float> %1279, i32 31
  %1338 = getelementptr inbounds float, float* %2, i64 6
  store float %1337, float* %1338, align 4
  %1339 = extractelement <128 x float> %1279, i32 32
  %1340 = getelementptr inbounds float, float* %2, i64 6
  store float %1339, float* %1340, align 4
  %1341 = extractelement <128 x float> %1279, i32 33
  %1342 = getelementptr inbounds float, float* %2, i64 6
  store float %1341, float* %1342, align 4
  %1343 = extractelement <128 x float> %1279, i32 34
  %1344 = getelementptr inbounds float, float* %2, i64 6
  store float %1343, float* %1344, align 4
  %1345 = extractelement <128 x float> %1279, i32 35
  %1346 = getelementptr inbounds float, float* %2, i64 7
  store float %1345, float* %1346, align 4
  %1347 = extractelement <128 x float> %1279, i32 36
  %1348 = getelementptr inbounds float, float* %2, i64 7
  store float %1347, float* %1348, align 4
  %1349 = extractelement <128 x float> %1279, i32 37
  %1350 = getelementptr inbounds float, float* %2, i64 7
  store float %1349, float* %1350, align 4
  %1351 = extractelement <128 x float> %1279, i32 38
  %1352 = getelementptr inbounds float, float* %2, i64 7
  store float %1351, float* %1352, align 4
  %1353 = extractelement <128 x float> %1279, i32 39
  %1354 = getelementptr inbounds float, float* %2, i64 7
  store float %1353, float* %1354, align 4
  %1355 = extractelement <128 x float> %1279, i32 40
  %1356 = getelementptr inbounds float, float* %2, i64 8
  store float %1355, float* %1356, align 4
  %1357 = extractelement <128 x float> %1279, i32 41
  %1358 = getelementptr inbounds float, float* %2, i64 8
  store float %1357, float* %1358, align 4
  %1359 = extractelement <128 x float> %1279, i32 42
  %1360 = getelementptr inbounds float, float* %2, i64 8
  store float %1359, float* %1360, align 4
  %1361 = extractelement <128 x float> %1279, i32 43
  %1362 = getelementptr inbounds float, float* %2, i64 8
  store float %1361, float* %1362, align 4
  %1363 = extractelement <128 x float> %1279, i32 44
  %1364 = getelementptr inbounds float, float* %2, i64 8
  store float %1363, float* %1364, align 4
  %1365 = extractelement <128 x float> %1279, i32 45
  %1366 = getelementptr inbounds float, float* %2, i64 9
  store float %1365, float* %1366, align 4
  %1367 = extractelement <128 x float> %1279, i32 46
  %1368 = getelementptr inbounds float, float* %2, i64 9
  store float %1367, float* %1368, align 4
  %1369 = extractelement <128 x float> %1279, i32 47
  %1370 = getelementptr inbounds float, float* %2, i64 9
  store float %1369, float* %1370, align 4
  %1371 = extractelement <128 x float> %1279, i32 48
  %1372 = getelementptr inbounds float, float* %2, i64 9
  store float %1371, float* %1372, align 4
  %1373 = extractelement <128 x float> %1279, i32 49
  %1374 = getelementptr inbounds float, float* %2, i64 9
  store float %1373, float* %1374, align 4
  %1375 = extractelement <128 x float> %1279, i32 50
  %1376 = getelementptr inbounds float, float* %2, i64 10
  store float %1375, float* %1376, align 4
  %1377 = extractelement <128 x float> %1279, i32 51
  %1378 = getelementptr inbounds float, float* %2, i64 10
  store float %1377, float* %1378, align 4
  %1379 = extractelement <128 x float> %1279, i32 52
  %1380 = getelementptr inbounds float, float* %2, i64 10
  store float %1379, float* %1380, align 4
  %1381 = extractelement <128 x float> %1279, i32 53
  %1382 = getelementptr inbounds float, float* %2, i64 10
  store float %1381, float* %1382, align 4
  %1383 = extractelement <128 x float> %1279, i32 54
  %1384 = getelementptr inbounds float, float* %2, i64 10
  store float %1383, float* %1384, align 4
  %1385 = extractelement <128 x float> %1279, i32 55
  %1386 = getelementptr inbounds float, float* %2, i64 11
  store float %1385, float* %1386, align 4
  %1387 = extractelement <128 x float> %1279, i32 56
  %1388 = getelementptr inbounds float, float* %2, i64 11
  store float %1387, float* %1388, align 4
  %1389 = extractelement <128 x float> %1279, i32 57
  %1390 = getelementptr inbounds float, float* %2, i64 11
  store float %1389, float* %1390, align 4
  %1391 = extractelement <128 x float> %1279, i32 58
  %1392 = getelementptr inbounds float, float* %2, i64 11
  store float %1391, float* %1392, align 4
  %1393 = extractelement <128 x float> %1279, i32 59
  %1394 = getelementptr inbounds float, float* %2, i64 11
  store float %1393, float* %1394, align 4
  %1395 = extractelement <128 x float> %1279, i32 60
  %1396 = getelementptr inbounds float, float* %2, i64 12
  store float %1395, float* %1396, align 4
  %1397 = extractelement <128 x float> %1279, i32 61
  %1398 = getelementptr inbounds float, float* %2, i64 12
  store float %1397, float* %1398, align 4
  %1399 = extractelement <128 x float> %1279, i32 62
  %1400 = getelementptr inbounds float, float* %2, i64 12
  store float %1399, float* %1400, align 4
  %1401 = extractelement <128 x float> %1279, i32 63
  %1402 = getelementptr inbounds float, float* %2, i64 12
  store float %1401, float* %1402, align 4
  %1403 = extractelement <128 x float> %1279, i32 64
  %1404 = getelementptr inbounds float, float* %2, i64 12
  store float %1403, float* %1404, align 4
  %1405 = extractelement <128 x float> %1279, i32 65
  %1406 = getelementptr inbounds float, float* %2, i64 13
  store float %1405, float* %1406, align 4
  %1407 = extractelement <128 x float> %1279, i32 66
  %1408 = getelementptr inbounds float, float* %2, i64 13
  store float %1407, float* %1408, align 4
  %1409 = extractelement <128 x float> %1279, i32 67
  %1410 = getelementptr inbounds float, float* %2, i64 13
  store float %1409, float* %1410, align 4
  %1411 = extractelement <128 x float> %1279, i32 68
  %1412 = getelementptr inbounds float, float* %2, i64 13
  store float %1411, float* %1412, align 4
  %1413 = extractelement <128 x float> %1279, i32 69
  %1414 = getelementptr inbounds float, float* %2, i64 13
  store float %1413, float* %1414, align 4
  %1415 = extractelement <128 x float> %1279, i32 70
  %1416 = getelementptr inbounds float, float* %2, i64 14
  store float %1415, float* %1416, align 4
  %1417 = extractelement <128 x float> %1279, i32 71
  %1418 = getelementptr inbounds float, float* %2, i64 14
  store float %1417, float* %1418, align 4
  %1419 = extractelement <128 x float> %1279, i32 72
  %1420 = getelementptr inbounds float, float* %2, i64 14
  store float %1419, float* %1420, align 4
  %1421 = extractelement <128 x float> %1279, i32 73
  %1422 = getelementptr inbounds float, float* %2, i64 14
  store float %1421, float* %1422, align 4
  %1423 = extractelement <128 x float> %1279, i32 74
  %1424 = getelementptr inbounds float, float* %2, i64 14
  store float %1423, float* %1424, align 4
  %1425 = extractelement <128 x float> %1279, i32 75
  %1426 = getelementptr inbounds float, float* %2, i64 15
  store float %1425, float* %1426, align 4
  %1427 = extractelement <128 x float> %1279, i32 76
  %1428 = getelementptr inbounds float, float* %2, i64 15
  store float %1427, float* %1428, align 4
  %1429 = extractelement <128 x float> %1279, i32 77
  %1430 = getelementptr inbounds float, float* %2, i64 15
  store float %1429, float* %1430, align 4
  %1431 = extractelement <128 x float> %1279, i32 78
  %1432 = getelementptr inbounds float, float* %2, i64 15
  store float %1431, float* %1432, align 4
  %1433 = extractelement <128 x float> %1279, i32 79
  %1434 = getelementptr inbounds float, float* %2, i64 15
  store float %1433, float* %1434, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @naive_fixed_qr_decomp(float* %0, float* %1, float* %2) #2 {
.preheader33:
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %0 to i8*
  %5 = bitcast float* %2 to i8*
  %6 = call i64 @llvm.objectsize.i64.p0i8(i8* %5, i1 false, i1 true, i1 false)
  %7 = call i8* @__memcpy_chk(i8* %3, i8* %4, i64 64, i64 %6) #8
  %8 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9 = bitcast float* %1 to i8*
  %10 = bitcast float* %1 to i8*
  %11 = call i64 @llvm.objectsize.i64.p0i8(i8* %10, i1 false, i1 true, i1 false)
  %12 = bitcast float* %2 to i8*
  %13 = bitcast float* %2 to i8*
  %14 = call i64 @llvm.objectsize.i64.p0i8(i8* %13, i1 false, i1 true, i1 false)
  %15 = bitcast float* %1 to i8*
  %16 = bitcast float* %1 to i8*
  %17 = call i64 @llvm.objectsize.i64.p0i8(i8* %16, i1 false, i1 true, i1 false)
  %18 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %19 = bitcast i8* %18 to float*
  %20 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %21 = load float, float* %19, align 4
  %22 = fpext float %21 to double
  %square = fmul double %22, %22
  %23 = fadd double %square, 0.000000e+00
  %24 = fptrunc double %23 to float
  %25 = getelementptr inbounds i8, i8* %18, i64 4
  %26 = bitcast i8* %25 to float*
  %27 = load float, float* %26, align 4
  %28 = fpext float %27 to double
  %square202 = fmul double %28, %28
  %29 = fpext float %24 to double
  %30 = fadd double %square202, %29
  %31 = fptrunc double %30 to float
  %32 = getelementptr inbounds i8, i8* %18, i64 8
  %33 = bitcast i8* %32 to float*
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  %square203 = fmul double %35, %35
  %36 = fpext float %31 to double
  %37 = fadd double %square203, %36
  %38 = fptrunc double %37 to float
  %39 = getelementptr inbounds i8, i8* %18, i64 12
  %40 = bitcast i8* %39 to float*
  %41 = load float, float* %40, align 4
  %42 = fpext float %41 to double
  %square204 = fmul double %42, %42
  %43 = fpext float %38 to double
  %44 = fadd double %square204, %43
  %45 = fptrunc double %44 to float
  %46 = call float @llvm.sqrt.f32(float %45)
  %47 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %48 = bitcast i8* %47 to float*
  %49 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %50 = load float, float* %48, align 4
  %51 = fpext float %50 to double
  %square205 = fmul double %51, %51
  %52 = fadd double %square205, 0.000000e+00
  %53 = fptrunc double %52 to float
  %54 = getelementptr inbounds i8, i8* %47, i64 4
  %55 = bitcast i8* %54 to float*
  %56 = load float, float* %55, align 4
  %57 = fpext float %56 to double
  %square206 = fmul double %57, %57
  %58 = fpext float %53 to double
  %59 = fadd double %square206, %58
  %60 = fptrunc double %59 to float
  %61 = getelementptr inbounds i8, i8* %47, i64 8
  %62 = bitcast i8* %61 to float*
  %63 = load float, float* %62, align 4
  %64 = fpext float %63 to double
  %square207 = fmul double %64, %64
  %65 = fpext float %60 to double
  %66 = fadd double %square207, %65
  %67 = fptrunc double %66 to float
  %68 = getelementptr inbounds i8, i8* %47, i64 12
  %69 = bitcast i8* %68 to float*
  %70 = load float, float* %69, align 4
  %71 = fpext float %70 to double
  %square208 = fmul double %71, %71
  %72 = fpext float %67 to double
  %73 = fadd double %square208, %72
  %74 = fptrunc double %73 to float
  %75 = call float @llvm.sqrt.f32(float %74)
  %76 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %77 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %78 = call i8* @__memcpy_chk(i8* %15, i8* %77, i64 64, i64 %17) #8
  call void @free(i8* %18)
  call void @free(i8* %20)
  call void @free(i8* %47)
  call void @free(i8* %49)
  call void @free(i8* %76)
  call void @free(i8* %77)
  %79 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %80 = bitcast i8* %79 to float*
  %81 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %82 = load float, float* %80, align 4
  %83 = fpext float %82 to double
  %square210 = fmul double %83, %83
  %84 = fadd double %square210, 0.000000e+00
  %85 = fptrunc double %84 to float
  %86 = getelementptr inbounds i8, i8* %79, i64 4
  %87 = bitcast i8* %86 to float*
  %88 = load float, float* %87, align 4
  %89 = fpext float %88 to double
  %square211 = fmul double %89, %89
  %90 = fpext float %85 to double
  %91 = fadd double %square211, %90
  %92 = fptrunc double %91 to float
  %93 = getelementptr inbounds i8, i8* %79, i64 8
  %94 = bitcast i8* %93 to float*
  %95 = load float, float* %94, align 4
  %96 = fpext float %95 to double
  %square212 = fmul double %96, %96
  %97 = fpext float %92 to double
  %98 = fadd double %square212, %97
  %99 = fptrunc double %98 to float
  %100 = call float @llvm.sqrt.f32(float %99)
  %101 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %102 = bitcast i8* %101 to float*
  %103 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %104 = load float, float* %102, align 4
  %105 = fpext float %104 to double
  %square213 = fmul double %105, %105
  %106 = fadd double %square213, 0.000000e+00
  %107 = fptrunc double %106 to float
  %108 = getelementptr inbounds i8, i8* %101, i64 4
  %109 = bitcast i8* %108 to float*
  %110 = load float, float* %109, align 4
  %111 = fpext float %110 to double
  %square214 = fmul double %111, %111
  %112 = fpext float %107 to double
  %113 = fadd double %square214, %112
  %114 = fptrunc double %113 to float
  %115 = getelementptr inbounds i8, i8* %101, i64 8
  %116 = bitcast i8* %115 to float*
  %117 = load float, float* %116, align 4
  %118 = fpext float %117 to double
  %square215 = fmul double %118, %118
  %119 = fpext float %114 to double
  %120 = fadd double %square215, %119
  %121 = fptrunc double %120 to float
  %122 = call float @llvm.sqrt.f32(float %121)
  %123 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %124 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %125 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %126 = call i8* @__memcpy_chk(i8* %9, i8* %125, i64 64, i64 %11) #8
  %127 = call i8* @__memcpy_chk(i8* %12, i8* %125, i64 64, i64 %14) #8
  call void @free(i8* %79)
  call void @free(i8* %81)
  call void @free(i8* %101)
  call void @free(i8* %103)
  call void @free(i8* %123)
  call void @free(i8* %124)
  %128 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %129 = bitcast i8* %128 to float*
  %130 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %131 = load float, float* %129, align 4
  %132 = fpext float %131 to double
  %square217 = fmul double %132, %132
  %133 = fadd double %square217, 0.000000e+00
  %134 = fptrunc double %133 to float
  %135 = getelementptr inbounds i8, i8* %128, i64 4
  %136 = bitcast i8* %135 to float*
  %137 = load float, float* %136, align 4
  %138 = fpext float %137 to double
  %square218 = fmul double %138, %138
  %139 = fpext float %134 to double
  %140 = fadd double %square218, %139
  %141 = fptrunc double %140 to float
  %142 = call float @llvm.sqrt.f32(float %141)
  %143 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %144 = bitcast i8* %143 to float*
  %145 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %146 = load float, float* %144, align 4
  %147 = fpext float %146 to double
  %square219 = fmul double %147, %147
  %148 = fadd double %square219, 0.000000e+00
  %149 = fptrunc double %148 to float
  %150 = getelementptr inbounds i8, i8* %143, i64 4
  %151 = bitcast i8* %150 to float*
  %152 = load float, float* %151, align 4
  %153 = fpext float %152 to double
  %square220 = fmul double %153, %153
  %154 = fpext float %149 to double
  %155 = fadd double %square220, %154
  %156 = fptrunc double %155 to float
  %157 = call float @llvm.sqrt.f32(float %156)
  %158 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %159 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %160 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %161 = call i8* @__memcpy_chk(i8* nonnull %9, i8* %160, i64 64, i64 %11) #8
  %162 = call i8* @__memcpy_chk(i8* nonnull %12, i8* %160, i64 64, i64 %14) #8
  call void @free(i8* %128)
  call void @free(i8* %130)
  call void @free(i8* %143)
  call void @free(i8* %145)
  call void @free(i8* %158)
  call void @free(i8* %159)
  %163 = bitcast float* %2 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = sitofp i32 %164 to float
  %166 = insertelement <4 x float> zeroinitializer, float %165, i32 0
  %167 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %168 = bitcast i8* %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = sitofp i32 %169 to float
  %171 = insertelement <4 x float> %166, float %170, i32 1
  %172 = getelementptr inbounds float, float* %2, i64 4
  %173 = bitcast float* %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = sitofp i32 %174 to float
  %176 = insertelement <4 x float> %171, float %175, i32 2
  %177 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %178 = getelementptr inbounds i8, i8* %177, i64 16
  %179 = bitcast i8* %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = sitofp i32 %180 to float
  %182 = insertelement <4 x float> %176, float %181, i32 3
  %183 = getelementptr inbounds float, float* %2, i64 8
  %184 = bitcast float* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = sitofp i32 %185 to float
  %187 = insertelement <4 x float> zeroinitializer, float %186, i32 0
  %188 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %189 = getelementptr inbounds i8, i8* %188, i64 32
  %190 = bitcast i8* %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = sitofp i32 %191 to float
  %193 = insertelement <4 x float> %187, float %192, i32 1
  %194 = getelementptr inbounds float, float* %2, i64 12
  %195 = bitcast float* %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = sitofp i32 %196 to float
  %198 = insertelement <4 x float> %193, float %197, i32 2
  %199 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %200 = getelementptr inbounds i8, i8* %199, i64 48
  %201 = bitcast i8* %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = sitofp i32 %202 to float
  %204 = insertelement <4 x float> %198, float %203, i32 3
  %205 = shufflevector <4 x float> %182, <4 x float> %204, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %206 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %207 = bitcast i8* %206 to float*
  %208 = load float, float* %207, align 4
  %209 = insertelement <4 x float> zeroinitializer, float %208, i32 0
  %210 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %211 = getelementptr inbounds i8, i8* %210, i64 4
  %212 = bitcast i8* %211 to float*
  %213 = load float, float* %212, align 4
  %214 = insertelement <4 x float> %209, float %213, i32 1
  %215 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %216 = getelementptr inbounds i8, i8* %215, i64 8
  %217 = bitcast i8* %216 to float*
  %218 = load float, float* %217, align 4
  %219 = insertelement <4 x float> %214, float %218, i32 2
  %220 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %221 = getelementptr inbounds i8, i8* %220, i64 12
  %222 = bitcast i8* %221 to float*
  %223 = load float, float* %222, align 4
  %224 = insertelement <4 x float> %219, float %223, i32 3
  %225 = insertelement <4 x float> zeroinitializer, float %46, i32 0
  %226 = insertelement <4 x float> %225, float %46, i32 1
  %227 = insertelement <4 x float> %226, float %46, i32 2
  %228 = insertelement <4 x float> %227, float %46, i32 3
  %229 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %230 = bitcast i8* %229 to float*
  %231 = load float, float* %230, align 4
  %232 = fcmp olt float %231, 0.000000e+00
  %233 = sext i1 %232 to i32
  %234 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %235 = bitcast i8* %234 to float*
  %236 = load float, float* %235, align 4
  %237 = fcmp ogt float %236, 0.000000e+00
  %238 = zext i1 %237 to i32
  %239 = add nsw i32 %233, %238
  %240 = sitofp i32 %239 to float
  %241 = insertelement <4 x float> zeroinitializer, float %240, i32 0
  %242 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %243 = bitcast i8* %242 to float*
  %244 = load float, float* %243, align 4
  %245 = fcmp olt float %244, 0.000000e+00
  %246 = sext i1 %245 to i32
  %247 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %248 = bitcast i8* %247 to float*
  %249 = load float, float* %248, align 4
  %250 = fcmp ogt float %249, 0.000000e+00
  %251 = zext i1 %250 to i32
  %252 = add nsw i32 %246, %251
  %253 = sitofp i32 %252 to float
  %254 = insertelement <4 x float> %241, float %253, i32 1
  %255 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %256 = bitcast i8* %255 to float*
  %257 = load float, float* %256, align 4
  %258 = fcmp olt float %257, 0.000000e+00
  %259 = sext i1 %258 to i32
  %260 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %261 = bitcast i8* %260 to float*
  %262 = load float, float* %261, align 4
  %263 = fcmp ogt float %262, 0.000000e+00
  %264 = zext i1 %263 to i32
  %265 = add nsw i32 %259, %264
  %266 = sitofp i32 %265 to float
  %267 = insertelement <4 x float> %254, float %266, i32 2
  %268 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %269 = bitcast i8* %268 to float*
  %270 = load float, float* %269, align 4
  %271 = fcmp olt float %270, 0.000000e+00
  %272 = sext i1 %271 to i32
  %273 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %274 = bitcast i8* %273 to float*
  %275 = load float, float* %274, align 4
  %276 = fcmp ogt float %275, 0.000000e+00
  %277 = zext i1 %276 to i32
  %278 = add nsw i32 %272, %277
  %279 = sitofp i32 %278 to float
  %280 = insertelement <4 x float> %267, float %279, i32 3
  %281 = fneg <4 x float> %280
  %282 = fmul <4 x float> %228, %281
  %283 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %284 = bitcast i8* %283 to float*
  %285 = load float, float* %284, align 4
  %286 = insertelement <4 x float> zeroinitializer, float %285, i32 0
  %287 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %288 = getelementptr inbounds i8, i8* %287, i64 4
  %289 = bitcast i8* %288 to float*
  %290 = load float, float* %289, align 4
  %291 = insertelement <4 x float> %286, float %290, i32 1
  %292 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %293 = getelementptr inbounds i8, i8* %292, i64 8
  %294 = bitcast i8* %293 to float*
  %295 = load float, float* %294, align 4
  %296 = insertelement <4 x float> %291, float %295, i32 2
  %297 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %298 = getelementptr inbounds i8, i8* %297, i64 12
  %299 = bitcast i8* %298 to float*
  %300 = load float, float* %299, align 4
  %301 = insertelement <4 x float> %296, float %300, i32 3
  %302 = call <4 x float> @llvm.fma.v4f32(<4 x float> %282, <4 x float> %301, <4 x float> %224)
  %303 = shufflevector <4 x float> %302, <4 x float> zeroinitializer, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %304 = shufflevector <8 x float> %205, <8 x float> %303, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %305 = shufflevector <16 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <16 x float> %304, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %306 = extractelement <32 x float> %305, i32 0
  %307 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %308 = bitcast i8* %307 to float*
  store float %306, float* %308, align 4
  %309 = extractelement <32 x float> %305, i32 1
  %310 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %311 = getelementptr inbounds i8, i8* %310, i64 4
  %312 = bitcast i8* %311 to float*
  store float %309, float* %312, align 4
  %313 = extractelement <32 x float> %305, i32 2
  %314 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %315 = getelementptr inbounds i8, i8* %314, i64 8
  %316 = bitcast i8* %315 to float*
  store float %313, float* %316, align 4
  %317 = extractelement <32 x float> %305, i32 3
  %318 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %319 = getelementptr inbounds i8, i8* %318, i64 12
  %320 = bitcast i8* %319 to float*
  store float %317, float* %320, align 4
  %321 = extractelement <32 x float> %305, i32 4
  %322 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %323 = getelementptr inbounds i8, i8* %322, i64 16
  %324 = bitcast i8* %323 to float*
  store float %321, float* %324, align 4
  %325 = extractelement <32 x float> %305, i32 5
  %326 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %327 = getelementptr inbounds i8, i8* %326, i64 20
  %328 = bitcast i8* %327 to float*
  store float %325, float* %328, align 4
  %329 = extractelement <32 x float> %305, i32 6
  %330 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %331 = getelementptr inbounds i8, i8* %330, i64 24
  %332 = bitcast i8* %331 to float*
  store float %329, float* %332, align 4
  %333 = extractelement <32 x float> %305, i32 7
  %334 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %335 = getelementptr inbounds i8, i8* %334, i64 28
  %336 = bitcast i8* %335 to float*
  store float %333, float* %336, align 4
  %337 = extractelement <32 x float> %305, i32 8
  %338 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %339 = getelementptr inbounds i8, i8* %338, i64 32
  %340 = bitcast i8* %339 to float*
  store float %337, float* %340, align 4
  %341 = extractelement <32 x float> %305, i32 9
  %342 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %343 = getelementptr inbounds i8, i8* %342, i64 36
  %344 = bitcast i8* %343 to float*
  store float %341, float* %344, align 4
  %345 = extractelement <32 x float> %305, i32 10
  %346 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %347 = getelementptr inbounds i8, i8* %346, i64 40
  %348 = bitcast i8* %347 to float*
  store float %345, float* %348, align 4
  %349 = extractelement <32 x float> %305, i32 11
  %350 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %351 = getelementptr inbounds i8, i8* %350, i64 44
  %352 = bitcast i8* %351 to float*
  store float %349, float* %352, align 4
  %353 = extractelement <32 x float> %305, i32 12
  %354 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %355 = getelementptr inbounds i8, i8* %354, i64 48
  %356 = bitcast i8* %355 to float*
  store float %353, float* %356, align 4
  %357 = extractelement <32 x float> %305, i32 13
  %358 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %359 = getelementptr inbounds i8, i8* %358, i64 52
  %360 = bitcast i8* %359 to float*
  store float %357, float* %360, align 4
  %361 = extractelement <32 x float> %305, i32 14
  %362 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %363 = getelementptr inbounds i8, i8* %362, i64 56
  %364 = bitcast i8* %363 to float*
  store float %361, float* %364, align 4
  %365 = extractelement <32 x float> %305, i32 15
  %366 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %367 = getelementptr inbounds i8, i8* %366, i64 60
  %368 = bitcast i8* %367 to float*
  store float %365, float* %368, align 4
  %369 = extractelement <32 x float> %305, i32 16
  %370 = fptosi float %369 to i32
  %371 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %372 = bitcast i8* %371 to i32*
  store i32 %370, i32* %372, align 4
  %373 = extractelement <32 x float> %305, i32 17
  %374 = fptosi float %373 to i32
  %375 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %376 = bitcast i8* %375 to i32*
  store i32 %374, i32* %376, align 4
  %377 = extractelement <32 x float> %305, i32 18
  %378 = fptosi float %377 to i32
  %379 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %380 = getelementptr inbounds i8, i8* %379, i64 4
  %381 = bitcast i8* %380 to i32*
  store i32 %378, i32* %381, align 4
  %382 = extractelement <32 x float> %305, i32 19
  %383 = fptosi float %382 to i32
  %384 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %385 = getelementptr inbounds i8, i8* %384, i64 4
  %386 = bitcast i8* %385 to i32*
  store i32 %383, i32* %386, align 4
  %387 = extractelement <32 x float> %305, i32 20
  %388 = fptosi float %387 to i32
  %389 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %390 = getelementptr inbounds i8, i8* %389, i64 8
  %391 = bitcast i8* %390 to i32*
  store i32 %388, i32* %391, align 4
  %392 = extractelement <32 x float> %305, i32 21
  %393 = fptosi float %392 to i32
  %394 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %395 = getelementptr inbounds i8, i8* %394, i64 8
  %396 = bitcast i8* %395 to i32*
  store i32 %393, i32* %396, align 4
  %397 = extractelement <32 x float> %305, i32 22
  %398 = fptosi float %397 to i32
  %399 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %400 = getelementptr inbounds i8, i8* %399, i64 12
  %401 = bitcast i8* %400 to i32*
  store i32 %398, i32* %401, align 4
  %402 = extractelement <32 x float> %305, i32 23
  %403 = fptosi float %402 to i32
  %404 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %405 = getelementptr inbounds i8, i8* %404, i64 12
  %406 = bitcast i8* %405 to i32*
  store i32 %403, i32* %406, align 4
  %407 = extractelement <32 x float> %305, i32 24
  %408 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %409 = bitcast i8* %408 to float*
  store float %407, float* %409, align 4
  %410 = extractelement <32 x float> %305, i32 25
  %411 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %412 = getelementptr inbounds i8, i8* %411, i64 4
  %413 = bitcast i8* %412 to float*
  store float %410, float* %413, align 4
  %414 = extractelement <32 x float> %305, i32 26
  %415 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %416 = getelementptr inbounds i8, i8* %415, i64 8
  %417 = bitcast i8* %416 to float*
  store float %414, float* %417, align 4
  %418 = extractelement <32 x float> %305, i32 27
  %419 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %420 = getelementptr inbounds i8, i8* %419, i64 12
  %421 = bitcast i8* %420 to float*
  store float %418, float* %421, align 4
  %422 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %423 = bitcast i8* %422 to float*
  %424 = load float, float* %423, align 4
  %425 = insertelement <4 x float> zeroinitializer, float %424, i32 0
  %426 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %427 = getelementptr inbounds i8, i8* %426, i64 4
  %428 = bitcast i8* %427 to float*
  %429 = load float, float* %428, align 4
  %430 = insertelement <4 x float> %425, float %429, i32 1
  %431 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %432 = getelementptr inbounds i8, i8* %431, i64 8
  %433 = bitcast i8* %432 to float*
  %434 = load float, float* %433, align 4
  %435 = insertelement <4 x float> %430, float %434, i32 2
  %436 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %437 = getelementptr inbounds i8, i8* %436, i64 12
  %438 = bitcast i8* %437 to float*
  %439 = load float, float* %438, align 4
  %440 = insertelement <4 x float> %435, float %439, i32 3
  %441 = insertelement <4 x float> zeroinitializer, float %75, i32 0
  %442 = insertelement <4 x float> %441, float %75, i32 1
  %443 = insertelement <4 x float> %442, float %75, i32 2
  %444 = insertelement <4 x float> %443, float %75, i32 3
  %445 = fdiv <4 x float> %440, %444
  %446 = extractelement <4 x float> %445, i32 0
  %447 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %448 = bitcast i8* %447 to float*
  store float %446, float* %448, align 4
  %449 = extractelement <4 x float> %445, i32 1
  %450 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %451 = getelementptr inbounds i8, i8* %450, i64 4
  %452 = bitcast i8* %451 to float*
  store float %449, float* %452, align 4
  %453 = extractelement <4 x float> %445, i32 2
  %454 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %455 = getelementptr inbounds i8, i8* %454, i64 8
  %456 = bitcast i8* %455 to float*
  store float %453, float* %456, align 4
  %457 = extractelement <4 x float> %445, i32 3
  %458 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %459 = getelementptr inbounds i8, i8* %458, i64 12
  %460 = bitcast i8* %459 to float*
  store float %457, float* %460, align 4
  %461 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %462 = bitcast i8* %461 to float*
  %463 = load float, float* %462, align 4
  %464 = insertelement <4 x float> zeroinitializer, float %463, i32 0
  %465 = insertelement <4 x float> %464, float 1.000000e+00, i32 1
  %466 = insertelement <4 x float> %465, float 1.000000e+00, i32 2
  %467 = insertelement <4 x float> %466, float 1.000000e+00, i32 3
  %468 = fmul <4 x float> %467, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %469 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %470 = bitcast i8* %469 to float*
  %471 = load float, float* %470, align 4
  %472 = insertelement <4 x float> zeroinitializer, float %471, i32 0
  %473 = insertelement <4 x float> %472, float 0.000000e+00, i32 1
  %474 = insertelement <4 x float> %473, float 0.000000e+00, i32 2
  %475 = insertelement <4 x float> %474, float 0.000000e+00, i32 3
  %476 = fmul <4 x float> %468, %475
  %477 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %476
  %478 = extractelement <4 x float> %477, i32 0
  %479 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %480 = bitcast i8* %479 to float*
  store float %478, float* %480, align 4
  %481 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %482 = bitcast i8* %481 to float*
  %483 = load float, float* %482, align 4
  %484 = insertelement <4 x float> zeroinitializer, float %483, i32 0
  %485 = insertelement <4 x float> %484, float 1.000000e+00, i32 1
  %486 = insertelement <4 x float> %485, float 1.000000e+00, i32 2
  %487 = insertelement <4 x float> %486, float 1.000000e+00, i32 3
  %488 = fmul <4 x float> %487, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %489 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %490 = getelementptr inbounds i8, i8* %489, i64 4
  %491 = bitcast i8* %490 to float*
  %492 = load float, float* %491, align 4
  %493 = insertelement <4 x float> zeroinitializer, float %492, i32 0
  %494 = insertelement <4 x float> %493, float 0.000000e+00, i32 1
  %495 = insertelement <4 x float> %494, float 0.000000e+00, i32 2
  %496 = insertelement <4 x float> %495, float 0.000000e+00, i32 3
  %497 = fmul <4 x float> %488, %496
  %498 = fsub <4 x float> zeroinitializer, %497
  %499 = extractelement <4 x float> %498, i32 0
  %500 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %501 = getelementptr inbounds i8, i8* %500, i64 4
  %502 = bitcast i8* %501 to float*
  store float %499, float* %502, align 4
  %503 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %504 = bitcast i8* %503 to float*
  %505 = load float, float* %504, align 4
  %506 = insertelement <4 x float> zeroinitializer, float %505, i32 0
  %507 = insertelement <4 x float> %506, float 1.000000e+00, i32 1
  %508 = insertelement <4 x float> %507, float 1.000000e+00, i32 2
  %509 = insertelement <4 x float> %508, float 1.000000e+00, i32 3
  %510 = fmul <4 x float> %509, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %511 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %512 = getelementptr inbounds i8, i8* %511, i64 8
  %513 = bitcast i8* %512 to float*
  %514 = load float, float* %513, align 4
  %515 = insertelement <4 x float> zeroinitializer, float %514, i32 0
  %516 = insertelement <4 x float> %515, float 0.000000e+00, i32 1
  %517 = insertelement <4 x float> %516, float 0.000000e+00, i32 2
  %518 = insertelement <4 x float> %517, float 0.000000e+00, i32 3
  %519 = fmul <4 x float> %510, %518
  %520 = fsub <4 x float> zeroinitializer, %519
  %521 = extractelement <4 x float> %520, i32 0
  %522 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %523 = getelementptr inbounds i8, i8* %522, i64 8
  %524 = bitcast i8* %523 to float*
  store float %521, float* %524, align 4
  %525 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %526 = bitcast i8* %525 to float*
  %527 = load float, float* %526, align 4
  %528 = insertelement <4 x float> zeroinitializer, float %527, i32 0
  %529 = insertelement <4 x float> %528, float 1.000000e+00, i32 1
  %530 = insertelement <4 x float> %529, float 1.000000e+00, i32 2
  %531 = insertelement <4 x float> %530, float 1.000000e+00, i32 3
  %532 = fmul <4 x float> %531, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %533 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %534 = getelementptr inbounds i8, i8* %533, i64 12
  %535 = bitcast i8* %534 to float*
  %536 = load float, float* %535, align 4
  %537 = insertelement <4 x float> zeroinitializer, float %536, i32 0
  %538 = insertelement <4 x float> %537, float 0.000000e+00, i32 1
  %539 = insertelement <4 x float> %538, float 0.000000e+00, i32 2
  %540 = insertelement <4 x float> %539, float 0.000000e+00, i32 3
  %541 = fmul <4 x float> %532, %540
  %542 = fsub <4 x float> zeroinitializer, %541
  %543 = extractelement <4 x float> %542, i32 0
  %544 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %545 = getelementptr inbounds i8, i8* %544, i64 12
  %546 = bitcast i8* %545 to float*
  store float %543, float* %546, align 4
  %547 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %548 = getelementptr inbounds i8, i8* %547, i64 4
  %549 = bitcast i8* %548 to float*
  %550 = load float, float* %549, align 4
  %551 = insertelement <4 x float> zeroinitializer, float %550, i32 0
  %552 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %553 = getelementptr inbounds i8, i8* %552, i64 4
  %554 = bitcast i8* %553 to float*
  %555 = load float, float* %554, align 4
  %556 = insertelement <4 x float> %551, float %555, i32 1
  %557 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %558 = getelementptr inbounds i8, i8* %557, i64 4
  %559 = bitcast i8* %558 to float*
  %560 = load float, float* %559, align 4
  %561 = insertelement <4 x float> %556, float %560, i32 2
  %562 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %563 = getelementptr inbounds i8, i8* %562, i64 4
  %564 = bitcast i8* %563 to float*
  %565 = load float, float* %564, align 4
  %566 = insertelement <4 x float> %561, float %565, i32 3
  %567 = fmul <4 x float> %566, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %568 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %569 = bitcast i8* %568 to float*
  %570 = load float, float* %569, align 4
  %571 = insertelement <4 x float> zeroinitializer, float %570, i32 0
  %572 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %573 = getelementptr inbounds i8, i8* %572, i64 4
  %574 = bitcast i8* %573 to float*
  %575 = load float, float* %574, align 4
  %576 = insertelement <4 x float> %571, float %575, i32 1
  %577 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %578 = getelementptr inbounds i8, i8* %577, i64 8
  %579 = bitcast i8* %578 to float*
  %580 = load float, float* %579, align 4
  %581 = insertelement <4 x float> %576, float %580, i32 2
  %582 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %583 = getelementptr inbounds i8, i8* %582, i64 12
  %584 = bitcast i8* %583 to float*
  %585 = load float, float* %584, align 4
  %586 = insertelement <4 x float> %581, float %585, i32 3
  %587 = fmul <4 x float> %567, %586
  %588 = fsub <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, %587
  %589 = extractelement <4 x float> %588, i32 0
  %590 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %591 = getelementptr inbounds i8, i8* %590, i64 16
  %592 = bitcast i8* %591 to float*
  store float %589, float* %592, align 4
  %593 = extractelement <4 x float> %588, i32 1
  %594 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %595 = getelementptr inbounds i8, i8* %594, i64 20
  %596 = bitcast i8* %595 to float*
  store float %593, float* %596, align 4
  %597 = extractelement <4 x float> %588, i32 2
  %598 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %599 = getelementptr inbounds i8, i8* %598, i64 24
  %600 = bitcast i8* %599 to float*
  store float %597, float* %600, align 4
  %601 = extractelement <4 x float> %588, i32 3
  %602 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %603 = getelementptr inbounds i8, i8* %602, i64 28
  %604 = bitcast i8* %603 to float*
  store float %601, float* %604, align 4
  %605 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %606 = getelementptr inbounds i8, i8* %605, i64 8
  %607 = bitcast i8* %606 to float*
  %608 = load float, float* %607, align 4
  %609 = insertelement <4 x float> zeroinitializer, float %608, i32 0
  %610 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %611 = getelementptr inbounds i8, i8* %610, i64 8
  %612 = bitcast i8* %611 to float*
  %613 = load float, float* %612, align 4
  %614 = insertelement <4 x float> %609, float %613, i32 1
  %615 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %616 = getelementptr inbounds i8, i8* %615, i64 8
  %617 = bitcast i8* %616 to float*
  %618 = load float, float* %617, align 4
  %619 = insertelement <4 x float> %614, float %618, i32 2
  %620 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %621 = getelementptr inbounds i8, i8* %620, i64 8
  %622 = bitcast i8* %621 to float*
  %623 = load float, float* %622, align 4
  %624 = insertelement <4 x float> %619, float %623, i32 3
  %625 = fmul <4 x float> %624, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %626 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %627 = bitcast i8* %626 to float*
  %628 = load float, float* %627, align 4
  %629 = insertelement <4 x float> zeroinitializer, float %628, i32 0
  %630 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %631 = getelementptr inbounds i8, i8* %630, i64 4
  %632 = bitcast i8* %631 to float*
  %633 = load float, float* %632, align 4
  %634 = insertelement <4 x float> %629, float %633, i32 1
  %635 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %636 = getelementptr inbounds i8, i8* %635, i64 8
  %637 = bitcast i8* %636 to float*
  %638 = load float, float* %637, align 4
  %639 = insertelement <4 x float> %634, float %638, i32 2
  %640 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %641 = getelementptr inbounds i8, i8* %640, i64 12
  %642 = bitcast i8* %641 to float*
  %643 = load float, float* %642, align 4
  %644 = insertelement <4 x float> %639, float %643, i32 3
  %645 = fmul <4 x float> %625, %644
  %646 = fsub <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, %645
  %647 = extractelement <4 x float> %646, i32 0
  %648 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %649 = getelementptr inbounds i8, i8* %648, i64 32
  %650 = bitcast i8* %649 to float*
  store float %647, float* %650, align 4
  %651 = extractelement <4 x float> %646, i32 1
  %652 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %653 = getelementptr inbounds i8, i8* %652, i64 36
  %654 = bitcast i8* %653 to float*
  store float %651, float* %654, align 4
  %655 = extractelement <4 x float> %646, i32 2
  %656 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %657 = getelementptr inbounds i8, i8* %656, i64 40
  %658 = bitcast i8* %657 to float*
  store float %655, float* %658, align 4
  %659 = extractelement <4 x float> %646, i32 3
  %660 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %661 = getelementptr inbounds i8, i8* %660, i64 44
  %662 = bitcast i8* %661 to float*
  store float %659, float* %662, align 4
  %663 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %664 = getelementptr inbounds i8, i8* %663, i64 12
  %665 = bitcast i8* %664 to float*
  %666 = load float, float* %665, align 4
  %667 = insertelement <4 x float> zeroinitializer, float %666, i32 0
  %668 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %669 = getelementptr inbounds i8, i8* %668, i64 12
  %670 = bitcast i8* %669 to float*
  %671 = load float, float* %670, align 4
  %672 = insertelement <4 x float> %667, float %671, i32 1
  %673 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %674 = getelementptr inbounds i8, i8* %673, i64 12
  %675 = bitcast i8* %674 to float*
  %676 = load float, float* %675, align 4
  %677 = insertelement <4 x float> %672, float %676, i32 2
  %678 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %679 = getelementptr inbounds i8, i8* %678, i64 12
  %680 = bitcast i8* %679 to float*
  %681 = load float, float* %680, align 4
  %682 = insertelement <4 x float> %677, float %681, i32 3
  %683 = fmul <4 x float> %682, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %684 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %685 = bitcast i8* %684 to float*
  %686 = load float, float* %685, align 4
  %687 = insertelement <4 x float> zeroinitializer, float %686, i32 0
  %688 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %689 = getelementptr inbounds i8, i8* %688, i64 4
  %690 = bitcast i8* %689 to float*
  %691 = load float, float* %690, align 4
  %692 = insertelement <4 x float> %687, float %691, i32 1
  %693 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %694 = getelementptr inbounds i8, i8* %693, i64 8
  %695 = bitcast i8* %694 to float*
  %696 = load float, float* %695, align 4
  %697 = insertelement <4 x float> %692, float %696, i32 2
  %698 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %699 = getelementptr inbounds i8, i8* %698, i64 12
  %700 = bitcast i8* %699 to float*
  %701 = load float, float* %700, align 4
  %702 = insertelement <4 x float> %697, float %701, i32 3
  %703 = fmul <4 x float> %683, %702
  %704 = fsub <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, %703
  %705 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %706 = bitcast i8* %705 to i32*
  %707 = load i32, i32* %706, align 4
  %708 = sitofp i32 %707 to float
  %709 = insertelement <4 x float> zeroinitializer, float %708, i32 0
  %710 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %711 = getelementptr inbounds i8, i8* %710, i64 4
  %712 = bitcast i8* %711 to i32*
  %713 = load i32, i32* %712, align 4
  %714 = sitofp i32 %713 to float
  %715 = insertelement <4 x float> %709, float %714, i32 1
  %716 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %717 = getelementptr inbounds i8, i8* %716, i64 8
  %718 = bitcast i8* %717 to i32*
  %719 = load i32, i32* %718, align 4
  %720 = sitofp i32 %719 to float
  %721 = insertelement <4 x float> %715, float %720, i32 2
  %722 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %723 = getelementptr inbounds i8, i8* %722, i64 12
  %724 = bitcast i8* %723 to i32*
  %725 = load i32, i32* %724, align 4
  %726 = sitofp i32 %725 to float
  %727 = insertelement <4 x float> %721, float %726, i32 3
  %728 = shufflevector <4 x float> %704, <4 x float> %727, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %729 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %730 = getelementptr inbounds i8, i8* %729, i64 16
  %731 = bitcast i8* %730 to i32*
  %732 = load i32, i32* %731, align 4
  %733 = sitofp i32 %732 to float
  %734 = insertelement <4 x float> zeroinitializer, float %733, i32 0
  %735 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %736 = getelementptr inbounds i8, i8* %735, i64 20
  %737 = bitcast i8* %736 to i32*
  %738 = load i32, i32* %737, align 4
  %739 = sitofp i32 %738 to float
  %740 = insertelement <4 x float> %734, float %739, i32 1
  %741 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %742 = getelementptr inbounds i8, i8* %741, i64 24
  %743 = bitcast i8* %742 to i32*
  %744 = load i32, i32* %743, align 4
  %745 = sitofp i32 %744 to float
  %746 = insertelement <4 x float> %740, float %745, i32 2
  %747 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %748 = getelementptr inbounds i8, i8* %747, i64 28
  %749 = bitcast i8* %748 to i32*
  %750 = load i32, i32* %749, align 4
  %751 = sitofp i32 %750 to float
  %752 = insertelement <4 x float> %746, float %751, i32 3
  %753 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %754 = getelementptr inbounds i8, i8* %753, i64 32
  %755 = bitcast i8* %754 to i32*
  %756 = load i32, i32* %755, align 4
  %757 = sitofp i32 %756 to float
  %758 = insertelement <4 x float> zeroinitializer, float %757, i32 0
  %759 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %760 = getelementptr inbounds i8, i8* %759, i64 36
  %761 = bitcast i8* %760 to i32*
  %762 = load i32, i32* %761, align 4
  %763 = sitofp i32 %762 to float
  %764 = insertelement <4 x float> %758, float %763, i32 1
  %765 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %766 = getelementptr inbounds i8, i8* %765, i64 40
  %767 = bitcast i8* %766 to i32*
  %768 = load i32, i32* %767, align 4
  %769 = sitofp i32 %768 to float
  %770 = insertelement <4 x float> %764, float %769, i32 2
  %771 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %772 = getelementptr inbounds i8, i8* %771, i64 44
  %773 = bitcast i8* %772 to i32*
  %774 = load i32, i32* %773, align 4
  %775 = sitofp i32 %774 to float
  %776 = insertelement <4 x float> %770, float %775, i32 3
  %777 = shufflevector <4 x float> %752, <4 x float> %776, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %778 = shufflevector <8 x float> %728, <8 x float> %777, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %779 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %780 = getelementptr inbounds i8, i8* %779, i64 48
  %781 = bitcast i8* %780 to i32*
  %782 = load i32, i32* %781, align 4
  %783 = sitofp i32 %782 to float
  %784 = insertelement <4 x float> zeroinitializer, float %783, i32 0
  %785 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %786 = getelementptr inbounds i8, i8* %785, i64 52
  %787 = bitcast i8* %786 to i32*
  %788 = load i32, i32* %787, align 4
  %789 = sitofp i32 %788 to float
  %790 = insertelement <4 x float> %784, float %789, i32 1
  %791 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %792 = getelementptr inbounds i8, i8* %791, i64 56
  %793 = bitcast i8* %792 to i32*
  %794 = load i32, i32* %793, align 4
  %795 = sitofp i32 %794 to float
  %796 = insertelement <4 x float> %790, float %795, i32 2
  %797 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %798 = getelementptr inbounds i8, i8* %797, i64 60
  %799 = bitcast i8* %798 to i32*
  %800 = load i32, i32* %799, align 4
  %801 = sitofp i32 %800 to float
  %802 = insertelement <4 x float> %796, float %801, i32 3
  %803 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %804 = bitcast i8* %803 to float*
  %805 = load float, float* %804, align 4
  %806 = insertelement <4 x float> zeroinitializer, float %805, i32 1
  %807 = insertelement <4 x float> %806, float 0.000000e+00, i32 2
  %808 = insertelement <4 x float> %807, float 0.000000e+00, i32 3
  %809 = load float, float* %0, align 4
  %810 = insertelement <4 x float> zeroinitializer, float %809, i32 1
  %811 = insertelement <4 x float> %810, float 0.000000e+00, i32 2
  %812 = insertelement <4 x float> %811, float 0.000000e+00, i32 3
  %813 = call <4 x float> @llvm.fma.v4f32(<4 x float> %808, <4 x float> %812, <4 x float> zeroinitializer)
  %814 = shufflevector <4 x float> %802, <4 x float> %813, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %815 = shufflevector <8 x float> %814, <8 x float> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %816 = shufflevector <16 x float> %778, <16 x float> %815, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %817 = extractelement <32 x float> %816, i32 0
  %818 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %819 = getelementptr inbounds i8, i8* %818, i64 48
  %820 = bitcast i8* %819 to float*
  store float %817, float* %820, align 4
  %821 = extractelement <32 x float> %816, i32 1
  %822 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %823 = getelementptr inbounds i8, i8* %822, i64 52
  %824 = bitcast i8* %823 to float*
  store float %821, float* %824, align 4
  %825 = extractelement <32 x float> %816, i32 2
  %826 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %827 = getelementptr inbounds i8, i8* %826, i64 56
  %828 = bitcast i8* %827 to float*
  store float %825, float* %828, align 4
  %829 = extractelement <32 x float> %816, i32 3
  %830 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %831 = getelementptr inbounds i8, i8* %830, i64 60
  %832 = bitcast i8* %831 to float*
  store float %829, float* %832, align 4
  %833 = extractelement <32 x float> %816, i32 4
  %834 = fptosi float %833 to i32
  %835 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %836 = bitcast i8* %835 to i32*
  store i32 %834, i32* %836, align 4
  %837 = extractelement <32 x float> %816, i32 5
  %838 = fptosi float %837 to i32
  %839 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %840 = getelementptr inbounds i8, i8* %839, i64 4
  %841 = bitcast i8* %840 to i32*
  store i32 %838, i32* %841, align 4
  %842 = extractelement <32 x float> %816, i32 6
  %843 = fptosi float %842 to i32
  %844 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %845 = getelementptr inbounds i8, i8* %844, i64 8
  %846 = bitcast i8* %845 to i32*
  store i32 %843, i32* %846, align 4
  %847 = extractelement <32 x float> %816, i32 7
  %848 = fptosi float %847 to i32
  %849 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %850 = getelementptr inbounds i8, i8* %849, i64 12
  %851 = bitcast i8* %850 to i32*
  store i32 %848, i32* %851, align 4
  %852 = extractelement <32 x float> %816, i32 8
  %853 = fptosi float %852 to i32
  %854 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %855 = getelementptr inbounds i8, i8* %854, i64 16
  %856 = bitcast i8* %855 to i32*
  store i32 %853, i32* %856, align 4
  %857 = extractelement <32 x float> %816, i32 9
  %858 = fptosi float %857 to i32
  %859 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %860 = getelementptr inbounds i8, i8* %859, i64 20
  %861 = bitcast i8* %860 to i32*
  store i32 %858, i32* %861, align 4
  %862 = extractelement <32 x float> %816, i32 10
  %863 = fptosi float %862 to i32
  %864 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %865 = getelementptr inbounds i8, i8* %864, i64 24
  %866 = bitcast i8* %865 to i32*
  store i32 %863, i32* %866, align 4
  %867 = extractelement <32 x float> %816, i32 11
  %868 = fptosi float %867 to i32
  %869 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %870 = getelementptr inbounds i8, i8* %869, i64 28
  %871 = bitcast i8* %870 to i32*
  store i32 %868, i32* %871, align 4
  %872 = extractelement <32 x float> %816, i32 12
  %873 = fptosi float %872 to i32
  %874 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %875 = getelementptr inbounds i8, i8* %874, i64 32
  %876 = bitcast i8* %875 to i32*
  store i32 %873, i32* %876, align 4
  %877 = extractelement <32 x float> %816, i32 13
  %878 = fptosi float %877 to i32
  %879 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %880 = getelementptr inbounds i8, i8* %879, i64 36
  %881 = bitcast i8* %880 to i32*
  store i32 %878, i32* %881, align 4
  %882 = extractelement <32 x float> %816, i32 14
  %883 = fptosi float %882 to i32
  %884 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %885 = getelementptr inbounds i8, i8* %884, i64 40
  %886 = bitcast i8* %885 to i32*
  store i32 %883, i32* %886, align 4
  %887 = extractelement <32 x float> %816, i32 15
  %888 = fptosi float %887 to i32
  %889 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %890 = getelementptr inbounds i8, i8* %889, i64 44
  %891 = bitcast i8* %890 to i32*
  store i32 %888, i32* %891, align 4
  %892 = extractelement <32 x float> %816, i32 16
  %893 = fptosi float %892 to i32
  %894 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %895 = getelementptr inbounds i8, i8* %894, i64 48
  %896 = bitcast i8* %895 to i32*
  store i32 %893, i32* %896, align 4
  %897 = extractelement <32 x float> %816, i32 17
  %898 = fptosi float %897 to i32
  %899 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %900 = getelementptr inbounds i8, i8* %899, i64 52
  %901 = bitcast i8* %900 to i32*
  store i32 %898, i32* %901, align 4
  %902 = extractelement <32 x float> %816, i32 18
  %903 = fptosi float %902 to i32
  %904 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %905 = getelementptr inbounds i8, i8* %904, i64 56
  %906 = bitcast i8* %905 to i32*
  store i32 %903, i32* %906, align 4
  %907 = extractelement <32 x float> %816, i32 19
  %908 = fptosi float %907 to i32
  %909 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %910 = getelementptr inbounds i8, i8* %909, i64 60
  %911 = bitcast i8* %910 to i32*
  store i32 %908, i32* %911, align 4
  %912 = extractelement <32 x float> %816, i32 20
  store float %912, float* %2, align 4
  %913 = extractelement <32 x float> %816, i32 21
  store float %913, float* %2, align 4
  %914 = load float, float* %2, align 4
  %915 = insertelement <4 x float> zeroinitializer, float %914, i32 0
  %916 = insertelement <4 x float> %915, float 0.000000e+00, i32 1
  %917 = insertelement <4 x float> %916, float 0.000000e+00, i32 2
  %918 = insertelement <4 x float> %917, float 0.000000e+00, i32 3
  %919 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %920 = getelementptr inbounds i8, i8* %919, i64 4
  %921 = bitcast i8* %920 to float*
  %922 = load float, float* %921, align 4
  %923 = insertelement <4 x float> zeroinitializer, float %922, i32 0
  %924 = insertelement <4 x float> %923, float 0.000000e+00, i32 1
  %925 = insertelement <4 x float> %924, float 0.000000e+00, i32 2
  %926 = insertelement <4 x float> %925, float 0.000000e+00, i32 3
  %927 = getelementptr inbounds float, float* %0, i64 4
  %928 = load float, float* %927, align 4
  %929 = insertelement <4 x float> zeroinitializer, float %928, i32 0
  %930 = insertelement <4 x float> %929, float 0.000000e+00, i32 1
  %931 = insertelement <4 x float> %930, float 0.000000e+00, i32 2
  %932 = insertelement <4 x float> %931, float 0.000000e+00, i32 3
  %933 = call <4 x float> @llvm.fma.v4f32(<4 x float> %926, <4 x float> %932, <4 x float> %918)
  %934 = extractelement <4 x float> %933, i32 0
  store float %934, float* %2, align 4
  %935 = load float, float* %2, align 4
  %936 = insertelement <4 x float> zeroinitializer, float %935, i32 0
  %937 = insertelement <4 x float> %936, float 0.000000e+00, i32 1
  %938 = insertelement <4 x float> %937, float 0.000000e+00, i32 2
  %939 = insertelement <4 x float> %938, float 0.000000e+00, i32 3
  %940 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %941 = getelementptr inbounds i8, i8* %940, i64 8
  %942 = bitcast i8* %941 to float*
  %943 = load float, float* %942, align 4
  %944 = insertelement <4 x float> zeroinitializer, float %943, i32 0
  %945 = insertelement <4 x float> %944, float 0.000000e+00, i32 1
  %946 = insertelement <4 x float> %945, float 0.000000e+00, i32 2
  %947 = insertelement <4 x float> %946, float 0.000000e+00, i32 3
  %948 = getelementptr inbounds float, float* %0, i64 8
  %949 = load float, float* %948, align 4
  %950 = insertelement <4 x float> zeroinitializer, float %949, i32 0
  %951 = insertelement <4 x float> %950, float 0.000000e+00, i32 1
  %952 = insertelement <4 x float> %951, float 0.000000e+00, i32 2
  %953 = insertelement <4 x float> %952, float 0.000000e+00, i32 3
  %954 = call <4 x float> @llvm.fma.v4f32(<4 x float> %947, <4 x float> %953, <4 x float> %939)
  %955 = extractelement <4 x float> %954, i32 0
  store float %955, float* %2, align 4
  %956 = load float, float* %2, align 4
  %957 = insertelement <4 x float> zeroinitializer, float %956, i32 0
  %958 = insertelement <4 x float> %957, float 0.000000e+00, i32 1
  %959 = insertelement <4 x float> %958, float 0.000000e+00, i32 2
  %960 = insertelement <4 x float> %959, float 0.000000e+00, i32 3
  %961 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %962 = getelementptr inbounds i8, i8* %961, i64 12
  %963 = bitcast i8* %962 to float*
  %964 = load float, float* %963, align 4
  %965 = insertelement <4 x float> zeroinitializer, float %964, i32 0
  %966 = insertelement <4 x float> %965, float 0.000000e+00, i32 1
  %967 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %968 = bitcast i8* %967 to float*
  %969 = load float, float* %968, align 4
  %970 = insertelement <4 x float> %966, float %969, i32 2
  %971 = insertelement <4 x float> %970, float 0.000000e+00, i32 3
  %972 = getelementptr inbounds float, float* %0, i64 12
  %973 = load float, float* %972, align 4
  %974 = insertelement <4 x float> zeroinitializer, float %973, i32 0
  %975 = insertelement <4 x float> %974, float 0.000000e+00, i32 1
  %976 = getelementptr inbounds float, float* %0, i64 1
  %977 = load float, float* %976, align 4
  %978 = insertelement <4 x float> %975, float %977, i32 2
  %979 = insertelement <4 x float> %978, float 0.000000e+00, i32 3
  %980 = call <4 x float> @llvm.fma.v4f32(<4 x float> %971, <4 x float> %979, <4 x float> %960)
  %981 = extractelement <4 x float> %980, i32 0
  store float %981, float* %2, align 4
  %982 = extractelement <4 x float> %980, i32 1
  %983 = getelementptr inbounds float, float* %2, i64 1
  store float %982, float* %983, align 4
  %984 = extractelement <4 x float> %980, i32 2
  %985 = getelementptr inbounds float, float* %2, i64 1
  store float %984, float* %985, align 4
  %986 = getelementptr inbounds float, float* %2, i64 1
  %987 = load float, float* %986, align 4
  %988 = insertelement <4 x float> zeroinitializer, float %987, i32 0
  %989 = insertelement <4 x float> %988, float 0.000000e+00, i32 1
  %990 = insertelement <4 x float> %989, float 0.000000e+00, i32 2
  %991 = insertelement <4 x float> %990, float 0.000000e+00, i32 3
  %992 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %993 = getelementptr inbounds i8, i8* %992, i64 4
  %994 = bitcast i8* %993 to float*
  %995 = load float, float* %994, align 4
  %996 = insertelement <4 x float> zeroinitializer, float %995, i32 0
  %997 = insertelement <4 x float> %996, float 0.000000e+00, i32 1
  %998 = insertelement <4 x float> %997, float 0.000000e+00, i32 2
  %999 = insertelement <4 x float> %998, float 0.000000e+00, i32 3
  %1000 = getelementptr inbounds float, float* %0, i64 5
  %1001 = load float, float* %1000, align 4
  %1002 = insertelement <4 x float> zeroinitializer, float %1001, i32 0
  %1003 = insertelement <4 x float> %1002, float 0.000000e+00, i32 1
  %1004 = insertelement <4 x float> %1003, float 0.000000e+00, i32 2
  %1005 = insertelement <4 x float> %1004, float 0.000000e+00, i32 3
  %1006 = call <4 x float> @llvm.fma.v4f32(<4 x float> %999, <4 x float> %1005, <4 x float> %991)
  %1007 = extractelement <4 x float> %1006, i32 0
  %1008 = getelementptr inbounds float, float* %2, i64 1
  store float %1007, float* %1008, align 4
  %1009 = getelementptr inbounds float, float* %2, i64 1
  %1010 = load float, float* %1009, align 4
  %1011 = insertelement <4 x float> zeroinitializer, float %1010, i32 0
  %1012 = insertelement <4 x float> %1011, float 0.000000e+00, i32 1
  %1013 = insertelement <4 x float> %1012, float 0.000000e+00, i32 2
  %1014 = insertelement <4 x float> %1013, float 0.000000e+00, i32 3
  %1015 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1016 = getelementptr inbounds i8, i8* %1015, i64 8
  %1017 = bitcast i8* %1016 to float*
  %1018 = load float, float* %1017, align 4
  %1019 = insertelement <4 x float> zeroinitializer, float %1018, i32 0
  %1020 = insertelement <4 x float> %1019, float 0.000000e+00, i32 1
  %1021 = insertelement <4 x float> %1020, float 0.000000e+00, i32 2
  %1022 = insertelement <4 x float> %1021, float 0.000000e+00, i32 3
  %1023 = getelementptr inbounds float, float* %0, i64 9
  %1024 = load float, float* %1023, align 4
  %1025 = insertelement <4 x float> zeroinitializer, float %1024, i32 0
  %1026 = insertelement <4 x float> %1025, float 0.000000e+00, i32 1
  %1027 = insertelement <4 x float> %1026, float 0.000000e+00, i32 2
  %1028 = insertelement <4 x float> %1027, float 0.000000e+00, i32 3
  %1029 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1022, <4 x float> %1028, <4 x float> %1014)
  %1030 = extractelement <4 x float> %1029, i32 0
  %1031 = getelementptr inbounds float, float* %2, i64 1
  store float %1030, float* %1031, align 4
  %1032 = getelementptr inbounds float, float* %2, i64 1
  %1033 = load float, float* %1032, align 4
  %1034 = insertelement <4 x float> zeroinitializer, float %1033, i32 0
  %1035 = insertelement <4 x float> %1034, float 0.000000e+00, i32 1
  %1036 = insertelement <4 x float> %1035, float 0.000000e+00, i32 2
  %1037 = insertelement <4 x float> %1036, float 0.000000e+00, i32 3
  %1038 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1039 = getelementptr inbounds i8, i8* %1038, i64 12
  %1040 = bitcast i8* %1039 to float*
  %1041 = load float, float* %1040, align 4
  %1042 = insertelement <4 x float> zeroinitializer, float %1041, i32 0
  %1043 = insertelement <4 x float> %1042, float 0.000000e+00, i32 1
  %1044 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1045 = bitcast i8* %1044 to float*
  %1046 = load float, float* %1045, align 4
  %1047 = insertelement <4 x float> %1043, float %1046, i32 2
  %1048 = insertelement <4 x float> %1047, float 0.000000e+00, i32 3
  %1049 = getelementptr inbounds float, float* %0, i64 13
  %1050 = load float, float* %1049, align 4
  %1051 = insertelement <4 x float> zeroinitializer, float %1050, i32 0
  %1052 = insertelement <4 x float> %1051, float 0.000000e+00, i32 1
  %1053 = getelementptr inbounds float, float* %0, i64 2
  %1054 = load float, float* %1053, align 4
  %1055 = insertelement <4 x float> %1052, float %1054, i32 2
  %1056 = insertelement <4 x float> %1055, float 0.000000e+00, i32 3
  %1057 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1048, <4 x float> %1056, <4 x float> %1037)
  %1058 = extractelement <4 x float> %1057, i32 0
  %1059 = getelementptr inbounds float, float* %2, i64 1
  store float %1058, float* %1059, align 4
  %1060 = extractelement <4 x float> %1057, i32 1
  %1061 = getelementptr inbounds float, float* %2, i64 2
  store float %1060, float* %1061, align 4
  %1062 = extractelement <4 x float> %1057, i32 2
  %1063 = getelementptr inbounds float, float* %2, i64 2
  store float %1062, float* %1063, align 4
  %1064 = getelementptr inbounds float, float* %2, i64 2
  %1065 = load float, float* %1064, align 4
  %1066 = insertelement <4 x float> zeroinitializer, float %1065, i32 0
  %1067 = insertelement <4 x float> %1066, float 0.000000e+00, i32 1
  %1068 = insertelement <4 x float> %1067, float 0.000000e+00, i32 2
  %1069 = insertelement <4 x float> %1068, float 0.000000e+00, i32 3
  %1070 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1071 = getelementptr inbounds i8, i8* %1070, i64 4
  %1072 = bitcast i8* %1071 to float*
  %1073 = load float, float* %1072, align 4
  %1074 = insertelement <4 x float> zeroinitializer, float %1073, i32 0
  %1075 = insertelement <4 x float> %1074, float 0.000000e+00, i32 1
  %1076 = insertelement <4 x float> %1075, float 0.000000e+00, i32 2
  %1077 = insertelement <4 x float> %1076, float 0.000000e+00, i32 3
  %1078 = getelementptr inbounds float, float* %0, i64 6
  %1079 = load float, float* %1078, align 4
  %1080 = insertelement <4 x float> zeroinitializer, float %1079, i32 0
  %1081 = insertelement <4 x float> %1080, float 0.000000e+00, i32 1
  %1082 = insertelement <4 x float> %1081, float 0.000000e+00, i32 2
  %1083 = insertelement <4 x float> %1082, float 0.000000e+00, i32 3
  %1084 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1077, <4 x float> %1083, <4 x float> %1069)
  %1085 = extractelement <4 x float> %1084, i32 0
  %1086 = getelementptr inbounds float, float* %2, i64 2
  store float %1085, float* %1086, align 4
  %1087 = getelementptr inbounds float, float* %2, i64 2
  %1088 = load float, float* %1087, align 4
  %1089 = insertelement <4 x float> zeroinitializer, float %1088, i32 0
  %1090 = insertelement <4 x float> %1089, float 0.000000e+00, i32 1
  %1091 = insertelement <4 x float> %1090, float 0.000000e+00, i32 2
  %1092 = insertelement <4 x float> %1091, float 0.000000e+00, i32 3
  %1093 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1094 = getelementptr inbounds i8, i8* %1093, i64 8
  %1095 = bitcast i8* %1094 to float*
  %1096 = load float, float* %1095, align 4
  %1097 = insertelement <4 x float> zeroinitializer, float %1096, i32 0
  %1098 = insertelement <4 x float> %1097, float 0.000000e+00, i32 1
  %1099 = insertelement <4 x float> %1098, float 0.000000e+00, i32 2
  %1100 = insertelement <4 x float> %1099, float 0.000000e+00, i32 3
  %1101 = getelementptr inbounds float, float* %0, i64 10
  %1102 = load float, float* %1101, align 4
  %1103 = insertelement <4 x float> zeroinitializer, float %1102, i32 0
  %1104 = insertelement <4 x float> %1103, float 0.000000e+00, i32 1
  %1105 = insertelement <4 x float> %1104, float 0.000000e+00, i32 2
  %1106 = insertelement <4 x float> %1105, float 0.000000e+00, i32 3
  %1107 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1100, <4 x float> %1106, <4 x float> %1092)
  %1108 = extractelement <4 x float> %1107, i32 0
  %1109 = getelementptr inbounds float, float* %2, i64 2
  store float %1108, float* %1109, align 4
  %1110 = getelementptr inbounds float, float* %2, i64 2
  %1111 = load float, float* %1110, align 4
  %1112 = insertelement <4 x float> zeroinitializer, float %1111, i32 0
  %1113 = insertelement <4 x float> %1112, float 0.000000e+00, i32 1
  %1114 = insertelement <4 x float> %1113, float 0.000000e+00, i32 2
  %1115 = insertelement <4 x float> %1114, float 0.000000e+00, i32 3
  %1116 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1117 = getelementptr inbounds i8, i8* %1116, i64 12
  %1118 = bitcast i8* %1117 to float*
  %1119 = load float, float* %1118, align 4
  %1120 = insertelement <4 x float> zeroinitializer, float %1119, i32 0
  %1121 = insertelement <4 x float> %1120, float 0.000000e+00, i32 1
  %1122 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1123 = bitcast i8* %1122 to float*
  %1124 = load float, float* %1123, align 4
  %1125 = insertelement <4 x float> %1121, float %1124, i32 2
  %1126 = insertelement <4 x float> %1125, float 0.000000e+00, i32 3
  %1127 = getelementptr inbounds float, float* %0, i64 14
  %1128 = load float, float* %1127, align 4
  %1129 = insertelement <4 x float> zeroinitializer, float %1128, i32 0
  %1130 = insertelement <4 x float> %1129, float 0.000000e+00, i32 1
  %1131 = getelementptr inbounds float, float* %0, i64 3
  %1132 = load float, float* %1131, align 4
  %1133 = insertelement <4 x float> %1130, float %1132, i32 2
  %1134 = insertelement <4 x float> %1133, float 0.000000e+00, i32 3
  %1135 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1126, <4 x float> %1134, <4 x float> %1115)
  %1136 = extractelement <4 x float> %1135, i32 0
  %1137 = getelementptr inbounds float, float* %2, i64 2
  store float %1136, float* %1137, align 4
  %1138 = extractelement <4 x float> %1135, i32 1
  %1139 = getelementptr inbounds float, float* %2, i64 3
  store float %1138, float* %1139, align 4
  %1140 = extractelement <4 x float> %1135, i32 2
  %1141 = getelementptr inbounds float, float* %2, i64 3
  store float %1140, float* %1141, align 4
  %1142 = getelementptr inbounds float, float* %2, i64 3
  %1143 = load float, float* %1142, align 4
  %1144 = insertelement <4 x float> zeroinitializer, float %1143, i32 0
  %1145 = insertelement <4 x float> %1144, float 0.000000e+00, i32 1
  %1146 = insertelement <4 x float> %1145, float 0.000000e+00, i32 2
  %1147 = insertelement <4 x float> %1146, float 0.000000e+00, i32 3
  %1148 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1149 = getelementptr inbounds i8, i8* %1148, i64 4
  %1150 = bitcast i8* %1149 to float*
  %1151 = load float, float* %1150, align 4
  %1152 = insertelement <4 x float> zeroinitializer, float %1151, i32 0
  %1153 = insertelement <4 x float> %1152, float 0.000000e+00, i32 1
  %1154 = insertelement <4 x float> %1153, float 0.000000e+00, i32 2
  %1155 = insertelement <4 x float> %1154, float 0.000000e+00, i32 3
  %1156 = getelementptr inbounds float, float* %0, i64 7
  %1157 = load float, float* %1156, align 4
  %1158 = insertelement <4 x float> zeroinitializer, float %1157, i32 0
  %1159 = insertelement <4 x float> %1158, float 0.000000e+00, i32 1
  %1160 = insertelement <4 x float> %1159, float 0.000000e+00, i32 2
  %1161 = insertelement <4 x float> %1160, float 0.000000e+00, i32 3
  %1162 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1155, <4 x float> %1161, <4 x float> %1147)
  %1163 = extractelement <4 x float> %1162, i32 0
  %1164 = getelementptr inbounds float, float* %2, i64 3
  store float %1163, float* %1164, align 4
  %1165 = getelementptr inbounds float, float* %2, i64 3
  %1166 = load float, float* %1165, align 4
  %1167 = insertelement <4 x float> zeroinitializer, float %1166, i32 0
  %1168 = insertelement <4 x float> %1167, float 0.000000e+00, i32 1
  %1169 = insertelement <4 x float> %1168, float 0.000000e+00, i32 2
  %1170 = insertelement <4 x float> %1169, float 0.000000e+00, i32 3
  %1171 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1172 = getelementptr inbounds i8, i8* %1171, i64 8
  %1173 = bitcast i8* %1172 to float*
  %1174 = load float, float* %1173, align 4
  %1175 = insertelement <4 x float> zeroinitializer, float %1174, i32 0
  %1176 = insertelement <4 x float> %1175, float 0.000000e+00, i32 1
  %1177 = insertelement <4 x float> %1176, float 0.000000e+00, i32 2
  %1178 = insertelement <4 x float> %1177, float 0.000000e+00, i32 3
  %1179 = getelementptr inbounds float, float* %0, i64 11
  %1180 = load float, float* %1179, align 4
  %1181 = insertelement <4 x float> zeroinitializer, float %1180, i32 0
  %1182 = insertelement <4 x float> %1181, float 0.000000e+00, i32 1
  %1183 = insertelement <4 x float> %1182, float 0.000000e+00, i32 2
  %1184 = insertelement <4 x float> %1183, float 0.000000e+00, i32 3
  %1185 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1178, <4 x float> %1184, <4 x float> %1170)
  %1186 = extractelement <4 x float> %1185, i32 0
  %1187 = getelementptr inbounds float, float* %2, i64 3
  store float %1186, float* %1187, align 4
  %1188 = getelementptr inbounds float, float* %2, i64 3
  %1189 = load float, float* %1188, align 4
  %1190 = insertelement <4 x float> zeroinitializer, float %1189, i32 0
  %1191 = insertelement <4 x float> %1190, float 0.000000e+00, i32 1
  %1192 = insertelement <4 x float> %1191, float 0.000000e+00, i32 2
  %1193 = insertelement <4 x float> %1192, float 0.000000e+00, i32 3
  %1194 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1195 = getelementptr inbounds i8, i8* %1194, i64 12
  %1196 = bitcast i8* %1195 to float*
  %1197 = load float, float* %1196, align 4
  %1198 = insertelement <4 x float> zeroinitializer, float %1197, i32 0
  %1199 = insertelement <4 x float> %1198, float 0.000000e+00, i32 1
  %1200 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1201 = getelementptr inbounds i8, i8* %1200, i64 16
  %1202 = bitcast i8* %1201 to float*
  %1203 = load float, float* %1202, align 4
  %1204 = insertelement <4 x float> %1199, float %1203, i32 2
  %1205 = insertelement <4 x float> %1204, float 0.000000e+00, i32 3
  %1206 = getelementptr inbounds float, float* %0, i64 15
  %1207 = load float, float* %1206, align 4
  %1208 = insertelement <4 x float> zeroinitializer, float %1207, i32 0
  %1209 = insertelement <4 x float> %1208, float 0.000000e+00, i32 1
  %1210 = load float, float* %0, align 4
  %1211 = insertelement <4 x float> %1209, float %1210, i32 2
  %1212 = insertelement <4 x float> %1211, float 0.000000e+00, i32 3
  %1213 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1205, <4 x float> %1212, <4 x float> %1193)
  %1214 = extractelement <4 x float> %1213, i32 0
  %1215 = getelementptr inbounds float, float* %2, i64 3
  store float %1214, float* %1215, align 4
  %1216 = extractelement <4 x float> %1213, i32 1
  %1217 = getelementptr inbounds float, float* %2, i64 4
  store float %1216, float* %1217, align 4
  %1218 = extractelement <4 x float> %1213, i32 2
  %1219 = getelementptr inbounds float, float* %2, i64 4
  store float %1218, float* %1219, align 4
  %1220 = getelementptr inbounds float, float* %2, i64 4
  %1221 = load float, float* %1220, align 4
  %1222 = insertelement <4 x float> zeroinitializer, float %1221, i32 0
  %1223 = insertelement <4 x float> %1222, float 0.000000e+00, i32 1
  %1224 = insertelement <4 x float> %1223, float 0.000000e+00, i32 2
  %1225 = insertelement <4 x float> %1224, float 0.000000e+00, i32 3
  %1226 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1227 = getelementptr inbounds i8, i8* %1226, i64 20
  %1228 = bitcast i8* %1227 to float*
  %1229 = load float, float* %1228, align 4
  %1230 = insertelement <4 x float> zeroinitializer, float %1229, i32 0
  %1231 = insertelement <4 x float> %1230, float 0.000000e+00, i32 1
  %1232 = insertelement <4 x float> %1231, float 0.000000e+00, i32 2
  %1233 = insertelement <4 x float> %1232, float 0.000000e+00, i32 3
  %1234 = getelementptr inbounds float, float* %0, i64 4
  %1235 = load float, float* %1234, align 4
  %1236 = insertelement <4 x float> zeroinitializer, float %1235, i32 0
  %1237 = insertelement <4 x float> %1236, float 0.000000e+00, i32 1
  %1238 = insertelement <4 x float> %1237, float 0.000000e+00, i32 2
  %1239 = insertelement <4 x float> %1238, float 0.000000e+00, i32 3
  %1240 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1233, <4 x float> %1239, <4 x float> %1225)
  %1241 = extractelement <4 x float> %1240, i32 0
  %1242 = getelementptr inbounds float, float* %2, i64 4
  store float %1241, float* %1242, align 4
  %1243 = getelementptr inbounds float, float* %2, i64 4
  %1244 = load float, float* %1243, align 4
  %1245 = insertelement <4 x float> zeroinitializer, float %1244, i32 0
  %1246 = insertelement <4 x float> %1245, float 0.000000e+00, i32 1
  %1247 = insertelement <4 x float> %1246, float 0.000000e+00, i32 2
  %1248 = insertelement <4 x float> %1247, float 0.000000e+00, i32 3
  %1249 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1250 = getelementptr inbounds i8, i8* %1249, i64 24
  %1251 = bitcast i8* %1250 to float*
  %1252 = load float, float* %1251, align 4
  %1253 = insertelement <4 x float> zeroinitializer, float %1252, i32 0
  %1254 = insertelement <4 x float> %1253, float 0.000000e+00, i32 1
  %1255 = insertelement <4 x float> %1254, float 0.000000e+00, i32 2
  %1256 = insertelement <4 x float> %1255, float 0.000000e+00, i32 3
  %1257 = getelementptr inbounds float, float* %0, i64 8
  %1258 = load float, float* %1257, align 4
  %1259 = insertelement <4 x float> zeroinitializer, float %1258, i32 0
  %1260 = insertelement <4 x float> %1259, float 0.000000e+00, i32 1
  %1261 = insertelement <4 x float> %1260, float 0.000000e+00, i32 2
  %1262 = insertelement <4 x float> %1261, float 0.000000e+00, i32 3
  %1263 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1256, <4 x float> %1262, <4 x float> %1248)
  %1264 = extractelement <4 x float> %1263, i32 0
  %1265 = getelementptr inbounds float, float* %2, i64 4
  store float %1264, float* %1265, align 4
  %1266 = getelementptr inbounds float, float* %2, i64 4
  %1267 = load float, float* %1266, align 4
  %1268 = insertelement <4 x float> zeroinitializer, float %1267, i32 0
  %1269 = insertelement <4 x float> %1268, float 0.000000e+00, i32 1
  %1270 = insertelement <4 x float> %1269, float 0.000000e+00, i32 2
  %1271 = insertelement <4 x float> %1270, float 0.000000e+00, i32 3
  %1272 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1273 = getelementptr inbounds i8, i8* %1272, i64 28
  %1274 = bitcast i8* %1273 to float*
  %1275 = load float, float* %1274, align 4
  %1276 = insertelement <4 x float> zeroinitializer, float %1275, i32 0
  %1277 = insertelement <4 x float> %1276, float 0.000000e+00, i32 1
  %1278 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1279 = getelementptr inbounds i8, i8* %1278, i64 16
  %1280 = bitcast i8* %1279 to float*
  %1281 = load float, float* %1280, align 4
  %1282 = insertelement <4 x float> %1277, float %1281, i32 2
  %1283 = insertelement <4 x float> %1282, float 0.000000e+00, i32 3
  %1284 = getelementptr inbounds float, float* %0, i64 12
  %1285 = load float, float* %1284, align 4
  %1286 = insertelement <4 x float> zeroinitializer, float %1285, i32 0
  %1287 = insertelement <4 x float> %1286, float 0.000000e+00, i32 1
  %1288 = getelementptr inbounds float, float* %0, i64 1
  %1289 = load float, float* %1288, align 4
  %1290 = insertelement <4 x float> %1287, float %1289, i32 2
  %1291 = insertelement <4 x float> %1290, float 0.000000e+00, i32 3
  %1292 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1283, <4 x float> %1291, <4 x float> %1271)
  %1293 = extractelement <4 x float> %1292, i32 0
  %1294 = getelementptr inbounds float, float* %2, i64 4
  store float %1293, float* %1294, align 4
  %1295 = extractelement <4 x float> %1292, i32 1
  %1296 = getelementptr inbounds float, float* %2, i64 5
  store float %1295, float* %1296, align 4
  %1297 = extractelement <4 x float> %1292, i32 2
  %1298 = getelementptr inbounds float, float* %2, i64 5
  store float %1297, float* %1298, align 4
  %1299 = getelementptr inbounds float, float* %2, i64 5
  %1300 = load float, float* %1299, align 4
  %1301 = insertelement <4 x float> zeroinitializer, float %1300, i32 0
  %1302 = insertelement <4 x float> %1301, float 0.000000e+00, i32 1
  %1303 = insertelement <4 x float> %1302, float 0.000000e+00, i32 2
  %1304 = insertelement <4 x float> %1303, float 0.000000e+00, i32 3
  %1305 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1306 = getelementptr inbounds i8, i8* %1305, i64 20
  %1307 = bitcast i8* %1306 to float*
  %1308 = load float, float* %1307, align 4
  %1309 = insertelement <4 x float> zeroinitializer, float %1308, i32 0
  %1310 = insertelement <4 x float> %1309, float 0.000000e+00, i32 1
  %1311 = insertelement <4 x float> %1310, float 0.000000e+00, i32 2
  %1312 = insertelement <4 x float> %1311, float 0.000000e+00, i32 3
  %1313 = getelementptr inbounds float, float* %0, i64 5
  %1314 = load float, float* %1313, align 4
  %1315 = insertelement <4 x float> zeroinitializer, float %1314, i32 0
  %1316 = insertelement <4 x float> %1315, float 0.000000e+00, i32 1
  %1317 = insertelement <4 x float> %1316, float 0.000000e+00, i32 2
  %1318 = insertelement <4 x float> %1317, float 0.000000e+00, i32 3
  %1319 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1312, <4 x float> %1318, <4 x float> %1304)
  %1320 = extractelement <4 x float> %1319, i32 0
  %1321 = getelementptr inbounds float, float* %2, i64 5
  store float %1320, float* %1321, align 4
  %1322 = getelementptr inbounds float, float* %2, i64 5
  %1323 = load float, float* %1322, align 4
  %1324 = insertelement <4 x float> zeroinitializer, float %1323, i32 0
  %1325 = insertelement <4 x float> %1324, float 0.000000e+00, i32 1
  %1326 = insertelement <4 x float> %1325, float 0.000000e+00, i32 2
  %1327 = insertelement <4 x float> %1326, float 0.000000e+00, i32 3
  %1328 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1329 = getelementptr inbounds i8, i8* %1328, i64 24
  %1330 = bitcast i8* %1329 to float*
  %1331 = load float, float* %1330, align 4
  %1332 = insertelement <4 x float> zeroinitializer, float %1331, i32 0
  %1333 = insertelement <4 x float> %1332, float 0.000000e+00, i32 1
  %1334 = insertelement <4 x float> %1333, float 0.000000e+00, i32 2
  %1335 = insertelement <4 x float> %1334, float 0.000000e+00, i32 3
  %1336 = getelementptr inbounds float, float* %0, i64 9
  %1337 = load float, float* %1336, align 4
  %1338 = insertelement <4 x float> zeroinitializer, float %1337, i32 0
  %1339 = insertelement <4 x float> %1338, float 0.000000e+00, i32 1
  %1340 = insertelement <4 x float> %1339, float 0.000000e+00, i32 2
  %1341 = insertelement <4 x float> %1340, float 0.000000e+00, i32 3
  %1342 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1335, <4 x float> %1341, <4 x float> %1327)
  %1343 = extractelement <4 x float> %1342, i32 0
  %1344 = getelementptr inbounds float, float* %2, i64 5
  store float %1343, float* %1344, align 4
  %1345 = getelementptr inbounds float, float* %2, i64 5
  %1346 = load float, float* %1345, align 4
  %1347 = insertelement <4 x float> zeroinitializer, float %1346, i32 0
  %1348 = insertelement <4 x float> %1347, float 0.000000e+00, i32 1
  %1349 = insertelement <4 x float> %1348, float 0.000000e+00, i32 2
  %1350 = insertelement <4 x float> %1349, float 0.000000e+00, i32 3
  %1351 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1352 = getelementptr inbounds i8, i8* %1351, i64 28
  %1353 = bitcast i8* %1352 to float*
  %1354 = load float, float* %1353, align 4
  %1355 = insertelement <4 x float> zeroinitializer, float %1354, i32 0
  %1356 = insertelement <4 x float> %1355, float 0.000000e+00, i32 1
  %1357 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1358 = getelementptr inbounds i8, i8* %1357, i64 16
  %1359 = bitcast i8* %1358 to float*
  %1360 = load float, float* %1359, align 4
  %1361 = insertelement <4 x float> %1356, float %1360, i32 2
  %1362 = insertelement <4 x float> %1361, float 0.000000e+00, i32 3
  %1363 = getelementptr inbounds float, float* %0, i64 13
  %1364 = load float, float* %1363, align 4
  %1365 = insertelement <4 x float> zeroinitializer, float %1364, i32 0
  %1366 = insertelement <4 x float> %1365, float 0.000000e+00, i32 1
  %1367 = getelementptr inbounds float, float* %0, i64 2
  %1368 = load float, float* %1367, align 4
  %1369 = insertelement <4 x float> %1366, float %1368, i32 2
  %1370 = insertelement <4 x float> %1369, float 0.000000e+00, i32 3
  %1371 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1362, <4 x float> %1370, <4 x float> %1350)
  %1372 = extractelement <4 x float> %1371, i32 0
  %1373 = getelementptr inbounds float, float* %2, i64 5
  store float %1372, float* %1373, align 4
  %1374 = extractelement <4 x float> %1371, i32 1
  %1375 = getelementptr inbounds float, float* %2, i64 6
  store float %1374, float* %1375, align 4
  %1376 = extractelement <4 x float> %1371, i32 2
  %1377 = getelementptr inbounds float, float* %2, i64 6
  store float %1376, float* %1377, align 4
  %1378 = getelementptr inbounds float, float* %2, i64 6
  %1379 = load float, float* %1378, align 4
  %1380 = insertelement <4 x float> zeroinitializer, float %1379, i32 0
  %1381 = insertelement <4 x float> %1380, float 0.000000e+00, i32 1
  %1382 = insertelement <4 x float> %1381, float 0.000000e+00, i32 2
  %1383 = insertelement <4 x float> %1382, float 0.000000e+00, i32 3
  %1384 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1385 = getelementptr inbounds i8, i8* %1384, i64 20
  %1386 = bitcast i8* %1385 to float*
  %1387 = load float, float* %1386, align 4
  %1388 = insertelement <4 x float> zeroinitializer, float %1387, i32 0
  %1389 = insertelement <4 x float> %1388, float 0.000000e+00, i32 1
  %1390 = insertelement <4 x float> %1389, float 0.000000e+00, i32 2
  %1391 = insertelement <4 x float> %1390, float 0.000000e+00, i32 3
  %1392 = getelementptr inbounds float, float* %0, i64 6
  %1393 = load float, float* %1392, align 4
  %1394 = insertelement <4 x float> zeroinitializer, float %1393, i32 0
  %1395 = insertelement <4 x float> %1394, float 0.000000e+00, i32 1
  %1396 = insertelement <4 x float> %1395, float 0.000000e+00, i32 2
  %1397 = insertelement <4 x float> %1396, float 0.000000e+00, i32 3
  %1398 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1391, <4 x float> %1397, <4 x float> %1383)
  %1399 = extractelement <4 x float> %1398, i32 0
  %1400 = getelementptr inbounds float, float* %2, i64 6
  store float %1399, float* %1400, align 4
  %1401 = getelementptr inbounds float, float* %2, i64 6
  %1402 = load float, float* %1401, align 4
  %1403 = insertelement <4 x float> zeroinitializer, float %1402, i32 0
  %1404 = insertelement <4 x float> %1403, float 0.000000e+00, i32 1
  %1405 = insertelement <4 x float> %1404, float 0.000000e+00, i32 2
  %1406 = insertelement <4 x float> %1405, float 0.000000e+00, i32 3
  %1407 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1408 = getelementptr inbounds i8, i8* %1407, i64 24
  %1409 = bitcast i8* %1408 to float*
  %1410 = load float, float* %1409, align 4
  %1411 = insertelement <4 x float> zeroinitializer, float %1410, i32 0
  %1412 = insertelement <4 x float> %1411, float 0.000000e+00, i32 1
  %1413 = insertelement <4 x float> %1412, float 0.000000e+00, i32 2
  %1414 = insertelement <4 x float> %1413, float 0.000000e+00, i32 3
  %1415 = getelementptr inbounds float, float* %0, i64 10
  %1416 = load float, float* %1415, align 4
  %1417 = insertelement <4 x float> zeroinitializer, float %1416, i32 0
  %1418 = insertelement <4 x float> %1417, float 0.000000e+00, i32 1
  %1419 = insertelement <4 x float> %1418, float 0.000000e+00, i32 2
  %1420 = insertelement <4 x float> %1419, float 0.000000e+00, i32 3
  %1421 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1414, <4 x float> %1420, <4 x float> %1406)
  %1422 = extractelement <4 x float> %1421, i32 0
  %1423 = getelementptr inbounds float, float* %2, i64 6
  store float %1422, float* %1423, align 4
  %1424 = getelementptr inbounds float, float* %2, i64 6
  %1425 = load float, float* %1424, align 4
  %1426 = insertelement <4 x float> zeroinitializer, float %1425, i32 0
  %1427 = insertelement <4 x float> %1426, float 0.000000e+00, i32 1
  %1428 = insertelement <4 x float> %1427, float 0.000000e+00, i32 2
  %1429 = insertelement <4 x float> %1428, float 0.000000e+00, i32 3
  %1430 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1431 = getelementptr inbounds i8, i8* %1430, i64 28
  %1432 = bitcast i8* %1431 to float*
  %1433 = load float, float* %1432, align 4
  %1434 = insertelement <4 x float> zeroinitializer, float %1433, i32 0
  %1435 = insertelement <4 x float> %1434, float 0.000000e+00, i32 1
  %1436 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1437 = getelementptr inbounds i8, i8* %1436, i64 16
  %1438 = bitcast i8* %1437 to float*
  %1439 = load float, float* %1438, align 4
  %1440 = insertelement <4 x float> %1435, float %1439, i32 2
  %1441 = insertelement <4 x float> %1440, float 0.000000e+00, i32 3
  %1442 = getelementptr inbounds float, float* %0, i64 14
  %1443 = load float, float* %1442, align 4
  %1444 = insertelement <4 x float> zeroinitializer, float %1443, i32 0
  %1445 = insertelement <4 x float> %1444, float 0.000000e+00, i32 1
  %1446 = getelementptr inbounds float, float* %0, i64 3
  %1447 = load float, float* %1446, align 4
  %1448 = insertelement <4 x float> %1445, float %1447, i32 2
  %1449 = insertelement <4 x float> %1448, float 0.000000e+00, i32 3
  %1450 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1441, <4 x float> %1449, <4 x float> %1429)
  %1451 = extractelement <4 x float> %1450, i32 0
  %1452 = getelementptr inbounds float, float* %2, i64 6
  store float %1451, float* %1452, align 4
  %1453 = extractelement <4 x float> %1450, i32 1
  %1454 = getelementptr inbounds float, float* %2, i64 7
  store float %1453, float* %1454, align 4
  %1455 = extractelement <4 x float> %1450, i32 2
  %1456 = getelementptr inbounds float, float* %2, i64 7
  store float %1455, float* %1456, align 4
  %1457 = getelementptr inbounds float, float* %2, i64 7
  %1458 = load float, float* %1457, align 4
  %1459 = insertelement <4 x float> zeroinitializer, float %1458, i32 0
  %1460 = insertelement <4 x float> %1459, float 0.000000e+00, i32 1
  %1461 = insertelement <4 x float> %1460, float 0.000000e+00, i32 2
  %1462 = insertelement <4 x float> %1461, float 0.000000e+00, i32 3
  %1463 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1464 = getelementptr inbounds i8, i8* %1463, i64 20
  %1465 = bitcast i8* %1464 to float*
  %1466 = load float, float* %1465, align 4
  %1467 = insertelement <4 x float> zeroinitializer, float %1466, i32 0
  %1468 = insertelement <4 x float> %1467, float 0.000000e+00, i32 1
  %1469 = insertelement <4 x float> %1468, float 0.000000e+00, i32 2
  %1470 = insertelement <4 x float> %1469, float 0.000000e+00, i32 3
  %1471 = getelementptr inbounds float, float* %0, i64 7
  %1472 = load float, float* %1471, align 4
  %1473 = insertelement <4 x float> zeroinitializer, float %1472, i32 0
  %1474 = insertelement <4 x float> %1473, float 0.000000e+00, i32 1
  %1475 = insertelement <4 x float> %1474, float 0.000000e+00, i32 2
  %1476 = insertelement <4 x float> %1475, float 0.000000e+00, i32 3
  %1477 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1470, <4 x float> %1476, <4 x float> %1462)
  %1478 = extractelement <4 x float> %1477, i32 0
  %1479 = getelementptr inbounds float, float* %2, i64 7
  store float %1478, float* %1479, align 4
  %1480 = getelementptr inbounds float, float* %2, i64 7
  %1481 = load float, float* %1480, align 4
  %1482 = insertelement <4 x float> zeroinitializer, float %1481, i32 0
  %1483 = insertelement <4 x float> %1482, float 0.000000e+00, i32 1
  %1484 = insertelement <4 x float> %1483, float 0.000000e+00, i32 2
  %1485 = insertelement <4 x float> %1484, float 0.000000e+00, i32 3
  %1486 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1487 = getelementptr inbounds i8, i8* %1486, i64 24
  %1488 = bitcast i8* %1487 to float*
  %1489 = load float, float* %1488, align 4
  %1490 = insertelement <4 x float> zeroinitializer, float %1489, i32 0
  %1491 = insertelement <4 x float> %1490, float 0.000000e+00, i32 1
  %1492 = insertelement <4 x float> %1491, float 0.000000e+00, i32 2
  %1493 = insertelement <4 x float> %1492, float 0.000000e+00, i32 3
  %1494 = getelementptr inbounds float, float* %0, i64 11
  %1495 = load float, float* %1494, align 4
  %1496 = insertelement <4 x float> zeroinitializer, float %1495, i32 0
  %1497 = insertelement <4 x float> %1496, float 0.000000e+00, i32 1
  %1498 = insertelement <4 x float> %1497, float 0.000000e+00, i32 2
  %1499 = insertelement <4 x float> %1498, float 0.000000e+00, i32 3
  %1500 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1493, <4 x float> %1499, <4 x float> %1485)
  %1501 = extractelement <4 x float> %1500, i32 0
  %1502 = getelementptr inbounds float, float* %2, i64 7
  store float %1501, float* %1502, align 4
  %1503 = getelementptr inbounds float, float* %2, i64 7
  %1504 = load float, float* %1503, align 4
  %1505 = insertelement <4 x float> zeroinitializer, float %1504, i32 0
  %1506 = insertelement <4 x float> %1505, float 0.000000e+00, i32 1
  %1507 = insertelement <4 x float> %1506, float 0.000000e+00, i32 2
  %1508 = insertelement <4 x float> %1507, float 0.000000e+00, i32 3
  %1509 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1510 = getelementptr inbounds i8, i8* %1509, i64 28
  %1511 = bitcast i8* %1510 to float*
  %1512 = load float, float* %1511, align 4
  %1513 = insertelement <4 x float> zeroinitializer, float %1512, i32 0
  %1514 = insertelement <4 x float> %1513, float 0.000000e+00, i32 1
  %1515 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1516 = getelementptr inbounds i8, i8* %1515, i64 32
  %1517 = bitcast i8* %1516 to float*
  %1518 = load float, float* %1517, align 4
  %1519 = insertelement <4 x float> %1514, float %1518, i32 2
  %1520 = insertelement <4 x float> %1519, float 0.000000e+00, i32 3
  %1521 = getelementptr inbounds float, float* %0, i64 15
  %1522 = load float, float* %1521, align 4
  %1523 = insertelement <4 x float> zeroinitializer, float %1522, i32 0
  %1524 = insertelement <4 x float> %1523, float 0.000000e+00, i32 1
  %1525 = load float, float* %0, align 4
  %1526 = insertelement <4 x float> %1524, float %1525, i32 2
  %1527 = insertelement <4 x float> %1526, float 0.000000e+00, i32 3
  %1528 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1520, <4 x float> %1527, <4 x float> %1508)
  %1529 = extractelement <4 x float> %1528, i32 0
  %1530 = getelementptr inbounds float, float* %2, i64 7
  store float %1529, float* %1530, align 4
  %1531 = extractelement <4 x float> %1528, i32 1
  %1532 = getelementptr inbounds float, float* %2, i64 8
  store float %1531, float* %1532, align 4
  %1533 = extractelement <4 x float> %1528, i32 2
  %1534 = getelementptr inbounds float, float* %2, i64 8
  store float %1533, float* %1534, align 4
  %1535 = getelementptr inbounds float, float* %2, i64 8
  %1536 = load float, float* %1535, align 4
  %1537 = insertelement <4 x float> zeroinitializer, float %1536, i32 0
  %1538 = insertelement <4 x float> %1537, float 0.000000e+00, i32 1
  %1539 = insertelement <4 x float> %1538, float 0.000000e+00, i32 2
  %1540 = insertelement <4 x float> %1539, float 0.000000e+00, i32 3
  %1541 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1542 = getelementptr inbounds i8, i8* %1541, i64 36
  %1543 = bitcast i8* %1542 to float*
  %1544 = load float, float* %1543, align 4
  %1545 = insertelement <4 x float> zeroinitializer, float %1544, i32 0
  %1546 = insertelement <4 x float> %1545, float 0.000000e+00, i32 1
  %1547 = insertelement <4 x float> %1546, float 0.000000e+00, i32 2
  %1548 = insertelement <4 x float> %1547, float 0.000000e+00, i32 3
  %1549 = getelementptr inbounds float, float* %0, i64 4
  %1550 = load float, float* %1549, align 4
  %1551 = insertelement <4 x float> zeroinitializer, float %1550, i32 0
  %1552 = insertelement <4 x float> %1551, float 0.000000e+00, i32 1
  %1553 = insertelement <4 x float> %1552, float 0.000000e+00, i32 2
  %1554 = insertelement <4 x float> %1553, float 0.000000e+00, i32 3
  %1555 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1548, <4 x float> %1554, <4 x float> %1540)
  %1556 = extractelement <4 x float> %1555, i32 0
  %1557 = getelementptr inbounds float, float* %2, i64 8
  store float %1556, float* %1557, align 4
  %1558 = getelementptr inbounds float, float* %2, i64 8
  %1559 = load float, float* %1558, align 4
  %1560 = insertelement <4 x float> zeroinitializer, float %1559, i32 0
  %1561 = insertelement <4 x float> %1560, float 0.000000e+00, i32 1
  %1562 = insertelement <4 x float> %1561, float 0.000000e+00, i32 2
  %1563 = insertelement <4 x float> %1562, float 0.000000e+00, i32 3
  %1564 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1565 = getelementptr inbounds i8, i8* %1564, i64 40
  %1566 = bitcast i8* %1565 to float*
  %1567 = load float, float* %1566, align 4
  %1568 = insertelement <4 x float> zeroinitializer, float %1567, i32 0
  %1569 = insertelement <4 x float> %1568, float 0.000000e+00, i32 1
  %1570 = insertelement <4 x float> %1569, float 0.000000e+00, i32 2
  %1571 = insertelement <4 x float> %1570, float 0.000000e+00, i32 3
  %1572 = getelementptr inbounds float, float* %0, i64 8
  %1573 = load float, float* %1572, align 4
  %1574 = insertelement <4 x float> zeroinitializer, float %1573, i32 0
  %1575 = insertelement <4 x float> %1574, float 0.000000e+00, i32 1
  %1576 = insertelement <4 x float> %1575, float 0.000000e+00, i32 2
  %1577 = insertelement <4 x float> %1576, float 0.000000e+00, i32 3
  %1578 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1571, <4 x float> %1577, <4 x float> %1563)
  %1579 = extractelement <4 x float> %1578, i32 0
  %1580 = getelementptr inbounds float, float* %2, i64 8
  store float %1579, float* %1580, align 4
  %1581 = getelementptr inbounds float, float* %2, i64 8
  %1582 = load float, float* %1581, align 4
  %1583 = insertelement <4 x float> zeroinitializer, float %1582, i32 0
  %1584 = insertelement <4 x float> %1583, float 0.000000e+00, i32 1
  %1585 = insertelement <4 x float> %1584, float 0.000000e+00, i32 2
  %1586 = insertelement <4 x float> %1585, float 0.000000e+00, i32 3
  %1587 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1588 = getelementptr inbounds i8, i8* %1587, i64 44
  %1589 = bitcast i8* %1588 to float*
  %1590 = load float, float* %1589, align 4
  %1591 = insertelement <4 x float> zeroinitializer, float %1590, i32 0
  %1592 = insertelement <4 x float> %1591, float 0.000000e+00, i32 1
  %1593 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1594 = getelementptr inbounds i8, i8* %1593, i64 32
  %1595 = bitcast i8* %1594 to float*
  %1596 = load float, float* %1595, align 4
  %1597 = insertelement <4 x float> %1592, float %1596, i32 2
  %1598 = insertelement <4 x float> %1597, float 0.000000e+00, i32 3
  %1599 = getelementptr inbounds float, float* %0, i64 12
  %1600 = load float, float* %1599, align 4
  %1601 = insertelement <4 x float> zeroinitializer, float %1600, i32 0
  %1602 = insertelement <4 x float> %1601, float 0.000000e+00, i32 1
  %1603 = getelementptr inbounds float, float* %0, i64 1
  %1604 = load float, float* %1603, align 4
  %1605 = insertelement <4 x float> %1602, float %1604, i32 2
  %1606 = insertelement <4 x float> %1605, float 0.000000e+00, i32 3
  %1607 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1598, <4 x float> %1606, <4 x float> %1586)
  %1608 = extractelement <4 x float> %1607, i32 0
  %1609 = getelementptr inbounds float, float* %2, i64 8
  store float %1608, float* %1609, align 4
  %1610 = extractelement <4 x float> %1607, i32 1
  %1611 = getelementptr inbounds float, float* %2, i64 9
  store float %1610, float* %1611, align 4
  %1612 = extractelement <4 x float> %1607, i32 2
  %1613 = getelementptr inbounds float, float* %2, i64 9
  store float %1612, float* %1613, align 4
  %1614 = getelementptr inbounds float, float* %2, i64 9
  %1615 = load float, float* %1614, align 4
  %1616 = insertelement <4 x float> zeroinitializer, float %1615, i32 0
  %1617 = insertelement <4 x float> %1616, float 0.000000e+00, i32 1
  %1618 = insertelement <4 x float> %1617, float 0.000000e+00, i32 2
  %1619 = insertelement <4 x float> %1618, float 0.000000e+00, i32 3
  %1620 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1621 = getelementptr inbounds i8, i8* %1620, i64 36
  %1622 = bitcast i8* %1621 to float*
  %1623 = load float, float* %1622, align 4
  %1624 = insertelement <4 x float> zeroinitializer, float %1623, i32 0
  %1625 = insertelement <4 x float> %1624, float 0.000000e+00, i32 1
  %1626 = insertelement <4 x float> %1625, float 0.000000e+00, i32 2
  %1627 = insertelement <4 x float> %1626, float 0.000000e+00, i32 3
  %1628 = getelementptr inbounds float, float* %0, i64 5
  %1629 = load float, float* %1628, align 4
  %1630 = insertelement <4 x float> zeroinitializer, float %1629, i32 0
  %1631 = insertelement <4 x float> %1630, float 0.000000e+00, i32 1
  %1632 = insertelement <4 x float> %1631, float 0.000000e+00, i32 2
  %1633 = insertelement <4 x float> %1632, float 0.000000e+00, i32 3
  %1634 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1627, <4 x float> %1633, <4 x float> %1619)
  %1635 = extractelement <4 x float> %1634, i32 0
  %1636 = getelementptr inbounds float, float* %2, i64 9
  store float %1635, float* %1636, align 4
  %1637 = getelementptr inbounds float, float* %2, i64 9
  %1638 = load float, float* %1637, align 4
  %1639 = insertelement <4 x float> zeroinitializer, float %1638, i32 0
  %1640 = insertelement <4 x float> %1639, float 0.000000e+00, i32 1
  %1641 = insertelement <4 x float> %1640, float 0.000000e+00, i32 2
  %1642 = insertelement <4 x float> %1641, float 0.000000e+00, i32 3
  %1643 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1644 = getelementptr inbounds i8, i8* %1643, i64 40
  %1645 = bitcast i8* %1644 to float*
  %1646 = load float, float* %1645, align 4
  %1647 = insertelement <4 x float> zeroinitializer, float %1646, i32 0
  %1648 = insertelement <4 x float> %1647, float 0.000000e+00, i32 1
  %1649 = insertelement <4 x float> %1648, float 0.000000e+00, i32 2
  %1650 = insertelement <4 x float> %1649, float 0.000000e+00, i32 3
  %1651 = getelementptr inbounds float, float* %0, i64 9
  %1652 = load float, float* %1651, align 4
  %1653 = insertelement <4 x float> zeroinitializer, float %1652, i32 0
  %1654 = insertelement <4 x float> %1653, float 0.000000e+00, i32 1
  %1655 = insertelement <4 x float> %1654, float 0.000000e+00, i32 2
  %1656 = insertelement <4 x float> %1655, float 0.000000e+00, i32 3
  %1657 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1650, <4 x float> %1656, <4 x float> %1642)
  %1658 = extractelement <4 x float> %1657, i32 0
  %1659 = getelementptr inbounds float, float* %2, i64 9
  store float %1658, float* %1659, align 4
  %1660 = getelementptr inbounds float, float* %2, i64 9
  %1661 = load float, float* %1660, align 4
  %1662 = insertelement <4 x float> zeroinitializer, float %1661, i32 0
  %1663 = insertelement <4 x float> %1662, float 0.000000e+00, i32 1
  %1664 = insertelement <4 x float> %1663, float 0.000000e+00, i32 2
  %1665 = insertelement <4 x float> %1664, float 0.000000e+00, i32 3
  %1666 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1667 = getelementptr inbounds i8, i8* %1666, i64 44
  %1668 = bitcast i8* %1667 to float*
  %1669 = load float, float* %1668, align 4
  %1670 = insertelement <4 x float> zeroinitializer, float %1669, i32 0
  %1671 = insertelement <4 x float> %1670, float 0.000000e+00, i32 1
  %1672 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1673 = getelementptr inbounds i8, i8* %1672, i64 32
  %1674 = bitcast i8* %1673 to float*
  %1675 = load float, float* %1674, align 4
  %1676 = insertelement <4 x float> %1671, float %1675, i32 2
  %1677 = insertelement <4 x float> %1676, float 0.000000e+00, i32 3
  %1678 = getelementptr inbounds float, float* %0, i64 13
  %1679 = load float, float* %1678, align 4
  %1680 = insertelement <4 x float> zeroinitializer, float %1679, i32 0
  %1681 = insertelement <4 x float> %1680, float 0.000000e+00, i32 1
  %1682 = getelementptr inbounds float, float* %0, i64 2
  %1683 = load float, float* %1682, align 4
  %1684 = insertelement <4 x float> %1681, float %1683, i32 2
  %1685 = insertelement <4 x float> %1684, float 0.000000e+00, i32 3
  %1686 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1677, <4 x float> %1685, <4 x float> %1665)
  %1687 = extractelement <4 x float> %1686, i32 0
  %1688 = getelementptr inbounds float, float* %2, i64 9
  store float %1687, float* %1688, align 4
  %1689 = extractelement <4 x float> %1686, i32 1
  %1690 = getelementptr inbounds float, float* %2, i64 10
  store float %1689, float* %1690, align 4
  %1691 = extractelement <4 x float> %1686, i32 2
  %1692 = getelementptr inbounds float, float* %2, i64 10
  store float %1691, float* %1692, align 4
  %1693 = getelementptr inbounds float, float* %2, i64 10
  %1694 = load float, float* %1693, align 4
  %1695 = insertelement <4 x float> zeroinitializer, float %1694, i32 0
  %1696 = insertelement <4 x float> %1695, float 0.000000e+00, i32 1
  %1697 = insertelement <4 x float> %1696, float 0.000000e+00, i32 2
  %1698 = insertelement <4 x float> %1697, float 0.000000e+00, i32 3
  %1699 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1700 = getelementptr inbounds i8, i8* %1699, i64 36
  %1701 = bitcast i8* %1700 to float*
  %1702 = load float, float* %1701, align 4
  %1703 = insertelement <4 x float> zeroinitializer, float %1702, i32 0
  %1704 = insertelement <4 x float> %1703, float 0.000000e+00, i32 1
  %1705 = insertelement <4 x float> %1704, float 0.000000e+00, i32 2
  %1706 = insertelement <4 x float> %1705, float 0.000000e+00, i32 3
  %1707 = getelementptr inbounds float, float* %0, i64 6
  %1708 = load float, float* %1707, align 4
  %1709 = insertelement <4 x float> zeroinitializer, float %1708, i32 0
  %1710 = insertelement <4 x float> %1709, float 0.000000e+00, i32 1
  %1711 = insertelement <4 x float> %1710, float 0.000000e+00, i32 2
  %1712 = insertelement <4 x float> %1711, float 0.000000e+00, i32 3
  %1713 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1706, <4 x float> %1712, <4 x float> %1698)
  %1714 = extractelement <4 x float> %1713, i32 0
  %1715 = getelementptr inbounds float, float* %2, i64 10
  store float %1714, float* %1715, align 4
  %1716 = getelementptr inbounds float, float* %2, i64 10
  %1717 = load float, float* %1716, align 4
  %1718 = insertelement <4 x float> zeroinitializer, float %1717, i32 0
  %1719 = insertelement <4 x float> %1718, float 0.000000e+00, i32 1
  %1720 = insertelement <4 x float> %1719, float 0.000000e+00, i32 2
  %1721 = insertelement <4 x float> %1720, float 0.000000e+00, i32 3
  %1722 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1723 = getelementptr inbounds i8, i8* %1722, i64 40
  %1724 = bitcast i8* %1723 to float*
  %1725 = load float, float* %1724, align 4
  %1726 = insertelement <4 x float> zeroinitializer, float %1725, i32 0
  %1727 = insertelement <4 x float> %1726, float 0.000000e+00, i32 1
  %1728 = insertelement <4 x float> %1727, float 0.000000e+00, i32 2
  %1729 = insertelement <4 x float> %1728, float 0.000000e+00, i32 3
  %1730 = getelementptr inbounds float, float* %0, i64 10
  %1731 = load float, float* %1730, align 4
  %1732 = insertelement <4 x float> zeroinitializer, float %1731, i32 0
  %1733 = insertelement <4 x float> %1732, float 0.000000e+00, i32 1
  %1734 = insertelement <4 x float> %1733, float 0.000000e+00, i32 2
  %1735 = insertelement <4 x float> %1734, float 0.000000e+00, i32 3
  %1736 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1729, <4 x float> %1735, <4 x float> %1721)
  %1737 = extractelement <4 x float> %1736, i32 0
  %1738 = getelementptr inbounds float, float* %2, i64 10
  store float %1737, float* %1738, align 4
  %1739 = getelementptr inbounds float, float* %2, i64 10
  %1740 = load float, float* %1739, align 4
  %1741 = insertelement <4 x float> zeroinitializer, float %1740, i32 0
  %1742 = insertelement <4 x float> %1741, float 0.000000e+00, i32 1
  %1743 = insertelement <4 x float> %1742, float 0.000000e+00, i32 2
  %1744 = insertelement <4 x float> %1743, float 0.000000e+00, i32 3
  %1745 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1746 = getelementptr inbounds i8, i8* %1745, i64 44
  %1747 = bitcast i8* %1746 to float*
  %1748 = load float, float* %1747, align 4
  %1749 = insertelement <4 x float> zeroinitializer, float %1748, i32 0
  %1750 = insertelement <4 x float> %1749, float 0.000000e+00, i32 1
  %1751 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1752 = getelementptr inbounds i8, i8* %1751, i64 32
  %1753 = bitcast i8* %1752 to float*
  %1754 = load float, float* %1753, align 4
  %1755 = insertelement <4 x float> %1750, float %1754, i32 2
  %1756 = insertelement <4 x float> %1755, float 0.000000e+00, i32 3
  %1757 = getelementptr inbounds float, float* %0, i64 14
  %1758 = load float, float* %1757, align 4
  %1759 = insertelement <4 x float> zeroinitializer, float %1758, i32 0
  %1760 = insertelement <4 x float> %1759, float 0.000000e+00, i32 1
  %1761 = getelementptr inbounds float, float* %0, i64 3
  %1762 = load float, float* %1761, align 4
  %1763 = insertelement <4 x float> %1760, float %1762, i32 2
  %1764 = insertelement <4 x float> %1763, float 0.000000e+00, i32 3
  %1765 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1756, <4 x float> %1764, <4 x float> %1744)
  %1766 = extractelement <4 x float> %1765, i32 0
  %1767 = getelementptr inbounds float, float* %2, i64 10
  store float %1766, float* %1767, align 4
  %1768 = extractelement <4 x float> %1765, i32 1
  %1769 = getelementptr inbounds float, float* %2, i64 11
  store float %1768, float* %1769, align 4
  %1770 = extractelement <4 x float> %1765, i32 2
  %1771 = getelementptr inbounds float, float* %2, i64 11
  store float %1770, float* %1771, align 4
  %1772 = getelementptr inbounds float, float* %2, i64 11
  %1773 = load float, float* %1772, align 4
  %1774 = insertelement <4 x float> zeroinitializer, float %1773, i32 0
  %1775 = insertelement <4 x float> %1774, float 0.000000e+00, i32 1
  %1776 = insertelement <4 x float> %1775, float 0.000000e+00, i32 2
  %1777 = insertelement <4 x float> %1776, float 0.000000e+00, i32 3
  %1778 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1779 = getelementptr inbounds i8, i8* %1778, i64 36
  %1780 = bitcast i8* %1779 to float*
  %1781 = load float, float* %1780, align 4
  %1782 = insertelement <4 x float> zeroinitializer, float %1781, i32 0
  %1783 = insertelement <4 x float> %1782, float 0.000000e+00, i32 1
  %1784 = insertelement <4 x float> %1783, float 0.000000e+00, i32 2
  %1785 = insertelement <4 x float> %1784, float 0.000000e+00, i32 3
  %1786 = getelementptr inbounds float, float* %0, i64 7
  %1787 = load float, float* %1786, align 4
  %1788 = insertelement <4 x float> zeroinitializer, float %1787, i32 0
  %1789 = insertelement <4 x float> %1788, float 0.000000e+00, i32 1
  %1790 = insertelement <4 x float> %1789, float 0.000000e+00, i32 2
  %1791 = insertelement <4 x float> %1790, float 0.000000e+00, i32 3
  %1792 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1785, <4 x float> %1791, <4 x float> %1777)
  %1793 = extractelement <4 x float> %1792, i32 0
  %1794 = getelementptr inbounds float, float* %2, i64 11
  store float %1793, float* %1794, align 4
  %1795 = getelementptr inbounds float, float* %2, i64 11
  %1796 = load float, float* %1795, align 4
  %1797 = insertelement <4 x float> zeroinitializer, float %1796, i32 0
  %1798 = insertelement <4 x float> %1797, float 0.000000e+00, i32 1
  %1799 = insertelement <4 x float> %1798, float 0.000000e+00, i32 2
  %1800 = insertelement <4 x float> %1799, float 0.000000e+00, i32 3
  %1801 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1802 = getelementptr inbounds i8, i8* %1801, i64 40
  %1803 = bitcast i8* %1802 to float*
  %1804 = load float, float* %1803, align 4
  %1805 = insertelement <4 x float> zeroinitializer, float %1804, i32 0
  %1806 = insertelement <4 x float> %1805, float 0.000000e+00, i32 1
  %1807 = insertelement <4 x float> %1806, float 0.000000e+00, i32 2
  %1808 = insertelement <4 x float> %1807, float 0.000000e+00, i32 3
  %1809 = getelementptr inbounds float, float* %0, i64 11
  %1810 = load float, float* %1809, align 4
  %1811 = insertelement <4 x float> zeroinitializer, float %1810, i32 0
  %1812 = insertelement <4 x float> %1811, float 0.000000e+00, i32 1
  %1813 = insertelement <4 x float> %1812, float 0.000000e+00, i32 2
  %1814 = insertelement <4 x float> %1813, float 0.000000e+00, i32 3
  %1815 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1808, <4 x float> %1814, <4 x float> %1800)
  %1816 = extractelement <4 x float> %1815, i32 0
  %1817 = getelementptr inbounds float, float* %2, i64 11
  store float %1816, float* %1817, align 4
  %1818 = getelementptr inbounds float, float* %2, i64 11
  %1819 = load float, float* %1818, align 4
  %1820 = insertelement <4 x float> zeroinitializer, float %1819, i32 0
  %1821 = insertelement <4 x float> %1820, float 0.000000e+00, i32 1
  %1822 = insertelement <4 x float> %1821, float 0.000000e+00, i32 2
  %1823 = insertelement <4 x float> %1822, float 0.000000e+00, i32 3
  %1824 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1825 = getelementptr inbounds i8, i8* %1824, i64 44
  %1826 = bitcast i8* %1825 to float*
  %1827 = load float, float* %1826, align 4
  %1828 = insertelement <4 x float> zeroinitializer, float %1827, i32 0
  %1829 = insertelement <4 x float> %1828, float 0.000000e+00, i32 1
  %1830 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1831 = getelementptr inbounds i8, i8* %1830, i64 48
  %1832 = bitcast i8* %1831 to float*
  %1833 = load float, float* %1832, align 4
  %1834 = insertelement <4 x float> %1829, float %1833, i32 2
  %1835 = insertelement <4 x float> %1834, float 0.000000e+00, i32 3
  %1836 = getelementptr inbounds float, float* %0, i64 15
  %1837 = load float, float* %1836, align 4
  %1838 = insertelement <4 x float> zeroinitializer, float %1837, i32 0
  %1839 = insertelement <4 x float> %1838, float 0.000000e+00, i32 1
  %1840 = load float, float* %0, align 4
  %1841 = insertelement <4 x float> %1839, float %1840, i32 2
  %1842 = insertelement <4 x float> %1841, float 0.000000e+00, i32 3
  %1843 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1835, <4 x float> %1842, <4 x float> %1823)
  %1844 = extractelement <4 x float> %1843, i32 0
  %1845 = getelementptr inbounds float, float* %2, i64 11
  store float %1844, float* %1845, align 4
  %1846 = extractelement <4 x float> %1843, i32 1
  %1847 = getelementptr inbounds float, float* %2, i64 12
  store float %1846, float* %1847, align 4
  %1848 = extractelement <4 x float> %1843, i32 2
  %1849 = getelementptr inbounds float, float* %2, i64 12
  store float %1848, float* %1849, align 4
  %1850 = getelementptr inbounds float, float* %2, i64 12
  %1851 = load float, float* %1850, align 4
  %1852 = insertelement <4 x float> zeroinitializer, float %1851, i32 0
  %1853 = insertelement <4 x float> %1852, float 0.000000e+00, i32 1
  %1854 = insertelement <4 x float> %1853, float 0.000000e+00, i32 2
  %1855 = insertelement <4 x float> %1854, float 0.000000e+00, i32 3
  %1856 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1857 = getelementptr inbounds i8, i8* %1856, i64 52
  %1858 = bitcast i8* %1857 to float*
  %1859 = load float, float* %1858, align 4
  %1860 = insertelement <4 x float> zeroinitializer, float %1859, i32 0
  %1861 = insertelement <4 x float> %1860, float 0.000000e+00, i32 1
  %1862 = insertelement <4 x float> %1861, float 0.000000e+00, i32 2
  %1863 = insertelement <4 x float> %1862, float 0.000000e+00, i32 3
  %1864 = getelementptr inbounds float, float* %0, i64 4
  %1865 = load float, float* %1864, align 4
  %1866 = insertelement <4 x float> zeroinitializer, float %1865, i32 0
  %1867 = insertelement <4 x float> %1866, float 0.000000e+00, i32 1
  %1868 = insertelement <4 x float> %1867, float 0.000000e+00, i32 2
  %1869 = insertelement <4 x float> %1868, float 0.000000e+00, i32 3
  %1870 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1863, <4 x float> %1869, <4 x float> %1855)
  %1871 = extractelement <4 x float> %1870, i32 0
  %1872 = getelementptr inbounds float, float* %2, i64 12
  store float %1871, float* %1872, align 4
  %1873 = getelementptr inbounds float, float* %2, i64 12
  %1874 = load float, float* %1873, align 4
  %1875 = insertelement <4 x float> zeroinitializer, float %1874, i32 0
  %1876 = insertelement <4 x float> %1875, float 0.000000e+00, i32 1
  %1877 = insertelement <4 x float> %1876, float 0.000000e+00, i32 2
  %1878 = insertelement <4 x float> %1877, float 0.000000e+00, i32 3
  %1879 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1880 = getelementptr inbounds i8, i8* %1879, i64 56
  %1881 = bitcast i8* %1880 to float*
  %1882 = load float, float* %1881, align 4
  %1883 = insertelement <4 x float> zeroinitializer, float %1882, i32 0
  %1884 = insertelement <4 x float> %1883, float 0.000000e+00, i32 1
  %1885 = insertelement <4 x float> %1884, float 0.000000e+00, i32 2
  %1886 = insertelement <4 x float> %1885, float 0.000000e+00, i32 3
  %1887 = getelementptr inbounds float, float* %0, i64 8
  %1888 = load float, float* %1887, align 4
  %1889 = insertelement <4 x float> zeroinitializer, float %1888, i32 0
  %1890 = insertelement <4 x float> %1889, float 0.000000e+00, i32 1
  %1891 = insertelement <4 x float> %1890, float 0.000000e+00, i32 2
  %1892 = insertelement <4 x float> %1891, float 0.000000e+00, i32 3
  %1893 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1886, <4 x float> %1892, <4 x float> %1878)
  %1894 = extractelement <4 x float> %1893, i32 0
  %1895 = getelementptr inbounds float, float* %2, i64 12
  store float %1894, float* %1895, align 4
  %1896 = getelementptr inbounds float, float* %2, i64 12
  %1897 = load float, float* %1896, align 4
  %1898 = insertelement <4 x float> zeroinitializer, float %1897, i32 0
  %1899 = insertelement <4 x float> %1898, float 0.000000e+00, i32 1
  %1900 = insertelement <4 x float> %1899, float 0.000000e+00, i32 2
  %1901 = insertelement <4 x float> %1900, float 0.000000e+00, i32 3
  %1902 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1903 = getelementptr inbounds i8, i8* %1902, i64 60
  %1904 = bitcast i8* %1903 to float*
  %1905 = load float, float* %1904, align 4
  %1906 = insertelement <4 x float> zeroinitializer, float %1905, i32 0
  %1907 = insertelement <4 x float> %1906, float 0.000000e+00, i32 1
  %1908 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1909 = getelementptr inbounds i8, i8* %1908, i64 48
  %1910 = bitcast i8* %1909 to float*
  %1911 = load float, float* %1910, align 4
  %1912 = insertelement <4 x float> %1907, float %1911, i32 2
  %1913 = insertelement <4 x float> %1912, float 0.000000e+00, i32 3
  %1914 = getelementptr inbounds float, float* %0, i64 12
  %1915 = load float, float* %1914, align 4
  %1916 = insertelement <4 x float> zeroinitializer, float %1915, i32 0
  %1917 = insertelement <4 x float> %1916, float 0.000000e+00, i32 1
  %1918 = getelementptr inbounds float, float* %0, i64 1
  %1919 = load float, float* %1918, align 4
  %1920 = insertelement <4 x float> %1917, float %1919, i32 2
  %1921 = insertelement <4 x float> %1920, float 0.000000e+00, i32 3
  %1922 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1913, <4 x float> %1921, <4 x float> %1901)
  %1923 = extractelement <4 x float> %1922, i32 0
  %1924 = getelementptr inbounds float, float* %2, i64 12
  store float %1923, float* %1924, align 4
  %1925 = extractelement <4 x float> %1922, i32 1
  %1926 = getelementptr inbounds float, float* %2, i64 13
  store float %1925, float* %1926, align 4
  %1927 = extractelement <4 x float> %1922, i32 2
  %1928 = getelementptr inbounds float, float* %2, i64 13
  store float %1927, float* %1928, align 4
  %1929 = getelementptr inbounds float, float* %2, i64 13
  %1930 = load float, float* %1929, align 4
  %1931 = insertelement <4 x float> zeroinitializer, float %1930, i32 0
  %1932 = insertelement <4 x float> %1931, float 0.000000e+00, i32 1
  %1933 = insertelement <4 x float> %1932, float 0.000000e+00, i32 2
  %1934 = insertelement <4 x float> %1933, float 0.000000e+00, i32 3
  %1935 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1936 = getelementptr inbounds i8, i8* %1935, i64 52
  %1937 = bitcast i8* %1936 to float*
  %1938 = load float, float* %1937, align 4
  %1939 = insertelement <4 x float> zeroinitializer, float %1938, i32 0
  %1940 = insertelement <4 x float> %1939, float 0.000000e+00, i32 1
  %1941 = insertelement <4 x float> %1940, float 0.000000e+00, i32 2
  %1942 = insertelement <4 x float> %1941, float 0.000000e+00, i32 3
  %1943 = getelementptr inbounds float, float* %0, i64 5
  %1944 = load float, float* %1943, align 4
  %1945 = insertelement <4 x float> zeroinitializer, float %1944, i32 0
  %1946 = insertelement <4 x float> %1945, float 0.000000e+00, i32 1
  %1947 = insertelement <4 x float> %1946, float 0.000000e+00, i32 2
  %1948 = insertelement <4 x float> %1947, float 0.000000e+00, i32 3
  %1949 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1942, <4 x float> %1948, <4 x float> %1934)
  %1950 = extractelement <4 x float> %1949, i32 0
  %1951 = getelementptr inbounds float, float* %2, i64 13
  store float %1950, float* %1951, align 4
  %1952 = getelementptr inbounds float, float* %2, i64 13
  %1953 = load float, float* %1952, align 4
  %1954 = insertelement <4 x float> zeroinitializer, float %1953, i32 0
  %1955 = insertelement <4 x float> %1954, float 0.000000e+00, i32 1
  %1956 = insertelement <4 x float> %1955, float 0.000000e+00, i32 2
  %1957 = insertelement <4 x float> %1956, float 0.000000e+00, i32 3
  %1958 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1959 = getelementptr inbounds i8, i8* %1958, i64 56
  %1960 = bitcast i8* %1959 to float*
  %1961 = load float, float* %1960, align 4
  %1962 = insertelement <4 x float> zeroinitializer, float %1961, i32 0
  %1963 = insertelement <4 x float> %1962, float 0.000000e+00, i32 1
  %1964 = insertelement <4 x float> %1963, float 0.000000e+00, i32 2
  %1965 = insertelement <4 x float> %1964, float 0.000000e+00, i32 3
  %1966 = getelementptr inbounds float, float* %0, i64 9
  %1967 = load float, float* %1966, align 4
  %1968 = insertelement <4 x float> zeroinitializer, float %1967, i32 0
  %1969 = insertelement <4 x float> %1968, float 0.000000e+00, i32 1
  %1970 = insertelement <4 x float> %1969, float 0.000000e+00, i32 2
  %1971 = insertelement <4 x float> %1970, float 0.000000e+00, i32 3
  %1972 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1965, <4 x float> %1971, <4 x float> %1957)
  %1973 = extractelement <4 x float> %1972, i32 0
  %1974 = getelementptr inbounds float, float* %2, i64 13
  store float %1973, float* %1974, align 4
  %1975 = getelementptr inbounds float, float* %2, i64 13
  %1976 = load float, float* %1975, align 4
  %1977 = insertelement <4 x float> zeroinitializer, float %1976, i32 0
  %1978 = insertelement <4 x float> %1977, float 0.000000e+00, i32 1
  %1979 = insertelement <4 x float> %1978, float 0.000000e+00, i32 2
  %1980 = insertelement <4 x float> %1979, float 0.000000e+00, i32 3
  %1981 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1982 = getelementptr inbounds i8, i8* %1981, i64 60
  %1983 = bitcast i8* %1982 to float*
  %1984 = load float, float* %1983, align 4
  %1985 = insertelement <4 x float> zeroinitializer, float %1984, i32 0
  %1986 = insertelement <4 x float> %1985, float 0.000000e+00, i32 1
  %1987 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %1988 = getelementptr inbounds i8, i8* %1987, i64 48
  %1989 = bitcast i8* %1988 to float*
  %1990 = load float, float* %1989, align 4
  %1991 = insertelement <4 x float> %1986, float %1990, i32 2
  %1992 = insertelement <4 x float> %1991, float 0.000000e+00, i32 3
  %1993 = getelementptr inbounds float, float* %0, i64 13
  %1994 = load float, float* %1993, align 4
  %1995 = insertelement <4 x float> zeroinitializer, float %1994, i32 0
  %1996 = insertelement <4 x float> %1995, float 0.000000e+00, i32 1
  %1997 = getelementptr inbounds float, float* %0, i64 2
  %1998 = load float, float* %1997, align 4
  %1999 = insertelement <4 x float> %1996, float %1998, i32 2
  %2000 = insertelement <4 x float> %1999, float 0.000000e+00, i32 3
  %2001 = call <4 x float> @llvm.fma.v4f32(<4 x float> %1992, <4 x float> %2000, <4 x float> %1980)
  %2002 = extractelement <4 x float> %2001, i32 0
  %2003 = getelementptr inbounds float, float* %2, i64 13
  store float %2002, float* %2003, align 4
  %2004 = extractelement <4 x float> %2001, i32 1
  %2005 = getelementptr inbounds float, float* %2, i64 14
  store float %2004, float* %2005, align 4
  %2006 = extractelement <4 x float> %2001, i32 2
  %2007 = getelementptr inbounds float, float* %2, i64 14
  store float %2006, float* %2007, align 4
  %2008 = getelementptr inbounds float, float* %2, i64 14
  %2009 = load float, float* %2008, align 4
  %2010 = insertelement <4 x float> zeroinitializer, float %2009, i32 0
  %2011 = insertelement <4 x float> %2010, float 0.000000e+00, i32 1
  %2012 = insertelement <4 x float> %2011, float 0.000000e+00, i32 2
  %2013 = insertelement <4 x float> %2012, float 0.000000e+00, i32 3
  %2014 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2015 = getelementptr inbounds i8, i8* %2014, i64 52
  %2016 = bitcast i8* %2015 to float*
  %2017 = load float, float* %2016, align 4
  %2018 = insertelement <4 x float> zeroinitializer, float %2017, i32 0
  %2019 = insertelement <4 x float> %2018, float 0.000000e+00, i32 1
  %2020 = insertelement <4 x float> %2019, float 0.000000e+00, i32 2
  %2021 = insertelement <4 x float> %2020, float 0.000000e+00, i32 3
  %2022 = getelementptr inbounds float, float* %0, i64 6
  %2023 = load float, float* %2022, align 4
  %2024 = insertelement <4 x float> zeroinitializer, float %2023, i32 0
  %2025 = insertelement <4 x float> %2024, float 0.000000e+00, i32 1
  %2026 = insertelement <4 x float> %2025, float 0.000000e+00, i32 2
  %2027 = insertelement <4 x float> %2026, float 0.000000e+00, i32 3
  %2028 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2021, <4 x float> %2027, <4 x float> %2013)
  %2029 = extractelement <4 x float> %2028, i32 0
  %2030 = getelementptr inbounds float, float* %2, i64 14
  store float %2029, float* %2030, align 4
  %2031 = getelementptr inbounds float, float* %2, i64 14
  %2032 = load float, float* %2031, align 4
  %2033 = insertelement <4 x float> zeroinitializer, float %2032, i32 0
  %2034 = insertelement <4 x float> %2033, float 0.000000e+00, i32 1
  %2035 = insertelement <4 x float> %2034, float 0.000000e+00, i32 2
  %2036 = insertelement <4 x float> %2035, float 0.000000e+00, i32 3
  %2037 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2038 = getelementptr inbounds i8, i8* %2037, i64 56
  %2039 = bitcast i8* %2038 to float*
  %2040 = load float, float* %2039, align 4
  %2041 = insertelement <4 x float> zeroinitializer, float %2040, i32 0
  %2042 = insertelement <4 x float> %2041, float 0.000000e+00, i32 1
  %2043 = insertelement <4 x float> %2042, float 0.000000e+00, i32 2
  %2044 = insertelement <4 x float> %2043, float 0.000000e+00, i32 3
  %2045 = getelementptr inbounds float, float* %0, i64 10
  %2046 = load float, float* %2045, align 4
  %2047 = insertelement <4 x float> zeroinitializer, float %2046, i32 0
  %2048 = insertelement <4 x float> %2047, float 0.000000e+00, i32 1
  %2049 = insertelement <4 x float> %2048, float 0.000000e+00, i32 2
  %2050 = insertelement <4 x float> %2049, float 0.000000e+00, i32 3
  %2051 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2044, <4 x float> %2050, <4 x float> %2036)
  %2052 = extractelement <4 x float> %2051, i32 0
  %2053 = getelementptr inbounds float, float* %2, i64 14
  store float %2052, float* %2053, align 4
  %2054 = getelementptr inbounds float, float* %2, i64 14
  %2055 = load float, float* %2054, align 4
  %2056 = insertelement <4 x float> zeroinitializer, float %2055, i32 0
  %2057 = insertelement <4 x float> %2056, float 0.000000e+00, i32 1
  %2058 = insertelement <4 x float> %2057, float 0.000000e+00, i32 2
  %2059 = insertelement <4 x float> %2058, float 0.000000e+00, i32 3
  %2060 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2061 = getelementptr inbounds i8, i8* %2060, i64 60
  %2062 = bitcast i8* %2061 to float*
  %2063 = load float, float* %2062, align 4
  %2064 = insertelement <4 x float> zeroinitializer, float %2063, i32 0
  %2065 = insertelement <4 x float> %2064, float 0.000000e+00, i32 1
  %2066 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2067 = getelementptr inbounds i8, i8* %2066, i64 48
  %2068 = bitcast i8* %2067 to float*
  %2069 = load float, float* %2068, align 4
  %2070 = insertelement <4 x float> %2065, float %2069, i32 2
  %2071 = insertelement <4 x float> %2070, float 0.000000e+00, i32 3
  %2072 = getelementptr inbounds float, float* %0, i64 14
  %2073 = load float, float* %2072, align 4
  %2074 = insertelement <4 x float> zeroinitializer, float %2073, i32 0
  %2075 = insertelement <4 x float> %2074, float 0.000000e+00, i32 1
  %2076 = getelementptr inbounds float, float* %0, i64 3
  %2077 = load float, float* %2076, align 4
  %2078 = insertelement <4 x float> %2075, float %2077, i32 2
  %2079 = insertelement <4 x float> %2078, float 0.000000e+00, i32 3
  %2080 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2071, <4 x float> %2079, <4 x float> %2059)
  %2081 = extractelement <4 x float> %2080, i32 0
  %2082 = getelementptr inbounds float, float* %2, i64 14
  store float %2081, float* %2082, align 4
  %2083 = extractelement <4 x float> %2080, i32 1
  %2084 = getelementptr inbounds float, float* %2, i64 15
  store float %2083, float* %2084, align 4
  %2085 = extractelement <4 x float> %2080, i32 2
  %2086 = getelementptr inbounds float, float* %2, i64 15
  store float %2085, float* %2086, align 4
  %2087 = getelementptr inbounds float, float* %2, i64 15
  %2088 = load float, float* %2087, align 4
  %2089 = insertelement <4 x float> zeroinitializer, float %2088, i32 0
  %2090 = insertelement <4 x float> %2089, float 0.000000e+00, i32 1
  %2091 = insertelement <4 x float> %2090, float 0.000000e+00, i32 2
  %2092 = insertelement <4 x float> %2091, float 0.000000e+00, i32 3
  %2093 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2094 = getelementptr inbounds i8, i8* %2093, i64 52
  %2095 = bitcast i8* %2094 to float*
  %2096 = load float, float* %2095, align 4
  %2097 = insertelement <4 x float> zeroinitializer, float %2096, i32 0
  %2098 = insertelement <4 x float> %2097, float 0.000000e+00, i32 1
  %2099 = insertelement <4 x float> %2098, float 0.000000e+00, i32 2
  %2100 = insertelement <4 x float> %2099, float 0.000000e+00, i32 3
  %2101 = getelementptr inbounds float, float* %0, i64 7
  %2102 = load float, float* %2101, align 4
  %2103 = insertelement <4 x float> zeroinitializer, float %2102, i32 0
  %2104 = insertelement <4 x float> %2103, float 0.000000e+00, i32 1
  %2105 = insertelement <4 x float> %2104, float 0.000000e+00, i32 2
  %2106 = insertelement <4 x float> %2105, float 0.000000e+00, i32 3
  %2107 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2100, <4 x float> %2106, <4 x float> %2092)
  %2108 = extractelement <4 x float> %2107, i32 0
  %2109 = getelementptr inbounds float, float* %2, i64 15
  store float %2108, float* %2109, align 4
  %2110 = getelementptr inbounds float, float* %2, i64 15
  %2111 = load float, float* %2110, align 4
  %2112 = insertelement <4 x float> zeroinitializer, float %2111, i32 0
  %2113 = insertelement <4 x float> %2112, float 0.000000e+00, i32 1
  %2114 = insertelement <4 x float> %2113, float 0.000000e+00, i32 2
  %2115 = insertelement <4 x float> %2114, float 0.000000e+00, i32 3
  %2116 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2117 = getelementptr inbounds i8, i8* %2116, i64 56
  %2118 = bitcast i8* %2117 to float*
  %2119 = load float, float* %2118, align 4
  %2120 = insertelement <4 x float> zeroinitializer, float %2119, i32 0
  %2121 = insertelement <4 x float> %2120, float 0.000000e+00, i32 1
  %2122 = insertelement <4 x float> %2121, float 0.000000e+00, i32 2
  %2123 = insertelement <4 x float> %2122, float 0.000000e+00, i32 3
  %2124 = getelementptr inbounds float, float* %0, i64 11
  %2125 = load float, float* %2124, align 4
  %2126 = insertelement <4 x float> zeroinitializer, float %2125, i32 0
  %2127 = insertelement <4 x float> %2126, float 0.000000e+00, i32 1
  %2128 = insertelement <4 x float> %2127, float 0.000000e+00, i32 2
  %2129 = insertelement <4 x float> %2128, float 0.000000e+00, i32 3
  %2130 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2123, <4 x float> %2129, <4 x float> %2115)
  %2131 = extractelement <4 x float> %2130, i32 0
  %2132 = getelementptr inbounds float, float* %2, i64 15
  store float %2131, float* %2132, align 4
  %2133 = getelementptr inbounds float, float* %2, i64 15
  %2134 = load float, float* %2133, align 4
  %2135 = insertelement <4 x float> zeroinitializer, float %2134, i32 0
  %2136 = insertelement <4 x float> %2135, float 0.000000e+00, i32 1
  %2137 = insertelement <4 x float> %2136, float 0.000000e+00, i32 2
  %2138 = insertelement <4 x float> %2137, float 0.000000e+00, i32 3
  %2139 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2140 = getelementptr inbounds i8, i8* %2139, i64 60
  %2141 = bitcast i8* %2140 to float*
  %2142 = load float, float* %2141, align 4
  %2143 = insertelement <4 x float> zeroinitializer, float %2142, i32 0
  %2144 = insertelement <4 x float> %2143, float 1.000000e+00, i32 1
  %2145 = insertelement <4 x float> %2144, float 1.000000e+00, i32 2
  %2146 = insertelement <4 x float> %2145, float 1.000000e+00, i32 3
  %2147 = getelementptr inbounds float, float* %0, i64 15
  %2148 = load float, float* %2147, align 4
  %2149 = insertelement <4 x float> zeroinitializer, float %2148, i32 0
  %2150 = getelementptr inbounds float, float* %2, i64 5
  %2151 = bitcast float* %2150 to i32*
  %2152 = load i32, i32* %2151, align 4
  %2153 = sitofp i32 %2152 to float
  %2154 = insertelement <4 x float> %2149, float %2153, i32 1
  %2155 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2156 = getelementptr inbounds i8, i8* %2155, i64 20
  %2157 = bitcast i8* %2156 to i32*
  %2158 = load i32, i32* %2157, align 4
  %2159 = sitofp i32 %2158 to float
  %2160 = insertelement <4 x float> %2154, float %2159, i32 2
  %2161 = getelementptr inbounds float, float* %2, i64 9
  %2162 = bitcast float* %2161 to i32*
  %2163 = load i32, i32* %2162, align 4
  %2164 = sitofp i32 %2163 to float
  %2165 = insertelement <4 x float> %2160, float %2164, i32 3
  %2166 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2146, <4 x float> %2165, <4 x float> %2138)
  %2167 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2168 = bitcast i8* %2167 to float*
  %2169 = load float, float* %2168, align 4
  %2170 = insertelement <4 x float> zeroinitializer, float %2169, i32 3
  %2171 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2172 = bitcast i8* %2171 to float*
  %2173 = load float, float* %2172, align 4
  %2174 = fcmp olt float %2173, 0.000000e+00
  %2175 = sext i1 %2174 to i32
  %2176 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2177 = bitcast i8* %2176 to float*
  %2178 = load float, float* %2177, align 4
  %2179 = fcmp ogt float %2178, 0.000000e+00
  %2180 = zext i1 %2179 to i32
  %2181 = add nsw i32 %2175, %2180
  %2182 = sitofp i32 %2181 to float
  %2183 = fneg float %2182
  %2184 = fmul float %100, %2183
  %2185 = insertelement <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, float %2184, i32 3
  %2186 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2187 = getelementptr inbounds i8, i8* %2186, i64 36
  %2188 = bitcast i8* %2187 to i32*
  %2189 = load i32, i32* %2188, align 4
  %2190 = sitofp i32 %2189 to float
  %2191 = insertelement <4 x float> zeroinitializer, float %2190, i32 0
  %2192 = getelementptr inbounds float, float* %2, i64 13
  %2193 = bitcast float* %2192 to i32*
  %2194 = load i32, i32* %2193, align 4
  %2195 = sitofp i32 %2194 to float
  %2196 = insertelement <4 x float> %2191, float %2195, i32 1
  %2197 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2198 = getelementptr inbounds i8, i8* %2197, i64 52
  %2199 = bitcast i8* %2198 to i32*
  %2200 = load i32, i32* %2199, align 4
  %2201 = sitofp i32 %2200 to float
  %2202 = insertelement <4 x float> %2196, float %2201, i32 2
  %2203 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2204 = bitcast i8* %2203 to float*
  %2205 = load float, float* %2204, align 4
  %2206 = insertelement <4 x float> %2202, float %2205, i32 3
  %2207 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2185, <4 x float> %2206, <4 x float> %2170)
  %2208 = shufflevector <4 x float> %2166, <4 x float> %2207, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2209 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2210 = getelementptr inbounds i8, i8* %2209, i64 4
  %2211 = bitcast i8* %2210 to float*
  %2212 = load float, float* %2211, align 4
  %2213 = insertelement <4 x float> zeroinitializer, float %2212, i32 0
  %2214 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2215 = getelementptr inbounds i8, i8* %2214, i64 8
  %2216 = bitcast i8* %2215 to float*
  %2217 = load float, float* %2216, align 4
  %2218 = insertelement <4 x float> %2213, float %2217, i32 1
  %2219 = insertelement <4 x float> %2218, float 0.000000e+00, i32 2
  %2220 = insertelement <4 x float> %2219, float 0.000000e+00, i32 3
  %2221 = insertelement <4 x float> zeroinitializer, float %100, i32 0
  %2222 = insertelement <4 x float> %2221, float %100, i32 1
  %2223 = insertelement <4 x float> %2222, float 1.000000e+00, i32 2
  %2224 = insertelement <4 x float> %2223, float 1.000000e+00, i32 3
  %2225 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2226 = bitcast i8* %2225 to float*
  %2227 = load float, float* %2226, align 4
  %2228 = fcmp olt float %2227, 0.000000e+00
  %2229 = sext i1 %2228 to i32
  %2230 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2231 = bitcast i8* %2230 to float*
  %2232 = load float, float* %2231, align 4
  %2233 = fcmp ogt float %2232, 0.000000e+00
  %2234 = zext i1 %2233 to i32
  %2235 = add nsw i32 %2229, %2234
  %2236 = sitofp i32 %2235 to float
  %2237 = insertelement <4 x float> zeroinitializer, float %2236, i32 0
  %2238 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2239 = bitcast i8* %2238 to float*
  %2240 = load float, float* %2239, align 4
  %2241 = fcmp olt float %2240, 0.000000e+00
  %2242 = sext i1 %2241 to i32
  %2243 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2244 = bitcast i8* %2243 to float*
  %2245 = load float, float* %2244, align 4
  %2246 = fcmp ogt float %2245, 0.000000e+00
  %2247 = zext i1 %2246 to i32
  %2248 = add nsw i32 %2242, %2247
  %2249 = sitofp i32 %2248 to float
  %2250 = insertelement <4 x float> %2237, float %2249, i32 1
  %2251 = insertelement <4 x float> %2250, float 0.000000e+00, i32 2
  %2252 = insertelement <4 x float> %2251, float 0.000000e+00, i32 3
  %2253 = fneg <4 x float> %2252
  %2254 = fmul <4 x float> %2224, %2253
  %2255 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2256 = getelementptr inbounds i8, i8* %2255, i64 4
  %2257 = bitcast i8* %2256 to float*
  %2258 = load float, float* %2257, align 4
  %2259 = insertelement <4 x float> zeroinitializer, float %2258, i32 0
  %2260 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2261 = getelementptr inbounds i8, i8* %2260, i64 8
  %2262 = bitcast i8* %2261 to float*
  %2263 = load float, float* %2262, align 4
  %2264 = insertelement <4 x float> %2259, float %2263, i32 1
  %2265 = insertelement <4 x float> %2264, float 0.000000e+00, i32 2
  %2266 = insertelement <4 x float> %2265, float 0.000000e+00, i32 3
  %2267 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2254, <4 x float> %2266, <4 x float> %2220)
  %2268 = shufflevector <4 x float> %2267, <4 x float> zeroinitializer, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2269 = shufflevector <8 x float> %2208, <8 x float> %2268, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2270 = extractelement <16 x float> %2269, i32 0
  %2271 = getelementptr inbounds float, float* %2, i64 15
  store float %2270, float* %2271, align 4
  %2272 = extractelement <16 x float> %2269, i32 1
  %2273 = fptosi float %2272 to i32
  %2274 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2275 = bitcast i8* %2274 to i32*
  store i32 %2273, i32* %2275, align 4
  %2276 = extractelement <16 x float> %2269, i32 2
  %2277 = fptosi float %2276 to i32
  %2278 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2279 = bitcast i8* %2278 to i32*
  store i32 %2277, i32* %2279, align 4
  %2280 = extractelement <16 x float> %2269, i32 3
  %2281 = fptosi float %2280 to i32
  %2282 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2283 = getelementptr inbounds i8, i8* %2282, i64 4
  %2284 = bitcast i8* %2283 to i32*
  store i32 %2281, i32* %2284, align 4
  %2285 = extractelement <16 x float> %2269, i32 4
  %2286 = fptosi float %2285 to i32
  %2287 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2288 = getelementptr inbounds i8, i8* %2287, i64 4
  %2289 = bitcast i8* %2288 to i32*
  store i32 %2286, i32* %2289, align 4
  %2290 = extractelement <16 x float> %2269, i32 5
  %2291 = fptosi float %2290 to i32
  %2292 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2293 = getelementptr inbounds i8, i8* %2292, i64 8
  %2294 = bitcast i8* %2293 to i32*
  store i32 %2291, i32* %2294, align 4
  %2295 = extractelement <16 x float> %2269, i32 6
  %2296 = fptosi float %2295 to i32
  %2297 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2298 = getelementptr inbounds i8, i8* %2297, i64 8
  %2299 = bitcast i8* %2298 to i32*
  store i32 %2296, i32* %2299, align 4
  %2300 = extractelement <16 x float> %2269, i32 7
  %2301 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2302 = bitcast i8* %2301 to float*
  store float %2300, float* %2302, align 4
  %2303 = extractelement <16 x float> %2269, i32 8
  %2304 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2305 = getelementptr inbounds i8, i8* %2304, i64 4
  %2306 = bitcast i8* %2305 to float*
  store float %2303, float* %2306, align 4
  %2307 = extractelement <16 x float> %2269, i32 9
  %2308 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2309 = getelementptr inbounds i8, i8* %2308, i64 8
  %2310 = bitcast i8* %2309 to float*
  store float %2307, float* %2310, align 4
  %2311 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2312 = bitcast i8* %2311 to float*
  %2313 = load float, float* %2312, align 4
  %2314 = insertelement <4 x float> zeroinitializer, float %2313, i32 0
  %2315 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2316 = getelementptr inbounds i8, i8* %2315, i64 4
  %2317 = bitcast i8* %2316 to float*
  %2318 = load float, float* %2317, align 4
  %2319 = insertelement <4 x float> %2314, float %2318, i32 1
  %2320 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2321 = getelementptr inbounds i8, i8* %2320, i64 8
  %2322 = bitcast i8* %2321 to float*
  %2323 = load float, float* %2322, align 4
  %2324 = insertelement <4 x float> %2319, float %2323, i32 2
  %2325 = insertelement <4 x float> %2324, float 0.000000e+00, i32 3
  %2326 = insertelement <4 x float> zeroinitializer, float %122, i32 0
  %2327 = insertelement <4 x float> %2326, float %122, i32 1
  %2328 = insertelement <4 x float> %2327, float %122, i32 2
  %2329 = insertelement <4 x float> %2328, float 1.000000e+00, i32 3
  %2330 = fdiv <4 x float> %2325, %2329
  %2331 = extractelement <4 x float> %2330, i32 0
  %2332 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2333 = bitcast i8* %2332 to float*
  store float %2331, float* %2333, align 4
  %2334 = extractelement <4 x float> %2330, i32 1
  %2335 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2336 = getelementptr inbounds i8, i8* %2335, i64 4
  %2337 = bitcast i8* %2336 to float*
  store float %2334, float* %2337, align 4
  %2338 = extractelement <4 x float> %2330, i32 2
  %2339 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2340 = getelementptr inbounds i8, i8* %2339, i64 8
  %2341 = bitcast i8* %2340 to float*
  store float %2338, float* %2341, align 4
  %2342 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2343 = bitcast i8* %2342 to float*
  %2344 = load float, float* %2343, align 4
  %2345 = insertelement <4 x float> zeroinitializer, float %2344, i32 0
  %2346 = insertelement <4 x float> %2345, float 1.000000e+00, i32 1
  %2347 = insertelement <4 x float> %2346, float 1.000000e+00, i32 2
  %2348 = insertelement <4 x float> %2347, float 1.000000e+00, i32 3
  %2349 = fmul <4 x float> %2348, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2350 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2351 = bitcast i8* %2350 to float*
  %2352 = load float, float* %2351, align 4
  %2353 = insertelement <4 x float> zeroinitializer, float %2352, i32 0
  %2354 = insertelement <4 x float> %2353, float 0.000000e+00, i32 1
  %2355 = insertelement <4 x float> %2354, float 0.000000e+00, i32 2
  %2356 = insertelement <4 x float> %2355, float 0.000000e+00, i32 3
  %2357 = fmul <4 x float> %2349, %2356
  %2358 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %2357
  %2359 = extractelement <4 x float> %2358, i32 0
  %2360 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2361 = bitcast i8* %2360 to float*
  store float %2359, float* %2361, align 4
  %2362 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2363 = bitcast i8* %2362 to float*
  %2364 = load float, float* %2363, align 4
  %2365 = insertelement <4 x float> zeroinitializer, float %2364, i32 0
  %2366 = insertelement <4 x float> %2365, float 1.000000e+00, i32 1
  %2367 = insertelement <4 x float> %2366, float 1.000000e+00, i32 2
  %2368 = insertelement <4 x float> %2367, float 1.000000e+00, i32 3
  %2369 = fmul <4 x float> %2368, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2370 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2371 = getelementptr inbounds i8, i8* %2370, i64 4
  %2372 = bitcast i8* %2371 to float*
  %2373 = load float, float* %2372, align 4
  %2374 = insertelement <4 x float> zeroinitializer, float %2373, i32 0
  %2375 = insertelement <4 x float> %2374, float 0.000000e+00, i32 1
  %2376 = insertelement <4 x float> %2375, float 0.000000e+00, i32 2
  %2377 = insertelement <4 x float> %2376, float 0.000000e+00, i32 3
  %2378 = fmul <4 x float> %2369, %2377
  %2379 = fsub <4 x float> zeroinitializer, %2378
  %2380 = extractelement <4 x float> %2379, i32 0
  %2381 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2382 = getelementptr inbounds i8, i8* %2381, i64 4
  %2383 = bitcast i8* %2382 to float*
  store float %2380, float* %2383, align 4
  %2384 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2385 = bitcast i8* %2384 to float*
  %2386 = load float, float* %2385, align 4
  %2387 = insertelement <4 x float> zeroinitializer, float %2386, i32 0
  %2388 = insertelement <4 x float> %2387, float 1.000000e+00, i32 1
  %2389 = insertelement <4 x float> %2388, float 1.000000e+00, i32 2
  %2390 = insertelement <4 x float> %2389, float 1.000000e+00, i32 3
  %2391 = fmul <4 x float> %2390, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %2392 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2393 = getelementptr inbounds i8, i8* %2392, i64 8
  %2394 = bitcast i8* %2393 to float*
  %2395 = load float, float* %2394, align 4
  %2396 = insertelement <4 x float> zeroinitializer, float %2395, i32 0
  %2397 = insertelement <4 x float> %2396, float 0.000000e+00, i32 1
  %2398 = insertelement <4 x float> %2397, float 0.000000e+00, i32 2
  %2399 = insertelement <4 x float> %2398, float 0.000000e+00, i32 3
  %2400 = fmul <4 x float> %2391, %2399
  %2401 = fsub <4 x float> zeroinitializer, %2400
  %2402 = extractelement <4 x float> %2401, i32 0
  %2403 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2404 = getelementptr inbounds i8, i8* %2403, i64 8
  %2405 = bitcast i8* %2404 to float*
  store float %2402, float* %2405, align 4
  %2406 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2407 = getelementptr inbounds i8, i8* %2406, i64 4
  %2408 = bitcast i8* %2407 to float*
  %2409 = load float, float* %2408, align 4
  %2410 = insertelement <4 x float> zeroinitializer, float %2409, i32 0
  %2411 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2412 = getelementptr inbounds i8, i8* %2411, i64 4
  %2413 = bitcast i8* %2412 to float*
  %2414 = load float, float* %2413, align 4
  %2415 = insertelement <4 x float> %2410, float %2414, i32 1
  %2416 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2417 = getelementptr inbounds i8, i8* %2416, i64 4
  %2418 = bitcast i8* %2417 to float*
  %2419 = load float, float* %2418, align 4
  %2420 = insertelement <4 x float> %2415, float %2419, i32 2
  %2421 = insertelement <4 x float> %2420, float 1.000000e+00, i32 3
  %2422 = fmul <4 x float> %2421, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 1.000000e+00>
  %2423 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2424 = bitcast i8* %2423 to float*
  %2425 = load float, float* %2424, align 4
  %2426 = insertelement <4 x float> zeroinitializer, float %2425, i32 0
  %2427 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2428 = getelementptr inbounds i8, i8* %2427, i64 4
  %2429 = bitcast i8* %2428 to float*
  %2430 = load float, float* %2429, align 4
  %2431 = insertelement <4 x float> %2426, float %2430, i32 1
  %2432 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2433 = getelementptr inbounds i8, i8* %2432, i64 8
  %2434 = bitcast i8* %2433 to float*
  %2435 = load float, float* %2434, align 4
  %2436 = insertelement <4 x float> %2431, float %2435, i32 2
  %2437 = insertelement <4 x float> %2436, float 0.000000e+00, i32 3
  %2438 = fmul <4 x float> %2422, %2437
  %2439 = fsub <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, %2438
  %2440 = extractelement <4 x float> %2439, i32 0
  %2441 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2442 = getelementptr inbounds i8, i8* %2441, i64 12
  %2443 = bitcast i8* %2442 to float*
  store float %2440, float* %2443, align 4
  %2444 = extractelement <4 x float> %2439, i32 1
  %2445 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2446 = getelementptr inbounds i8, i8* %2445, i64 16
  %2447 = bitcast i8* %2446 to float*
  store float %2444, float* %2447, align 4
  %2448 = extractelement <4 x float> %2439, i32 2
  %2449 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2450 = getelementptr inbounds i8, i8* %2449, i64 20
  %2451 = bitcast i8* %2450 to float*
  store float %2448, float* %2451, align 4
  %2452 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2453 = getelementptr inbounds i8, i8* %2452, i64 8
  %2454 = bitcast i8* %2453 to float*
  %2455 = load float, float* %2454, align 4
  %2456 = fmul float %2455, 2.000000e+00
  %2457 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2458 = bitcast i8* %2457 to float*
  %2459 = load float, float* %2458, align 4
  %2460 = fmul float %2456, %2459
  %2461 = fsub float 0.000000e+00, %2460
  %2462 = insertelement <4 x float> zeroinitializer, float %2461, i32 0
  %2463 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2464 = getelementptr inbounds i8, i8* %2463, i64 8
  %2465 = bitcast i8* %2464 to float*
  %2466 = load float, float* %2465, align 4
  %2467 = fmul float %2466, 2.000000e+00
  %2468 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2469 = getelementptr inbounds i8, i8* %2468, i64 4
  %2470 = bitcast i8* %2469 to float*
  %2471 = load float, float* %2470, align 4
  %2472 = fmul float %2467, %2471
  %2473 = fsub float 0.000000e+00, %2472
  %2474 = insertelement <4 x float> %2462, float %2473, i32 1
  %2475 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2476 = getelementptr inbounds i8, i8* %2475, i64 8
  %2477 = bitcast i8* %2476 to float*
  %2478 = load float, float* %2477, align 4
  %2479 = fmul float %2478, 2.000000e+00
  %2480 = call dereferenceable_or_null(12) i8* @calloc(i64 4, i64 3) #9
  %2481 = getelementptr inbounds i8, i8* %2480, i64 8
  %2482 = bitcast i8* %2481 to float*
  %2483 = load float, float* %2482, align 4
  %2484 = fmul float %2479, %2483
  %2485 = fsub float 1.000000e+00, %2484
  %2486 = insertelement <4 x float> %2474, float %2485, i32 2
  %2487 = insertelement <4 x float> %2486, float 1.000000e+00, i32 3
  %2488 = shufflevector <4 x float> %2487, <4 x float> zeroinitializer, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2489 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2490 = bitcast i8* %2489 to i32*
  %2491 = load i32, i32* %2490, align 4
  %2492 = sitofp i32 %2491 to float
  %2493 = insertelement <4 x float> zeroinitializer, float %2492, i32 0
  %2494 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2495 = getelementptr inbounds i8, i8* %2494, i64 4
  %2496 = bitcast i8* %2495 to i32*
  %2497 = load i32, i32* %2496, align 4
  %2498 = sitofp i32 %2497 to float
  %2499 = insertelement <4 x float> %2493, float %2498, i32 1
  %2500 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2501 = getelementptr inbounds i8, i8* %2500, i64 8
  %2502 = bitcast i8* %2501 to i32*
  %2503 = load i32, i32* %2502, align 4
  %2504 = sitofp i32 %2503 to float
  %2505 = insertelement <4 x float> %2499, float %2504, i32 2
  %2506 = insertelement <4 x float> %2505, float 0.000000e+00, i32 3
  %2507 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2508 = getelementptr inbounds i8, i8* %2507, i64 12
  %2509 = bitcast i8* %2508 to i32*
  %2510 = load i32, i32* %2509, align 4
  %2511 = sitofp i32 %2510 to float
  %2512 = insertelement <4 x float> zeroinitializer, float %2511, i32 0
  %2513 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2514 = getelementptr inbounds i8, i8* %2513, i64 16
  %2515 = bitcast i8* %2514 to i32*
  %2516 = load i32, i32* %2515, align 4
  %2517 = sitofp i32 %2516 to float
  %2518 = insertelement <4 x float> %2512, float %2517, i32 1
  %2519 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2520 = getelementptr inbounds i8, i8* %2519, i64 20
  %2521 = bitcast i8* %2520 to i32*
  %2522 = load i32, i32* %2521, align 4
  %2523 = sitofp i32 %2522 to float
  %2524 = insertelement <4 x float> %2518, float %2523, i32 2
  %2525 = insertelement <4 x float> %2524, float 0.000000e+00, i32 3
  %2526 = shufflevector <4 x float> %2506, <4 x float> %2525, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2527 = shufflevector <8 x float> %2488, <8 x float> %2526, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2528 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2529 = getelementptr inbounds i8, i8* %2528, i64 24
  %2530 = bitcast i8* %2529 to i32*
  %2531 = load i32, i32* %2530, align 4
  %2532 = sitofp i32 %2531 to float
  %2533 = insertelement <4 x float> zeroinitializer, float %2532, i32 0
  %2534 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2535 = getelementptr inbounds i8, i8* %2534, i64 28
  %2536 = bitcast i8* %2535 to i32*
  %2537 = load i32, i32* %2536, align 4
  %2538 = sitofp i32 %2537 to float
  %2539 = insertelement <4 x float> %2533, float %2538, i32 1
  %2540 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2541 = getelementptr inbounds i8, i8* %2540, i64 32
  %2542 = bitcast i8* %2541 to i32*
  %2543 = load i32, i32* %2542, align 4
  %2544 = sitofp i32 %2543 to float
  %2545 = insertelement <4 x float> %2539, float %2544, i32 2
  %2546 = insertelement <4 x float> %2545, float 0.000000e+00, i32 3
  %2547 = shufflevector <4 x float> %2546, <4 x float> zeroinitializer, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %2548 = shufflevector <8 x float> %2547, <8 x float> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %2549 = shufflevector <16 x float> %2527, <16 x float> %2548, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %2550 = extractelement <32 x float> %2549, i32 0
  %2551 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2552 = getelementptr inbounds i8, i8* %2551, i64 24
  %2553 = bitcast i8* %2552 to float*
  store float %2550, float* %2553, align 4
  %2554 = extractelement <32 x float> %2549, i32 1
  %2555 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2556 = getelementptr inbounds i8, i8* %2555, i64 28
  %2557 = bitcast i8* %2556 to float*
  store float %2554, float* %2557, align 4
  %2558 = extractelement <32 x float> %2549, i32 2
  %2559 = call dereferenceable_or_null(36) i8* @calloc(i64 4, i64 9) #9
  %2560 = getelementptr inbounds i8, i8* %2559, i64 32
  %2561 = bitcast i8* %2560 to float*
  store float %2558, float* %2561, align 4
  %2562 = extractelement <32 x float> %2549, i32 3
  %2563 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2564 = bitcast i8* %2563 to float*
  store float %2562, float* %2564, align 4
  %2565 = extractelement <32 x float> %2549, i32 4
  %2566 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2567 = getelementptr inbounds i8, i8* %2566, i64 4
  %2568 = bitcast i8* %2567 to float*
  store float %2565, float* %2568, align 4
  %2569 = extractelement <32 x float> %2549, i32 5
  %2570 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2571 = getelementptr inbounds i8, i8* %2570, i64 8
  %2572 = bitcast i8* %2571 to float*
  store float %2569, float* %2572, align 4
  %2573 = extractelement <32 x float> %2549, i32 6
  %2574 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2575 = getelementptr inbounds i8, i8* %2574, i64 12
  %2576 = bitcast i8* %2575 to float*
  store float %2573, float* %2576, align 4
  %2577 = extractelement <32 x float> %2549, i32 7
  %2578 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2579 = getelementptr inbounds i8, i8* %2578, i64 16
  %2580 = bitcast i8* %2579 to float*
  store float %2577, float* %2580, align 4
  %2581 = extractelement <32 x float> %2549, i32 8
  %2582 = fptosi float %2581 to i32
  %2583 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2584 = getelementptr inbounds i8, i8* %2583, i64 20
  %2585 = bitcast i8* %2584 to i32*
  store i32 %2582, i32* %2585, align 4
  %2586 = extractelement <32 x float> %2549, i32 9
  %2587 = fptosi float %2586 to i32
  %2588 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2589 = getelementptr inbounds i8, i8* %2588, i64 24
  %2590 = bitcast i8* %2589 to i32*
  store i32 %2587, i32* %2590, align 4
  %2591 = extractelement <32 x float> %2549, i32 10
  %2592 = fptosi float %2591 to i32
  %2593 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2594 = getelementptr inbounds i8, i8* %2593, i64 28
  %2595 = bitcast i8* %2594 to i32*
  store i32 %2592, i32* %2595, align 4
  %2596 = extractelement <32 x float> %2549, i32 11
  %2597 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2598 = getelementptr inbounds i8, i8* %2597, i64 32
  %2599 = bitcast i8* %2598 to float*
  store float %2596, float* %2599, align 4
  %2600 = extractelement <32 x float> %2549, i32 12
  %2601 = fptosi float %2600 to i32
  %2602 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2603 = getelementptr inbounds i8, i8* %2602, i64 36
  %2604 = bitcast i8* %2603 to i32*
  store i32 %2601, i32* %2604, align 4
  %2605 = extractelement <32 x float> %2549, i32 13
  %2606 = fptosi float %2605 to i32
  %2607 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2608 = getelementptr inbounds i8, i8* %2607, i64 40
  %2609 = bitcast i8* %2608 to i32*
  store i32 %2606, i32* %2609, align 4
  %2610 = extractelement <32 x float> %2549, i32 14
  %2611 = fptosi float %2610 to i32
  %2612 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2613 = getelementptr inbounds i8, i8* %2612, i64 44
  %2614 = bitcast i8* %2613 to i32*
  store i32 %2611, i32* %2614, align 4
  %2615 = extractelement <32 x float> %2549, i32 15
  %2616 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2617 = getelementptr inbounds i8, i8* %2616, i64 48
  %2618 = bitcast i8* %2617 to float*
  store float %2615, float* %2618, align 4
  %2619 = extractelement <32 x float> %2549, i32 16
  %2620 = fptosi float %2619 to i32
  %2621 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2622 = getelementptr inbounds i8, i8* %2621, i64 52
  %2623 = bitcast i8* %2622 to i32*
  store i32 %2620, i32* %2623, align 4
  %2624 = extractelement <32 x float> %2549, i32 17
  %2625 = fptosi float %2624 to i32
  %2626 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2627 = getelementptr inbounds i8, i8* %2626, i64 56
  %2628 = bitcast i8* %2627 to i32*
  store i32 %2625, i32* %2628, align 4
  %2629 = extractelement <32 x float> %2549, i32 18
  %2630 = fptosi float %2629 to i32
  %2631 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2632 = getelementptr inbounds i8, i8* %2631, i64 60
  %2633 = bitcast i8* %2632 to i32*
  store i32 %2630, i32* %2633, align 4
  %2634 = extractelement <32 x float> %2549, i32 19
  %2635 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2636 = bitcast i8* %2635 to float*
  store float %2634, float* %2636, align 4
  %2637 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2638 = bitcast i8* %2637 to float*
  %2639 = load float, float* %2638, align 4
  %2640 = insertelement <4 x float> zeroinitializer, float %2639, i32 0
  %2641 = insertelement <4 x float> %2640, float 0.000000e+00, i32 1
  %2642 = insertelement <4 x float> %2641, float 0.000000e+00, i32 2
  %2643 = insertelement <4 x float> %2642, float 0.000000e+00, i32 3
  %2644 = load float, float* %1, align 4
  %2645 = insertelement <4 x float> zeroinitializer, float %2644, i32 0
  %2646 = insertelement <4 x float> %2645, float 0.000000e+00, i32 1
  %2647 = insertelement <4 x float> %2646, float 0.000000e+00, i32 2
  %2648 = insertelement <4 x float> %2647, float 0.000000e+00, i32 3
  %2649 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2643, <4 x float> %2648, <4 x float> zeroinitializer)
  %2650 = extractelement <4 x float> %2649, i32 0
  %2651 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2652 = bitcast i8* %2651 to float*
  store float %2650, float* %2652, align 4
  %2653 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2654 = bitcast i8* %2653 to float*
  %2655 = load float, float* %2654, align 4
  %2656 = insertelement <4 x float> zeroinitializer, float %2655, i32 0
  %2657 = insertelement <4 x float> %2656, float 0.000000e+00, i32 1
  %2658 = insertelement <4 x float> %2657, float 0.000000e+00, i32 2
  %2659 = insertelement <4 x float> %2658, float 0.000000e+00, i32 3
  %2660 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2661 = getelementptr inbounds i8, i8* %2660, i64 4
  %2662 = bitcast i8* %2661 to float*
  %2663 = load float, float* %2662, align 4
  %2664 = insertelement <4 x float> zeroinitializer, float %2663, i32 0
  %2665 = insertelement <4 x float> %2664, float 0.000000e+00, i32 1
  %2666 = insertelement <4 x float> %2665, float 0.000000e+00, i32 2
  %2667 = insertelement <4 x float> %2666, float 0.000000e+00, i32 3
  %2668 = getelementptr inbounds float, float* %1, i64 4
  %2669 = load float, float* %2668, align 4
  %2670 = insertelement <4 x float> zeroinitializer, float %2669, i32 0
  %2671 = insertelement <4 x float> %2670, float 0.000000e+00, i32 1
  %2672 = insertelement <4 x float> %2671, float 0.000000e+00, i32 2
  %2673 = insertelement <4 x float> %2672, float 0.000000e+00, i32 3
  %2674 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2667, <4 x float> %2673, <4 x float> %2659)
  %2675 = extractelement <4 x float> %2674, i32 0
  %2676 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2677 = bitcast i8* %2676 to float*
  store float %2675, float* %2677, align 4
  %2678 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2679 = bitcast i8* %2678 to float*
  %2680 = load float, float* %2679, align 4
  %2681 = insertelement <4 x float> zeroinitializer, float %2680, i32 0
  %2682 = insertelement <4 x float> %2681, float 0.000000e+00, i32 1
  %2683 = insertelement <4 x float> %2682, float 0.000000e+00, i32 2
  %2684 = insertelement <4 x float> %2683, float 0.000000e+00, i32 3
  %2685 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2686 = getelementptr inbounds i8, i8* %2685, i64 8
  %2687 = bitcast i8* %2686 to float*
  %2688 = load float, float* %2687, align 4
  %2689 = insertelement <4 x float> zeroinitializer, float %2688, i32 0
  %2690 = insertelement <4 x float> %2689, float 0.000000e+00, i32 1
  %2691 = insertelement <4 x float> %2690, float 0.000000e+00, i32 2
  %2692 = insertelement <4 x float> %2691, float 0.000000e+00, i32 3
  %2693 = getelementptr inbounds float, float* %1, i64 8
  %2694 = load float, float* %2693, align 4
  %2695 = insertelement <4 x float> zeroinitializer, float %2694, i32 0
  %2696 = insertelement <4 x float> %2695, float 0.000000e+00, i32 1
  %2697 = insertelement <4 x float> %2696, float 0.000000e+00, i32 2
  %2698 = insertelement <4 x float> %2697, float 0.000000e+00, i32 3
  %2699 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2692, <4 x float> %2698, <4 x float> %2684)
  %2700 = extractelement <4 x float> %2699, i32 0
  %2701 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2702 = bitcast i8* %2701 to float*
  store float %2700, float* %2702, align 4
  %2703 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2704 = bitcast i8* %2703 to float*
  %2705 = load float, float* %2704, align 4
  %2706 = insertelement <4 x float> zeroinitializer, float %2705, i32 0
  %2707 = insertelement <4 x float> %2706, float 0.000000e+00, i32 1
  %2708 = insertelement <4 x float> %2707, float 0.000000e+00, i32 2
  %2709 = insertelement <4 x float> %2708, float 0.000000e+00, i32 3
  %2710 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2711 = getelementptr inbounds i8, i8* %2710, i64 12
  %2712 = bitcast i8* %2711 to float*
  %2713 = load float, float* %2712, align 4
  %2714 = insertelement <4 x float> zeroinitializer, float %2713, i32 0
  %2715 = insertelement <4 x float> %2714, float 0.000000e+00, i32 1
  %2716 = insertelement <4 x float> %2715, float 0.000000e+00, i32 2
  %2717 = insertelement <4 x float> %2716, float 0.000000e+00, i32 3
  %2718 = getelementptr inbounds float, float* %1, i64 12
  %2719 = load float, float* %2718, align 4
  %2720 = insertelement <4 x float> zeroinitializer, float %2719, i32 0
  %2721 = insertelement <4 x float> %2720, float 0.000000e+00, i32 1
  %2722 = insertelement <4 x float> %2721, float 0.000000e+00, i32 2
  %2723 = insertelement <4 x float> %2722, float 0.000000e+00, i32 3
  %2724 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2717, <4 x float> %2723, <4 x float> %2709)
  %2725 = extractelement <4 x float> %2724, i32 0
  %2726 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2727 = bitcast i8* %2726 to float*
  store float %2725, float* %2727, align 4
  %2728 = extractelement <4 x float> %2724, i32 1
  %2729 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2730 = getelementptr inbounds i8, i8* %2729, i64 4
  %2731 = bitcast i8* %2730 to float*
  store float %2728, float* %2731, align 4
  %2732 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2733 = getelementptr inbounds i8, i8* %2732, i64 4
  %2734 = bitcast i8* %2733 to float*
  %2735 = load float, float* %2734, align 4
  %2736 = insertelement <4 x float> zeroinitializer, float %2735, i32 0
  %2737 = insertelement <4 x float> %2736, float 0.000000e+00, i32 1
  %2738 = insertelement <4 x float> %2737, float 0.000000e+00, i32 2
  %2739 = insertelement <4 x float> %2738, float 0.000000e+00, i32 3
  %2740 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2741 = bitcast i8* %2740 to float*
  %2742 = load float, float* %2741, align 4
  %2743 = insertelement <4 x float> zeroinitializer, float %2742, i32 0
  %2744 = insertelement <4 x float> %2743, float 0.000000e+00, i32 1
  %2745 = insertelement <4 x float> %2744, float 0.000000e+00, i32 2
  %2746 = insertelement <4 x float> %2745, float 0.000000e+00, i32 3
  %2747 = getelementptr inbounds float, float* %1, i64 1
  %2748 = load float, float* %2747, align 4
  %2749 = insertelement <4 x float> zeroinitializer, float %2748, i32 0
  %2750 = insertelement <4 x float> %2749, float 0.000000e+00, i32 1
  %2751 = insertelement <4 x float> %2750, float 0.000000e+00, i32 2
  %2752 = insertelement <4 x float> %2751, float 0.000000e+00, i32 3
  %2753 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2746, <4 x float> %2752, <4 x float> %2739)
  %2754 = extractelement <4 x float> %2753, i32 0
  %2755 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2756 = getelementptr inbounds i8, i8* %2755, i64 4
  %2757 = bitcast i8* %2756 to float*
  store float %2754, float* %2757, align 4
  %2758 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2759 = getelementptr inbounds i8, i8* %2758, i64 4
  %2760 = bitcast i8* %2759 to float*
  %2761 = load float, float* %2760, align 4
  %2762 = insertelement <4 x float> zeroinitializer, float %2761, i32 0
  %2763 = insertelement <4 x float> %2762, float 0.000000e+00, i32 1
  %2764 = insertelement <4 x float> %2763, float 0.000000e+00, i32 2
  %2765 = insertelement <4 x float> %2764, float 0.000000e+00, i32 3
  %2766 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2767 = getelementptr inbounds i8, i8* %2766, i64 4
  %2768 = bitcast i8* %2767 to float*
  %2769 = load float, float* %2768, align 4
  %2770 = insertelement <4 x float> zeroinitializer, float %2769, i32 0
  %2771 = insertelement <4 x float> %2770, float 0.000000e+00, i32 1
  %2772 = insertelement <4 x float> %2771, float 0.000000e+00, i32 2
  %2773 = insertelement <4 x float> %2772, float 0.000000e+00, i32 3
  %2774 = getelementptr inbounds float, float* %1, i64 5
  %2775 = load float, float* %2774, align 4
  %2776 = insertelement <4 x float> zeroinitializer, float %2775, i32 0
  %2777 = insertelement <4 x float> %2776, float 0.000000e+00, i32 1
  %2778 = insertelement <4 x float> %2777, float 0.000000e+00, i32 2
  %2779 = insertelement <4 x float> %2778, float 0.000000e+00, i32 3
  %2780 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2773, <4 x float> %2779, <4 x float> %2765)
  %2781 = extractelement <4 x float> %2780, i32 0
  %2782 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2783 = getelementptr inbounds i8, i8* %2782, i64 4
  %2784 = bitcast i8* %2783 to float*
  store float %2781, float* %2784, align 4
  %2785 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2786 = getelementptr inbounds i8, i8* %2785, i64 4
  %2787 = bitcast i8* %2786 to float*
  %2788 = load float, float* %2787, align 4
  %2789 = insertelement <4 x float> zeroinitializer, float %2788, i32 0
  %2790 = insertelement <4 x float> %2789, float 0.000000e+00, i32 1
  %2791 = insertelement <4 x float> %2790, float 0.000000e+00, i32 2
  %2792 = insertelement <4 x float> %2791, float 0.000000e+00, i32 3
  %2793 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2794 = getelementptr inbounds i8, i8* %2793, i64 8
  %2795 = bitcast i8* %2794 to float*
  %2796 = load float, float* %2795, align 4
  %2797 = insertelement <4 x float> zeroinitializer, float %2796, i32 0
  %2798 = insertelement <4 x float> %2797, float 0.000000e+00, i32 1
  %2799 = insertelement <4 x float> %2798, float 0.000000e+00, i32 2
  %2800 = insertelement <4 x float> %2799, float 0.000000e+00, i32 3
  %2801 = getelementptr inbounds float, float* %1, i64 9
  %2802 = load float, float* %2801, align 4
  %2803 = insertelement <4 x float> zeroinitializer, float %2802, i32 0
  %2804 = insertelement <4 x float> %2803, float 0.000000e+00, i32 1
  %2805 = insertelement <4 x float> %2804, float 0.000000e+00, i32 2
  %2806 = insertelement <4 x float> %2805, float 0.000000e+00, i32 3
  %2807 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2800, <4 x float> %2806, <4 x float> %2792)
  %2808 = extractelement <4 x float> %2807, i32 0
  %2809 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2810 = getelementptr inbounds i8, i8* %2809, i64 4
  %2811 = bitcast i8* %2810 to float*
  store float %2808, float* %2811, align 4
  %2812 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2813 = getelementptr inbounds i8, i8* %2812, i64 4
  %2814 = bitcast i8* %2813 to float*
  %2815 = load float, float* %2814, align 4
  %2816 = insertelement <4 x float> zeroinitializer, float %2815, i32 0
  %2817 = insertelement <4 x float> %2816, float 0.000000e+00, i32 1
  %2818 = insertelement <4 x float> %2817, float 0.000000e+00, i32 2
  %2819 = insertelement <4 x float> %2818, float 0.000000e+00, i32 3
  %2820 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2821 = getelementptr inbounds i8, i8* %2820, i64 12
  %2822 = bitcast i8* %2821 to float*
  %2823 = load float, float* %2822, align 4
  %2824 = insertelement <4 x float> zeroinitializer, float %2823, i32 0
  %2825 = insertelement <4 x float> %2824, float 0.000000e+00, i32 1
  %2826 = insertelement <4 x float> %2825, float 0.000000e+00, i32 2
  %2827 = insertelement <4 x float> %2826, float 0.000000e+00, i32 3
  %2828 = getelementptr inbounds float, float* %1, i64 13
  %2829 = load float, float* %2828, align 4
  %2830 = insertelement <4 x float> zeroinitializer, float %2829, i32 0
  %2831 = insertelement <4 x float> %2830, float 0.000000e+00, i32 1
  %2832 = insertelement <4 x float> %2831, float 0.000000e+00, i32 2
  %2833 = insertelement <4 x float> %2832, float 0.000000e+00, i32 3
  %2834 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2827, <4 x float> %2833, <4 x float> %2819)
  %2835 = extractelement <4 x float> %2834, i32 0
  %2836 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2837 = getelementptr inbounds i8, i8* %2836, i64 4
  %2838 = bitcast i8* %2837 to float*
  store float %2835, float* %2838, align 4
  %2839 = extractelement <4 x float> %2834, i32 1
  %2840 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2841 = getelementptr inbounds i8, i8* %2840, i64 8
  %2842 = bitcast i8* %2841 to float*
  store float %2839, float* %2842, align 4
  %2843 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2844 = getelementptr inbounds i8, i8* %2843, i64 8
  %2845 = bitcast i8* %2844 to float*
  %2846 = load float, float* %2845, align 4
  %2847 = insertelement <4 x float> zeroinitializer, float %2846, i32 0
  %2848 = insertelement <4 x float> %2847, float 0.000000e+00, i32 1
  %2849 = insertelement <4 x float> %2848, float 0.000000e+00, i32 2
  %2850 = insertelement <4 x float> %2849, float 0.000000e+00, i32 3
  %2851 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2852 = bitcast i8* %2851 to float*
  %2853 = load float, float* %2852, align 4
  %2854 = insertelement <4 x float> zeroinitializer, float %2853, i32 0
  %2855 = insertelement <4 x float> %2854, float 0.000000e+00, i32 1
  %2856 = insertelement <4 x float> %2855, float 0.000000e+00, i32 2
  %2857 = insertelement <4 x float> %2856, float 0.000000e+00, i32 3
  %2858 = getelementptr inbounds float, float* %1, i64 2
  %2859 = load float, float* %2858, align 4
  %2860 = insertelement <4 x float> zeroinitializer, float %2859, i32 0
  %2861 = insertelement <4 x float> %2860, float 0.000000e+00, i32 1
  %2862 = insertelement <4 x float> %2861, float 0.000000e+00, i32 2
  %2863 = insertelement <4 x float> %2862, float 0.000000e+00, i32 3
  %2864 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2857, <4 x float> %2863, <4 x float> %2850)
  %2865 = extractelement <4 x float> %2864, i32 0
  %2866 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2867 = getelementptr inbounds i8, i8* %2866, i64 8
  %2868 = bitcast i8* %2867 to float*
  store float %2865, float* %2868, align 4
  %2869 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2870 = getelementptr inbounds i8, i8* %2869, i64 8
  %2871 = bitcast i8* %2870 to float*
  %2872 = load float, float* %2871, align 4
  %2873 = insertelement <4 x float> zeroinitializer, float %2872, i32 0
  %2874 = insertelement <4 x float> %2873, float 0.000000e+00, i32 1
  %2875 = insertelement <4 x float> %2874, float 0.000000e+00, i32 2
  %2876 = insertelement <4 x float> %2875, float 0.000000e+00, i32 3
  %2877 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2878 = getelementptr inbounds i8, i8* %2877, i64 4
  %2879 = bitcast i8* %2878 to float*
  %2880 = load float, float* %2879, align 4
  %2881 = insertelement <4 x float> zeroinitializer, float %2880, i32 0
  %2882 = insertelement <4 x float> %2881, float 0.000000e+00, i32 1
  %2883 = insertelement <4 x float> %2882, float 0.000000e+00, i32 2
  %2884 = insertelement <4 x float> %2883, float 0.000000e+00, i32 3
  %2885 = getelementptr inbounds float, float* %1, i64 6
  %2886 = load float, float* %2885, align 4
  %2887 = insertelement <4 x float> zeroinitializer, float %2886, i32 0
  %2888 = insertelement <4 x float> %2887, float 0.000000e+00, i32 1
  %2889 = insertelement <4 x float> %2888, float 0.000000e+00, i32 2
  %2890 = insertelement <4 x float> %2889, float 0.000000e+00, i32 3
  %2891 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2884, <4 x float> %2890, <4 x float> %2876)
  %2892 = extractelement <4 x float> %2891, i32 0
  %2893 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2894 = getelementptr inbounds i8, i8* %2893, i64 8
  %2895 = bitcast i8* %2894 to float*
  store float %2892, float* %2895, align 4
  %2896 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2897 = getelementptr inbounds i8, i8* %2896, i64 8
  %2898 = bitcast i8* %2897 to float*
  %2899 = load float, float* %2898, align 4
  %2900 = insertelement <4 x float> zeroinitializer, float %2899, i32 0
  %2901 = insertelement <4 x float> %2900, float 0.000000e+00, i32 1
  %2902 = insertelement <4 x float> %2901, float 0.000000e+00, i32 2
  %2903 = insertelement <4 x float> %2902, float 0.000000e+00, i32 3
  %2904 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2905 = getelementptr inbounds i8, i8* %2904, i64 8
  %2906 = bitcast i8* %2905 to float*
  %2907 = load float, float* %2906, align 4
  %2908 = insertelement <4 x float> zeroinitializer, float %2907, i32 0
  %2909 = insertelement <4 x float> %2908, float 0.000000e+00, i32 1
  %2910 = insertelement <4 x float> %2909, float 0.000000e+00, i32 2
  %2911 = insertelement <4 x float> %2910, float 0.000000e+00, i32 3
  %2912 = getelementptr inbounds float, float* %1, i64 10
  %2913 = load float, float* %2912, align 4
  %2914 = insertelement <4 x float> zeroinitializer, float %2913, i32 0
  %2915 = insertelement <4 x float> %2914, float 0.000000e+00, i32 1
  %2916 = insertelement <4 x float> %2915, float 0.000000e+00, i32 2
  %2917 = insertelement <4 x float> %2916, float 0.000000e+00, i32 3
  %2918 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2911, <4 x float> %2917, <4 x float> %2903)
  %2919 = extractelement <4 x float> %2918, i32 0
  %2920 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2921 = getelementptr inbounds i8, i8* %2920, i64 8
  %2922 = bitcast i8* %2921 to float*
  store float %2919, float* %2922, align 4
  %2923 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2924 = getelementptr inbounds i8, i8* %2923, i64 8
  %2925 = bitcast i8* %2924 to float*
  %2926 = load float, float* %2925, align 4
  %2927 = insertelement <4 x float> zeroinitializer, float %2926, i32 0
  %2928 = insertelement <4 x float> %2927, float 0.000000e+00, i32 1
  %2929 = insertelement <4 x float> %2928, float 0.000000e+00, i32 2
  %2930 = insertelement <4 x float> %2929, float 0.000000e+00, i32 3
  %2931 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2932 = getelementptr inbounds i8, i8* %2931, i64 12
  %2933 = bitcast i8* %2932 to float*
  %2934 = load float, float* %2933, align 4
  %2935 = insertelement <4 x float> zeroinitializer, float %2934, i32 0
  %2936 = insertelement <4 x float> %2935, float 0.000000e+00, i32 1
  %2937 = insertelement <4 x float> %2936, float 0.000000e+00, i32 2
  %2938 = insertelement <4 x float> %2937, float 0.000000e+00, i32 3
  %2939 = getelementptr inbounds float, float* %1, i64 14
  %2940 = load float, float* %2939, align 4
  %2941 = insertelement <4 x float> zeroinitializer, float %2940, i32 0
  %2942 = insertelement <4 x float> %2941, float 0.000000e+00, i32 1
  %2943 = insertelement <4 x float> %2942, float 0.000000e+00, i32 2
  %2944 = insertelement <4 x float> %2943, float 0.000000e+00, i32 3
  %2945 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2938, <4 x float> %2944, <4 x float> %2930)
  %2946 = extractelement <4 x float> %2945, i32 0
  %2947 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2948 = getelementptr inbounds i8, i8* %2947, i64 8
  %2949 = bitcast i8* %2948 to float*
  store float %2946, float* %2949, align 4
  %2950 = extractelement <4 x float> %2945, i32 1
  %2951 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2952 = getelementptr inbounds i8, i8* %2951, i64 12
  %2953 = bitcast i8* %2952 to float*
  store float %2950, float* %2953, align 4
  %2954 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2955 = getelementptr inbounds i8, i8* %2954, i64 12
  %2956 = bitcast i8* %2955 to float*
  %2957 = load float, float* %2956, align 4
  %2958 = insertelement <4 x float> zeroinitializer, float %2957, i32 0
  %2959 = insertelement <4 x float> %2958, float 0.000000e+00, i32 1
  %2960 = insertelement <4 x float> %2959, float 0.000000e+00, i32 2
  %2961 = insertelement <4 x float> %2960, float 0.000000e+00, i32 3
  %2962 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2963 = bitcast i8* %2962 to float*
  %2964 = load float, float* %2963, align 4
  %2965 = insertelement <4 x float> zeroinitializer, float %2964, i32 0
  %2966 = insertelement <4 x float> %2965, float 0.000000e+00, i32 1
  %2967 = insertelement <4 x float> %2966, float 0.000000e+00, i32 2
  %2968 = insertelement <4 x float> %2967, float 0.000000e+00, i32 3
  %2969 = getelementptr inbounds float, float* %1, i64 3
  %2970 = load float, float* %2969, align 4
  %2971 = insertelement <4 x float> zeroinitializer, float %2970, i32 0
  %2972 = insertelement <4 x float> %2971, float 0.000000e+00, i32 1
  %2973 = insertelement <4 x float> %2972, float 0.000000e+00, i32 2
  %2974 = insertelement <4 x float> %2973, float 0.000000e+00, i32 3
  %2975 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2968, <4 x float> %2974, <4 x float> %2961)
  %2976 = extractelement <4 x float> %2975, i32 0
  %2977 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2978 = getelementptr inbounds i8, i8* %2977, i64 12
  %2979 = bitcast i8* %2978 to float*
  store float %2976, float* %2979, align 4
  %2980 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2981 = getelementptr inbounds i8, i8* %2980, i64 12
  %2982 = bitcast i8* %2981 to float*
  %2983 = load float, float* %2982, align 4
  %2984 = insertelement <4 x float> zeroinitializer, float %2983, i32 0
  %2985 = insertelement <4 x float> %2984, float 0.000000e+00, i32 1
  %2986 = insertelement <4 x float> %2985, float 0.000000e+00, i32 2
  %2987 = insertelement <4 x float> %2986, float 0.000000e+00, i32 3
  %2988 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %2989 = getelementptr inbounds i8, i8* %2988, i64 4
  %2990 = bitcast i8* %2989 to float*
  %2991 = load float, float* %2990, align 4
  %2992 = insertelement <4 x float> zeroinitializer, float %2991, i32 0
  %2993 = insertelement <4 x float> %2992, float 0.000000e+00, i32 1
  %2994 = insertelement <4 x float> %2993, float 0.000000e+00, i32 2
  %2995 = insertelement <4 x float> %2994, float 0.000000e+00, i32 3
  %2996 = getelementptr inbounds float, float* %1, i64 7
  %2997 = load float, float* %2996, align 4
  %2998 = insertelement <4 x float> zeroinitializer, float %2997, i32 0
  %2999 = insertelement <4 x float> %2998, float 0.000000e+00, i32 1
  %3000 = insertelement <4 x float> %2999, float 0.000000e+00, i32 2
  %3001 = insertelement <4 x float> %3000, float 0.000000e+00, i32 3
  %3002 = call <4 x float> @llvm.fma.v4f32(<4 x float> %2995, <4 x float> %3001, <4 x float> %2987)
  %3003 = extractelement <4 x float> %3002, i32 0
  %3004 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3005 = getelementptr inbounds i8, i8* %3004, i64 12
  %3006 = bitcast i8* %3005 to float*
  store float %3003, float* %3006, align 4
  %3007 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3008 = getelementptr inbounds i8, i8* %3007, i64 12
  %3009 = bitcast i8* %3008 to float*
  %3010 = load float, float* %3009, align 4
  %3011 = insertelement <4 x float> zeroinitializer, float %3010, i32 0
  %3012 = insertelement <4 x float> %3011, float 0.000000e+00, i32 1
  %3013 = insertelement <4 x float> %3012, float 0.000000e+00, i32 2
  %3014 = insertelement <4 x float> %3013, float 0.000000e+00, i32 3
  %3015 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3016 = getelementptr inbounds i8, i8* %3015, i64 8
  %3017 = bitcast i8* %3016 to float*
  %3018 = load float, float* %3017, align 4
  %3019 = insertelement <4 x float> zeroinitializer, float %3018, i32 0
  %3020 = insertelement <4 x float> %3019, float 0.000000e+00, i32 1
  %3021 = insertelement <4 x float> %3020, float 0.000000e+00, i32 2
  %3022 = insertelement <4 x float> %3021, float 0.000000e+00, i32 3
  %3023 = getelementptr inbounds float, float* %1, i64 11
  %3024 = load float, float* %3023, align 4
  %3025 = insertelement <4 x float> zeroinitializer, float %3024, i32 0
  %3026 = insertelement <4 x float> %3025, float 0.000000e+00, i32 1
  %3027 = insertelement <4 x float> %3026, float 0.000000e+00, i32 2
  %3028 = insertelement <4 x float> %3027, float 0.000000e+00, i32 3
  %3029 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3022, <4 x float> %3028, <4 x float> %3014)
  %3030 = extractelement <4 x float> %3029, i32 0
  %3031 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3032 = getelementptr inbounds i8, i8* %3031, i64 12
  %3033 = bitcast i8* %3032 to float*
  store float %3030, float* %3033, align 4
  %3034 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3035 = getelementptr inbounds i8, i8* %3034, i64 12
  %3036 = bitcast i8* %3035 to float*
  %3037 = load float, float* %3036, align 4
  %3038 = insertelement <4 x float> zeroinitializer, float %3037, i32 0
  %3039 = insertelement <4 x float> %3038, float 0.000000e+00, i32 1
  %3040 = insertelement <4 x float> %3039, float 0.000000e+00, i32 2
  %3041 = insertelement <4 x float> %3040, float 0.000000e+00, i32 3
  %3042 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3043 = getelementptr inbounds i8, i8* %3042, i64 12
  %3044 = bitcast i8* %3043 to float*
  %3045 = load float, float* %3044, align 4
  %3046 = insertelement <4 x float> zeroinitializer, float %3045, i32 0
  %3047 = insertelement <4 x float> %3046, float 0.000000e+00, i32 1
  %3048 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3049 = getelementptr inbounds i8, i8* %3048, i64 16
  %3050 = bitcast i8* %3049 to float*
  %3051 = load float, float* %3050, align 4
  %3052 = insertelement <4 x float> %3047, float %3051, i32 2
  %3053 = insertelement <4 x float> %3052, float 0.000000e+00, i32 3
  %3054 = getelementptr inbounds float, float* %1, i64 15
  %3055 = load float, float* %3054, align 4
  %3056 = insertelement <4 x float> zeroinitializer, float %3055, i32 0
  %3057 = insertelement <4 x float> %3056, float 0.000000e+00, i32 1
  %3058 = load float, float* %1, align 4
  %3059 = insertelement <4 x float> %3057, float %3058, i32 2
  %3060 = insertelement <4 x float> %3059, float 0.000000e+00, i32 3
  %3061 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3053, <4 x float> %3060, <4 x float> %3041)
  %3062 = extractelement <4 x float> %3061, i32 0
  %3063 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3064 = getelementptr inbounds i8, i8* %3063, i64 12
  %3065 = bitcast i8* %3064 to float*
  store float %3062, float* %3065, align 4
  %3066 = extractelement <4 x float> %3061, i32 1
  %3067 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3068 = getelementptr inbounds i8, i8* %3067, i64 16
  %3069 = bitcast i8* %3068 to float*
  store float %3066, float* %3069, align 4
  %3070 = extractelement <4 x float> %3061, i32 2
  %3071 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3072 = getelementptr inbounds i8, i8* %3071, i64 16
  %3073 = bitcast i8* %3072 to float*
  store float %3070, float* %3073, align 4
  %3074 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3075 = getelementptr inbounds i8, i8* %3074, i64 16
  %3076 = bitcast i8* %3075 to float*
  %3077 = load float, float* %3076, align 4
  %3078 = insertelement <4 x float> zeroinitializer, float %3077, i32 0
  %3079 = insertelement <4 x float> %3078, float 0.000000e+00, i32 1
  %3080 = insertelement <4 x float> %3079, float 0.000000e+00, i32 2
  %3081 = insertelement <4 x float> %3080, float 0.000000e+00, i32 3
  %3082 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3083 = getelementptr inbounds i8, i8* %3082, i64 20
  %3084 = bitcast i8* %3083 to float*
  %3085 = load float, float* %3084, align 4
  %3086 = insertelement <4 x float> zeroinitializer, float %3085, i32 0
  %3087 = insertelement <4 x float> %3086, float 0.000000e+00, i32 1
  %3088 = insertelement <4 x float> %3087, float 0.000000e+00, i32 2
  %3089 = insertelement <4 x float> %3088, float 0.000000e+00, i32 3
  %3090 = getelementptr inbounds float, float* %1, i64 4
  %3091 = load float, float* %3090, align 4
  %3092 = insertelement <4 x float> zeroinitializer, float %3091, i32 0
  %3093 = insertelement <4 x float> %3092, float 0.000000e+00, i32 1
  %3094 = insertelement <4 x float> %3093, float 0.000000e+00, i32 2
  %3095 = insertelement <4 x float> %3094, float 0.000000e+00, i32 3
  %3096 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3089, <4 x float> %3095, <4 x float> %3081)
  %3097 = extractelement <4 x float> %3096, i32 0
  %3098 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3099 = getelementptr inbounds i8, i8* %3098, i64 16
  %3100 = bitcast i8* %3099 to float*
  store float %3097, float* %3100, align 4
  %3101 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3102 = getelementptr inbounds i8, i8* %3101, i64 16
  %3103 = bitcast i8* %3102 to float*
  %3104 = load float, float* %3103, align 4
  %3105 = insertelement <4 x float> zeroinitializer, float %3104, i32 0
  %3106 = insertelement <4 x float> %3105, float 0.000000e+00, i32 1
  %3107 = insertelement <4 x float> %3106, float 0.000000e+00, i32 2
  %3108 = insertelement <4 x float> %3107, float 0.000000e+00, i32 3
  %3109 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3110 = getelementptr inbounds i8, i8* %3109, i64 24
  %3111 = bitcast i8* %3110 to float*
  %3112 = load float, float* %3111, align 4
  %3113 = insertelement <4 x float> zeroinitializer, float %3112, i32 0
  %3114 = insertelement <4 x float> %3113, float 0.000000e+00, i32 1
  %3115 = insertelement <4 x float> %3114, float 0.000000e+00, i32 2
  %3116 = insertelement <4 x float> %3115, float 0.000000e+00, i32 3
  %3117 = getelementptr inbounds float, float* %1, i64 8
  %3118 = load float, float* %3117, align 4
  %3119 = insertelement <4 x float> zeroinitializer, float %3118, i32 0
  %3120 = insertelement <4 x float> %3119, float 0.000000e+00, i32 1
  %3121 = insertelement <4 x float> %3120, float 0.000000e+00, i32 2
  %3122 = insertelement <4 x float> %3121, float 0.000000e+00, i32 3
  %3123 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3116, <4 x float> %3122, <4 x float> %3108)
  %3124 = extractelement <4 x float> %3123, i32 0
  %3125 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3126 = getelementptr inbounds i8, i8* %3125, i64 16
  %3127 = bitcast i8* %3126 to float*
  store float %3124, float* %3127, align 4
  %3128 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3129 = getelementptr inbounds i8, i8* %3128, i64 16
  %3130 = bitcast i8* %3129 to float*
  %3131 = load float, float* %3130, align 4
  %3132 = insertelement <4 x float> zeroinitializer, float %3131, i32 0
  %3133 = insertelement <4 x float> %3132, float 0.000000e+00, i32 1
  %3134 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3135 = getelementptr inbounds i8, i8* %3134, i64 20
  %3136 = bitcast i8* %3135 to float*
  %3137 = load float, float* %3136, align 4
  %3138 = insertelement <4 x float> %3133, float %3137, i32 2
  %3139 = insertelement <4 x float> %3138, float 0.000000e+00, i32 3
  %3140 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3141 = getelementptr inbounds i8, i8* %3140, i64 28
  %3142 = bitcast i8* %3141 to float*
  %3143 = load float, float* %3142, align 4
  %3144 = insertelement <4 x float> zeroinitializer, float %3143, i32 0
  %3145 = insertelement <4 x float> %3144, float 0.000000e+00, i32 1
  %3146 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3147 = getelementptr inbounds i8, i8* %3146, i64 16
  %3148 = bitcast i8* %3147 to float*
  %3149 = load float, float* %3148, align 4
  %3150 = insertelement <4 x float> %3145, float %3149, i32 2
  %3151 = insertelement <4 x float> %3150, float 0.000000e+00, i32 3
  %3152 = getelementptr inbounds float, float* %1, i64 12
  %3153 = load float, float* %3152, align 4
  %3154 = insertelement <4 x float> zeroinitializer, float %3153, i32 0
  %3155 = insertelement <4 x float> %3154, float 0.000000e+00, i32 1
  %3156 = getelementptr inbounds float, float* %1, i64 1
  %3157 = load float, float* %3156, align 4
  %3158 = insertelement <4 x float> %3155, float %3157, i32 2
  %3159 = insertelement <4 x float> %3158, float 0.000000e+00, i32 3
  %3160 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3151, <4 x float> %3159, <4 x float> %3139)
  %3161 = extractelement <4 x float> %3160, i32 0
  %3162 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3163 = getelementptr inbounds i8, i8* %3162, i64 16
  %3164 = bitcast i8* %3163 to float*
  store float %3161, float* %3164, align 4
  %3165 = extractelement <4 x float> %3160, i32 1
  %3166 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3167 = getelementptr inbounds i8, i8* %3166, i64 20
  %3168 = bitcast i8* %3167 to float*
  store float %3165, float* %3168, align 4
  %3169 = extractelement <4 x float> %3160, i32 2
  %3170 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3171 = getelementptr inbounds i8, i8* %3170, i64 20
  %3172 = bitcast i8* %3171 to float*
  store float %3169, float* %3172, align 4
  %3173 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3174 = getelementptr inbounds i8, i8* %3173, i64 20
  %3175 = bitcast i8* %3174 to float*
  %3176 = load float, float* %3175, align 4
  %3177 = insertelement <4 x float> zeroinitializer, float %3176, i32 0
  %3178 = insertelement <4 x float> %3177, float 0.000000e+00, i32 1
  %3179 = insertelement <4 x float> %3178, float 0.000000e+00, i32 2
  %3180 = insertelement <4 x float> %3179, float 0.000000e+00, i32 3
  %3181 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3182 = getelementptr inbounds i8, i8* %3181, i64 20
  %3183 = bitcast i8* %3182 to float*
  %3184 = load float, float* %3183, align 4
  %3185 = insertelement <4 x float> zeroinitializer, float %3184, i32 0
  %3186 = insertelement <4 x float> %3185, float 0.000000e+00, i32 1
  %3187 = insertelement <4 x float> %3186, float 0.000000e+00, i32 2
  %3188 = insertelement <4 x float> %3187, float 0.000000e+00, i32 3
  %3189 = getelementptr inbounds float, float* %1, i64 5
  %3190 = load float, float* %3189, align 4
  %3191 = insertelement <4 x float> zeroinitializer, float %3190, i32 0
  %3192 = insertelement <4 x float> %3191, float 0.000000e+00, i32 1
  %3193 = insertelement <4 x float> %3192, float 0.000000e+00, i32 2
  %3194 = insertelement <4 x float> %3193, float 0.000000e+00, i32 3
  %3195 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3188, <4 x float> %3194, <4 x float> %3180)
  %3196 = extractelement <4 x float> %3195, i32 0
  %3197 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3198 = getelementptr inbounds i8, i8* %3197, i64 20
  %3199 = bitcast i8* %3198 to float*
  store float %3196, float* %3199, align 4
  %3200 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3201 = getelementptr inbounds i8, i8* %3200, i64 20
  %3202 = bitcast i8* %3201 to float*
  %3203 = load float, float* %3202, align 4
  %3204 = insertelement <4 x float> zeroinitializer, float %3203, i32 0
  %3205 = insertelement <4 x float> %3204, float 0.000000e+00, i32 1
  %3206 = insertelement <4 x float> %3205, float 0.000000e+00, i32 2
  %3207 = insertelement <4 x float> %3206, float 0.000000e+00, i32 3
  %3208 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3209 = getelementptr inbounds i8, i8* %3208, i64 24
  %3210 = bitcast i8* %3209 to float*
  %3211 = load float, float* %3210, align 4
  %3212 = insertelement <4 x float> zeroinitializer, float %3211, i32 0
  %3213 = insertelement <4 x float> %3212, float 0.000000e+00, i32 1
  %3214 = insertelement <4 x float> %3213, float 0.000000e+00, i32 2
  %3215 = insertelement <4 x float> %3214, float 0.000000e+00, i32 3
  %3216 = getelementptr inbounds float, float* %1, i64 9
  %3217 = load float, float* %3216, align 4
  %3218 = insertelement <4 x float> zeroinitializer, float %3217, i32 0
  %3219 = insertelement <4 x float> %3218, float 0.000000e+00, i32 1
  %3220 = insertelement <4 x float> %3219, float 0.000000e+00, i32 2
  %3221 = insertelement <4 x float> %3220, float 0.000000e+00, i32 3
  %3222 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3215, <4 x float> %3221, <4 x float> %3207)
  %3223 = extractelement <4 x float> %3222, i32 0
  %3224 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3225 = getelementptr inbounds i8, i8* %3224, i64 20
  %3226 = bitcast i8* %3225 to float*
  store float %3223, float* %3226, align 4
  %3227 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3228 = getelementptr inbounds i8, i8* %3227, i64 20
  %3229 = bitcast i8* %3228 to float*
  %3230 = load float, float* %3229, align 4
  %3231 = insertelement <4 x float> zeroinitializer, float %3230, i32 0
  %3232 = insertelement <4 x float> %3231, float 0.000000e+00, i32 1
  %3233 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3234 = getelementptr inbounds i8, i8* %3233, i64 24
  %3235 = bitcast i8* %3234 to float*
  %3236 = load float, float* %3235, align 4
  %3237 = insertelement <4 x float> %3232, float %3236, i32 2
  %3238 = insertelement <4 x float> %3237, float 0.000000e+00, i32 3
  %3239 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3240 = getelementptr inbounds i8, i8* %3239, i64 28
  %3241 = bitcast i8* %3240 to float*
  %3242 = load float, float* %3241, align 4
  %3243 = insertelement <4 x float> zeroinitializer, float %3242, i32 0
  %3244 = insertelement <4 x float> %3243, float 0.000000e+00, i32 1
  %3245 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3246 = getelementptr inbounds i8, i8* %3245, i64 16
  %3247 = bitcast i8* %3246 to float*
  %3248 = load float, float* %3247, align 4
  %3249 = insertelement <4 x float> %3244, float %3248, i32 2
  %3250 = insertelement <4 x float> %3249, float 0.000000e+00, i32 3
  %3251 = getelementptr inbounds float, float* %1, i64 13
  %3252 = load float, float* %3251, align 4
  %3253 = insertelement <4 x float> zeroinitializer, float %3252, i32 0
  %3254 = insertelement <4 x float> %3253, float 0.000000e+00, i32 1
  %3255 = getelementptr inbounds float, float* %1, i64 2
  %3256 = load float, float* %3255, align 4
  %3257 = insertelement <4 x float> %3254, float %3256, i32 2
  %3258 = insertelement <4 x float> %3257, float 0.000000e+00, i32 3
  %3259 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3250, <4 x float> %3258, <4 x float> %3238)
  %3260 = extractelement <4 x float> %3259, i32 0
  %3261 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3262 = getelementptr inbounds i8, i8* %3261, i64 20
  %3263 = bitcast i8* %3262 to float*
  store float %3260, float* %3263, align 4
  %3264 = extractelement <4 x float> %3259, i32 1
  %3265 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3266 = getelementptr inbounds i8, i8* %3265, i64 24
  %3267 = bitcast i8* %3266 to float*
  store float %3264, float* %3267, align 4
  %3268 = extractelement <4 x float> %3259, i32 2
  %3269 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3270 = getelementptr inbounds i8, i8* %3269, i64 24
  %3271 = bitcast i8* %3270 to float*
  store float %3268, float* %3271, align 4
  %3272 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3273 = getelementptr inbounds i8, i8* %3272, i64 24
  %3274 = bitcast i8* %3273 to float*
  %3275 = load float, float* %3274, align 4
  %3276 = insertelement <4 x float> zeroinitializer, float %3275, i32 0
  %3277 = insertelement <4 x float> %3276, float 0.000000e+00, i32 1
  %3278 = insertelement <4 x float> %3277, float 0.000000e+00, i32 2
  %3279 = insertelement <4 x float> %3278, float 0.000000e+00, i32 3
  %3280 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3281 = getelementptr inbounds i8, i8* %3280, i64 20
  %3282 = bitcast i8* %3281 to float*
  %3283 = load float, float* %3282, align 4
  %3284 = insertelement <4 x float> zeroinitializer, float %3283, i32 0
  %3285 = insertelement <4 x float> %3284, float 0.000000e+00, i32 1
  %3286 = insertelement <4 x float> %3285, float 0.000000e+00, i32 2
  %3287 = insertelement <4 x float> %3286, float 0.000000e+00, i32 3
  %3288 = getelementptr inbounds float, float* %1, i64 6
  %3289 = load float, float* %3288, align 4
  %3290 = insertelement <4 x float> zeroinitializer, float %3289, i32 0
  %3291 = insertelement <4 x float> %3290, float 0.000000e+00, i32 1
  %3292 = insertelement <4 x float> %3291, float 0.000000e+00, i32 2
  %3293 = insertelement <4 x float> %3292, float 0.000000e+00, i32 3
  %3294 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3287, <4 x float> %3293, <4 x float> %3279)
  %3295 = extractelement <4 x float> %3294, i32 0
  %3296 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3297 = getelementptr inbounds i8, i8* %3296, i64 24
  %3298 = bitcast i8* %3297 to float*
  store float %3295, float* %3298, align 4
  %3299 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3300 = getelementptr inbounds i8, i8* %3299, i64 24
  %3301 = bitcast i8* %3300 to float*
  %3302 = load float, float* %3301, align 4
  %3303 = insertelement <4 x float> zeroinitializer, float %3302, i32 0
  %3304 = insertelement <4 x float> %3303, float 0.000000e+00, i32 1
  %3305 = insertelement <4 x float> %3304, float 0.000000e+00, i32 2
  %3306 = insertelement <4 x float> %3305, float 0.000000e+00, i32 3
  %3307 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3308 = getelementptr inbounds i8, i8* %3307, i64 24
  %3309 = bitcast i8* %3308 to float*
  %3310 = load float, float* %3309, align 4
  %3311 = insertelement <4 x float> zeroinitializer, float %3310, i32 0
  %3312 = insertelement <4 x float> %3311, float 0.000000e+00, i32 1
  %3313 = insertelement <4 x float> %3312, float 0.000000e+00, i32 2
  %3314 = insertelement <4 x float> %3313, float 0.000000e+00, i32 3
  %3315 = getelementptr inbounds float, float* %1, i64 10
  %3316 = load float, float* %3315, align 4
  %3317 = insertelement <4 x float> zeroinitializer, float %3316, i32 0
  %3318 = insertelement <4 x float> %3317, float 0.000000e+00, i32 1
  %3319 = insertelement <4 x float> %3318, float 0.000000e+00, i32 2
  %3320 = insertelement <4 x float> %3319, float 0.000000e+00, i32 3
  %3321 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3314, <4 x float> %3320, <4 x float> %3306)
  %3322 = extractelement <4 x float> %3321, i32 0
  %3323 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3324 = getelementptr inbounds i8, i8* %3323, i64 24
  %3325 = bitcast i8* %3324 to float*
  store float %3322, float* %3325, align 4
  %3326 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3327 = getelementptr inbounds i8, i8* %3326, i64 24
  %3328 = bitcast i8* %3327 to float*
  %3329 = load float, float* %3328, align 4
  %3330 = insertelement <4 x float> zeroinitializer, float %3329, i32 0
  %3331 = insertelement <4 x float> %3330, float 0.000000e+00, i32 1
  %3332 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3333 = getelementptr inbounds i8, i8* %3332, i64 28
  %3334 = bitcast i8* %3333 to float*
  %3335 = load float, float* %3334, align 4
  %3336 = insertelement <4 x float> %3331, float %3335, i32 2
  %3337 = insertelement <4 x float> %3336, float 0.000000e+00, i32 3
  %3338 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3339 = getelementptr inbounds i8, i8* %3338, i64 28
  %3340 = bitcast i8* %3339 to float*
  %3341 = load float, float* %3340, align 4
  %3342 = insertelement <4 x float> zeroinitializer, float %3341, i32 0
  %3343 = insertelement <4 x float> %3342, float 0.000000e+00, i32 1
  %3344 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3345 = getelementptr inbounds i8, i8* %3344, i64 16
  %3346 = bitcast i8* %3345 to float*
  %3347 = load float, float* %3346, align 4
  %3348 = insertelement <4 x float> %3343, float %3347, i32 2
  %3349 = insertelement <4 x float> %3348, float 0.000000e+00, i32 3
  %3350 = getelementptr inbounds float, float* %1, i64 14
  %3351 = load float, float* %3350, align 4
  %3352 = insertelement <4 x float> zeroinitializer, float %3351, i32 0
  %3353 = insertelement <4 x float> %3352, float 0.000000e+00, i32 1
  %3354 = getelementptr inbounds float, float* %1, i64 3
  %3355 = load float, float* %3354, align 4
  %3356 = insertelement <4 x float> %3353, float %3355, i32 2
  %3357 = insertelement <4 x float> %3356, float 0.000000e+00, i32 3
  %3358 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3349, <4 x float> %3357, <4 x float> %3337)
  %3359 = extractelement <4 x float> %3358, i32 0
  %3360 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3361 = getelementptr inbounds i8, i8* %3360, i64 24
  %3362 = bitcast i8* %3361 to float*
  store float %3359, float* %3362, align 4
  %3363 = extractelement <4 x float> %3358, i32 1
  %3364 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3365 = getelementptr inbounds i8, i8* %3364, i64 28
  %3366 = bitcast i8* %3365 to float*
  store float %3363, float* %3366, align 4
  %3367 = extractelement <4 x float> %3358, i32 2
  %3368 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3369 = getelementptr inbounds i8, i8* %3368, i64 28
  %3370 = bitcast i8* %3369 to float*
  store float %3367, float* %3370, align 4
  %3371 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3372 = getelementptr inbounds i8, i8* %3371, i64 28
  %3373 = bitcast i8* %3372 to float*
  %3374 = load float, float* %3373, align 4
  %3375 = insertelement <4 x float> zeroinitializer, float %3374, i32 0
  %3376 = insertelement <4 x float> %3375, float 0.000000e+00, i32 1
  %3377 = insertelement <4 x float> %3376, float 0.000000e+00, i32 2
  %3378 = insertelement <4 x float> %3377, float 0.000000e+00, i32 3
  %3379 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3380 = getelementptr inbounds i8, i8* %3379, i64 20
  %3381 = bitcast i8* %3380 to float*
  %3382 = load float, float* %3381, align 4
  %3383 = insertelement <4 x float> zeroinitializer, float %3382, i32 0
  %3384 = insertelement <4 x float> %3383, float 0.000000e+00, i32 1
  %3385 = insertelement <4 x float> %3384, float 0.000000e+00, i32 2
  %3386 = insertelement <4 x float> %3385, float 0.000000e+00, i32 3
  %3387 = getelementptr inbounds float, float* %1, i64 7
  %3388 = load float, float* %3387, align 4
  %3389 = insertelement <4 x float> zeroinitializer, float %3388, i32 0
  %3390 = insertelement <4 x float> %3389, float 0.000000e+00, i32 1
  %3391 = insertelement <4 x float> %3390, float 0.000000e+00, i32 2
  %3392 = insertelement <4 x float> %3391, float 0.000000e+00, i32 3
  %3393 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3386, <4 x float> %3392, <4 x float> %3378)
  %3394 = extractelement <4 x float> %3393, i32 0
  %3395 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3396 = getelementptr inbounds i8, i8* %3395, i64 28
  %3397 = bitcast i8* %3396 to float*
  store float %3394, float* %3397, align 4
  %3398 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3399 = getelementptr inbounds i8, i8* %3398, i64 28
  %3400 = bitcast i8* %3399 to float*
  %3401 = load float, float* %3400, align 4
  %3402 = insertelement <4 x float> zeroinitializer, float %3401, i32 0
  %3403 = insertelement <4 x float> %3402, float 0.000000e+00, i32 1
  %3404 = insertelement <4 x float> %3403, float 0.000000e+00, i32 2
  %3405 = insertelement <4 x float> %3404, float 0.000000e+00, i32 3
  %3406 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3407 = getelementptr inbounds i8, i8* %3406, i64 24
  %3408 = bitcast i8* %3407 to float*
  %3409 = load float, float* %3408, align 4
  %3410 = insertelement <4 x float> zeroinitializer, float %3409, i32 0
  %3411 = insertelement <4 x float> %3410, float 0.000000e+00, i32 1
  %3412 = insertelement <4 x float> %3411, float 0.000000e+00, i32 2
  %3413 = insertelement <4 x float> %3412, float 0.000000e+00, i32 3
  %3414 = getelementptr inbounds float, float* %1, i64 11
  %3415 = load float, float* %3414, align 4
  %3416 = insertelement <4 x float> zeroinitializer, float %3415, i32 0
  %3417 = insertelement <4 x float> %3416, float 0.000000e+00, i32 1
  %3418 = insertelement <4 x float> %3417, float 0.000000e+00, i32 2
  %3419 = insertelement <4 x float> %3418, float 0.000000e+00, i32 3
  %3420 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3413, <4 x float> %3419, <4 x float> %3405)
  %3421 = extractelement <4 x float> %3420, i32 0
  %3422 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3423 = getelementptr inbounds i8, i8* %3422, i64 28
  %3424 = bitcast i8* %3423 to float*
  store float %3421, float* %3424, align 4
  %3425 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3426 = getelementptr inbounds i8, i8* %3425, i64 28
  %3427 = bitcast i8* %3426 to float*
  %3428 = load float, float* %3427, align 4
  %3429 = insertelement <4 x float> zeroinitializer, float %3428, i32 0
  %3430 = insertelement <4 x float> %3429, float 0.000000e+00, i32 1
  %3431 = insertelement <4 x float> %3430, float 0.000000e+00, i32 2
  %3432 = insertelement <4 x float> %3431, float 0.000000e+00, i32 3
  %3433 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3434 = getelementptr inbounds i8, i8* %3433, i64 28
  %3435 = bitcast i8* %3434 to float*
  %3436 = load float, float* %3435, align 4
  %3437 = insertelement <4 x float> zeroinitializer, float %3436, i32 0
  %3438 = insertelement <4 x float> %3437, float 0.000000e+00, i32 1
  %3439 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3440 = getelementptr inbounds i8, i8* %3439, i64 32
  %3441 = bitcast i8* %3440 to float*
  %3442 = load float, float* %3441, align 4
  %3443 = insertelement <4 x float> %3438, float %3442, i32 2
  %3444 = insertelement <4 x float> %3443, float 0.000000e+00, i32 3
  %3445 = getelementptr inbounds float, float* %1, i64 15
  %3446 = load float, float* %3445, align 4
  %3447 = insertelement <4 x float> zeroinitializer, float %3446, i32 0
  %3448 = insertelement <4 x float> %3447, float 0.000000e+00, i32 1
  %3449 = load float, float* %1, align 4
  %3450 = insertelement <4 x float> %3448, float %3449, i32 2
  %3451 = insertelement <4 x float> %3450, float 0.000000e+00, i32 3
  %3452 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3444, <4 x float> %3451, <4 x float> %3432)
  %3453 = extractelement <4 x float> %3452, i32 0
  %3454 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3455 = getelementptr inbounds i8, i8* %3454, i64 28
  %3456 = bitcast i8* %3455 to float*
  store float %3453, float* %3456, align 4
  %3457 = extractelement <4 x float> %3452, i32 1
  %3458 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3459 = getelementptr inbounds i8, i8* %3458, i64 32
  %3460 = bitcast i8* %3459 to float*
  store float %3457, float* %3460, align 4
  %3461 = extractelement <4 x float> %3452, i32 2
  %3462 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3463 = getelementptr inbounds i8, i8* %3462, i64 32
  %3464 = bitcast i8* %3463 to float*
  store float %3461, float* %3464, align 4
  %3465 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3466 = getelementptr inbounds i8, i8* %3465, i64 32
  %3467 = bitcast i8* %3466 to float*
  %3468 = load float, float* %3467, align 4
  %3469 = insertelement <4 x float> zeroinitializer, float %3468, i32 0
  %3470 = insertelement <4 x float> %3469, float 0.000000e+00, i32 1
  %3471 = insertelement <4 x float> %3470, float 0.000000e+00, i32 2
  %3472 = insertelement <4 x float> %3471, float 0.000000e+00, i32 3
  %3473 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3474 = getelementptr inbounds i8, i8* %3473, i64 36
  %3475 = bitcast i8* %3474 to float*
  %3476 = load float, float* %3475, align 4
  %3477 = insertelement <4 x float> zeroinitializer, float %3476, i32 0
  %3478 = insertelement <4 x float> %3477, float 0.000000e+00, i32 1
  %3479 = insertelement <4 x float> %3478, float 0.000000e+00, i32 2
  %3480 = insertelement <4 x float> %3479, float 0.000000e+00, i32 3
  %3481 = getelementptr inbounds float, float* %1, i64 4
  %3482 = load float, float* %3481, align 4
  %3483 = insertelement <4 x float> zeroinitializer, float %3482, i32 0
  %3484 = insertelement <4 x float> %3483, float 0.000000e+00, i32 1
  %3485 = insertelement <4 x float> %3484, float 0.000000e+00, i32 2
  %3486 = insertelement <4 x float> %3485, float 0.000000e+00, i32 3
  %3487 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3480, <4 x float> %3486, <4 x float> %3472)
  %3488 = extractelement <4 x float> %3487, i32 0
  %3489 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3490 = getelementptr inbounds i8, i8* %3489, i64 32
  %3491 = bitcast i8* %3490 to float*
  store float %3488, float* %3491, align 4
  %3492 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3493 = getelementptr inbounds i8, i8* %3492, i64 32
  %3494 = bitcast i8* %3493 to float*
  %3495 = load float, float* %3494, align 4
  %3496 = insertelement <4 x float> zeroinitializer, float %3495, i32 0
  %3497 = insertelement <4 x float> %3496, float 0.000000e+00, i32 1
  %3498 = insertelement <4 x float> %3497, float 0.000000e+00, i32 2
  %3499 = insertelement <4 x float> %3498, float 0.000000e+00, i32 3
  %3500 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3501 = getelementptr inbounds i8, i8* %3500, i64 40
  %3502 = bitcast i8* %3501 to float*
  %3503 = load float, float* %3502, align 4
  %3504 = insertelement <4 x float> zeroinitializer, float %3503, i32 0
  %3505 = insertelement <4 x float> %3504, float 0.000000e+00, i32 1
  %3506 = insertelement <4 x float> %3505, float 0.000000e+00, i32 2
  %3507 = insertelement <4 x float> %3506, float 0.000000e+00, i32 3
  %3508 = getelementptr inbounds float, float* %1, i64 8
  %3509 = load float, float* %3508, align 4
  %3510 = insertelement <4 x float> zeroinitializer, float %3509, i32 0
  %3511 = insertelement <4 x float> %3510, float 0.000000e+00, i32 1
  %3512 = insertelement <4 x float> %3511, float 0.000000e+00, i32 2
  %3513 = insertelement <4 x float> %3512, float 0.000000e+00, i32 3
  %3514 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3507, <4 x float> %3513, <4 x float> %3499)
  %3515 = extractelement <4 x float> %3514, i32 0
  %3516 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3517 = getelementptr inbounds i8, i8* %3516, i64 32
  %3518 = bitcast i8* %3517 to float*
  store float %3515, float* %3518, align 4
  %3519 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3520 = getelementptr inbounds i8, i8* %3519, i64 32
  %3521 = bitcast i8* %3520 to float*
  %3522 = load float, float* %3521, align 4
  %3523 = insertelement <4 x float> zeroinitializer, float %3522, i32 0
  %3524 = insertelement <4 x float> %3523, float 0.000000e+00, i32 1
  %3525 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3526 = getelementptr inbounds i8, i8* %3525, i64 36
  %3527 = bitcast i8* %3526 to float*
  %3528 = load float, float* %3527, align 4
  %3529 = insertelement <4 x float> %3524, float %3528, i32 2
  %3530 = insertelement <4 x float> %3529, float 0.000000e+00, i32 3
  %3531 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3532 = getelementptr inbounds i8, i8* %3531, i64 44
  %3533 = bitcast i8* %3532 to float*
  %3534 = load float, float* %3533, align 4
  %3535 = insertelement <4 x float> zeroinitializer, float %3534, i32 0
  %3536 = insertelement <4 x float> %3535, float 0.000000e+00, i32 1
  %3537 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3538 = getelementptr inbounds i8, i8* %3537, i64 32
  %3539 = bitcast i8* %3538 to float*
  %3540 = load float, float* %3539, align 4
  %3541 = insertelement <4 x float> %3536, float %3540, i32 2
  %3542 = insertelement <4 x float> %3541, float 0.000000e+00, i32 3
  %3543 = getelementptr inbounds float, float* %1, i64 12
  %3544 = load float, float* %3543, align 4
  %3545 = insertelement <4 x float> zeroinitializer, float %3544, i32 0
  %3546 = insertelement <4 x float> %3545, float 0.000000e+00, i32 1
  %3547 = getelementptr inbounds float, float* %1, i64 1
  %3548 = load float, float* %3547, align 4
  %3549 = insertelement <4 x float> %3546, float %3548, i32 2
  %3550 = insertelement <4 x float> %3549, float 0.000000e+00, i32 3
  %3551 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3542, <4 x float> %3550, <4 x float> %3530)
  %3552 = extractelement <4 x float> %3551, i32 0
  %3553 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3554 = getelementptr inbounds i8, i8* %3553, i64 32
  %3555 = bitcast i8* %3554 to float*
  store float %3552, float* %3555, align 4
  %3556 = extractelement <4 x float> %3551, i32 1
  %3557 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3558 = getelementptr inbounds i8, i8* %3557, i64 36
  %3559 = bitcast i8* %3558 to float*
  store float %3556, float* %3559, align 4
  %3560 = extractelement <4 x float> %3551, i32 2
  %3561 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3562 = getelementptr inbounds i8, i8* %3561, i64 36
  %3563 = bitcast i8* %3562 to float*
  store float %3560, float* %3563, align 4
  %3564 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3565 = getelementptr inbounds i8, i8* %3564, i64 36
  %3566 = bitcast i8* %3565 to float*
  %3567 = load float, float* %3566, align 4
  %3568 = insertelement <4 x float> zeroinitializer, float %3567, i32 0
  %3569 = insertelement <4 x float> %3568, float 0.000000e+00, i32 1
  %3570 = insertelement <4 x float> %3569, float 0.000000e+00, i32 2
  %3571 = insertelement <4 x float> %3570, float 0.000000e+00, i32 3
  %3572 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3573 = getelementptr inbounds i8, i8* %3572, i64 36
  %3574 = bitcast i8* %3573 to float*
  %3575 = load float, float* %3574, align 4
  %3576 = insertelement <4 x float> zeroinitializer, float %3575, i32 0
  %3577 = insertelement <4 x float> %3576, float 0.000000e+00, i32 1
  %3578 = insertelement <4 x float> %3577, float 0.000000e+00, i32 2
  %3579 = insertelement <4 x float> %3578, float 0.000000e+00, i32 3
  %3580 = getelementptr inbounds float, float* %1, i64 5
  %3581 = load float, float* %3580, align 4
  %3582 = insertelement <4 x float> zeroinitializer, float %3581, i32 0
  %3583 = insertelement <4 x float> %3582, float 0.000000e+00, i32 1
  %3584 = insertelement <4 x float> %3583, float 0.000000e+00, i32 2
  %3585 = insertelement <4 x float> %3584, float 0.000000e+00, i32 3
  %3586 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3579, <4 x float> %3585, <4 x float> %3571)
  %3587 = extractelement <4 x float> %3586, i32 0
  %3588 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3589 = getelementptr inbounds i8, i8* %3588, i64 36
  %3590 = bitcast i8* %3589 to float*
  store float %3587, float* %3590, align 4
  %3591 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3592 = getelementptr inbounds i8, i8* %3591, i64 36
  %3593 = bitcast i8* %3592 to float*
  %3594 = load float, float* %3593, align 4
  %3595 = insertelement <4 x float> zeroinitializer, float %3594, i32 0
  %3596 = insertelement <4 x float> %3595, float 0.000000e+00, i32 1
  %3597 = insertelement <4 x float> %3596, float 0.000000e+00, i32 2
  %3598 = insertelement <4 x float> %3597, float 0.000000e+00, i32 3
  %3599 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3600 = getelementptr inbounds i8, i8* %3599, i64 40
  %3601 = bitcast i8* %3600 to float*
  %3602 = load float, float* %3601, align 4
  %3603 = insertelement <4 x float> zeroinitializer, float %3602, i32 0
  %3604 = insertelement <4 x float> %3603, float 0.000000e+00, i32 1
  %3605 = insertelement <4 x float> %3604, float 0.000000e+00, i32 2
  %3606 = insertelement <4 x float> %3605, float 0.000000e+00, i32 3
  %3607 = getelementptr inbounds float, float* %1, i64 9
  %3608 = load float, float* %3607, align 4
  %3609 = insertelement <4 x float> zeroinitializer, float %3608, i32 0
  %3610 = insertelement <4 x float> %3609, float 0.000000e+00, i32 1
  %3611 = insertelement <4 x float> %3610, float 0.000000e+00, i32 2
  %3612 = insertelement <4 x float> %3611, float 0.000000e+00, i32 3
  %3613 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3606, <4 x float> %3612, <4 x float> %3598)
  %3614 = extractelement <4 x float> %3613, i32 0
  %3615 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3616 = getelementptr inbounds i8, i8* %3615, i64 36
  %3617 = bitcast i8* %3616 to float*
  store float %3614, float* %3617, align 4
  %3618 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3619 = getelementptr inbounds i8, i8* %3618, i64 36
  %3620 = bitcast i8* %3619 to float*
  %3621 = load float, float* %3620, align 4
  %3622 = insertelement <4 x float> zeroinitializer, float %3621, i32 0
  %3623 = insertelement <4 x float> %3622, float 0.000000e+00, i32 1
  %3624 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3625 = getelementptr inbounds i8, i8* %3624, i64 40
  %3626 = bitcast i8* %3625 to float*
  %3627 = load float, float* %3626, align 4
  %3628 = insertelement <4 x float> %3623, float %3627, i32 2
  %3629 = insertelement <4 x float> %3628, float 0.000000e+00, i32 3
  %3630 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3631 = getelementptr inbounds i8, i8* %3630, i64 44
  %3632 = bitcast i8* %3631 to float*
  %3633 = load float, float* %3632, align 4
  %3634 = insertelement <4 x float> zeroinitializer, float %3633, i32 0
  %3635 = insertelement <4 x float> %3634, float 0.000000e+00, i32 1
  %3636 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3637 = getelementptr inbounds i8, i8* %3636, i64 32
  %3638 = bitcast i8* %3637 to float*
  %3639 = load float, float* %3638, align 4
  %3640 = insertelement <4 x float> %3635, float %3639, i32 2
  %3641 = insertelement <4 x float> %3640, float 0.000000e+00, i32 3
  %3642 = getelementptr inbounds float, float* %1, i64 13
  %3643 = load float, float* %3642, align 4
  %3644 = insertelement <4 x float> zeroinitializer, float %3643, i32 0
  %3645 = insertelement <4 x float> %3644, float 0.000000e+00, i32 1
  %3646 = getelementptr inbounds float, float* %1, i64 2
  %3647 = load float, float* %3646, align 4
  %3648 = insertelement <4 x float> %3645, float %3647, i32 2
  %3649 = insertelement <4 x float> %3648, float 0.000000e+00, i32 3
  %3650 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3641, <4 x float> %3649, <4 x float> %3629)
  %3651 = extractelement <4 x float> %3650, i32 0
  %3652 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3653 = getelementptr inbounds i8, i8* %3652, i64 36
  %3654 = bitcast i8* %3653 to float*
  store float %3651, float* %3654, align 4
  %3655 = extractelement <4 x float> %3650, i32 1
  %3656 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3657 = getelementptr inbounds i8, i8* %3656, i64 40
  %3658 = bitcast i8* %3657 to float*
  store float %3655, float* %3658, align 4
  %3659 = extractelement <4 x float> %3650, i32 2
  %3660 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3661 = getelementptr inbounds i8, i8* %3660, i64 40
  %3662 = bitcast i8* %3661 to float*
  store float %3659, float* %3662, align 4
  %3663 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3664 = getelementptr inbounds i8, i8* %3663, i64 40
  %3665 = bitcast i8* %3664 to float*
  %3666 = load float, float* %3665, align 4
  %3667 = insertelement <4 x float> zeroinitializer, float %3666, i32 0
  %3668 = insertelement <4 x float> %3667, float 0.000000e+00, i32 1
  %3669 = insertelement <4 x float> %3668, float 0.000000e+00, i32 2
  %3670 = insertelement <4 x float> %3669, float 0.000000e+00, i32 3
  %3671 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3672 = getelementptr inbounds i8, i8* %3671, i64 36
  %3673 = bitcast i8* %3672 to float*
  %3674 = load float, float* %3673, align 4
  %3675 = insertelement <4 x float> zeroinitializer, float %3674, i32 0
  %3676 = insertelement <4 x float> %3675, float 0.000000e+00, i32 1
  %3677 = insertelement <4 x float> %3676, float 0.000000e+00, i32 2
  %3678 = insertelement <4 x float> %3677, float 0.000000e+00, i32 3
  %3679 = getelementptr inbounds float, float* %1, i64 6
  %3680 = load float, float* %3679, align 4
  %3681 = insertelement <4 x float> zeroinitializer, float %3680, i32 0
  %3682 = insertelement <4 x float> %3681, float 0.000000e+00, i32 1
  %3683 = insertelement <4 x float> %3682, float 0.000000e+00, i32 2
  %3684 = insertelement <4 x float> %3683, float 0.000000e+00, i32 3
  %3685 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3678, <4 x float> %3684, <4 x float> %3670)
  %3686 = extractelement <4 x float> %3685, i32 0
  %3687 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3688 = getelementptr inbounds i8, i8* %3687, i64 40
  %3689 = bitcast i8* %3688 to float*
  store float %3686, float* %3689, align 4
  %3690 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3691 = getelementptr inbounds i8, i8* %3690, i64 40
  %3692 = bitcast i8* %3691 to float*
  %3693 = load float, float* %3692, align 4
  %3694 = insertelement <4 x float> zeroinitializer, float %3693, i32 0
  %3695 = insertelement <4 x float> %3694, float 0.000000e+00, i32 1
  %3696 = insertelement <4 x float> %3695, float 0.000000e+00, i32 2
  %3697 = insertelement <4 x float> %3696, float 0.000000e+00, i32 3
  %3698 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3699 = getelementptr inbounds i8, i8* %3698, i64 40
  %3700 = bitcast i8* %3699 to float*
  %3701 = load float, float* %3700, align 4
  %3702 = insertelement <4 x float> zeroinitializer, float %3701, i32 0
  %3703 = insertelement <4 x float> %3702, float 0.000000e+00, i32 1
  %3704 = insertelement <4 x float> %3703, float 0.000000e+00, i32 2
  %3705 = insertelement <4 x float> %3704, float 0.000000e+00, i32 3
  %3706 = getelementptr inbounds float, float* %1, i64 10
  %3707 = load float, float* %3706, align 4
  %3708 = insertelement <4 x float> zeroinitializer, float %3707, i32 0
  %3709 = insertelement <4 x float> %3708, float 0.000000e+00, i32 1
  %3710 = insertelement <4 x float> %3709, float 0.000000e+00, i32 2
  %3711 = insertelement <4 x float> %3710, float 0.000000e+00, i32 3
  %3712 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3705, <4 x float> %3711, <4 x float> %3697)
  %3713 = extractelement <4 x float> %3712, i32 0
  %3714 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3715 = getelementptr inbounds i8, i8* %3714, i64 40
  %3716 = bitcast i8* %3715 to float*
  store float %3713, float* %3716, align 4
  %3717 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3718 = getelementptr inbounds i8, i8* %3717, i64 40
  %3719 = bitcast i8* %3718 to float*
  %3720 = load float, float* %3719, align 4
  %3721 = insertelement <4 x float> zeroinitializer, float %3720, i32 0
  %3722 = insertelement <4 x float> %3721, float 0.000000e+00, i32 1
  %3723 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3724 = getelementptr inbounds i8, i8* %3723, i64 44
  %3725 = bitcast i8* %3724 to float*
  %3726 = load float, float* %3725, align 4
  %3727 = insertelement <4 x float> %3722, float %3726, i32 2
  %3728 = insertelement <4 x float> %3727, float 0.000000e+00, i32 3
  %3729 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3730 = getelementptr inbounds i8, i8* %3729, i64 44
  %3731 = bitcast i8* %3730 to float*
  %3732 = load float, float* %3731, align 4
  %3733 = insertelement <4 x float> zeroinitializer, float %3732, i32 0
  %3734 = insertelement <4 x float> %3733, float 0.000000e+00, i32 1
  %3735 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3736 = getelementptr inbounds i8, i8* %3735, i64 32
  %3737 = bitcast i8* %3736 to float*
  %3738 = load float, float* %3737, align 4
  %3739 = insertelement <4 x float> %3734, float %3738, i32 2
  %3740 = insertelement <4 x float> %3739, float 0.000000e+00, i32 3
  %3741 = getelementptr inbounds float, float* %1, i64 14
  %3742 = load float, float* %3741, align 4
  %3743 = insertelement <4 x float> zeroinitializer, float %3742, i32 0
  %3744 = insertelement <4 x float> %3743, float 0.000000e+00, i32 1
  %3745 = getelementptr inbounds float, float* %1, i64 3
  %3746 = load float, float* %3745, align 4
  %3747 = insertelement <4 x float> %3744, float %3746, i32 2
  %3748 = insertelement <4 x float> %3747, float 0.000000e+00, i32 3
  %3749 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3740, <4 x float> %3748, <4 x float> %3728)
  %3750 = extractelement <4 x float> %3749, i32 0
  %3751 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3752 = getelementptr inbounds i8, i8* %3751, i64 40
  %3753 = bitcast i8* %3752 to float*
  store float %3750, float* %3753, align 4
  %3754 = extractelement <4 x float> %3749, i32 1
  %3755 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3756 = getelementptr inbounds i8, i8* %3755, i64 44
  %3757 = bitcast i8* %3756 to float*
  store float %3754, float* %3757, align 4
  %3758 = extractelement <4 x float> %3749, i32 2
  %3759 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3760 = getelementptr inbounds i8, i8* %3759, i64 44
  %3761 = bitcast i8* %3760 to float*
  store float %3758, float* %3761, align 4
  %3762 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3763 = getelementptr inbounds i8, i8* %3762, i64 44
  %3764 = bitcast i8* %3763 to float*
  %3765 = load float, float* %3764, align 4
  %3766 = insertelement <4 x float> zeroinitializer, float %3765, i32 0
  %3767 = insertelement <4 x float> %3766, float 0.000000e+00, i32 1
  %3768 = insertelement <4 x float> %3767, float 0.000000e+00, i32 2
  %3769 = insertelement <4 x float> %3768, float 0.000000e+00, i32 3
  %3770 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3771 = getelementptr inbounds i8, i8* %3770, i64 36
  %3772 = bitcast i8* %3771 to float*
  %3773 = load float, float* %3772, align 4
  %3774 = insertelement <4 x float> zeroinitializer, float %3773, i32 0
  %3775 = insertelement <4 x float> %3774, float 0.000000e+00, i32 1
  %3776 = insertelement <4 x float> %3775, float 0.000000e+00, i32 2
  %3777 = insertelement <4 x float> %3776, float 0.000000e+00, i32 3
  %3778 = getelementptr inbounds float, float* %1, i64 7
  %3779 = load float, float* %3778, align 4
  %3780 = insertelement <4 x float> zeroinitializer, float %3779, i32 0
  %3781 = insertelement <4 x float> %3780, float 0.000000e+00, i32 1
  %3782 = insertelement <4 x float> %3781, float 0.000000e+00, i32 2
  %3783 = insertelement <4 x float> %3782, float 0.000000e+00, i32 3
  %3784 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3777, <4 x float> %3783, <4 x float> %3769)
  %3785 = extractelement <4 x float> %3784, i32 0
  %3786 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3787 = getelementptr inbounds i8, i8* %3786, i64 44
  %3788 = bitcast i8* %3787 to float*
  store float %3785, float* %3788, align 4
  %3789 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3790 = getelementptr inbounds i8, i8* %3789, i64 44
  %3791 = bitcast i8* %3790 to float*
  %3792 = load float, float* %3791, align 4
  %3793 = insertelement <4 x float> zeroinitializer, float %3792, i32 0
  %3794 = insertelement <4 x float> %3793, float 0.000000e+00, i32 1
  %3795 = insertelement <4 x float> %3794, float 0.000000e+00, i32 2
  %3796 = insertelement <4 x float> %3795, float 0.000000e+00, i32 3
  %3797 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3798 = getelementptr inbounds i8, i8* %3797, i64 40
  %3799 = bitcast i8* %3798 to float*
  %3800 = load float, float* %3799, align 4
  %3801 = insertelement <4 x float> zeroinitializer, float %3800, i32 0
  %3802 = insertelement <4 x float> %3801, float 0.000000e+00, i32 1
  %3803 = insertelement <4 x float> %3802, float 0.000000e+00, i32 2
  %3804 = insertelement <4 x float> %3803, float 0.000000e+00, i32 3
  %3805 = getelementptr inbounds float, float* %1, i64 11
  %3806 = load float, float* %3805, align 4
  %3807 = insertelement <4 x float> zeroinitializer, float %3806, i32 0
  %3808 = insertelement <4 x float> %3807, float 0.000000e+00, i32 1
  %3809 = insertelement <4 x float> %3808, float 0.000000e+00, i32 2
  %3810 = insertelement <4 x float> %3809, float 0.000000e+00, i32 3
  %3811 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3804, <4 x float> %3810, <4 x float> %3796)
  %3812 = extractelement <4 x float> %3811, i32 0
  %3813 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3814 = getelementptr inbounds i8, i8* %3813, i64 44
  %3815 = bitcast i8* %3814 to float*
  store float %3812, float* %3815, align 4
  %3816 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3817 = getelementptr inbounds i8, i8* %3816, i64 44
  %3818 = bitcast i8* %3817 to float*
  %3819 = load float, float* %3818, align 4
  %3820 = insertelement <4 x float> zeroinitializer, float %3819, i32 0
  %3821 = insertelement <4 x float> %3820, float 0.000000e+00, i32 1
  %3822 = insertelement <4 x float> %3821, float 0.000000e+00, i32 2
  %3823 = insertelement <4 x float> %3822, float 0.000000e+00, i32 3
  %3824 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3825 = getelementptr inbounds i8, i8* %3824, i64 44
  %3826 = bitcast i8* %3825 to float*
  %3827 = load float, float* %3826, align 4
  %3828 = insertelement <4 x float> zeroinitializer, float %3827, i32 0
  %3829 = insertelement <4 x float> %3828, float 0.000000e+00, i32 1
  %3830 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3831 = getelementptr inbounds i8, i8* %3830, i64 48
  %3832 = bitcast i8* %3831 to float*
  %3833 = load float, float* %3832, align 4
  %3834 = insertelement <4 x float> %3829, float %3833, i32 2
  %3835 = insertelement <4 x float> %3834, float 0.000000e+00, i32 3
  %3836 = getelementptr inbounds float, float* %1, i64 15
  %3837 = load float, float* %3836, align 4
  %3838 = insertelement <4 x float> zeroinitializer, float %3837, i32 0
  %3839 = insertelement <4 x float> %3838, float 0.000000e+00, i32 1
  %3840 = load float, float* %1, align 4
  %3841 = insertelement <4 x float> %3839, float %3840, i32 2
  %3842 = insertelement <4 x float> %3841, float 0.000000e+00, i32 3
  %3843 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3835, <4 x float> %3842, <4 x float> %3823)
  %3844 = extractelement <4 x float> %3843, i32 0
  %3845 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3846 = getelementptr inbounds i8, i8* %3845, i64 44
  %3847 = bitcast i8* %3846 to float*
  store float %3844, float* %3847, align 4
  %3848 = extractelement <4 x float> %3843, i32 1
  %3849 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3850 = getelementptr inbounds i8, i8* %3849, i64 48
  %3851 = bitcast i8* %3850 to float*
  store float %3848, float* %3851, align 4
  %3852 = extractelement <4 x float> %3843, i32 2
  %3853 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3854 = getelementptr inbounds i8, i8* %3853, i64 48
  %3855 = bitcast i8* %3854 to float*
  store float %3852, float* %3855, align 4
  %3856 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3857 = getelementptr inbounds i8, i8* %3856, i64 48
  %3858 = bitcast i8* %3857 to float*
  %3859 = load float, float* %3858, align 4
  %3860 = insertelement <4 x float> zeroinitializer, float %3859, i32 0
  %3861 = insertelement <4 x float> %3860, float 0.000000e+00, i32 1
  %3862 = insertelement <4 x float> %3861, float 0.000000e+00, i32 2
  %3863 = insertelement <4 x float> %3862, float 0.000000e+00, i32 3
  %3864 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3865 = getelementptr inbounds i8, i8* %3864, i64 52
  %3866 = bitcast i8* %3865 to float*
  %3867 = load float, float* %3866, align 4
  %3868 = insertelement <4 x float> zeroinitializer, float %3867, i32 0
  %3869 = insertelement <4 x float> %3868, float 0.000000e+00, i32 1
  %3870 = insertelement <4 x float> %3869, float 0.000000e+00, i32 2
  %3871 = insertelement <4 x float> %3870, float 0.000000e+00, i32 3
  %3872 = getelementptr inbounds float, float* %1, i64 4
  %3873 = load float, float* %3872, align 4
  %3874 = insertelement <4 x float> zeroinitializer, float %3873, i32 0
  %3875 = insertelement <4 x float> %3874, float 0.000000e+00, i32 1
  %3876 = insertelement <4 x float> %3875, float 0.000000e+00, i32 2
  %3877 = insertelement <4 x float> %3876, float 0.000000e+00, i32 3
  %3878 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3871, <4 x float> %3877, <4 x float> %3863)
  %3879 = extractelement <4 x float> %3878, i32 0
  %3880 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3881 = getelementptr inbounds i8, i8* %3880, i64 48
  %3882 = bitcast i8* %3881 to float*
  store float %3879, float* %3882, align 4
  %3883 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3884 = getelementptr inbounds i8, i8* %3883, i64 48
  %3885 = bitcast i8* %3884 to float*
  %3886 = load float, float* %3885, align 4
  %3887 = insertelement <4 x float> zeroinitializer, float %3886, i32 0
  %3888 = insertelement <4 x float> %3887, float 0.000000e+00, i32 1
  %3889 = insertelement <4 x float> %3888, float 0.000000e+00, i32 2
  %3890 = insertelement <4 x float> %3889, float 0.000000e+00, i32 3
  %3891 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3892 = getelementptr inbounds i8, i8* %3891, i64 56
  %3893 = bitcast i8* %3892 to float*
  %3894 = load float, float* %3893, align 4
  %3895 = insertelement <4 x float> zeroinitializer, float %3894, i32 0
  %3896 = insertelement <4 x float> %3895, float 0.000000e+00, i32 1
  %3897 = insertelement <4 x float> %3896, float 0.000000e+00, i32 2
  %3898 = insertelement <4 x float> %3897, float 0.000000e+00, i32 3
  %3899 = getelementptr inbounds float, float* %1, i64 8
  %3900 = load float, float* %3899, align 4
  %3901 = insertelement <4 x float> zeroinitializer, float %3900, i32 0
  %3902 = insertelement <4 x float> %3901, float 0.000000e+00, i32 1
  %3903 = insertelement <4 x float> %3902, float 0.000000e+00, i32 2
  %3904 = insertelement <4 x float> %3903, float 0.000000e+00, i32 3
  %3905 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3898, <4 x float> %3904, <4 x float> %3890)
  %3906 = extractelement <4 x float> %3905, i32 0
  %3907 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3908 = getelementptr inbounds i8, i8* %3907, i64 48
  %3909 = bitcast i8* %3908 to float*
  store float %3906, float* %3909, align 4
  %3910 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3911 = getelementptr inbounds i8, i8* %3910, i64 48
  %3912 = bitcast i8* %3911 to float*
  %3913 = load float, float* %3912, align 4
  %3914 = insertelement <4 x float> zeroinitializer, float %3913, i32 0
  %3915 = insertelement <4 x float> %3914, float 0.000000e+00, i32 1
  %3916 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3917 = getelementptr inbounds i8, i8* %3916, i64 52
  %3918 = bitcast i8* %3917 to float*
  %3919 = load float, float* %3918, align 4
  %3920 = insertelement <4 x float> %3915, float %3919, i32 2
  %3921 = insertelement <4 x float> %3920, float 0.000000e+00, i32 3
  %3922 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3923 = getelementptr inbounds i8, i8* %3922, i64 60
  %3924 = bitcast i8* %3923 to float*
  %3925 = load float, float* %3924, align 4
  %3926 = insertelement <4 x float> zeroinitializer, float %3925, i32 0
  %3927 = insertelement <4 x float> %3926, float 0.000000e+00, i32 1
  %3928 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3929 = getelementptr inbounds i8, i8* %3928, i64 48
  %3930 = bitcast i8* %3929 to float*
  %3931 = load float, float* %3930, align 4
  %3932 = insertelement <4 x float> %3927, float %3931, i32 2
  %3933 = insertelement <4 x float> %3932, float 0.000000e+00, i32 3
  %3934 = getelementptr inbounds float, float* %1, i64 12
  %3935 = load float, float* %3934, align 4
  %3936 = insertelement <4 x float> zeroinitializer, float %3935, i32 0
  %3937 = insertelement <4 x float> %3936, float 0.000000e+00, i32 1
  %3938 = getelementptr inbounds float, float* %1, i64 1
  %3939 = load float, float* %3938, align 4
  %3940 = insertelement <4 x float> %3937, float %3939, i32 2
  %3941 = insertelement <4 x float> %3940, float 0.000000e+00, i32 3
  %3942 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3933, <4 x float> %3941, <4 x float> %3921)
  %3943 = extractelement <4 x float> %3942, i32 0
  %3944 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3945 = getelementptr inbounds i8, i8* %3944, i64 48
  %3946 = bitcast i8* %3945 to float*
  store float %3943, float* %3946, align 4
  %3947 = extractelement <4 x float> %3942, i32 1
  %3948 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3949 = getelementptr inbounds i8, i8* %3948, i64 52
  %3950 = bitcast i8* %3949 to float*
  store float %3947, float* %3950, align 4
  %3951 = extractelement <4 x float> %3942, i32 2
  %3952 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3953 = getelementptr inbounds i8, i8* %3952, i64 52
  %3954 = bitcast i8* %3953 to float*
  store float %3951, float* %3954, align 4
  %3955 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3956 = getelementptr inbounds i8, i8* %3955, i64 52
  %3957 = bitcast i8* %3956 to float*
  %3958 = load float, float* %3957, align 4
  %3959 = insertelement <4 x float> zeroinitializer, float %3958, i32 0
  %3960 = insertelement <4 x float> %3959, float 0.000000e+00, i32 1
  %3961 = insertelement <4 x float> %3960, float 0.000000e+00, i32 2
  %3962 = insertelement <4 x float> %3961, float 0.000000e+00, i32 3
  %3963 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3964 = getelementptr inbounds i8, i8* %3963, i64 52
  %3965 = bitcast i8* %3964 to float*
  %3966 = load float, float* %3965, align 4
  %3967 = insertelement <4 x float> zeroinitializer, float %3966, i32 0
  %3968 = insertelement <4 x float> %3967, float 0.000000e+00, i32 1
  %3969 = insertelement <4 x float> %3968, float 0.000000e+00, i32 2
  %3970 = insertelement <4 x float> %3969, float 0.000000e+00, i32 3
  %3971 = getelementptr inbounds float, float* %1, i64 5
  %3972 = load float, float* %3971, align 4
  %3973 = insertelement <4 x float> zeroinitializer, float %3972, i32 0
  %3974 = insertelement <4 x float> %3973, float 0.000000e+00, i32 1
  %3975 = insertelement <4 x float> %3974, float 0.000000e+00, i32 2
  %3976 = insertelement <4 x float> %3975, float 0.000000e+00, i32 3
  %3977 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3970, <4 x float> %3976, <4 x float> %3962)
  %3978 = extractelement <4 x float> %3977, i32 0
  %3979 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3980 = getelementptr inbounds i8, i8* %3979, i64 52
  %3981 = bitcast i8* %3980 to float*
  store float %3978, float* %3981, align 4
  %3982 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3983 = getelementptr inbounds i8, i8* %3982, i64 52
  %3984 = bitcast i8* %3983 to float*
  %3985 = load float, float* %3984, align 4
  %3986 = insertelement <4 x float> zeroinitializer, float %3985, i32 0
  %3987 = insertelement <4 x float> %3986, float 0.000000e+00, i32 1
  %3988 = insertelement <4 x float> %3987, float 0.000000e+00, i32 2
  %3989 = insertelement <4 x float> %3988, float 0.000000e+00, i32 3
  %3990 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %3991 = getelementptr inbounds i8, i8* %3990, i64 56
  %3992 = bitcast i8* %3991 to float*
  %3993 = load float, float* %3992, align 4
  %3994 = insertelement <4 x float> zeroinitializer, float %3993, i32 0
  %3995 = insertelement <4 x float> %3994, float 0.000000e+00, i32 1
  %3996 = insertelement <4 x float> %3995, float 0.000000e+00, i32 2
  %3997 = insertelement <4 x float> %3996, float 0.000000e+00, i32 3
  %3998 = getelementptr inbounds float, float* %1, i64 9
  %3999 = load float, float* %3998, align 4
  %4000 = insertelement <4 x float> zeroinitializer, float %3999, i32 0
  %4001 = insertelement <4 x float> %4000, float 0.000000e+00, i32 1
  %4002 = insertelement <4 x float> %4001, float 0.000000e+00, i32 2
  %4003 = insertelement <4 x float> %4002, float 0.000000e+00, i32 3
  %4004 = call <4 x float> @llvm.fma.v4f32(<4 x float> %3997, <4 x float> %4003, <4 x float> %3989)
  %4005 = extractelement <4 x float> %4004, i32 0
  %4006 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4007 = getelementptr inbounds i8, i8* %4006, i64 52
  %4008 = bitcast i8* %4007 to float*
  store float %4005, float* %4008, align 4
  %4009 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4010 = getelementptr inbounds i8, i8* %4009, i64 52
  %4011 = bitcast i8* %4010 to float*
  %4012 = load float, float* %4011, align 4
  %4013 = insertelement <4 x float> zeroinitializer, float %4012, i32 0
  %4014 = insertelement <4 x float> %4013, float 0.000000e+00, i32 1
  %4015 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4016 = getelementptr inbounds i8, i8* %4015, i64 56
  %4017 = bitcast i8* %4016 to float*
  %4018 = load float, float* %4017, align 4
  %4019 = insertelement <4 x float> %4014, float %4018, i32 2
  %4020 = insertelement <4 x float> %4019, float 0.000000e+00, i32 3
  %4021 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4022 = getelementptr inbounds i8, i8* %4021, i64 60
  %4023 = bitcast i8* %4022 to float*
  %4024 = load float, float* %4023, align 4
  %4025 = insertelement <4 x float> zeroinitializer, float %4024, i32 0
  %4026 = insertelement <4 x float> %4025, float 0.000000e+00, i32 1
  %4027 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4028 = getelementptr inbounds i8, i8* %4027, i64 48
  %4029 = bitcast i8* %4028 to float*
  %4030 = load float, float* %4029, align 4
  %4031 = insertelement <4 x float> %4026, float %4030, i32 2
  %4032 = insertelement <4 x float> %4031, float 0.000000e+00, i32 3
  %4033 = getelementptr inbounds float, float* %1, i64 13
  %4034 = load float, float* %4033, align 4
  %4035 = insertelement <4 x float> zeroinitializer, float %4034, i32 0
  %4036 = insertelement <4 x float> %4035, float 0.000000e+00, i32 1
  %4037 = getelementptr inbounds float, float* %1, i64 2
  %4038 = load float, float* %4037, align 4
  %4039 = insertelement <4 x float> %4036, float %4038, i32 2
  %4040 = insertelement <4 x float> %4039, float 0.000000e+00, i32 3
  %4041 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4032, <4 x float> %4040, <4 x float> %4020)
  %4042 = extractelement <4 x float> %4041, i32 0
  %4043 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4044 = getelementptr inbounds i8, i8* %4043, i64 52
  %4045 = bitcast i8* %4044 to float*
  store float %4042, float* %4045, align 4
  %4046 = extractelement <4 x float> %4041, i32 1
  %4047 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4048 = getelementptr inbounds i8, i8* %4047, i64 56
  %4049 = bitcast i8* %4048 to float*
  store float %4046, float* %4049, align 4
  %4050 = extractelement <4 x float> %4041, i32 2
  %4051 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4052 = getelementptr inbounds i8, i8* %4051, i64 56
  %4053 = bitcast i8* %4052 to float*
  store float %4050, float* %4053, align 4
  %4054 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4055 = getelementptr inbounds i8, i8* %4054, i64 56
  %4056 = bitcast i8* %4055 to float*
  %4057 = load float, float* %4056, align 4
  %4058 = insertelement <4 x float> zeroinitializer, float %4057, i32 0
  %4059 = insertelement <4 x float> %4058, float 0.000000e+00, i32 1
  %4060 = insertelement <4 x float> %4059, float 0.000000e+00, i32 2
  %4061 = insertelement <4 x float> %4060, float 0.000000e+00, i32 3
  %4062 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4063 = getelementptr inbounds i8, i8* %4062, i64 52
  %4064 = bitcast i8* %4063 to float*
  %4065 = load float, float* %4064, align 4
  %4066 = insertelement <4 x float> zeroinitializer, float %4065, i32 0
  %4067 = insertelement <4 x float> %4066, float 0.000000e+00, i32 1
  %4068 = insertelement <4 x float> %4067, float 0.000000e+00, i32 2
  %4069 = insertelement <4 x float> %4068, float 0.000000e+00, i32 3
  %4070 = getelementptr inbounds float, float* %1, i64 6
  %4071 = load float, float* %4070, align 4
  %4072 = insertelement <4 x float> zeroinitializer, float %4071, i32 0
  %4073 = insertelement <4 x float> %4072, float 0.000000e+00, i32 1
  %4074 = insertelement <4 x float> %4073, float 0.000000e+00, i32 2
  %4075 = insertelement <4 x float> %4074, float 0.000000e+00, i32 3
  %4076 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4069, <4 x float> %4075, <4 x float> %4061)
  %4077 = extractelement <4 x float> %4076, i32 0
  %4078 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4079 = getelementptr inbounds i8, i8* %4078, i64 56
  %4080 = bitcast i8* %4079 to float*
  store float %4077, float* %4080, align 4
  %4081 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4082 = getelementptr inbounds i8, i8* %4081, i64 56
  %4083 = bitcast i8* %4082 to float*
  %4084 = load float, float* %4083, align 4
  %4085 = insertelement <4 x float> zeroinitializer, float %4084, i32 0
  %4086 = insertelement <4 x float> %4085, float 0.000000e+00, i32 1
  %4087 = insertelement <4 x float> %4086, float 0.000000e+00, i32 2
  %4088 = insertelement <4 x float> %4087, float 0.000000e+00, i32 3
  %4089 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4090 = getelementptr inbounds i8, i8* %4089, i64 56
  %4091 = bitcast i8* %4090 to float*
  %4092 = load float, float* %4091, align 4
  %4093 = insertelement <4 x float> zeroinitializer, float %4092, i32 0
  %4094 = insertelement <4 x float> %4093, float 0.000000e+00, i32 1
  %4095 = insertelement <4 x float> %4094, float 0.000000e+00, i32 2
  %4096 = insertelement <4 x float> %4095, float 0.000000e+00, i32 3
  %4097 = getelementptr inbounds float, float* %1, i64 10
  %4098 = load float, float* %4097, align 4
  %4099 = insertelement <4 x float> zeroinitializer, float %4098, i32 0
  %4100 = insertelement <4 x float> %4099, float 0.000000e+00, i32 1
  %4101 = insertelement <4 x float> %4100, float 0.000000e+00, i32 2
  %4102 = insertelement <4 x float> %4101, float 0.000000e+00, i32 3
  %4103 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4096, <4 x float> %4102, <4 x float> %4088)
  %4104 = extractelement <4 x float> %4103, i32 0
  %4105 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4106 = getelementptr inbounds i8, i8* %4105, i64 56
  %4107 = bitcast i8* %4106 to float*
  store float %4104, float* %4107, align 4
  %4108 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4109 = getelementptr inbounds i8, i8* %4108, i64 56
  %4110 = bitcast i8* %4109 to float*
  %4111 = load float, float* %4110, align 4
  %4112 = insertelement <4 x float> zeroinitializer, float %4111, i32 0
  %4113 = insertelement <4 x float> %4112, float 0.000000e+00, i32 1
  %4114 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4115 = getelementptr inbounds i8, i8* %4114, i64 60
  %4116 = bitcast i8* %4115 to float*
  %4117 = load float, float* %4116, align 4
  %4118 = insertelement <4 x float> %4113, float %4117, i32 2
  %4119 = insertelement <4 x float> %4118, float 0.000000e+00, i32 3
  %4120 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4121 = getelementptr inbounds i8, i8* %4120, i64 60
  %4122 = bitcast i8* %4121 to float*
  %4123 = load float, float* %4122, align 4
  %4124 = insertelement <4 x float> zeroinitializer, float %4123, i32 0
  %4125 = insertelement <4 x float> %4124, float 0.000000e+00, i32 1
  %4126 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4127 = getelementptr inbounds i8, i8* %4126, i64 48
  %4128 = bitcast i8* %4127 to float*
  %4129 = load float, float* %4128, align 4
  %4130 = insertelement <4 x float> %4125, float %4129, i32 2
  %4131 = insertelement <4 x float> %4130, float 0.000000e+00, i32 3
  %4132 = getelementptr inbounds float, float* %1, i64 14
  %4133 = load float, float* %4132, align 4
  %4134 = insertelement <4 x float> zeroinitializer, float %4133, i32 0
  %4135 = insertelement <4 x float> %4134, float 0.000000e+00, i32 1
  %4136 = getelementptr inbounds float, float* %1, i64 3
  %4137 = load float, float* %4136, align 4
  %4138 = insertelement <4 x float> %4135, float %4137, i32 2
  %4139 = insertelement <4 x float> %4138, float 0.000000e+00, i32 3
  %4140 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4131, <4 x float> %4139, <4 x float> %4119)
  %4141 = extractelement <4 x float> %4140, i32 0
  %4142 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4143 = getelementptr inbounds i8, i8* %4142, i64 56
  %4144 = bitcast i8* %4143 to float*
  store float %4141, float* %4144, align 4
  %4145 = extractelement <4 x float> %4140, i32 1
  %4146 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4147 = getelementptr inbounds i8, i8* %4146, i64 60
  %4148 = bitcast i8* %4147 to float*
  store float %4145, float* %4148, align 4
  %4149 = extractelement <4 x float> %4140, i32 2
  %4150 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4151 = getelementptr inbounds i8, i8* %4150, i64 60
  %4152 = bitcast i8* %4151 to float*
  store float %4149, float* %4152, align 4
  %4153 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4154 = getelementptr inbounds i8, i8* %4153, i64 60
  %4155 = bitcast i8* %4154 to float*
  %4156 = load float, float* %4155, align 4
  %4157 = insertelement <4 x float> zeroinitializer, float %4156, i32 0
  %4158 = insertelement <4 x float> %4157, float 0.000000e+00, i32 1
  %4159 = insertelement <4 x float> %4158, float 0.000000e+00, i32 2
  %4160 = insertelement <4 x float> %4159, float 0.000000e+00, i32 3
  %4161 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4162 = getelementptr inbounds i8, i8* %4161, i64 52
  %4163 = bitcast i8* %4162 to float*
  %4164 = load float, float* %4163, align 4
  %4165 = insertelement <4 x float> zeroinitializer, float %4164, i32 0
  %4166 = insertelement <4 x float> %4165, float 0.000000e+00, i32 1
  %4167 = insertelement <4 x float> %4166, float 0.000000e+00, i32 2
  %4168 = insertelement <4 x float> %4167, float 0.000000e+00, i32 3
  %4169 = getelementptr inbounds float, float* %1, i64 7
  %4170 = load float, float* %4169, align 4
  %4171 = insertelement <4 x float> zeroinitializer, float %4170, i32 0
  %4172 = insertelement <4 x float> %4171, float 0.000000e+00, i32 1
  %4173 = insertelement <4 x float> %4172, float 0.000000e+00, i32 2
  %4174 = insertelement <4 x float> %4173, float 0.000000e+00, i32 3
  %4175 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4168, <4 x float> %4174, <4 x float> %4160)
  %4176 = extractelement <4 x float> %4175, i32 0
  %4177 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4178 = getelementptr inbounds i8, i8* %4177, i64 60
  %4179 = bitcast i8* %4178 to float*
  store float %4176, float* %4179, align 4
  %4180 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4181 = getelementptr inbounds i8, i8* %4180, i64 60
  %4182 = bitcast i8* %4181 to float*
  %4183 = load float, float* %4182, align 4
  %4184 = insertelement <4 x float> zeroinitializer, float %4183, i32 0
  %4185 = insertelement <4 x float> %4184, float 0.000000e+00, i32 1
  %4186 = insertelement <4 x float> %4185, float 0.000000e+00, i32 2
  %4187 = insertelement <4 x float> %4186, float 0.000000e+00, i32 3
  %4188 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4189 = getelementptr inbounds i8, i8* %4188, i64 56
  %4190 = bitcast i8* %4189 to float*
  %4191 = load float, float* %4190, align 4
  %4192 = insertelement <4 x float> zeroinitializer, float %4191, i32 0
  %4193 = insertelement <4 x float> %4192, float 0.000000e+00, i32 1
  %4194 = insertelement <4 x float> %4193, float 0.000000e+00, i32 2
  %4195 = insertelement <4 x float> %4194, float 0.000000e+00, i32 3
  %4196 = getelementptr inbounds float, float* %1, i64 11
  %4197 = load float, float* %4196, align 4
  %4198 = insertelement <4 x float> zeroinitializer, float %4197, i32 0
  %4199 = insertelement <4 x float> %4198, float 0.000000e+00, i32 1
  %4200 = insertelement <4 x float> %4199, float 0.000000e+00, i32 2
  %4201 = insertelement <4 x float> %4200, float 0.000000e+00, i32 3
  %4202 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4195, <4 x float> %4201, <4 x float> %4187)
  %4203 = extractelement <4 x float> %4202, i32 0
  %4204 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4205 = getelementptr inbounds i8, i8* %4204, i64 60
  %4206 = bitcast i8* %4205 to float*
  store float %4203, float* %4206, align 4
  %4207 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4208 = getelementptr inbounds i8, i8* %4207, i64 60
  %4209 = bitcast i8* %4208 to float*
  %4210 = load float, float* %4209, align 4
  %4211 = insertelement <4 x float> zeroinitializer, float %4210, i32 0
  %4212 = insertelement <4 x float> %4211, float 0.000000e+00, i32 1
  %4213 = insertelement <4 x float> %4212, float 0.000000e+00, i32 2
  %4214 = insertelement <4 x float> %4213, float 0.000000e+00, i32 3
  %4215 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4216 = getelementptr inbounds i8, i8* %4215, i64 60
  %4217 = bitcast i8* %4216 to float*
  %4218 = load float, float* %4217, align 4
  %4219 = insertelement <4 x float> zeroinitializer, float %4218, i32 0
  %4220 = insertelement <4 x float> %4219, float 0.000000e+00, i32 1
  %4221 = insertelement <4 x float> %4220, float 0.000000e+00, i32 2
  %4222 = insertelement <4 x float> %4221, float 0.000000e+00, i32 3
  %4223 = getelementptr inbounds float, float* %1, i64 15
  %4224 = load float, float* %4223, align 4
  %4225 = insertelement <4 x float> zeroinitializer, float %4224, i32 0
  %4226 = insertelement <4 x float> %4225, float 0.000000e+00, i32 1
  %4227 = insertelement <4 x float> %4226, float 0.000000e+00, i32 2
  %4228 = insertelement <4 x float> %4227, float 0.000000e+00, i32 3
  %4229 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4222, <4 x float> %4228, <4 x float> %4214)
  %4230 = extractelement <4 x float> %4229, i32 0
  %4231 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4232 = getelementptr inbounds i8, i8* %4231, i64 60
  %4233 = bitcast i8* %4232 to float*
  store float %4230, float* %4233, align 4
  %4234 = extractelement <4 x float> %4229, i32 1
  %4235 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4236 = bitcast i8* %4235 to float*
  store float %4234, float* %4236, align 4
  %4237 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4238 = bitcast i8* %4237 to float*
  %4239 = load float, float* %4238, align 4
  %4240 = insertelement <4 x float> zeroinitializer, float %4239, i32 0
  %4241 = insertelement <4 x float> %4240, float 0.000000e+00, i32 1
  %4242 = insertelement <4 x float> %4241, float 0.000000e+00, i32 2
  %4243 = insertelement <4 x float> %4242, float 0.000000e+00, i32 3
  %4244 = load float, float* %2, align 4
  %4245 = insertelement <4 x float> zeroinitializer, float %4244, i32 0
  %4246 = insertelement <4 x float> %4245, float 0.000000e+00, i32 1
  %4247 = insertelement <4 x float> %4246, float 0.000000e+00, i32 2
  %4248 = insertelement <4 x float> %4247, float 0.000000e+00, i32 3
  %4249 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4243, <4 x float> %4248, <4 x float> zeroinitializer)
  %4250 = extractelement <4 x float> %4249, i32 0
  %4251 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4252 = bitcast i8* %4251 to float*
  store float %4250, float* %4252, align 4
  %4253 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4254 = bitcast i8* %4253 to float*
  %4255 = load float, float* %4254, align 4
  %4256 = insertelement <4 x float> zeroinitializer, float %4255, i32 0
  %4257 = insertelement <4 x float> %4256, float 0.000000e+00, i32 1
  %4258 = insertelement <4 x float> %4257, float 0.000000e+00, i32 2
  %4259 = insertelement <4 x float> %4258, float 0.000000e+00, i32 3
  %4260 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4261 = getelementptr inbounds i8, i8* %4260, i64 4
  %4262 = bitcast i8* %4261 to float*
  %4263 = load float, float* %4262, align 4
  %4264 = insertelement <4 x float> zeroinitializer, float %4263, i32 0
  %4265 = insertelement <4 x float> %4264, float 0.000000e+00, i32 1
  %4266 = insertelement <4 x float> %4265, float 0.000000e+00, i32 2
  %4267 = insertelement <4 x float> %4266, float 0.000000e+00, i32 3
  %4268 = getelementptr inbounds float, float* %2, i64 4
  %4269 = load float, float* %4268, align 4
  %4270 = insertelement <4 x float> zeroinitializer, float %4269, i32 0
  %4271 = insertelement <4 x float> %4270, float 0.000000e+00, i32 1
  %4272 = insertelement <4 x float> %4271, float 0.000000e+00, i32 2
  %4273 = insertelement <4 x float> %4272, float 0.000000e+00, i32 3
  %4274 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4267, <4 x float> %4273, <4 x float> %4259)
  %4275 = extractelement <4 x float> %4274, i32 0
  %4276 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4277 = bitcast i8* %4276 to float*
  store float %4275, float* %4277, align 4
  %4278 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4279 = bitcast i8* %4278 to float*
  %4280 = load float, float* %4279, align 4
  %4281 = insertelement <4 x float> zeroinitializer, float %4280, i32 0
  %4282 = insertelement <4 x float> %4281, float 0.000000e+00, i32 1
  %4283 = insertelement <4 x float> %4282, float 0.000000e+00, i32 2
  %4284 = insertelement <4 x float> %4283, float 0.000000e+00, i32 3
  %4285 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4286 = getelementptr inbounds i8, i8* %4285, i64 8
  %4287 = bitcast i8* %4286 to float*
  %4288 = load float, float* %4287, align 4
  %4289 = insertelement <4 x float> zeroinitializer, float %4288, i32 0
  %4290 = insertelement <4 x float> %4289, float 0.000000e+00, i32 1
  %4291 = insertelement <4 x float> %4290, float 0.000000e+00, i32 2
  %4292 = insertelement <4 x float> %4291, float 0.000000e+00, i32 3
  %4293 = getelementptr inbounds float, float* %2, i64 8
  %4294 = load float, float* %4293, align 4
  %4295 = insertelement <4 x float> zeroinitializer, float %4294, i32 0
  %4296 = insertelement <4 x float> %4295, float 0.000000e+00, i32 1
  %4297 = insertelement <4 x float> %4296, float 0.000000e+00, i32 2
  %4298 = insertelement <4 x float> %4297, float 0.000000e+00, i32 3
  %4299 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4292, <4 x float> %4298, <4 x float> %4284)
  %4300 = extractelement <4 x float> %4299, i32 0
  %4301 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4302 = bitcast i8* %4301 to float*
  store float %4300, float* %4302, align 4
  %4303 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4304 = bitcast i8* %4303 to float*
  %4305 = load float, float* %4304, align 4
  %4306 = insertelement <4 x float> zeroinitializer, float %4305, i32 0
  %4307 = insertelement <4 x float> %4306, float 0.000000e+00, i32 1
  %4308 = insertelement <4 x float> %4307, float 0.000000e+00, i32 2
  %4309 = insertelement <4 x float> %4308, float 0.000000e+00, i32 3
  %4310 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4311 = getelementptr inbounds i8, i8* %4310, i64 12
  %4312 = bitcast i8* %4311 to float*
  %4313 = load float, float* %4312, align 4
  %4314 = insertelement <4 x float> zeroinitializer, float %4313, i32 0
  %4315 = insertelement <4 x float> %4314, float 0.000000e+00, i32 1
  %4316 = insertelement <4 x float> %4315, float 0.000000e+00, i32 2
  %4317 = insertelement <4 x float> %4316, float 0.000000e+00, i32 3
  %4318 = getelementptr inbounds float, float* %2, i64 12
  %4319 = load float, float* %4318, align 4
  %4320 = insertelement <4 x float> zeroinitializer, float %4319, i32 0
  %4321 = insertelement <4 x float> %4320, float 0.000000e+00, i32 1
  %4322 = insertelement <4 x float> %4321, float 0.000000e+00, i32 2
  %4323 = insertelement <4 x float> %4322, float 0.000000e+00, i32 3
  %4324 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4317, <4 x float> %4323, <4 x float> %4309)
  %4325 = extractelement <4 x float> %4324, i32 0
  %4326 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4327 = bitcast i8* %4326 to float*
  store float %4325, float* %4327, align 4
  %4328 = extractelement <4 x float> %4324, i32 1
  %4329 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4330 = getelementptr inbounds i8, i8* %4329, i64 4
  %4331 = bitcast i8* %4330 to float*
  store float %4328, float* %4331, align 4
  %4332 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4333 = getelementptr inbounds i8, i8* %4332, i64 4
  %4334 = bitcast i8* %4333 to float*
  %4335 = load float, float* %4334, align 4
  %4336 = insertelement <4 x float> zeroinitializer, float %4335, i32 0
  %4337 = insertelement <4 x float> %4336, float 0.000000e+00, i32 1
  %4338 = insertelement <4 x float> %4337, float 0.000000e+00, i32 2
  %4339 = insertelement <4 x float> %4338, float 0.000000e+00, i32 3
  %4340 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4341 = bitcast i8* %4340 to float*
  %4342 = load float, float* %4341, align 4
  %4343 = insertelement <4 x float> zeroinitializer, float %4342, i32 0
  %4344 = insertelement <4 x float> %4343, float 0.000000e+00, i32 1
  %4345 = insertelement <4 x float> %4344, float 0.000000e+00, i32 2
  %4346 = insertelement <4 x float> %4345, float 0.000000e+00, i32 3
  %4347 = getelementptr inbounds float, float* %2, i64 1
  %4348 = load float, float* %4347, align 4
  %4349 = insertelement <4 x float> zeroinitializer, float %4348, i32 0
  %4350 = insertelement <4 x float> %4349, float 0.000000e+00, i32 1
  %4351 = insertelement <4 x float> %4350, float 0.000000e+00, i32 2
  %4352 = insertelement <4 x float> %4351, float 0.000000e+00, i32 3
  %4353 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4346, <4 x float> %4352, <4 x float> %4339)
  %4354 = extractelement <4 x float> %4353, i32 0
  %4355 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4356 = getelementptr inbounds i8, i8* %4355, i64 4
  %4357 = bitcast i8* %4356 to float*
  store float %4354, float* %4357, align 4
  %4358 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4359 = getelementptr inbounds i8, i8* %4358, i64 4
  %4360 = bitcast i8* %4359 to float*
  %4361 = load float, float* %4360, align 4
  %4362 = insertelement <4 x float> zeroinitializer, float %4361, i32 0
  %4363 = insertelement <4 x float> %4362, float 0.000000e+00, i32 1
  %4364 = insertelement <4 x float> %4363, float 0.000000e+00, i32 2
  %4365 = insertelement <4 x float> %4364, float 0.000000e+00, i32 3
  %4366 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4367 = getelementptr inbounds i8, i8* %4366, i64 4
  %4368 = bitcast i8* %4367 to float*
  %4369 = load float, float* %4368, align 4
  %4370 = insertelement <4 x float> zeroinitializer, float %4369, i32 0
  %4371 = insertelement <4 x float> %4370, float 0.000000e+00, i32 1
  %4372 = insertelement <4 x float> %4371, float 0.000000e+00, i32 2
  %4373 = insertelement <4 x float> %4372, float 0.000000e+00, i32 3
  %4374 = getelementptr inbounds float, float* %2, i64 5
  %4375 = load float, float* %4374, align 4
  %4376 = insertelement <4 x float> zeroinitializer, float %4375, i32 0
  %4377 = insertelement <4 x float> %4376, float 0.000000e+00, i32 1
  %4378 = insertelement <4 x float> %4377, float 0.000000e+00, i32 2
  %4379 = insertelement <4 x float> %4378, float 0.000000e+00, i32 3
  %4380 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4373, <4 x float> %4379, <4 x float> %4365)
  %4381 = extractelement <4 x float> %4380, i32 0
  %4382 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4383 = getelementptr inbounds i8, i8* %4382, i64 4
  %4384 = bitcast i8* %4383 to float*
  store float %4381, float* %4384, align 4
  %4385 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4386 = getelementptr inbounds i8, i8* %4385, i64 4
  %4387 = bitcast i8* %4386 to float*
  %4388 = load float, float* %4387, align 4
  %4389 = insertelement <4 x float> zeroinitializer, float %4388, i32 0
  %4390 = insertelement <4 x float> %4389, float 0.000000e+00, i32 1
  %4391 = insertelement <4 x float> %4390, float 0.000000e+00, i32 2
  %4392 = insertelement <4 x float> %4391, float 0.000000e+00, i32 3
  %4393 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4394 = getelementptr inbounds i8, i8* %4393, i64 8
  %4395 = bitcast i8* %4394 to float*
  %4396 = load float, float* %4395, align 4
  %4397 = insertelement <4 x float> zeroinitializer, float %4396, i32 0
  %4398 = insertelement <4 x float> %4397, float 0.000000e+00, i32 1
  %4399 = insertelement <4 x float> %4398, float 0.000000e+00, i32 2
  %4400 = insertelement <4 x float> %4399, float 0.000000e+00, i32 3
  %4401 = getelementptr inbounds float, float* %2, i64 9
  %4402 = load float, float* %4401, align 4
  %4403 = insertelement <4 x float> zeroinitializer, float %4402, i32 0
  %4404 = insertelement <4 x float> %4403, float 0.000000e+00, i32 1
  %4405 = insertelement <4 x float> %4404, float 0.000000e+00, i32 2
  %4406 = insertelement <4 x float> %4405, float 0.000000e+00, i32 3
  %4407 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4400, <4 x float> %4406, <4 x float> %4392)
  %4408 = extractelement <4 x float> %4407, i32 0
  %4409 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4410 = getelementptr inbounds i8, i8* %4409, i64 4
  %4411 = bitcast i8* %4410 to float*
  store float %4408, float* %4411, align 4
  %4412 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4413 = getelementptr inbounds i8, i8* %4412, i64 4
  %4414 = bitcast i8* %4413 to float*
  %4415 = load float, float* %4414, align 4
  %4416 = insertelement <4 x float> zeroinitializer, float %4415, i32 0
  %4417 = insertelement <4 x float> %4416, float 0.000000e+00, i32 1
  %4418 = insertelement <4 x float> %4417, float 0.000000e+00, i32 2
  %4419 = insertelement <4 x float> %4418, float 0.000000e+00, i32 3
  %4420 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4421 = getelementptr inbounds i8, i8* %4420, i64 12
  %4422 = bitcast i8* %4421 to float*
  %4423 = load float, float* %4422, align 4
  %4424 = insertelement <4 x float> zeroinitializer, float %4423, i32 0
  %4425 = insertelement <4 x float> %4424, float 0.000000e+00, i32 1
  %4426 = insertelement <4 x float> %4425, float 0.000000e+00, i32 2
  %4427 = insertelement <4 x float> %4426, float 0.000000e+00, i32 3
  %4428 = getelementptr inbounds float, float* %2, i64 13
  %4429 = load float, float* %4428, align 4
  %4430 = insertelement <4 x float> zeroinitializer, float %4429, i32 0
  %4431 = insertelement <4 x float> %4430, float 0.000000e+00, i32 1
  %4432 = insertelement <4 x float> %4431, float 0.000000e+00, i32 2
  %4433 = insertelement <4 x float> %4432, float 0.000000e+00, i32 3
  %4434 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4427, <4 x float> %4433, <4 x float> %4419)
  %4435 = extractelement <4 x float> %4434, i32 0
  %4436 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4437 = getelementptr inbounds i8, i8* %4436, i64 4
  %4438 = bitcast i8* %4437 to float*
  store float %4435, float* %4438, align 4
  %4439 = extractelement <4 x float> %4434, i32 1
  %4440 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4441 = getelementptr inbounds i8, i8* %4440, i64 8
  %4442 = bitcast i8* %4441 to float*
  store float %4439, float* %4442, align 4
  %4443 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4444 = getelementptr inbounds i8, i8* %4443, i64 8
  %4445 = bitcast i8* %4444 to float*
  %4446 = load float, float* %4445, align 4
  %4447 = insertelement <4 x float> zeroinitializer, float %4446, i32 0
  %4448 = insertelement <4 x float> %4447, float 0.000000e+00, i32 1
  %4449 = insertelement <4 x float> %4448, float 0.000000e+00, i32 2
  %4450 = insertelement <4 x float> %4449, float 0.000000e+00, i32 3
  %4451 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4452 = bitcast i8* %4451 to float*
  %4453 = load float, float* %4452, align 4
  %4454 = insertelement <4 x float> zeroinitializer, float %4453, i32 0
  %4455 = insertelement <4 x float> %4454, float 0.000000e+00, i32 1
  %4456 = insertelement <4 x float> %4455, float 0.000000e+00, i32 2
  %4457 = insertelement <4 x float> %4456, float 0.000000e+00, i32 3
  %4458 = getelementptr inbounds float, float* %2, i64 2
  %4459 = load float, float* %4458, align 4
  %4460 = insertelement <4 x float> zeroinitializer, float %4459, i32 0
  %4461 = insertelement <4 x float> %4460, float 0.000000e+00, i32 1
  %4462 = insertelement <4 x float> %4461, float 0.000000e+00, i32 2
  %4463 = insertelement <4 x float> %4462, float 0.000000e+00, i32 3
  %4464 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4457, <4 x float> %4463, <4 x float> %4450)
  %4465 = extractelement <4 x float> %4464, i32 0
  %4466 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4467 = getelementptr inbounds i8, i8* %4466, i64 8
  %4468 = bitcast i8* %4467 to float*
  store float %4465, float* %4468, align 4
  %4469 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4470 = getelementptr inbounds i8, i8* %4469, i64 8
  %4471 = bitcast i8* %4470 to float*
  %4472 = load float, float* %4471, align 4
  %4473 = insertelement <4 x float> zeroinitializer, float %4472, i32 0
  %4474 = insertelement <4 x float> %4473, float 0.000000e+00, i32 1
  %4475 = insertelement <4 x float> %4474, float 0.000000e+00, i32 2
  %4476 = insertelement <4 x float> %4475, float 0.000000e+00, i32 3
  %4477 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4478 = getelementptr inbounds i8, i8* %4477, i64 4
  %4479 = bitcast i8* %4478 to float*
  %4480 = load float, float* %4479, align 4
  %4481 = insertelement <4 x float> zeroinitializer, float %4480, i32 0
  %4482 = insertelement <4 x float> %4481, float 0.000000e+00, i32 1
  %4483 = insertelement <4 x float> %4482, float 0.000000e+00, i32 2
  %4484 = insertelement <4 x float> %4483, float 0.000000e+00, i32 3
  %4485 = getelementptr inbounds float, float* %2, i64 6
  %4486 = load float, float* %4485, align 4
  %4487 = insertelement <4 x float> zeroinitializer, float %4486, i32 0
  %4488 = insertelement <4 x float> %4487, float 0.000000e+00, i32 1
  %4489 = insertelement <4 x float> %4488, float 0.000000e+00, i32 2
  %4490 = insertelement <4 x float> %4489, float 0.000000e+00, i32 3
  %4491 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4484, <4 x float> %4490, <4 x float> %4476)
  %4492 = extractelement <4 x float> %4491, i32 0
  %4493 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4494 = getelementptr inbounds i8, i8* %4493, i64 8
  %4495 = bitcast i8* %4494 to float*
  store float %4492, float* %4495, align 4
  %4496 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4497 = getelementptr inbounds i8, i8* %4496, i64 8
  %4498 = bitcast i8* %4497 to float*
  %4499 = load float, float* %4498, align 4
  %4500 = insertelement <4 x float> zeroinitializer, float %4499, i32 0
  %4501 = insertelement <4 x float> %4500, float 0.000000e+00, i32 1
  %4502 = insertelement <4 x float> %4501, float 0.000000e+00, i32 2
  %4503 = insertelement <4 x float> %4502, float 0.000000e+00, i32 3
  %4504 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4505 = getelementptr inbounds i8, i8* %4504, i64 8
  %4506 = bitcast i8* %4505 to float*
  %4507 = load float, float* %4506, align 4
  %4508 = insertelement <4 x float> zeroinitializer, float %4507, i32 0
  %4509 = insertelement <4 x float> %4508, float 0.000000e+00, i32 1
  %4510 = insertelement <4 x float> %4509, float 0.000000e+00, i32 2
  %4511 = insertelement <4 x float> %4510, float 0.000000e+00, i32 3
  %4512 = getelementptr inbounds float, float* %2, i64 10
  %4513 = load float, float* %4512, align 4
  %4514 = insertelement <4 x float> zeroinitializer, float %4513, i32 0
  %4515 = insertelement <4 x float> %4514, float 0.000000e+00, i32 1
  %4516 = insertelement <4 x float> %4515, float 0.000000e+00, i32 2
  %4517 = insertelement <4 x float> %4516, float 0.000000e+00, i32 3
  %4518 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4511, <4 x float> %4517, <4 x float> %4503)
  %4519 = extractelement <4 x float> %4518, i32 0
  %4520 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4521 = getelementptr inbounds i8, i8* %4520, i64 8
  %4522 = bitcast i8* %4521 to float*
  store float %4519, float* %4522, align 4
  %4523 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4524 = getelementptr inbounds i8, i8* %4523, i64 8
  %4525 = bitcast i8* %4524 to float*
  %4526 = load float, float* %4525, align 4
  %4527 = insertelement <4 x float> zeroinitializer, float %4526, i32 0
  %4528 = insertelement <4 x float> %4527, float 0.000000e+00, i32 1
  %4529 = insertelement <4 x float> %4528, float 0.000000e+00, i32 2
  %4530 = insertelement <4 x float> %4529, float 0.000000e+00, i32 3
  %4531 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4532 = getelementptr inbounds i8, i8* %4531, i64 12
  %4533 = bitcast i8* %4532 to float*
  %4534 = load float, float* %4533, align 4
  %4535 = insertelement <4 x float> zeroinitializer, float %4534, i32 0
  %4536 = insertelement <4 x float> %4535, float 0.000000e+00, i32 1
  %4537 = insertelement <4 x float> %4536, float 0.000000e+00, i32 2
  %4538 = insertelement <4 x float> %4537, float 0.000000e+00, i32 3
  %4539 = getelementptr inbounds float, float* %2, i64 14
  %4540 = load float, float* %4539, align 4
  %4541 = insertelement <4 x float> zeroinitializer, float %4540, i32 0
  %4542 = insertelement <4 x float> %4541, float 0.000000e+00, i32 1
  %4543 = insertelement <4 x float> %4542, float 0.000000e+00, i32 2
  %4544 = insertelement <4 x float> %4543, float 0.000000e+00, i32 3
  %4545 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4538, <4 x float> %4544, <4 x float> %4530)
  %4546 = extractelement <4 x float> %4545, i32 0
  %4547 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4548 = getelementptr inbounds i8, i8* %4547, i64 8
  %4549 = bitcast i8* %4548 to float*
  store float %4546, float* %4549, align 4
  %4550 = extractelement <4 x float> %4545, i32 1
  %4551 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4552 = getelementptr inbounds i8, i8* %4551, i64 12
  %4553 = bitcast i8* %4552 to float*
  store float %4550, float* %4553, align 4
  %4554 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4555 = getelementptr inbounds i8, i8* %4554, i64 12
  %4556 = bitcast i8* %4555 to float*
  %4557 = load float, float* %4556, align 4
  %4558 = insertelement <4 x float> zeroinitializer, float %4557, i32 0
  %4559 = insertelement <4 x float> %4558, float 0.000000e+00, i32 1
  %4560 = insertelement <4 x float> %4559, float 0.000000e+00, i32 2
  %4561 = insertelement <4 x float> %4560, float 0.000000e+00, i32 3
  %4562 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4563 = bitcast i8* %4562 to float*
  %4564 = load float, float* %4563, align 4
  %4565 = insertelement <4 x float> zeroinitializer, float %4564, i32 0
  %4566 = insertelement <4 x float> %4565, float 0.000000e+00, i32 1
  %4567 = insertelement <4 x float> %4566, float 0.000000e+00, i32 2
  %4568 = insertelement <4 x float> %4567, float 0.000000e+00, i32 3
  %4569 = getelementptr inbounds float, float* %2, i64 3
  %4570 = load float, float* %4569, align 4
  %4571 = insertelement <4 x float> zeroinitializer, float %4570, i32 0
  %4572 = insertelement <4 x float> %4571, float 0.000000e+00, i32 1
  %4573 = insertelement <4 x float> %4572, float 0.000000e+00, i32 2
  %4574 = insertelement <4 x float> %4573, float 0.000000e+00, i32 3
  %4575 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4568, <4 x float> %4574, <4 x float> %4561)
  %4576 = extractelement <4 x float> %4575, i32 0
  %4577 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4578 = getelementptr inbounds i8, i8* %4577, i64 12
  %4579 = bitcast i8* %4578 to float*
  store float %4576, float* %4579, align 4
  %4580 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4581 = getelementptr inbounds i8, i8* %4580, i64 12
  %4582 = bitcast i8* %4581 to float*
  %4583 = load float, float* %4582, align 4
  %4584 = insertelement <4 x float> zeroinitializer, float %4583, i32 0
  %4585 = insertelement <4 x float> %4584, float 0.000000e+00, i32 1
  %4586 = insertelement <4 x float> %4585, float 0.000000e+00, i32 2
  %4587 = insertelement <4 x float> %4586, float 0.000000e+00, i32 3
  %4588 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4589 = getelementptr inbounds i8, i8* %4588, i64 4
  %4590 = bitcast i8* %4589 to float*
  %4591 = load float, float* %4590, align 4
  %4592 = insertelement <4 x float> zeroinitializer, float %4591, i32 0
  %4593 = insertelement <4 x float> %4592, float 0.000000e+00, i32 1
  %4594 = insertelement <4 x float> %4593, float 0.000000e+00, i32 2
  %4595 = insertelement <4 x float> %4594, float 0.000000e+00, i32 3
  %4596 = getelementptr inbounds float, float* %2, i64 7
  %4597 = load float, float* %4596, align 4
  %4598 = insertelement <4 x float> zeroinitializer, float %4597, i32 0
  %4599 = insertelement <4 x float> %4598, float 0.000000e+00, i32 1
  %4600 = insertelement <4 x float> %4599, float 0.000000e+00, i32 2
  %4601 = insertelement <4 x float> %4600, float 0.000000e+00, i32 3
  %4602 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4595, <4 x float> %4601, <4 x float> %4587)
  %4603 = extractelement <4 x float> %4602, i32 0
  %4604 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4605 = getelementptr inbounds i8, i8* %4604, i64 12
  %4606 = bitcast i8* %4605 to float*
  store float %4603, float* %4606, align 4
  %4607 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4608 = getelementptr inbounds i8, i8* %4607, i64 12
  %4609 = bitcast i8* %4608 to float*
  %4610 = load float, float* %4609, align 4
  %4611 = insertelement <4 x float> zeroinitializer, float %4610, i32 0
  %4612 = insertelement <4 x float> %4611, float 0.000000e+00, i32 1
  %4613 = insertelement <4 x float> %4612, float 0.000000e+00, i32 2
  %4614 = insertelement <4 x float> %4613, float 0.000000e+00, i32 3
  %4615 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4616 = getelementptr inbounds i8, i8* %4615, i64 8
  %4617 = bitcast i8* %4616 to float*
  %4618 = load float, float* %4617, align 4
  %4619 = insertelement <4 x float> zeroinitializer, float %4618, i32 0
  %4620 = insertelement <4 x float> %4619, float 0.000000e+00, i32 1
  %4621 = insertelement <4 x float> %4620, float 0.000000e+00, i32 2
  %4622 = insertelement <4 x float> %4621, float 0.000000e+00, i32 3
  %4623 = getelementptr inbounds float, float* %2, i64 11
  %4624 = load float, float* %4623, align 4
  %4625 = insertelement <4 x float> zeroinitializer, float %4624, i32 0
  %4626 = insertelement <4 x float> %4625, float 0.000000e+00, i32 1
  %4627 = insertelement <4 x float> %4626, float 0.000000e+00, i32 2
  %4628 = insertelement <4 x float> %4627, float 0.000000e+00, i32 3
  %4629 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4622, <4 x float> %4628, <4 x float> %4614)
  %4630 = extractelement <4 x float> %4629, i32 0
  %4631 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4632 = getelementptr inbounds i8, i8* %4631, i64 12
  %4633 = bitcast i8* %4632 to float*
  store float %4630, float* %4633, align 4
  %4634 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4635 = getelementptr inbounds i8, i8* %4634, i64 12
  %4636 = bitcast i8* %4635 to float*
  %4637 = load float, float* %4636, align 4
  %4638 = insertelement <4 x float> zeroinitializer, float %4637, i32 0
  %4639 = insertelement <4 x float> %4638, float 0.000000e+00, i32 1
  %4640 = insertelement <4 x float> %4639, float 0.000000e+00, i32 2
  %4641 = insertelement <4 x float> %4640, float 0.000000e+00, i32 3
  %4642 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4643 = getelementptr inbounds i8, i8* %4642, i64 12
  %4644 = bitcast i8* %4643 to float*
  %4645 = load float, float* %4644, align 4
  %4646 = insertelement <4 x float> zeroinitializer, float %4645, i32 0
  %4647 = insertelement <4 x float> %4646, float 0.000000e+00, i32 1
  %4648 = insertelement <4 x float> %4647, float 0.000000e+00, i32 2
  %4649 = insertelement <4 x float> %4648, float 0.000000e+00, i32 3
  %4650 = getelementptr inbounds float, float* %2, i64 15
  %4651 = load float, float* %4650, align 4
  %4652 = insertelement <4 x float> zeroinitializer, float %4651, i32 0
  %4653 = insertelement <4 x float> %4652, float 0.000000e+00, i32 1
  %4654 = insertelement <4 x float> %4653, float 0.000000e+00, i32 2
  %4655 = insertelement <4 x float> %4654, float 0.000000e+00, i32 3
  %4656 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4649, <4 x float> %4655, <4 x float> %4641)
  %4657 = extractelement <4 x float> %4656, i32 0
  %4658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4659 = getelementptr inbounds i8, i8* %4658, i64 12
  %4660 = bitcast i8* %4659 to float*
  store float %4657, float* %4660, align 4
  %4661 = extractelement <4 x float> %4656, i32 1
  %4662 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4663 = getelementptr inbounds i8, i8* %4662, i64 16
  %4664 = bitcast i8* %4663 to float*
  store float %4661, float* %4664, align 4
  %4665 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4666 = getelementptr inbounds i8, i8* %4665, i64 16
  %4667 = bitcast i8* %4666 to float*
  %4668 = load float, float* %4667, align 4
  %4669 = insertelement <4 x float> zeroinitializer, float %4668, i32 0
  %4670 = insertelement <4 x float> %4669, float 0.000000e+00, i32 1
  %4671 = insertelement <4 x float> %4670, float 0.000000e+00, i32 2
  %4672 = insertelement <4 x float> %4671, float 0.000000e+00, i32 3
  %4673 = load float, float* %2, align 4
  %4674 = insertelement <4 x float> zeroinitializer, float %4673, i32 0
  %4675 = insertelement <4 x float> %4674, float 0.000000e+00, i32 1
  %4676 = insertelement <4 x float> %4675, float 0.000000e+00, i32 2
  %4677 = insertelement <4 x float> %4676, float 0.000000e+00, i32 3
  %4678 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4672, <4 x float> %4677, <4 x float> zeroinitializer)
  %4679 = extractelement <4 x float> %4678, i32 0
  %4680 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4681 = getelementptr inbounds i8, i8* %4680, i64 16
  %4682 = bitcast i8* %4681 to float*
  store float %4679, float* %4682, align 4
  %4683 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4684 = getelementptr inbounds i8, i8* %4683, i64 16
  %4685 = bitcast i8* %4684 to float*
  %4686 = load float, float* %4685, align 4
  %4687 = insertelement <4 x float> zeroinitializer, float %4686, i32 0
  %4688 = insertelement <4 x float> %4687, float 0.000000e+00, i32 1
  %4689 = insertelement <4 x float> %4688, float 0.000000e+00, i32 2
  %4690 = insertelement <4 x float> %4689, float 0.000000e+00, i32 3
  %4691 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4692 = getelementptr inbounds i8, i8* %4691, i64 20
  %4693 = bitcast i8* %4692 to float*
  %4694 = load float, float* %4693, align 4
  %4695 = insertelement <4 x float> zeroinitializer, float %4694, i32 0
  %4696 = insertelement <4 x float> %4695, float 0.000000e+00, i32 1
  %4697 = insertelement <4 x float> %4696, float 0.000000e+00, i32 2
  %4698 = insertelement <4 x float> %4697, float 0.000000e+00, i32 3
  %4699 = getelementptr inbounds float, float* %2, i64 4
  %4700 = load float, float* %4699, align 4
  %4701 = insertelement <4 x float> zeroinitializer, float %4700, i32 0
  %4702 = insertelement <4 x float> %4701, float 0.000000e+00, i32 1
  %4703 = insertelement <4 x float> %4702, float 0.000000e+00, i32 2
  %4704 = insertelement <4 x float> %4703, float 0.000000e+00, i32 3
  %4705 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4698, <4 x float> %4704, <4 x float> %4690)
  %4706 = extractelement <4 x float> %4705, i32 0
  %4707 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4708 = getelementptr inbounds i8, i8* %4707, i64 16
  %4709 = bitcast i8* %4708 to float*
  store float %4706, float* %4709, align 4
  %4710 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4711 = getelementptr inbounds i8, i8* %4710, i64 16
  %4712 = bitcast i8* %4711 to float*
  %4713 = load float, float* %4712, align 4
  %4714 = insertelement <4 x float> zeroinitializer, float %4713, i32 0
  %4715 = insertelement <4 x float> %4714, float 0.000000e+00, i32 1
  %4716 = insertelement <4 x float> %4715, float 0.000000e+00, i32 2
  %4717 = insertelement <4 x float> %4716, float 0.000000e+00, i32 3
  %4718 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4719 = getelementptr inbounds i8, i8* %4718, i64 24
  %4720 = bitcast i8* %4719 to float*
  %4721 = load float, float* %4720, align 4
  %4722 = insertelement <4 x float> zeroinitializer, float %4721, i32 0
  %4723 = insertelement <4 x float> %4722, float 0.000000e+00, i32 1
  %4724 = insertelement <4 x float> %4723, float 0.000000e+00, i32 2
  %4725 = insertelement <4 x float> %4724, float 0.000000e+00, i32 3
  %4726 = getelementptr inbounds float, float* %2, i64 8
  %4727 = load float, float* %4726, align 4
  %4728 = insertelement <4 x float> zeroinitializer, float %4727, i32 0
  %4729 = insertelement <4 x float> %4728, float 0.000000e+00, i32 1
  %4730 = insertelement <4 x float> %4729, float 0.000000e+00, i32 2
  %4731 = insertelement <4 x float> %4730, float 0.000000e+00, i32 3
  %4732 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4725, <4 x float> %4731, <4 x float> %4717)
  %4733 = extractelement <4 x float> %4732, i32 0
  %4734 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4735 = getelementptr inbounds i8, i8* %4734, i64 16
  %4736 = bitcast i8* %4735 to float*
  store float %4733, float* %4736, align 4
  %4737 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4738 = getelementptr inbounds i8, i8* %4737, i64 16
  %4739 = bitcast i8* %4738 to float*
  %4740 = load float, float* %4739, align 4
  %4741 = insertelement <4 x float> zeroinitializer, float %4740, i32 0
  %4742 = insertelement <4 x float> %4741, float 0.000000e+00, i32 1
  %4743 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4744 = getelementptr inbounds i8, i8* %4743, i64 20
  %4745 = bitcast i8* %4744 to float*
  %4746 = load float, float* %4745, align 4
  %4747 = insertelement <4 x float> %4742, float %4746, i32 2
  %4748 = insertelement <4 x float> %4747, float 0.000000e+00, i32 3
  %4749 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4750 = getelementptr inbounds i8, i8* %4749, i64 28
  %4751 = bitcast i8* %4750 to float*
  %4752 = load float, float* %4751, align 4
  %4753 = insertelement <4 x float> zeroinitializer, float %4752, i32 0
  %4754 = insertelement <4 x float> %4753, float 0.000000e+00, i32 1
  %4755 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4756 = getelementptr inbounds i8, i8* %4755, i64 16
  %4757 = bitcast i8* %4756 to float*
  %4758 = load float, float* %4757, align 4
  %4759 = insertelement <4 x float> %4754, float %4758, i32 2
  %4760 = insertelement <4 x float> %4759, float 0.000000e+00, i32 3
  %4761 = getelementptr inbounds float, float* %2, i64 12
  %4762 = load float, float* %4761, align 4
  %4763 = insertelement <4 x float> zeroinitializer, float %4762, i32 0
  %4764 = insertelement <4 x float> %4763, float 0.000000e+00, i32 1
  %4765 = getelementptr inbounds float, float* %2, i64 1
  %4766 = load float, float* %4765, align 4
  %4767 = insertelement <4 x float> %4764, float %4766, i32 2
  %4768 = insertelement <4 x float> %4767, float 0.000000e+00, i32 3
  %4769 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4760, <4 x float> %4768, <4 x float> %4748)
  %4770 = extractelement <4 x float> %4769, i32 0
  %4771 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4772 = getelementptr inbounds i8, i8* %4771, i64 16
  %4773 = bitcast i8* %4772 to float*
  store float %4770, float* %4773, align 4
  %4774 = extractelement <4 x float> %4769, i32 1
  %4775 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4776 = getelementptr inbounds i8, i8* %4775, i64 20
  %4777 = bitcast i8* %4776 to float*
  store float %4774, float* %4777, align 4
  %4778 = extractelement <4 x float> %4769, i32 2
  %4779 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4780 = getelementptr inbounds i8, i8* %4779, i64 20
  %4781 = bitcast i8* %4780 to float*
  store float %4778, float* %4781, align 4
  %4782 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4783 = getelementptr inbounds i8, i8* %4782, i64 20
  %4784 = bitcast i8* %4783 to float*
  %4785 = load float, float* %4784, align 4
  %4786 = insertelement <4 x float> zeroinitializer, float %4785, i32 0
  %4787 = insertelement <4 x float> %4786, float 0.000000e+00, i32 1
  %4788 = insertelement <4 x float> %4787, float 0.000000e+00, i32 2
  %4789 = insertelement <4 x float> %4788, float 0.000000e+00, i32 3
  %4790 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4791 = getelementptr inbounds i8, i8* %4790, i64 20
  %4792 = bitcast i8* %4791 to float*
  %4793 = load float, float* %4792, align 4
  %4794 = insertelement <4 x float> zeroinitializer, float %4793, i32 0
  %4795 = insertelement <4 x float> %4794, float 0.000000e+00, i32 1
  %4796 = insertelement <4 x float> %4795, float 0.000000e+00, i32 2
  %4797 = insertelement <4 x float> %4796, float 0.000000e+00, i32 3
  %4798 = getelementptr inbounds float, float* %2, i64 5
  %4799 = load float, float* %4798, align 4
  %4800 = insertelement <4 x float> zeroinitializer, float %4799, i32 0
  %4801 = insertelement <4 x float> %4800, float 0.000000e+00, i32 1
  %4802 = insertelement <4 x float> %4801, float 0.000000e+00, i32 2
  %4803 = insertelement <4 x float> %4802, float 0.000000e+00, i32 3
  %4804 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4797, <4 x float> %4803, <4 x float> %4789)
  %4805 = extractelement <4 x float> %4804, i32 0
  %4806 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4807 = getelementptr inbounds i8, i8* %4806, i64 20
  %4808 = bitcast i8* %4807 to float*
  store float %4805, float* %4808, align 4
  %4809 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4810 = getelementptr inbounds i8, i8* %4809, i64 20
  %4811 = bitcast i8* %4810 to float*
  %4812 = load float, float* %4811, align 4
  %4813 = insertelement <4 x float> zeroinitializer, float %4812, i32 0
  %4814 = insertelement <4 x float> %4813, float 0.000000e+00, i32 1
  %4815 = insertelement <4 x float> %4814, float 0.000000e+00, i32 2
  %4816 = insertelement <4 x float> %4815, float 0.000000e+00, i32 3
  %4817 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4818 = getelementptr inbounds i8, i8* %4817, i64 24
  %4819 = bitcast i8* %4818 to float*
  %4820 = load float, float* %4819, align 4
  %4821 = insertelement <4 x float> zeroinitializer, float %4820, i32 0
  %4822 = insertelement <4 x float> %4821, float 0.000000e+00, i32 1
  %4823 = insertelement <4 x float> %4822, float 0.000000e+00, i32 2
  %4824 = insertelement <4 x float> %4823, float 0.000000e+00, i32 3
  %4825 = getelementptr inbounds float, float* %2, i64 9
  %4826 = load float, float* %4825, align 4
  %4827 = insertelement <4 x float> zeroinitializer, float %4826, i32 0
  %4828 = insertelement <4 x float> %4827, float 0.000000e+00, i32 1
  %4829 = insertelement <4 x float> %4828, float 0.000000e+00, i32 2
  %4830 = insertelement <4 x float> %4829, float 0.000000e+00, i32 3
  %4831 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4824, <4 x float> %4830, <4 x float> %4816)
  %4832 = extractelement <4 x float> %4831, i32 0
  %4833 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4834 = getelementptr inbounds i8, i8* %4833, i64 20
  %4835 = bitcast i8* %4834 to float*
  store float %4832, float* %4835, align 4
  %4836 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4837 = getelementptr inbounds i8, i8* %4836, i64 20
  %4838 = bitcast i8* %4837 to float*
  %4839 = load float, float* %4838, align 4
  %4840 = insertelement <4 x float> zeroinitializer, float %4839, i32 0
  %4841 = insertelement <4 x float> %4840, float 0.000000e+00, i32 1
  %4842 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4843 = getelementptr inbounds i8, i8* %4842, i64 24
  %4844 = bitcast i8* %4843 to float*
  %4845 = load float, float* %4844, align 4
  %4846 = insertelement <4 x float> %4841, float %4845, i32 2
  %4847 = insertelement <4 x float> %4846, float 0.000000e+00, i32 3
  %4848 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4849 = getelementptr inbounds i8, i8* %4848, i64 28
  %4850 = bitcast i8* %4849 to float*
  %4851 = load float, float* %4850, align 4
  %4852 = insertelement <4 x float> zeroinitializer, float %4851, i32 0
  %4853 = insertelement <4 x float> %4852, float 0.000000e+00, i32 1
  %4854 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4855 = getelementptr inbounds i8, i8* %4854, i64 16
  %4856 = bitcast i8* %4855 to float*
  %4857 = load float, float* %4856, align 4
  %4858 = insertelement <4 x float> %4853, float %4857, i32 2
  %4859 = insertelement <4 x float> %4858, float 0.000000e+00, i32 3
  %4860 = getelementptr inbounds float, float* %2, i64 13
  %4861 = load float, float* %4860, align 4
  %4862 = insertelement <4 x float> zeroinitializer, float %4861, i32 0
  %4863 = insertelement <4 x float> %4862, float 0.000000e+00, i32 1
  %4864 = getelementptr inbounds float, float* %2, i64 2
  %4865 = load float, float* %4864, align 4
  %4866 = insertelement <4 x float> %4863, float %4865, i32 2
  %4867 = insertelement <4 x float> %4866, float 0.000000e+00, i32 3
  %4868 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4859, <4 x float> %4867, <4 x float> %4847)
  %4869 = extractelement <4 x float> %4868, i32 0
  %4870 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4871 = getelementptr inbounds i8, i8* %4870, i64 20
  %4872 = bitcast i8* %4871 to float*
  store float %4869, float* %4872, align 4
  %4873 = extractelement <4 x float> %4868, i32 1
  %4874 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4875 = getelementptr inbounds i8, i8* %4874, i64 24
  %4876 = bitcast i8* %4875 to float*
  store float %4873, float* %4876, align 4
  %4877 = extractelement <4 x float> %4868, i32 2
  %4878 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4879 = getelementptr inbounds i8, i8* %4878, i64 24
  %4880 = bitcast i8* %4879 to float*
  store float %4877, float* %4880, align 4
  %4881 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4882 = getelementptr inbounds i8, i8* %4881, i64 24
  %4883 = bitcast i8* %4882 to float*
  %4884 = load float, float* %4883, align 4
  %4885 = insertelement <4 x float> zeroinitializer, float %4884, i32 0
  %4886 = insertelement <4 x float> %4885, float 0.000000e+00, i32 1
  %4887 = insertelement <4 x float> %4886, float 0.000000e+00, i32 2
  %4888 = insertelement <4 x float> %4887, float 0.000000e+00, i32 3
  %4889 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4890 = getelementptr inbounds i8, i8* %4889, i64 20
  %4891 = bitcast i8* %4890 to float*
  %4892 = load float, float* %4891, align 4
  %4893 = insertelement <4 x float> zeroinitializer, float %4892, i32 0
  %4894 = insertelement <4 x float> %4893, float 0.000000e+00, i32 1
  %4895 = insertelement <4 x float> %4894, float 0.000000e+00, i32 2
  %4896 = insertelement <4 x float> %4895, float 0.000000e+00, i32 3
  %4897 = getelementptr inbounds float, float* %2, i64 6
  %4898 = load float, float* %4897, align 4
  %4899 = insertelement <4 x float> zeroinitializer, float %4898, i32 0
  %4900 = insertelement <4 x float> %4899, float 0.000000e+00, i32 1
  %4901 = insertelement <4 x float> %4900, float 0.000000e+00, i32 2
  %4902 = insertelement <4 x float> %4901, float 0.000000e+00, i32 3
  %4903 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4896, <4 x float> %4902, <4 x float> %4888)
  %4904 = extractelement <4 x float> %4903, i32 0
  %4905 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4906 = getelementptr inbounds i8, i8* %4905, i64 24
  %4907 = bitcast i8* %4906 to float*
  store float %4904, float* %4907, align 4
  %4908 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4909 = getelementptr inbounds i8, i8* %4908, i64 24
  %4910 = bitcast i8* %4909 to float*
  %4911 = load float, float* %4910, align 4
  %4912 = insertelement <4 x float> zeroinitializer, float %4911, i32 0
  %4913 = insertelement <4 x float> %4912, float 0.000000e+00, i32 1
  %4914 = insertelement <4 x float> %4913, float 0.000000e+00, i32 2
  %4915 = insertelement <4 x float> %4914, float 0.000000e+00, i32 3
  %4916 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4917 = getelementptr inbounds i8, i8* %4916, i64 24
  %4918 = bitcast i8* %4917 to float*
  %4919 = load float, float* %4918, align 4
  %4920 = insertelement <4 x float> zeroinitializer, float %4919, i32 0
  %4921 = insertelement <4 x float> %4920, float 0.000000e+00, i32 1
  %4922 = insertelement <4 x float> %4921, float 0.000000e+00, i32 2
  %4923 = insertelement <4 x float> %4922, float 0.000000e+00, i32 3
  %4924 = getelementptr inbounds float, float* %2, i64 10
  %4925 = load float, float* %4924, align 4
  %4926 = insertelement <4 x float> zeroinitializer, float %4925, i32 0
  %4927 = insertelement <4 x float> %4926, float 0.000000e+00, i32 1
  %4928 = insertelement <4 x float> %4927, float 0.000000e+00, i32 2
  %4929 = insertelement <4 x float> %4928, float 0.000000e+00, i32 3
  %4930 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4923, <4 x float> %4929, <4 x float> %4915)
  %4931 = extractelement <4 x float> %4930, i32 0
  %4932 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4933 = getelementptr inbounds i8, i8* %4932, i64 24
  %4934 = bitcast i8* %4933 to float*
  store float %4931, float* %4934, align 4
  %4935 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4936 = getelementptr inbounds i8, i8* %4935, i64 24
  %4937 = bitcast i8* %4936 to float*
  %4938 = load float, float* %4937, align 4
  %4939 = insertelement <4 x float> zeroinitializer, float %4938, i32 0
  %4940 = insertelement <4 x float> %4939, float 0.000000e+00, i32 1
  %4941 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4942 = getelementptr inbounds i8, i8* %4941, i64 28
  %4943 = bitcast i8* %4942 to float*
  %4944 = load float, float* %4943, align 4
  %4945 = insertelement <4 x float> %4940, float %4944, i32 2
  %4946 = insertelement <4 x float> %4945, float 0.000000e+00, i32 3
  %4947 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4948 = getelementptr inbounds i8, i8* %4947, i64 28
  %4949 = bitcast i8* %4948 to float*
  %4950 = load float, float* %4949, align 4
  %4951 = insertelement <4 x float> zeroinitializer, float %4950, i32 0
  %4952 = insertelement <4 x float> %4951, float 0.000000e+00, i32 1
  %4953 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4954 = getelementptr inbounds i8, i8* %4953, i64 16
  %4955 = bitcast i8* %4954 to float*
  %4956 = load float, float* %4955, align 4
  %4957 = insertelement <4 x float> %4952, float %4956, i32 2
  %4958 = insertelement <4 x float> %4957, float 0.000000e+00, i32 3
  %4959 = getelementptr inbounds float, float* %2, i64 14
  %4960 = load float, float* %4959, align 4
  %4961 = insertelement <4 x float> zeroinitializer, float %4960, i32 0
  %4962 = insertelement <4 x float> %4961, float 0.000000e+00, i32 1
  %4963 = getelementptr inbounds float, float* %2, i64 3
  %4964 = load float, float* %4963, align 4
  %4965 = insertelement <4 x float> %4962, float %4964, i32 2
  %4966 = insertelement <4 x float> %4965, float 0.000000e+00, i32 3
  %4967 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4958, <4 x float> %4966, <4 x float> %4946)
  %4968 = extractelement <4 x float> %4967, i32 0
  %4969 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4970 = getelementptr inbounds i8, i8* %4969, i64 24
  %4971 = bitcast i8* %4970 to float*
  store float %4968, float* %4971, align 4
  %4972 = extractelement <4 x float> %4967, i32 1
  %4973 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4974 = getelementptr inbounds i8, i8* %4973, i64 28
  %4975 = bitcast i8* %4974 to float*
  store float %4972, float* %4975, align 4
  %4976 = extractelement <4 x float> %4967, i32 2
  %4977 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4978 = getelementptr inbounds i8, i8* %4977, i64 28
  %4979 = bitcast i8* %4978 to float*
  store float %4976, float* %4979, align 4
  %4980 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4981 = getelementptr inbounds i8, i8* %4980, i64 28
  %4982 = bitcast i8* %4981 to float*
  %4983 = load float, float* %4982, align 4
  %4984 = insertelement <4 x float> zeroinitializer, float %4983, i32 0
  %4985 = insertelement <4 x float> %4984, float 0.000000e+00, i32 1
  %4986 = insertelement <4 x float> %4985, float 0.000000e+00, i32 2
  %4987 = insertelement <4 x float> %4986, float 0.000000e+00, i32 3
  %4988 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %4989 = getelementptr inbounds i8, i8* %4988, i64 20
  %4990 = bitcast i8* %4989 to float*
  %4991 = load float, float* %4990, align 4
  %4992 = insertelement <4 x float> zeroinitializer, float %4991, i32 0
  %4993 = insertelement <4 x float> %4992, float 0.000000e+00, i32 1
  %4994 = insertelement <4 x float> %4993, float 0.000000e+00, i32 2
  %4995 = insertelement <4 x float> %4994, float 0.000000e+00, i32 3
  %4996 = getelementptr inbounds float, float* %2, i64 7
  %4997 = load float, float* %4996, align 4
  %4998 = insertelement <4 x float> zeroinitializer, float %4997, i32 0
  %4999 = insertelement <4 x float> %4998, float 0.000000e+00, i32 1
  %5000 = insertelement <4 x float> %4999, float 0.000000e+00, i32 2
  %5001 = insertelement <4 x float> %5000, float 0.000000e+00, i32 3
  %5002 = call <4 x float> @llvm.fma.v4f32(<4 x float> %4995, <4 x float> %5001, <4 x float> %4987)
  %5003 = extractelement <4 x float> %5002, i32 0
  %5004 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5005 = getelementptr inbounds i8, i8* %5004, i64 28
  %5006 = bitcast i8* %5005 to float*
  store float %5003, float* %5006, align 4
  %5007 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5008 = getelementptr inbounds i8, i8* %5007, i64 28
  %5009 = bitcast i8* %5008 to float*
  %5010 = load float, float* %5009, align 4
  %5011 = insertelement <4 x float> zeroinitializer, float %5010, i32 0
  %5012 = insertelement <4 x float> %5011, float 0.000000e+00, i32 1
  %5013 = insertelement <4 x float> %5012, float 0.000000e+00, i32 2
  %5014 = insertelement <4 x float> %5013, float 0.000000e+00, i32 3
  %5015 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5016 = getelementptr inbounds i8, i8* %5015, i64 24
  %5017 = bitcast i8* %5016 to float*
  %5018 = load float, float* %5017, align 4
  %5019 = insertelement <4 x float> zeroinitializer, float %5018, i32 0
  %5020 = insertelement <4 x float> %5019, float 0.000000e+00, i32 1
  %5021 = insertelement <4 x float> %5020, float 0.000000e+00, i32 2
  %5022 = insertelement <4 x float> %5021, float 0.000000e+00, i32 3
  %5023 = getelementptr inbounds float, float* %2, i64 11
  %5024 = load float, float* %5023, align 4
  %5025 = insertelement <4 x float> zeroinitializer, float %5024, i32 0
  %5026 = insertelement <4 x float> %5025, float 0.000000e+00, i32 1
  %5027 = insertelement <4 x float> %5026, float 0.000000e+00, i32 2
  %5028 = insertelement <4 x float> %5027, float 0.000000e+00, i32 3
  %5029 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5022, <4 x float> %5028, <4 x float> %5014)
  %5030 = extractelement <4 x float> %5029, i32 0
  %5031 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5032 = getelementptr inbounds i8, i8* %5031, i64 28
  %5033 = bitcast i8* %5032 to float*
  store float %5030, float* %5033, align 4
  %5034 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5035 = getelementptr inbounds i8, i8* %5034, i64 28
  %5036 = bitcast i8* %5035 to float*
  %5037 = load float, float* %5036, align 4
  %5038 = insertelement <4 x float> zeroinitializer, float %5037, i32 0
  %5039 = insertelement <4 x float> %5038, float 0.000000e+00, i32 1
  %5040 = insertelement <4 x float> %5039, float 0.000000e+00, i32 2
  %5041 = insertelement <4 x float> %5040, float 0.000000e+00, i32 3
  %5042 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5043 = getelementptr inbounds i8, i8* %5042, i64 28
  %5044 = bitcast i8* %5043 to float*
  %5045 = load float, float* %5044, align 4
  %5046 = insertelement <4 x float> zeroinitializer, float %5045, i32 0
  %5047 = insertelement <4 x float> %5046, float 0.000000e+00, i32 1
  %5048 = insertelement <4 x float> %5047, float 0.000000e+00, i32 2
  %5049 = insertelement <4 x float> %5048, float 0.000000e+00, i32 3
  %5050 = getelementptr inbounds float, float* %2, i64 15
  %5051 = load float, float* %5050, align 4
  %5052 = insertelement <4 x float> zeroinitializer, float %5051, i32 0
  %5053 = insertelement <4 x float> %5052, float 0.000000e+00, i32 1
  %5054 = insertelement <4 x float> %5053, float 0.000000e+00, i32 2
  %5055 = insertelement <4 x float> %5054, float 0.000000e+00, i32 3
  %5056 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5049, <4 x float> %5055, <4 x float> %5041)
  %5057 = extractelement <4 x float> %5056, i32 0
  %5058 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5059 = getelementptr inbounds i8, i8* %5058, i64 28
  %5060 = bitcast i8* %5059 to float*
  store float %5057, float* %5060, align 4
  %5061 = extractelement <4 x float> %5056, i32 1
  %5062 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5063 = getelementptr inbounds i8, i8* %5062, i64 32
  %5064 = bitcast i8* %5063 to float*
  store float %5061, float* %5064, align 4
  %5065 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5066 = getelementptr inbounds i8, i8* %5065, i64 32
  %5067 = bitcast i8* %5066 to float*
  %5068 = load float, float* %5067, align 4
  %5069 = insertelement <4 x float> zeroinitializer, float %5068, i32 0
  %5070 = insertelement <4 x float> %5069, float 0.000000e+00, i32 1
  %5071 = insertelement <4 x float> %5070, float 0.000000e+00, i32 2
  %5072 = insertelement <4 x float> %5071, float 0.000000e+00, i32 3
  %5073 = load float, float* %2, align 4
  %5074 = insertelement <4 x float> zeroinitializer, float %5073, i32 0
  %5075 = insertelement <4 x float> %5074, float 0.000000e+00, i32 1
  %5076 = insertelement <4 x float> %5075, float 0.000000e+00, i32 2
  %5077 = insertelement <4 x float> %5076, float 0.000000e+00, i32 3
  %5078 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5072, <4 x float> %5077, <4 x float> zeroinitializer)
  %5079 = extractelement <4 x float> %5078, i32 0
  %5080 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5081 = getelementptr inbounds i8, i8* %5080, i64 32
  %5082 = bitcast i8* %5081 to float*
  store float %5079, float* %5082, align 4
  %5083 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5084 = getelementptr inbounds i8, i8* %5083, i64 32
  %5085 = bitcast i8* %5084 to float*
  %5086 = load float, float* %5085, align 4
  %5087 = insertelement <4 x float> zeroinitializer, float %5086, i32 0
  %5088 = insertelement <4 x float> %5087, float 0.000000e+00, i32 1
  %5089 = insertelement <4 x float> %5088, float 0.000000e+00, i32 2
  %5090 = insertelement <4 x float> %5089, float 0.000000e+00, i32 3
  %5091 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5092 = getelementptr inbounds i8, i8* %5091, i64 36
  %5093 = bitcast i8* %5092 to float*
  %5094 = load float, float* %5093, align 4
  %5095 = insertelement <4 x float> zeroinitializer, float %5094, i32 0
  %5096 = insertelement <4 x float> %5095, float 0.000000e+00, i32 1
  %5097 = insertelement <4 x float> %5096, float 0.000000e+00, i32 2
  %5098 = insertelement <4 x float> %5097, float 0.000000e+00, i32 3
  %5099 = getelementptr inbounds float, float* %2, i64 4
  %5100 = load float, float* %5099, align 4
  %5101 = insertelement <4 x float> zeroinitializer, float %5100, i32 0
  %5102 = insertelement <4 x float> %5101, float 0.000000e+00, i32 1
  %5103 = insertelement <4 x float> %5102, float 0.000000e+00, i32 2
  %5104 = insertelement <4 x float> %5103, float 0.000000e+00, i32 3
  %5105 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5098, <4 x float> %5104, <4 x float> %5090)
  %5106 = extractelement <4 x float> %5105, i32 0
  %5107 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5108 = getelementptr inbounds i8, i8* %5107, i64 32
  %5109 = bitcast i8* %5108 to float*
  store float %5106, float* %5109, align 4
  %5110 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5111 = getelementptr inbounds i8, i8* %5110, i64 32
  %5112 = bitcast i8* %5111 to float*
  %5113 = load float, float* %5112, align 4
  %5114 = insertelement <4 x float> zeroinitializer, float %5113, i32 0
  %5115 = insertelement <4 x float> %5114, float 0.000000e+00, i32 1
  %5116 = insertelement <4 x float> %5115, float 0.000000e+00, i32 2
  %5117 = insertelement <4 x float> %5116, float 0.000000e+00, i32 3
  %5118 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5119 = getelementptr inbounds i8, i8* %5118, i64 40
  %5120 = bitcast i8* %5119 to float*
  %5121 = load float, float* %5120, align 4
  %5122 = insertelement <4 x float> zeroinitializer, float %5121, i32 0
  %5123 = insertelement <4 x float> %5122, float 0.000000e+00, i32 1
  %5124 = insertelement <4 x float> %5123, float 0.000000e+00, i32 2
  %5125 = insertelement <4 x float> %5124, float 0.000000e+00, i32 3
  %5126 = getelementptr inbounds float, float* %2, i64 8
  %5127 = load float, float* %5126, align 4
  %5128 = insertelement <4 x float> zeroinitializer, float %5127, i32 0
  %5129 = insertelement <4 x float> %5128, float 0.000000e+00, i32 1
  %5130 = insertelement <4 x float> %5129, float 0.000000e+00, i32 2
  %5131 = insertelement <4 x float> %5130, float 0.000000e+00, i32 3
  %5132 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5125, <4 x float> %5131, <4 x float> %5117)
  %5133 = extractelement <4 x float> %5132, i32 0
  %5134 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5135 = getelementptr inbounds i8, i8* %5134, i64 32
  %5136 = bitcast i8* %5135 to float*
  store float %5133, float* %5136, align 4
  %5137 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5138 = getelementptr inbounds i8, i8* %5137, i64 32
  %5139 = bitcast i8* %5138 to float*
  %5140 = load float, float* %5139, align 4
  %5141 = insertelement <4 x float> zeroinitializer, float %5140, i32 0
  %5142 = insertelement <4 x float> %5141, float 0.000000e+00, i32 1
  %5143 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5144 = getelementptr inbounds i8, i8* %5143, i64 36
  %5145 = bitcast i8* %5144 to float*
  %5146 = load float, float* %5145, align 4
  %5147 = insertelement <4 x float> %5142, float %5146, i32 2
  %5148 = insertelement <4 x float> %5147, float 0.000000e+00, i32 3
  %5149 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5150 = getelementptr inbounds i8, i8* %5149, i64 44
  %5151 = bitcast i8* %5150 to float*
  %5152 = load float, float* %5151, align 4
  %5153 = insertelement <4 x float> zeroinitializer, float %5152, i32 0
  %5154 = insertelement <4 x float> %5153, float 0.000000e+00, i32 1
  %5155 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5156 = getelementptr inbounds i8, i8* %5155, i64 32
  %5157 = bitcast i8* %5156 to float*
  %5158 = load float, float* %5157, align 4
  %5159 = insertelement <4 x float> %5154, float %5158, i32 2
  %5160 = insertelement <4 x float> %5159, float 0.000000e+00, i32 3
  %5161 = getelementptr inbounds float, float* %2, i64 12
  %5162 = load float, float* %5161, align 4
  %5163 = insertelement <4 x float> zeroinitializer, float %5162, i32 0
  %5164 = insertelement <4 x float> %5163, float 0.000000e+00, i32 1
  %5165 = getelementptr inbounds float, float* %2, i64 1
  %5166 = load float, float* %5165, align 4
  %5167 = insertelement <4 x float> %5164, float %5166, i32 2
  %5168 = insertelement <4 x float> %5167, float 0.000000e+00, i32 3
  %5169 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5160, <4 x float> %5168, <4 x float> %5148)
  %5170 = extractelement <4 x float> %5169, i32 0
  %5171 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5172 = getelementptr inbounds i8, i8* %5171, i64 32
  %5173 = bitcast i8* %5172 to float*
  store float %5170, float* %5173, align 4
  %5174 = extractelement <4 x float> %5169, i32 1
  %5175 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5176 = getelementptr inbounds i8, i8* %5175, i64 36
  %5177 = bitcast i8* %5176 to float*
  store float %5174, float* %5177, align 4
  %5178 = extractelement <4 x float> %5169, i32 2
  %5179 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5180 = getelementptr inbounds i8, i8* %5179, i64 36
  %5181 = bitcast i8* %5180 to float*
  store float %5178, float* %5181, align 4
  %5182 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5183 = getelementptr inbounds i8, i8* %5182, i64 36
  %5184 = bitcast i8* %5183 to float*
  %5185 = load float, float* %5184, align 4
  %5186 = insertelement <4 x float> zeroinitializer, float %5185, i32 0
  %5187 = insertelement <4 x float> %5186, float 0.000000e+00, i32 1
  %5188 = insertelement <4 x float> %5187, float 0.000000e+00, i32 2
  %5189 = insertelement <4 x float> %5188, float 0.000000e+00, i32 3
  %5190 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5191 = getelementptr inbounds i8, i8* %5190, i64 36
  %5192 = bitcast i8* %5191 to float*
  %5193 = load float, float* %5192, align 4
  %5194 = insertelement <4 x float> zeroinitializer, float %5193, i32 0
  %5195 = insertelement <4 x float> %5194, float 0.000000e+00, i32 1
  %5196 = insertelement <4 x float> %5195, float 0.000000e+00, i32 2
  %5197 = insertelement <4 x float> %5196, float 0.000000e+00, i32 3
  %5198 = getelementptr inbounds float, float* %2, i64 5
  %5199 = load float, float* %5198, align 4
  %5200 = insertelement <4 x float> zeroinitializer, float %5199, i32 0
  %5201 = insertelement <4 x float> %5200, float 0.000000e+00, i32 1
  %5202 = insertelement <4 x float> %5201, float 0.000000e+00, i32 2
  %5203 = insertelement <4 x float> %5202, float 0.000000e+00, i32 3
  %5204 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5197, <4 x float> %5203, <4 x float> %5189)
  %5205 = extractelement <4 x float> %5204, i32 0
  %5206 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5207 = getelementptr inbounds i8, i8* %5206, i64 36
  %5208 = bitcast i8* %5207 to float*
  store float %5205, float* %5208, align 4
  %5209 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5210 = getelementptr inbounds i8, i8* %5209, i64 36
  %5211 = bitcast i8* %5210 to float*
  %5212 = load float, float* %5211, align 4
  %5213 = insertelement <4 x float> zeroinitializer, float %5212, i32 0
  %5214 = insertelement <4 x float> %5213, float 0.000000e+00, i32 1
  %5215 = insertelement <4 x float> %5214, float 0.000000e+00, i32 2
  %5216 = insertelement <4 x float> %5215, float 0.000000e+00, i32 3
  %5217 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5218 = getelementptr inbounds i8, i8* %5217, i64 40
  %5219 = bitcast i8* %5218 to float*
  %5220 = load float, float* %5219, align 4
  %5221 = insertelement <4 x float> zeroinitializer, float %5220, i32 0
  %5222 = insertelement <4 x float> %5221, float 0.000000e+00, i32 1
  %5223 = insertelement <4 x float> %5222, float 0.000000e+00, i32 2
  %5224 = insertelement <4 x float> %5223, float 0.000000e+00, i32 3
  %5225 = getelementptr inbounds float, float* %2, i64 9
  %5226 = load float, float* %5225, align 4
  %5227 = insertelement <4 x float> zeroinitializer, float %5226, i32 0
  %5228 = insertelement <4 x float> %5227, float 0.000000e+00, i32 1
  %5229 = insertelement <4 x float> %5228, float 0.000000e+00, i32 2
  %5230 = insertelement <4 x float> %5229, float 0.000000e+00, i32 3
  %5231 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5224, <4 x float> %5230, <4 x float> %5216)
  %5232 = extractelement <4 x float> %5231, i32 0
  %5233 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5234 = getelementptr inbounds i8, i8* %5233, i64 36
  %5235 = bitcast i8* %5234 to float*
  store float %5232, float* %5235, align 4
  %5236 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5237 = getelementptr inbounds i8, i8* %5236, i64 36
  %5238 = bitcast i8* %5237 to float*
  %5239 = load float, float* %5238, align 4
  %5240 = insertelement <4 x float> zeroinitializer, float %5239, i32 0
  %5241 = insertelement <4 x float> %5240, float 0.000000e+00, i32 1
  %5242 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5243 = getelementptr inbounds i8, i8* %5242, i64 40
  %5244 = bitcast i8* %5243 to float*
  %5245 = load float, float* %5244, align 4
  %5246 = insertelement <4 x float> %5241, float %5245, i32 2
  %5247 = insertelement <4 x float> %5246, float 0.000000e+00, i32 3
  %5248 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5249 = getelementptr inbounds i8, i8* %5248, i64 44
  %5250 = bitcast i8* %5249 to float*
  %5251 = load float, float* %5250, align 4
  %5252 = insertelement <4 x float> zeroinitializer, float %5251, i32 0
  %5253 = insertelement <4 x float> %5252, float 0.000000e+00, i32 1
  %5254 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5255 = getelementptr inbounds i8, i8* %5254, i64 32
  %5256 = bitcast i8* %5255 to float*
  %5257 = load float, float* %5256, align 4
  %5258 = insertelement <4 x float> %5253, float %5257, i32 2
  %5259 = insertelement <4 x float> %5258, float 0.000000e+00, i32 3
  %5260 = getelementptr inbounds float, float* %2, i64 13
  %5261 = load float, float* %5260, align 4
  %5262 = insertelement <4 x float> zeroinitializer, float %5261, i32 0
  %5263 = insertelement <4 x float> %5262, float 0.000000e+00, i32 1
  %5264 = getelementptr inbounds float, float* %2, i64 2
  %5265 = load float, float* %5264, align 4
  %5266 = insertelement <4 x float> %5263, float %5265, i32 2
  %5267 = insertelement <4 x float> %5266, float 0.000000e+00, i32 3
  %5268 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5259, <4 x float> %5267, <4 x float> %5247)
  %5269 = extractelement <4 x float> %5268, i32 0
  %5270 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5271 = getelementptr inbounds i8, i8* %5270, i64 36
  %5272 = bitcast i8* %5271 to float*
  store float %5269, float* %5272, align 4
  %5273 = extractelement <4 x float> %5268, i32 1
  %5274 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5275 = getelementptr inbounds i8, i8* %5274, i64 40
  %5276 = bitcast i8* %5275 to float*
  store float %5273, float* %5276, align 4
  %5277 = extractelement <4 x float> %5268, i32 2
  %5278 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5279 = getelementptr inbounds i8, i8* %5278, i64 40
  %5280 = bitcast i8* %5279 to float*
  store float %5277, float* %5280, align 4
  %5281 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5282 = getelementptr inbounds i8, i8* %5281, i64 40
  %5283 = bitcast i8* %5282 to float*
  %5284 = load float, float* %5283, align 4
  %5285 = insertelement <4 x float> zeroinitializer, float %5284, i32 0
  %5286 = insertelement <4 x float> %5285, float 0.000000e+00, i32 1
  %5287 = insertelement <4 x float> %5286, float 0.000000e+00, i32 2
  %5288 = insertelement <4 x float> %5287, float 0.000000e+00, i32 3
  %5289 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5290 = getelementptr inbounds i8, i8* %5289, i64 36
  %5291 = bitcast i8* %5290 to float*
  %5292 = load float, float* %5291, align 4
  %5293 = insertelement <4 x float> zeroinitializer, float %5292, i32 0
  %5294 = insertelement <4 x float> %5293, float 0.000000e+00, i32 1
  %5295 = insertelement <4 x float> %5294, float 0.000000e+00, i32 2
  %5296 = insertelement <4 x float> %5295, float 0.000000e+00, i32 3
  %5297 = getelementptr inbounds float, float* %2, i64 6
  %5298 = load float, float* %5297, align 4
  %5299 = insertelement <4 x float> zeroinitializer, float %5298, i32 0
  %5300 = insertelement <4 x float> %5299, float 0.000000e+00, i32 1
  %5301 = insertelement <4 x float> %5300, float 0.000000e+00, i32 2
  %5302 = insertelement <4 x float> %5301, float 0.000000e+00, i32 3
  %5303 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5296, <4 x float> %5302, <4 x float> %5288)
  %5304 = extractelement <4 x float> %5303, i32 0
  %5305 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5306 = getelementptr inbounds i8, i8* %5305, i64 40
  %5307 = bitcast i8* %5306 to float*
  store float %5304, float* %5307, align 4
  %5308 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5309 = getelementptr inbounds i8, i8* %5308, i64 40
  %5310 = bitcast i8* %5309 to float*
  %5311 = load float, float* %5310, align 4
  %5312 = insertelement <4 x float> zeroinitializer, float %5311, i32 0
  %5313 = insertelement <4 x float> %5312, float 0.000000e+00, i32 1
  %5314 = insertelement <4 x float> %5313, float 0.000000e+00, i32 2
  %5315 = insertelement <4 x float> %5314, float 0.000000e+00, i32 3
  %5316 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5317 = getelementptr inbounds i8, i8* %5316, i64 40
  %5318 = bitcast i8* %5317 to float*
  %5319 = load float, float* %5318, align 4
  %5320 = insertelement <4 x float> zeroinitializer, float %5319, i32 0
  %5321 = insertelement <4 x float> %5320, float 0.000000e+00, i32 1
  %5322 = insertelement <4 x float> %5321, float 0.000000e+00, i32 2
  %5323 = insertelement <4 x float> %5322, float 0.000000e+00, i32 3
  %5324 = getelementptr inbounds float, float* %2, i64 10
  %5325 = load float, float* %5324, align 4
  %5326 = insertelement <4 x float> zeroinitializer, float %5325, i32 0
  %5327 = insertelement <4 x float> %5326, float 0.000000e+00, i32 1
  %5328 = insertelement <4 x float> %5327, float 0.000000e+00, i32 2
  %5329 = insertelement <4 x float> %5328, float 0.000000e+00, i32 3
  %5330 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5323, <4 x float> %5329, <4 x float> %5315)
  %5331 = extractelement <4 x float> %5330, i32 0
  %5332 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5333 = getelementptr inbounds i8, i8* %5332, i64 40
  %5334 = bitcast i8* %5333 to float*
  store float %5331, float* %5334, align 4
  %5335 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5336 = getelementptr inbounds i8, i8* %5335, i64 40
  %5337 = bitcast i8* %5336 to float*
  %5338 = load float, float* %5337, align 4
  %5339 = insertelement <4 x float> zeroinitializer, float %5338, i32 0
  %5340 = insertelement <4 x float> %5339, float 0.000000e+00, i32 1
  %5341 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5342 = getelementptr inbounds i8, i8* %5341, i64 44
  %5343 = bitcast i8* %5342 to float*
  %5344 = load float, float* %5343, align 4
  %5345 = insertelement <4 x float> %5340, float %5344, i32 2
  %5346 = insertelement <4 x float> %5345, float 0.000000e+00, i32 3
  %5347 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5348 = getelementptr inbounds i8, i8* %5347, i64 44
  %5349 = bitcast i8* %5348 to float*
  %5350 = load float, float* %5349, align 4
  %5351 = insertelement <4 x float> zeroinitializer, float %5350, i32 0
  %5352 = insertelement <4 x float> %5351, float 0.000000e+00, i32 1
  %5353 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5354 = getelementptr inbounds i8, i8* %5353, i64 32
  %5355 = bitcast i8* %5354 to float*
  %5356 = load float, float* %5355, align 4
  %5357 = insertelement <4 x float> %5352, float %5356, i32 2
  %5358 = insertelement <4 x float> %5357, float 0.000000e+00, i32 3
  %5359 = getelementptr inbounds float, float* %2, i64 14
  %5360 = load float, float* %5359, align 4
  %5361 = insertelement <4 x float> zeroinitializer, float %5360, i32 0
  %5362 = insertelement <4 x float> %5361, float 0.000000e+00, i32 1
  %5363 = getelementptr inbounds float, float* %2, i64 3
  %5364 = load float, float* %5363, align 4
  %5365 = insertelement <4 x float> %5362, float %5364, i32 2
  %5366 = insertelement <4 x float> %5365, float 0.000000e+00, i32 3
  %5367 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5358, <4 x float> %5366, <4 x float> %5346)
  %5368 = extractelement <4 x float> %5367, i32 0
  %5369 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5370 = getelementptr inbounds i8, i8* %5369, i64 40
  %5371 = bitcast i8* %5370 to float*
  store float %5368, float* %5371, align 4
  %5372 = extractelement <4 x float> %5367, i32 1
  %5373 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5374 = getelementptr inbounds i8, i8* %5373, i64 44
  %5375 = bitcast i8* %5374 to float*
  store float %5372, float* %5375, align 4
  %5376 = extractelement <4 x float> %5367, i32 2
  %5377 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5378 = getelementptr inbounds i8, i8* %5377, i64 44
  %5379 = bitcast i8* %5378 to float*
  store float %5376, float* %5379, align 4
  %5380 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5381 = getelementptr inbounds i8, i8* %5380, i64 44
  %5382 = bitcast i8* %5381 to float*
  %5383 = load float, float* %5382, align 4
  %5384 = insertelement <4 x float> zeroinitializer, float %5383, i32 0
  %5385 = insertelement <4 x float> %5384, float 0.000000e+00, i32 1
  %5386 = insertelement <4 x float> %5385, float 0.000000e+00, i32 2
  %5387 = insertelement <4 x float> %5386, float 0.000000e+00, i32 3
  %5388 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5389 = getelementptr inbounds i8, i8* %5388, i64 36
  %5390 = bitcast i8* %5389 to float*
  %5391 = load float, float* %5390, align 4
  %5392 = insertelement <4 x float> zeroinitializer, float %5391, i32 0
  %5393 = insertelement <4 x float> %5392, float 0.000000e+00, i32 1
  %5394 = insertelement <4 x float> %5393, float 0.000000e+00, i32 2
  %5395 = insertelement <4 x float> %5394, float 0.000000e+00, i32 3
  %5396 = getelementptr inbounds float, float* %2, i64 7
  %5397 = load float, float* %5396, align 4
  %5398 = insertelement <4 x float> zeroinitializer, float %5397, i32 0
  %5399 = insertelement <4 x float> %5398, float 0.000000e+00, i32 1
  %5400 = insertelement <4 x float> %5399, float 0.000000e+00, i32 2
  %5401 = insertelement <4 x float> %5400, float 0.000000e+00, i32 3
  %5402 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5395, <4 x float> %5401, <4 x float> %5387)
  %5403 = extractelement <4 x float> %5402, i32 0
  %5404 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5405 = getelementptr inbounds i8, i8* %5404, i64 44
  %5406 = bitcast i8* %5405 to float*
  store float %5403, float* %5406, align 4
  %5407 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5408 = getelementptr inbounds i8, i8* %5407, i64 44
  %5409 = bitcast i8* %5408 to float*
  %5410 = load float, float* %5409, align 4
  %5411 = insertelement <4 x float> zeroinitializer, float %5410, i32 0
  %5412 = insertelement <4 x float> %5411, float 0.000000e+00, i32 1
  %5413 = insertelement <4 x float> %5412, float 0.000000e+00, i32 2
  %5414 = insertelement <4 x float> %5413, float 0.000000e+00, i32 3
  %5415 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5416 = getelementptr inbounds i8, i8* %5415, i64 40
  %5417 = bitcast i8* %5416 to float*
  %5418 = load float, float* %5417, align 4
  %5419 = insertelement <4 x float> zeroinitializer, float %5418, i32 0
  %5420 = insertelement <4 x float> %5419, float 0.000000e+00, i32 1
  %5421 = insertelement <4 x float> %5420, float 0.000000e+00, i32 2
  %5422 = insertelement <4 x float> %5421, float 0.000000e+00, i32 3
  %5423 = getelementptr inbounds float, float* %2, i64 11
  %5424 = load float, float* %5423, align 4
  %5425 = insertelement <4 x float> zeroinitializer, float %5424, i32 0
  %5426 = insertelement <4 x float> %5425, float 0.000000e+00, i32 1
  %5427 = insertelement <4 x float> %5426, float 0.000000e+00, i32 2
  %5428 = insertelement <4 x float> %5427, float 0.000000e+00, i32 3
  %5429 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5422, <4 x float> %5428, <4 x float> %5414)
  %5430 = extractelement <4 x float> %5429, i32 0
  %5431 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5432 = getelementptr inbounds i8, i8* %5431, i64 44
  %5433 = bitcast i8* %5432 to float*
  store float %5430, float* %5433, align 4
  %5434 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5435 = getelementptr inbounds i8, i8* %5434, i64 44
  %5436 = bitcast i8* %5435 to float*
  %5437 = load float, float* %5436, align 4
  %5438 = insertelement <4 x float> zeroinitializer, float %5437, i32 0
  %5439 = insertelement <4 x float> %5438, float 0.000000e+00, i32 1
  %5440 = insertelement <4 x float> %5439, float 0.000000e+00, i32 2
  %5441 = insertelement <4 x float> %5440, float 0.000000e+00, i32 3
  %5442 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5443 = getelementptr inbounds i8, i8* %5442, i64 44
  %5444 = bitcast i8* %5443 to float*
  %5445 = load float, float* %5444, align 4
  %5446 = insertelement <4 x float> zeroinitializer, float %5445, i32 0
  %5447 = insertelement <4 x float> %5446, float 0.000000e+00, i32 1
  %5448 = insertelement <4 x float> %5447, float 0.000000e+00, i32 2
  %5449 = insertelement <4 x float> %5448, float 0.000000e+00, i32 3
  %5450 = getelementptr inbounds float, float* %2, i64 15
  %5451 = load float, float* %5450, align 4
  %5452 = insertelement <4 x float> zeroinitializer, float %5451, i32 0
  %5453 = insertelement <4 x float> %5452, float 0.000000e+00, i32 1
  %5454 = insertelement <4 x float> %5453, float 0.000000e+00, i32 2
  %5455 = insertelement <4 x float> %5454, float 0.000000e+00, i32 3
  %5456 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5449, <4 x float> %5455, <4 x float> %5441)
  %5457 = extractelement <4 x float> %5456, i32 0
  %5458 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5459 = getelementptr inbounds i8, i8* %5458, i64 44
  %5460 = bitcast i8* %5459 to float*
  store float %5457, float* %5460, align 4
  %5461 = extractelement <4 x float> %5456, i32 1
  %5462 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5463 = getelementptr inbounds i8, i8* %5462, i64 48
  %5464 = bitcast i8* %5463 to float*
  store float %5461, float* %5464, align 4
  %5465 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5466 = getelementptr inbounds i8, i8* %5465, i64 48
  %5467 = bitcast i8* %5466 to float*
  %5468 = load float, float* %5467, align 4
  %5469 = insertelement <4 x float> zeroinitializer, float %5468, i32 0
  %5470 = insertelement <4 x float> %5469, float 0.000000e+00, i32 1
  %5471 = insertelement <4 x float> %5470, float 0.000000e+00, i32 2
  %5472 = insertelement <4 x float> %5471, float 0.000000e+00, i32 3
  %5473 = load float, float* %2, align 4
  %5474 = insertelement <4 x float> zeroinitializer, float %5473, i32 0
  %5475 = insertelement <4 x float> %5474, float 0.000000e+00, i32 1
  %5476 = insertelement <4 x float> %5475, float 0.000000e+00, i32 2
  %5477 = insertelement <4 x float> %5476, float 0.000000e+00, i32 3
  %5478 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5472, <4 x float> %5477, <4 x float> zeroinitializer)
  %5479 = extractelement <4 x float> %5478, i32 0
  %5480 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5481 = getelementptr inbounds i8, i8* %5480, i64 48
  %5482 = bitcast i8* %5481 to float*
  store float %5479, float* %5482, align 4
  %5483 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5484 = getelementptr inbounds i8, i8* %5483, i64 48
  %5485 = bitcast i8* %5484 to float*
  %5486 = load float, float* %5485, align 4
  %5487 = insertelement <4 x float> zeroinitializer, float %5486, i32 0
  %5488 = insertelement <4 x float> %5487, float 0.000000e+00, i32 1
  %5489 = insertelement <4 x float> %5488, float 0.000000e+00, i32 2
  %5490 = insertelement <4 x float> %5489, float 0.000000e+00, i32 3
  %5491 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5492 = getelementptr inbounds i8, i8* %5491, i64 52
  %5493 = bitcast i8* %5492 to float*
  %5494 = load float, float* %5493, align 4
  %5495 = insertelement <4 x float> zeroinitializer, float %5494, i32 0
  %5496 = insertelement <4 x float> %5495, float 0.000000e+00, i32 1
  %5497 = insertelement <4 x float> %5496, float 0.000000e+00, i32 2
  %5498 = insertelement <4 x float> %5497, float 0.000000e+00, i32 3
  %5499 = getelementptr inbounds float, float* %2, i64 4
  %5500 = load float, float* %5499, align 4
  %5501 = insertelement <4 x float> zeroinitializer, float %5500, i32 0
  %5502 = insertelement <4 x float> %5501, float 0.000000e+00, i32 1
  %5503 = insertelement <4 x float> %5502, float 0.000000e+00, i32 2
  %5504 = insertelement <4 x float> %5503, float 0.000000e+00, i32 3
  %5505 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5498, <4 x float> %5504, <4 x float> %5490)
  %5506 = extractelement <4 x float> %5505, i32 0
  %5507 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5508 = getelementptr inbounds i8, i8* %5507, i64 48
  %5509 = bitcast i8* %5508 to float*
  store float %5506, float* %5509, align 4
  %5510 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5511 = getelementptr inbounds i8, i8* %5510, i64 48
  %5512 = bitcast i8* %5511 to float*
  %5513 = load float, float* %5512, align 4
  %5514 = insertelement <4 x float> zeroinitializer, float %5513, i32 0
  %5515 = insertelement <4 x float> %5514, float 0.000000e+00, i32 1
  %5516 = insertelement <4 x float> %5515, float 0.000000e+00, i32 2
  %5517 = insertelement <4 x float> %5516, float 0.000000e+00, i32 3
  %5518 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5519 = getelementptr inbounds i8, i8* %5518, i64 56
  %5520 = bitcast i8* %5519 to float*
  %5521 = load float, float* %5520, align 4
  %5522 = insertelement <4 x float> zeroinitializer, float %5521, i32 0
  %5523 = insertelement <4 x float> %5522, float 0.000000e+00, i32 1
  %5524 = insertelement <4 x float> %5523, float 0.000000e+00, i32 2
  %5525 = insertelement <4 x float> %5524, float 0.000000e+00, i32 3
  %5526 = getelementptr inbounds float, float* %2, i64 8
  %5527 = load float, float* %5526, align 4
  %5528 = insertelement <4 x float> zeroinitializer, float %5527, i32 0
  %5529 = insertelement <4 x float> %5528, float 0.000000e+00, i32 1
  %5530 = insertelement <4 x float> %5529, float 0.000000e+00, i32 2
  %5531 = insertelement <4 x float> %5530, float 0.000000e+00, i32 3
  %5532 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5525, <4 x float> %5531, <4 x float> %5517)
  %5533 = extractelement <4 x float> %5532, i32 0
  %5534 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5535 = getelementptr inbounds i8, i8* %5534, i64 48
  %5536 = bitcast i8* %5535 to float*
  store float %5533, float* %5536, align 4
  %5537 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5538 = getelementptr inbounds i8, i8* %5537, i64 48
  %5539 = bitcast i8* %5538 to float*
  %5540 = load float, float* %5539, align 4
  %5541 = insertelement <4 x float> zeroinitializer, float %5540, i32 0
  %5542 = insertelement <4 x float> %5541, float 0.000000e+00, i32 1
  %5543 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5544 = getelementptr inbounds i8, i8* %5543, i64 52
  %5545 = bitcast i8* %5544 to float*
  %5546 = load float, float* %5545, align 4
  %5547 = insertelement <4 x float> %5542, float %5546, i32 2
  %5548 = insertelement <4 x float> %5547, float 0.000000e+00, i32 3
  %5549 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5550 = getelementptr inbounds i8, i8* %5549, i64 60
  %5551 = bitcast i8* %5550 to float*
  %5552 = load float, float* %5551, align 4
  %5553 = insertelement <4 x float> zeroinitializer, float %5552, i32 0
  %5554 = insertelement <4 x float> %5553, float 0.000000e+00, i32 1
  %5555 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5556 = getelementptr inbounds i8, i8* %5555, i64 48
  %5557 = bitcast i8* %5556 to float*
  %5558 = load float, float* %5557, align 4
  %5559 = insertelement <4 x float> %5554, float %5558, i32 2
  %5560 = insertelement <4 x float> %5559, float 0.000000e+00, i32 3
  %5561 = getelementptr inbounds float, float* %2, i64 12
  %5562 = load float, float* %5561, align 4
  %5563 = insertelement <4 x float> zeroinitializer, float %5562, i32 0
  %5564 = insertelement <4 x float> %5563, float 0.000000e+00, i32 1
  %5565 = getelementptr inbounds float, float* %2, i64 1
  %5566 = load float, float* %5565, align 4
  %5567 = insertelement <4 x float> %5564, float %5566, i32 2
  %5568 = insertelement <4 x float> %5567, float 0.000000e+00, i32 3
  %5569 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5560, <4 x float> %5568, <4 x float> %5548)
  %5570 = extractelement <4 x float> %5569, i32 0
  %5571 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5572 = getelementptr inbounds i8, i8* %5571, i64 48
  %5573 = bitcast i8* %5572 to float*
  store float %5570, float* %5573, align 4
  %5574 = extractelement <4 x float> %5569, i32 1
  %5575 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5576 = getelementptr inbounds i8, i8* %5575, i64 52
  %5577 = bitcast i8* %5576 to float*
  store float %5574, float* %5577, align 4
  %5578 = extractelement <4 x float> %5569, i32 2
  %5579 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5580 = getelementptr inbounds i8, i8* %5579, i64 52
  %5581 = bitcast i8* %5580 to float*
  store float %5578, float* %5581, align 4
  %5582 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5583 = getelementptr inbounds i8, i8* %5582, i64 52
  %5584 = bitcast i8* %5583 to float*
  %5585 = load float, float* %5584, align 4
  %5586 = insertelement <4 x float> zeroinitializer, float %5585, i32 0
  %5587 = insertelement <4 x float> %5586, float 0.000000e+00, i32 1
  %5588 = insertelement <4 x float> %5587, float 0.000000e+00, i32 2
  %5589 = insertelement <4 x float> %5588, float 0.000000e+00, i32 3
  %5590 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5591 = getelementptr inbounds i8, i8* %5590, i64 52
  %5592 = bitcast i8* %5591 to float*
  %5593 = load float, float* %5592, align 4
  %5594 = insertelement <4 x float> zeroinitializer, float %5593, i32 0
  %5595 = insertelement <4 x float> %5594, float 0.000000e+00, i32 1
  %5596 = insertelement <4 x float> %5595, float 0.000000e+00, i32 2
  %5597 = insertelement <4 x float> %5596, float 0.000000e+00, i32 3
  %5598 = getelementptr inbounds float, float* %2, i64 5
  %5599 = load float, float* %5598, align 4
  %5600 = insertelement <4 x float> zeroinitializer, float %5599, i32 0
  %5601 = insertelement <4 x float> %5600, float 0.000000e+00, i32 1
  %5602 = insertelement <4 x float> %5601, float 0.000000e+00, i32 2
  %5603 = insertelement <4 x float> %5602, float 0.000000e+00, i32 3
  %5604 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5597, <4 x float> %5603, <4 x float> %5589)
  %5605 = extractelement <4 x float> %5604, i32 0
  %5606 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5607 = getelementptr inbounds i8, i8* %5606, i64 52
  %5608 = bitcast i8* %5607 to float*
  store float %5605, float* %5608, align 4
  %5609 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5610 = getelementptr inbounds i8, i8* %5609, i64 52
  %5611 = bitcast i8* %5610 to float*
  %5612 = load float, float* %5611, align 4
  %5613 = insertelement <4 x float> zeroinitializer, float %5612, i32 0
  %5614 = insertelement <4 x float> %5613, float 0.000000e+00, i32 1
  %5615 = insertelement <4 x float> %5614, float 0.000000e+00, i32 2
  %5616 = insertelement <4 x float> %5615, float 0.000000e+00, i32 3
  %5617 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5618 = getelementptr inbounds i8, i8* %5617, i64 56
  %5619 = bitcast i8* %5618 to float*
  %5620 = load float, float* %5619, align 4
  %5621 = insertelement <4 x float> zeroinitializer, float %5620, i32 0
  %5622 = insertelement <4 x float> %5621, float 0.000000e+00, i32 1
  %5623 = insertelement <4 x float> %5622, float 0.000000e+00, i32 2
  %5624 = insertelement <4 x float> %5623, float 0.000000e+00, i32 3
  %5625 = getelementptr inbounds float, float* %2, i64 9
  %5626 = load float, float* %5625, align 4
  %5627 = insertelement <4 x float> zeroinitializer, float %5626, i32 0
  %5628 = insertelement <4 x float> %5627, float 0.000000e+00, i32 1
  %5629 = insertelement <4 x float> %5628, float 0.000000e+00, i32 2
  %5630 = insertelement <4 x float> %5629, float 0.000000e+00, i32 3
  %5631 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5624, <4 x float> %5630, <4 x float> %5616)
  %5632 = extractelement <4 x float> %5631, i32 0
  %5633 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5634 = getelementptr inbounds i8, i8* %5633, i64 52
  %5635 = bitcast i8* %5634 to float*
  store float %5632, float* %5635, align 4
  %5636 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5637 = getelementptr inbounds i8, i8* %5636, i64 52
  %5638 = bitcast i8* %5637 to float*
  %5639 = load float, float* %5638, align 4
  %5640 = insertelement <4 x float> zeroinitializer, float %5639, i32 0
  %5641 = insertelement <4 x float> %5640, float 0.000000e+00, i32 1
  %5642 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5643 = getelementptr inbounds i8, i8* %5642, i64 56
  %5644 = bitcast i8* %5643 to float*
  %5645 = load float, float* %5644, align 4
  %5646 = insertelement <4 x float> %5641, float %5645, i32 2
  %5647 = insertelement <4 x float> %5646, float 0.000000e+00, i32 3
  %5648 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5649 = getelementptr inbounds i8, i8* %5648, i64 60
  %5650 = bitcast i8* %5649 to float*
  %5651 = load float, float* %5650, align 4
  %5652 = insertelement <4 x float> zeroinitializer, float %5651, i32 0
  %5653 = insertelement <4 x float> %5652, float 0.000000e+00, i32 1
  %5654 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5655 = getelementptr inbounds i8, i8* %5654, i64 48
  %5656 = bitcast i8* %5655 to float*
  %5657 = load float, float* %5656, align 4
  %5658 = insertelement <4 x float> %5653, float %5657, i32 2
  %5659 = insertelement <4 x float> %5658, float 0.000000e+00, i32 3
  %5660 = getelementptr inbounds float, float* %2, i64 13
  %5661 = load float, float* %5660, align 4
  %5662 = insertelement <4 x float> zeroinitializer, float %5661, i32 0
  %5663 = insertelement <4 x float> %5662, float 0.000000e+00, i32 1
  %5664 = getelementptr inbounds float, float* %2, i64 2
  %5665 = load float, float* %5664, align 4
  %5666 = insertelement <4 x float> %5663, float %5665, i32 2
  %5667 = insertelement <4 x float> %5666, float 0.000000e+00, i32 3
  %5668 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5659, <4 x float> %5667, <4 x float> %5647)
  %5669 = extractelement <4 x float> %5668, i32 0
  %5670 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5671 = getelementptr inbounds i8, i8* %5670, i64 52
  %5672 = bitcast i8* %5671 to float*
  store float %5669, float* %5672, align 4
  %5673 = extractelement <4 x float> %5668, i32 1
  %5674 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5675 = getelementptr inbounds i8, i8* %5674, i64 56
  %5676 = bitcast i8* %5675 to float*
  store float %5673, float* %5676, align 4
  %5677 = extractelement <4 x float> %5668, i32 2
  %5678 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5679 = getelementptr inbounds i8, i8* %5678, i64 56
  %5680 = bitcast i8* %5679 to float*
  store float %5677, float* %5680, align 4
  %5681 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5682 = getelementptr inbounds i8, i8* %5681, i64 56
  %5683 = bitcast i8* %5682 to float*
  %5684 = load float, float* %5683, align 4
  %5685 = insertelement <4 x float> zeroinitializer, float %5684, i32 0
  %5686 = insertelement <4 x float> %5685, float 0.000000e+00, i32 1
  %5687 = insertelement <4 x float> %5686, float 0.000000e+00, i32 2
  %5688 = insertelement <4 x float> %5687, float 0.000000e+00, i32 3
  %5689 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5690 = getelementptr inbounds i8, i8* %5689, i64 52
  %5691 = bitcast i8* %5690 to float*
  %5692 = load float, float* %5691, align 4
  %5693 = insertelement <4 x float> zeroinitializer, float %5692, i32 0
  %5694 = insertelement <4 x float> %5693, float 0.000000e+00, i32 1
  %5695 = insertelement <4 x float> %5694, float 0.000000e+00, i32 2
  %5696 = insertelement <4 x float> %5695, float 0.000000e+00, i32 3
  %5697 = getelementptr inbounds float, float* %2, i64 6
  %5698 = load float, float* %5697, align 4
  %5699 = insertelement <4 x float> zeroinitializer, float %5698, i32 0
  %5700 = insertelement <4 x float> %5699, float 0.000000e+00, i32 1
  %5701 = insertelement <4 x float> %5700, float 0.000000e+00, i32 2
  %5702 = insertelement <4 x float> %5701, float 0.000000e+00, i32 3
  %5703 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5696, <4 x float> %5702, <4 x float> %5688)
  %5704 = extractelement <4 x float> %5703, i32 0
  %5705 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5706 = getelementptr inbounds i8, i8* %5705, i64 56
  %5707 = bitcast i8* %5706 to float*
  store float %5704, float* %5707, align 4
  %5708 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5709 = getelementptr inbounds i8, i8* %5708, i64 56
  %5710 = bitcast i8* %5709 to float*
  %5711 = load float, float* %5710, align 4
  %5712 = insertelement <4 x float> zeroinitializer, float %5711, i32 0
  %5713 = insertelement <4 x float> %5712, float 0.000000e+00, i32 1
  %5714 = insertelement <4 x float> %5713, float 0.000000e+00, i32 2
  %5715 = insertelement <4 x float> %5714, float 0.000000e+00, i32 3
  %5716 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5717 = getelementptr inbounds i8, i8* %5716, i64 56
  %5718 = bitcast i8* %5717 to float*
  %5719 = load float, float* %5718, align 4
  %5720 = insertelement <4 x float> zeroinitializer, float %5719, i32 0
  %5721 = insertelement <4 x float> %5720, float 0.000000e+00, i32 1
  %5722 = insertelement <4 x float> %5721, float 0.000000e+00, i32 2
  %5723 = insertelement <4 x float> %5722, float 0.000000e+00, i32 3
  %5724 = getelementptr inbounds float, float* %2, i64 10
  %5725 = load float, float* %5724, align 4
  %5726 = insertelement <4 x float> zeroinitializer, float %5725, i32 0
  %5727 = insertelement <4 x float> %5726, float 0.000000e+00, i32 1
  %5728 = insertelement <4 x float> %5727, float 0.000000e+00, i32 2
  %5729 = insertelement <4 x float> %5728, float 0.000000e+00, i32 3
  %5730 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5723, <4 x float> %5729, <4 x float> %5715)
  %5731 = extractelement <4 x float> %5730, i32 0
  %5732 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5733 = getelementptr inbounds i8, i8* %5732, i64 56
  %5734 = bitcast i8* %5733 to float*
  store float %5731, float* %5734, align 4
  %5735 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5736 = getelementptr inbounds i8, i8* %5735, i64 56
  %5737 = bitcast i8* %5736 to float*
  %5738 = load float, float* %5737, align 4
  %5739 = insertelement <4 x float> zeroinitializer, float %5738, i32 0
  %5740 = insertelement <4 x float> %5739, float 0.000000e+00, i32 1
  %5741 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5742 = getelementptr inbounds i8, i8* %5741, i64 60
  %5743 = bitcast i8* %5742 to float*
  %5744 = load float, float* %5743, align 4
  %5745 = insertelement <4 x float> %5740, float %5744, i32 2
  %5746 = insertelement <4 x float> %5745, float 0.000000e+00, i32 3
  %5747 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5748 = getelementptr inbounds i8, i8* %5747, i64 60
  %5749 = bitcast i8* %5748 to float*
  %5750 = load float, float* %5749, align 4
  %5751 = insertelement <4 x float> zeroinitializer, float %5750, i32 0
  %5752 = insertelement <4 x float> %5751, float 0.000000e+00, i32 1
  %5753 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5754 = getelementptr inbounds i8, i8* %5753, i64 48
  %5755 = bitcast i8* %5754 to float*
  %5756 = load float, float* %5755, align 4
  %5757 = insertelement <4 x float> %5752, float %5756, i32 2
  %5758 = insertelement <4 x float> %5757, float 0.000000e+00, i32 3
  %5759 = getelementptr inbounds float, float* %2, i64 14
  %5760 = load float, float* %5759, align 4
  %5761 = insertelement <4 x float> zeroinitializer, float %5760, i32 0
  %5762 = insertelement <4 x float> %5761, float 0.000000e+00, i32 1
  %5763 = getelementptr inbounds float, float* %2, i64 3
  %5764 = load float, float* %5763, align 4
  %5765 = insertelement <4 x float> %5762, float %5764, i32 2
  %5766 = insertelement <4 x float> %5765, float 0.000000e+00, i32 3
  %5767 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5758, <4 x float> %5766, <4 x float> %5746)
  %5768 = extractelement <4 x float> %5767, i32 0
  %5769 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5770 = getelementptr inbounds i8, i8* %5769, i64 56
  %5771 = bitcast i8* %5770 to float*
  store float %5768, float* %5771, align 4
  %5772 = extractelement <4 x float> %5767, i32 1
  %5773 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5774 = getelementptr inbounds i8, i8* %5773, i64 60
  %5775 = bitcast i8* %5774 to float*
  store float %5772, float* %5775, align 4
  %5776 = extractelement <4 x float> %5767, i32 2
  %5777 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5778 = getelementptr inbounds i8, i8* %5777, i64 60
  %5779 = bitcast i8* %5778 to float*
  store float %5776, float* %5779, align 4
  %5780 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5781 = getelementptr inbounds i8, i8* %5780, i64 60
  %5782 = bitcast i8* %5781 to float*
  %5783 = load float, float* %5782, align 4
  %5784 = insertelement <4 x float> zeroinitializer, float %5783, i32 0
  %5785 = insertelement <4 x float> %5784, float 0.000000e+00, i32 1
  %5786 = insertelement <4 x float> %5785, float 0.000000e+00, i32 2
  %5787 = insertelement <4 x float> %5786, float 0.000000e+00, i32 3
  %5788 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5789 = getelementptr inbounds i8, i8* %5788, i64 52
  %5790 = bitcast i8* %5789 to float*
  %5791 = load float, float* %5790, align 4
  %5792 = insertelement <4 x float> zeroinitializer, float %5791, i32 0
  %5793 = insertelement <4 x float> %5792, float 0.000000e+00, i32 1
  %5794 = insertelement <4 x float> %5793, float 0.000000e+00, i32 2
  %5795 = insertelement <4 x float> %5794, float 0.000000e+00, i32 3
  %5796 = getelementptr inbounds float, float* %2, i64 7
  %5797 = load float, float* %5796, align 4
  %5798 = insertelement <4 x float> zeroinitializer, float %5797, i32 0
  %5799 = insertelement <4 x float> %5798, float 0.000000e+00, i32 1
  %5800 = insertelement <4 x float> %5799, float 0.000000e+00, i32 2
  %5801 = insertelement <4 x float> %5800, float 0.000000e+00, i32 3
  %5802 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5795, <4 x float> %5801, <4 x float> %5787)
  %5803 = extractelement <4 x float> %5802, i32 0
  %5804 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5805 = getelementptr inbounds i8, i8* %5804, i64 60
  %5806 = bitcast i8* %5805 to float*
  store float %5803, float* %5806, align 4
  %5807 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5808 = getelementptr inbounds i8, i8* %5807, i64 60
  %5809 = bitcast i8* %5808 to float*
  %5810 = load float, float* %5809, align 4
  %5811 = insertelement <4 x float> zeroinitializer, float %5810, i32 0
  %5812 = insertelement <4 x float> %5811, float 0.000000e+00, i32 1
  %5813 = insertelement <4 x float> %5812, float 0.000000e+00, i32 2
  %5814 = insertelement <4 x float> %5813, float 0.000000e+00, i32 3
  %5815 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5816 = getelementptr inbounds i8, i8* %5815, i64 56
  %5817 = bitcast i8* %5816 to float*
  %5818 = load float, float* %5817, align 4
  %5819 = insertelement <4 x float> zeroinitializer, float %5818, i32 0
  %5820 = insertelement <4 x float> %5819, float 0.000000e+00, i32 1
  %5821 = insertelement <4 x float> %5820, float 0.000000e+00, i32 2
  %5822 = insertelement <4 x float> %5821, float 0.000000e+00, i32 3
  %5823 = getelementptr inbounds float, float* %2, i64 11
  %5824 = load float, float* %5823, align 4
  %5825 = insertelement <4 x float> zeroinitializer, float %5824, i32 0
  %5826 = insertelement <4 x float> %5825, float 0.000000e+00, i32 1
  %5827 = insertelement <4 x float> %5826, float 0.000000e+00, i32 2
  %5828 = insertelement <4 x float> %5827, float 0.000000e+00, i32 3
  %5829 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5822, <4 x float> %5828, <4 x float> %5814)
  %5830 = extractelement <4 x float> %5829, i32 0
  %5831 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5832 = getelementptr inbounds i8, i8* %5831, i64 60
  %5833 = bitcast i8* %5832 to float*
  store float %5830, float* %5833, align 4
  %5834 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5835 = getelementptr inbounds i8, i8* %5834, i64 60
  %5836 = bitcast i8* %5835 to float*
  %5837 = load float, float* %5836, align 4
  %5838 = insertelement <4 x float> zeroinitializer, float %5837, i32 0
  %5839 = insertelement <4 x float> %5838, float 0.000000e+00, i32 1
  %5840 = insertelement <4 x float> %5839, float 0.000000e+00, i32 2
  %5841 = insertelement <4 x float> %5840, float 0.000000e+00, i32 3
  %5842 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5843 = getelementptr inbounds i8, i8* %5842, i64 60
  %5844 = bitcast i8* %5843 to float*
  %5845 = load float, float* %5844, align 4
  %5846 = insertelement <4 x float> zeroinitializer, float %5845, i32 0
  %5847 = insertelement <4 x float> %5846, float 1.000000e+00, i32 1
  %5848 = insertelement <4 x float> %5847, float 1.000000e+00, i32 2
  %5849 = insertelement <4 x float> %5848, float 1.000000e+00, i32 3
  %5850 = getelementptr inbounds float, float* %2, i64 15
  %5851 = load float, float* %5850, align 4
  %5852 = insertelement <4 x float> zeroinitializer, float %5851, i32 0
  %5853 = getelementptr inbounds float, float* %2, i64 10
  %5854 = bitcast float* %5853 to i32*
  %5855 = load i32, i32* %5854, align 4
  %5856 = sitofp i32 %5855 to float
  %5857 = insertelement <4 x float> %5852, float %5856, i32 1
  %5858 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5859 = getelementptr inbounds i8, i8* %5858, i64 40
  %5860 = bitcast i8* %5859 to i32*
  %5861 = load i32, i32* %5860, align 4
  %5862 = sitofp i32 %5861 to float
  %5863 = insertelement <4 x float> %5857, float %5862, i32 2
  %5864 = getelementptr inbounds float, float* %2, i64 14
  %5865 = bitcast float* %5864 to i32*
  %5866 = load i32, i32* %5865, align 4
  %5867 = sitofp i32 %5866 to float
  %5868 = insertelement <4 x float> %5863, float %5867, i32 3
  %5869 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5849, <4 x float> %5868, <4 x float> %5841)
  %5870 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5871 = bitcast i8* %5870 to float*
  %5872 = load float, float* %5871, align 4
  %5873 = insertelement <4 x float> zeroinitializer, float %5872, i32 1
  %5874 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5875 = getelementptr inbounds i8, i8* %5874, i64 4
  %5876 = bitcast i8* %5875 to float*
  %5877 = load float, float* %5876, align 4
  %5878 = insertelement <4 x float> %5873, float %5877, i32 2
  %5879 = insertelement <4 x float> %5878, float 0.000000e+00, i32 3
  %5880 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %142, i32 1
  %5881 = insertelement <4 x float> %5880, float %142, i32 2
  %5882 = insertelement <4 x float> %5881, float 1.000000e+00, i32 3
  %5883 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5884 = bitcast i8* %5883 to float*
  %5885 = load float, float* %5884, align 4
  %5886 = fcmp olt float %5885, 0.000000e+00
  %5887 = sext i1 %5886 to i32
  %5888 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5889 = bitcast i8* %5888 to float*
  %5890 = load float, float* %5889, align 4
  %5891 = fcmp ogt float %5890, 0.000000e+00
  %5892 = zext i1 %5891 to i32
  %5893 = add nsw i32 %5887, %5892
  %5894 = sitofp i32 %5893 to float
  %5895 = fneg float %5894
  %5896 = insertelement <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, float %5895, i32 1
  %5897 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5898 = bitcast i8* %5897 to float*
  %5899 = load float, float* %5898, align 4
  %5900 = fcmp olt float %5899, 0.000000e+00
  %5901 = sext i1 %5900 to i32
  %5902 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5903 = bitcast i8* %5902 to float*
  %5904 = load float, float* %5903, align 4
  %5905 = fcmp ogt float %5904, 0.000000e+00
  %5906 = zext i1 %5905 to i32
  %5907 = add nsw i32 %5901, %5906
  %5908 = sitofp i32 %5907 to float
  %5909 = fneg float %5908
  %5910 = insertelement <4 x float> %5896, float %5909, i32 2
  %5911 = insertelement <4 x float> %5910, float 1.000000e+00, i32 3
  %5912 = fmul <4 x float> %5882, %5911
  %5913 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5914 = getelementptr inbounds i8, i8* %5913, i64 56
  %5915 = bitcast i8* %5914 to i32*
  %5916 = load i32, i32* %5915, align 4
  %5917 = sitofp i32 %5916 to float
  %5918 = insertelement <4 x float> zeroinitializer, float %5917, i32 0
  %5919 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5920 = bitcast i8* %5919 to float*
  %5921 = load float, float* %5920, align 4
  %5922 = insertelement <4 x float> %5918, float %5921, i32 1
  %5923 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5924 = getelementptr inbounds i8, i8* %5923, i64 4
  %5925 = bitcast i8* %5924 to float*
  %5926 = load float, float* %5925, align 4
  %5927 = insertelement <4 x float> %5922, float %5926, i32 2
  %5928 = insertelement <4 x float> %5927, float 0.000000e+00, i32 3
  %5929 = call <4 x float> @llvm.fma.v4f32(<4 x float> %5912, <4 x float> %5928, <4 x float> %5879)
  %5930 = shufflevector <4 x float> %5869, <4 x float> %5929, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %5931 = extractelement <8 x float> %5930, i32 0
  %5932 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %5933 = getelementptr inbounds i8, i8* %5932, i64 60
  %5934 = bitcast i8* %5933 to float*
  store float %5931, float* %5934, align 4
  %5935 = extractelement <8 x float> %5930, i32 1
  %5936 = fptosi float %5935 to i32
  %5937 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5938 = bitcast i8* %5937 to i32*
  store i32 %5936, i32* %5938, align 4
  %5939 = extractelement <8 x float> %5930, i32 2
  %5940 = fptosi float %5939 to i32
  %5941 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5942 = bitcast i8* %5941 to i32*
  store i32 %5940, i32* %5942, align 4
  %5943 = extractelement <8 x float> %5930, i32 3
  %5944 = fptosi float %5943 to i32
  %5945 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5946 = getelementptr inbounds i8, i8* %5945, i64 4
  %5947 = bitcast i8* %5946 to i32*
  store i32 %5944, i32* %5947, align 4
  %5948 = extractelement <8 x float> %5930, i32 4
  %5949 = fptosi float %5948 to i32
  %5950 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5951 = getelementptr inbounds i8, i8* %5950, i64 4
  %5952 = bitcast i8* %5951 to i32*
  store i32 %5949, i32* %5952, align 4
  %5953 = extractelement <8 x float> %5930, i32 5
  %5954 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5955 = bitcast i8* %5954 to float*
  store float %5953, float* %5955, align 4
  %5956 = extractelement <8 x float> %5930, i32 6
  %5957 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5958 = getelementptr inbounds i8, i8* %5957, i64 4
  %5959 = bitcast i8* %5958 to float*
  store float %5956, float* %5959, align 4
  %5960 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5961 = bitcast i8* %5960 to float*
  %5962 = load float, float* %5961, align 4
  %5963 = insertelement <4 x float> zeroinitializer, float %5962, i32 0
  %5964 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5965 = getelementptr inbounds i8, i8* %5964, i64 4
  %5966 = bitcast i8* %5965 to float*
  %5967 = load float, float* %5966, align 4
  %5968 = insertelement <4 x float> %5963, float %5967, i32 1
  %5969 = insertelement <4 x float> %5968, float 0.000000e+00, i32 2
  %5970 = insertelement <4 x float> %5969, float 0.000000e+00, i32 3
  %5971 = insertelement <4 x float> zeroinitializer, float %157, i32 0
  %5972 = insertelement <4 x float> %5971, float %157, i32 1
  %5973 = insertelement <4 x float> %5972, float 1.000000e+00, i32 2
  %5974 = insertelement <4 x float> %5973, float 1.000000e+00, i32 3
  %5975 = fdiv <4 x float> %5970, %5974
  %5976 = extractelement <4 x float> %5975, i32 0
  %5977 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5978 = bitcast i8* %5977 to float*
  store float %5976, float* %5978, align 4
  %5979 = extractelement <4 x float> %5975, i32 1
  %5980 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5981 = getelementptr inbounds i8, i8* %5980, i64 4
  %5982 = bitcast i8* %5981 to float*
  store float %5979, float* %5982, align 4
  %5983 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5984 = bitcast i8* %5983 to float*
  %5985 = load float, float* %5984, align 4
  %5986 = insertelement <4 x float> zeroinitializer, float %5985, i32 0
  %5987 = insertelement <4 x float> %5986, float 1.000000e+00, i32 1
  %5988 = insertelement <4 x float> %5987, float 1.000000e+00, i32 2
  %5989 = insertelement <4 x float> %5988, float 1.000000e+00, i32 3
  %5990 = fmul <4 x float> %5989, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %5991 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %5992 = bitcast i8* %5991 to float*
  %5993 = load float, float* %5992, align 4
  %5994 = insertelement <4 x float> zeroinitializer, float %5993, i32 0
  %5995 = insertelement <4 x float> %5994, float 0.000000e+00, i32 1
  %5996 = insertelement <4 x float> %5995, float 0.000000e+00, i32 2
  %5997 = insertelement <4 x float> %5996, float 0.000000e+00, i32 3
  %5998 = fmul <4 x float> %5990, %5997
  %5999 = fsub <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, %5998
  %6000 = extractelement <4 x float> %5999, i32 0
  %6001 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %6002 = bitcast i8* %6001 to float*
  store float %6000, float* %6002, align 4
  %6003 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %6004 = bitcast i8* %6003 to float*
  %6005 = load float, float* %6004, align 4
  %6006 = insertelement <4 x float> zeroinitializer, float %6005, i32 0
  %6007 = insertelement <4 x float> %6006, float 1.000000e+00, i32 1
  %6008 = insertelement <4 x float> %6007, float 1.000000e+00, i32 2
  %6009 = insertelement <4 x float> %6008, float 1.000000e+00, i32 3
  %6010 = fmul <4 x float> %6009, <float 2.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %6011 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %6012 = getelementptr inbounds i8, i8* %6011, i64 4
  %6013 = bitcast i8* %6012 to float*
  %6014 = load float, float* %6013, align 4
  %6015 = insertelement <4 x float> zeroinitializer, float %6014, i32 0
  %6016 = insertelement <4 x float> %6015, float 0.000000e+00, i32 1
  %6017 = insertelement <4 x float> %6016, float 0.000000e+00, i32 2
  %6018 = insertelement <4 x float> %6017, float 0.000000e+00, i32 3
  %6019 = fmul <4 x float> %6010, %6018
  %6020 = fsub <4 x float> zeroinitializer, %6019
  %6021 = extractelement <4 x float> %6020, i32 0
  %6022 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %6023 = getelementptr inbounds i8, i8* %6022, i64 4
  %6024 = bitcast i8* %6023 to float*
  store float %6021, float* %6024, align 4
  %6025 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %6026 = getelementptr inbounds i8, i8* %6025, i64 4
  %6027 = bitcast i8* %6026 to float*
  %6028 = load float, float* %6027, align 4
  %6029 = fmul float %6028, 2.000000e+00
  %6030 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %6031 = bitcast i8* %6030 to float*
  %6032 = load float, float* %6031, align 4
  %6033 = fmul float %6029, %6032
  %6034 = fsub float 0.000000e+00, %6033
  %6035 = insertelement <4 x float> zeroinitializer, float %6034, i32 0
  %6036 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %6037 = getelementptr inbounds i8, i8* %6036, i64 4
  %6038 = bitcast i8* %6037 to float*
  %6039 = load float, float* %6038, align 4
  %6040 = fmul float %6039, 2.000000e+00
  %6041 = call dereferenceable_or_null(8) i8* @calloc(i64 4, i64 2) #9
  %6042 = getelementptr inbounds i8, i8* %6041, i64 4
  %6043 = bitcast i8* %6042 to float*
  %6044 = load float, float* %6043, align 4
  %6045 = fmul float %6040, %6044
  %6046 = fsub float 1.000000e+00, %6045
  %6047 = insertelement <4 x float> %6035, float %6046, i32 1
  %6048 = insertelement <4 x float> %6047, float 1.000000e+00, i32 2
  %6049 = insertelement <4 x float> %6048, float 0.000000e+00, i32 3
  %6050 = shufflevector <4 x float> %6049, <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %6051 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %6052 = bitcast i8* %6051 to i32*
  %6053 = load i32, i32* %6052, align 4
  %6054 = sitofp i32 %6053 to float
  %6055 = insertelement <4 x float> zeroinitializer, float %6054, i32 0
  %6056 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %6057 = getelementptr inbounds i8, i8* %6056, i64 4
  %6058 = bitcast i8* %6057 to i32*
  %6059 = load i32, i32* %6058, align 4
  %6060 = sitofp i32 %6059 to float
  %6061 = insertelement <4 x float> %6055, float %6060, i32 1
  %6062 = insertelement <4 x float> %6061, float 0.000000e+00, i32 2
  %6063 = insertelement <4 x float> %6062, float 0.000000e+00, i32 3
  %6064 = shufflevector <4 x float> zeroinitializer, <4 x float> %6063, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %6065 = shufflevector <8 x float> %6050, <8 x float> %6064, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6066 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %6067 = getelementptr inbounds i8, i8* %6066, i64 8
  %6068 = bitcast i8* %6067 to i32*
  %6069 = load i32, i32* %6068, align 4
  %6070 = sitofp i32 %6069 to float
  %6071 = insertelement <4 x float> zeroinitializer, float %6070, i32 0
  %6072 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %6073 = getelementptr inbounds i8, i8* %6072, i64 12
  %6074 = bitcast i8* %6073 to i32*
  %6075 = load i32, i32* %6074, align 4
  %6076 = sitofp i32 %6075 to float
  %6077 = insertelement <4 x float> %6071, float %6076, i32 1
  %6078 = insertelement <4 x float> %6077, float 0.000000e+00, i32 2
  %6079 = insertelement <4 x float> %6078, float 0.000000e+00, i32 3
  %6080 = shufflevector <4 x float> %6079, <4 x float> zeroinitializer, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %6081 = shufflevector <8 x float> %6080, <8 x float> zeroinitializer, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %6082 = shufflevector <16 x float> %6065, <16 x float> %6081, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %6083 = extractelement <32 x float> %6082, i32 0
  %6084 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %6085 = getelementptr inbounds i8, i8* %6084, i64 8
  %6086 = bitcast i8* %6085 to float*
  store float %6083, float* %6086, align 4
  %6087 = extractelement <32 x float> %6082, i32 1
  %6088 = call dereferenceable_or_null(16) i8* @calloc(i64 4, i64 4) #9
  %6089 = getelementptr inbounds i8, i8* %6088, i64 12
  %6090 = bitcast i8* %6089 to float*
  store float %6087, float* %6090, align 4
  %6091 = extractelement <32 x float> %6082, i32 2
  %6092 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6093 = bitcast i8* %6092 to float*
  store float %6091, float* %6093, align 4
  %6094 = extractelement <32 x float> %6082, i32 3
  %6095 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6096 = getelementptr inbounds i8, i8* %6095, i64 4
  %6097 = bitcast i8* %6096 to float*
  store float %6094, float* %6097, align 4
  %6098 = extractelement <32 x float> %6082, i32 4
  %6099 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6100 = getelementptr inbounds i8, i8* %6099, i64 8
  %6101 = bitcast i8* %6100 to float*
  store float %6098, float* %6101, align 4
  %6102 = extractelement <32 x float> %6082, i32 5
  %6103 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6104 = getelementptr inbounds i8, i8* %6103, i64 12
  %6105 = bitcast i8* %6104 to float*
  store float %6102, float* %6105, align 4
  %6106 = extractelement <32 x float> %6082, i32 6
  %6107 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6108 = getelementptr inbounds i8, i8* %6107, i64 16
  %6109 = bitcast i8* %6108 to float*
  store float %6106, float* %6109, align 4
  %6110 = extractelement <32 x float> %6082, i32 7
  %6111 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6112 = getelementptr inbounds i8, i8* %6111, i64 20
  %6113 = bitcast i8* %6112 to float*
  store float %6110, float* %6113, align 4
  %6114 = extractelement <32 x float> %6082, i32 8
  %6115 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6116 = getelementptr inbounds i8, i8* %6115, i64 24
  %6117 = bitcast i8* %6116 to float*
  store float %6114, float* %6117, align 4
  %6118 = extractelement <32 x float> %6082, i32 9
  %6119 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6120 = getelementptr inbounds i8, i8* %6119, i64 28
  %6121 = bitcast i8* %6120 to float*
  store float %6118, float* %6121, align 4
  %6122 = extractelement <32 x float> %6082, i32 10
  %6123 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6124 = getelementptr inbounds i8, i8* %6123, i64 32
  %6125 = bitcast i8* %6124 to float*
  store float %6122, float* %6125, align 4
  %6126 = extractelement <32 x float> %6082, i32 11
  %6127 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6128 = getelementptr inbounds i8, i8* %6127, i64 36
  %6129 = bitcast i8* %6128 to float*
  store float %6126, float* %6129, align 4
  %6130 = extractelement <32 x float> %6082, i32 12
  %6131 = fptosi float %6130 to i32
  %6132 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6133 = getelementptr inbounds i8, i8* %6132, i64 40
  %6134 = bitcast i8* %6133 to i32*
  store i32 %6131, i32* %6134, align 4
  %6135 = extractelement <32 x float> %6082, i32 13
  %6136 = fptosi float %6135 to i32
  %6137 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6138 = getelementptr inbounds i8, i8* %6137, i64 44
  %6139 = bitcast i8* %6138 to i32*
  store i32 %6136, i32* %6139, align 4
  %6140 = extractelement <32 x float> %6082, i32 14
  %6141 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6142 = getelementptr inbounds i8, i8* %6141, i64 48
  %6143 = bitcast i8* %6142 to float*
  store float %6140, float* %6143, align 4
  %6144 = extractelement <32 x float> %6082, i32 15
  %6145 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6146 = getelementptr inbounds i8, i8* %6145, i64 52
  %6147 = bitcast i8* %6146 to float*
  store float %6144, float* %6147, align 4
  %6148 = extractelement <32 x float> %6082, i32 16
  %6149 = fptosi float %6148 to i32
  %6150 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6151 = getelementptr inbounds i8, i8* %6150, i64 56
  %6152 = bitcast i8* %6151 to i32*
  store i32 %6149, i32* %6152, align 4
  %6153 = extractelement <32 x float> %6082, i32 17
  %6154 = fptosi float %6153 to i32
  %6155 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6156 = getelementptr inbounds i8, i8* %6155, i64 60
  %6157 = bitcast i8* %6156 to i32*
  store i32 %6154, i32* %6157, align 4
  %6158 = extractelement <32 x float> %6082, i32 18
  %6159 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6160 = bitcast i8* %6159 to float*
  store float %6158, float* %6160, align 4
  %6161 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6162 = bitcast i8* %6161 to float*
  %6163 = load float, float* %6162, align 4
  %6164 = insertelement <4 x float> zeroinitializer, float %6163, i32 0
  %6165 = insertelement <4 x float> %6164, float 0.000000e+00, i32 1
  %6166 = insertelement <4 x float> %6165, float 0.000000e+00, i32 2
  %6167 = insertelement <4 x float> %6166, float 0.000000e+00, i32 3
  %6168 = load float, float* %1, align 4
  %6169 = insertelement <4 x float> zeroinitializer, float %6168, i32 0
  %6170 = insertelement <4 x float> %6169, float 0.000000e+00, i32 1
  %6171 = insertelement <4 x float> %6170, float 0.000000e+00, i32 2
  %6172 = insertelement <4 x float> %6171, float 0.000000e+00, i32 3
  %6173 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6167, <4 x float> %6172, <4 x float> zeroinitializer)
  %6174 = extractelement <4 x float> %6173, i32 0
  %6175 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6176 = bitcast i8* %6175 to float*
  store float %6174, float* %6176, align 4
  %6177 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6178 = bitcast i8* %6177 to float*
  %6179 = load float, float* %6178, align 4
  %6180 = insertelement <4 x float> zeroinitializer, float %6179, i32 0
  %6181 = insertelement <4 x float> %6180, float 0.000000e+00, i32 1
  %6182 = insertelement <4 x float> %6181, float 0.000000e+00, i32 2
  %6183 = insertelement <4 x float> %6182, float 0.000000e+00, i32 3
  %6184 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6185 = getelementptr inbounds i8, i8* %6184, i64 4
  %6186 = bitcast i8* %6185 to float*
  %6187 = load float, float* %6186, align 4
  %6188 = insertelement <4 x float> zeroinitializer, float %6187, i32 0
  %6189 = insertelement <4 x float> %6188, float 0.000000e+00, i32 1
  %6190 = insertelement <4 x float> %6189, float 0.000000e+00, i32 2
  %6191 = insertelement <4 x float> %6190, float 0.000000e+00, i32 3
  %6192 = getelementptr inbounds float, float* %1, i64 4
  %6193 = load float, float* %6192, align 4
  %6194 = insertelement <4 x float> zeroinitializer, float %6193, i32 0
  %6195 = insertelement <4 x float> %6194, float 0.000000e+00, i32 1
  %6196 = insertelement <4 x float> %6195, float 0.000000e+00, i32 2
  %6197 = insertelement <4 x float> %6196, float 0.000000e+00, i32 3
  %6198 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6191, <4 x float> %6197, <4 x float> %6183)
  %6199 = extractelement <4 x float> %6198, i32 0
  %6200 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6201 = bitcast i8* %6200 to float*
  store float %6199, float* %6201, align 4
  %6202 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6203 = bitcast i8* %6202 to float*
  %6204 = load float, float* %6203, align 4
  %6205 = insertelement <4 x float> zeroinitializer, float %6204, i32 0
  %6206 = insertelement <4 x float> %6205, float 0.000000e+00, i32 1
  %6207 = insertelement <4 x float> %6206, float 0.000000e+00, i32 2
  %6208 = insertelement <4 x float> %6207, float 0.000000e+00, i32 3
  %6209 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6210 = getelementptr inbounds i8, i8* %6209, i64 8
  %6211 = bitcast i8* %6210 to float*
  %6212 = load float, float* %6211, align 4
  %6213 = insertelement <4 x float> zeroinitializer, float %6212, i32 0
  %6214 = insertelement <4 x float> %6213, float 0.000000e+00, i32 1
  %6215 = insertelement <4 x float> %6214, float 0.000000e+00, i32 2
  %6216 = insertelement <4 x float> %6215, float 0.000000e+00, i32 3
  %6217 = getelementptr inbounds float, float* %1, i64 8
  %6218 = load float, float* %6217, align 4
  %6219 = insertelement <4 x float> zeroinitializer, float %6218, i32 0
  %6220 = insertelement <4 x float> %6219, float 0.000000e+00, i32 1
  %6221 = insertelement <4 x float> %6220, float 0.000000e+00, i32 2
  %6222 = insertelement <4 x float> %6221, float 0.000000e+00, i32 3
  %6223 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6216, <4 x float> %6222, <4 x float> %6208)
  %6224 = extractelement <4 x float> %6223, i32 0
  %6225 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6226 = bitcast i8* %6225 to float*
  store float %6224, float* %6226, align 4
  %6227 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6228 = bitcast i8* %6227 to float*
  %6229 = load float, float* %6228, align 4
  %6230 = insertelement <4 x float> zeroinitializer, float %6229, i32 0
  %6231 = insertelement <4 x float> %6230, float 0.000000e+00, i32 1
  %6232 = insertelement <4 x float> %6231, float 0.000000e+00, i32 2
  %6233 = insertelement <4 x float> %6232, float 0.000000e+00, i32 3
  %6234 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6235 = getelementptr inbounds i8, i8* %6234, i64 12
  %6236 = bitcast i8* %6235 to float*
  %6237 = load float, float* %6236, align 4
  %6238 = insertelement <4 x float> zeroinitializer, float %6237, i32 0
  %6239 = insertelement <4 x float> %6238, float 0.000000e+00, i32 1
  %6240 = insertelement <4 x float> %6239, float 0.000000e+00, i32 2
  %6241 = insertelement <4 x float> %6240, float 0.000000e+00, i32 3
  %6242 = getelementptr inbounds float, float* %1, i64 12
  %6243 = load float, float* %6242, align 4
  %6244 = insertelement <4 x float> zeroinitializer, float %6243, i32 0
  %6245 = insertelement <4 x float> %6244, float 0.000000e+00, i32 1
  %6246 = insertelement <4 x float> %6245, float 0.000000e+00, i32 2
  %6247 = insertelement <4 x float> %6246, float 0.000000e+00, i32 3
  %6248 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6241, <4 x float> %6247, <4 x float> %6233)
  %6249 = extractelement <4 x float> %6248, i32 0
  %6250 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6251 = bitcast i8* %6250 to float*
  store float %6249, float* %6251, align 4
  %6252 = extractelement <4 x float> %6248, i32 1
  %6253 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6254 = getelementptr inbounds i8, i8* %6253, i64 4
  %6255 = bitcast i8* %6254 to float*
  store float %6252, float* %6255, align 4
  %6256 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6257 = getelementptr inbounds i8, i8* %6256, i64 4
  %6258 = bitcast i8* %6257 to float*
  %6259 = load float, float* %6258, align 4
  %6260 = insertelement <4 x float> zeroinitializer, float %6259, i32 0
  %6261 = insertelement <4 x float> %6260, float 0.000000e+00, i32 1
  %6262 = insertelement <4 x float> %6261, float 0.000000e+00, i32 2
  %6263 = insertelement <4 x float> %6262, float 0.000000e+00, i32 3
  %6264 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6265 = bitcast i8* %6264 to float*
  %6266 = load float, float* %6265, align 4
  %6267 = insertelement <4 x float> zeroinitializer, float %6266, i32 0
  %6268 = insertelement <4 x float> %6267, float 0.000000e+00, i32 1
  %6269 = insertelement <4 x float> %6268, float 0.000000e+00, i32 2
  %6270 = insertelement <4 x float> %6269, float 0.000000e+00, i32 3
  %6271 = getelementptr inbounds float, float* %1, i64 1
  %6272 = load float, float* %6271, align 4
  %6273 = insertelement <4 x float> zeroinitializer, float %6272, i32 0
  %6274 = insertelement <4 x float> %6273, float 0.000000e+00, i32 1
  %6275 = insertelement <4 x float> %6274, float 0.000000e+00, i32 2
  %6276 = insertelement <4 x float> %6275, float 0.000000e+00, i32 3
  %6277 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6270, <4 x float> %6276, <4 x float> %6263)
  %6278 = extractelement <4 x float> %6277, i32 0
  %6279 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6280 = getelementptr inbounds i8, i8* %6279, i64 4
  %6281 = bitcast i8* %6280 to float*
  store float %6278, float* %6281, align 4
  %6282 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6283 = getelementptr inbounds i8, i8* %6282, i64 4
  %6284 = bitcast i8* %6283 to float*
  %6285 = load float, float* %6284, align 4
  %6286 = insertelement <4 x float> zeroinitializer, float %6285, i32 0
  %6287 = insertelement <4 x float> %6286, float 0.000000e+00, i32 1
  %6288 = insertelement <4 x float> %6287, float 0.000000e+00, i32 2
  %6289 = insertelement <4 x float> %6288, float 0.000000e+00, i32 3
  %6290 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6291 = getelementptr inbounds i8, i8* %6290, i64 4
  %6292 = bitcast i8* %6291 to float*
  %6293 = load float, float* %6292, align 4
  %6294 = insertelement <4 x float> zeroinitializer, float %6293, i32 0
  %6295 = insertelement <4 x float> %6294, float 0.000000e+00, i32 1
  %6296 = insertelement <4 x float> %6295, float 0.000000e+00, i32 2
  %6297 = insertelement <4 x float> %6296, float 0.000000e+00, i32 3
  %6298 = getelementptr inbounds float, float* %1, i64 5
  %6299 = load float, float* %6298, align 4
  %6300 = insertelement <4 x float> zeroinitializer, float %6299, i32 0
  %6301 = insertelement <4 x float> %6300, float 0.000000e+00, i32 1
  %6302 = insertelement <4 x float> %6301, float 0.000000e+00, i32 2
  %6303 = insertelement <4 x float> %6302, float 0.000000e+00, i32 3
  %6304 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6297, <4 x float> %6303, <4 x float> %6289)
  %6305 = extractelement <4 x float> %6304, i32 0
  %6306 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6307 = getelementptr inbounds i8, i8* %6306, i64 4
  %6308 = bitcast i8* %6307 to float*
  store float %6305, float* %6308, align 4
  %6309 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6310 = getelementptr inbounds i8, i8* %6309, i64 4
  %6311 = bitcast i8* %6310 to float*
  %6312 = load float, float* %6311, align 4
  %6313 = insertelement <4 x float> zeroinitializer, float %6312, i32 0
  %6314 = insertelement <4 x float> %6313, float 0.000000e+00, i32 1
  %6315 = insertelement <4 x float> %6314, float 0.000000e+00, i32 2
  %6316 = insertelement <4 x float> %6315, float 0.000000e+00, i32 3
  %6317 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6318 = getelementptr inbounds i8, i8* %6317, i64 8
  %6319 = bitcast i8* %6318 to float*
  %6320 = load float, float* %6319, align 4
  %6321 = insertelement <4 x float> zeroinitializer, float %6320, i32 0
  %6322 = insertelement <4 x float> %6321, float 0.000000e+00, i32 1
  %6323 = insertelement <4 x float> %6322, float 0.000000e+00, i32 2
  %6324 = insertelement <4 x float> %6323, float 0.000000e+00, i32 3
  %6325 = getelementptr inbounds float, float* %1, i64 9
  %6326 = load float, float* %6325, align 4
  %6327 = insertelement <4 x float> zeroinitializer, float %6326, i32 0
  %6328 = insertelement <4 x float> %6327, float 0.000000e+00, i32 1
  %6329 = insertelement <4 x float> %6328, float 0.000000e+00, i32 2
  %6330 = insertelement <4 x float> %6329, float 0.000000e+00, i32 3
  %6331 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6324, <4 x float> %6330, <4 x float> %6316)
  %6332 = extractelement <4 x float> %6331, i32 0
  %6333 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6334 = getelementptr inbounds i8, i8* %6333, i64 4
  %6335 = bitcast i8* %6334 to float*
  store float %6332, float* %6335, align 4
  %6336 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6337 = getelementptr inbounds i8, i8* %6336, i64 4
  %6338 = bitcast i8* %6337 to float*
  %6339 = load float, float* %6338, align 4
  %6340 = insertelement <4 x float> zeroinitializer, float %6339, i32 0
  %6341 = insertelement <4 x float> %6340, float 0.000000e+00, i32 1
  %6342 = insertelement <4 x float> %6341, float 0.000000e+00, i32 2
  %6343 = insertelement <4 x float> %6342, float 0.000000e+00, i32 3
  %6344 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6345 = getelementptr inbounds i8, i8* %6344, i64 12
  %6346 = bitcast i8* %6345 to float*
  %6347 = load float, float* %6346, align 4
  %6348 = insertelement <4 x float> zeroinitializer, float %6347, i32 0
  %6349 = insertelement <4 x float> %6348, float 0.000000e+00, i32 1
  %6350 = insertelement <4 x float> %6349, float 0.000000e+00, i32 2
  %6351 = insertelement <4 x float> %6350, float 0.000000e+00, i32 3
  %6352 = getelementptr inbounds float, float* %1, i64 13
  %6353 = load float, float* %6352, align 4
  %6354 = insertelement <4 x float> zeroinitializer, float %6353, i32 0
  %6355 = insertelement <4 x float> %6354, float 0.000000e+00, i32 1
  %6356 = insertelement <4 x float> %6355, float 0.000000e+00, i32 2
  %6357 = insertelement <4 x float> %6356, float 0.000000e+00, i32 3
  %6358 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6351, <4 x float> %6357, <4 x float> %6343)
  %6359 = extractelement <4 x float> %6358, i32 0
  %6360 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6361 = getelementptr inbounds i8, i8* %6360, i64 4
  %6362 = bitcast i8* %6361 to float*
  store float %6359, float* %6362, align 4
  %6363 = extractelement <4 x float> %6358, i32 1
  %6364 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6365 = getelementptr inbounds i8, i8* %6364, i64 8
  %6366 = bitcast i8* %6365 to float*
  store float %6363, float* %6366, align 4
  %6367 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6368 = getelementptr inbounds i8, i8* %6367, i64 8
  %6369 = bitcast i8* %6368 to float*
  %6370 = load float, float* %6369, align 4
  %6371 = insertelement <4 x float> zeroinitializer, float %6370, i32 0
  %6372 = insertelement <4 x float> %6371, float 0.000000e+00, i32 1
  %6373 = insertelement <4 x float> %6372, float 0.000000e+00, i32 2
  %6374 = insertelement <4 x float> %6373, float 0.000000e+00, i32 3
  %6375 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6376 = bitcast i8* %6375 to float*
  %6377 = load float, float* %6376, align 4
  %6378 = insertelement <4 x float> zeroinitializer, float %6377, i32 0
  %6379 = insertelement <4 x float> %6378, float 0.000000e+00, i32 1
  %6380 = insertelement <4 x float> %6379, float 0.000000e+00, i32 2
  %6381 = insertelement <4 x float> %6380, float 0.000000e+00, i32 3
  %6382 = getelementptr inbounds float, float* %1, i64 2
  %6383 = load float, float* %6382, align 4
  %6384 = insertelement <4 x float> zeroinitializer, float %6383, i32 0
  %6385 = insertelement <4 x float> %6384, float 0.000000e+00, i32 1
  %6386 = insertelement <4 x float> %6385, float 0.000000e+00, i32 2
  %6387 = insertelement <4 x float> %6386, float 0.000000e+00, i32 3
  %6388 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6381, <4 x float> %6387, <4 x float> %6374)
  %6389 = extractelement <4 x float> %6388, i32 0
  %6390 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6391 = getelementptr inbounds i8, i8* %6390, i64 8
  %6392 = bitcast i8* %6391 to float*
  store float %6389, float* %6392, align 4
  %6393 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6394 = getelementptr inbounds i8, i8* %6393, i64 8
  %6395 = bitcast i8* %6394 to float*
  %6396 = load float, float* %6395, align 4
  %6397 = insertelement <4 x float> zeroinitializer, float %6396, i32 0
  %6398 = insertelement <4 x float> %6397, float 0.000000e+00, i32 1
  %6399 = insertelement <4 x float> %6398, float 0.000000e+00, i32 2
  %6400 = insertelement <4 x float> %6399, float 0.000000e+00, i32 3
  %6401 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6402 = getelementptr inbounds i8, i8* %6401, i64 4
  %6403 = bitcast i8* %6402 to float*
  %6404 = load float, float* %6403, align 4
  %6405 = insertelement <4 x float> zeroinitializer, float %6404, i32 0
  %6406 = insertelement <4 x float> %6405, float 0.000000e+00, i32 1
  %6407 = insertelement <4 x float> %6406, float 0.000000e+00, i32 2
  %6408 = insertelement <4 x float> %6407, float 0.000000e+00, i32 3
  %6409 = getelementptr inbounds float, float* %1, i64 6
  %6410 = load float, float* %6409, align 4
  %6411 = insertelement <4 x float> zeroinitializer, float %6410, i32 0
  %6412 = insertelement <4 x float> %6411, float 0.000000e+00, i32 1
  %6413 = insertelement <4 x float> %6412, float 0.000000e+00, i32 2
  %6414 = insertelement <4 x float> %6413, float 0.000000e+00, i32 3
  %6415 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6408, <4 x float> %6414, <4 x float> %6400)
  %6416 = extractelement <4 x float> %6415, i32 0
  %6417 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6418 = getelementptr inbounds i8, i8* %6417, i64 8
  %6419 = bitcast i8* %6418 to float*
  store float %6416, float* %6419, align 4
  %6420 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6421 = getelementptr inbounds i8, i8* %6420, i64 8
  %6422 = bitcast i8* %6421 to float*
  %6423 = load float, float* %6422, align 4
  %6424 = insertelement <4 x float> zeroinitializer, float %6423, i32 0
  %6425 = insertelement <4 x float> %6424, float 0.000000e+00, i32 1
  %6426 = insertelement <4 x float> %6425, float 0.000000e+00, i32 2
  %6427 = insertelement <4 x float> %6426, float 0.000000e+00, i32 3
  %6428 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6429 = getelementptr inbounds i8, i8* %6428, i64 8
  %6430 = bitcast i8* %6429 to float*
  %6431 = load float, float* %6430, align 4
  %6432 = insertelement <4 x float> zeroinitializer, float %6431, i32 0
  %6433 = insertelement <4 x float> %6432, float 0.000000e+00, i32 1
  %6434 = insertelement <4 x float> %6433, float 0.000000e+00, i32 2
  %6435 = insertelement <4 x float> %6434, float 0.000000e+00, i32 3
  %6436 = getelementptr inbounds float, float* %1, i64 10
  %6437 = load float, float* %6436, align 4
  %6438 = insertelement <4 x float> zeroinitializer, float %6437, i32 0
  %6439 = insertelement <4 x float> %6438, float 0.000000e+00, i32 1
  %6440 = insertelement <4 x float> %6439, float 0.000000e+00, i32 2
  %6441 = insertelement <4 x float> %6440, float 0.000000e+00, i32 3
  %6442 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6435, <4 x float> %6441, <4 x float> %6427)
  %6443 = extractelement <4 x float> %6442, i32 0
  %6444 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6445 = getelementptr inbounds i8, i8* %6444, i64 8
  %6446 = bitcast i8* %6445 to float*
  store float %6443, float* %6446, align 4
  %6447 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6448 = getelementptr inbounds i8, i8* %6447, i64 8
  %6449 = bitcast i8* %6448 to float*
  %6450 = load float, float* %6449, align 4
  %6451 = insertelement <4 x float> zeroinitializer, float %6450, i32 0
  %6452 = insertelement <4 x float> %6451, float 0.000000e+00, i32 1
  %6453 = insertelement <4 x float> %6452, float 0.000000e+00, i32 2
  %6454 = insertelement <4 x float> %6453, float 0.000000e+00, i32 3
  %6455 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6456 = getelementptr inbounds i8, i8* %6455, i64 12
  %6457 = bitcast i8* %6456 to float*
  %6458 = load float, float* %6457, align 4
  %6459 = insertelement <4 x float> zeroinitializer, float %6458, i32 0
  %6460 = insertelement <4 x float> %6459, float 0.000000e+00, i32 1
  %6461 = insertelement <4 x float> %6460, float 0.000000e+00, i32 2
  %6462 = insertelement <4 x float> %6461, float 0.000000e+00, i32 3
  %6463 = getelementptr inbounds float, float* %1, i64 14
  %6464 = load float, float* %6463, align 4
  %6465 = insertelement <4 x float> zeroinitializer, float %6464, i32 0
  %6466 = insertelement <4 x float> %6465, float 0.000000e+00, i32 1
  %6467 = insertelement <4 x float> %6466, float 0.000000e+00, i32 2
  %6468 = insertelement <4 x float> %6467, float 0.000000e+00, i32 3
  %6469 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6462, <4 x float> %6468, <4 x float> %6454)
  %6470 = extractelement <4 x float> %6469, i32 0
  %6471 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6472 = getelementptr inbounds i8, i8* %6471, i64 8
  %6473 = bitcast i8* %6472 to float*
  store float %6470, float* %6473, align 4
  %6474 = extractelement <4 x float> %6469, i32 1
  %6475 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6476 = getelementptr inbounds i8, i8* %6475, i64 12
  %6477 = bitcast i8* %6476 to float*
  store float %6474, float* %6477, align 4
  %6478 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6479 = getelementptr inbounds i8, i8* %6478, i64 12
  %6480 = bitcast i8* %6479 to float*
  %6481 = load float, float* %6480, align 4
  %6482 = insertelement <4 x float> zeroinitializer, float %6481, i32 0
  %6483 = insertelement <4 x float> %6482, float 0.000000e+00, i32 1
  %6484 = insertelement <4 x float> %6483, float 0.000000e+00, i32 2
  %6485 = insertelement <4 x float> %6484, float 0.000000e+00, i32 3
  %6486 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6487 = bitcast i8* %6486 to float*
  %6488 = load float, float* %6487, align 4
  %6489 = insertelement <4 x float> zeroinitializer, float %6488, i32 0
  %6490 = insertelement <4 x float> %6489, float 0.000000e+00, i32 1
  %6491 = insertelement <4 x float> %6490, float 0.000000e+00, i32 2
  %6492 = insertelement <4 x float> %6491, float 0.000000e+00, i32 3
  %6493 = getelementptr inbounds float, float* %1, i64 3
  %6494 = load float, float* %6493, align 4
  %6495 = insertelement <4 x float> zeroinitializer, float %6494, i32 0
  %6496 = insertelement <4 x float> %6495, float 0.000000e+00, i32 1
  %6497 = insertelement <4 x float> %6496, float 0.000000e+00, i32 2
  %6498 = insertelement <4 x float> %6497, float 0.000000e+00, i32 3
  %6499 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6492, <4 x float> %6498, <4 x float> %6485)
  %6500 = extractelement <4 x float> %6499, i32 0
  %6501 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6502 = getelementptr inbounds i8, i8* %6501, i64 12
  %6503 = bitcast i8* %6502 to float*
  store float %6500, float* %6503, align 4
  %6504 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6505 = getelementptr inbounds i8, i8* %6504, i64 12
  %6506 = bitcast i8* %6505 to float*
  %6507 = load float, float* %6506, align 4
  %6508 = insertelement <4 x float> zeroinitializer, float %6507, i32 0
  %6509 = insertelement <4 x float> %6508, float 0.000000e+00, i32 1
  %6510 = insertelement <4 x float> %6509, float 0.000000e+00, i32 2
  %6511 = insertelement <4 x float> %6510, float 0.000000e+00, i32 3
  %6512 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6513 = getelementptr inbounds i8, i8* %6512, i64 4
  %6514 = bitcast i8* %6513 to float*
  %6515 = load float, float* %6514, align 4
  %6516 = insertelement <4 x float> zeroinitializer, float %6515, i32 0
  %6517 = insertelement <4 x float> %6516, float 0.000000e+00, i32 1
  %6518 = insertelement <4 x float> %6517, float 0.000000e+00, i32 2
  %6519 = insertelement <4 x float> %6518, float 0.000000e+00, i32 3
  %6520 = getelementptr inbounds float, float* %1, i64 7
  %6521 = load float, float* %6520, align 4
  %6522 = insertelement <4 x float> zeroinitializer, float %6521, i32 0
  %6523 = insertelement <4 x float> %6522, float 0.000000e+00, i32 1
  %6524 = insertelement <4 x float> %6523, float 0.000000e+00, i32 2
  %6525 = insertelement <4 x float> %6524, float 0.000000e+00, i32 3
  %6526 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6519, <4 x float> %6525, <4 x float> %6511)
  %6527 = extractelement <4 x float> %6526, i32 0
  %6528 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6529 = getelementptr inbounds i8, i8* %6528, i64 12
  %6530 = bitcast i8* %6529 to float*
  store float %6527, float* %6530, align 4
  %6531 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6532 = getelementptr inbounds i8, i8* %6531, i64 12
  %6533 = bitcast i8* %6532 to float*
  %6534 = load float, float* %6533, align 4
  %6535 = insertelement <4 x float> zeroinitializer, float %6534, i32 0
  %6536 = insertelement <4 x float> %6535, float 0.000000e+00, i32 1
  %6537 = insertelement <4 x float> %6536, float 0.000000e+00, i32 2
  %6538 = insertelement <4 x float> %6537, float 0.000000e+00, i32 3
  %6539 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6540 = getelementptr inbounds i8, i8* %6539, i64 8
  %6541 = bitcast i8* %6540 to float*
  %6542 = load float, float* %6541, align 4
  %6543 = insertelement <4 x float> zeroinitializer, float %6542, i32 0
  %6544 = insertelement <4 x float> %6543, float 0.000000e+00, i32 1
  %6545 = insertelement <4 x float> %6544, float 0.000000e+00, i32 2
  %6546 = insertelement <4 x float> %6545, float 0.000000e+00, i32 3
  %6547 = getelementptr inbounds float, float* %1, i64 11
  %6548 = load float, float* %6547, align 4
  %6549 = insertelement <4 x float> zeroinitializer, float %6548, i32 0
  %6550 = insertelement <4 x float> %6549, float 0.000000e+00, i32 1
  %6551 = insertelement <4 x float> %6550, float 0.000000e+00, i32 2
  %6552 = insertelement <4 x float> %6551, float 0.000000e+00, i32 3
  %6553 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6546, <4 x float> %6552, <4 x float> %6538)
  %6554 = extractelement <4 x float> %6553, i32 0
  %6555 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6556 = getelementptr inbounds i8, i8* %6555, i64 12
  %6557 = bitcast i8* %6556 to float*
  store float %6554, float* %6557, align 4
  %6558 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6559 = getelementptr inbounds i8, i8* %6558, i64 12
  %6560 = bitcast i8* %6559 to float*
  %6561 = load float, float* %6560, align 4
  %6562 = insertelement <4 x float> zeroinitializer, float %6561, i32 0
  %6563 = insertelement <4 x float> %6562, float 0.000000e+00, i32 1
  %6564 = insertelement <4 x float> %6563, float 0.000000e+00, i32 2
  %6565 = insertelement <4 x float> %6564, float 0.000000e+00, i32 3
  %6566 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6567 = getelementptr inbounds i8, i8* %6566, i64 12
  %6568 = bitcast i8* %6567 to float*
  %6569 = load float, float* %6568, align 4
  %6570 = insertelement <4 x float> zeroinitializer, float %6569, i32 0
  %6571 = insertelement <4 x float> %6570, float 0.000000e+00, i32 1
  %6572 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6573 = getelementptr inbounds i8, i8* %6572, i64 16
  %6574 = bitcast i8* %6573 to float*
  %6575 = load float, float* %6574, align 4
  %6576 = insertelement <4 x float> %6571, float %6575, i32 2
  %6577 = insertelement <4 x float> %6576, float 0.000000e+00, i32 3
  %6578 = getelementptr inbounds float, float* %1, i64 15
  %6579 = load float, float* %6578, align 4
  %6580 = insertelement <4 x float> zeroinitializer, float %6579, i32 0
  %6581 = insertelement <4 x float> %6580, float 0.000000e+00, i32 1
  %6582 = load float, float* %1, align 4
  %6583 = insertelement <4 x float> %6581, float %6582, i32 2
  %6584 = insertelement <4 x float> %6583, float 0.000000e+00, i32 3
  %6585 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6577, <4 x float> %6584, <4 x float> %6565)
  %6586 = extractelement <4 x float> %6585, i32 0
  %6587 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6588 = getelementptr inbounds i8, i8* %6587, i64 12
  %6589 = bitcast i8* %6588 to float*
  store float %6586, float* %6589, align 4
  %6590 = extractelement <4 x float> %6585, i32 1
  %6591 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6592 = getelementptr inbounds i8, i8* %6591, i64 16
  %6593 = bitcast i8* %6592 to float*
  store float %6590, float* %6593, align 4
  %6594 = extractelement <4 x float> %6585, i32 2
  %6595 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6596 = getelementptr inbounds i8, i8* %6595, i64 16
  %6597 = bitcast i8* %6596 to float*
  store float %6594, float* %6597, align 4
  %6598 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6599 = getelementptr inbounds i8, i8* %6598, i64 16
  %6600 = bitcast i8* %6599 to float*
  %6601 = load float, float* %6600, align 4
  %6602 = insertelement <4 x float> zeroinitializer, float %6601, i32 0
  %6603 = insertelement <4 x float> %6602, float 0.000000e+00, i32 1
  %6604 = insertelement <4 x float> %6603, float 0.000000e+00, i32 2
  %6605 = insertelement <4 x float> %6604, float 0.000000e+00, i32 3
  %6606 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6607 = getelementptr inbounds i8, i8* %6606, i64 20
  %6608 = bitcast i8* %6607 to float*
  %6609 = load float, float* %6608, align 4
  %6610 = insertelement <4 x float> zeroinitializer, float %6609, i32 0
  %6611 = insertelement <4 x float> %6610, float 0.000000e+00, i32 1
  %6612 = insertelement <4 x float> %6611, float 0.000000e+00, i32 2
  %6613 = insertelement <4 x float> %6612, float 0.000000e+00, i32 3
  %6614 = getelementptr inbounds float, float* %1, i64 4
  %6615 = load float, float* %6614, align 4
  %6616 = insertelement <4 x float> zeroinitializer, float %6615, i32 0
  %6617 = insertelement <4 x float> %6616, float 0.000000e+00, i32 1
  %6618 = insertelement <4 x float> %6617, float 0.000000e+00, i32 2
  %6619 = insertelement <4 x float> %6618, float 0.000000e+00, i32 3
  %6620 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6613, <4 x float> %6619, <4 x float> %6605)
  %6621 = extractelement <4 x float> %6620, i32 0
  %6622 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6623 = getelementptr inbounds i8, i8* %6622, i64 16
  %6624 = bitcast i8* %6623 to float*
  store float %6621, float* %6624, align 4
  %6625 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6626 = getelementptr inbounds i8, i8* %6625, i64 16
  %6627 = bitcast i8* %6626 to float*
  %6628 = load float, float* %6627, align 4
  %6629 = insertelement <4 x float> zeroinitializer, float %6628, i32 0
  %6630 = insertelement <4 x float> %6629, float 0.000000e+00, i32 1
  %6631 = insertelement <4 x float> %6630, float 0.000000e+00, i32 2
  %6632 = insertelement <4 x float> %6631, float 0.000000e+00, i32 3
  %6633 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6634 = getelementptr inbounds i8, i8* %6633, i64 24
  %6635 = bitcast i8* %6634 to float*
  %6636 = load float, float* %6635, align 4
  %6637 = insertelement <4 x float> zeroinitializer, float %6636, i32 0
  %6638 = insertelement <4 x float> %6637, float 0.000000e+00, i32 1
  %6639 = insertelement <4 x float> %6638, float 0.000000e+00, i32 2
  %6640 = insertelement <4 x float> %6639, float 0.000000e+00, i32 3
  %6641 = getelementptr inbounds float, float* %1, i64 8
  %6642 = load float, float* %6641, align 4
  %6643 = insertelement <4 x float> zeroinitializer, float %6642, i32 0
  %6644 = insertelement <4 x float> %6643, float 0.000000e+00, i32 1
  %6645 = insertelement <4 x float> %6644, float 0.000000e+00, i32 2
  %6646 = insertelement <4 x float> %6645, float 0.000000e+00, i32 3
  %6647 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6640, <4 x float> %6646, <4 x float> %6632)
  %6648 = extractelement <4 x float> %6647, i32 0
  %6649 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6650 = getelementptr inbounds i8, i8* %6649, i64 16
  %6651 = bitcast i8* %6650 to float*
  store float %6648, float* %6651, align 4
  %6652 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6653 = getelementptr inbounds i8, i8* %6652, i64 16
  %6654 = bitcast i8* %6653 to float*
  %6655 = load float, float* %6654, align 4
  %6656 = insertelement <4 x float> zeroinitializer, float %6655, i32 0
  %6657 = insertelement <4 x float> %6656, float 0.000000e+00, i32 1
  %6658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6659 = getelementptr inbounds i8, i8* %6658, i64 20
  %6660 = bitcast i8* %6659 to float*
  %6661 = load float, float* %6660, align 4
  %6662 = insertelement <4 x float> %6657, float %6661, i32 2
  %6663 = insertelement <4 x float> %6662, float 0.000000e+00, i32 3
  %6664 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6665 = getelementptr inbounds i8, i8* %6664, i64 28
  %6666 = bitcast i8* %6665 to float*
  %6667 = load float, float* %6666, align 4
  %6668 = insertelement <4 x float> zeroinitializer, float %6667, i32 0
  %6669 = insertelement <4 x float> %6668, float 0.000000e+00, i32 1
  %6670 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6671 = getelementptr inbounds i8, i8* %6670, i64 16
  %6672 = bitcast i8* %6671 to float*
  %6673 = load float, float* %6672, align 4
  %6674 = insertelement <4 x float> %6669, float %6673, i32 2
  %6675 = insertelement <4 x float> %6674, float 0.000000e+00, i32 3
  %6676 = getelementptr inbounds float, float* %1, i64 12
  %6677 = load float, float* %6676, align 4
  %6678 = insertelement <4 x float> zeroinitializer, float %6677, i32 0
  %6679 = insertelement <4 x float> %6678, float 0.000000e+00, i32 1
  %6680 = getelementptr inbounds float, float* %1, i64 1
  %6681 = load float, float* %6680, align 4
  %6682 = insertelement <4 x float> %6679, float %6681, i32 2
  %6683 = insertelement <4 x float> %6682, float 0.000000e+00, i32 3
  %6684 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6675, <4 x float> %6683, <4 x float> %6663)
  %6685 = extractelement <4 x float> %6684, i32 0
  %6686 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6687 = getelementptr inbounds i8, i8* %6686, i64 16
  %6688 = bitcast i8* %6687 to float*
  store float %6685, float* %6688, align 4
  %6689 = extractelement <4 x float> %6684, i32 1
  %6690 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6691 = getelementptr inbounds i8, i8* %6690, i64 20
  %6692 = bitcast i8* %6691 to float*
  store float %6689, float* %6692, align 4
  %6693 = extractelement <4 x float> %6684, i32 2
  %6694 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6695 = getelementptr inbounds i8, i8* %6694, i64 20
  %6696 = bitcast i8* %6695 to float*
  store float %6693, float* %6696, align 4
  %6697 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6698 = getelementptr inbounds i8, i8* %6697, i64 20
  %6699 = bitcast i8* %6698 to float*
  %6700 = load float, float* %6699, align 4
  %6701 = insertelement <4 x float> zeroinitializer, float %6700, i32 0
  %6702 = insertelement <4 x float> %6701, float 0.000000e+00, i32 1
  %6703 = insertelement <4 x float> %6702, float 0.000000e+00, i32 2
  %6704 = insertelement <4 x float> %6703, float 0.000000e+00, i32 3
  %6705 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6706 = getelementptr inbounds i8, i8* %6705, i64 20
  %6707 = bitcast i8* %6706 to float*
  %6708 = load float, float* %6707, align 4
  %6709 = insertelement <4 x float> zeroinitializer, float %6708, i32 0
  %6710 = insertelement <4 x float> %6709, float 0.000000e+00, i32 1
  %6711 = insertelement <4 x float> %6710, float 0.000000e+00, i32 2
  %6712 = insertelement <4 x float> %6711, float 0.000000e+00, i32 3
  %6713 = getelementptr inbounds float, float* %1, i64 5
  %6714 = load float, float* %6713, align 4
  %6715 = insertelement <4 x float> zeroinitializer, float %6714, i32 0
  %6716 = insertelement <4 x float> %6715, float 0.000000e+00, i32 1
  %6717 = insertelement <4 x float> %6716, float 0.000000e+00, i32 2
  %6718 = insertelement <4 x float> %6717, float 0.000000e+00, i32 3
  %6719 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6712, <4 x float> %6718, <4 x float> %6704)
  %6720 = extractelement <4 x float> %6719, i32 0
  %6721 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6722 = getelementptr inbounds i8, i8* %6721, i64 20
  %6723 = bitcast i8* %6722 to float*
  store float %6720, float* %6723, align 4
  %6724 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6725 = getelementptr inbounds i8, i8* %6724, i64 20
  %6726 = bitcast i8* %6725 to float*
  %6727 = load float, float* %6726, align 4
  %6728 = insertelement <4 x float> zeroinitializer, float %6727, i32 0
  %6729 = insertelement <4 x float> %6728, float 0.000000e+00, i32 1
  %6730 = insertelement <4 x float> %6729, float 0.000000e+00, i32 2
  %6731 = insertelement <4 x float> %6730, float 0.000000e+00, i32 3
  %6732 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6733 = getelementptr inbounds i8, i8* %6732, i64 24
  %6734 = bitcast i8* %6733 to float*
  %6735 = load float, float* %6734, align 4
  %6736 = insertelement <4 x float> zeroinitializer, float %6735, i32 0
  %6737 = insertelement <4 x float> %6736, float 0.000000e+00, i32 1
  %6738 = insertelement <4 x float> %6737, float 0.000000e+00, i32 2
  %6739 = insertelement <4 x float> %6738, float 0.000000e+00, i32 3
  %6740 = getelementptr inbounds float, float* %1, i64 9
  %6741 = load float, float* %6740, align 4
  %6742 = insertelement <4 x float> zeroinitializer, float %6741, i32 0
  %6743 = insertelement <4 x float> %6742, float 0.000000e+00, i32 1
  %6744 = insertelement <4 x float> %6743, float 0.000000e+00, i32 2
  %6745 = insertelement <4 x float> %6744, float 0.000000e+00, i32 3
  %6746 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6739, <4 x float> %6745, <4 x float> %6731)
  %6747 = extractelement <4 x float> %6746, i32 0
  %6748 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6749 = getelementptr inbounds i8, i8* %6748, i64 20
  %6750 = bitcast i8* %6749 to float*
  store float %6747, float* %6750, align 4
  %6751 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6752 = getelementptr inbounds i8, i8* %6751, i64 20
  %6753 = bitcast i8* %6752 to float*
  %6754 = load float, float* %6753, align 4
  %6755 = insertelement <4 x float> zeroinitializer, float %6754, i32 0
  %6756 = insertelement <4 x float> %6755, float 0.000000e+00, i32 1
  %6757 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6758 = getelementptr inbounds i8, i8* %6757, i64 24
  %6759 = bitcast i8* %6758 to float*
  %6760 = load float, float* %6759, align 4
  %6761 = insertelement <4 x float> %6756, float %6760, i32 2
  %6762 = insertelement <4 x float> %6761, float 0.000000e+00, i32 3
  %6763 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6764 = getelementptr inbounds i8, i8* %6763, i64 28
  %6765 = bitcast i8* %6764 to float*
  %6766 = load float, float* %6765, align 4
  %6767 = insertelement <4 x float> zeroinitializer, float %6766, i32 0
  %6768 = insertelement <4 x float> %6767, float 0.000000e+00, i32 1
  %6769 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6770 = getelementptr inbounds i8, i8* %6769, i64 16
  %6771 = bitcast i8* %6770 to float*
  %6772 = load float, float* %6771, align 4
  %6773 = insertelement <4 x float> %6768, float %6772, i32 2
  %6774 = insertelement <4 x float> %6773, float 0.000000e+00, i32 3
  %6775 = getelementptr inbounds float, float* %1, i64 13
  %6776 = load float, float* %6775, align 4
  %6777 = insertelement <4 x float> zeroinitializer, float %6776, i32 0
  %6778 = insertelement <4 x float> %6777, float 0.000000e+00, i32 1
  %6779 = getelementptr inbounds float, float* %1, i64 2
  %6780 = load float, float* %6779, align 4
  %6781 = insertelement <4 x float> %6778, float %6780, i32 2
  %6782 = insertelement <4 x float> %6781, float 0.000000e+00, i32 3
  %6783 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6774, <4 x float> %6782, <4 x float> %6762)
  %6784 = extractelement <4 x float> %6783, i32 0
  %6785 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6786 = getelementptr inbounds i8, i8* %6785, i64 20
  %6787 = bitcast i8* %6786 to float*
  store float %6784, float* %6787, align 4
  %6788 = extractelement <4 x float> %6783, i32 1
  %6789 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6790 = getelementptr inbounds i8, i8* %6789, i64 24
  %6791 = bitcast i8* %6790 to float*
  store float %6788, float* %6791, align 4
  %6792 = extractelement <4 x float> %6783, i32 2
  %6793 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6794 = getelementptr inbounds i8, i8* %6793, i64 24
  %6795 = bitcast i8* %6794 to float*
  store float %6792, float* %6795, align 4
  %6796 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6797 = getelementptr inbounds i8, i8* %6796, i64 24
  %6798 = bitcast i8* %6797 to float*
  %6799 = load float, float* %6798, align 4
  %6800 = insertelement <4 x float> zeroinitializer, float %6799, i32 0
  %6801 = insertelement <4 x float> %6800, float 0.000000e+00, i32 1
  %6802 = insertelement <4 x float> %6801, float 0.000000e+00, i32 2
  %6803 = insertelement <4 x float> %6802, float 0.000000e+00, i32 3
  %6804 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6805 = getelementptr inbounds i8, i8* %6804, i64 20
  %6806 = bitcast i8* %6805 to float*
  %6807 = load float, float* %6806, align 4
  %6808 = insertelement <4 x float> zeroinitializer, float %6807, i32 0
  %6809 = insertelement <4 x float> %6808, float 0.000000e+00, i32 1
  %6810 = insertelement <4 x float> %6809, float 0.000000e+00, i32 2
  %6811 = insertelement <4 x float> %6810, float 0.000000e+00, i32 3
  %6812 = getelementptr inbounds float, float* %1, i64 6
  %6813 = load float, float* %6812, align 4
  %6814 = insertelement <4 x float> zeroinitializer, float %6813, i32 0
  %6815 = insertelement <4 x float> %6814, float 0.000000e+00, i32 1
  %6816 = insertelement <4 x float> %6815, float 0.000000e+00, i32 2
  %6817 = insertelement <4 x float> %6816, float 0.000000e+00, i32 3
  %6818 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6811, <4 x float> %6817, <4 x float> %6803)
  %6819 = extractelement <4 x float> %6818, i32 0
  %6820 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6821 = getelementptr inbounds i8, i8* %6820, i64 24
  %6822 = bitcast i8* %6821 to float*
  store float %6819, float* %6822, align 4
  %6823 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6824 = getelementptr inbounds i8, i8* %6823, i64 24
  %6825 = bitcast i8* %6824 to float*
  %6826 = load float, float* %6825, align 4
  %6827 = insertelement <4 x float> zeroinitializer, float %6826, i32 0
  %6828 = insertelement <4 x float> %6827, float 0.000000e+00, i32 1
  %6829 = insertelement <4 x float> %6828, float 0.000000e+00, i32 2
  %6830 = insertelement <4 x float> %6829, float 0.000000e+00, i32 3
  %6831 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6832 = getelementptr inbounds i8, i8* %6831, i64 24
  %6833 = bitcast i8* %6832 to float*
  %6834 = load float, float* %6833, align 4
  %6835 = insertelement <4 x float> zeroinitializer, float %6834, i32 0
  %6836 = insertelement <4 x float> %6835, float 0.000000e+00, i32 1
  %6837 = insertelement <4 x float> %6836, float 0.000000e+00, i32 2
  %6838 = insertelement <4 x float> %6837, float 0.000000e+00, i32 3
  %6839 = getelementptr inbounds float, float* %1, i64 10
  %6840 = load float, float* %6839, align 4
  %6841 = insertelement <4 x float> zeroinitializer, float %6840, i32 0
  %6842 = insertelement <4 x float> %6841, float 0.000000e+00, i32 1
  %6843 = insertelement <4 x float> %6842, float 0.000000e+00, i32 2
  %6844 = insertelement <4 x float> %6843, float 0.000000e+00, i32 3
  %6845 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6838, <4 x float> %6844, <4 x float> %6830)
  %6846 = extractelement <4 x float> %6845, i32 0
  %6847 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6848 = getelementptr inbounds i8, i8* %6847, i64 24
  %6849 = bitcast i8* %6848 to float*
  store float %6846, float* %6849, align 4
  %6850 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6851 = getelementptr inbounds i8, i8* %6850, i64 24
  %6852 = bitcast i8* %6851 to float*
  %6853 = load float, float* %6852, align 4
  %6854 = insertelement <4 x float> zeroinitializer, float %6853, i32 0
  %6855 = insertelement <4 x float> %6854, float 0.000000e+00, i32 1
  %6856 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6857 = getelementptr inbounds i8, i8* %6856, i64 28
  %6858 = bitcast i8* %6857 to float*
  %6859 = load float, float* %6858, align 4
  %6860 = insertelement <4 x float> %6855, float %6859, i32 2
  %6861 = insertelement <4 x float> %6860, float 0.000000e+00, i32 3
  %6862 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6863 = getelementptr inbounds i8, i8* %6862, i64 28
  %6864 = bitcast i8* %6863 to float*
  %6865 = load float, float* %6864, align 4
  %6866 = insertelement <4 x float> zeroinitializer, float %6865, i32 0
  %6867 = insertelement <4 x float> %6866, float 0.000000e+00, i32 1
  %6868 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6869 = getelementptr inbounds i8, i8* %6868, i64 16
  %6870 = bitcast i8* %6869 to float*
  %6871 = load float, float* %6870, align 4
  %6872 = insertelement <4 x float> %6867, float %6871, i32 2
  %6873 = insertelement <4 x float> %6872, float 0.000000e+00, i32 3
  %6874 = getelementptr inbounds float, float* %1, i64 14
  %6875 = load float, float* %6874, align 4
  %6876 = insertelement <4 x float> zeroinitializer, float %6875, i32 0
  %6877 = insertelement <4 x float> %6876, float 0.000000e+00, i32 1
  %6878 = getelementptr inbounds float, float* %1, i64 3
  %6879 = load float, float* %6878, align 4
  %6880 = insertelement <4 x float> %6877, float %6879, i32 2
  %6881 = insertelement <4 x float> %6880, float 0.000000e+00, i32 3
  %6882 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6873, <4 x float> %6881, <4 x float> %6861)
  %6883 = extractelement <4 x float> %6882, i32 0
  %6884 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6885 = getelementptr inbounds i8, i8* %6884, i64 24
  %6886 = bitcast i8* %6885 to float*
  store float %6883, float* %6886, align 4
  %6887 = extractelement <4 x float> %6882, i32 1
  %6888 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6889 = getelementptr inbounds i8, i8* %6888, i64 28
  %6890 = bitcast i8* %6889 to float*
  store float %6887, float* %6890, align 4
  %6891 = extractelement <4 x float> %6882, i32 2
  %6892 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6893 = getelementptr inbounds i8, i8* %6892, i64 28
  %6894 = bitcast i8* %6893 to float*
  store float %6891, float* %6894, align 4
  %6895 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6896 = getelementptr inbounds i8, i8* %6895, i64 28
  %6897 = bitcast i8* %6896 to float*
  %6898 = load float, float* %6897, align 4
  %6899 = insertelement <4 x float> zeroinitializer, float %6898, i32 0
  %6900 = insertelement <4 x float> %6899, float 0.000000e+00, i32 1
  %6901 = insertelement <4 x float> %6900, float 0.000000e+00, i32 2
  %6902 = insertelement <4 x float> %6901, float 0.000000e+00, i32 3
  %6903 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6904 = getelementptr inbounds i8, i8* %6903, i64 20
  %6905 = bitcast i8* %6904 to float*
  %6906 = load float, float* %6905, align 4
  %6907 = insertelement <4 x float> zeroinitializer, float %6906, i32 0
  %6908 = insertelement <4 x float> %6907, float 0.000000e+00, i32 1
  %6909 = insertelement <4 x float> %6908, float 0.000000e+00, i32 2
  %6910 = insertelement <4 x float> %6909, float 0.000000e+00, i32 3
  %6911 = getelementptr inbounds float, float* %1, i64 7
  %6912 = load float, float* %6911, align 4
  %6913 = insertelement <4 x float> zeroinitializer, float %6912, i32 0
  %6914 = insertelement <4 x float> %6913, float 0.000000e+00, i32 1
  %6915 = insertelement <4 x float> %6914, float 0.000000e+00, i32 2
  %6916 = insertelement <4 x float> %6915, float 0.000000e+00, i32 3
  %6917 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6910, <4 x float> %6916, <4 x float> %6902)
  %6918 = extractelement <4 x float> %6917, i32 0
  %6919 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6920 = getelementptr inbounds i8, i8* %6919, i64 28
  %6921 = bitcast i8* %6920 to float*
  store float %6918, float* %6921, align 4
  %6922 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6923 = getelementptr inbounds i8, i8* %6922, i64 28
  %6924 = bitcast i8* %6923 to float*
  %6925 = load float, float* %6924, align 4
  %6926 = insertelement <4 x float> zeroinitializer, float %6925, i32 0
  %6927 = insertelement <4 x float> %6926, float 0.000000e+00, i32 1
  %6928 = insertelement <4 x float> %6927, float 0.000000e+00, i32 2
  %6929 = insertelement <4 x float> %6928, float 0.000000e+00, i32 3
  %6930 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6931 = getelementptr inbounds i8, i8* %6930, i64 24
  %6932 = bitcast i8* %6931 to float*
  %6933 = load float, float* %6932, align 4
  %6934 = insertelement <4 x float> zeroinitializer, float %6933, i32 0
  %6935 = insertelement <4 x float> %6934, float 0.000000e+00, i32 1
  %6936 = insertelement <4 x float> %6935, float 0.000000e+00, i32 2
  %6937 = insertelement <4 x float> %6936, float 0.000000e+00, i32 3
  %6938 = getelementptr inbounds float, float* %1, i64 11
  %6939 = load float, float* %6938, align 4
  %6940 = insertelement <4 x float> zeroinitializer, float %6939, i32 0
  %6941 = insertelement <4 x float> %6940, float 0.000000e+00, i32 1
  %6942 = insertelement <4 x float> %6941, float 0.000000e+00, i32 2
  %6943 = insertelement <4 x float> %6942, float 0.000000e+00, i32 3
  %6944 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6937, <4 x float> %6943, <4 x float> %6929)
  %6945 = extractelement <4 x float> %6944, i32 0
  %6946 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6947 = getelementptr inbounds i8, i8* %6946, i64 28
  %6948 = bitcast i8* %6947 to float*
  store float %6945, float* %6948, align 4
  %6949 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6950 = getelementptr inbounds i8, i8* %6949, i64 28
  %6951 = bitcast i8* %6950 to float*
  %6952 = load float, float* %6951, align 4
  %6953 = insertelement <4 x float> zeroinitializer, float %6952, i32 0
  %6954 = insertelement <4 x float> %6953, float 0.000000e+00, i32 1
  %6955 = insertelement <4 x float> %6954, float 0.000000e+00, i32 2
  %6956 = insertelement <4 x float> %6955, float 0.000000e+00, i32 3
  %6957 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6958 = getelementptr inbounds i8, i8* %6957, i64 28
  %6959 = bitcast i8* %6958 to float*
  %6960 = load float, float* %6959, align 4
  %6961 = insertelement <4 x float> zeroinitializer, float %6960, i32 0
  %6962 = insertelement <4 x float> %6961, float 0.000000e+00, i32 1
  %6963 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6964 = getelementptr inbounds i8, i8* %6963, i64 32
  %6965 = bitcast i8* %6964 to float*
  %6966 = load float, float* %6965, align 4
  %6967 = insertelement <4 x float> %6962, float %6966, i32 2
  %6968 = insertelement <4 x float> %6967, float 0.000000e+00, i32 3
  %6969 = getelementptr inbounds float, float* %1, i64 15
  %6970 = load float, float* %6969, align 4
  %6971 = insertelement <4 x float> zeroinitializer, float %6970, i32 0
  %6972 = insertelement <4 x float> %6971, float 0.000000e+00, i32 1
  %6973 = load float, float* %1, align 4
  %6974 = insertelement <4 x float> %6972, float %6973, i32 2
  %6975 = insertelement <4 x float> %6974, float 0.000000e+00, i32 3
  %6976 = call <4 x float> @llvm.fma.v4f32(<4 x float> %6968, <4 x float> %6975, <4 x float> %6956)
  %6977 = extractelement <4 x float> %6976, i32 0
  %6978 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6979 = getelementptr inbounds i8, i8* %6978, i64 28
  %6980 = bitcast i8* %6979 to float*
  store float %6977, float* %6980, align 4
  %6981 = extractelement <4 x float> %6976, i32 1
  %6982 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6983 = getelementptr inbounds i8, i8* %6982, i64 32
  %6984 = bitcast i8* %6983 to float*
  store float %6981, float* %6984, align 4
  %6985 = extractelement <4 x float> %6976, i32 2
  %6986 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6987 = getelementptr inbounds i8, i8* %6986, i64 32
  %6988 = bitcast i8* %6987 to float*
  store float %6985, float* %6988, align 4
  %6989 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6990 = getelementptr inbounds i8, i8* %6989, i64 32
  %6991 = bitcast i8* %6990 to float*
  %6992 = load float, float* %6991, align 4
  %6993 = insertelement <4 x float> zeroinitializer, float %6992, i32 0
  %6994 = insertelement <4 x float> %6993, float 0.000000e+00, i32 1
  %6995 = insertelement <4 x float> %6994, float 0.000000e+00, i32 2
  %6996 = insertelement <4 x float> %6995, float 0.000000e+00, i32 3
  %6997 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %6998 = getelementptr inbounds i8, i8* %6997, i64 36
  %6999 = bitcast i8* %6998 to float*
  %7000 = load float, float* %6999, align 4
  %7001 = insertelement <4 x float> zeroinitializer, float %7000, i32 0
  %7002 = insertelement <4 x float> %7001, float 0.000000e+00, i32 1
  %7003 = insertelement <4 x float> %7002, float 0.000000e+00, i32 2
  %7004 = insertelement <4 x float> %7003, float 0.000000e+00, i32 3
  %7005 = getelementptr inbounds float, float* %1, i64 4
  %7006 = load float, float* %7005, align 4
  %7007 = insertelement <4 x float> zeroinitializer, float %7006, i32 0
  %7008 = insertelement <4 x float> %7007, float 0.000000e+00, i32 1
  %7009 = insertelement <4 x float> %7008, float 0.000000e+00, i32 2
  %7010 = insertelement <4 x float> %7009, float 0.000000e+00, i32 3
  %7011 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7004, <4 x float> %7010, <4 x float> %6996)
  %7012 = extractelement <4 x float> %7011, i32 0
  %7013 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7014 = getelementptr inbounds i8, i8* %7013, i64 32
  %7015 = bitcast i8* %7014 to float*
  store float %7012, float* %7015, align 4
  %7016 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7017 = getelementptr inbounds i8, i8* %7016, i64 32
  %7018 = bitcast i8* %7017 to float*
  %7019 = load float, float* %7018, align 4
  %7020 = insertelement <4 x float> zeroinitializer, float %7019, i32 0
  %7021 = insertelement <4 x float> %7020, float 0.000000e+00, i32 1
  %7022 = insertelement <4 x float> %7021, float 0.000000e+00, i32 2
  %7023 = insertelement <4 x float> %7022, float 0.000000e+00, i32 3
  %7024 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7025 = getelementptr inbounds i8, i8* %7024, i64 40
  %7026 = bitcast i8* %7025 to float*
  %7027 = load float, float* %7026, align 4
  %7028 = insertelement <4 x float> zeroinitializer, float %7027, i32 0
  %7029 = insertelement <4 x float> %7028, float 0.000000e+00, i32 1
  %7030 = insertelement <4 x float> %7029, float 0.000000e+00, i32 2
  %7031 = insertelement <4 x float> %7030, float 0.000000e+00, i32 3
  %7032 = getelementptr inbounds float, float* %1, i64 8
  %7033 = load float, float* %7032, align 4
  %7034 = insertelement <4 x float> zeroinitializer, float %7033, i32 0
  %7035 = insertelement <4 x float> %7034, float 0.000000e+00, i32 1
  %7036 = insertelement <4 x float> %7035, float 0.000000e+00, i32 2
  %7037 = insertelement <4 x float> %7036, float 0.000000e+00, i32 3
  %7038 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7031, <4 x float> %7037, <4 x float> %7023)
  %7039 = extractelement <4 x float> %7038, i32 0
  %7040 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7041 = getelementptr inbounds i8, i8* %7040, i64 32
  %7042 = bitcast i8* %7041 to float*
  store float %7039, float* %7042, align 4
  %7043 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7044 = getelementptr inbounds i8, i8* %7043, i64 32
  %7045 = bitcast i8* %7044 to float*
  %7046 = load float, float* %7045, align 4
  %7047 = insertelement <4 x float> zeroinitializer, float %7046, i32 0
  %7048 = insertelement <4 x float> %7047, float 0.000000e+00, i32 1
  %7049 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7050 = getelementptr inbounds i8, i8* %7049, i64 36
  %7051 = bitcast i8* %7050 to float*
  %7052 = load float, float* %7051, align 4
  %7053 = insertelement <4 x float> %7048, float %7052, i32 2
  %7054 = insertelement <4 x float> %7053, float 0.000000e+00, i32 3
  %7055 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7056 = getelementptr inbounds i8, i8* %7055, i64 44
  %7057 = bitcast i8* %7056 to float*
  %7058 = load float, float* %7057, align 4
  %7059 = insertelement <4 x float> zeroinitializer, float %7058, i32 0
  %7060 = insertelement <4 x float> %7059, float 0.000000e+00, i32 1
  %7061 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7062 = getelementptr inbounds i8, i8* %7061, i64 32
  %7063 = bitcast i8* %7062 to float*
  %7064 = load float, float* %7063, align 4
  %7065 = insertelement <4 x float> %7060, float %7064, i32 2
  %7066 = insertelement <4 x float> %7065, float 0.000000e+00, i32 3
  %7067 = getelementptr inbounds float, float* %1, i64 12
  %7068 = load float, float* %7067, align 4
  %7069 = insertelement <4 x float> zeroinitializer, float %7068, i32 0
  %7070 = insertelement <4 x float> %7069, float 0.000000e+00, i32 1
  %7071 = getelementptr inbounds float, float* %1, i64 1
  %7072 = load float, float* %7071, align 4
  %7073 = insertelement <4 x float> %7070, float %7072, i32 2
  %7074 = insertelement <4 x float> %7073, float 0.000000e+00, i32 3
  %7075 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7066, <4 x float> %7074, <4 x float> %7054)
  %7076 = extractelement <4 x float> %7075, i32 0
  %7077 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7078 = getelementptr inbounds i8, i8* %7077, i64 32
  %7079 = bitcast i8* %7078 to float*
  store float %7076, float* %7079, align 4
  %7080 = extractelement <4 x float> %7075, i32 1
  %7081 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7082 = getelementptr inbounds i8, i8* %7081, i64 36
  %7083 = bitcast i8* %7082 to float*
  store float %7080, float* %7083, align 4
  %7084 = extractelement <4 x float> %7075, i32 2
  %7085 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7086 = getelementptr inbounds i8, i8* %7085, i64 36
  %7087 = bitcast i8* %7086 to float*
  store float %7084, float* %7087, align 4
  %7088 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7089 = getelementptr inbounds i8, i8* %7088, i64 36
  %7090 = bitcast i8* %7089 to float*
  %7091 = load float, float* %7090, align 4
  %7092 = insertelement <4 x float> zeroinitializer, float %7091, i32 0
  %7093 = insertelement <4 x float> %7092, float 0.000000e+00, i32 1
  %7094 = insertelement <4 x float> %7093, float 0.000000e+00, i32 2
  %7095 = insertelement <4 x float> %7094, float 0.000000e+00, i32 3
  %7096 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7097 = getelementptr inbounds i8, i8* %7096, i64 36
  %7098 = bitcast i8* %7097 to float*
  %7099 = load float, float* %7098, align 4
  %7100 = insertelement <4 x float> zeroinitializer, float %7099, i32 0
  %7101 = insertelement <4 x float> %7100, float 0.000000e+00, i32 1
  %7102 = insertelement <4 x float> %7101, float 0.000000e+00, i32 2
  %7103 = insertelement <4 x float> %7102, float 0.000000e+00, i32 3
  %7104 = getelementptr inbounds float, float* %1, i64 5
  %7105 = load float, float* %7104, align 4
  %7106 = insertelement <4 x float> zeroinitializer, float %7105, i32 0
  %7107 = insertelement <4 x float> %7106, float 0.000000e+00, i32 1
  %7108 = insertelement <4 x float> %7107, float 0.000000e+00, i32 2
  %7109 = insertelement <4 x float> %7108, float 0.000000e+00, i32 3
  %7110 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7103, <4 x float> %7109, <4 x float> %7095)
  %7111 = extractelement <4 x float> %7110, i32 0
  %7112 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7113 = getelementptr inbounds i8, i8* %7112, i64 36
  %7114 = bitcast i8* %7113 to float*
  store float %7111, float* %7114, align 4
  %7115 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7116 = getelementptr inbounds i8, i8* %7115, i64 36
  %7117 = bitcast i8* %7116 to float*
  %7118 = load float, float* %7117, align 4
  %7119 = insertelement <4 x float> zeroinitializer, float %7118, i32 0
  %7120 = insertelement <4 x float> %7119, float 0.000000e+00, i32 1
  %7121 = insertelement <4 x float> %7120, float 0.000000e+00, i32 2
  %7122 = insertelement <4 x float> %7121, float 0.000000e+00, i32 3
  %7123 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7124 = getelementptr inbounds i8, i8* %7123, i64 40
  %7125 = bitcast i8* %7124 to float*
  %7126 = load float, float* %7125, align 4
  %7127 = insertelement <4 x float> zeroinitializer, float %7126, i32 0
  %7128 = insertelement <4 x float> %7127, float 0.000000e+00, i32 1
  %7129 = insertelement <4 x float> %7128, float 0.000000e+00, i32 2
  %7130 = insertelement <4 x float> %7129, float 0.000000e+00, i32 3
  %7131 = getelementptr inbounds float, float* %1, i64 9
  %7132 = load float, float* %7131, align 4
  %7133 = insertelement <4 x float> zeroinitializer, float %7132, i32 0
  %7134 = insertelement <4 x float> %7133, float 0.000000e+00, i32 1
  %7135 = insertelement <4 x float> %7134, float 0.000000e+00, i32 2
  %7136 = insertelement <4 x float> %7135, float 0.000000e+00, i32 3
  %7137 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7130, <4 x float> %7136, <4 x float> %7122)
  %7138 = extractelement <4 x float> %7137, i32 0
  %7139 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7140 = getelementptr inbounds i8, i8* %7139, i64 36
  %7141 = bitcast i8* %7140 to float*
  store float %7138, float* %7141, align 4
  %7142 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7143 = getelementptr inbounds i8, i8* %7142, i64 36
  %7144 = bitcast i8* %7143 to float*
  %7145 = load float, float* %7144, align 4
  %7146 = insertelement <4 x float> zeroinitializer, float %7145, i32 0
  %7147 = insertelement <4 x float> %7146, float 0.000000e+00, i32 1
  %7148 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7149 = getelementptr inbounds i8, i8* %7148, i64 40
  %7150 = bitcast i8* %7149 to float*
  %7151 = load float, float* %7150, align 4
  %7152 = insertelement <4 x float> %7147, float %7151, i32 2
  %7153 = insertelement <4 x float> %7152, float 0.000000e+00, i32 3
  %7154 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7155 = getelementptr inbounds i8, i8* %7154, i64 44
  %7156 = bitcast i8* %7155 to float*
  %7157 = load float, float* %7156, align 4
  %7158 = insertelement <4 x float> zeroinitializer, float %7157, i32 0
  %7159 = insertelement <4 x float> %7158, float 0.000000e+00, i32 1
  %7160 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7161 = getelementptr inbounds i8, i8* %7160, i64 32
  %7162 = bitcast i8* %7161 to float*
  %7163 = load float, float* %7162, align 4
  %7164 = insertelement <4 x float> %7159, float %7163, i32 2
  %7165 = insertelement <4 x float> %7164, float 0.000000e+00, i32 3
  %7166 = getelementptr inbounds float, float* %1, i64 13
  %7167 = load float, float* %7166, align 4
  %7168 = insertelement <4 x float> zeroinitializer, float %7167, i32 0
  %7169 = insertelement <4 x float> %7168, float 0.000000e+00, i32 1
  %7170 = getelementptr inbounds float, float* %1, i64 2
  %7171 = load float, float* %7170, align 4
  %7172 = insertelement <4 x float> %7169, float %7171, i32 2
  %7173 = insertelement <4 x float> %7172, float 0.000000e+00, i32 3
  %7174 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7165, <4 x float> %7173, <4 x float> %7153)
  %7175 = extractelement <4 x float> %7174, i32 0
  %7176 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7177 = getelementptr inbounds i8, i8* %7176, i64 36
  %7178 = bitcast i8* %7177 to float*
  store float %7175, float* %7178, align 4
  %7179 = extractelement <4 x float> %7174, i32 1
  %7180 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7181 = getelementptr inbounds i8, i8* %7180, i64 40
  %7182 = bitcast i8* %7181 to float*
  store float %7179, float* %7182, align 4
  %7183 = extractelement <4 x float> %7174, i32 2
  %7184 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7185 = getelementptr inbounds i8, i8* %7184, i64 40
  %7186 = bitcast i8* %7185 to float*
  store float %7183, float* %7186, align 4
  %7187 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7188 = getelementptr inbounds i8, i8* %7187, i64 40
  %7189 = bitcast i8* %7188 to float*
  %7190 = load float, float* %7189, align 4
  %7191 = insertelement <4 x float> zeroinitializer, float %7190, i32 0
  %7192 = insertelement <4 x float> %7191, float 0.000000e+00, i32 1
  %7193 = insertelement <4 x float> %7192, float 0.000000e+00, i32 2
  %7194 = insertelement <4 x float> %7193, float 0.000000e+00, i32 3
  %7195 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7196 = getelementptr inbounds i8, i8* %7195, i64 36
  %7197 = bitcast i8* %7196 to float*
  %7198 = load float, float* %7197, align 4
  %7199 = insertelement <4 x float> zeroinitializer, float %7198, i32 0
  %7200 = insertelement <4 x float> %7199, float 0.000000e+00, i32 1
  %7201 = insertelement <4 x float> %7200, float 0.000000e+00, i32 2
  %7202 = insertelement <4 x float> %7201, float 0.000000e+00, i32 3
  %7203 = getelementptr inbounds float, float* %1, i64 6
  %7204 = load float, float* %7203, align 4
  %7205 = insertelement <4 x float> zeroinitializer, float %7204, i32 0
  %7206 = insertelement <4 x float> %7205, float 0.000000e+00, i32 1
  %7207 = insertelement <4 x float> %7206, float 0.000000e+00, i32 2
  %7208 = insertelement <4 x float> %7207, float 0.000000e+00, i32 3
  %7209 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7202, <4 x float> %7208, <4 x float> %7194)
  %7210 = extractelement <4 x float> %7209, i32 0
  %7211 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7212 = getelementptr inbounds i8, i8* %7211, i64 40
  %7213 = bitcast i8* %7212 to float*
  store float %7210, float* %7213, align 4
  %7214 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7215 = getelementptr inbounds i8, i8* %7214, i64 40
  %7216 = bitcast i8* %7215 to float*
  %7217 = load float, float* %7216, align 4
  %7218 = insertelement <4 x float> zeroinitializer, float %7217, i32 0
  %7219 = insertelement <4 x float> %7218, float 0.000000e+00, i32 1
  %7220 = insertelement <4 x float> %7219, float 0.000000e+00, i32 2
  %7221 = insertelement <4 x float> %7220, float 0.000000e+00, i32 3
  %7222 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7223 = getelementptr inbounds i8, i8* %7222, i64 40
  %7224 = bitcast i8* %7223 to float*
  %7225 = load float, float* %7224, align 4
  %7226 = insertelement <4 x float> zeroinitializer, float %7225, i32 0
  %7227 = insertelement <4 x float> %7226, float 0.000000e+00, i32 1
  %7228 = insertelement <4 x float> %7227, float 0.000000e+00, i32 2
  %7229 = insertelement <4 x float> %7228, float 0.000000e+00, i32 3
  %7230 = getelementptr inbounds float, float* %1, i64 10
  %7231 = load float, float* %7230, align 4
  %7232 = insertelement <4 x float> zeroinitializer, float %7231, i32 0
  %7233 = insertelement <4 x float> %7232, float 0.000000e+00, i32 1
  %7234 = insertelement <4 x float> %7233, float 0.000000e+00, i32 2
  %7235 = insertelement <4 x float> %7234, float 0.000000e+00, i32 3
  %7236 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7229, <4 x float> %7235, <4 x float> %7221)
  %7237 = extractelement <4 x float> %7236, i32 0
  %7238 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7239 = getelementptr inbounds i8, i8* %7238, i64 40
  %7240 = bitcast i8* %7239 to float*
  store float %7237, float* %7240, align 4
  %7241 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7242 = getelementptr inbounds i8, i8* %7241, i64 40
  %7243 = bitcast i8* %7242 to float*
  %7244 = load float, float* %7243, align 4
  %7245 = insertelement <4 x float> zeroinitializer, float %7244, i32 0
  %7246 = insertelement <4 x float> %7245, float 0.000000e+00, i32 1
  %7247 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7248 = getelementptr inbounds i8, i8* %7247, i64 44
  %7249 = bitcast i8* %7248 to float*
  %7250 = load float, float* %7249, align 4
  %7251 = insertelement <4 x float> %7246, float %7250, i32 2
  %7252 = insertelement <4 x float> %7251, float 0.000000e+00, i32 3
  %7253 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7254 = getelementptr inbounds i8, i8* %7253, i64 44
  %7255 = bitcast i8* %7254 to float*
  %7256 = load float, float* %7255, align 4
  %7257 = insertelement <4 x float> zeroinitializer, float %7256, i32 0
  %7258 = insertelement <4 x float> %7257, float 0.000000e+00, i32 1
  %7259 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7260 = getelementptr inbounds i8, i8* %7259, i64 32
  %7261 = bitcast i8* %7260 to float*
  %7262 = load float, float* %7261, align 4
  %7263 = insertelement <4 x float> %7258, float %7262, i32 2
  %7264 = insertelement <4 x float> %7263, float 0.000000e+00, i32 3
  %7265 = getelementptr inbounds float, float* %1, i64 14
  %7266 = load float, float* %7265, align 4
  %7267 = insertelement <4 x float> zeroinitializer, float %7266, i32 0
  %7268 = insertelement <4 x float> %7267, float 0.000000e+00, i32 1
  %7269 = getelementptr inbounds float, float* %1, i64 3
  %7270 = load float, float* %7269, align 4
  %7271 = insertelement <4 x float> %7268, float %7270, i32 2
  %7272 = insertelement <4 x float> %7271, float 0.000000e+00, i32 3
  %7273 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7264, <4 x float> %7272, <4 x float> %7252)
  %7274 = extractelement <4 x float> %7273, i32 0
  %7275 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7276 = getelementptr inbounds i8, i8* %7275, i64 40
  %7277 = bitcast i8* %7276 to float*
  store float %7274, float* %7277, align 4
  %7278 = extractelement <4 x float> %7273, i32 1
  %7279 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7280 = getelementptr inbounds i8, i8* %7279, i64 44
  %7281 = bitcast i8* %7280 to float*
  store float %7278, float* %7281, align 4
  %7282 = extractelement <4 x float> %7273, i32 2
  %7283 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7284 = getelementptr inbounds i8, i8* %7283, i64 44
  %7285 = bitcast i8* %7284 to float*
  store float %7282, float* %7285, align 4
  %7286 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7287 = getelementptr inbounds i8, i8* %7286, i64 44
  %7288 = bitcast i8* %7287 to float*
  %7289 = load float, float* %7288, align 4
  %7290 = insertelement <4 x float> zeroinitializer, float %7289, i32 0
  %7291 = insertelement <4 x float> %7290, float 0.000000e+00, i32 1
  %7292 = insertelement <4 x float> %7291, float 0.000000e+00, i32 2
  %7293 = insertelement <4 x float> %7292, float 0.000000e+00, i32 3
  %7294 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7295 = getelementptr inbounds i8, i8* %7294, i64 36
  %7296 = bitcast i8* %7295 to float*
  %7297 = load float, float* %7296, align 4
  %7298 = insertelement <4 x float> zeroinitializer, float %7297, i32 0
  %7299 = insertelement <4 x float> %7298, float 0.000000e+00, i32 1
  %7300 = insertelement <4 x float> %7299, float 0.000000e+00, i32 2
  %7301 = insertelement <4 x float> %7300, float 0.000000e+00, i32 3
  %7302 = getelementptr inbounds float, float* %1, i64 7
  %7303 = load float, float* %7302, align 4
  %7304 = insertelement <4 x float> zeroinitializer, float %7303, i32 0
  %7305 = insertelement <4 x float> %7304, float 0.000000e+00, i32 1
  %7306 = insertelement <4 x float> %7305, float 0.000000e+00, i32 2
  %7307 = insertelement <4 x float> %7306, float 0.000000e+00, i32 3
  %7308 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7301, <4 x float> %7307, <4 x float> %7293)
  %7309 = extractelement <4 x float> %7308, i32 0
  %7310 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7311 = getelementptr inbounds i8, i8* %7310, i64 44
  %7312 = bitcast i8* %7311 to float*
  store float %7309, float* %7312, align 4
  %7313 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7314 = getelementptr inbounds i8, i8* %7313, i64 44
  %7315 = bitcast i8* %7314 to float*
  %7316 = load float, float* %7315, align 4
  %7317 = insertelement <4 x float> zeroinitializer, float %7316, i32 0
  %7318 = insertelement <4 x float> %7317, float 0.000000e+00, i32 1
  %7319 = insertelement <4 x float> %7318, float 0.000000e+00, i32 2
  %7320 = insertelement <4 x float> %7319, float 0.000000e+00, i32 3
  %7321 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7322 = getelementptr inbounds i8, i8* %7321, i64 40
  %7323 = bitcast i8* %7322 to float*
  %7324 = load float, float* %7323, align 4
  %7325 = insertelement <4 x float> zeroinitializer, float %7324, i32 0
  %7326 = insertelement <4 x float> %7325, float 0.000000e+00, i32 1
  %7327 = insertelement <4 x float> %7326, float 0.000000e+00, i32 2
  %7328 = insertelement <4 x float> %7327, float 0.000000e+00, i32 3
  %7329 = getelementptr inbounds float, float* %1, i64 11
  %7330 = load float, float* %7329, align 4
  %7331 = insertelement <4 x float> zeroinitializer, float %7330, i32 0
  %7332 = insertelement <4 x float> %7331, float 0.000000e+00, i32 1
  %7333 = insertelement <4 x float> %7332, float 0.000000e+00, i32 2
  %7334 = insertelement <4 x float> %7333, float 0.000000e+00, i32 3
  %7335 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7328, <4 x float> %7334, <4 x float> %7320)
  %7336 = extractelement <4 x float> %7335, i32 0
  %7337 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7338 = getelementptr inbounds i8, i8* %7337, i64 44
  %7339 = bitcast i8* %7338 to float*
  store float %7336, float* %7339, align 4
  %7340 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7341 = getelementptr inbounds i8, i8* %7340, i64 44
  %7342 = bitcast i8* %7341 to float*
  %7343 = load float, float* %7342, align 4
  %7344 = insertelement <4 x float> zeroinitializer, float %7343, i32 0
  %7345 = insertelement <4 x float> %7344, float 0.000000e+00, i32 1
  %7346 = insertelement <4 x float> %7345, float 0.000000e+00, i32 2
  %7347 = insertelement <4 x float> %7346, float 0.000000e+00, i32 3
  %7348 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7349 = getelementptr inbounds i8, i8* %7348, i64 44
  %7350 = bitcast i8* %7349 to float*
  %7351 = load float, float* %7350, align 4
  %7352 = insertelement <4 x float> zeroinitializer, float %7351, i32 0
  %7353 = insertelement <4 x float> %7352, float 0.000000e+00, i32 1
  %7354 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7355 = getelementptr inbounds i8, i8* %7354, i64 48
  %7356 = bitcast i8* %7355 to float*
  %7357 = load float, float* %7356, align 4
  %7358 = insertelement <4 x float> %7353, float %7357, i32 2
  %7359 = insertelement <4 x float> %7358, float 0.000000e+00, i32 3
  %7360 = getelementptr inbounds float, float* %1, i64 15
  %7361 = load float, float* %7360, align 4
  %7362 = insertelement <4 x float> zeroinitializer, float %7361, i32 0
  %7363 = insertelement <4 x float> %7362, float 0.000000e+00, i32 1
  %7364 = load float, float* %1, align 4
  %7365 = insertelement <4 x float> %7363, float %7364, i32 2
  %7366 = insertelement <4 x float> %7365, float 0.000000e+00, i32 3
  %7367 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7359, <4 x float> %7366, <4 x float> %7347)
  %7368 = extractelement <4 x float> %7367, i32 0
  %7369 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7370 = getelementptr inbounds i8, i8* %7369, i64 44
  %7371 = bitcast i8* %7370 to float*
  store float %7368, float* %7371, align 4
  %7372 = extractelement <4 x float> %7367, i32 1
  %7373 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7374 = getelementptr inbounds i8, i8* %7373, i64 48
  %7375 = bitcast i8* %7374 to float*
  store float %7372, float* %7375, align 4
  %7376 = extractelement <4 x float> %7367, i32 2
  %7377 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7378 = getelementptr inbounds i8, i8* %7377, i64 48
  %7379 = bitcast i8* %7378 to float*
  store float %7376, float* %7379, align 4
  %7380 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7381 = getelementptr inbounds i8, i8* %7380, i64 48
  %7382 = bitcast i8* %7381 to float*
  %7383 = load float, float* %7382, align 4
  %7384 = insertelement <4 x float> zeroinitializer, float %7383, i32 0
  %7385 = insertelement <4 x float> %7384, float 0.000000e+00, i32 1
  %7386 = insertelement <4 x float> %7385, float 0.000000e+00, i32 2
  %7387 = insertelement <4 x float> %7386, float 0.000000e+00, i32 3
  %7388 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7389 = getelementptr inbounds i8, i8* %7388, i64 52
  %7390 = bitcast i8* %7389 to float*
  %7391 = load float, float* %7390, align 4
  %7392 = insertelement <4 x float> zeroinitializer, float %7391, i32 0
  %7393 = insertelement <4 x float> %7392, float 0.000000e+00, i32 1
  %7394 = insertelement <4 x float> %7393, float 0.000000e+00, i32 2
  %7395 = insertelement <4 x float> %7394, float 0.000000e+00, i32 3
  %7396 = getelementptr inbounds float, float* %1, i64 4
  %7397 = load float, float* %7396, align 4
  %7398 = insertelement <4 x float> zeroinitializer, float %7397, i32 0
  %7399 = insertelement <4 x float> %7398, float 0.000000e+00, i32 1
  %7400 = insertelement <4 x float> %7399, float 0.000000e+00, i32 2
  %7401 = insertelement <4 x float> %7400, float 0.000000e+00, i32 3
  %7402 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7395, <4 x float> %7401, <4 x float> %7387)
  %7403 = extractelement <4 x float> %7402, i32 0
  %7404 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7405 = getelementptr inbounds i8, i8* %7404, i64 48
  %7406 = bitcast i8* %7405 to float*
  store float %7403, float* %7406, align 4
  %7407 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7408 = getelementptr inbounds i8, i8* %7407, i64 48
  %7409 = bitcast i8* %7408 to float*
  %7410 = load float, float* %7409, align 4
  %7411 = insertelement <4 x float> zeroinitializer, float %7410, i32 0
  %7412 = insertelement <4 x float> %7411, float 0.000000e+00, i32 1
  %7413 = insertelement <4 x float> %7412, float 0.000000e+00, i32 2
  %7414 = insertelement <4 x float> %7413, float 0.000000e+00, i32 3
  %7415 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7416 = getelementptr inbounds i8, i8* %7415, i64 56
  %7417 = bitcast i8* %7416 to float*
  %7418 = load float, float* %7417, align 4
  %7419 = insertelement <4 x float> zeroinitializer, float %7418, i32 0
  %7420 = insertelement <4 x float> %7419, float 0.000000e+00, i32 1
  %7421 = insertelement <4 x float> %7420, float 0.000000e+00, i32 2
  %7422 = insertelement <4 x float> %7421, float 0.000000e+00, i32 3
  %7423 = getelementptr inbounds float, float* %1, i64 8
  %7424 = load float, float* %7423, align 4
  %7425 = insertelement <4 x float> zeroinitializer, float %7424, i32 0
  %7426 = insertelement <4 x float> %7425, float 0.000000e+00, i32 1
  %7427 = insertelement <4 x float> %7426, float 0.000000e+00, i32 2
  %7428 = insertelement <4 x float> %7427, float 0.000000e+00, i32 3
  %7429 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7422, <4 x float> %7428, <4 x float> %7414)
  %7430 = extractelement <4 x float> %7429, i32 0
  %7431 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7432 = getelementptr inbounds i8, i8* %7431, i64 48
  %7433 = bitcast i8* %7432 to float*
  store float %7430, float* %7433, align 4
  %7434 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7435 = getelementptr inbounds i8, i8* %7434, i64 48
  %7436 = bitcast i8* %7435 to float*
  %7437 = load float, float* %7436, align 4
  %7438 = insertelement <4 x float> zeroinitializer, float %7437, i32 0
  %7439 = insertelement <4 x float> %7438, float 0.000000e+00, i32 1
  %7440 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7441 = getelementptr inbounds i8, i8* %7440, i64 52
  %7442 = bitcast i8* %7441 to float*
  %7443 = load float, float* %7442, align 4
  %7444 = insertelement <4 x float> %7439, float %7443, i32 2
  %7445 = insertelement <4 x float> %7444, float 0.000000e+00, i32 3
  %7446 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7447 = getelementptr inbounds i8, i8* %7446, i64 60
  %7448 = bitcast i8* %7447 to float*
  %7449 = load float, float* %7448, align 4
  %7450 = insertelement <4 x float> zeroinitializer, float %7449, i32 0
  %7451 = insertelement <4 x float> %7450, float 0.000000e+00, i32 1
  %7452 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7453 = getelementptr inbounds i8, i8* %7452, i64 48
  %7454 = bitcast i8* %7453 to float*
  %7455 = load float, float* %7454, align 4
  %7456 = insertelement <4 x float> %7451, float %7455, i32 2
  %7457 = insertelement <4 x float> %7456, float 0.000000e+00, i32 3
  %7458 = getelementptr inbounds float, float* %1, i64 12
  %7459 = load float, float* %7458, align 4
  %7460 = insertelement <4 x float> zeroinitializer, float %7459, i32 0
  %7461 = insertelement <4 x float> %7460, float 0.000000e+00, i32 1
  %7462 = getelementptr inbounds float, float* %1, i64 1
  %7463 = load float, float* %7462, align 4
  %7464 = insertelement <4 x float> %7461, float %7463, i32 2
  %7465 = insertelement <4 x float> %7464, float 0.000000e+00, i32 3
  %7466 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7457, <4 x float> %7465, <4 x float> %7445)
  %7467 = extractelement <4 x float> %7466, i32 0
  %7468 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7469 = getelementptr inbounds i8, i8* %7468, i64 48
  %7470 = bitcast i8* %7469 to float*
  store float %7467, float* %7470, align 4
  %7471 = extractelement <4 x float> %7466, i32 1
  %7472 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7473 = getelementptr inbounds i8, i8* %7472, i64 52
  %7474 = bitcast i8* %7473 to float*
  store float %7471, float* %7474, align 4
  %7475 = extractelement <4 x float> %7466, i32 2
  %7476 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7477 = getelementptr inbounds i8, i8* %7476, i64 52
  %7478 = bitcast i8* %7477 to float*
  store float %7475, float* %7478, align 4
  %7479 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7480 = getelementptr inbounds i8, i8* %7479, i64 52
  %7481 = bitcast i8* %7480 to float*
  %7482 = load float, float* %7481, align 4
  %7483 = insertelement <4 x float> zeroinitializer, float %7482, i32 0
  %7484 = insertelement <4 x float> %7483, float 0.000000e+00, i32 1
  %7485 = insertelement <4 x float> %7484, float 0.000000e+00, i32 2
  %7486 = insertelement <4 x float> %7485, float 0.000000e+00, i32 3
  %7487 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7488 = getelementptr inbounds i8, i8* %7487, i64 52
  %7489 = bitcast i8* %7488 to float*
  %7490 = load float, float* %7489, align 4
  %7491 = insertelement <4 x float> zeroinitializer, float %7490, i32 0
  %7492 = insertelement <4 x float> %7491, float 0.000000e+00, i32 1
  %7493 = insertelement <4 x float> %7492, float 0.000000e+00, i32 2
  %7494 = insertelement <4 x float> %7493, float 0.000000e+00, i32 3
  %7495 = getelementptr inbounds float, float* %1, i64 5
  %7496 = load float, float* %7495, align 4
  %7497 = insertelement <4 x float> zeroinitializer, float %7496, i32 0
  %7498 = insertelement <4 x float> %7497, float 0.000000e+00, i32 1
  %7499 = insertelement <4 x float> %7498, float 0.000000e+00, i32 2
  %7500 = insertelement <4 x float> %7499, float 0.000000e+00, i32 3
  %7501 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7494, <4 x float> %7500, <4 x float> %7486)
  %7502 = extractelement <4 x float> %7501, i32 0
  %7503 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7504 = getelementptr inbounds i8, i8* %7503, i64 52
  %7505 = bitcast i8* %7504 to float*
  store float %7502, float* %7505, align 4
  %7506 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7507 = getelementptr inbounds i8, i8* %7506, i64 52
  %7508 = bitcast i8* %7507 to float*
  %7509 = load float, float* %7508, align 4
  %7510 = insertelement <4 x float> zeroinitializer, float %7509, i32 0
  %7511 = insertelement <4 x float> %7510, float 0.000000e+00, i32 1
  %7512 = insertelement <4 x float> %7511, float 0.000000e+00, i32 2
  %7513 = insertelement <4 x float> %7512, float 0.000000e+00, i32 3
  %7514 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7515 = getelementptr inbounds i8, i8* %7514, i64 56
  %7516 = bitcast i8* %7515 to float*
  %7517 = load float, float* %7516, align 4
  %7518 = insertelement <4 x float> zeroinitializer, float %7517, i32 0
  %7519 = insertelement <4 x float> %7518, float 0.000000e+00, i32 1
  %7520 = insertelement <4 x float> %7519, float 0.000000e+00, i32 2
  %7521 = insertelement <4 x float> %7520, float 0.000000e+00, i32 3
  %7522 = getelementptr inbounds float, float* %1, i64 9
  %7523 = load float, float* %7522, align 4
  %7524 = insertelement <4 x float> zeroinitializer, float %7523, i32 0
  %7525 = insertelement <4 x float> %7524, float 0.000000e+00, i32 1
  %7526 = insertelement <4 x float> %7525, float 0.000000e+00, i32 2
  %7527 = insertelement <4 x float> %7526, float 0.000000e+00, i32 3
  %7528 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7521, <4 x float> %7527, <4 x float> %7513)
  %7529 = extractelement <4 x float> %7528, i32 0
  %7530 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7531 = getelementptr inbounds i8, i8* %7530, i64 52
  %7532 = bitcast i8* %7531 to float*
  store float %7529, float* %7532, align 4
  %7533 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7534 = getelementptr inbounds i8, i8* %7533, i64 52
  %7535 = bitcast i8* %7534 to float*
  %7536 = load float, float* %7535, align 4
  %7537 = insertelement <4 x float> zeroinitializer, float %7536, i32 0
  %7538 = insertelement <4 x float> %7537, float 0.000000e+00, i32 1
  %7539 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7540 = getelementptr inbounds i8, i8* %7539, i64 56
  %7541 = bitcast i8* %7540 to float*
  %7542 = load float, float* %7541, align 4
  %7543 = insertelement <4 x float> %7538, float %7542, i32 2
  %7544 = insertelement <4 x float> %7543, float 0.000000e+00, i32 3
  %7545 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7546 = getelementptr inbounds i8, i8* %7545, i64 60
  %7547 = bitcast i8* %7546 to float*
  %7548 = load float, float* %7547, align 4
  %7549 = insertelement <4 x float> zeroinitializer, float %7548, i32 0
  %7550 = insertelement <4 x float> %7549, float 0.000000e+00, i32 1
  %7551 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7552 = getelementptr inbounds i8, i8* %7551, i64 48
  %7553 = bitcast i8* %7552 to float*
  %7554 = load float, float* %7553, align 4
  %7555 = insertelement <4 x float> %7550, float %7554, i32 2
  %7556 = insertelement <4 x float> %7555, float 0.000000e+00, i32 3
  %7557 = getelementptr inbounds float, float* %1, i64 13
  %7558 = load float, float* %7557, align 4
  %7559 = insertelement <4 x float> zeroinitializer, float %7558, i32 0
  %7560 = insertelement <4 x float> %7559, float 0.000000e+00, i32 1
  %7561 = getelementptr inbounds float, float* %1, i64 2
  %7562 = load float, float* %7561, align 4
  %7563 = insertelement <4 x float> %7560, float %7562, i32 2
  %7564 = insertelement <4 x float> %7563, float 0.000000e+00, i32 3
  %7565 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7556, <4 x float> %7564, <4 x float> %7544)
  %7566 = extractelement <4 x float> %7565, i32 0
  %7567 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7568 = getelementptr inbounds i8, i8* %7567, i64 52
  %7569 = bitcast i8* %7568 to float*
  store float %7566, float* %7569, align 4
  %7570 = extractelement <4 x float> %7565, i32 1
  %7571 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7572 = getelementptr inbounds i8, i8* %7571, i64 56
  %7573 = bitcast i8* %7572 to float*
  store float %7570, float* %7573, align 4
  %7574 = extractelement <4 x float> %7565, i32 2
  %7575 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7576 = getelementptr inbounds i8, i8* %7575, i64 56
  %7577 = bitcast i8* %7576 to float*
  store float %7574, float* %7577, align 4
  %7578 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7579 = getelementptr inbounds i8, i8* %7578, i64 56
  %7580 = bitcast i8* %7579 to float*
  %7581 = load float, float* %7580, align 4
  %7582 = insertelement <4 x float> zeroinitializer, float %7581, i32 0
  %7583 = insertelement <4 x float> %7582, float 0.000000e+00, i32 1
  %7584 = insertelement <4 x float> %7583, float 0.000000e+00, i32 2
  %7585 = insertelement <4 x float> %7584, float 0.000000e+00, i32 3
  %7586 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7587 = getelementptr inbounds i8, i8* %7586, i64 52
  %7588 = bitcast i8* %7587 to float*
  %7589 = load float, float* %7588, align 4
  %7590 = insertelement <4 x float> zeroinitializer, float %7589, i32 0
  %7591 = insertelement <4 x float> %7590, float 0.000000e+00, i32 1
  %7592 = insertelement <4 x float> %7591, float 0.000000e+00, i32 2
  %7593 = insertelement <4 x float> %7592, float 0.000000e+00, i32 3
  %7594 = getelementptr inbounds float, float* %1, i64 6
  %7595 = load float, float* %7594, align 4
  %7596 = insertelement <4 x float> zeroinitializer, float %7595, i32 0
  %7597 = insertelement <4 x float> %7596, float 0.000000e+00, i32 1
  %7598 = insertelement <4 x float> %7597, float 0.000000e+00, i32 2
  %7599 = insertelement <4 x float> %7598, float 0.000000e+00, i32 3
  %7600 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7593, <4 x float> %7599, <4 x float> %7585)
  %7601 = extractelement <4 x float> %7600, i32 0
  %7602 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7603 = getelementptr inbounds i8, i8* %7602, i64 56
  %7604 = bitcast i8* %7603 to float*
  store float %7601, float* %7604, align 4
  %7605 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7606 = getelementptr inbounds i8, i8* %7605, i64 56
  %7607 = bitcast i8* %7606 to float*
  %7608 = load float, float* %7607, align 4
  %7609 = insertelement <4 x float> zeroinitializer, float %7608, i32 0
  %7610 = insertelement <4 x float> %7609, float 0.000000e+00, i32 1
  %7611 = insertelement <4 x float> %7610, float 0.000000e+00, i32 2
  %7612 = insertelement <4 x float> %7611, float 0.000000e+00, i32 3
  %7613 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7614 = getelementptr inbounds i8, i8* %7613, i64 56
  %7615 = bitcast i8* %7614 to float*
  %7616 = load float, float* %7615, align 4
  %7617 = insertelement <4 x float> zeroinitializer, float %7616, i32 0
  %7618 = insertelement <4 x float> %7617, float 0.000000e+00, i32 1
  %7619 = insertelement <4 x float> %7618, float 0.000000e+00, i32 2
  %7620 = insertelement <4 x float> %7619, float 0.000000e+00, i32 3
  %7621 = getelementptr inbounds float, float* %1, i64 10
  %7622 = load float, float* %7621, align 4
  %7623 = insertelement <4 x float> zeroinitializer, float %7622, i32 0
  %7624 = insertelement <4 x float> %7623, float 0.000000e+00, i32 1
  %7625 = insertelement <4 x float> %7624, float 0.000000e+00, i32 2
  %7626 = insertelement <4 x float> %7625, float 0.000000e+00, i32 3
  %7627 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7620, <4 x float> %7626, <4 x float> %7612)
  %7628 = extractelement <4 x float> %7627, i32 0
  %7629 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7630 = getelementptr inbounds i8, i8* %7629, i64 56
  %7631 = bitcast i8* %7630 to float*
  store float %7628, float* %7631, align 4
  %7632 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7633 = getelementptr inbounds i8, i8* %7632, i64 56
  %7634 = bitcast i8* %7633 to float*
  %7635 = load float, float* %7634, align 4
  %7636 = insertelement <4 x float> zeroinitializer, float %7635, i32 0
  %7637 = insertelement <4 x float> %7636, float 0.000000e+00, i32 1
  %7638 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7639 = getelementptr inbounds i8, i8* %7638, i64 60
  %7640 = bitcast i8* %7639 to float*
  %7641 = load float, float* %7640, align 4
  %7642 = insertelement <4 x float> %7637, float %7641, i32 2
  %7643 = insertelement <4 x float> %7642, float 0.000000e+00, i32 3
  %7644 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7645 = getelementptr inbounds i8, i8* %7644, i64 60
  %7646 = bitcast i8* %7645 to float*
  %7647 = load float, float* %7646, align 4
  %7648 = insertelement <4 x float> zeroinitializer, float %7647, i32 0
  %7649 = insertelement <4 x float> %7648, float 0.000000e+00, i32 1
  %7650 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7651 = getelementptr inbounds i8, i8* %7650, i64 48
  %7652 = bitcast i8* %7651 to float*
  %7653 = load float, float* %7652, align 4
  %7654 = insertelement <4 x float> %7649, float %7653, i32 2
  %7655 = insertelement <4 x float> %7654, float 0.000000e+00, i32 3
  %7656 = getelementptr inbounds float, float* %1, i64 14
  %7657 = load float, float* %7656, align 4
  %7658 = insertelement <4 x float> zeroinitializer, float %7657, i32 0
  %7659 = insertelement <4 x float> %7658, float 0.000000e+00, i32 1
  %7660 = getelementptr inbounds float, float* %1, i64 3
  %7661 = load float, float* %7660, align 4
  %7662 = insertelement <4 x float> %7659, float %7661, i32 2
  %7663 = insertelement <4 x float> %7662, float 0.000000e+00, i32 3
  %7664 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7655, <4 x float> %7663, <4 x float> %7643)
  %7665 = extractelement <4 x float> %7664, i32 0
  %7666 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7667 = getelementptr inbounds i8, i8* %7666, i64 56
  %7668 = bitcast i8* %7667 to float*
  store float %7665, float* %7668, align 4
  %7669 = extractelement <4 x float> %7664, i32 1
  %7670 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7671 = getelementptr inbounds i8, i8* %7670, i64 60
  %7672 = bitcast i8* %7671 to float*
  store float %7669, float* %7672, align 4
  %7673 = extractelement <4 x float> %7664, i32 2
  %7674 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7675 = getelementptr inbounds i8, i8* %7674, i64 60
  %7676 = bitcast i8* %7675 to float*
  store float %7673, float* %7676, align 4
  %7677 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7678 = getelementptr inbounds i8, i8* %7677, i64 60
  %7679 = bitcast i8* %7678 to float*
  %7680 = load float, float* %7679, align 4
  %7681 = insertelement <4 x float> zeroinitializer, float %7680, i32 0
  %7682 = insertelement <4 x float> %7681, float 0.000000e+00, i32 1
  %7683 = insertelement <4 x float> %7682, float 0.000000e+00, i32 2
  %7684 = insertelement <4 x float> %7683, float 0.000000e+00, i32 3
  %7685 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7686 = getelementptr inbounds i8, i8* %7685, i64 52
  %7687 = bitcast i8* %7686 to float*
  %7688 = load float, float* %7687, align 4
  %7689 = insertelement <4 x float> zeroinitializer, float %7688, i32 0
  %7690 = insertelement <4 x float> %7689, float 0.000000e+00, i32 1
  %7691 = insertelement <4 x float> %7690, float 0.000000e+00, i32 2
  %7692 = insertelement <4 x float> %7691, float 0.000000e+00, i32 3
  %7693 = getelementptr inbounds float, float* %1, i64 7
  %7694 = load float, float* %7693, align 4
  %7695 = insertelement <4 x float> zeroinitializer, float %7694, i32 0
  %7696 = insertelement <4 x float> %7695, float 0.000000e+00, i32 1
  %7697 = insertelement <4 x float> %7696, float 0.000000e+00, i32 2
  %7698 = insertelement <4 x float> %7697, float 0.000000e+00, i32 3
  %7699 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7692, <4 x float> %7698, <4 x float> %7684)
  %7700 = extractelement <4 x float> %7699, i32 0
  %7701 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7702 = getelementptr inbounds i8, i8* %7701, i64 60
  %7703 = bitcast i8* %7702 to float*
  store float %7700, float* %7703, align 4
  %7704 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7705 = getelementptr inbounds i8, i8* %7704, i64 60
  %7706 = bitcast i8* %7705 to float*
  %7707 = load float, float* %7706, align 4
  %7708 = insertelement <4 x float> zeroinitializer, float %7707, i32 0
  %7709 = insertelement <4 x float> %7708, float 0.000000e+00, i32 1
  %7710 = insertelement <4 x float> %7709, float 0.000000e+00, i32 2
  %7711 = insertelement <4 x float> %7710, float 0.000000e+00, i32 3
  %7712 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7713 = getelementptr inbounds i8, i8* %7712, i64 56
  %7714 = bitcast i8* %7713 to float*
  %7715 = load float, float* %7714, align 4
  %7716 = insertelement <4 x float> zeroinitializer, float %7715, i32 0
  %7717 = insertelement <4 x float> %7716, float 0.000000e+00, i32 1
  %7718 = insertelement <4 x float> %7717, float 0.000000e+00, i32 2
  %7719 = insertelement <4 x float> %7718, float 0.000000e+00, i32 3
  %7720 = getelementptr inbounds float, float* %1, i64 11
  %7721 = load float, float* %7720, align 4
  %7722 = insertelement <4 x float> zeroinitializer, float %7721, i32 0
  %7723 = insertelement <4 x float> %7722, float 0.000000e+00, i32 1
  %7724 = insertelement <4 x float> %7723, float 0.000000e+00, i32 2
  %7725 = insertelement <4 x float> %7724, float 0.000000e+00, i32 3
  %7726 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7719, <4 x float> %7725, <4 x float> %7711)
  %7727 = extractelement <4 x float> %7726, i32 0
  %7728 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7729 = getelementptr inbounds i8, i8* %7728, i64 60
  %7730 = bitcast i8* %7729 to float*
  store float %7727, float* %7730, align 4
  %7731 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7732 = getelementptr inbounds i8, i8* %7731, i64 60
  %7733 = bitcast i8* %7732 to float*
  %7734 = load float, float* %7733, align 4
  %7735 = insertelement <4 x float> zeroinitializer, float %7734, i32 0
  %7736 = insertelement <4 x float> %7735, float 0.000000e+00, i32 1
  %7737 = insertelement <4 x float> %7736, float 0.000000e+00, i32 2
  %7738 = insertelement <4 x float> %7737, float 0.000000e+00, i32 3
  %7739 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7740 = getelementptr inbounds i8, i8* %7739, i64 60
  %7741 = bitcast i8* %7740 to float*
  %7742 = load float, float* %7741, align 4
  %7743 = insertelement <4 x float> zeroinitializer, float %7742, i32 0
  %7744 = insertelement <4 x float> %7743, float 0.000000e+00, i32 1
  %7745 = insertelement <4 x float> %7744, float 0.000000e+00, i32 2
  %7746 = insertelement <4 x float> %7745, float 0.000000e+00, i32 3
  %7747 = getelementptr inbounds float, float* %1, i64 15
  %7748 = load float, float* %7747, align 4
  %7749 = insertelement <4 x float> zeroinitializer, float %7748, i32 0
  %7750 = insertelement <4 x float> %7749, float 0.000000e+00, i32 1
  %7751 = insertelement <4 x float> %7750, float 0.000000e+00, i32 2
  %7752 = insertelement <4 x float> %7751, float 0.000000e+00, i32 3
  %7753 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7746, <4 x float> %7752, <4 x float> %7738)
  %7754 = extractelement <4 x float> %7753, i32 0
  %7755 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7756 = getelementptr inbounds i8, i8* %7755, i64 60
  %7757 = bitcast i8* %7756 to float*
  store float %7754, float* %7757, align 4
  %7758 = extractelement <4 x float> %7753, i32 1
  %7759 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7760 = bitcast i8* %7759 to float*
  store float %7758, float* %7760, align 4
  %7761 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7762 = bitcast i8* %7761 to float*
  %7763 = load float, float* %7762, align 4
  %7764 = insertelement <4 x float> zeroinitializer, float %7763, i32 0
  %7765 = insertelement <4 x float> %7764, float 0.000000e+00, i32 1
  %7766 = insertelement <4 x float> %7765, float 0.000000e+00, i32 2
  %7767 = insertelement <4 x float> %7766, float 0.000000e+00, i32 3
  %7768 = load float, float* %2, align 4
  %7769 = insertelement <4 x float> zeroinitializer, float %7768, i32 0
  %7770 = insertelement <4 x float> %7769, float 0.000000e+00, i32 1
  %7771 = insertelement <4 x float> %7770, float 0.000000e+00, i32 2
  %7772 = insertelement <4 x float> %7771, float 0.000000e+00, i32 3
  %7773 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7767, <4 x float> %7772, <4 x float> zeroinitializer)
  %7774 = extractelement <4 x float> %7773, i32 0
  %7775 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7776 = bitcast i8* %7775 to float*
  store float %7774, float* %7776, align 4
  %7777 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7778 = bitcast i8* %7777 to float*
  %7779 = load float, float* %7778, align 4
  %7780 = insertelement <4 x float> zeroinitializer, float %7779, i32 0
  %7781 = insertelement <4 x float> %7780, float 0.000000e+00, i32 1
  %7782 = insertelement <4 x float> %7781, float 0.000000e+00, i32 2
  %7783 = insertelement <4 x float> %7782, float 0.000000e+00, i32 3
  %7784 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7785 = getelementptr inbounds i8, i8* %7784, i64 4
  %7786 = bitcast i8* %7785 to float*
  %7787 = load float, float* %7786, align 4
  %7788 = insertelement <4 x float> zeroinitializer, float %7787, i32 0
  %7789 = insertelement <4 x float> %7788, float 0.000000e+00, i32 1
  %7790 = insertelement <4 x float> %7789, float 0.000000e+00, i32 2
  %7791 = insertelement <4 x float> %7790, float 0.000000e+00, i32 3
  %7792 = getelementptr inbounds float, float* %2, i64 4
  %7793 = load float, float* %7792, align 4
  %7794 = insertelement <4 x float> zeroinitializer, float %7793, i32 0
  %7795 = insertelement <4 x float> %7794, float 0.000000e+00, i32 1
  %7796 = insertelement <4 x float> %7795, float 0.000000e+00, i32 2
  %7797 = insertelement <4 x float> %7796, float 0.000000e+00, i32 3
  %7798 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7791, <4 x float> %7797, <4 x float> %7783)
  %7799 = extractelement <4 x float> %7798, i32 0
  %7800 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7801 = bitcast i8* %7800 to float*
  store float %7799, float* %7801, align 4
  %7802 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7803 = bitcast i8* %7802 to float*
  %7804 = load float, float* %7803, align 4
  %7805 = insertelement <4 x float> zeroinitializer, float %7804, i32 0
  %7806 = insertelement <4 x float> %7805, float 0.000000e+00, i32 1
  %7807 = insertelement <4 x float> %7806, float 0.000000e+00, i32 2
  %7808 = insertelement <4 x float> %7807, float 0.000000e+00, i32 3
  %7809 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7810 = getelementptr inbounds i8, i8* %7809, i64 8
  %7811 = bitcast i8* %7810 to float*
  %7812 = load float, float* %7811, align 4
  %7813 = insertelement <4 x float> zeroinitializer, float %7812, i32 0
  %7814 = insertelement <4 x float> %7813, float 0.000000e+00, i32 1
  %7815 = insertelement <4 x float> %7814, float 0.000000e+00, i32 2
  %7816 = insertelement <4 x float> %7815, float 0.000000e+00, i32 3
  %7817 = getelementptr inbounds float, float* %2, i64 8
  %7818 = load float, float* %7817, align 4
  %7819 = insertelement <4 x float> zeroinitializer, float %7818, i32 0
  %7820 = insertelement <4 x float> %7819, float 0.000000e+00, i32 1
  %7821 = insertelement <4 x float> %7820, float 0.000000e+00, i32 2
  %7822 = insertelement <4 x float> %7821, float 0.000000e+00, i32 3
  %7823 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7816, <4 x float> %7822, <4 x float> %7808)
  %7824 = extractelement <4 x float> %7823, i32 0
  %7825 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7826 = bitcast i8* %7825 to float*
  store float %7824, float* %7826, align 4
  %7827 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7828 = bitcast i8* %7827 to float*
  %7829 = load float, float* %7828, align 4
  %7830 = insertelement <4 x float> zeroinitializer, float %7829, i32 0
  %7831 = insertelement <4 x float> %7830, float 0.000000e+00, i32 1
  %7832 = insertelement <4 x float> %7831, float 0.000000e+00, i32 2
  %7833 = insertelement <4 x float> %7832, float 0.000000e+00, i32 3
  %7834 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7835 = getelementptr inbounds i8, i8* %7834, i64 12
  %7836 = bitcast i8* %7835 to float*
  %7837 = load float, float* %7836, align 4
  %7838 = insertelement <4 x float> zeroinitializer, float %7837, i32 0
  %7839 = insertelement <4 x float> %7838, float 0.000000e+00, i32 1
  %7840 = insertelement <4 x float> %7839, float 0.000000e+00, i32 2
  %7841 = insertelement <4 x float> %7840, float 0.000000e+00, i32 3
  %7842 = getelementptr inbounds float, float* %2, i64 12
  %7843 = load float, float* %7842, align 4
  %7844 = insertelement <4 x float> zeroinitializer, float %7843, i32 0
  %7845 = insertelement <4 x float> %7844, float 0.000000e+00, i32 1
  %7846 = insertelement <4 x float> %7845, float 0.000000e+00, i32 2
  %7847 = insertelement <4 x float> %7846, float 0.000000e+00, i32 3
  %7848 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7841, <4 x float> %7847, <4 x float> %7833)
  %7849 = extractelement <4 x float> %7848, i32 0
  %7850 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7851 = bitcast i8* %7850 to float*
  store float %7849, float* %7851, align 4
  %7852 = extractelement <4 x float> %7848, i32 1
  %7853 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7854 = getelementptr inbounds i8, i8* %7853, i64 4
  %7855 = bitcast i8* %7854 to float*
  store float %7852, float* %7855, align 4
  %7856 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7857 = getelementptr inbounds i8, i8* %7856, i64 4
  %7858 = bitcast i8* %7857 to float*
  %7859 = load float, float* %7858, align 4
  %7860 = insertelement <4 x float> zeroinitializer, float %7859, i32 0
  %7861 = insertelement <4 x float> %7860, float 0.000000e+00, i32 1
  %7862 = insertelement <4 x float> %7861, float 0.000000e+00, i32 2
  %7863 = insertelement <4 x float> %7862, float 0.000000e+00, i32 3
  %7864 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7865 = bitcast i8* %7864 to float*
  %7866 = load float, float* %7865, align 4
  %7867 = insertelement <4 x float> zeroinitializer, float %7866, i32 0
  %7868 = insertelement <4 x float> %7867, float 0.000000e+00, i32 1
  %7869 = insertelement <4 x float> %7868, float 0.000000e+00, i32 2
  %7870 = insertelement <4 x float> %7869, float 0.000000e+00, i32 3
  %7871 = getelementptr inbounds float, float* %2, i64 1
  %7872 = load float, float* %7871, align 4
  %7873 = insertelement <4 x float> zeroinitializer, float %7872, i32 0
  %7874 = insertelement <4 x float> %7873, float 0.000000e+00, i32 1
  %7875 = insertelement <4 x float> %7874, float 0.000000e+00, i32 2
  %7876 = insertelement <4 x float> %7875, float 0.000000e+00, i32 3
  %7877 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7870, <4 x float> %7876, <4 x float> %7863)
  %7878 = extractelement <4 x float> %7877, i32 0
  %7879 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7880 = getelementptr inbounds i8, i8* %7879, i64 4
  %7881 = bitcast i8* %7880 to float*
  store float %7878, float* %7881, align 4
  %7882 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7883 = getelementptr inbounds i8, i8* %7882, i64 4
  %7884 = bitcast i8* %7883 to float*
  %7885 = load float, float* %7884, align 4
  %7886 = insertelement <4 x float> zeroinitializer, float %7885, i32 0
  %7887 = insertelement <4 x float> %7886, float 0.000000e+00, i32 1
  %7888 = insertelement <4 x float> %7887, float 0.000000e+00, i32 2
  %7889 = insertelement <4 x float> %7888, float 0.000000e+00, i32 3
  %7890 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7891 = getelementptr inbounds i8, i8* %7890, i64 4
  %7892 = bitcast i8* %7891 to float*
  %7893 = load float, float* %7892, align 4
  %7894 = insertelement <4 x float> zeroinitializer, float %7893, i32 0
  %7895 = insertelement <4 x float> %7894, float 0.000000e+00, i32 1
  %7896 = insertelement <4 x float> %7895, float 0.000000e+00, i32 2
  %7897 = insertelement <4 x float> %7896, float 0.000000e+00, i32 3
  %7898 = getelementptr inbounds float, float* %2, i64 5
  %7899 = load float, float* %7898, align 4
  %7900 = insertelement <4 x float> zeroinitializer, float %7899, i32 0
  %7901 = insertelement <4 x float> %7900, float 0.000000e+00, i32 1
  %7902 = insertelement <4 x float> %7901, float 0.000000e+00, i32 2
  %7903 = insertelement <4 x float> %7902, float 0.000000e+00, i32 3
  %7904 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7897, <4 x float> %7903, <4 x float> %7889)
  %7905 = extractelement <4 x float> %7904, i32 0
  %7906 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7907 = getelementptr inbounds i8, i8* %7906, i64 4
  %7908 = bitcast i8* %7907 to float*
  store float %7905, float* %7908, align 4
  %7909 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7910 = getelementptr inbounds i8, i8* %7909, i64 4
  %7911 = bitcast i8* %7910 to float*
  %7912 = load float, float* %7911, align 4
  %7913 = insertelement <4 x float> zeroinitializer, float %7912, i32 0
  %7914 = insertelement <4 x float> %7913, float 0.000000e+00, i32 1
  %7915 = insertelement <4 x float> %7914, float 0.000000e+00, i32 2
  %7916 = insertelement <4 x float> %7915, float 0.000000e+00, i32 3
  %7917 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7918 = getelementptr inbounds i8, i8* %7917, i64 8
  %7919 = bitcast i8* %7918 to float*
  %7920 = load float, float* %7919, align 4
  %7921 = insertelement <4 x float> zeroinitializer, float %7920, i32 0
  %7922 = insertelement <4 x float> %7921, float 0.000000e+00, i32 1
  %7923 = insertelement <4 x float> %7922, float 0.000000e+00, i32 2
  %7924 = insertelement <4 x float> %7923, float 0.000000e+00, i32 3
  %7925 = getelementptr inbounds float, float* %2, i64 9
  %7926 = load float, float* %7925, align 4
  %7927 = insertelement <4 x float> zeroinitializer, float %7926, i32 0
  %7928 = insertelement <4 x float> %7927, float 0.000000e+00, i32 1
  %7929 = insertelement <4 x float> %7928, float 0.000000e+00, i32 2
  %7930 = insertelement <4 x float> %7929, float 0.000000e+00, i32 3
  %7931 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7924, <4 x float> %7930, <4 x float> %7916)
  %7932 = extractelement <4 x float> %7931, i32 0
  %7933 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7934 = getelementptr inbounds i8, i8* %7933, i64 4
  %7935 = bitcast i8* %7934 to float*
  store float %7932, float* %7935, align 4
  %7936 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7937 = getelementptr inbounds i8, i8* %7936, i64 4
  %7938 = bitcast i8* %7937 to float*
  %7939 = load float, float* %7938, align 4
  %7940 = insertelement <4 x float> zeroinitializer, float %7939, i32 0
  %7941 = insertelement <4 x float> %7940, float 0.000000e+00, i32 1
  %7942 = insertelement <4 x float> %7941, float 0.000000e+00, i32 2
  %7943 = insertelement <4 x float> %7942, float 0.000000e+00, i32 3
  %7944 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7945 = getelementptr inbounds i8, i8* %7944, i64 12
  %7946 = bitcast i8* %7945 to float*
  %7947 = load float, float* %7946, align 4
  %7948 = insertelement <4 x float> zeroinitializer, float %7947, i32 0
  %7949 = insertelement <4 x float> %7948, float 0.000000e+00, i32 1
  %7950 = insertelement <4 x float> %7949, float 0.000000e+00, i32 2
  %7951 = insertelement <4 x float> %7950, float 0.000000e+00, i32 3
  %7952 = getelementptr inbounds float, float* %2, i64 13
  %7953 = load float, float* %7952, align 4
  %7954 = insertelement <4 x float> zeroinitializer, float %7953, i32 0
  %7955 = insertelement <4 x float> %7954, float 0.000000e+00, i32 1
  %7956 = insertelement <4 x float> %7955, float 0.000000e+00, i32 2
  %7957 = insertelement <4 x float> %7956, float 0.000000e+00, i32 3
  %7958 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7951, <4 x float> %7957, <4 x float> %7943)
  %7959 = extractelement <4 x float> %7958, i32 0
  %7960 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7961 = getelementptr inbounds i8, i8* %7960, i64 4
  %7962 = bitcast i8* %7961 to float*
  store float %7959, float* %7962, align 4
  %7963 = extractelement <4 x float> %7958, i32 1
  %7964 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7965 = getelementptr inbounds i8, i8* %7964, i64 8
  %7966 = bitcast i8* %7965 to float*
  store float %7963, float* %7966, align 4
  %7967 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7968 = getelementptr inbounds i8, i8* %7967, i64 8
  %7969 = bitcast i8* %7968 to float*
  %7970 = load float, float* %7969, align 4
  %7971 = insertelement <4 x float> zeroinitializer, float %7970, i32 0
  %7972 = insertelement <4 x float> %7971, float 0.000000e+00, i32 1
  %7973 = insertelement <4 x float> %7972, float 0.000000e+00, i32 2
  %7974 = insertelement <4 x float> %7973, float 0.000000e+00, i32 3
  %7975 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7976 = bitcast i8* %7975 to float*
  %7977 = load float, float* %7976, align 4
  %7978 = insertelement <4 x float> zeroinitializer, float %7977, i32 0
  %7979 = insertelement <4 x float> %7978, float 0.000000e+00, i32 1
  %7980 = insertelement <4 x float> %7979, float 0.000000e+00, i32 2
  %7981 = insertelement <4 x float> %7980, float 0.000000e+00, i32 3
  %7982 = getelementptr inbounds float, float* %2, i64 2
  %7983 = load float, float* %7982, align 4
  %7984 = insertelement <4 x float> zeroinitializer, float %7983, i32 0
  %7985 = insertelement <4 x float> %7984, float 0.000000e+00, i32 1
  %7986 = insertelement <4 x float> %7985, float 0.000000e+00, i32 2
  %7987 = insertelement <4 x float> %7986, float 0.000000e+00, i32 3
  %7988 = call <4 x float> @llvm.fma.v4f32(<4 x float> %7981, <4 x float> %7987, <4 x float> %7974)
  %7989 = extractelement <4 x float> %7988, i32 0
  %7990 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7991 = getelementptr inbounds i8, i8* %7990, i64 8
  %7992 = bitcast i8* %7991 to float*
  store float %7989, float* %7992, align 4
  %7993 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %7994 = getelementptr inbounds i8, i8* %7993, i64 8
  %7995 = bitcast i8* %7994 to float*
  %7996 = load float, float* %7995, align 4
  %7997 = insertelement <4 x float> zeroinitializer, float %7996, i32 0
  %7998 = insertelement <4 x float> %7997, float 0.000000e+00, i32 1
  %7999 = insertelement <4 x float> %7998, float 0.000000e+00, i32 2
  %8000 = insertelement <4 x float> %7999, float 0.000000e+00, i32 3
  %8001 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8002 = getelementptr inbounds i8, i8* %8001, i64 4
  %8003 = bitcast i8* %8002 to float*
  %8004 = load float, float* %8003, align 4
  %8005 = insertelement <4 x float> zeroinitializer, float %8004, i32 0
  %8006 = insertelement <4 x float> %8005, float 0.000000e+00, i32 1
  %8007 = insertelement <4 x float> %8006, float 0.000000e+00, i32 2
  %8008 = insertelement <4 x float> %8007, float 0.000000e+00, i32 3
  %8009 = getelementptr inbounds float, float* %2, i64 6
  %8010 = load float, float* %8009, align 4
  %8011 = insertelement <4 x float> zeroinitializer, float %8010, i32 0
  %8012 = insertelement <4 x float> %8011, float 0.000000e+00, i32 1
  %8013 = insertelement <4 x float> %8012, float 0.000000e+00, i32 2
  %8014 = insertelement <4 x float> %8013, float 0.000000e+00, i32 3
  %8015 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8008, <4 x float> %8014, <4 x float> %8000)
  %8016 = extractelement <4 x float> %8015, i32 0
  %8017 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8018 = getelementptr inbounds i8, i8* %8017, i64 8
  %8019 = bitcast i8* %8018 to float*
  store float %8016, float* %8019, align 4
  %8020 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8021 = getelementptr inbounds i8, i8* %8020, i64 8
  %8022 = bitcast i8* %8021 to float*
  %8023 = load float, float* %8022, align 4
  %8024 = insertelement <4 x float> zeroinitializer, float %8023, i32 0
  %8025 = insertelement <4 x float> %8024, float 0.000000e+00, i32 1
  %8026 = insertelement <4 x float> %8025, float 0.000000e+00, i32 2
  %8027 = insertelement <4 x float> %8026, float 0.000000e+00, i32 3
  %8028 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8029 = getelementptr inbounds i8, i8* %8028, i64 8
  %8030 = bitcast i8* %8029 to float*
  %8031 = load float, float* %8030, align 4
  %8032 = insertelement <4 x float> zeroinitializer, float %8031, i32 0
  %8033 = insertelement <4 x float> %8032, float 0.000000e+00, i32 1
  %8034 = insertelement <4 x float> %8033, float 0.000000e+00, i32 2
  %8035 = insertelement <4 x float> %8034, float 0.000000e+00, i32 3
  %8036 = getelementptr inbounds float, float* %2, i64 10
  %8037 = load float, float* %8036, align 4
  %8038 = insertelement <4 x float> zeroinitializer, float %8037, i32 0
  %8039 = insertelement <4 x float> %8038, float 0.000000e+00, i32 1
  %8040 = insertelement <4 x float> %8039, float 0.000000e+00, i32 2
  %8041 = insertelement <4 x float> %8040, float 0.000000e+00, i32 3
  %8042 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8035, <4 x float> %8041, <4 x float> %8027)
  %8043 = extractelement <4 x float> %8042, i32 0
  %8044 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8045 = getelementptr inbounds i8, i8* %8044, i64 8
  %8046 = bitcast i8* %8045 to float*
  store float %8043, float* %8046, align 4
  %8047 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8048 = getelementptr inbounds i8, i8* %8047, i64 8
  %8049 = bitcast i8* %8048 to float*
  %8050 = load float, float* %8049, align 4
  %8051 = insertelement <4 x float> zeroinitializer, float %8050, i32 0
  %8052 = insertelement <4 x float> %8051, float 0.000000e+00, i32 1
  %8053 = insertelement <4 x float> %8052, float 0.000000e+00, i32 2
  %8054 = insertelement <4 x float> %8053, float 0.000000e+00, i32 3
  %8055 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8056 = getelementptr inbounds i8, i8* %8055, i64 12
  %8057 = bitcast i8* %8056 to float*
  %8058 = load float, float* %8057, align 4
  %8059 = insertelement <4 x float> zeroinitializer, float %8058, i32 0
  %8060 = insertelement <4 x float> %8059, float 0.000000e+00, i32 1
  %8061 = insertelement <4 x float> %8060, float 0.000000e+00, i32 2
  %8062 = insertelement <4 x float> %8061, float 0.000000e+00, i32 3
  %8063 = getelementptr inbounds float, float* %2, i64 14
  %8064 = load float, float* %8063, align 4
  %8065 = insertelement <4 x float> zeroinitializer, float %8064, i32 0
  %8066 = insertelement <4 x float> %8065, float 0.000000e+00, i32 1
  %8067 = insertelement <4 x float> %8066, float 0.000000e+00, i32 2
  %8068 = insertelement <4 x float> %8067, float 0.000000e+00, i32 3
  %8069 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8062, <4 x float> %8068, <4 x float> %8054)
  %8070 = extractelement <4 x float> %8069, i32 0
  %8071 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8072 = getelementptr inbounds i8, i8* %8071, i64 8
  %8073 = bitcast i8* %8072 to float*
  store float %8070, float* %8073, align 4
  %8074 = extractelement <4 x float> %8069, i32 1
  %8075 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8076 = getelementptr inbounds i8, i8* %8075, i64 12
  %8077 = bitcast i8* %8076 to float*
  store float %8074, float* %8077, align 4
  %8078 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8079 = getelementptr inbounds i8, i8* %8078, i64 12
  %8080 = bitcast i8* %8079 to float*
  %8081 = load float, float* %8080, align 4
  %8082 = insertelement <4 x float> zeroinitializer, float %8081, i32 0
  %8083 = insertelement <4 x float> %8082, float 0.000000e+00, i32 1
  %8084 = insertelement <4 x float> %8083, float 0.000000e+00, i32 2
  %8085 = insertelement <4 x float> %8084, float 0.000000e+00, i32 3
  %8086 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8087 = bitcast i8* %8086 to float*
  %8088 = load float, float* %8087, align 4
  %8089 = insertelement <4 x float> zeroinitializer, float %8088, i32 0
  %8090 = insertelement <4 x float> %8089, float 0.000000e+00, i32 1
  %8091 = insertelement <4 x float> %8090, float 0.000000e+00, i32 2
  %8092 = insertelement <4 x float> %8091, float 0.000000e+00, i32 3
  %8093 = getelementptr inbounds float, float* %2, i64 3
  %8094 = load float, float* %8093, align 4
  %8095 = insertelement <4 x float> zeroinitializer, float %8094, i32 0
  %8096 = insertelement <4 x float> %8095, float 0.000000e+00, i32 1
  %8097 = insertelement <4 x float> %8096, float 0.000000e+00, i32 2
  %8098 = insertelement <4 x float> %8097, float 0.000000e+00, i32 3
  %8099 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8092, <4 x float> %8098, <4 x float> %8085)
  %8100 = extractelement <4 x float> %8099, i32 0
  %8101 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8102 = getelementptr inbounds i8, i8* %8101, i64 12
  %8103 = bitcast i8* %8102 to float*
  store float %8100, float* %8103, align 4
  %8104 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8105 = getelementptr inbounds i8, i8* %8104, i64 12
  %8106 = bitcast i8* %8105 to float*
  %8107 = load float, float* %8106, align 4
  %8108 = insertelement <4 x float> zeroinitializer, float %8107, i32 0
  %8109 = insertelement <4 x float> %8108, float 0.000000e+00, i32 1
  %8110 = insertelement <4 x float> %8109, float 0.000000e+00, i32 2
  %8111 = insertelement <4 x float> %8110, float 0.000000e+00, i32 3
  %8112 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8113 = getelementptr inbounds i8, i8* %8112, i64 4
  %8114 = bitcast i8* %8113 to float*
  %8115 = load float, float* %8114, align 4
  %8116 = insertelement <4 x float> zeroinitializer, float %8115, i32 0
  %8117 = insertelement <4 x float> %8116, float 0.000000e+00, i32 1
  %8118 = insertelement <4 x float> %8117, float 0.000000e+00, i32 2
  %8119 = insertelement <4 x float> %8118, float 0.000000e+00, i32 3
  %8120 = getelementptr inbounds float, float* %2, i64 7
  %8121 = load float, float* %8120, align 4
  %8122 = insertelement <4 x float> zeroinitializer, float %8121, i32 0
  %8123 = insertelement <4 x float> %8122, float 0.000000e+00, i32 1
  %8124 = insertelement <4 x float> %8123, float 0.000000e+00, i32 2
  %8125 = insertelement <4 x float> %8124, float 0.000000e+00, i32 3
  %8126 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8119, <4 x float> %8125, <4 x float> %8111)
  %8127 = extractelement <4 x float> %8126, i32 0
  %8128 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8129 = getelementptr inbounds i8, i8* %8128, i64 12
  %8130 = bitcast i8* %8129 to float*
  store float %8127, float* %8130, align 4
  %8131 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8132 = getelementptr inbounds i8, i8* %8131, i64 12
  %8133 = bitcast i8* %8132 to float*
  %8134 = load float, float* %8133, align 4
  %8135 = insertelement <4 x float> zeroinitializer, float %8134, i32 0
  %8136 = insertelement <4 x float> %8135, float 0.000000e+00, i32 1
  %8137 = insertelement <4 x float> %8136, float 0.000000e+00, i32 2
  %8138 = insertelement <4 x float> %8137, float 0.000000e+00, i32 3
  %8139 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8140 = getelementptr inbounds i8, i8* %8139, i64 8
  %8141 = bitcast i8* %8140 to float*
  %8142 = load float, float* %8141, align 4
  %8143 = insertelement <4 x float> zeroinitializer, float %8142, i32 0
  %8144 = insertelement <4 x float> %8143, float 0.000000e+00, i32 1
  %8145 = insertelement <4 x float> %8144, float 0.000000e+00, i32 2
  %8146 = insertelement <4 x float> %8145, float 0.000000e+00, i32 3
  %8147 = getelementptr inbounds float, float* %2, i64 11
  %8148 = load float, float* %8147, align 4
  %8149 = insertelement <4 x float> zeroinitializer, float %8148, i32 0
  %8150 = insertelement <4 x float> %8149, float 0.000000e+00, i32 1
  %8151 = insertelement <4 x float> %8150, float 0.000000e+00, i32 2
  %8152 = insertelement <4 x float> %8151, float 0.000000e+00, i32 3
  %8153 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8146, <4 x float> %8152, <4 x float> %8138)
  %8154 = extractelement <4 x float> %8153, i32 0
  %8155 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8156 = getelementptr inbounds i8, i8* %8155, i64 12
  %8157 = bitcast i8* %8156 to float*
  store float %8154, float* %8157, align 4
  %8158 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8159 = getelementptr inbounds i8, i8* %8158, i64 12
  %8160 = bitcast i8* %8159 to float*
  %8161 = load float, float* %8160, align 4
  %8162 = insertelement <4 x float> zeroinitializer, float %8161, i32 0
  %8163 = insertelement <4 x float> %8162, float 0.000000e+00, i32 1
  %8164 = insertelement <4 x float> %8163, float 0.000000e+00, i32 2
  %8165 = insertelement <4 x float> %8164, float 0.000000e+00, i32 3
  %8166 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8167 = getelementptr inbounds i8, i8* %8166, i64 12
  %8168 = bitcast i8* %8167 to float*
  %8169 = load float, float* %8168, align 4
  %8170 = insertelement <4 x float> zeroinitializer, float %8169, i32 0
  %8171 = insertelement <4 x float> %8170, float 0.000000e+00, i32 1
  %8172 = insertelement <4 x float> %8171, float 0.000000e+00, i32 2
  %8173 = insertelement <4 x float> %8172, float 0.000000e+00, i32 3
  %8174 = getelementptr inbounds float, float* %2, i64 15
  %8175 = load float, float* %8174, align 4
  %8176 = insertelement <4 x float> zeroinitializer, float %8175, i32 0
  %8177 = insertelement <4 x float> %8176, float 0.000000e+00, i32 1
  %8178 = insertelement <4 x float> %8177, float 0.000000e+00, i32 2
  %8179 = insertelement <4 x float> %8178, float 0.000000e+00, i32 3
  %8180 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8173, <4 x float> %8179, <4 x float> %8165)
  %8181 = extractelement <4 x float> %8180, i32 0
  %8182 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8183 = getelementptr inbounds i8, i8* %8182, i64 12
  %8184 = bitcast i8* %8183 to float*
  store float %8181, float* %8184, align 4
  %8185 = extractelement <4 x float> %8180, i32 1
  %8186 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8187 = getelementptr inbounds i8, i8* %8186, i64 16
  %8188 = bitcast i8* %8187 to float*
  store float %8185, float* %8188, align 4
  %8189 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8190 = getelementptr inbounds i8, i8* %8189, i64 16
  %8191 = bitcast i8* %8190 to float*
  %8192 = load float, float* %8191, align 4
  %8193 = insertelement <4 x float> zeroinitializer, float %8192, i32 0
  %8194 = insertelement <4 x float> %8193, float 0.000000e+00, i32 1
  %8195 = insertelement <4 x float> %8194, float 0.000000e+00, i32 2
  %8196 = insertelement <4 x float> %8195, float 0.000000e+00, i32 3
  %8197 = load float, float* %2, align 4
  %8198 = insertelement <4 x float> zeroinitializer, float %8197, i32 0
  %8199 = insertelement <4 x float> %8198, float 0.000000e+00, i32 1
  %8200 = insertelement <4 x float> %8199, float 0.000000e+00, i32 2
  %8201 = insertelement <4 x float> %8200, float 0.000000e+00, i32 3
  %8202 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8196, <4 x float> %8201, <4 x float> zeroinitializer)
  %8203 = extractelement <4 x float> %8202, i32 0
  %8204 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8205 = getelementptr inbounds i8, i8* %8204, i64 16
  %8206 = bitcast i8* %8205 to float*
  store float %8203, float* %8206, align 4
  %8207 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8208 = getelementptr inbounds i8, i8* %8207, i64 16
  %8209 = bitcast i8* %8208 to float*
  %8210 = load float, float* %8209, align 4
  %8211 = insertelement <4 x float> zeroinitializer, float %8210, i32 0
  %8212 = insertelement <4 x float> %8211, float 0.000000e+00, i32 1
  %8213 = insertelement <4 x float> %8212, float 0.000000e+00, i32 2
  %8214 = insertelement <4 x float> %8213, float 0.000000e+00, i32 3
  %8215 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8216 = getelementptr inbounds i8, i8* %8215, i64 20
  %8217 = bitcast i8* %8216 to float*
  %8218 = load float, float* %8217, align 4
  %8219 = insertelement <4 x float> zeroinitializer, float %8218, i32 0
  %8220 = insertelement <4 x float> %8219, float 0.000000e+00, i32 1
  %8221 = insertelement <4 x float> %8220, float 0.000000e+00, i32 2
  %8222 = insertelement <4 x float> %8221, float 0.000000e+00, i32 3
  %8223 = getelementptr inbounds float, float* %2, i64 4
  %8224 = load float, float* %8223, align 4
  %8225 = insertelement <4 x float> zeroinitializer, float %8224, i32 0
  %8226 = insertelement <4 x float> %8225, float 0.000000e+00, i32 1
  %8227 = insertelement <4 x float> %8226, float 0.000000e+00, i32 2
  %8228 = insertelement <4 x float> %8227, float 0.000000e+00, i32 3
  %8229 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8222, <4 x float> %8228, <4 x float> %8214)
  %8230 = extractelement <4 x float> %8229, i32 0
  %8231 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8232 = getelementptr inbounds i8, i8* %8231, i64 16
  %8233 = bitcast i8* %8232 to float*
  store float %8230, float* %8233, align 4
  %8234 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8235 = getelementptr inbounds i8, i8* %8234, i64 16
  %8236 = bitcast i8* %8235 to float*
  %8237 = load float, float* %8236, align 4
  %8238 = insertelement <4 x float> zeroinitializer, float %8237, i32 0
  %8239 = insertelement <4 x float> %8238, float 0.000000e+00, i32 1
  %8240 = insertelement <4 x float> %8239, float 0.000000e+00, i32 2
  %8241 = insertelement <4 x float> %8240, float 0.000000e+00, i32 3
  %8242 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8243 = getelementptr inbounds i8, i8* %8242, i64 24
  %8244 = bitcast i8* %8243 to float*
  %8245 = load float, float* %8244, align 4
  %8246 = insertelement <4 x float> zeroinitializer, float %8245, i32 0
  %8247 = insertelement <4 x float> %8246, float 0.000000e+00, i32 1
  %8248 = insertelement <4 x float> %8247, float 0.000000e+00, i32 2
  %8249 = insertelement <4 x float> %8248, float 0.000000e+00, i32 3
  %8250 = getelementptr inbounds float, float* %2, i64 8
  %8251 = load float, float* %8250, align 4
  %8252 = insertelement <4 x float> zeroinitializer, float %8251, i32 0
  %8253 = insertelement <4 x float> %8252, float 0.000000e+00, i32 1
  %8254 = insertelement <4 x float> %8253, float 0.000000e+00, i32 2
  %8255 = insertelement <4 x float> %8254, float 0.000000e+00, i32 3
  %8256 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8249, <4 x float> %8255, <4 x float> %8241)
  %8257 = extractelement <4 x float> %8256, i32 0
  %8258 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8259 = getelementptr inbounds i8, i8* %8258, i64 16
  %8260 = bitcast i8* %8259 to float*
  store float %8257, float* %8260, align 4
  %8261 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8262 = getelementptr inbounds i8, i8* %8261, i64 16
  %8263 = bitcast i8* %8262 to float*
  %8264 = load float, float* %8263, align 4
  %8265 = insertelement <4 x float> zeroinitializer, float %8264, i32 0
  %8266 = insertelement <4 x float> %8265, float 0.000000e+00, i32 1
  %8267 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8268 = getelementptr inbounds i8, i8* %8267, i64 20
  %8269 = bitcast i8* %8268 to float*
  %8270 = load float, float* %8269, align 4
  %8271 = insertelement <4 x float> %8266, float %8270, i32 2
  %8272 = insertelement <4 x float> %8271, float 0.000000e+00, i32 3
  %8273 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8274 = getelementptr inbounds i8, i8* %8273, i64 28
  %8275 = bitcast i8* %8274 to float*
  %8276 = load float, float* %8275, align 4
  %8277 = insertelement <4 x float> zeroinitializer, float %8276, i32 0
  %8278 = insertelement <4 x float> %8277, float 0.000000e+00, i32 1
  %8279 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8280 = getelementptr inbounds i8, i8* %8279, i64 16
  %8281 = bitcast i8* %8280 to float*
  %8282 = load float, float* %8281, align 4
  %8283 = insertelement <4 x float> %8278, float %8282, i32 2
  %8284 = insertelement <4 x float> %8283, float 0.000000e+00, i32 3
  %8285 = getelementptr inbounds float, float* %2, i64 12
  %8286 = load float, float* %8285, align 4
  %8287 = insertelement <4 x float> zeroinitializer, float %8286, i32 0
  %8288 = insertelement <4 x float> %8287, float 0.000000e+00, i32 1
  %8289 = getelementptr inbounds float, float* %2, i64 1
  %8290 = load float, float* %8289, align 4
  %8291 = insertelement <4 x float> %8288, float %8290, i32 2
  %8292 = insertelement <4 x float> %8291, float 0.000000e+00, i32 3
  %8293 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8284, <4 x float> %8292, <4 x float> %8272)
  %8294 = extractelement <4 x float> %8293, i32 0
  %8295 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8296 = getelementptr inbounds i8, i8* %8295, i64 16
  %8297 = bitcast i8* %8296 to float*
  store float %8294, float* %8297, align 4
  %8298 = extractelement <4 x float> %8293, i32 1
  %8299 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8300 = getelementptr inbounds i8, i8* %8299, i64 20
  %8301 = bitcast i8* %8300 to float*
  store float %8298, float* %8301, align 4
  %8302 = extractelement <4 x float> %8293, i32 2
  %8303 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8304 = getelementptr inbounds i8, i8* %8303, i64 20
  %8305 = bitcast i8* %8304 to float*
  store float %8302, float* %8305, align 4
  %8306 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8307 = getelementptr inbounds i8, i8* %8306, i64 20
  %8308 = bitcast i8* %8307 to float*
  %8309 = load float, float* %8308, align 4
  %8310 = insertelement <4 x float> zeroinitializer, float %8309, i32 0
  %8311 = insertelement <4 x float> %8310, float 0.000000e+00, i32 1
  %8312 = insertelement <4 x float> %8311, float 0.000000e+00, i32 2
  %8313 = insertelement <4 x float> %8312, float 0.000000e+00, i32 3
  %8314 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8315 = getelementptr inbounds i8, i8* %8314, i64 20
  %8316 = bitcast i8* %8315 to float*
  %8317 = load float, float* %8316, align 4
  %8318 = insertelement <4 x float> zeroinitializer, float %8317, i32 0
  %8319 = insertelement <4 x float> %8318, float 0.000000e+00, i32 1
  %8320 = insertelement <4 x float> %8319, float 0.000000e+00, i32 2
  %8321 = insertelement <4 x float> %8320, float 0.000000e+00, i32 3
  %8322 = getelementptr inbounds float, float* %2, i64 5
  %8323 = load float, float* %8322, align 4
  %8324 = insertelement <4 x float> zeroinitializer, float %8323, i32 0
  %8325 = insertelement <4 x float> %8324, float 0.000000e+00, i32 1
  %8326 = insertelement <4 x float> %8325, float 0.000000e+00, i32 2
  %8327 = insertelement <4 x float> %8326, float 0.000000e+00, i32 3
  %8328 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8321, <4 x float> %8327, <4 x float> %8313)
  %8329 = extractelement <4 x float> %8328, i32 0
  %8330 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8331 = getelementptr inbounds i8, i8* %8330, i64 20
  %8332 = bitcast i8* %8331 to float*
  store float %8329, float* %8332, align 4
  %8333 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8334 = getelementptr inbounds i8, i8* %8333, i64 20
  %8335 = bitcast i8* %8334 to float*
  %8336 = load float, float* %8335, align 4
  %8337 = insertelement <4 x float> zeroinitializer, float %8336, i32 0
  %8338 = insertelement <4 x float> %8337, float 0.000000e+00, i32 1
  %8339 = insertelement <4 x float> %8338, float 0.000000e+00, i32 2
  %8340 = insertelement <4 x float> %8339, float 0.000000e+00, i32 3
  %8341 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8342 = getelementptr inbounds i8, i8* %8341, i64 24
  %8343 = bitcast i8* %8342 to float*
  %8344 = load float, float* %8343, align 4
  %8345 = insertelement <4 x float> zeroinitializer, float %8344, i32 0
  %8346 = insertelement <4 x float> %8345, float 0.000000e+00, i32 1
  %8347 = insertelement <4 x float> %8346, float 0.000000e+00, i32 2
  %8348 = insertelement <4 x float> %8347, float 0.000000e+00, i32 3
  %8349 = getelementptr inbounds float, float* %2, i64 9
  %8350 = load float, float* %8349, align 4
  %8351 = insertelement <4 x float> zeroinitializer, float %8350, i32 0
  %8352 = insertelement <4 x float> %8351, float 0.000000e+00, i32 1
  %8353 = insertelement <4 x float> %8352, float 0.000000e+00, i32 2
  %8354 = insertelement <4 x float> %8353, float 0.000000e+00, i32 3
  %8355 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8348, <4 x float> %8354, <4 x float> %8340)
  %8356 = extractelement <4 x float> %8355, i32 0
  %8357 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8358 = getelementptr inbounds i8, i8* %8357, i64 20
  %8359 = bitcast i8* %8358 to float*
  store float %8356, float* %8359, align 4
  %8360 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8361 = getelementptr inbounds i8, i8* %8360, i64 20
  %8362 = bitcast i8* %8361 to float*
  %8363 = load float, float* %8362, align 4
  %8364 = insertelement <4 x float> zeroinitializer, float %8363, i32 0
  %8365 = insertelement <4 x float> %8364, float 0.000000e+00, i32 1
  %8366 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8367 = getelementptr inbounds i8, i8* %8366, i64 24
  %8368 = bitcast i8* %8367 to float*
  %8369 = load float, float* %8368, align 4
  %8370 = insertelement <4 x float> %8365, float %8369, i32 2
  %8371 = insertelement <4 x float> %8370, float 0.000000e+00, i32 3
  %8372 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8373 = getelementptr inbounds i8, i8* %8372, i64 28
  %8374 = bitcast i8* %8373 to float*
  %8375 = load float, float* %8374, align 4
  %8376 = insertelement <4 x float> zeroinitializer, float %8375, i32 0
  %8377 = insertelement <4 x float> %8376, float 0.000000e+00, i32 1
  %8378 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8379 = getelementptr inbounds i8, i8* %8378, i64 16
  %8380 = bitcast i8* %8379 to float*
  %8381 = load float, float* %8380, align 4
  %8382 = insertelement <4 x float> %8377, float %8381, i32 2
  %8383 = insertelement <4 x float> %8382, float 0.000000e+00, i32 3
  %8384 = getelementptr inbounds float, float* %2, i64 13
  %8385 = load float, float* %8384, align 4
  %8386 = insertelement <4 x float> zeroinitializer, float %8385, i32 0
  %8387 = insertelement <4 x float> %8386, float 0.000000e+00, i32 1
  %8388 = getelementptr inbounds float, float* %2, i64 2
  %8389 = load float, float* %8388, align 4
  %8390 = insertelement <4 x float> %8387, float %8389, i32 2
  %8391 = insertelement <4 x float> %8390, float 0.000000e+00, i32 3
  %8392 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8383, <4 x float> %8391, <4 x float> %8371)
  %8393 = extractelement <4 x float> %8392, i32 0
  %8394 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8395 = getelementptr inbounds i8, i8* %8394, i64 20
  %8396 = bitcast i8* %8395 to float*
  store float %8393, float* %8396, align 4
  %8397 = extractelement <4 x float> %8392, i32 1
  %8398 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8399 = getelementptr inbounds i8, i8* %8398, i64 24
  %8400 = bitcast i8* %8399 to float*
  store float %8397, float* %8400, align 4
  %8401 = extractelement <4 x float> %8392, i32 2
  %8402 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8403 = getelementptr inbounds i8, i8* %8402, i64 24
  %8404 = bitcast i8* %8403 to float*
  store float %8401, float* %8404, align 4
  %8405 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8406 = getelementptr inbounds i8, i8* %8405, i64 24
  %8407 = bitcast i8* %8406 to float*
  %8408 = load float, float* %8407, align 4
  %8409 = insertelement <4 x float> zeroinitializer, float %8408, i32 0
  %8410 = insertelement <4 x float> %8409, float 0.000000e+00, i32 1
  %8411 = insertelement <4 x float> %8410, float 0.000000e+00, i32 2
  %8412 = insertelement <4 x float> %8411, float 0.000000e+00, i32 3
  %8413 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8414 = getelementptr inbounds i8, i8* %8413, i64 20
  %8415 = bitcast i8* %8414 to float*
  %8416 = load float, float* %8415, align 4
  %8417 = insertelement <4 x float> zeroinitializer, float %8416, i32 0
  %8418 = insertelement <4 x float> %8417, float 0.000000e+00, i32 1
  %8419 = insertelement <4 x float> %8418, float 0.000000e+00, i32 2
  %8420 = insertelement <4 x float> %8419, float 0.000000e+00, i32 3
  %8421 = getelementptr inbounds float, float* %2, i64 6
  %8422 = load float, float* %8421, align 4
  %8423 = insertelement <4 x float> zeroinitializer, float %8422, i32 0
  %8424 = insertelement <4 x float> %8423, float 0.000000e+00, i32 1
  %8425 = insertelement <4 x float> %8424, float 0.000000e+00, i32 2
  %8426 = insertelement <4 x float> %8425, float 0.000000e+00, i32 3
  %8427 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8420, <4 x float> %8426, <4 x float> %8412)
  %8428 = extractelement <4 x float> %8427, i32 0
  %8429 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8430 = getelementptr inbounds i8, i8* %8429, i64 24
  %8431 = bitcast i8* %8430 to float*
  store float %8428, float* %8431, align 4
  %8432 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8433 = getelementptr inbounds i8, i8* %8432, i64 24
  %8434 = bitcast i8* %8433 to float*
  %8435 = load float, float* %8434, align 4
  %8436 = insertelement <4 x float> zeroinitializer, float %8435, i32 0
  %8437 = insertelement <4 x float> %8436, float 0.000000e+00, i32 1
  %8438 = insertelement <4 x float> %8437, float 0.000000e+00, i32 2
  %8439 = insertelement <4 x float> %8438, float 0.000000e+00, i32 3
  %8440 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8441 = getelementptr inbounds i8, i8* %8440, i64 24
  %8442 = bitcast i8* %8441 to float*
  %8443 = load float, float* %8442, align 4
  %8444 = insertelement <4 x float> zeroinitializer, float %8443, i32 0
  %8445 = insertelement <4 x float> %8444, float 0.000000e+00, i32 1
  %8446 = insertelement <4 x float> %8445, float 0.000000e+00, i32 2
  %8447 = insertelement <4 x float> %8446, float 0.000000e+00, i32 3
  %8448 = getelementptr inbounds float, float* %2, i64 10
  %8449 = load float, float* %8448, align 4
  %8450 = insertelement <4 x float> zeroinitializer, float %8449, i32 0
  %8451 = insertelement <4 x float> %8450, float 0.000000e+00, i32 1
  %8452 = insertelement <4 x float> %8451, float 0.000000e+00, i32 2
  %8453 = insertelement <4 x float> %8452, float 0.000000e+00, i32 3
  %8454 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8447, <4 x float> %8453, <4 x float> %8439)
  %8455 = extractelement <4 x float> %8454, i32 0
  %8456 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8457 = getelementptr inbounds i8, i8* %8456, i64 24
  %8458 = bitcast i8* %8457 to float*
  store float %8455, float* %8458, align 4
  %8459 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8460 = getelementptr inbounds i8, i8* %8459, i64 24
  %8461 = bitcast i8* %8460 to float*
  %8462 = load float, float* %8461, align 4
  %8463 = insertelement <4 x float> zeroinitializer, float %8462, i32 0
  %8464 = insertelement <4 x float> %8463, float 0.000000e+00, i32 1
  %8465 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8466 = getelementptr inbounds i8, i8* %8465, i64 28
  %8467 = bitcast i8* %8466 to float*
  %8468 = load float, float* %8467, align 4
  %8469 = insertelement <4 x float> %8464, float %8468, i32 2
  %8470 = insertelement <4 x float> %8469, float 0.000000e+00, i32 3
  %8471 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8472 = getelementptr inbounds i8, i8* %8471, i64 28
  %8473 = bitcast i8* %8472 to float*
  %8474 = load float, float* %8473, align 4
  %8475 = insertelement <4 x float> zeroinitializer, float %8474, i32 0
  %8476 = insertelement <4 x float> %8475, float 0.000000e+00, i32 1
  %8477 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8478 = getelementptr inbounds i8, i8* %8477, i64 16
  %8479 = bitcast i8* %8478 to float*
  %8480 = load float, float* %8479, align 4
  %8481 = insertelement <4 x float> %8476, float %8480, i32 2
  %8482 = insertelement <4 x float> %8481, float 0.000000e+00, i32 3
  %8483 = getelementptr inbounds float, float* %2, i64 14
  %8484 = load float, float* %8483, align 4
  %8485 = insertelement <4 x float> zeroinitializer, float %8484, i32 0
  %8486 = insertelement <4 x float> %8485, float 0.000000e+00, i32 1
  %8487 = getelementptr inbounds float, float* %2, i64 3
  %8488 = load float, float* %8487, align 4
  %8489 = insertelement <4 x float> %8486, float %8488, i32 2
  %8490 = insertelement <4 x float> %8489, float 0.000000e+00, i32 3
  %8491 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8482, <4 x float> %8490, <4 x float> %8470)
  %8492 = extractelement <4 x float> %8491, i32 0
  %8493 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8494 = getelementptr inbounds i8, i8* %8493, i64 24
  %8495 = bitcast i8* %8494 to float*
  store float %8492, float* %8495, align 4
  %8496 = extractelement <4 x float> %8491, i32 1
  %8497 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8498 = getelementptr inbounds i8, i8* %8497, i64 28
  %8499 = bitcast i8* %8498 to float*
  store float %8496, float* %8499, align 4
  %8500 = extractelement <4 x float> %8491, i32 2
  %8501 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8502 = getelementptr inbounds i8, i8* %8501, i64 28
  %8503 = bitcast i8* %8502 to float*
  store float %8500, float* %8503, align 4
  %8504 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8505 = getelementptr inbounds i8, i8* %8504, i64 28
  %8506 = bitcast i8* %8505 to float*
  %8507 = load float, float* %8506, align 4
  %8508 = insertelement <4 x float> zeroinitializer, float %8507, i32 0
  %8509 = insertelement <4 x float> %8508, float 0.000000e+00, i32 1
  %8510 = insertelement <4 x float> %8509, float 0.000000e+00, i32 2
  %8511 = insertelement <4 x float> %8510, float 0.000000e+00, i32 3
  %8512 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8513 = getelementptr inbounds i8, i8* %8512, i64 20
  %8514 = bitcast i8* %8513 to float*
  %8515 = load float, float* %8514, align 4
  %8516 = insertelement <4 x float> zeroinitializer, float %8515, i32 0
  %8517 = insertelement <4 x float> %8516, float 0.000000e+00, i32 1
  %8518 = insertelement <4 x float> %8517, float 0.000000e+00, i32 2
  %8519 = insertelement <4 x float> %8518, float 0.000000e+00, i32 3
  %8520 = getelementptr inbounds float, float* %2, i64 7
  %8521 = load float, float* %8520, align 4
  %8522 = insertelement <4 x float> zeroinitializer, float %8521, i32 0
  %8523 = insertelement <4 x float> %8522, float 0.000000e+00, i32 1
  %8524 = insertelement <4 x float> %8523, float 0.000000e+00, i32 2
  %8525 = insertelement <4 x float> %8524, float 0.000000e+00, i32 3
  %8526 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8519, <4 x float> %8525, <4 x float> %8511)
  %8527 = extractelement <4 x float> %8526, i32 0
  %8528 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8529 = getelementptr inbounds i8, i8* %8528, i64 28
  %8530 = bitcast i8* %8529 to float*
  store float %8527, float* %8530, align 4
  %8531 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8532 = getelementptr inbounds i8, i8* %8531, i64 28
  %8533 = bitcast i8* %8532 to float*
  %8534 = load float, float* %8533, align 4
  %8535 = insertelement <4 x float> zeroinitializer, float %8534, i32 0
  %8536 = insertelement <4 x float> %8535, float 0.000000e+00, i32 1
  %8537 = insertelement <4 x float> %8536, float 0.000000e+00, i32 2
  %8538 = insertelement <4 x float> %8537, float 0.000000e+00, i32 3
  %8539 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8540 = getelementptr inbounds i8, i8* %8539, i64 24
  %8541 = bitcast i8* %8540 to float*
  %8542 = load float, float* %8541, align 4
  %8543 = insertelement <4 x float> zeroinitializer, float %8542, i32 0
  %8544 = insertelement <4 x float> %8543, float 0.000000e+00, i32 1
  %8545 = insertelement <4 x float> %8544, float 0.000000e+00, i32 2
  %8546 = insertelement <4 x float> %8545, float 0.000000e+00, i32 3
  %8547 = getelementptr inbounds float, float* %2, i64 11
  %8548 = load float, float* %8547, align 4
  %8549 = insertelement <4 x float> zeroinitializer, float %8548, i32 0
  %8550 = insertelement <4 x float> %8549, float 0.000000e+00, i32 1
  %8551 = insertelement <4 x float> %8550, float 0.000000e+00, i32 2
  %8552 = insertelement <4 x float> %8551, float 0.000000e+00, i32 3
  %8553 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8546, <4 x float> %8552, <4 x float> %8538)
  %8554 = extractelement <4 x float> %8553, i32 0
  %8555 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8556 = getelementptr inbounds i8, i8* %8555, i64 28
  %8557 = bitcast i8* %8556 to float*
  store float %8554, float* %8557, align 4
  %8558 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8559 = getelementptr inbounds i8, i8* %8558, i64 28
  %8560 = bitcast i8* %8559 to float*
  %8561 = load float, float* %8560, align 4
  %8562 = insertelement <4 x float> zeroinitializer, float %8561, i32 0
  %8563 = insertelement <4 x float> %8562, float 0.000000e+00, i32 1
  %8564 = insertelement <4 x float> %8563, float 0.000000e+00, i32 2
  %8565 = insertelement <4 x float> %8564, float 0.000000e+00, i32 3
  %8566 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8567 = getelementptr inbounds i8, i8* %8566, i64 28
  %8568 = bitcast i8* %8567 to float*
  %8569 = load float, float* %8568, align 4
  %8570 = insertelement <4 x float> zeroinitializer, float %8569, i32 0
  %8571 = insertelement <4 x float> %8570, float 0.000000e+00, i32 1
  %8572 = insertelement <4 x float> %8571, float 0.000000e+00, i32 2
  %8573 = insertelement <4 x float> %8572, float 0.000000e+00, i32 3
  %8574 = getelementptr inbounds float, float* %2, i64 15
  %8575 = load float, float* %8574, align 4
  %8576 = insertelement <4 x float> zeroinitializer, float %8575, i32 0
  %8577 = insertelement <4 x float> %8576, float 0.000000e+00, i32 1
  %8578 = insertelement <4 x float> %8577, float 0.000000e+00, i32 2
  %8579 = insertelement <4 x float> %8578, float 0.000000e+00, i32 3
  %8580 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8573, <4 x float> %8579, <4 x float> %8565)
  %8581 = extractelement <4 x float> %8580, i32 0
  %8582 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8583 = getelementptr inbounds i8, i8* %8582, i64 28
  %8584 = bitcast i8* %8583 to float*
  store float %8581, float* %8584, align 4
  %8585 = extractelement <4 x float> %8580, i32 1
  %8586 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8587 = getelementptr inbounds i8, i8* %8586, i64 32
  %8588 = bitcast i8* %8587 to float*
  store float %8585, float* %8588, align 4
  %8589 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8590 = getelementptr inbounds i8, i8* %8589, i64 32
  %8591 = bitcast i8* %8590 to float*
  %8592 = load float, float* %8591, align 4
  %8593 = insertelement <4 x float> zeroinitializer, float %8592, i32 0
  %8594 = insertelement <4 x float> %8593, float 0.000000e+00, i32 1
  %8595 = insertelement <4 x float> %8594, float 0.000000e+00, i32 2
  %8596 = insertelement <4 x float> %8595, float 0.000000e+00, i32 3
  %8597 = load float, float* %2, align 4
  %8598 = insertelement <4 x float> zeroinitializer, float %8597, i32 0
  %8599 = insertelement <4 x float> %8598, float 0.000000e+00, i32 1
  %8600 = insertelement <4 x float> %8599, float 0.000000e+00, i32 2
  %8601 = insertelement <4 x float> %8600, float 0.000000e+00, i32 3
  %8602 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8596, <4 x float> %8601, <4 x float> zeroinitializer)
  %8603 = extractelement <4 x float> %8602, i32 0
  %8604 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8605 = getelementptr inbounds i8, i8* %8604, i64 32
  %8606 = bitcast i8* %8605 to float*
  store float %8603, float* %8606, align 4
  %8607 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8608 = getelementptr inbounds i8, i8* %8607, i64 32
  %8609 = bitcast i8* %8608 to float*
  %8610 = load float, float* %8609, align 4
  %8611 = insertelement <4 x float> zeroinitializer, float %8610, i32 0
  %8612 = insertelement <4 x float> %8611, float 0.000000e+00, i32 1
  %8613 = insertelement <4 x float> %8612, float 0.000000e+00, i32 2
  %8614 = insertelement <4 x float> %8613, float 0.000000e+00, i32 3
  %8615 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8616 = getelementptr inbounds i8, i8* %8615, i64 36
  %8617 = bitcast i8* %8616 to float*
  %8618 = load float, float* %8617, align 4
  %8619 = insertelement <4 x float> zeroinitializer, float %8618, i32 0
  %8620 = insertelement <4 x float> %8619, float 0.000000e+00, i32 1
  %8621 = insertelement <4 x float> %8620, float 0.000000e+00, i32 2
  %8622 = insertelement <4 x float> %8621, float 0.000000e+00, i32 3
  %8623 = getelementptr inbounds float, float* %2, i64 4
  %8624 = load float, float* %8623, align 4
  %8625 = insertelement <4 x float> zeroinitializer, float %8624, i32 0
  %8626 = insertelement <4 x float> %8625, float 0.000000e+00, i32 1
  %8627 = insertelement <4 x float> %8626, float 0.000000e+00, i32 2
  %8628 = insertelement <4 x float> %8627, float 0.000000e+00, i32 3
  %8629 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8622, <4 x float> %8628, <4 x float> %8614)
  %8630 = extractelement <4 x float> %8629, i32 0
  %8631 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8632 = getelementptr inbounds i8, i8* %8631, i64 32
  %8633 = bitcast i8* %8632 to float*
  store float %8630, float* %8633, align 4
  %8634 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8635 = getelementptr inbounds i8, i8* %8634, i64 32
  %8636 = bitcast i8* %8635 to float*
  %8637 = load float, float* %8636, align 4
  %8638 = insertelement <4 x float> zeroinitializer, float %8637, i32 0
  %8639 = insertelement <4 x float> %8638, float 0.000000e+00, i32 1
  %8640 = insertelement <4 x float> %8639, float 0.000000e+00, i32 2
  %8641 = insertelement <4 x float> %8640, float 0.000000e+00, i32 3
  %8642 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8643 = getelementptr inbounds i8, i8* %8642, i64 40
  %8644 = bitcast i8* %8643 to float*
  %8645 = load float, float* %8644, align 4
  %8646 = insertelement <4 x float> zeroinitializer, float %8645, i32 0
  %8647 = insertelement <4 x float> %8646, float 0.000000e+00, i32 1
  %8648 = insertelement <4 x float> %8647, float 0.000000e+00, i32 2
  %8649 = insertelement <4 x float> %8648, float 0.000000e+00, i32 3
  %8650 = getelementptr inbounds float, float* %2, i64 8
  %8651 = load float, float* %8650, align 4
  %8652 = insertelement <4 x float> zeroinitializer, float %8651, i32 0
  %8653 = insertelement <4 x float> %8652, float 0.000000e+00, i32 1
  %8654 = insertelement <4 x float> %8653, float 0.000000e+00, i32 2
  %8655 = insertelement <4 x float> %8654, float 0.000000e+00, i32 3
  %8656 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8649, <4 x float> %8655, <4 x float> %8641)
  %8657 = extractelement <4 x float> %8656, i32 0
  %8658 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8659 = getelementptr inbounds i8, i8* %8658, i64 32
  %8660 = bitcast i8* %8659 to float*
  store float %8657, float* %8660, align 4
  %8661 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8662 = getelementptr inbounds i8, i8* %8661, i64 32
  %8663 = bitcast i8* %8662 to float*
  %8664 = load float, float* %8663, align 4
  %8665 = insertelement <4 x float> zeroinitializer, float %8664, i32 0
  %8666 = insertelement <4 x float> %8665, float 0.000000e+00, i32 1
  %8667 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8668 = getelementptr inbounds i8, i8* %8667, i64 36
  %8669 = bitcast i8* %8668 to float*
  %8670 = load float, float* %8669, align 4
  %8671 = insertelement <4 x float> %8666, float %8670, i32 2
  %8672 = insertelement <4 x float> %8671, float 0.000000e+00, i32 3
  %8673 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8674 = getelementptr inbounds i8, i8* %8673, i64 44
  %8675 = bitcast i8* %8674 to float*
  %8676 = load float, float* %8675, align 4
  %8677 = insertelement <4 x float> zeroinitializer, float %8676, i32 0
  %8678 = insertelement <4 x float> %8677, float 0.000000e+00, i32 1
  %8679 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8680 = getelementptr inbounds i8, i8* %8679, i64 32
  %8681 = bitcast i8* %8680 to float*
  %8682 = load float, float* %8681, align 4
  %8683 = insertelement <4 x float> %8678, float %8682, i32 2
  %8684 = insertelement <4 x float> %8683, float 0.000000e+00, i32 3
  %8685 = getelementptr inbounds float, float* %2, i64 12
  %8686 = load float, float* %8685, align 4
  %8687 = insertelement <4 x float> zeroinitializer, float %8686, i32 0
  %8688 = insertelement <4 x float> %8687, float 0.000000e+00, i32 1
  %8689 = getelementptr inbounds float, float* %2, i64 1
  %8690 = load float, float* %8689, align 4
  %8691 = insertelement <4 x float> %8688, float %8690, i32 2
  %8692 = insertelement <4 x float> %8691, float 0.000000e+00, i32 3
  %8693 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8684, <4 x float> %8692, <4 x float> %8672)
  %8694 = extractelement <4 x float> %8693, i32 0
  %8695 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8696 = getelementptr inbounds i8, i8* %8695, i64 32
  %8697 = bitcast i8* %8696 to float*
  store float %8694, float* %8697, align 4
  %8698 = extractelement <4 x float> %8693, i32 1
  %8699 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8700 = getelementptr inbounds i8, i8* %8699, i64 36
  %8701 = bitcast i8* %8700 to float*
  store float %8698, float* %8701, align 4
  %8702 = extractelement <4 x float> %8693, i32 2
  %8703 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8704 = getelementptr inbounds i8, i8* %8703, i64 36
  %8705 = bitcast i8* %8704 to float*
  store float %8702, float* %8705, align 4
  %8706 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8707 = getelementptr inbounds i8, i8* %8706, i64 36
  %8708 = bitcast i8* %8707 to float*
  %8709 = load float, float* %8708, align 4
  %8710 = insertelement <4 x float> zeroinitializer, float %8709, i32 0
  %8711 = insertelement <4 x float> %8710, float 0.000000e+00, i32 1
  %8712 = insertelement <4 x float> %8711, float 0.000000e+00, i32 2
  %8713 = insertelement <4 x float> %8712, float 0.000000e+00, i32 3
  %8714 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8715 = getelementptr inbounds i8, i8* %8714, i64 36
  %8716 = bitcast i8* %8715 to float*
  %8717 = load float, float* %8716, align 4
  %8718 = insertelement <4 x float> zeroinitializer, float %8717, i32 0
  %8719 = insertelement <4 x float> %8718, float 0.000000e+00, i32 1
  %8720 = insertelement <4 x float> %8719, float 0.000000e+00, i32 2
  %8721 = insertelement <4 x float> %8720, float 0.000000e+00, i32 3
  %8722 = getelementptr inbounds float, float* %2, i64 5
  %8723 = load float, float* %8722, align 4
  %8724 = insertelement <4 x float> zeroinitializer, float %8723, i32 0
  %8725 = insertelement <4 x float> %8724, float 0.000000e+00, i32 1
  %8726 = insertelement <4 x float> %8725, float 0.000000e+00, i32 2
  %8727 = insertelement <4 x float> %8726, float 0.000000e+00, i32 3
  %8728 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8721, <4 x float> %8727, <4 x float> %8713)
  %8729 = extractelement <4 x float> %8728, i32 0
  %8730 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8731 = getelementptr inbounds i8, i8* %8730, i64 36
  %8732 = bitcast i8* %8731 to float*
  store float %8729, float* %8732, align 4
  %8733 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8734 = getelementptr inbounds i8, i8* %8733, i64 36
  %8735 = bitcast i8* %8734 to float*
  %8736 = load float, float* %8735, align 4
  %8737 = insertelement <4 x float> zeroinitializer, float %8736, i32 0
  %8738 = insertelement <4 x float> %8737, float 0.000000e+00, i32 1
  %8739 = insertelement <4 x float> %8738, float 0.000000e+00, i32 2
  %8740 = insertelement <4 x float> %8739, float 0.000000e+00, i32 3
  %8741 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8742 = getelementptr inbounds i8, i8* %8741, i64 40
  %8743 = bitcast i8* %8742 to float*
  %8744 = load float, float* %8743, align 4
  %8745 = insertelement <4 x float> zeroinitializer, float %8744, i32 0
  %8746 = insertelement <4 x float> %8745, float 0.000000e+00, i32 1
  %8747 = insertelement <4 x float> %8746, float 0.000000e+00, i32 2
  %8748 = insertelement <4 x float> %8747, float 0.000000e+00, i32 3
  %8749 = getelementptr inbounds float, float* %2, i64 9
  %8750 = load float, float* %8749, align 4
  %8751 = insertelement <4 x float> zeroinitializer, float %8750, i32 0
  %8752 = insertelement <4 x float> %8751, float 0.000000e+00, i32 1
  %8753 = insertelement <4 x float> %8752, float 0.000000e+00, i32 2
  %8754 = insertelement <4 x float> %8753, float 0.000000e+00, i32 3
  %8755 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8748, <4 x float> %8754, <4 x float> %8740)
  %8756 = extractelement <4 x float> %8755, i32 0
  %8757 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8758 = getelementptr inbounds i8, i8* %8757, i64 36
  %8759 = bitcast i8* %8758 to float*
  store float %8756, float* %8759, align 4
  %8760 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8761 = getelementptr inbounds i8, i8* %8760, i64 36
  %8762 = bitcast i8* %8761 to float*
  %8763 = load float, float* %8762, align 4
  %8764 = insertelement <4 x float> zeroinitializer, float %8763, i32 0
  %8765 = insertelement <4 x float> %8764, float 0.000000e+00, i32 1
  %8766 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8767 = getelementptr inbounds i8, i8* %8766, i64 40
  %8768 = bitcast i8* %8767 to float*
  %8769 = load float, float* %8768, align 4
  %8770 = insertelement <4 x float> %8765, float %8769, i32 2
  %8771 = insertelement <4 x float> %8770, float 0.000000e+00, i32 3
  %8772 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8773 = getelementptr inbounds i8, i8* %8772, i64 44
  %8774 = bitcast i8* %8773 to float*
  %8775 = load float, float* %8774, align 4
  %8776 = insertelement <4 x float> zeroinitializer, float %8775, i32 0
  %8777 = insertelement <4 x float> %8776, float 0.000000e+00, i32 1
  %8778 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8779 = getelementptr inbounds i8, i8* %8778, i64 32
  %8780 = bitcast i8* %8779 to float*
  %8781 = load float, float* %8780, align 4
  %8782 = insertelement <4 x float> %8777, float %8781, i32 2
  %8783 = insertelement <4 x float> %8782, float 0.000000e+00, i32 3
  %8784 = getelementptr inbounds float, float* %2, i64 13
  %8785 = load float, float* %8784, align 4
  %8786 = insertelement <4 x float> zeroinitializer, float %8785, i32 0
  %8787 = insertelement <4 x float> %8786, float 0.000000e+00, i32 1
  %8788 = getelementptr inbounds float, float* %2, i64 2
  %8789 = load float, float* %8788, align 4
  %8790 = insertelement <4 x float> %8787, float %8789, i32 2
  %8791 = insertelement <4 x float> %8790, float 0.000000e+00, i32 3
  %8792 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8783, <4 x float> %8791, <4 x float> %8771)
  %8793 = extractelement <4 x float> %8792, i32 0
  %8794 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8795 = getelementptr inbounds i8, i8* %8794, i64 36
  %8796 = bitcast i8* %8795 to float*
  store float %8793, float* %8796, align 4
  %8797 = extractelement <4 x float> %8792, i32 1
  %8798 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8799 = getelementptr inbounds i8, i8* %8798, i64 40
  %8800 = bitcast i8* %8799 to float*
  store float %8797, float* %8800, align 4
  %8801 = extractelement <4 x float> %8792, i32 2
  %8802 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8803 = getelementptr inbounds i8, i8* %8802, i64 40
  %8804 = bitcast i8* %8803 to float*
  store float %8801, float* %8804, align 4
  %8805 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8806 = getelementptr inbounds i8, i8* %8805, i64 40
  %8807 = bitcast i8* %8806 to float*
  %8808 = load float, float* %8807, align 4
  %8809 = insertelement <4 x float> zeroinitializer, float %8808, i32 0
  %8810 = insertelement <4 x float> %8809, float 0.000000e+00, i32 1
  %8811 = insertelement <4 x float> %8810, float 0.000000e+00, i32 2
  %8812 = insertelement <4 x float> %8811, float 0.000000e+00, i32 3
  %8813 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8814 = getelementptr inbounds i8, i8* %8813, i64 36
  %8815 = bitcast i8* %8814 to float*
  %8816 = load float, float* %8815, align 4
  %8817 = insertelement <4 x float> zeroinitializer, float %8816, i32 0
  %8818 = insertelement <4 x float> %8817, float 0.000000e+00, i32 1
  %8819 = insertelement <4 x float> %8818, float 0.000000e+00, i32 2
  %8820 = insertelement <4 x float> %8819, float 0.000000e+00, i32 3
  %8821 = getelementptr inbounds float, float* %2, i64 6
  %8822 = load float, float* %8821, align 4
  %8823 = insertelement <4 x float> zeroinitializer, float %8822, i32 0
  %8824 = insertelement <4 x float> %8823, float 0.000000e+00, i32 1
  %8825 = insertelement <4 x float> %8824, float 0.000000e+00, i32 2
  %8826 = insertelement <4 x float> %8825, float 0.000000e+00, i32 3
  %8827 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8820, <4 x float> %8826, <4 x float> %8812)
  %8828 = extractelement <4 x float> %8827, i32 0
  %8829 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8830 = getelementptr inbounds i8, i8* %8829, i64 40
  %8831 = bitcast i8* %8830 to float*
  store float %8828, float* %8831, align 4
  %8832 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8833 = getelementptr inbounds i8, i8* %8832, i64 40
  %8834 = bitcast i8* %8833 to float*
  %8835 = load float, float* %8834, align 4
  %8836 = insertelement <4 x float> zeroinitializer, float %8835, i32 0
  %8837 = insertelement <4 x float> %8836, float 0.000000e+00, i32 1
  %8838 = insertelement <4 x float> %8837, float 0.000000e+00, i32 2
  %8839 = insertelement <4 x float> %8838, float 0.000000e+00, i32 3
  %8840 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8841 = getelementptr inbounds i8, i8* %8840, i64 40
  %8842 = bitcast i8* %8841 to float*
  %8843 = load float, float* %8842, align 4
  %8844 = insertelement <4 x float> zeroinitializer, float %8843, i32 0
  %8845 = insertelement <4 x float> %8844, float 0.000000e+00, i32 1
  %8846 = insertelement <4 x float> %8845, float 0.000000e+00, i32 2
  %8847 = insertelement <4 x float> %8846, float 0.000000e+00, i32 3
  %8848 = getelementptr inbounds float, float* %2, i64 10
  %8849 = load float, float* %8848, align 4
  %8850 = insertelement <4 x float> zeroinitializer, float %8849, i32 0
  %8851 = insertelement <4 x float> %8850, float 0.000000e+00, i32 1
  %8852 = insertelement <4 x float> %8851, float 0.000000e+00, i32 2
  %8853 = insertelement <4 x float> %8852, float 0.000000e+00, i32 3
  %8854 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8847, <4 x float> %8853, <4 x float> %8839)
  %8855 = extractelement <4 x float> %8854, i32 0
  %8856 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8857 = getelementptr inbounds i8, i8* %8856, i64 40
  %8858 = bitcast i8* %8857 to float*
  store float %8855, float* %8858, align 4
  %8859 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8860 = getelementptr inbounds i8, i8* %8859, i64 40
  %8861 = bitcast i8* %8860 to float*
  %8862 = load float, float* %8861, align 4
  %8863 = insertelement <4 x float> zeroinitializer, float %8862, i32 0
  %8864 = insertelement <4 x float> %8863, float 0.000000e+00, i32 1
  %8865 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8866 = getelementptr inbounds i8, i8* %8865, i64 44
  %8867 = bitcast i8* %8866 to float*
  %8868 = load float, float* %8867, align 4
  %8869 = insertelement <4 x float> %8864, float %8868, i32 2
  %8870 = insertelement <4 x float> %8869, float 0.000000e+00, i32 3
  %8871 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8872 = getelementptr inbounds i8, i8* %8871, i64 44
  %8873 = bitcast i8* %8872 to float*
  %8874 = load float, float* %8873, align 4
  %8875 = insertelement <4 x float> zeroinitializer, float %8874, i32 0
  %8876 = insertelement <4 x float> %8875, float 0.000000e+00, i32 1
  %8877 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8878 = getelementptr inbounds i8, i8* %8877, i64 32
  %8879 = bitcast i8* %8878 to float*
  %8880 = load float, float* %8879, align 4
  %8881 = insertelement <4 x float> %8876, float %8880, i32 2
  %8882 = insertelement <4 x float> %8881, float 0.000000e+00, i32 3
  %8883 = getelementptr inbounds float, float* %2, i64 14
  %8884 = load float, float* %8883, align 4
  %8885 = insertelement <4 x float> zeroinitializer, float %8884, i32 0
  %8886 = insertelement <4 x float> %8885, float 0.000000e+00, i32 1
  %8887 = getelementptr inbounds float, float* %2, i64 3
  %8888 = load float, float* %8887, align 4
  %8889 = insertelement <4 x float> %8886, float %8888, i32 2
  %8890 = insertelement <4 x float> %8889, float 0.000000e+00, i32 3
  %8891 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8882, <4 x float> %8890, <4 x float> %8870)
  %8892 = extractelement <4 x float> %8891, i32 0
  %8893 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8894 = getelementptr inbounds i8, i8* %8893, i64 40
  %8895 = bitcast i8* %8894 to float*
  store float %8892, float* %8895, align 4
  %8896 = extractelement <4 x float> %8891, i32 1
  %8897 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8898 = getelementptr inbounds i8, i8* %8897, i64 44
  %8899 = bitcast i8* %8898 to float*
  store float %8896, float* %8899, align 4
  %8900 = extractelement <4 x float> %8891, i32 2
  %8901 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8902 = getelementptr inbounds i8, i8* %8901, i64 44
  %8903 = bitcast i8* %8902 to float*
  store float %8900, float* %8903, align 4
  %8904 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8905 = getelementptr inbounds i8, i8* %8904, i64 44
  %8906 = bitcast i8* %8905 to float*
  %8907 = load float, float* %8906, align 4
  %8908 = insertelement <4 x float> zeroinitializer, float %8907, i32 0
  %8909 = insertelement <4 x float> %8908, float 0.000000e+00, i32 1
  %8910 = insertelement <4 x float> %8909, float 0.000000e+00, i32 2
  %8911 = insertelement <4 x float> %8910, float 0.000000e+00, i32 3
  %8912 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8913 = getelementptr inbounds i8, i8* %8912, i64 36
  %8914 = bitcast i8* %8913 to float*
  %8915 = load float, float* %8914, align 4
  %8916 = insertelement <4 x float> zeroinitializer, float %8915, i32 0
  %8917 = insertelement <4 x float> %8916, float 0.000000e+00, i32 1
  %8918 = insertelement <4 x float> %8917, float 0.000000e+00, i32 2
  %8919 = insertelement <4 x float> %8918, float 0.000000e+00, i32 3
  %8920 = getelementptr inbounds float, float* %2, i64 7
  %8921 = load float, float* %8920, align 4
  %8922 = insertelement <4 x float> zeroinitializer, float %8921, i32 0
  %8923 = insertelement <4 x float> %8922, float 0.000000e+00, i32 1
  %8924 = insertelement <4 x float> %8923, float 0.000000e+00, i32 2
  %8925 = insertelement <4 x float> %8924, float 0.000000e+00, i32 3
  %8926 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8919, <4 x float> %8925, <4 x float> %8911)
  %8927 = extractelement <4 x float> %8926, i32 0
  %8928 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8929 = getelementptr inbounds i8, i8* %8928, i64 44
  %8930 = bitcast i8* %8929 to float*
  store float %8927, float* %8930, align 4
  %8931 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8932 = getelementptr inbounds i8, i8* %8931, i64 44
  %8933 = bitcast i8* %8932 to float*
  %8934 = load float, float* %8933, align 4
  %8935 = insertelement <4 x float> zeroinitializer, float %8934, i32 0
  %8936 = insertelement <4 x float> %8935, float 0.000000e+00, i32 1
  %8937 = insertelement <4 x float> %8936, float 0.000000e+00, i32 2
  %8938 = insertelement <4 x float> %8937, float 0.000000e+00, i32 3
  %8939 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8940 = getelementptr inbounds i8, i8* %8939, i64 40
  %8941 = bitcast i8* %8940 to float*
  %8942 = load float, float* %8941, align 4
  %8943 = insertelement <4 x float> zeroinitializer, float %8942, i32 0
  %8944 = insertelement <4 x float> %8943, float 0.000000e+00, i32 1
  %8945 = insertelement <4 x float> %8944, float 0.000000e+00, i32 2
  %8946 = insertelement <4 x float> %8945, float 0.000000e+00, i32 3
  %8947 = getelementptr inbounds float, float* %2, i64 11
  %8948 = load float, float* %8947, align 4
  %8949 = insertelement <4 x float> zeroinitializer, float %8948, i32 0
  %8950 = insertelement <4 x float> %8949, float 0.000000e+00, i32 1
  %8951 = insertelement <4 x float> %8950, float 0.000000e+00, i32 2
  %8952 = insertelement <4 x float> %8951, float 0.000000e+00, i32 3
  %8953 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8946, <4 x float> %8952, <4 x float> %8938)
  %8954 = extractelement <4 x float> %8953, i32 0
  %8955 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8956 = getelementptr inbounds i8, i8* %8955, i64 44
  %8957 = bitcast i8* %8956 to float*
  store float %8954, float* %8957, align 4
  %8958 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8959 = getelementptr inbounds i8, i8* %8958, i64 44
  %8960 = bitcast i8* %8959 to float*
  %8961 = load float, float* %8960, align 4
  %8962 = insertelement <4 x float> zeroinitializer, float %8961, i32 0
  %8963 = insertelement <4 x float> %8962, float 0.000000e+00, i32 1
  %8964 = insertelement <4 x float> %8963, float 0.000000e+00, i32 2
  %8965 = insertelement <4 x float> %8964, float 0.000000e+00, i32 3
  %8966 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8967 = getelementptr inbounds i8, i8* %8966, i64 44
  %8968 = bitcast i8* %8967 to float*
  %8969 = load float, float* %8968, align 4
  %8970 = insertelement <4 x float> zeroinitializer, float %8969, i32 0
  %8971 = insertelement <4 x float> %8970, float 0.000000e+00, i32 1
  %8972 = insertelement <4 x float> %8971, float 0.000000e+00, i32 2
  %8973 = insertelement <4 x float> %8972, float 0.000000e+00, i32 3
  %8974 = getelementptr inbounds float, float* %2, i64 15
  %8975 = load float, float* %8974, align 4
  %8976 = insertelement <4 x float> zeroinitializer, float %8975, i32 0
  %8977 = insertelement <4 x float> %8976, float 0.000000e+00, i32 1
  %8978 = insertelement <4 x float> %8977, float 0.000000e+00, i32 2
  %8979 = insertelement <4 x float> %8978, float 0.000000e+00, i32 3
  %8980 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8973, <4 x float> %8979, <4 x float> %8965)
  %8981 = extractelement <4 x float> %8980, i32 0
  %8982 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8983 = getelementptr inbounds i8, i8* %8982, i64 44
  %8984 = bitcast i8* %8983 to float*
  store float %8981, float* %8984, align 4
  %8985 = extractelement <4 x float> %8980, i32 1
  %8986 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8987 = getelementptr inbounds i8, i8* %8986, i64 48
  %8988 = bitcast i8* %8987 to float*
  store float %8985, float* %8988, align 4
  %8989 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %8990 = getelementptr inbounds i8, i8* %8989, i64 48
  %8991 = bitcast i8* %8990 to float*
  %8992 = load float, float* %8991, align 4
  %8993 = insertelement <4 x float> zeroinitializer, float %8992, i32 0
  %8994 = insertelement <4 x float> %8993, float 0.000000e+00, i32 1
  %8995 = insertelement <4 x float> %8994, float 0.000000e+00, i32 2
  %8996 = insertelement <4 x float> %8995, float 0.000000e+00, i32 3
  %8997 = load float, float* %2, align 4
  %8998 = insertelement <4 x float> zeroinitializer, float %8997, i32 0
  %8999 = insertelement <4 x float> %8998, float 0.000000e+00, i32 1
  %9000 = insertelement <4 x float> %8999, float 0.000000e+00, i32 2
  %9001 = insertelement <4 x float> %9000, float 0.000000e+00, i32 3
  %9002 = call <4 x float> @llvm.fma.v4f32(<4 x float> %8996, <4 x float> %9001, <4 x float> zeroinitializer)
  %9003 = extractelement <4 x float> %9002, i32 0
  %9004 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9005 = getelementptr inbounds i8, i8* %9004, i64 48
  %9006 = bitcast i8* %9005 to float*
  store float %9003, float* %9006, align 4
  %9007 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9008 = getelementptr inbounds i8, i8* %9007, i64 48
  %9009 = bitcast i8* %9008 to float*
  %9010 = load float, float* %9009, align 4
  %9011 = insertelement <4 x float> zeroinitializer, float %9010, i32 0
  %9012 = insertelement <4 x float> %9011, float 0.000000e+00, i32 1
  %9013 = insertelement <4 x float> %9012, float 0.000000e+00, i32 2
  %9014 = insertelement <4 x float> %9013, float 0.000000e+00, i32 3
  %9015 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9016 = getelementptr inbounds i8, i8* %9015, i64 52
  %9017 = bitcast i8* %9016 to float*
  %9018 = load float, float* %9017, align 4
  %9019 = insertelement <4 x float> zeroinitializer, float %9018, i32 0
  %9020 = insertelement <4 x float> %9019, float 0.000000e+00, i32 1
  %9021 = insertelement <4 x float> %9020, float 0.000000e+00, i32 2
  %9022 = insertelement <4 x float> %9021, float 0.000000e+00, i32 3
  %9023 = getelementptr inbounds float, float* %2, i64 4
  %9024 = load float, float* %9023, align 4
  %9025 = insertelement <4 x float> zeroinitializer, float %9024, i32 0
  %9026 = insertelement <4 x float> %9025, float 0.000000e+00, i32 1
  %9027 = insertelement <4 x float> %9026, float 0.000000e+00, i32 2
  %9028 = insertelement <4 x float> %9027, float 0.000000e+00, i32 3
  %9029 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9022, <4 x float> %9028, <4 x float> %9014)
  %9030 = extractelement <4 x float> %9029, i32 0
  %9031 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9032 = getelementptr inbounds i8, i8* %9031, i64 48
  %9033 = bitcast i8* %9032 to float*
  store float %9030, float* %9033, align 4
  %9034 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9035 = getelementptr inbounds i8, i8* %9034, i64 48
  %9036 = bitcast i8* %9035 to float*
  %9037 = load float, float* %9036, align 4
  %9038 = insertelement <4 x float> zeroinitializer, float %9037, i32 0
  %9039 = insertelement <4 x float> %9038, float 0.000000e+00, i32 1
  %9040 = insertelement <4 x float> %9039, float 0.000000e+00, i32 2
  %9041 = insertelement <4 x float> %9040, float 0.000000e+00, i32 3
  %9042 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9043 = getelementptr inbounds i8, i8* %9042, i64 56
  %9044 = bitcast i8* %9043 to float*
  %9045 = load float, float* %9044, align 4
  %9046 = insertelement <4 x float> zeroinitializer, float %9045, i32 0
  %9047 = insertelement <4 x float> %9046, float 0.000000e+00, i32 1
  %9048 = insertelement <4 x float> %9047, float 0.000000e+00, i32 2
  %9049 = insertelement <4 x float> %9048, float 0.000000e+00, i32 3
  %9050 = getelementptr inbounds float, float* %2, i64 8
  %9051 = load float, float* %9050, align 4
  %9052 = insertelement <4 x float> zeroinitializer, float %9051, i32 0
  %9053 = insertelement <4 x float> %9052, float 0.000000e+00, i32 1
  %9054 = insertelement <4 x float> %9053, float 0.000000e+00, i32 2
  %9055 = insertelement <4 x float> %9054, float 0.000000e+00, i32 3
  %9056 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9049, <4 x float> %9055, <4 x float> %9041)
  %9057 = extractelement <4 x float> %9056, i32 0
  %9058 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9059 = getelementptr inbounds i8, i8* %9058, i64 48
  %9060 = bitcast i8* %9059 to float*
  store float %9057, float* %9060, align 4
  %9061 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9062 = getelementptr inbounds i8, i8* %9061, i64 48
  %9063 = bitcast i8* %9062 to float*
  %9064 = load float, float* %9063, align 4
  %9065 = insertelement <4 x float> zeroinitializer, float %9064, i32 0
  %9066 = insertelement <4 x float> %9065, float 0.000000e+00, i32 1
  %9067 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9068 = getelementptr inbounds i8, i8* %9067, i64 52
  %9069 = bitcast i8* %9068 to float*
  %9070 = load float, float* %9069, align 4
  %9071 = insertelement <4 x float> %9066, float %9070, i32 2
  %9072 = insertelement <4 x float> %9071, float 0.000000e+00, i32 3
  %9073 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9074 = getelementptr inbounds i8, i8* %9073, i64 60
  %9075 = bitcast i8* %9074 to float*
  %9076 = load float, float* %9075, align 4
  %9077 = insertelement <4 x float> zeroinitializer, float %9076, i32 0
  %9078 = insertelement <4 x float> %9077, float 0.000000e+00, i32 1
  %9079 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9080 = getelementptr inbounds i8, i8* %9079, i64 48
  %9081 = bitcast i8* %9080 to float*
  %9082 = load float, float* %9081, align 4
  %9083 = insertelement <4 x float> %9078, float %9082, i32 2
  %9084 = insertelement <4 x float> %9083, float 0.000000e+00, i32 3
  %9085 = getelementptr inbounds float, float* %2, i64 12
  %9086 = load float, float* %9085, align 4
  %9087 = insertelement <4 x float> zeroinitializer, float %9086, i32 0
  %9088 = insertelement <4 x float> %9087, float 0.000000e+00, i32 1
  %9089 = getelementptr inbounds float, float* %2, i64 1
  %9090 = load float, float* %9089, align 4
  %9091 = insertelement <4 x float> %9088, float %9090, i32 2
  %9092 = insertelement <4 x float> %9091, float 0.000000e+00, i32 3
  %9093 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9084, <4 x float> %9092, <4 x float> %9072)
  %9094 = extractelement <4 x float> %9093, i32 0
  %9095 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9096 = getelementptr inbounds i8, i8* %9095, i64 48
  %9097 = bitcast i8* %9096 to float*
  store float %9094, float* %9097, align 4
  %9098 = extractelement <4 x float> %9093, i32 1
  %9099 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9100 = getelementptr inbounds i8, i8* %9099, i64 52
  %9101 = bitcast i8* %9100 to float*
  store float %9098, float* %9101, align 4
  %9102 = extractelement <4 x float> %9093, i32 2
  %9103 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9104 = getelementptr inbounds i8, i8* %9103, i64 52
  %9105 = bitcast i8* %9104 to float*
  store float %9102, float* %9105, align 4
  %9106 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9107 = getelementptr inbounds i8, i8* %9106, i64 52
  %9108 = bitcast i8* %9107 to float*
  %9109 = load float, float* %9108, align 4
  %9110 = insertelement <4 x float> zeroinitializer, float %9109, i32 0
  %9111 = insertelement <4 x float> %9110, float 0.000000e+00, i32 1
  %9112 = insertelement <4 x float> %9111, float 0.000000e+00, i32 2
  %9113 = insertelement <4 x float> %9112, float 0.000000e+00, i32 3
  %9114 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9115 = getelementptr inbounds i8, i8* %9114, i64 52
  %9116 = bitcast i8* %9115 to float*
  %9117 = load float, float* %9116, align 4
  %9118 = insertelement <4 x float> zeroinitializer, float %9117, i32 0
  %9119 = insertelement <4 x float> %9118, float 0.000000e+00, i32 1
  %9120 = insertelement <4 x float> %9119, float 0.000000e+00, i32 2
  %9121 = insertelement <4 x float> %9120, float 0.000000e+00, i32 3
  %9122 = getelementptr inbounds float, float* %2, i64 5
  %9123 = load float, float* %9122, align 4
  %9124 = insertelement <4 x float> zeroinitializer, float %9123, i32 0
  %9125 = insertelement <4 x float> %9124, float 0.000000e+00, i32 1
  %9126 = insertelement <4 x float> %9125, float 0.000000e+00, i32 2
  %9127 = insertelement <4 x float> %9126, float 0.000000e+00, i32 3
  %9128 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9121, <4 x float> %9127, <4 x float> %9113)
  %9129 = extractelement <4 x float> %9128, i32 0
  %9130 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9131 = getelementptr inbounds i8, i8* %9130, i64 52
  %9132 = bitcast i8* %9131 to float*
  store float %9129, float* %9132, align 4
  %9133 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9134 = getelementptr inbounds i8, i8* %9133, i64 52
  %9135 = bitcast i8* %9134 to float*
  %9136 = load float, float* %9135, align 4
  %9137 = insertelement <4 x float> zeroinitializer, float %9136, i32 0
  %9138 = insertelement <4 x float> %9137, float 0.000000e+00, i32 1
  %9139 = insertelement <4 x float> %9138, float 0.000000e+00, i32 2
  %9140 = insertelement <4 x float> %9139, float 0.000000e+00, i32 3
  %9141 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9142 = getelementptr inbounds i8, i8* %9141, i64 56
  %9143 = bitcast i8* %9142 to float*
  %9144 = load float, float* %9143, align 4
  %9145 = insertelement <4 x float> zeroinitializer, float %9144, i32 0
  %9146 = insertelement <4 x float> %9145, float 0.000000e+00, i32 1
  %9147 = insertelement <4 x float> %9146, float 0.000000e+00, i32 2
  %9148 = insertelement <4 x float> %9147, float 0.000000e+00, i32 3
  %9149 = getelementptr inbounds float, float* %2, i64 9
  %9150 = load float, float* %9149, align 4
  %9151 = insertelement <4 x float> zeroinitializer, float %9150, i32 0
  %9152 = insertelement <4 x float> %9151, float 0.000000e+00, i32 1
  %9153 = insertelement <4 x float> %9152, float 0.000000e+00, i32 2
  %9154 = insertelement <4 x float> %9153, float 0.000000e+00, i32 3
  %9155 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9148, <4 x float> %9154, <4 x float> %9140)
  %9156 = extractelement <4 x float> %9155, i32 0
  %9157 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9158 = getelementptr inbounds i8, i8* %9157, i64 52
  %9159 = bitcast i8* %9158 to float*
  store float %9156, float* %9159, align 4
  %9160 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9161 = getelementptr inbounds i8, i8* %9160, i64 52
  %9162 = bitcast i8* %9161 to float*
  %9163 = load float, float* %9162, align 4
  %9164 = insertelement <4 x float> zeroinitializer, float %9163, i32 0
  %9165 = insertelement <4 x float> %9164, float 0.000000e+00, i32 1
  %9166 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9167 = getelementptr inbounds i8, i8* %9166, i64 56
  %9168 = bitcast i8* %9167 to float*
  %9169 = load float, float* %9168, align 4
  %9170 = insertelement <4 x float> %9165, float %9169, i32 2
  %9171 = insertelement <4 x float> %9170, float 0.000000e+00, i32 3
  %9172 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9173 = getelementptr inbounds i8, i8* %9172, i64 60
  %9174 = bitcast i8* %9173 to float*
  %9175 = load float, float* %9174, align 4
  %9176 = insertelement <4 x float> zeroinitializer, float %9175, i32 0
  %9177 = insertelement <4 x float> %9176, float 0.000000e+00, i32 1
  %9178 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9179 = getelementptr inbounds i8, i8* %9178, i64 48
  %9180 = bitcast i8* %9179 to float*
  %9181 = load float, float* %9180, align 4
  %9182 = insertelement <4 x float> %9177, float %9181, i32 2
  %9183 = insertelement <4 x float> %9182, float 0.000000e+00, i32 3
  %9184 = getelementptr inbounds float, float* %2, i64 13
  %9185 = load float, float* %9184, align 4
  %9186 = insertelement <4 x float> zeroinitializer, float %9185, i32 0
  %9187 = insertelement <4 x float> %9186, float 0.000000e+00, i32 1
  %9188 = getelementptr inbounds float, float* %2, i64 2
  %9189 = load float, float* %9188, align 4
  %9190 = insertelement <4 x float> %9187, float %9189, i32 2
  %9191 = insertelement <4 x float> %9190, float 0.000000e+00, i32 3
  %9192 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9183, <4 x float> %9191, <4 x float> %9171)
  %9193 = extractelement <4 x float> %9192, i32 0
  %9194 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9195 = getelementptr inbounds i8, i8* %9194, i64 52
  %9196 = bitcast i8* %9195 to float*
  store float %9193, float* %9196, align 4
  %9197 = extractelement <4 x float> %9192, i32 1
  %9198 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9199 = getelementptr inbounds i8, i8* %9198, i64 56
  %9200 = bitcast i8* %9199 to float*
  store float %9197, float* %9200, align 4
  %9201 = extractelement <4 x float> %9192, i32 2
  %9202 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9203 = getelementptr inbounds i8, i8* %9202, i64 56
  %9204 = bitcast i8* %9203 to float*
  store float %9201, float* %9204, align 4
  %9205 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9206 = getelementptr inbounds i8, i8* %9205, i64 56
  %9207 = bitcast i8* %9206 to float*
  %9208 = load float, float* %9207, align 4
  %9209 = insertelement <4 x float> zeroinitializer, float %9208, i32 0
  %9210 = insertelement <4 x float> %9209, float 0.000000e+00, i32 1
  %9211 = insertelement <4 x float> %9210, float 0.000000e+00, i32 2
  %9212 = insertelement <4 x float> %9211, float 0.000000e+00, i32 3
  %9213 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9214 = getelementptr inbounds i8, i8* %9213, i64 52
  %9215 = bitcast i8* %9214 to float*
  %9216 = load float, float* %9215, align 4
  %9217 = insertelement <4 x float> zeroinitializer, float %9216, i32 0
  %9218 = insertelement <4 x float> %9217, float 0.000000e+00, i32 1
  %9219 = insertelement <4 x float> %9218, float 0.000000e+00, i32 2
  %9220 = insertelement <4 x float> %9219, float 0.000000e+00, i32 3
  %9221 = getelementptr inbounds float, float* %2, i64 6
  %9222 = load float, float* %9221, align 4
  %9223 = insertelement <4 x float> zeroinitializer, float %9222, i32 0
  %9224 = insertelement <4 x float> %9223, float 0.000000e+00, i32 1
  %9225 = insertelement <4 x float> %9224, float 0.000000e+00, i32 2
  %9226 = insertelement <4 x float> %9225, float 0.000000e+00, i32 3
  %9227 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9220, <4 x float> %9226, <4 x float> %9212)
  %9228 = extractelement <4 x float> %9227, i32 0
  %9229 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9230 = getelementptr inbounds i8, i8* %9229, i64 56
  %9231 = bitcast i8* %9230 to float*
  store float %9228, float* %9231, align 4
  %9232 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9233 = getelementptr inbounds i8, i8* %9232, i64 56
  %9234 = bitcast i8* %9233 to float*
  %9235 = load float, float* %9234, align 4
  %9236 = insertelement <4 x float> zeroinitializer, float %9235, i32 0
  %9237 = insertelement <4 x float> %9236, float 0.000000e+00, i32 1
  %9238 = insertelement <4 x float> %9237, float 0.000000e+00, i32 2
  %9239 = insertelement <4 x float> %9238, float 0.000000e+00, i32 3
  %9240 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9241 = getelementptr inbounds i8, i8* %9240, i64 56
  %9242 = bitcast i8* %9241 to float*
  %9243 = load float, float* %9242, align 4
  %9244 = insertelement <4 x float> zeroinitializer, float %9243, i32 0
  %9245 = insertelement <4 x float> %9244, float 0.000000e+00, i32 1
  %9246 = insertelement <4 x float> %9245, float 0.000000e+00, i32 2
  %9247 = insertelement <4 x float> %9246, float 0.000000e+00, i32 3
  %9248 = getelementptr inbounds float, float* %2, i64 10
  %9249 = load float, float* %9248, align 4
  %9250 = insertelement <4 x float> zeroinitializer, float %9249, i32 0
  %9251 = insertelement <4 x float> %9250, float 0.000000e+00, i32 1
  %9252 = insertelement <4 x float> %9251, float 0.000000e+00, i32 2
  %9253 = insertelement <4 x float> %9252, float 0.000000e+00, i32 3
  %9254 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9247, <4 x float> %9253, <4 x float> %9239)
  %9255 = extractelement <4 x float> %9254, i32 0
  %9256 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9257 = getelementptr inbounds i8, i8* %9256, i64 56
  %9258 = bitcast i8* %9257 to float*
  store float %9255, float* %9258, align 4
  %9259 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9260 = getelementptr inbounds i8, i8* %9259, i64 56
  %9261 = bitcast i8* %9260 to float*
  %9262 = load float, float* %9261, align 4
  %9263 = insertelement <4 x float> zeroinitializer, float %9262, i32 0
  %9264 = insertelement <4 x float> %9263, float 0.000000e+00, i32 1
  %9265 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9266 = getelementptr inbounds i8, i8* %9265, i64 60
  %9267 = bitcast i8* %9266 to float*
  %9268 = load float, float* %9267, align 4
  %9269 = insertelement <4 x float> %9264, float %9268, i32 2
  %9270 = insertelement <4 x float> %9269, float 0.000000e+00, i32 3
  %9271 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9272 = getelementptr inbounds i8, i8* %9271, i64 60
  %9273 = bitcast i8* %9272 to float*
  %9274 = load float, float* %9273, align 4
  %9275 = insertelement <4 x float> zeroinitializer, float %9274, i32 0
  %9276 = insertelement <4 x float> %9275, float 0.000000e+00, i32 1
  %9277 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9278 = getelementptr inbounds i8, i8* %9277, i64 48
  %9279 = bitcast i8* %9278 to float*
  %9280 = load float, float* %9279, align 4
  %9281 = insertelement <4 x float> %9276, float %9280, i32 2
  %9282 = insertelement <4 x float> %9281, float 0.000000e+00, i32 3
  %9283 = getelementptr inbounds float, float* %2, i64 14
  %9284 = load float, float* %9283, align 4
  %9285 = insertelement <4 x float> zeroinitializer, float %9284, i32 0
  %9286 = insertelement <4 x float> %9285, float 0.000000e+00, i32 1
  %9287 = getelementptr inbounds float, float* %2, i64 3
  %9288 = load float, float* %9287, align 4
  %9289 = insertelement <4 x float> %9286, float %9288, i32 2
  %9290 = insertelement <4 x float> %9289, float 0.000000e+00, i32 3
  %9291 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9282, <4 x float> %9290, <4 x float> %9270)
  %9292 = extractelement <4 x float> %9291, i32 0
  %9293 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9294 = getelementptr inbounds i8, i8* %9293, i64 56
  %9295 = bitcast i8* %9294 to float*
  store float %9292, float* %9295, align 4
  %9296 = extractelement <4 x float> %9291, i32 1
  %9297 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9298 = getelementptr inbounds i8, i8* %9297, i64 60
  %9299 = bitcast i8* %9298 to float*
  store float %9296, float* %9299, align 4
  %9300 = extractelement <4 x float> %9291, i32 2
  %9301 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9302 = getelementptr inbounds i8, i8* %9301, i64 60
  %9303 = bitcast i8* %9302 to float*
  store float %9300, float* %9303, align 4
  %9304 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9305 = getelementptr inbounds i8, i8* %9304, i64 60
  %9306 = bitcast i8* %9305 to float*
  %9307 = load float, float* %9306, align 4
  %9308 = insertelement <4 x float> zeroinitializer, float %9307, i32 0
  %9309 = insertelement <4 x float> %9308, float 0.000000e+00, i32 1
  %9310 = insertelement <4 x float> %9309, float 0.000000e+00, i32 2
  %9311 = insertelement <4 x float> %9310, float 0.000000e+00, i32 3
  %9312 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9313 = getelementptr inbounds i8, i8* %9312, i64 52
  %9314 = bitcast i8* %9313 to float*
  %9315 = load float, float* %9314, align 4
  %9316 = insertelement <4 x float> zeroinitializer, float %9315, i32 0
  %9317 = insertelement <4 x float> %9316, float 0.000000e+00, i32 1
  %9318 = insertelement <4 x float> %9317, float 0.000000e+00, i32 2
  %9319 = insertelement <4 x float> %9318, float 0.000000e+00, i32 3
  %9320 = getelementptr inbounds float, float* %2, i64 7
  %9321 = load float, float* %9320, align 4
  %9322 = insertelement <4 x float> zeroinitializer, float %9321, i32 0
  %9323 = insertelement <4 x float> %9322, float 0.000000e+00, i32 1
  %9324 = insertelement <4 x float> %9323, float 0.000000e+00, i32 2
  %9325 = insertelement <4 x float> %9324, float 0.000000e+00, i32 3
  %9326 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9319, <4 x float> %9325, <4 x float> %9311)
  %9327 = extractelement <4 x float> %9326, i32 0
  %9328 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9329 = getelementptr inbounds i8, i8* %9328, i64 60
  %9330 = bitcast i8* %9329 to float*
  store float %9327, float* %9330, align 4
  %9331 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9332 = getelementptr inbounds i8, i8* %9331, i64 60
  %9333 = bitcast i8* %9332 to float*
  %9334 = load float, float* %9333, align 4
  %9335 = insertelement <4 x float> zeroinitializer, float %9334, i32 0
  %9336 = insertelement <4 x float> %9335, float 0.000000e+00, i32 1
  %9337 = insertelement <4 x float> %9336, float 0.000000e+00, i32 2
  %9338 = insertelement <4 x float> %9337, float 0.000000e+00, i32 3
  %9339 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9340 = getelementptr inbounds i8, i8* %9339, i64 56
  %9341 = bitcast i8* %9340 to float*
  %9342 = load float, float* %9341, align 4
  %9343 = insertelement <4 x float> zeroinitializer, float %9342, i32 0
  %9344 = insertelement <4 x float> %9343, float 0.000000e+00, i32 1
  %9345 = insertelement <4 x float> %9344, float 0.000000e+00, i32 2
  %9346 = insertelement <4 x float> %9345, float 0.000000e+00, i32 3
  %9347 = getelementptr inbounds float, float* %2, i64 11
  %9348 = load float, float* %9347, align 4
  %9349 = insertelement <4 x float> zeroinitializer, float %9348, i32 0
  %9350 = insertelement <4 x float> %9349, float 0.000000e+00, i32 1
  %9351 = insertelement <4 x float> %9350, float 0.000000e+00, i32 2
  %9352 = insertelement <4 x float> %9351, float 0.000000e+00, i32 3
  %9353 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9346, <4 x float> %9352, <4 x float> %9338)
  %9354 = extractelement <4 x float> %9353, i32 0
  %9355 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9356 = getelementptr inbounds i8, i8* %9355, i64 60
  %9357 = bitcast i8* %9356 to float*
  store float %9354, float* %9357, align 4
  %9358 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9359 = getelementptr inbounds i8, i8* %9358, i64 60
  %9360 = bitcast i8* %9359 to float*
  %9361 = load float, float* %9360, align 4
  %9362 = insertelement <4 x float> zeroinitializer, float %9361, i32 0
  %9363 = insertelement <4 x float> %9362, float 0.000000e+00, i32 1
  %9364 = insertelement <4 x float> %9363, float 0.000000e+00, i32 2
  %9365 = insertelement <4 x float> %9364, float 0.000000e+00, i32 3
  %9366 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9367 = getelementptr inbounds i8, i8* %9366, i64 60
  %9368 = bitcast i8* %9367 to float*
  %9369 = load float, float* %9368, align 4
  %9370 = insertelement <4 x float> zeroinitializer, float %9369, i32 0
  %9371 = insertelement <4 x float> %9370, float 1.000000e+00, i32 1
  %9372 = insertelement <4 x float> %9371, float 1.000000e+00, i32 2
  %9373 = insertelement <4 x float> %9372, float 1.000000e+00, i32 3
  %9374 = getelementptr inbounds float, float* %2, i64 15
  %9375 = load float, float* %9374, align 4
  %9376 = insertelement <4 x float> zeroinitializer, float %9375, i32 0
  %9377 = getelementptr inbounds float, float* %1, i64 4
  %9378 = bitcast float* %9377 to i32*
  %9379 = load i32, i32* %9378, align 4
  %9380 = sitofp i32 %9379 to float
  %9381 = insertelement <4 x float> %9376, float %9380, i32 1
  %9382 = getelementptr inbounds float, float* %1, i64 1
  %9383 = bitcast float* %9382 to i32*
  %9384 = load i32, i32* %9383, align 4
  %9385 = sitofp i32 %9384 to float
  %9386 = insertelement <4 x float> %9381, float %9385, i32 2
  %9387 = insertelement <4 x float> %9386, float 0.000000e+00, i32 3
  %9388 = call <4 x float> @llvm.fma.v4f32(<4 x float> %9373, <4 x float> %9387, <4 x float> %9365)
  %9389 = extractelement <4 x float> %9388, i32 0
  %9390 = call dereferenceable_or_null(64) i8* @calloc(i64 4, i64 16) #9
  %9391 = getelementptr inbounds i8, i8* %9390, i64 60
  %9392 = bitcast i8* %9391 to float*
  store float %9389, float* %9392, align 4
  %9393 = extractelement <4 x float> %9388, i32 1
  %9394 = fptosi float %9393 to i32
  %9395 = getelementptr inbounds float, float* %1, i64 1
  %9396 = bitcast float* %9395 to i32*
  store i32 %9394, i32* %9396, align 4
  %9397 = extractelement <4 x float> %9388, i32 2
  %9398 = fptosi float %9397 to i32
  %9399 = getelementptr inbounds float, float* %1, i64 4
  %9400 = bitcast float* %9399 to i32*
  store i32 %9398, i32* %9400, align 4
  br label %9401

9401:                                             ; preds = %9401, %.preheader33
  %indvars.iv3437 = phi i64 [ 2, %.preheader33 ], [ %indvars.iv.next35.1, %9401 ]
  %9402 = getelementptr inbounds float, float* %1, i64 %indvars.iv3437
  %9403 = bitcast float* %9402 to i32*
  %9404 = load i32, i32* %9403, align 4
  %9405 = shl nuw nsw i64 %indvars.iv3437, 2
  %9406 = getelementptr inbounds float, float* %1, i64 %9405
  %9407 = bitcast float* %9406 to i32*
  %9408 = load i32, i32* %9407, align 4
  %9409 = getelementptr inbounds float, float* %1, i64 %indvars.iv3437
  %9410 = bitcast float* %9409 to i32*
  store i32 %9408, i32* %9410, align 4
  %9411 = shl nuw nsw i64 %indvars.iv3437, 2
  %9412 = getelementptr inbounds float, float* %1, i64 %9411
  %9413 = bitcast float* %9412 to i32*
  store i32 %9404, i32* %9413, align 4
  %indvars.iv.next35 = or i64 %indvars.iv3437, 1
  %9414 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next35
  %9415 = bitcast float* %9414 to i32*
  %9416 = load i32, i32* %9415, align 4
  %9417 = shl nuw nsw i64 %indvars.iv.next35, 2
  %9418 = getelementptr inbounds float, float* %1, i64 %9417
  %9419 = bitcast float* %9418 to i32*
  %9420 = load i32, i32* %9419, align 4
  %9421 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next35
  %9422 = bitcast float* %9421 to i32*
  store i32 %9420, i32* %9422, align 4
  %9423 = shl nuw nsw i64 %indvars.iv.next35, 2
  %9424 = getelementptr inbounds float, float* %1, i64 %9423
  %9425 = bitcast float* %9424 to i32*
  store i32 %9416, i32* %9425, align 4
  %indvars.iv.next35.1 = add nuw nsw i64 %indvars.iv3437, 2
  %exitcond.1.not = icmp eq i64 %indvars.iv.next35.1, 4
  br i1 %exitcond.1.not, label %.lr.ph.new.1, label %9401

.lr.ph.new.1:                                     ; preds = %.lr.ph.new.1, %9401
  %indvars.iv3437.1 = phi i64 [ %indvars.iv.next35.1.1, %.lr.ph.new.1 ], [ 2, %9401 ]
  %9426 = add nuw nsw i64 %indvars.iv3437.1, 4
  %9427 = getelementptr inbounds float, float* %1, i64 %9426
  %9428 = bitcast float* %9427 to i32*
  %9429 = load i32, i32* %9428, align 4
  %9430 = shl nuw nsw i64 %indvars.iv3437.1, 2
  %9431 = or i64 %9430, 1
  %9432 = getelementptr inbounds float, float* %1, i64 %9431
  %9433 = bitcast float* %9432 to i32*
  %9434 = load i32, i32* %9433, align 4
  %9435 = add nuw nsw i64 %indvars.iv3437.1, 4
  %9436 = getelementptr inbounds float, float* %1, i64 %9435
  %9437 = bitcast float* %9436 to i32*
  store i32 %9434, i32* %9437, align 4
  %9438 = shl nuw nsw i64 %indvars.iv3437.1, 2
  %9439 = or i64 %9438, 1
  %9440 = getelementptr inbounds float, float* %1, i64 %9439
  %9441 = bitcast float* %9440 to i32*
  store i32 %9429, i32* %9441, align 4
  %indvars.iv.next35.1149 = or i64 %indvars.iv3437.1, 1
  %9442 = add nuw nsw i64 %indvars.iv3437.1, 5
  %9443 = getelementptr inbounds float, float* %1, i64 %9442
  %9444 = bitcast float* %9443 to i32*
  %9445 = load i32, i32* %9444, align 4
  %9446 = shl nuw nsw i64 %indvars.iv.next35.1149, 2
  %9447 = or i64 %9446, 1
  %9448 = getelementptr inbounds float, float* %1, i64 %9447
  %9449 = bitcast float* %9448 to i32*
  %9450 = load i32, i32* %9449, align 4
  %9451 = add nuw nsw i64 %indvars.iv3437.1, 5
  %9452 = getelementptr inbounds float, float* %1, i64 %9451
  %9453 = bitcast float* %9452 to i32*
  store i32 %9450, i32* %9453, align 4
  %9454 = shl nuw nsw i64 %indvars.iv.next35.1149, 2
  %9455 = or i64 %9454, 1
  %9456 = getelementptr inbounds float, float* %1, i64 %9455
  %9457 = bitcast float* %9456 to i32*
  store i32 %9445, i32* %9457, align 4
  %indvars.iv.next35.1.1 = add nuw nsw i64 %indvars.iv3437.1, 2
  %exitcond.1.1.not = icmp eq i64 %indvars.iv.next35.1.1, 4
  br i1 %exitcond.1.1.not, label %.prol.preheader.2, label %.lr.ph.new.1

.prol.preheader.2:                                ; preds = %.lr.ph.new.1
  %9458 = getelementptr inbounds float, float* %1, i64 11
  %9459 = bitcast float* %9458 to i32*
  %9460 = load i32, i32* %9459, align 4
  %9461 = getelementptr inbounds float, float* %1, i64 14
  %9462 = bitcast float* %9461 to i32*
  %9463 = load i32, i32* %9462, align 4
  %9464 = getelementptr inbounds float, float* %1, i64 11
  %9465 = bitcast float* %9464 to i32*
  store i32 %9463, i32* %9465, align 4
  %9466 = getelementptr inbounds float, float* %1, i64 14
  %9467 = bitcast float* %9466 to i32*
  store i32 %9460, i32* %9467, align 4
  ret void
}

; Function Attrs: nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #1

; Function Attrs: allocsize(0,1)
declare i8* @calloc(i64, i64) #4

declare void @free(i8*) #5

; Function Attrs: noinline nounwind ssp uwtable
define i32 @main() #2 {
.preheader:
  %0 = alloca [16 x float], align 16
  %1 = alloca [16 x float], align 16
  %2 = alloca [16 x float], align 16
  %3 = bitcast [16 x float]* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(64) %3, i8* nonnull align 16 dereferenceable(64) bitcast ([16 x float]* @__const.main.A to i8*), i64 64, i1 false)
  %4 = bitcast [16 x float]* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(64) %4, i8 0, i64 64, i1 false)
  %5 = bitcast [16 x float]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(64) %5, i8 0, i64 64, i1 false)
  %6 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 0
  %7 = getelementptr inbounds [16 x float], [16 x float]* %1, i64 0, i64 0
  %8 = getelementptr inbounds [16 x float], [16 x float]* %2, i64 0, i64 0
  call void @naive_fixed_qr_decomp(float* nonnull %6, float* nonnull %7, float* nonnull %8)
  %9 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 0
  %10 = load float, float* %9, align 16
  %11 = fpext float %10 to double
  %12 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %11) #8
  %13 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 1
  %14 = load float, float* %13, align 4
  %15 = fpext float %14 to double
  %16 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %15) #8
  %17 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 2
  %18 = load float, float* %17, align 8
  %19 = fpext float %18 to double
  %20 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %19) #8
  %21 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 3
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  %24 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %23) #8
  %25 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 4
  %26 = load float, float* %25, align 16
  %27 = fpext float %26 to double
  %28 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %27) #8
  %29 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 5
  %30 = load float, float* %29, align 4
  %31 = fpext float %30 to double
  %32 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %31) #8
  %33 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 6
  %34 = load float, float* %33, align 8
  %35 = fpext float %34 to double
  %36 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %35) #8
  %37 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 7
  %38 = load float, float* %37, align 4
  %39 = fpext float %38 to double
  %40 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %39) #8
  %41 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 8
  %42 = load float, float* %41, align 16
  %43 = fpext float %42 to double
  %44 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %43) #8
  %45 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 9
  %46 = load float, float* %45, align 4
  %47 = fpext float %46 to double
  %48 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %47) #8
  %49 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 10
  %50 = load float, float* %49, align 8
  %51 = fpext float %50 to double
  %52 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %51) #8
  %53 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 11
  %54 = load float, float* %53, align 4
  %55 = fpext float %54 to double
  %56 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %55) #8
  %57 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 12
  %58 = load float, float* %57, align 16
  %59 = fpext float %58 to double
  %60 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %59) #8
  %61 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 13
  %62 = load float, float* %61, align 4
  %63 = fpext float %62 to double
  %64 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %63) #8
  %65 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 14
  %66 = load float, float* %65, align 8
  %67 = fpext float %66 to double
  %68 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %67) #8
  %69 = getelementptr inbounds [16 x float], [16 x float]* %0, i64 0, i64 15
  %70 = load float, float* %69, align 4
  %71 = fpext float %70 to double
  %72 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), double %71) #8
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare i32 @printf(i8*, ...) #5

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32(float) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare <4 x float> @llvm.fma.v4f32(<4 x float>, <4 x float>, <4 x float>) #1

attributes #0 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { argmemonly nounwind willreturn writeonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 11.0.1"}
