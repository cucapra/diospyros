(prog
 (list
  (vec-extern-decl 'A 2 'extern-input)
  (vec-extern-decl 'B 2 'extern-input)
  (vec-extern-decl 'C 2 'extern-output)
  (vec-decl 'reg-C 4)
  (vec-load 'C_0_2 'C 0 2)
  (vec-const 'shuf0-0 '#(2 2 2 2) 'int)
  (vec-const 'shuf1-0 '#(2 2 2 2) 'int)
  (vec-shuffle 'reg-A 'shuf0-0 '(A))
  (vec-shuffle 'reg-B 'shuf1-0 '(B))
  (vec-write 'reg-C 'C_0_2)
  (vec-app 'mul-result 'vec-mul '(reg-A reg-B))
  (vec-app 'out 'vec-sum '(mul-result))
  (vec-write 'C_0_2 'out)
  (vec-const 'shuf0-1 '#(2 2 2 2) 'int)
  (vec-const 'shuf1-1 '#(2 2 2 2) 'int)
  (vec-shuffle 'reg-A 'shuf0-1 '(A))
  (vec-shuffle 'reg-B 'shuf1-1 '(B))
  (vec-write 'reg-C 'C_0_2)
  (vec-app 'mul-result 'vec-mul '(reg-A reg-B))
  (vec-app 'out 'vec-sum '(mul-result))
  (vec-write 'C_0_2 'out)
  (vec-store 'C 'C_0_2 0 2)))
